#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_ee)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_ee) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB EE 0000
        gbc.setState(0x9b07, 0xd713, 0xd7d0, 0xa7cc, 0x8e66, 0x137a, 0x1, 0x1);
        gbc.writeMem(0x137a, { 0x7e });
        gbc.writeMem(0x9b07, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xd713);
        EXPECT(gbc.pc(), 0x9b09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b07), 0xcb);
        EXPECT(gbc.readMem(0x9b08), 0xee);
        // CB EE 0002
        gbc.setState(0x3e6f, 0x1b61, 0xe4a0, 0xcbd3, 0x1a8f, 0xcb26, 0x1, 0x0);
        gbc.writeMem(0x3e6f, { 0xcb, 0xee });
        gbc.writeMem(0xcb26, { 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x1b61);
        EXPECT(gbc.pc(), 0x3e71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb26), 0xac);
        // CB EE 000B
        gbc.setState(0x6170, 0x1ad6, 0x91d0, 0xe351, 0xc309, 0x72f4, 0x0, 0x0);
        gbc.writeMem(0x6170, { 0xcb, 0xee });
        gbc.writeMem(0x72f4, { 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x1ad6);
        EXPECT(gbc.pc(), 0x6172);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EE 000C
        gbc.setState(0xe31d, 0x6cf4, 0xeea0, 0xf2d6, 0xf5e0, 0x67bc, 0x0, 0x0);
        gbc.writeMem(0x67bc, { 0x7f });
        gbc.writeMem(0xe31d, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x6cf4);
        EXPECT(gbc.pc(), 0xe31f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe31d), 0xcb);
        EXPECT(gbc.readMem(0xe31e), 0xee);
        // CB EE 000F
        gbc.setState(0xbcc8, 0xde56, 0xdb70, 0xb0f5, 0x2720, 0xcaf9, 0x1, 0x0);
        gbc.writeMem(0xbcc8, { 0xcb, 0xee });
        gbc.writeMem(0xcaf9, { 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xde56);
        EXPECT(gbc.pc(), 0xbcca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcc8), 0xcb);
        EXPECT(gbc.readMem(0xbcc9), 0xee);
        EXPECT(gbc.readMem(0xcaf9), 0xbf);
        // CB EE 0010
        gbc.setState(0x3c40, 0xd951, 0x4620, 0xd117, 0x5a65, 0x938e, 0x0, 0x0);
        gbc.writeMem(0x3c40, { 0xcb, 0xee });
        gbc.writeMem(0x938e, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xd951);
        EXPECT(gbc.pc(), 0x3c42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x938e), 0x79);
        // CB EE 0011
        gbc.setState(0x31b8, 0xc86, 0x7a90, 0xcdad, 0xb62a, 0xeb71, 0x0, 0x0);
        gbc.writeMem(0x31b8, { 0xcb, 0xee });
        gbc.writeMem(0xeb71, { 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xc86);
        EXPECT(gbc.pc(), 0x31ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb71), 0x6c);
        // CB EE 0012
        gbc.setState(0x9c72, 0xe964, 0xa20, 0x5118, 0x7214, 0x4b2c, 0x1, 0x1);
        gbc.writeMem(0x4b2c, { 0xfd });
        gbc.writeMem(0x9c72, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xe964);
        EXPECT(gbc.pc(), 0x9c74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c72), 0xcb);
        EXPECT(gbc.readMem(0x9c73), 0xee);
        // CB EE 0014
        gbc.setState(0x2445, 0xbe76, 0x4160, 0xac36, 0x9eef, 0xe9c2, 0x0, 0x0);
        gbc.writeMem(0x2445, { 0xcb, 0xee });
        gbc.writeMem(0xe9c2, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xbe76);
        EXPECT(gbc.pc(), 0x2447);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9c2), 0xe0);
        // CB EE 0015
        gbc.setState(0x7b02, 0xe08f, 0x91c0, 0x7d54, 0xe6cc, 0xb1b0, 0x1, 0x0);
        gbc.writeMem(0x7b02, { 0xcb, 0xee });
        gbc.writeMem(0xb1b0, { 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xe08f);
        EXPECT(gbc.pc(), 0x7b04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1b0), 0xe7);
        // CB EE 0016
        gbc.setState(0xaaa3, 0x9267, 0xc390, 0x74ea, 0xeac1, 0x973e, 0x1, 0x1);
        gbc.writeMem(0x973e, { 0xe0 });
        gbc.writeMem(0xaaa3, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x9267);
        EXPECT(gbc.pc(), 0xaaa5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x973e), 0xe0);
        EXPECT(gbc.readMem(0xaaa3), 0xcb);
        EXPECT(gbc.readMem(0xaaa4), 0xee);
        // CB EE 0017
        gbc.setState(0xd04f, 0xc804, 0xe3c0, 0x7d9b, 0xef05, 0x310, 0x0, 0x1);
        gbc.writeMem(0x310, { 0xb2 });
        gbc.writeMem(0xd04f, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xc804);
        EXPECT(gbc.pc(), 0xd051);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd04f), 0xcb);
        EXPECT(gbc.readMem(0xd050), 0xee);
        // CB EE 0019
        gbc.setState(0x2e78, 0xf552, 0x3300, 0xf63c, 0x15b, 0x1a71, 0x0, 0x1);
        gbc.writeMem(0x1a71, { 0x6d });
        gbc.writeMem(0x2e78, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xf552);
        EXPECT(gbc.pc(), 0x2e7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EE 001A
        gbc.setState(0x1d3, 0xffd3, 0xb20, 0xc7bc, 0xa38a, 0x7386, 0x0, 0x1);
        gbc.writeMem(0x1d3, { 0xcb, 0xee });
        gbc.writeMem(0x7386, { 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xffd3);
        EXPECT(gbc.pc(), 0x1d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EE 001B
        gbc.setState(0x4906, 0x6c8c, 0x6ed0, 0xf4c3, 0x60b0, 0xe123, 0x0, 0x0);
        gbc.writeMem(0x4906, { 0xcb, 0xee });
        gbc.writeMem(0xe123, { 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x6c8c);
        EXPECT(gbc.pc(), 0x4908);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe123), 0xe9);
        // CB EE 001C
        gbc.setState(0x1c66, 0x277b, 0x28a0, 0x7a23, 0xe23b, 0xe41e, 0x1, 0x0);
        gbc.writeMem(0x1c66, { 0xcb, 0xee });
        gbc.writeMem(0xe41e, { 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x277b);
        EXPECT(gbc.pc(), 0x1c68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe41e), 0xbf);
        // CB EE 001E
        gbc.setState(0x4a84, 0x2853, 0x13b0, 0x2ea2, 0x7878, 0xa46c, 0x0, 0x0);
        gbc.writeMem(0x4a84, { 0xcb, 0xee });
        gbc.writeMem(0xa46c, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x2853);
        EXPECT(gbc.pc(), 0x4a86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa46c), 0xae);
        // CB EE 0022
        gbc.setState(0xa80f, 0xe272, 0x1f10, 0x83b4, 0x486a, 0x5023, 0x1, 0x1);
        gbc.writeMem(0x5023, { 0xf4 });
        gbc.writeMem(0xa80f, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xe272);
        EXPECT(gbc.pc(), 0xa811);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa80f), 0xcb);
        EXPECT(gbc.readMem(0xa810), 0xee);
        // CB EE 0025
        gbc.setState(0x5ab6, 0x136d, 0x3fd0, 0x730a, 0x5da0, 0xafa9, 0x1, 0x0);
        gbc.writeMem(0x5ab6, { 0xcb, 0xee });
        gbc.writeMem(0xafa9, { 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x136d);
        EXPECT(gbc.pc(), 0x5ab8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafa9), 0xf9);
        // CB EE 0026
        gbc.setState(0xd2cb, 0x3435, 0x4d80, 0xe8c7, 0xda15, 0x20c9, 0x1, 0x0);
        gbc.writeMem(0x20c9, { 0x3e });
        gbc.writeMem(0xd2cb, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x3435);
        EXPECT(gbc.pc(), 0xd2cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2cb), 0xcb);
        EXPECT(gbc.readMem(0xd2cc), 0xee);
        // CB EE 0027
        gbc.setState(0x1f8e, 0xb516, 0x8330, 0x8e5, 0xf61, 0x25e0, 0x1, 0x0);
        gbc.writeMem(0x1f8e, { 0xcb, 0xee });
        gbc.writeMem(0x25e0, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xb516);
        EXPECT(gbc.pc(), 0x1f90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EE 002B
        gbc.setState(0x9305, 0xa5a9, 0x7f10, 0x5192, 0x6dde, 0x793, 0x0, 0x0);
        gbc.writeMem(0x793, { 0x70 });
        gbc.writeMem(0x9305, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xa5a9);
        EXPECT(gbc.pc(), 0x9307);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9305), 0xcb);
        EXPECT(gbc.readMem(0x9306), 0xee);
        // CB EE 002C
        gbc.setState(0xb47b, 0xdee, 0x8c30, 0x4a11, 0xf127, 0x73c9, 0x1, 0x1);
        gbc.writeMem(0x73c9, { 0xa6 });
        gbc.writeMem(0xb47b, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xdee);
        EXPECT(gbc.pc(), 0xb47d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb47b), 0xcb);
        EXPECT(gbc.readMem(0xb47c), 0xee);
        // CB EE 002D
        gbc.setState(0x47ff, 0xfb3e, 0x8960, 0x54c7, 0x18a3, 0xa7a6, 0x0, 0x1);
        gbc.writeMem(0x47ff, { 0xcb, 0xee });
        gbc.writeMem(0xa7a6, { 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xfb3e);
        EXPECT(gbc.pc(), 0x4801);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7a6), 0x6c);
        // CB EE 002E
        gbc.setState(0x19b8, 0x5d30, 0xa640, 0x201f, 0x3f7b, 0x881f, 0x1, 0x0);
        gbc.writeMem(0x19b8, { 0xcb, 0xee });
        gbc.writeMem(0x881f, { 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x5d30);
        EXPECT(gbc.pc(), 0x19ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x881f), 0xff);
        // CB EE 002F
        gbc.setState(0x63fc, 0xa6cf, 0xc420, 0x1054, 0xc2b0, 0xc7b6, 0x1, 0x0);
        gbc.writeMem(0x63fc, { 0xcb, 0xee });
        gbc.writeMem(0xc7b6, { 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xa6cf);
        EXPECT(gbc.pc(), 0x63fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7b6), 0xbc);
        // CB EE 0030
        gbc.setState(0x2b8b, 0x11c0, 0x4c10, 0x250, 0x8ca5, 0xabb1, 0x0, 0x1);
        gbc.writeMem(0x2b8b, { 0xcb, 0xee });
        gbc.writeMem(0xabb1, { 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x11c0);
        EXPECT(gbc.pc(), 0x2b8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabb1), 0x2d);
        // CB EE 0031
        gbc.setState(0x5b15, 0x58cf, 0xfd60, 0x9240, 0x64d2, 0x346f, 0x1, 0x0);
        gbc.writeMem(0x346f, { 0x66 });
        gbc.writeMem(0x5b15, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x58cf);
        EXPECT(gbc.pc(), 0x5b17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EE 0032
        gbc.setState(0x13eb, 0x38b4, 0x4fd0, 0xea37, 0x94cb, 0x740c, 0x1, 0x0);
        gbc.writeMem(0x13eb, { 0xcb, 0xee });
        gbc.writeMem(0x740c, { 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x38b4);
        EXPECT(gbc.pc(), 0x13ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EE 0033
        gbc.setState(0xccd3, 0xc55b, 0x1fd0, 0xd46d, 0x3097, 0xc1e3, 0x0, 0x0);
        gbc.writeMem(0xc1e3, { 0x89 });
        gbc.writeMem(0xccd3, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xc55b);
        EXPECT(gbc.pc(), 0xccd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1e3), 0xa9);
        EXPECT(gbc.readMem(0xccd3), 0xcb);
        EXPECT(gbc.readMem(0xccd4), 0xee);
        // CB EE 0035
        gbc.setState(0x6747, 0x2648, 0x2f60, 0x5122, 0xfc29, 0xa77a, 0x0, 0x0);
        gbc.writeMem(0x6747, { 0xcb, 0xee });
        gbc.writeMem(0xa77a, { 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x2648);
        EXPECT(gbc.pc(), 0x6749);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa77a), 0xa1);
        // CB EE 0036
        gbc.setState(0x6426, 0xf0c5, 0x62b0, 0x59ce, 0x2941, 0xa43e, 0x0, 0x0);
        gbc.writeMem(0x6426, { 0xcb, 0xee });
        gbc.writeMem(0xa43e, { 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xf0c5);
        EXPECT(gbc.pc(), 0x6428);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa43e), 0xa4);
        // CB EE 0037
        gbc.setState(0xc77, 0xcf75, 0xcf60, 0x2765, 0x6759, 0x871f, 0x1, 0x1);
        gbc.writeMem(0xc77, { 0xcb, 0xee });
        gbc.writeMem(0x871f, { 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xcf75);
        EXPECT(gbc.pc(), 0xc79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x871f), 0xa1);
        // CB EE 0039
        gbc.setState(0xc794, 0x7953, 0xb9d0, 0xc275, 0x5ace, 0xd7b7, 0x1, 0x1);
        gbc.writeMem(0xc794, { 0xcb, 0xee });
        gbc.writeMem(0xd7b7, { 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x7953);
        EXPECT(gbc.pc(), 0xc796);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc794), 0xcb);
        EXPECT(gbc.readMem(0xc795), 0xee);
        EXPECT(gbc.readMem(0xd7b7), 0x2b);
        // CB EE 003A
        gbc.setState(0x4b90, 0x65ef, 0x820, 0xb1c1, 0x3e11, 0x368c, 0x0, 0x1);
        gbc.writeMem(0x368c, { 0x61 });
        gbc.writeMem(0x4b90, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x65ef);
        EXPECT(gbc.pc(), 0x4b92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EE 003B
        gbc.setState(0xb69d, 0x86d3, 0x75a0, 0xa2a4, 0x4b40, 0x817c, 0x0, 0x0);
        gbc.writeMem(0x817c, { 0x50 });
        gbc.writeMem(0xb69d, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x86d3);
        EXPECT(gbc.pc(), 0xb69f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x817c), 0x70);
        EXPECT(gbc.readMem(0xb69d), 0xcb);
        EXPECT(gbc.readMem(0xb69e), 0xee);
        // CB EE 003E
        gbc.setState(0x9291, 0x7145, 0x5150, 0x6faa, 0x9b70, 0xe4e0, 0x0, 0x1);
        gbc.writeMem(0x9291, { 0xcb, 0xee });
        gbc.writeMem(0xe4e0, { 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x7145);
        EXPECT(gbc.pc(), 0x9293);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9291), 0xcb);
        EXPECT(gbc.readMem(0x9292), 0xee);
        EXPECT(gbc.readMem(0xe4e0), 0xf8);
        // CB EE 003F
        gbc.setState(0xb162, 0x3869, 0xd360, 0x2d2c, 0x1b6e, 0x163c, 0x0, 0x0);
        gbc.writeMem(0x163c, { 0x72 });
        gbc.writeMem(0xb162, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x3869);
        EXPECT(gbc.pc(), 0xb164);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb162), 0xcb);
        EXPECT(gbc.readMem(0xb163), 0xee);
        // CB EE 0040
        gbc.setState(0x6f2, 0x9efe, 0x9790, 0xd854, 0xc116, 0xff0c, 0x1, 0x0);
        gbc.writeMem(0x6f2, { 0xcb, 0xee });
        gbc.writeMem(0xff0c, { 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x9efe);
        EXPECT(gbc.pc(), 0x6f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff0c), 0xb4);
        // CB EE 0041
        gbc.setState(0xb39a, 0x96fe, 0x9d20, 0x92f7, 0x54c1, 0x94a7, 0x0, 0x0);
        gbc.writeMem(0x94a7, { 0xf4 });
        gbc.writeMem(0xb39a, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x96fe);
        EXPECT(gbc.pc(), 0xb39c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94a7), 0xf4);
        EXPECT(gbc.readMem(0xb39a), 0xcb);
        EXPECT(gbc.readMem(0xb39b), 0xee);
        // CB EE 0042
        gbc.setState(0x91a8, 0x42d4, 0x5080, 0xac96, 0xb126, 0x85c6, 0x0, 0x1);
        gbc.writeMem(0x85c6, { 0x0 });
        gbc.writeMem(0x91a8, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x42d4);
        EXPECT(gbc.pc(), 0x91aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85c6), 0x20);
        EXPECT(gbc.readMem(0x91a8), 0xcb);
        EXPECT(gbc.readMem(0x91a9), 0xee);
        // CB EE 0043
        gbc.setState(0xe838, 0x395b, 0x8e60, 0x1d66, 0x331c, 0xbb42, 0x0, 0x0);
        gbc.writeMem(0xbb42, { 0x1e });
        gbc.writeMem(0xe838, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x395b);
        EXPECT(gbc.pc(), 0xe83a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb42), 0x3e);
        EXPECT(gbc.readMem(0xe838), 0xcb);
        EXPECT(gbc.readMem(0xe839), 0xee);
        // CB EE 0044
        gbc.setState(0x7ded, 0xa0b5, 0x18b0, 0xc36b, 0x6083, 0x1d28, 0x1, 0x0);
        gbc.writeMem(0x1d28, { 0xe4 });
        gbc.writeMem(0x7ded, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xa0b5);
        EXPECT(gbc.pc(), 0x7def);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EE 0045
        gbc.setState(0x870, 0x4efa, 0xe2b0, 0x10dd, 0xf28b, 0xd22c, 0x0, 0x0);
        gbc.writeMem(0x870, { 0xcb, 0xee });
        gbc.writeMem(0xd22c, { 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x4efa);
        EXPECT(gbc.pc(), 0x872);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd22c), 0x28);
        // CB EE 0046
        gbc.setState(0x9230, 0x596, 0x9200, 0x221, 0xdbe3, 0xc8b1, 0x1, 0x1);
        gbc.writeMem(0x9230, { 0xcb, 0xee });
        gbc.writeMem(0xc8b1, { 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x596);
        EXPECT(gbc.pc(), 0x9232);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9230), 0xcb);
        EXPECT(gbc.readMem(0x9231), 0xee);
        EXPECT(gbc.readMem(0xc8b1), 0x2d);
        // CB EE 0047
        gbc.setState(0x2cd3, 0xcc1a, 0x8610, 0x9d7a, 0x13d0, 0xf38, 0x0, 0x0);
        gbc.writeMem(0xf38, { 0xfe });
        gbc.writeMem(0x2cd3, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xcc1a);
        EXPECT(gbc.pc(), 0x2cd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EE 0049
        gbc.setState(0xb51, 0x4849, 0x33c0, 0xf2e8, 0x65c6, 0xbad3, 0x1, 0x0);
        gbc.writeMem(0xb51, { 0xcb, 0xee });
        gbc.writeMem(0xbad3, { 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x4849);
        EXPECT(gbc.pc(), 0xb53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbad3), 0xff);
        // CB EE 004B
        gbc.setState(0x1d5a, 0x3833, 0x4290, 0x674a, 0x77cb, 0x16bc, 0x1, 0x1);
        gbc.writeMem(0x16bc, { 0xb0 });
        gbc.writeMem(0x1d5a, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x3833);
        EXPECT(gbc.pc(), 0x1d5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EE 004C
        gbc.setState(0x20c, 0xc21f, 0x4740, 0x807c, 0x4a5d, 0xb148, 0x1, 0x1);
        gbc.writeMem(0x20c, { 0xcb, 0xee });
        gbc.writeMem(0xb148, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xc21f);
        EXPECT(gbc.pc(), 0x20e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb148), 0xa3);
        // CB EE 004D
        gbc.setState(0x3a16, 0xc336, 0xdbb0, 0x787f, 0x9f65, 0x23a, 0x1, 0x1);
        gbc.writeMem(0x23a, { 0xaa });
        gbc.writeMem(0x3a16, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xc336);
        EXPECT(gbc.pc(), 0x3a18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EE 004E
        gbc.setState(0x5546, 0x38a4, 0x50a0, 0xb1b4, 0x26a5, 0xd8b4, 0x0, 0x0);
        gbc.writeMem(0x5546, { 0xcb, 0xee });
        gbc.writeMem(0xd8b4, { 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x38a4);
        EXPECT(gbc.pc(), 0x5548);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8b4), 0x3f);
        // CB EE 004F
        gbc.setState(0x23b5, 0xfaff, 0x7800, 0xb2a, 0x4140, 0x3a59, 0x1, 0x0);
        gbc.writeMem(0x23b5, { 0xcb, 0xee });
        gbc.writeMem(0x3a59, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xfaff);
        EXPECT(gbc.pc(), 0x23b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EE 0050
        gbc.setState(0x8561, 0xce55, 0xf5c0, 0xd576, 0x5d2a, 0xfb08, 0x0, 0x1);
        gbc.writeMem(0x8561, { 0xcb, 0xee });
        gbc.writeMem(0xfb08, { 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xce55);
        EXPECT(gbc.pc(), 0x8563);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8561), 0xcb);
        EXPECT(gbc.readMem(0x8562), 0xee);
        EXPECT(gbc.readMem(0xfb08), 0xaf);
        // CB EE 0051
        gbc.setState(0x1454, 0x3903, 0xde00, 0x4193, 0x32ab, 0xfaa1, 0x1, 0x1);
        gbc.writeMem(0x1454, { 0xcb, 0xee });
        gbc.writeMem(0xfaa1, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x3903);
        EXPECT(gbc.pc(), 0x1456);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfaa1), 0xf9);
        // CB EE 0052
        gbc.setState(0xc29b, 0x303c, 0xa9e0, 0x22e0, 0xf768, 0xfa92, 0x1, 0x1);
        gbc.writeMem(0xc29b, { 0xcb, 0xee });
        gbc.writeMem(0xfa92, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x303c);
        EXPECT(gbc.pc(), 0xc29d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc29b), 0xcb);
        EXPECT(gbc.readMem(0xc29c), 0xee);
        EXPECT(gbc.readMem(0xfa92), 0x73);
        // CB EE 0053
        gbc.setState(0x83f1, 0xd15c, 0x200, 0xe42c, 0xdd92, 0x2b7e, 0x1, 0x0);
        gbc.writeMem(0x2b7e, { 0x74 });
        gbc.writeMem(0x83f1, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xd15c);
        EXPECT(gbc.pc(), 0x83f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83f1), 0xcb);
        EXPECT(gbc.readMem(0x83f2), 0xee);
        // CB EE 0054
        gbc.setState(0x763d, 0x6faf, 0xbec0, 0x1d5b, 0x8e5, 0x9828, 0x1, 0x1);
        gbc.writeMem(0x763d, { 0xcb, 0xee });
        gbc.writeMem(0x9828, { 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x6faf);
        EXPECT(gbc.pc(), 0x763f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9828), 0x39);
        // CB EE 0055
        gbc.setState(0x9218, 0xbdf0, 0x9230, 0x2e87, 0x8f10, 0x4395, 0x1, 0x0);
        gbc.writeMem(0x4395, { 0xb1 });
        gbc.writeMem(0x9218, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xbdf0);
        EXPECT(gbc.pc(), 0x921a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9218), 0xcb);
        EXPECT(gbc.readMem(0x9219), 0xee);
        // CB EE 0056
        gbc.setState(0x7967, 0xcf91, 0x63e0, 0x3585, 0x3c13, 0xe7a6, 0x1, 0x1);
        gbc.writeMem(0x7967, { 0xcb, 0xee });
        gbc.writeMem(0xe7a6, { 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xcf91);
        EXPECT(gbc.pc(), 0x7969);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7a6), 0x36);
        // CB EE 0059
        gbc.setState(0x4ae4, 0xa0fc, 0xfab0, 0xbbaf, 0x2bb9, 0x1b36, 0x1, 0x1);
        gbc.writeMem(0x1b36, { 0x24 });
        gbc.writeMem(0x4ae4, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xa0fc);
        EXPECT(gbc.pc(), 0x4ae6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EE 005A
        gbc.setState(0xd0, 0x6e67, 0x2bc0, 0x385f, 0xe843, 0x2f10, 0x0, 0x1);
        gbc.writeMem(0xd0, { 0xcb, 0xee });
        gbc.writeMem(0x2f10, { 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x6e67);
        EXPECT(gbc.pc(), 0xd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EE 005B
        gbc.setState(0xd5dc, 0xdb42, 0xe40, 0xc226, 0x835a, 0x47ca, 0x0, 0x0);
        gbc.writeMem(0x47ca, { 0x6b });
        gbc.writeMem(0xd5dc, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xdb42);
        EXPECT(gbc.pc(), 0xd5de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5dc), 0xcb);
        EXPECT(gbc.readMem(0xd5dd), 0xee);
        // CB EE 005C
        gbc.setState(0x1325, 0xa0ca, 0x3c60, 0x75a2, 0x7e87, 0x98f2, 0x1, 0x0);
        gbc.writeMem(0x1325, { 0xcb, 0xee });
        gbc.writeMem(0x98f2, { 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xa0ca);
        EXPECT(gbc.pc(), 0x1327);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98f2), 0xe7);
        // CB EE 005F
        gbc.setState(0xdb4c, 0xbdf3, 0x9540, 0x4f80, 0x9706, 0x4275, 0x1, 0x0);
        gbc.writeMem(0x4275, { 0x7d });
        gbc.writeMem(0xdb4c, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xbdf3);
        EXPECT(gbc.pc(), 0xdb4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb4c), 0xcb);
        EXPECT(gbc.readMem(0xdb4d), 0xee);
        // CB EE 0062
        gbc.setState(0x1113, 0x8156, 0x2d20, 0x205, 0x71f1, 0xd675, 0x1, 0x0);
        gbc.writeMem(0x1113, { 0xcb, 0xee });
        gbc.writeMem(0xd675, { 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x8156);
        EXPECT(gbc.pc(), 0x1115);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd675), 0xf9);
        // CB EE 0063
        gbc.setState(0xaf48, 0x5a03, 0x6b90, 0xed37, 0x1df, 0xe799, 0x1, 0x0);
        gbc.writeMem(0xaf48, { 0xcb, 0xee });
        gbc.writeMem(0xe799, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x5a03);
        EXPECT(gbc.pc(), 0xaf4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf48), 0xcb);
        EXPECT(gbc.readMem(0xaf49), 0xee);
        EXPECT(gbc.readMem(0xe799), 0x71);
        // CB EE 0064
        gbc.setState(0xb8d8, 0x8264, 0xed60, 0x7e85, 0x63fb, 0xe8e5, 0x0, 0x0);
        gbc.writeMem(0xb8d8, { 0xcb, 0xee });
        gbc.writeMem(0xe8e5, { 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x8264);
        EXPECT(gbc.pc(), 0xb8da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8d8), 0xcb);
        EXPECT(gbc.readMem(0xb8d9), 0xee);
        EXPECT(gbc.readMem(0xe8e5), 0x68);
        // CB EE 0065
        gbc.setState(0xc1ee, 0x2ad0, 0x77f0, 0x4451, 0x31f4, 0x6f8f, 0x1, 0x1);
        gbc.writeMem(0x6f8f, { 0xa7 });
        gbc.writeMem(0xc1ee, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x2ad0);
        EXPECT(gbc.pc(), 0xc1f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1ee), 0xcb);
        EXPECT(gbc.readMem(0xc1ef), 0xee);
        // CB EE 0069
        gbc.setState(0x5d5c, 0x87d8, 0x9590, 0xb101, 0xf11e, 0x1b0f, 0x1, 0x0);
        gbc.writeMem(0x1b0f, { 0x31 });
        gbc.writeMem(0x5d5c, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x87d8);
        EXPECT(gbc.pc(), 0x5d5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EE 006B
        gbc.setState(0xe227, 0x6285, 0x7720, 0xab40, 0xc329, 0xa598, 0x0, 0x0);
        gbc.writeMem(0xa598, { 0x52 });
        gbc.writeMem(0xe227, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x6285);
        EXPECT(gbc.pc(), 0xe229);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa598), 0x72);
        EXPECT(gbc.readMem(0xe227), 0xcb);
        EXPECT(gbc.readMem(0xe228), 0xee);
        // CB EE 006C
        gbc.setState(0xdf46, 0x912a, 0x4b00, 0xa56d, 0x3a64, 0xb0dc, 0x0, 0x0);
        gbc.writeMem(0xb0dc, { 0x90 });
        gbc.writeMem(0xdf46, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x912a);
        EXPECT(gbc.pc(), 0xdf48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0dc), 0xb0);
        EXPECT(gbc.readMem(0xdf46), 0xcb);
        EXPECT(gbc.readMem(0xdf47), 0xee);
        // CB EE 006E
        gbc.setState(0x4c75, 0x56ec, 0x660, 0xeb24, 0x94de, 0xe1cd, 0x0, 0x0);
        gbc.writeMem(0x4c75, { 0xcb, 0xee });
        gbc.writeMem(0xe1cd, { 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x56ec);
        EXPECT(gbc.pc(), 0x4c77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1cd), 0x39);
        // CB EE 006F
        gbc.setState(0x6324, 0x9327, 0x8130, 0x7296, 0x7117, 0xf47f, 0x1, 0x1);
        gbc.writeMem(0x6324, { 0xcb, 0xee });
        gbc.writeMem(0xf47f, { 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x9327);
        EXPECT(gbc.pc(), 0x6326);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf47f), 0xb3);
        // CB EE 0072
        gbc.setState(0xcadf, 0x6d4, 0xdab0, 0x7a97, 0xa9a2, 0x83f4, 0x1, 0x0);
        gbc.writeMem(0x83f4, { 0x60 });
        gbc.writeMem(0xcadf, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x6d4);
        EXPECT(gbc.pc(), 0xcae1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83f4), 0x60);
        EXPECT(gbc.readMem(0xcadf), 0xcb);
        EXPECT(gbc.readMem(0xcae0), 0xee);
        // CB EE 0074
        gbc.setState(0xbc49, 0xb81d, 0x52e0, 0x99ed, 0xf54d, 0x2510, 0x0, 0x0);
        gbc.writeMem(0x2510, { 0xbc });
        gbc.writeMem(0xbc49, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xb81d);
        EXPECT(gbc.pc(), 0xbc4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc49), 0xcb);
        EXPECT(gbc.readMem(0xbc4a), 0xee);
        // CB EE 0076
        gbc.setState(0xd854, 0x87d, 0x14f0, 0x8b39, 0x1bdc, 0xe51a, 0x1, 0x1);
        gbc.writeMem(0xd854, { 0xcb, 0xee });
        gbc.writeMem(0xe51a, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x87d);
        EXPECT(gbc.pc(), 0xd856);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd854), 0xcb);
        EXPECT(gbc.readMem(0xd855), 0xee);
        EXPECT(gbc.readMem(0xe51a), 0x30);
        // CB EE 0077
        gbc.setState(0xbf7f, 0x9aaa, 0x77b0, 0x89ba, 0xe0c5, 0x9e4a, 0x0, 0x0);
        gbc.writeMem(0x9e4a, { 0x94 });
        gbc.writeMem(0xbf7f, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x9aaa);
        EXPECT(gbc.pc(), 0xbf81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e4a), 0xb4);
        EXPECT(gbc.readMem(0xbf7f), 0xcb);
        EXPECT(gbc.readMem(0xbf80), 0xee);
        // CB EE 0078
        gbc.setState(0xc82e, 0xe745, 0xaa00, 0x5a6d, 0x881c, 0xe7c4, 0x1, 0x1);
        gbc.writeMem(0xc82e, { 0xcb, 0xee });
        gbc.writeMem(0xe7c4, { 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xe745);
        EXPECT(gbc.pc(), 0xc830);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc82e), 0xcb);
        EXPECT(gbc.readMem(0xc82f), 0xee);
        EXPECT(gbc.readMem(0xe7c4), 0x36);
        // CB EE 007B
        gbc.setState(0x90e8, 0x8e2e, 0x130, 0xf4c8, 0xd974, 0xd30e, 0x0, 0x0);
        gbc.writeMem(0x90e8, { 0xcb, 0xee });
        gbc.writeMem(0xd30e, { 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x8e2e);
        EXPECT(gbc.pc(), 0x90ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90e8), 0xcb);
        EXPECT(gbc.readMem(0x90e9), 0xee);
        EXPECT(gbc.readMem(0xd30e), 0xbe);
        // CB EE 007C
        gbc.setState(0xc90d, 0x16d0, 0x7ef0, 0xfc59, 0xf089, 0xd798, 0x0, 0x1);
        gbc.writeMem(0xc90d, { 0xcb, 0xee });
        gbc.writeMem(0xd798, { 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x16d0);
        EXPECT(gbc.pc(), 0xc90f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc90d), 0xcb);
        EXPECT(gbc.readMem(0xc90e), 0xee);
        EXPECT(gbc.readMem(0xd798), 0x6a);
        // CB EE 007E
        gbc.setState(0x7c6e, 0x507e, 0x5300, 0xcf95, 0x8d9e, 0xa109, 0x0, 0x1);
        gbc.writeMem(0x7c6e, { 0xcb, 0xee });
        gbc.writeMem(0xa109, { 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x507e);
        EXPECT(gbc.pc(), 0x7c70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa109), 0xf3);
        // CB EE 007F
        gbc.setState(0x81a8, 0xad9, 0xd550, 0x934c, 0xe78a, 0xbc28, 0x0, 0x1);
        gbc.writeMem(0x81a8, { 0xcb, 0xee });
        gbc.writeMem(0xbc28, { 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xad9);
        EXPECT(gbc.pc(), 0x81aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81a8), 0xcb);
        EXPECT(gbc.readMem(0x81a9), 0xee);
        EXPECT(gbc.readMem(0xbc28), 0xaa);
        // CB EE 0080
        gbc.setState(0xb51, 0xaad0, 0xb0b0, 0x4ab3, 0x1b8b, 0xbff9, 0x1, 0x0);
        gbc.writeMem(0xb51, { 0xcb, 0xee });
        gbc.writeMem(0xbff9, { 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xaad0);
        EXPECT(gbc.pc(), 0xb53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbff9), 0xef);
        // CB EE 0082
        gbc.setState(0x6758, 0xb960, 0x7960, 0x1eaf, 0xaa50, 0xa9a0, 0x0, 0x0);
        gbc.writeMem(0x6758, { 0xcb, 0xee });
        gbc.writeMem(0xa9a0, { 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xb960);
        EXPECT(gbc.pc(), 0x675a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9a0), 0xa7);
        // CB EE 0085
        gbc.setState(0x7ffb, 0x5696, 0xaf0, 0xaa32, 0x4fc5, 0xc1e0, 0x0, 0x0);
        gbc.writeMem(0x7ffb, { 0xcb, 0xee });
        gbc.writeMem(0xc1e0, { 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x5696);
        EXPECT(gbc.pc(), 0x7ffd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1e0), 0xef);
        // CB EE 0086
        gbc.setState(0x9fb6, 0x68a8, 0x3620, 0xeaac, 0x7343, 0xd024, 0x0, 0x1);
        gbc.writeMem(0x9fb6, { 0xcb, 0xee });
        gbc.writeMem(0xd024, { 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x68a8);
        EXPECT(gbc.pc(), 0x9fb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fb6), 0xcb);
        EXPECT(gbc.readMem(0x9fb7), 0xee);
        EXPECT(gbc.readMem(0xd024), 0xa4);
        // CB EE 0087
        gbc.setState(0x23d1, 0x65e1, 0x24f0, 0x5982, 0xf3d1, 0x9d21, 0x1, 0x1);
        gbc.writeMem(0x23d1, { 0xcb, 0xee });
        gbc.writeMem(0x9d21, { 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x65e1);
        EXPECT(gbc.pc(), 0x23d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d21), 0x7f);
        // CB EE 0089
        gbc.setState(0x4100, 0x2e14, 0x77b0, 0xdb0b, 0x227, 0xbb22, 0x0, 0x1);
        gbc.writeMem(0x4100, { 0xcb, 0xee });
        gbc.writeMem(0xbb22, { 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x2e14);
        EXPECT(gbc.pc(), 0x4102);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb22), 0xfc);
        // CB EE 008C
        gbc.setState(0xd5e8, 0x8dbd, 0xb670, 0x701d, 0x9fab, 0xb755, 0x1, 0x0);
        gbc.writeMem(0xb755, { 0xef });
        gbc.writeMem(0xd5e8, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x8dbd);
        EXPECT(gbc.pc(), 0xd5ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb755), 0xef);
        EXPECT(gbc.readMem(0xd5e8), 0xcb);
        EXPECT(gbc.readMem(0xd5e9), 0xee);
        // CB EE 008E
        gbc.setState(0x2264, 0x15dd, 0x94a0, 0x84bb, 0x931d, 0xf2e4, 0x1, 0x1);
        gbc.writeMem(0x2264, { 0xcb, 0xee });
        gbc.writeMem(0xf2e4, { 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x15dd);
        EXPECT(gbc.pc(), 0x2266);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf2e4), 0x7b);
        // CB EE 0090
        gbc.setState(0x2761, 0xb8d3, 0x9660, 0x9066, 0xb0c2, 0xece4, 0x1, 0x0);
        gbc.writeMem(0x2761, { 0xcb, 0xee });
        gbc.writeMem(0xece4, { 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xb8d3);
        EXPECT(gbc.pc(), 0x2763);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xece4), 0xf8);
        // CB EE 0091
        gbc.setState(0xd9af, 0x65f3, 0x1500, 0x2846, 0x83b2, 0xdf16, 0x1, 0x0);
        gbc.writeMem(0xd9af, { 0xcb, 0xee });
        gbc.writeMem(0xdf16, { 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x65f3);
        EXPECT(gbc.pc(), 0xd9b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9af), 0xcb);
        EXPECT(gbc.readMem(0xd9b0), 0xee);
        EXPECT(gbc.readMem(0xdf16), 0x6c);
        // CB EE 0093
        gbc.setState(0x7161, 0x4b39, 0xa400, 0x8713, 0x72fe, 0xcfbb, 0x1, 0x1);
        gbc.writeMem(0x7161, { 0xcb, 0xee });
        gbc.writeMem(0xcfbb, { 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x4b39);
        EXPECT(gbc.pc(), 0x7163);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfbb), 0xab);
        // CB EE 0094
        gbc.setState(0x9b7e, 0xa4be, 0x70d0, 0xedf4, 0x450f, 0x8f36, 0x1, 0x1);
        gbc.writeMem(0x8f36, { 0x52 });
        gbc.writeMem(0x9b7e, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xa4be);
        EXPECT(gbc.pc(), 0x9b80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f36), 0x72);
        EXPECT(gbc.readMem(0x9b7e), 0xcb);
        EXPECT(gbc.readMem(0x9b7f), 0xee);
        // CB EE 0095
        gbc.setState(0xc4de, 0x4d0, 0xdd80, 0x9e61, 0x38bc, 0xbdb1, 0x1, 0x1);
        gbc.writeMem(0xbdb1, { 0x1f });
        gbc.writeMem(0xc4de, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x4d0);
        EXPECT(gbc.pc(), 0xc4e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdb1), 0x3f);
        EXPECT(gbc.readMem(0xc4de), 0xcb);
        EXPECT(gbc.readMem(0xc4df), 0xee);
        // CB EE 0096
        gbc.setState(0x9f28, 0x9280, 0xfda0, 0xc2f7, 0x66f9, 0x8264, 0x1, 0x0);
        gbc.writeMem(0x8264, { 0x83 });
        gbc.writeMem(0x9f28, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x9280);
        EXPECT(gbc.pc(), 0x9f2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8264), 0xa3);
        EXPECT(gbc.readMem(0x9f28), 0xcb);
        EXPECT(gbc.readMem(0x9f29), 0xee);
        // CB EE 0097
        gbc.setState(0x80a, 0x58d0, 0x3250, 0x1da2, 0x12ea, 0xc761, 0x0, 0x1);
        gbc.writeMem(0x80a, { 0xcb, 0xee });
        gbc.writeMem(0xc761, { 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x58d0);
        EXPECT(gbc.pc(), 0x80c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc761), 0xbf);
        // CB EE 0098
        gbc.setState(0xaeb3, 0x9382, 0xf740, 0xeab2, 0xc13a, 0xfed5, 0x1, 0x1);
        gbc.writeMem(0xaeb3, { 0xcb, 0xee });
        gbc.writeMem(0xfed5, { 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x9382);
        EXPECT(gbc.pc(), 0xaeb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaeb3), 0xcb);
        EXPECT(gbc.readMem(0xaeb4), 0xee);
        EXPECT(gbc.readMem(0xfed5), 0x2b);
        // CB EE 0099
        gbc.setState(0xb7bf, 0xa553, 0x6940, 0x6fc8, 0x3d12, 0xae2b, 0x1, 0x0);
        gbc.writeMem(0xae2b, { 0xce });
        gbc.writeMem(0xb7bf, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xa553);
        EXPECT(gbc.pc(), 0xb7c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae2b), 0xee);
        EXPECT(gbc.readMem(0xb7bf), 0xcb);
        EXPECT(gbc.readMem(0xb7c0), 0xee);
        // CB EE 009A
        gbc.setState(0xa2df, 0x3162, 0x6130, 0x81d9, 0x9d2f, 0x2a4c, 0x1, 0x1);
        gbc.writeMem(0x2a4c, { 0x63 });
        gbc.writeMem(0xa2df, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x3162);
        EXPECT(gbc.pc(), 0xa2e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2df), 0xcb);
        EXPECT(gbc.readMem(0xa2e0), 0xee);
        // CB EE 009B
        gbc.setState(0xcde6, 0x8e93, 0x60a0, 0x7e6c, 0x854f, 0x2be1, 0x1, 0x0);
        gbc.writeMem(0x2be1, { 0xf6 });
        gbc.writeMem(0xcde6, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x8e93);
        EXPECT(gbc.pc(), 0xcde8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcde6), 0xcb);
        EXPECT(gbc.readMem(0xcde7), 0xee);
        // CB EE 009D
        gbc.setState(0x8c82, 0xc416, 0xcd20, 0xddfe, 0xe4e4, 0xa014, 0x0, 0x0);
        gbc.writeMem(0x8c82, { 0xcb, 0xee });
        gbc.writeMem(0xa014, { 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xc416);
        EXPECT(gbc.pc(), 0x8c84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c82), 0xcb);
        EXPECT(gbc.readMem(0x8c83), 0xee);
        EXPECT(gbc.readMem(0xa014), 0xf0);
        // CB EE 009E
        gbc.setState(0x6804, 0x6e53, 0xcfb0, 0x5727, 0x3dac, 0x15bb, 0x1, 0x0);
        gbc.writeMem(0x15bb, { 0xf4 });
        gbc.writeMem(0x6804, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x6e53);
        EXPECT(gbc.pc(), 0x6806);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EE 009F
        gbc.setState(0xcd4f, 0x75dc, 0xd7f0, 0xa867, 0x93b8, 0xcc0c, 0x0, 0x1);
        gbc.writeMem(0xcc0c, { 0xe0 });
        gbc.writeMem(0xcd4f, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x75dc);
        EXPECT(gbc.pc(), 0xcd51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc0c), 0xe0);
        EXPECT(gbc.readMem(0xcd4f), 0xcb);
        EXPECT(gbc.readMem(0xcd50), 0xee);
        // CB EE 00A0
        gbc.setState(0x716, 0x1bab, 0xa220, 0xd540, 0x93c2, 0xd4bb, 0x0, 0x1);
        gbc.writeMem(0x716, { 0xcb, 0xee });
        gbc.writeMem(0xd4bb, { 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x1bab);
        EXPECT(gbc.pc(), 0x718);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4bb), 0x6b);
        // CB EE 00A1
        gbc.setState(0x6b12, 0x1c92, 0x76d0, 0x6b8b, 0x2a62, 0xf341, 0x1, 0x0);
        gbc.writeMem(0x6b12, { 0xcb, 0xee });
        gbc.writeMem(0xf341, { 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x1c92);
        EXPECT(gbc.pc(), 0x6b14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf341), 0x61);
        // CB EE 00A2
        gbc.setState(0xe600, 0xa577, 0xde0, 0xc458, 0x5d4a, 0xaacb, 0x1, 0x1);
        gbc.writeMem(0xaacb, { 0xf3 });
        gbc.writeMem(0xe600, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xa577);
        EXPECT(gbc.pc(), 0xe602);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaacb), 0xf3);
        EXPECT(gbc.readMem(0xe600), 0xcb);
        EXPECT(gbc.readMem(0xe601), 0xee);
        // CB EE 00A4
        gbc.setState(0x5c64, 0xc913, 0x73f0, 0xd73d, 0x73f6, 0xf0b3, 0x1, 0x0);
        gbc.writeMem(0x5c64, { 0xcb, 0xee });
        gbc.writeMem(0xf0b3, { 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xc913);
        EXPECT(gbc.pc(), 0x5c66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf0b3), 0x7d);
        // CB EE 00A6
        gbc.setState(0x93ed, 0xb337, 0x6120, 0xfd7b, 0x70f9, 0xcb9f, 0x1, 0x1);
        gbc.writeMem(0x93ed, { 0xcb, 0xee });
        gbc.writeMem(0xcb9f, { 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xb337);
        EXPECT(gbc.pc(), 0x93ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93ed), 0xcb);
        EXPECT(gbc.readMem(0x93ee), 0xee);
        EXPECT(gbc.readMem(0xcb9f), 0xe9);
        // CB EE 00A7
        gbc.setState(0xeb2e, 0xe65e, 0x9fe0, 0x42da, 0xf526, 0x8c3a, 0x1, 0x0);
        gbc.writeMem(0x8c3a, { 0x10 });
        gbc.writeMem(0xeb2e, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xe65e);
        EXPECT(gbc.pc(), 0xeb30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c3a), 0x30);
        EXPECT(gbc.readMem(0xeb2e), 0xcb);
        EXPECT(gbc.readMem(0xeb2f), 0xee);
        // CB EE 00AA
        gbc.setState(0xa8db, 0x7ac2, 0x35c0, 0x6a68, 0x437, 0xbfdb, 0x1, 0x0);
        gbc.writeMem(0xa8db, { 0xcb, 0xee });
        gbc.writeMem(0xbfdb, { 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x7ac2);
        EXPECT(gbc.pc(), 0xa8dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8db), 0xcb);
        EXPECT(gbc.readMem(0xa8dc), 0xee);
        EXPECT(gbc.readMem(0xbfdb), 0x36);
        // CB EE 00AB
        gbc.setState(0x31dd, 0x4fc3, 0x7d70, 0xff3c, 0xb63a, 0x3bb8, 0x1, 0x0);
        gbc.writeMem(0x31dd, { 0xcb, 0xee });
        gbc.writeMem(0x3bb8, { 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x4fc3);
        EXPECT(gbc.pc(), 0x31df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EE 00AC
        gbc.setState(0xcb6d, 0x9ecf, 0x67f0, 0x4d78, 0xadf8, 0x27a0, 0x1, 0x1);
        gbc.writeMem(0x27a0, { 0x3f });
        gbc.writeMem(0xcb6d, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x9ecf);
        EXPECT(gbc.pc(), 0xcb6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb6d), 0xcb);
        EXPECT(gbc.readMem(0xcb6e), 0xee);
        // CB EE 00AE
        gbc.setState(0x5699, 0xe6c5, 0x0, 0xc5b2, 0xe2c9, 0x52ba, 0x1, 0x1);
        gbc.writeMem(0x52ba, { 0x2f });
        gbc.writeMem(0x5699, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xe6c5);
        EXPECT(gbc.pc(), 0x569b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EE 00AF
        gbc.setState(0x61e7, 0x1fe1, 0xfab0, 0x5e7f, 0x5b5a, 0xfd35, 0x1, 0x1);
        gbc.writeMem(0x61e7, { 0xcb, 0xee });
        gbc.writeMem(0xfd35, { 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x1fe1);
        EXPECT(gbc.pc(), 0x61e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfd35), 0x24);
        // CB EE 00B1
        gbc.setState(0x4c26, 0xc601, 0xd8d0, 0xae44, 0xe5a1, 0xc4ad, 0x0, 0x0);
        gbc.writeMem(0x4c26, { 0xcb, 0xee });
        gbc.writeMem(0xc4ad, { 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xc601);
        EXPECT(gbc.pc(), 0x4c28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4ad), 0xf3);
        // CB EE 00B3
        gbc.setState(0x9de1, 0x7126, 0x8460, 0x325c, 0x587d, 0xde79, 0x0, 0x0);
        gbc.writeMem(0x9de1, { 0xcb, 0xee });
        gbc.writeMem(0xde79, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x7126);
        EXPECT(gbc.pc(), 0x9de3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9de1), 0xcb);
        EXPECT(gbc.readMem(0x9de2), 0xee);
        EXPECT(gbc.readMem(0xde79), 0xac);
        // CB EE 00B4
        gbc.setState(0xb9f8, 0x4e69, 0xa720, 0x67a2, 0xfea6, 0x58fd, 0x0, 0x1);
        gbc.writeMem(0x58fd, { 0x6f });
        gbc.writeMem(0xb9f8, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x4e69);
        EXPECT(gbc.pc(), 0xb9fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9f8), 0xcb);
        EXPECT(gbc.readMem(0xb9f9), 0xee);
        // CB EE 00B6
        gbc.setState(0x2c1c, 0x7ac0, 0x71b0, 0x11c1, 0xd9d2, 0xaa54, 0x0, 0x1);
        gbc.writeMem(0x2c1c, { 0xcb, 0xee });
        gbc.writeMem(0xaa54, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x7ac0);
        EXPECT(gbc.pc(), 0x2c1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa54), 0xf7);
        // CB EE 00B7
        gbc.setState(0xb7f0, 0x9ae6, 0x7f30, 0xa6e8, 0xc2bd, 0x9446, 0x0, 0x0);
        gbc.writeMem(0x9446, { 0xeb });
        gbc.writeMem(0xb7f0, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x9ae6);
        EXPECT(gbc.pc(), 0xb7f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9446), 0xeb);
        EXPECT(gbc.readMem(0xb7f0), 0xcb);
        EXPECT(gbc.readMem(0xb7f1), 0xee);
        // CB EE 00B8
        gbc.setState(0x723, 0x5364, 0xa40, 0xa9b9, 0x76d, 0xd2da, 0x1, 0x1);
        gbc.writeMem(0x723, { 0xcb, 0xee });
        gbc.writeMem(0xd2da, { 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x5364);
        EXPECT(gbc.pc(), 0x725);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2da), 0x26);
        // CB EE 00B9
        gbc.setState(0xe4a6, 0x122d, 0x3aa0, 0x4058, 0xeafc, 0x9bd3, 0x0, 0x1);
        gbc.writeMem(0x9bd3, { 0x15 });
        gbc.writeMem(0xe4a6, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x122d);
        EXPECT(gbc.pc(), 0xe4a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bd3), 0x35);
        EXPECT(gbc.readMem(0xe4a6), 0xcb);
        EXPECT(gbc.readMem(0xe4a7), 0xee);
        // CB EE 00BB
        gbc.setState(0xae29, 0xdb4a, 0xffb0, 0xda6d, 0x57f0, 0x1a9, 0x0, 0x0);
        gbc.writeMem(0x1a9, { 0xe2 });
        gbc.writeMem(0xae29, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xdb4a);
        EXPECT(gbc.pc(), 0xae2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae29), 0xcb);
        EXPECT(gbc.readMem(0xae2a), 0xee);
        // CB EE 00BC
        gbc.setState(0x3471, 0x88de, 0xeda0, 0x4834, 0xcf7a, 0x4834, 0x0, 0x0);
        gbc.writeMem(0x3471, { 0xcb, 0xee });
        gbc.writeMem(0x4834, { 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x88de);
        EXPECT(gbc.pc(), 0x3473);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EE 00BD
        gbc.setState(0x3f56, 0xafcf, 0x3220, 0x1d9e, 0x790c, 0xcf9a, 0x1, 0x1);
        gbc.writeMem(0x3f56, { 0xcb, 0xee });
        gbc.writeMem(0xcf9a, { 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xafcf);
        EXPECT(gbc.pc(), 0x3f58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf9a), 0xb3);
        // CB EE 00BE
        gbc.setState(0x3ec4, 0xedc0, 0xb90, 0x3f9, 0xd1d3, 0x2343, 0x1, 0x1);
        gbc.writeMem(0x2343, { 0x39 });
        gbc.writeMem(0x3ec4, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xedc0);
        EXPECT(gbc.pc(), 0x3ec6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EE 00BF
        gbc.setState(0xe1bb, 0xb73a, 0xccd0, 0x200a, 0xe20, 0xeb65, 0x0, 0x0);
        gbc.writeMem(0xe1bb, { 0xcb, 0xee });
        gbc.writeMem(0xeb65, { 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xb73a);
        EXPECT(gbc.pc(), 0xe1bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1bb), 0xcb);
        EXPECT(gbc.readMem(0xe1bc), 0xee);
        EXPECT(gbc.readMem(0xeb65), 0x7a);
        // CB EE 00C0
        gbc.setState(0x67d4, 0x337, 0x9350, 0xdeb4, 0xf3d5, 0x9bc7, 0x0, 0x0);
        gbc.writeMem(0x67d4, { 0xcb, 0xee });
        gbc.writeMem(0x9bc7, { 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x337);
        EXPECT(gbc.pc(), 0x67d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bc7), 0x2e);
        // CB EE 00C2
        gbc.setState(0xee4d, 0x233a, 0x330, 0x4d73, 0xfa84, 0x9507, 0x0, 0x1);
        gbc.writeMem(0x9507, { 0x3 });
        gbc.writeMem(0xee4d, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x233a);
        EXPECT(gbc.pc(), 0xee4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9507), 0x23);
        EXPECT(gbc.readMem(0xee4d), 0xcb);
        EXPECT(gbc.readMem(0xee4e), 0xee);
        // CB EE 00C3
        gbc.setState(0xe4e0, 0x8778, 0x4540, 0x3d8a, 0x5a2d, 0xfc6c, 0x0, 0x1);
        gbc.writeMem(0xe4e0, { 0xcb, 0xee });
        gbc.writeMem(0xfc6c, { 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x8778);
        EXPECT(gbc.pc(), 0xe4e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4e0), 0xcb);
        EXPECT(gbc.readMem(0xe4e1), 0xee);
        EXPECT(gbc.readMem(0xfc6c), 0xfe);
        // CB EE 00C4
        gbc.setState(0x9c79, 0x283f, 0xb800, 0xfbff, 0x7bd2, 0x5f20, 0x1, 0x1);
        gbc.writeMem(0x5f20, { 0x73 });
        gbc.writeMem(0x9c79, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x283f);
        EXPECT(gbc.pc(), 0x9c7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c79), 0xcb);
        EXPECT(gbc.readMem(0x9c7a), 0xee);
        // CB EE 00C5
        gbc.setState(0xba5, 0xea7a, 0xcf60, 0xee8e, 0x6f49, 0x25b5, 0x1, 0x1);
        gbc.writeMem(0xba5, { 0xcb, 0xee });
        gbc.writeMem(0x25b5, { 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xea7a);
        EXPECT(gbc.pc(), 0xba7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EE 00C6
        gbc.setState(0x8439, 0x6d66, 0x6260, 0x3efb, 0xf56f, 0xc51, 0x0, 0x0);
        gbc.writeMem(0xc51, { 0xfb });
        gbc.writeMem(0x8439, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x6d66);
        EXPECT(gbc.pc(), 0x843b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8439), 0xcb);
        EXPECT(gbc.readMem(0x843a), 0xee);
        // CB EE 00C7
        gbc.setState(0x3d83, 0xfd49, 0x4730, 0x5efb, 0xd0eb, 0x8d4e, 0x1, 0x1);
        gbc.writeMem(0x3d83, { 0xcb, 0xee });
        gbc.writeMem(0x8d4e, { 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xfd49);
        EXPECT(gbc.pc(), 0x3d85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d4e), 0xe4);
        // CB EE 00C9
        gbc.setState(0x603c, 0x1e80, 0x3c60, 0xec8a, 0x9411, 0x821f, 0x0, 0x0);
        gbc.writeMem(0x603c, { 0xcb, 0xee });
        gbc.writeMem(0x821f, { 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x1e80);
        EXPECT(gbc.pc(), 0x603e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x821f), 0x68);
        // CB EE 00CB
        gbc.setState(0x238e, 0xdc83, 0xc580, 0xd7bd, 0x3615, 0xae40, 0x1, 0x1);
        gbc.writeMem(0x238e, { 0xcb, 0xee });
        gbc.writeMem(0xae40, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xdc83);
        EXPECT(gbc.pc(), 0x2390);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae40), 0xf9);
        // CB EE 00CC
        gbc.setState(0x2042, 0xcb6, 0x8c70, 0x6c54, 0x6715, 0x25fc, 0x0, 0x1);
        gbc.writeMem(0x2042, { 0xcb, 0xee });
        gbc.writeMem(0x25fc, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xcb6);
        EXPECT(gbc.pc(), 0x2044);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EE 00CD
        gbc.setState(0x313d, 0x6703, 0x1300, 0x11fc, 0x5f7b, 0x8713, 0x1, 0x0);
        gbc.writeMem(0x313d, { 0xcb, 0xee });
        gbc.writeMem(0x8713, { 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x6703);
        EXPECT(gbc.pc(), 0x313f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8713), 0xf7);
        // CB EE 00CE
        gbc.setState(0x936b, 0x10ad, 0xa080, 0x34f4, 0x4322, 0xe180, 0x1, 0x0);
        gbc.writeMem(0x936b, { 0xcb, 0xee });
        gbc.writeMem(0xe180, { 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x10ad);
        EXPECT(gbc.pc(), 0x936d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x936b), 0xcb);
        EXPECT(gbc.readMem(0x936c), 0xee);
        EXPECT(gbc.readMem(0xe180), 0xfa);
        // CB EE 00D0
        gbc.setState(0x28f5, 0x2ec9, 0x8ba0, 0xf734, 0xca56, 0x8b84, 0x1, 0x1);
        gbc.writeMem(0x28f5, { 0xcb, 0xee });
        gbc.writeMem(0x8b84, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x2ec9);
        EXPECT(gbc.pc(), 0x28f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b84), 0x70);
        // CB EE 00D1
        gbc.setState(0x3672, 0x4b03, 0x6ef0, 0x7ba5, 0x3746, 0x646a, 0x1, 0x0);
        gbc.writeMem(0x3672, { 0xcb, 0xee });
        gbc.writeMem(0x646a, { 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x4b03);
        EXPECT(gbc.pc(), 0x3674);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EE 00D4
        gbc.setState(0xb28e, 0xc64b, 0x4a40, 0xae6b, 0xd10d, 0xf893, 0x0, 0x1);
        gbc.writeMem(0xb28e, { 0xcb, 0xee });
        gbc.writeMem(0xf893, { 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xc64b);
        EXPECT(gbc.pc(), 0xb290);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb28e), 0xcb);
        EXPECT(gbc.readMem(0xb28f), 0xee);
        EXPECT(gbc.readMem(0xf893), 0xe7);
        // CB EE 00D5
        gbc.setState(0x86fb, 0x7e85, 0xd550, 0x598, 0x91fb, 0x8abc, 0x1, 0x1);
        gbc.writeMem(0x86fb, { 0xcb, 0xee });
        gbc.writeMem(0x8abc, { 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x7e85);
        EXPECT(gbc.pc(), 0x86fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86fb), 0xcb);
        EXPECT(gbc.readMem(0x86fc), 0xee);
        EXPECT(gbc.readMem(0x8abc), 0xa8);
        // CB EE 00D6
        gbc.setState(0x4f74, 0x9344, 0x9960, 0x10b6, 0x8b6e, 0xa0ba, 0x0, 0x1);
        gbc.writeMem(0x4f74, { 0xcb, 0xee });
        gbc.writeMem(0xa0ba, { 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x9344);
        EXPECT(gbc.pc(), 0x4f76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0ba), 0xe5);
        // CB EE 00D7
        gbc.setState(0x48bf, 0x3ee, 0x7630, 0xf6e6, 0xbee1, 0x81c2, 0x1, 0x1);
        gbc.writeMem(0x48bf, { 0xcb, 0xee });
        gbc.writeMem(0x81c2, { 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x3ee);
        EXPECT(gbc.pc(), 0x48c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81c2), 0xe6);
        // CB EE 00D8
        gbc.setState(0x5e4a, 0x5e10, 0xf040, 0xd62d, 0x7ed6, 0xf15f, 0x1, 0x0);
        gbc.writeMem(0x5e4a, { 0xcb, 0xee });
        gbc.writeMem(0xf15f, { 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x5e10);
        EXPECT(gbc.pc(), 0x5e4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf15f), 0xb4);
        // CB EE 00D9
        gbc.setState(0x500f, 0x4bac, 0x18c0, 0xe8f6, 0x9898, 0xf37e, 0x0, 0x1);
        gbc.writeMem(0x500f, { 0xcb, 0xee });
        gbc.writeMem(0xf37e, { 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x4bac);
        EXPECT(gbc.pc(), 0x5011);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf37e), 0x61);
        // CB EE 00DA
        gbc.setState(0x4c2a, 0x8fda, 0x8d40, 0xf555, 0xb1c9, 0x7914, 0x0, 0x1);
        gbc.writeMem(0x4c2a, { 0xcb, 0xee });
        gbc.writeMem(0x7914, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x8fda);
        EXPECT(gbc.pc(), 0x4c2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EE 00DB
        gbc.setState(0x91d6, 0x3c4c, 0x5260, 0xc8c, 0x7962, 0x704a, 0x1, 0x0);
        gbc.writeMem(0x704a, { 0x3e });
        gbc.writeMem(0x91d6, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x3c4c);
        EXPECT(gbc.pc(), 0x91d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91d6), 0xcb);
        EXPECT(gbc.readMem(0x91d7), 0xee);
        // CB EE 00DD
        gbc.setState(0x923c, 0x150b, 0xb180, 0x1a74, 0x9865, 0xf54f, 0x0, 0x0);
        gbc.writeMem(0x923c, { 0xcb, 0xee });
        gbc.writeMem(0xf54f, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x150b);
        EXPECT(gbc.pc(), 0x923e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x923c), 0xcb);
        EXPECT(gbc.readMem(0x923d), 0xee);
        EXPECT(gbc.readMem(0xf54f), 0x71);
        // CB EE 00DE
        gbc.setState(0xe24c, 0x4ec5, 0x93e0, 0x9c44, 0xc03, 0xb5a4, 0x0, 0x1);
        gbc.writeMem(0xb5a4, { 0x0 });
        gbc.writeMem(0xe24c, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x4ec5);
        EXPECT(gbc.pc(), 0xe24e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5a4), 0x20);
        EXPECT(gbc.readMem(0xe24c), 0xcb);
        EXPECT(gbc.readMem(0xe24d), 0xee);
        // CB EE 00DF
        gbc.setState(0x7a9a, 0x807e, 0x8850, 0xaa5d, 0x891d, 0xd8a5, 0x0, 0x1);
        gbc.writeMem(0x7a9a, { 0xcb, 0xee });
        gbc.writeMem(0xd8a5, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x807e);
        EXPECT(gbc.pc(), 0x7a9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8a5), 0xf5);
        // CB EE 00E0
        gbc.setState(0x3615, 0x75f7, 0x4650, 0xa721, 0x65cc, 0xcc20, 0x1, 0x0);
        gbc.writeMem(0x3615, { 0xcb, 0xee });
        gbc.writeMem(0xcc20, { 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x75f7);
        EXPECT(gbc.pc(), 0x3617);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc20), 0x36);
        // CB EE 00E1
        gbc.setState(0x3539, 0x4ff, 0x14d0, 0x9c6, 0xedae, 0x5cbc, 0x1, 0x1);
        gbc.writeMem(0x3539, { 0xcb, 0xee });
        gbc.writeMem(0x5cbc, { 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x4ff);
        EXPECT(gbc.pc(), 0x353b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EE 00E3
        gbc.setState(0x64bf, 0xdf29, 0xe5b0, 0x1d8f, 0x7c34, 0x41f7, 0x0, 0x0);
        gbc.writeMem(0x41f7, { 0xed });
        gbc.writeMem(0x64bf, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xdf29);
        EXPECT(gbc.pc(), 0x64c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EE 00E4
        gbc.setState(0x56f7, 0xe709, 0x5de0, 0xd6bc, 0x9a72, 0xe42d, 0x0, 0x1);
        gbc.writeMem(0x56f7, { 0xcb, 0xee });
        gbc.writeMem(0xe42d, { 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xe709);
        EXPECT(gbc.pc(), 0x56f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe42d), 0xeb);
        // CB EE 00E5
        gbc.setState(0x21bf, 0x304d, 0x49d0, 0x7384, 0x93e3, 0x9492, 0x0, 0x0);
        gbc.writeMem(0x21bf, { 0xcb, 0xee });
        gbc.writeMem(0x9492, { 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x304d);
        EXPECT(gbc.pc(), 0x21c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9492), 0xf5);
        // CB EE 00E7
        gbc.setState(0x1385, 0x73a2, 0xfca0, 0x95a, 0x652e, 0xcfd6, 0x1, 0x0);
        gbc.writeMem(0x1385, { 0xcb, 0xee });
        gbc.writeMem(0xcfd6, { 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x73a2);
        EXPECT(gbc.pc(), 0x1387);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfd6), 0x31);
        // CB EE 00E9
        gbc.setState(0x292, 0x9ec4, 0x2d20, 0x86b4, 0x899b, 0x23fe, 0x1, 0x1);
        gbc.writeMem(0x292, { 0xcb, 0xee });
        gbc.writeMem(0x23fe, { 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x9ec4);
        EXPECT(gbc.pc(), 0x294);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EE 00EA
        gbc.setState(0x153, 0x768f, 0xba60, 0x5c05, 0x88be, 0x89e9, 0x1, 0x1);
        gbc.writeMem(0x153, { 0xcb, 0xee });
        gbc.writeMem(0x89e9, { 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x768f);
        EXPECT(gbc.pc(), 0x155);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89e9), 0xbf);
        // CB EE 00EB
        gbc.setState(0xd3f4, 0x946, 0xfca0, 0x427e, 0x4b8d, 0xbc7b, 0x1, 0x1);
        gbc.writeMem(0xbc7b, { 0x99 });
        gbc.writeMem(0xd3f4, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x946);
        EXPECT(gbc.pc(), 0xd3f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc7b), 0xb9);
        EXPECT(gbc.readMem(0xd3f4), 0xcb);
        EXPECT(gbc.readMem(0xd3f5), 0xee);
        // CB EE 00EC
        gbc.setState(0xe3d9, 0xac7e, 0xa680, 0x7a42, 0xd268, 0x8636, 0x0, 0x1);
        gbc.writeMem(0x8636, { 0x6 });
        gbc.writeMem(0xe3d9, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xac7e);
        EXPECT(gbc.pc(), 0xe3db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8636), 0x26);
        EXPECT(gbc.readMem(0xe3d9), 0xcb);
        EXPECT(gbc.readMem(0xe3da), 0xee);
        // CB EE 00ED
        gbc.setState(0x2b33, 0x8786, 0xbd90, 0x3c5b, 0xa0ca, 0xc73b, 0x0, 0x1);
        gbc.writeMem(0x2b33, { 0xcb, 0xee });
        gbc.writeMem(0xc73b, { 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x8786);
        EXPECT(gbc.pc(), 0x2b35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc73b), 0x7f);
        // CB EE 00EF
        gbc.setState(0xd565, 0xed1f, 0x8180, 0xce1f, 0x2fb8, 0xe2f9, 0x0, 0x0);
        gbc.writeMem(0xd565, { 0xcb, 0xee });
        gbc.writeMem(0xe2f9, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xed1f);
        EXPECT(gbc.pc(), 0xd567);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd565), 0xcb);
        EXPECT(gbc.readMem(0xd566), 0xee);
        EXPECT(gbc.readMem(0xe2f9), 0xb0);
        // CB EE 00F0
        gbc.setState(0xb517, 0x949f, 0x590, 0x3544, 0x1bfc, 0xd723, 0x1, 0x1);
        gbc.writeMem(0xb517, { 0xcb, 0xee });
        gbc.writeMem(0xd723, { 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x949f);
        EXPECT(gbc.pc(), 0xb519);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb517), 0xcb);
        EXPECT(gbc.readMem(0xb518), 0xee);
        EXPECT(gbc.readMem(0xd723), 0xa4);
        // CB EE 00F2
        gbc.setState(0x1df8, 0xe771, 0x990, 0xf23, 0x3db7, 0xb53a, 0x0, 0x1);
        gbc.writeMem(0x1df8, { 0xcb, 0xee });
        gbc.writeMem(0xb53a, { 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xe771);
        EXPECT(gbc.pc(), 0x1dfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb53a), 0x61);
        // CB EE 00F5
        gbc.setState(0x2743, 0x4bdc, 0xcb00, 0x64f, 0x4729, 0x4c71, 0x1, 0x0);
        gbc.writeMem(0x2743, { 0xcb, 0xee });
        gbc.writeMem(0x4c71, { 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x4bdc);
        EXPECT(gbc.pc(), 0x2745);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EE 00F7
        gbc.setState(0x8c2e, 0x6ff, 0xb390, 0xea39, 0xf570, 0x100b, 0x0, 0x1);
        gbc.writeMem(0x100b, { 0x39 });
        gbc.writeMem(0x8c2e, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x6ff);
        EXPECT(gbc.pc(), 0x8c30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c2e), 0xcb);
        EXPECT(gbc.readMem(0x8c2f), 0xee);
        // CB EE 00FB
        gbc.setState(0x5643, 0x3571, 0xc2f0, 0x7d5e, 0x122d, 0xbf09, 0x1, 0x1);
        gbc.writeMem(0x5643, { 0xcb, 0xee });
        gbc.writeMem(0xbf09, { 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x3571);
        EXPECT(gbc.pc(), 0x5645);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf09), 0xf0);
        // CB EE 00FD
        gbc.setState(0x5c34, 0x155c, 0x9550, 0xf696, 0xf8fb, 0xcea6, 0x0, 0x0);
        gbc.writeMem(0x5c34, { 0xcb, 0xee });
        gbc.writeMem(0xcea6, { 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x155c);
        EXPECT(gbc.pc(), 0x5c36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcea6), 0x67);
        // CB EE 00FE
        gbc.setState(0xc10e, 0x9bc6, 0x8ed0, 0xeacb, 0x624b, 0xbe9c, 0x1, 0x1);
        gbc.writeMem(0xbe9c, { 0x69 });
        gbc.writeMem(0xc10e, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x9bc6);
        EXPECT(gbc.pc(), 0xc110);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe9c), 0x69);
        EXPECT(gbc.readMem(0xc10e), 0xcb);
        EXPECT(gbc.readMem(0xc10f), 0xee);
        // CB EE 0100
        gbc.setState(0xbe54, 0x6465, 0x9680, 0x7314, 0x29ee, 0xbaea, 0x0, 0x1);
        gbc.writeMem(0xbaea, { 0xf1 });
        gbc.writeMem(0xbe54, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x6465);
        EXPECT(gbc.pc(), 0xbe56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbaea), 0xf1);
        EXPECT(gbc.readMem(0xbe54), 0xcb);
        EXPECT(gbc.readMem(0xbe55), 0xee);
        // CB EE 0102
        gbc.setState(0x2b8c, 0xefcd, 0x8ad0, 0x5d97, 0x373a, 0xce8b, 0x1, 0x1);
        gbc.writeMem(0x2b8c, { 0xcb, 0xee });
        gbc.writeMem(0xce8b, { 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xefcd);
        EXPECT(gbc.pc(), 0x2b8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce8b), 0xf3);
        // CB EE 0103
        gbc.setState(0xc0d1, 0xabcc, 0x8280, 0xc93d, 0xa538, 0xd89d, 0x0, 0x0);
        gbc.writeMem(0xc0d1, { 0xcb, 0xee });
        gbc.writeMem(0xd89d, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xabcc);
        EXPECT(gbc.pc(), 0xc0d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0d1), 0xcb);
        EXPECT(gbc.readMem(0xc0d2), 0xee);
        EXPECT(gbc.readMem(0xd89d), 0x78);
        // CB EE 0104
        gbc.setState(0x75af, 0xc9c, 0x8d80, 0xbb08, 0xf461, 0xf2e5, 0x1, 0x0);
        gbc.writeMem(0x75af, { 0xcb, 0xee });
        gbc.writeMem(0xf2e5, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xc9c);
        EXPECT(gbc.pc(), 0x75b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf2e5), 0x23);
        // CB EE 0105
        gbc.setState(0xe4db, 0x1219, 0x8fb0, 0x9877, 0x68fa, 0x1bcf, 0x0, 0x1);
        gbc.writeMem(0x1bcf, { 0x22 });
        gbc.writeMem(0xe4db, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x1219);
        EXPECT(gbc.pc(), 0xe4dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4db), 0xcb);
        EXPECT(gbc.readMem(0xe4dc), 0xee);
        // CB EE 0107
        gbc.setState(0x3a06, 0x9d29, 0x8890, 0xd09f, 0x3ac2, 0x34a3, 0x1, 0x1);
        gbc.writeMem(0x34a3, { 0xe5 });
        gbc.writeMem(0x3a06, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x9d29);
        EXPECT(gbc.pc(), 0x3a08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EE 010A
        gbc.setState(0x14ca, 0x1f84, 0x3490, 0x5b56, 0x8205, 0x7daf, 0x1, 0x1);
        gbc.writeMem(0x14ca, { 0xcb, 0xee });
        gbc.writeMem(0x7daf, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x1f84);
        EXPECT(gbc.pc(), 0x14cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EE 010B
        gbc.setState(0x2762, 0xa4df, 0xb6f0, 0x38f4, 0x53e, 0x3250, 0x1, 0x1);
        gbc.writeMem(0x2762, { 0xcb, 0xee });
        gbc.writeMem(0x3250, { 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xa4df);
        EXPECT(gbc.pc(), 0x2764);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EE 010C
        gbc.setState(0xbffd, 0xecb3, 0x2750, 0xc43d, 0xfb4, 0xa107, 0x0, 0x1);
        gbc.writeMem(0xa107, { 0x1d });
        gbc.writeMem(0xbffd, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xecb3);
        EXPECT(gbc.pc(), 0xbfff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa107), 0x3d);
        EXPECT(gbc.readMem(0xbffd), 0xcb);
        EXPECT(gbc.readMem(0xbffe), 0xee);
        // CB EE 010D
        gbc.setState(0x9167, 0x4d4d, 0x7ed0, 0x44e9, 0x331c, 0x1da, 0x0, 0x0);
        gbc.writeMem(0x1da, { 0xb9 });
        gbc.writeMem(0x9167, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x4d4d);
        EXPECT(gbc.pc(), 0x9169);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9167), 0xcb);
        EXPECT(gbc.readMem(0x9168), 0xee);
        // CB EE 010E
        gbc.setState(0x544, 0xd3c6, 0x9140, 0xaa1b, 0x4109, 0x9e60, 0x0, 0x0);
        gbc.writeMem(0x544, { 0xcb, 0xee });
        gbc.writeMem(0x9e60, { 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xd3c6);
        EXPECT(gbc.pc(), 0x546);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e60), 0x7d);
        // CB EE 010F
        gbc.setState(0x1903, 0x6a8f, 0x4f10, 0x79ca, 0xfac6, 0xce3b, 0x1, 0x0);
        gbc.writeMem(0x1903, { 0xcb, 0xee });
        gbc.writeMem(0xce3b, { 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x6a8f);
        EXPECT(gbc.pc(), 0x1905);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce3b), 0xe5);
        // CB EE 0110
        gbc.setState(0x4a6b, 0x72b7, 0xb9f0, 0x6432, 0x928b, 0xf15f, 0x1, 0x0);
        gbc.writeMem(0x4a6b, { 0xcb, 0xee });
        gbc.writeMem(0xf15f, { 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x72b7);
        EXPECT(gbc.pc(), 0x4a6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf15f), 0xb4);
        // CB EE 0111
        gbc.setState(0x3e4c, 0xb4b9, 0x2900, 0x4afb, 0x9c60, 0xea5f, 0x0, 0x1);
        gbc.writeMem(0x3e4c, { 0xcb, 0xee });
        gbc.writeMem(0xea5f, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xb4b9);
        EXPECT(gbc.pc(), 0x3e4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea5f), 0xf9);
        // CB EE 0113
        gbc.setState(0xd0a, 0x8fd, 0x43c0, 0x44d5, 0x687, 0xf0, 0x0, 0x0);
        gbc.writeMem(0xf0, { 0xb0 });
        gbc.writeMem(0xd0a, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x8fd);
        EXPECT(gbc.pc(), 0xd0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EE 0114
        gbc.setState(0x4f3e, 0xb77e, 0x2590, 0xeb34, 0x9f63, 0xb6fc, 0x1, 0x0);
        gbc.writeMem(0x4f3e, { 0xcb, 0xee });
        gbc.writeMem(0xb6fc, { 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xb77e);
        EXPECT(gbc.pc(), 0x4f40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6fc), 0x7c);
        // CB EE 0115
        gbc.setState(0xc5a7, 0x1f8, 0x3820, 0xb4af, 0x8460, 0x8f87, 0x0, 0x1);
        gbc.writeMem(0x8f87, { 0xb6 });
        gbc.writeMem(0xc5a7, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x1f8);
        EXPECT(gbc.pc(), 0xc5a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f87), 0xb6);
        EXPECT(gbc.readMem(0xc5a7), 0xcb);
        EXPECT(gbc.readMem(0xc5a8), 0xee);
        // CB EE 0116
        gbc.setState(0xca6f, 0xeac9, 0x2460, 0x8678, 0xd1a2, 0xb080, 0x1, 0x1);
        gbc.writeMem(0xb080, { 0x86 });
        gbc.writeMem(0xca6f, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xeac9);
        EXPECT(gbc.pc(), 0xca71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb080), 0xa6);
        EXPECT(gbc.readMem(0xca6f), 0xcb);
        EXPECT(gbc.readMem(0xca70), 0xee);
        // CB EE 0117
        gbc.setState(0x8ff8, 0xdd15, 0xf270, 0xadb, 0xbcc0, 0x4c98, 0x0, 0x0);
        gbc.writeMem(0x4c98, { 0xf1 });
        gbc.writeMem(0x8ff8, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xdd15);
        EXPECT(gbc.pc(), 0x8ffa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ff8), 0xcb);
        EXPECT(gbc.readMem(0x8ff9), 0xee);
        // CB EE 0118
        gbc.setState(0x2eb4, 0x289e, 0x3830, 0x2aab, 0xc005, 0xd174, 0x0, 0x1);
        gbc.writeMem(0x2eb4, { 0xcb, 0xee });
        gbc.writeMem(0xd174, { 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x289e);
        EXPECT(gbc.pc(), 0x2eb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd174), 0x22);
        // CB EE 0119
        gbc.setState(0xd6f2, 0xd743, 0x6230, 0x32ec, 0x590a, 0x11e2, 0x1, 0x0);
        gbc.writeMem(0x11e2, { 0xe8 });
        gbc.writeMem(0xd6f2, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xd743);
        EXPECT(gbc.pc(), 0xd6f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6f2), 0xcb);
        EXPECT(gbc.readMem(0xd6f3), 0xee);
        // CB EE 011B
        gbc.setState(0x9542, 0x9f9e, 0x9440, 0x9533, 0xd24c, 0xf035, 0x0, 0x1);
        gbc.writeMem(0x9542, { 0xcb, 0xee });
        gbc.writeMem(0xf035, { 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x9f9e);
        EXPECT(gbc.pc(), 0x9544);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9542), 0xcb);
        EXPECT(gbc.readMem(0x9543), 0xee);
        EXPECT(gbc.readMem(0xf035), 0xf3);
        // CB EE 011C
        gbc.setState(0x3c3a, 0xa599, 0x4380, 0x3aa5, 0x754f, 0x846e, 0x0, 0x1);
        gbc.writeMem(0x3c3a, { 0xcb, 0xee });
        gbc.writeMem(0x846e, { 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xa599);
        EXPECT(gbc.pc(), 0x3c3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x846e), 0xe1);
        // CB EE 011D
        gbc.setState(0xc88f, 0x6878, 0xb1e0, 0x715f, 0xc559, 0x5cbf, 0x1, 0x0);
        gbc.writeMem(0x5cbf, { 0xf8 });
        gbc.writeMem(0xc88f, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x6878);
        EXPECT(gbc.pc(), 0xc891);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc88f), 0xcb);
        EXPECT(gbc.readMem(0xc890), 0xee);
        // CB EE 011E
        gbc.setState(0x9e5d, 0x160c, 0xd3e0, 0xaf4f, 0xc1eb, 0xf6b4, 0x1, 0x1);
        gbc.writeMem(0x9e5d, { 0xcb, 0xee });
        gbc.writeMem(0xf6b4, { 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x160c);
        EXPECT(gbc.pc(), 0x9e5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e5d), 0xcb);
        EXPECT(gbc.readMem(0x9e5e), 0xee);
        EXPECT(gbc.readMem(0xf6b4), 0x76);
        // CB EE 011F
        gbc.setState(0x9037, 0xad0e, 0xf4c0, 0x25a8, 0xa77b, 0xdc5a, 0x0, 0x0);
        gbc.writeMem(0x9037, { 0xcb, 0xee });
        gbc.writeMem(0xdc5a, { 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xad0e);
        EXPECT(gbc.pc(), 0x9039);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9037), 0xcb);
        EXPECT(gbc.readMem(0x9038), 0xee);
        EXPECT(gbc.readMem(0xdc5a), 0x24);
        // CB EE 0121
        gbc.setState(0x2cf5, 0x46a7, 0x8ac0, 0x4e14, 0x2ee6, 0xa957, 0x0, 0x1);
        gbc.writeMem(0x2cf5, { 0xcb, 0xee });
        gbc.writeMem(0xa957, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x46a7);
        EXPECT(gbc.pc(), 0x2cf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa957), 0x72);
        // CB EE 0122
        gbc.setState(0x8ab5, 0x6ab3, 0x2af0, 0xb095, 0x3dc9, 0xb6e4, 0x1, 0x0);
        gbc.writeMem(0x8ab5, { 0xcb, 0xee });
        gbc.writeMem(0xb6e4, { 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x6ab3);
        EXPECT(gbc.pc(), 0x8ab7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ab5), 0xcb);
        EXPECT(gbc.readMem(0x8ab6), 0xee);
        EXPECT(gbc.readMem(0xb6e4), 0x36);
        // CB EE 0123
        gbc.setState(0x352, 0x217, 0x9b70, 0xb8f7, 0x446b, 0x96cb, 0x1, 0x0);
        gbc.writeMem(0x352, { 0xcb, 0xee });
        gbc.writeMem(0x96cb, { 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x217);
        EXPECT(gbc.pc(), 0x354);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96cb), 0x7b);
        // CB EE 0124
        gbc.setState(0xbad7, 0x213, 0x2de0, 0x2db3, 0xc07d, 0x45db, 0x0, 0x0);
        gbc.writeMem(0x45db, { 0xaa });
        gbc.writeMem(0xbad7, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x213);
        EXPECT(gbc.pc(), 0xbad9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbad7), 0xcb);
        EXPECT(gbc.readMem(0xbad8), 0xee);
        // CB EE 0125
        gbc.setState(0x5d84, 0x86e4, 0x9ec0, 0x5f8f, 0x9213, 0x6547, 0x0, 0x0);
        gbc.writeMem(0x5d84, { 0xcb, 0xee });
        gbc.writeMem(0x6547, { 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x86e4);
        EXPECT(gbc.pc(), 0x5d86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EE 0128
        gbc.setState(0xbb81, 0x56c6, 0x3540, 0xf110, 0x4145, 0x2b45, 0x0, 0x0);
        gbc.writeMem(0x2b45, { 0xe7 });
        gbc.writeMem(0xbb81, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x56c6);
        EXPECT(gbc.pc(), 0xbb83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb81), 0xcb);
        EXPECT(gbc.readMem(0xbb82), 0xee);
        // CB EE 012B
        gbc.setState(0x9dce, 0xd3c8, 0x5f90, 0x73ef, 0x23da, 0xc154, 0x0, 0x0);
        gbc.writeMem(0x9dce, { 0xcb, 0xee });
        gbc.writeMem(0xc154, { 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xd3c8);
        EXPECT(gbc.pc(), 0x9dd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dce), 0xcb);
        EXPECT(gbc.readMem(0x9dcf), 0xee);
        EXPECT(gbc.readMem(0xc154), 0xe2);
        // CB EE 012C
        gbc.setState(0x50af, 0xef9c, 0xff20, 0x76e6, 0xd1bb, 0x71a5, 0x1, 0x1);
        gbc.writeMem(0x50af, { 0xcb, 0xee });
        gbc.writeMem(0x71a5, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xef9c);
        EXPECT(gbc.pc(), 0x50b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EE 012E
        gbc.setState(0x3048, 0x2313, 0xef60, 0x31ed, 0xadae, 0x8619, 0x0, 0x1);
        gbc.writeMem(0x3048, { 0xcb, 0xee });
        gbc.writeMem(0x8619, { 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x2313);
        EXPECT(gbc.pc(), 0x304a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8619), 0x38);
        // CB EE 0131
        gbc.setState(0x23b9, 0x6af8, 0xb30, 0x5f6b, 0xcfd7, 0x4d98, 0x0, 0x1);
        gbc.writeMem(0x23b9, { 0xcb, 0xee });
        gbc.writeMem(0x4d98, { 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x6af8);
        EXPECT(gbc.pc(), 0x23bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EE 0133
        gbc.setState(0x9888, 0x9b7, 0xb970, 0x8e06, 0x1725, 0x6dbd, 0x1, 0x0);
        gbc.writeMem(0x6dbd, { 0x22 });
        gbc.writeMem(0x9888, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x9b7);
        EXPECT(gbc.pc(), 0x988a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9888), 0xcb);
        EXPECT(gbc.readMem(0x9889), 0xee);
        // CB EE 0135
        gbc.setState(0x52ab, 0xaf10, 0x310, 0x95cf, 0x8fc1, 0x2227, 0x1, 0x0);
        gbc.writeMem(0x2227, { 0x32 });
        gbc.writeMem(0x52ab, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xaf10);
        EXPECT(gbc.pc(), 0x52ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EE 0136
        gbc.setState(0x7705, 0xdab7, 0xe220, 0xc386, 0x3afe, 0xb626, 0x0, 0x1);
        gbc.writeMem(0x7705, { 0xcb, 0xee });
        gbc.writeMem(0xb626, { 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xdab7);
        EXPECT(gbc.pc(), 0x7707);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb626), 0x69);
        // CB EE 0137
        gbc.setState(0x4d52, 0x3677, 0x3750, 0x999d, 0xbdf4, 0x8a7b, 0x1, 0x1);
        gbc.writeMem(0x4d52, { 0xcb, 0xee });
        gbc.writeMem(0x8a7b, { 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x3677);
        EXPECT(gbc.pc(), 0x4d54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a7b), 0xa4);
        // CB EE 0138
        gbc.setState(0x195b, 0xa9bb, 0x1740, 0xeda6, 0xb381, 0xd5c0, 0x0, 0x1);
        gbc.writeMem(0x195b, { 0xcb, 0xee });
        gbc.writeMem(0xd5c0, { 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xa9bb);
        EXPECT(gbc.pc(), 0x195d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5c0), 0x69);
        // CB EE 013A
        gbc.setState(0x28c5, 0x1604, 0x7820, 0x2def, 0x6ab9, 0x8d22, 0x0, 0x0);
        gbc.writeMem(0x28c5, { 0xcb, 0xee });
        gbc.writeMem(0x8d22, { 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x1604);
        EXPECT(gbc.pc(), 0x28c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d22), 0x77);
        // CB EE 013C
        gbc.setState(0x7833, 0x7b66, 0x3810, 0x50be, 0x47ed, 0xeb5, 0x1, 0x0);
        gbc.writeMem(0xeb5, { 0xaa });
        gbc.writeMem(0x7833, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x7b66);
        EXPECT(gbc.pc(), 0x7835);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EE 013D
        gbc.setState(0x9baf, 0xae08, 0xab90, 0xd9e6, 0x382b, 0xeb86, 0x1, 0x1);
        gbc.writeMem(0x9baf, { 0xcb, 0xee });
        gbc.writeMem(0xeb86, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xae08);
        EXPECT(gbc.pc(), 0x9bb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9baf), 0xcb);
        EXPECT(gbc.readMem(0x9bb0), 0xee);
        EXPECT(gbc.readMem(0xeb86), 0x71);
        // CB EE 013E
        gbc.setState(0xd35b, 0x87f1, 0xfce0, 0x7c14, 0xafcf, 0x7c81, 0x1, 0x1);
        gbc.writeMem(0x7c81, { 0xee });
        gbc.writeMem(0xd35b, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x87f1);
        EXPECT(gbc.pc(), 0xd35d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd35b), 0xcb);
        EXPECT(gbc.readMem(0xd35c), 0xee);
        // CB EE 013F
        gbc.setState(0x8534, 0x3b6e, 0xfc10, 0x4e2b, 0x35aa, 0xc777, 0x0, 0x0);
        gbc.writeMem(0x8534, { 0xcb, 0xee });
        gbc.writeMem(0xc777, { 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x3b6e);
        EXPECT(gbc.pc(), 0x8536);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8534), 0xcb);
        EXPECT(gbc.readMem(0x8535), 0xee);
        EXPECT(gbc.readMem(0xc777), 0x3d);
        // CB EE 0140
        gbc.setState(0x1b35, 0xd1c0, 0x2b60, 0x4da0, 0x827d, 0x967a, 0x0, 0x0);
        gbc.writeMem(0x1b35, { 0xcb, 0xee });
        gbc.writeMem(0x967a, { 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xd1c0);
        EXPECT(gbc.pc(), 0x1b37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x967a), 0xbb);
        // CB EE 0141
        gbc.setState(0xc977, 0x93f9, 0x6ea0, 0x8226, 0x2b43, 0x6624, 0x0, 0x0);
        gbc.writeMem(0x6624, { 0xec });
        gbc.writeMem(0xc977, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x93f9);
        EXPECT(gbc.pc(), 0xc979);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc977), 0xcb);
        EXPECT(gbc.readMem(0xc978), 0xee);
        // CB EE 0142
        gbc.setState(0x1caf, 0x64f4, 0xfe10, 0xf6ee, 0x808a, 0x7551, 0x1, 0x1);
        gbc.writeMem(0x1caf, { 0xcb, 0xee });
        gbc.writeMem(0x7551, { 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x64f4);
        EXPECT(gbc.pc(), 0x1cb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EE 0143
        gbc.setState(0x45a0, 0xd1c2, 0x8350, 0xe1b0, 0x38c1, 0x1e9a, 0x0, 0x1);
        gbc.writeMem(0x1e9a, { 0x25 });
        gbc.writeMem(0x45a0, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xd1c2);
        EXPECT(gbc.pc(), 0x45a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EE 0144
        gbc.setState(0x92ff, 0x4489, 0x5f90, 0xc66a, 0xe62, 0x69f3, 0x0, 0x1);
        gbc.writeMem(0x69f3, { 0x6b });
        gbc.writeMem(0x92ff, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x4489);
        EXPECT(gbc.pc(), 0x9301);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92ff), 0xcb);
        EXPECT(gbc.readMem(0x9300), 0xee);
        // CB EE 0146
        gbc.setState(0x4b0e, 0x15b7, 0xb30, 0xe39d, 0x9f9a, 0xec08, 0x1, 0x1);
        gbc.writeMem(0x4b0e, { 0xcb, 0xee });
        gbc.writeMem(0xec08, { 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x15b7);
        EXPECT(gbc.pc(), 0x4b10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec08), 0x31);
        // CB EE 0147
        gbc.setState(0x56a9, 0x40ce, 0x80f0, 0x52c0, 0x85c6, 0x4370, 0x0, 0x1);
        gbc.writeMem(0x4370, { 0x7b });
        gbc.writeMem(0x56a9, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x40ce);
        EXPECT(gbc.pc(), 0x56ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EE 0148
        gbc.setState(0xcaf2, 0x9500, 0x2a50, 0x1303, 0xac1c, 0xd5d9, 0x1, 0x0);
        gbc.writeMem(0xcaf2, { 0xcb, 0xee });
        gbc.writeMem(0xd5d9, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x9500);
        EXPECT(gbc.pc(), 0xcaf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcaf2), 0xcb);
        EXPECT(gbc.readMem(0xcaf3), 0xee);
        EXPECT(gbc.readMem(0xd5d9), 0x22);
        // CB EE 0149
        gbc.setState(0x63c2, 0x47f8, 0xcd40, 0x8298, 0x9592, 0xccde, 0x1, 0x0);
        gbc.writeMem(0x63c2, { 0xcb, 0xee });
        gbc.writeMem(0xccde, { 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x47f8);
        EXPECT(gbc.pc(), 0x63c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccde), 0x60);
        // CB EE 014A
        gbc.setState(0xa905, 0xfd5c, 0x4470, 0x88f, 0x92a7, 0x675c, 0x1, 0x1);
        gbc.writeMem(0x675c, { 0xf0 });
        gbc.writeMem(0xa905, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xfd5c);
        EXPECT(gbc.pc(), 0xa907);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa905), 0xcb);
        EXPECT(gbc.readMem(0xa906), 0xee);
        // CB EE 014B
        gbc.setState(0x6da0, 0xc5c7, 0x86d0, 0x1bcb, 0x1698, 0x529e, 0x1, 0x1);
        gbc.writeMem(0x529e, { 0x28 });
        gbc.writeMem(0x6da0, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xc5c7);
        EXPECT(gbc.pc(), 0x6da2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EE 014C
        gbc.setState(0xdbc4, 0xbd28, 0x2dc0, 0x828d, 0x3b68, 0x8437, 0x1, 0x1);
        gbc.writeMem(0x8437, { 0xbb });
        gbc.writeMem(0xdbc4, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xbd28);
        EXPECT(gbc.pc(), 0xdbc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8437), 0xbb);
        EXPECT(gbc.readMem(0xdbc4), 0xcb);
        EXPECT(gbc.readMem(0xdbc5), 0xee);
        // CB EE 014D
        gbc.setState(0x625f, 0xf7bc, 0x9240, 0x2a4, 0x1a74, 0xb4e9, 0x0, 0x0);
        gbc.writeMem(0x625f, { 0xcb, 0xee });
        gbc.writeMem(0xb4e9, { 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xf7bc);
        EXPECT(gbc.pc(), 0x6261);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4e9), 0xa9);
        // CB EE 0151
        gbc.setState(0xc835, 0x250a, 0x84c0, 0x465a, 0x7d0d, 0x54f5, 0x1, 0x0);
        gbc.writeMem(0x54f5, { 0x35 });
        gbc.writeMem(0xc835, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x250a);
        EXPECT(gbc.pc(), 0xc837);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc835), 0xcb);
        EXPECT(gbc.readMem(0xc836), 0xee);
        // CB EE 0152
        gbc.setState(0xe997, 0xc000, 0x2320, 0xe862, 0x4554, 0x1b9f, 0x0, 0x0);
        gbc.writeMem(0x1b9f, { 0xb3 });
        gbc.writeMem(0xe997, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xc000);
        EXPECT(gbc.pc(), 0xe999);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe997), 0xcb);
        EXPECT(gbc.readMem(0xe998), 0xee);
        // CB EE 0154
        gbc.setState(0x49da, 0x8e5a, 0x640, 0x3a51, 0xa256, 0xd8ec, 0x1, 0x1);
        gbc.writeMem(0x49da, { 0xcb, 0xee });
        gbc.writeMem(0xd8ec, { 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x8e5a);
        EXPECT(gbc.pc(), 0x49dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8ec), 0xe7);
        // CB EE 0155
        gbc.setState(0x35df, 0xb8e7, 0x5200, 0x67ce, 0x9ad0, 0xb82a, 0x1, 0x0);
        gbc.writeMem(0x35df, { 0xcb, 0xee });
        gbc.writeMem(0xb82a, { 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xb8e7);
        EXPECT(gbc.pc(), 0x35e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb82a), 0xa2);
        // CB EE 0156
        gbc.setState(0x3b12, 0xc6a9, 0xc200, 0x1255, 0x271e, 0xae16, 0x0, 0x1);
        gbc.writeMem(0x3b12, { 0xcb, 0xee });
        gbc.writeMem(0xae16, { 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xc6a9);
        EXPECT(gbc.pc(), 0x3b14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae16), 0xe2);
        // CB EE 0157
        gbc.setState(0x963f, 0x7d78, 0x980, 0x94fa, 0x93f8, 0x5d40, 0x1, 0x0);
        gbc.writeMem(0x5d40, { 0xa3 });
        gbc.writeMem(0x963f, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x7d78);
        EXPECT(gbc.pc(), 0x9641);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x963f), 0xcb);
        EXPECT(gbc.readMem(0x9640), 0xee);
        // CB EE 0159
        gbc.setState(0xa2f, 0xb66c, 0xb690, 0xa0b8, 0x4aea, 0xa2d7, 0x0, 0x1);
        gbc.writeMem(0xa2f, { 0xcb, 0xee });
        gbc.writeMem(0xa2d7, { 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xb66c);
        EXPECT(gbc.pc(), 0xa31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2d7), 0xb2);
        // CB EE 015A
        gbc.setState(0x4736, 0x3422, 0xe0c0, 0xb91b, 0x3e94, 0x3100, 0x1, 0x1);
        gbc.writeMem(0x3100, { 0xae });
        gbc.writeMem(0x4736, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x3422);
        EXPECT(gbc.pc(), 0x4738);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EE 015B
        gbc.setState(0xe115, 0x7863, 0x9280, 0x2e04, 0x4e62, 0x4362, 0x1, 0x1);
        gbc.writeMem(0x4362, { 0xe8 });
        gbc.writeMem(0xe115, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x7863);
        EXPECT(gbc.pc(), 0xe117);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe115), 0xcb);
        EXPECT(gbc.readMem(0xe116), 0xee);
        // CB EE 015C
        gbc.setState(0x6311, 0x8070, 0x8850, 0x7393, 0xb86, 0x6e9b, 0x1, 0x0);
        gbc.writeMem(0x6311, { 0xcb, 0xee });
        gbc.writeMem(0x6e9b, { 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x8070);
        EXPECT(gbc.pc(), 0x6313);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EE 015D
        gbc.setState(0x43f0, 0x790, 0xb6f0, 0xb6c5, 0xb3c4, 0xf758, 0x1, 0x1);
        gbc.writeMem(0x43f0, { 0xcb, 0xee });
        gbc.writeMem(0xf758, { 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x790);
        EXPECT(gbc.pc(), 0x43f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf758), 0xf4);
        // CB EE 015F
        gbc.setState(0x2d6c, 0xa544, 0x3a80, 0xef03, 0xcbaf, 0x5b6c, 0x0, 0x1);
        gbc.writeMem(0x2d6c, { 0xcb, 0xee });
        gbc.writeMem(0x5b6c, { 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xa544);
        EXPECT(gbc.pc(), 0x2d6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EE 0162
        gbc.setState(0xb878, 0x8f78, 0x7e80, 0xf4ab, 0xb047, 0x5c78, 0x1, 0x0);
        gbc.writeMem(0x5c78, { 0xfc });
        gbc.writeMem(0xb878, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x8f78);
        EXPECT(gbc.pc(), 0xb87a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb878), 0xcb);
        EXPECT(gbc.readMem(0xb879), 0xee);
        // CB EE 0164
        gbc.setState(0x5239, 0xd5b1, 0x590, 0xcdf0, 0x8e35, 0x952c, 0x1, 0x0);
        gbc.writeMem(0x5239, { 0xcb, 0xee });
        gbc.writeMem(0x952c, { 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xd5b1);
        EXPECT(gbc.pc(), 0x523b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x952c), 0x24);
        // CB EE 0165
        gbc.setState(0xb5ed, 0x57b9, 0x5b40, 0x6bed, 0x623d, 0x17ff, 0x0, 0x1);
        gbc.writeMem(0x17ff, { 0x76 });
        gbc.writeMem(0xb5ed, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x57b9);
        EXPECT(gbc.pc(), 0xb5ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5ed), 0xcb);
        EXPECT(gbc.readMem(0xb5ee), 0xee);
        // CB EE 0166
        gbc.setState(0xb275, 0xcc73, 0x97b0, 0x7688, 0x1be8, 0xa225, 0x0, 0x0);
        gbc.writeMem(0xa225, { 0xa6 });
        gbc.writeMem(0xb275, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xcc73);
        EXPECT(gbc.pc(), 0xb277);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa225), 0xa6);
        EXPECT(gbc.readMem(0xb275), 0xcb);
        EXPECT(gbc.readMem(0xb276), 0xee);
        // CB EE 0167
        gbc.setState(0x3f36, 0xdc42, 0xc590, 0x513, 0x75e2, 0xb294, 0x0, 0x0);
        gbc.writeMem(0x3f36, { 0xcb, 0xee });
        gbc.writeMem(0xb294, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xdc42);
        EXPECT(gbc.pc(), 0x3f38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb294), 0xb3);
        // CB EE 0168
        gbc.setState(0xc0be, 0x7998, 0x3fc0, 0x67bc, 0x237d, 0x2b67, 0x1, 0x1);
        gbc.writeMem(0x2b67, { 0x72 });
        gbc.writeMem(0xc0be, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x7998);
        EXPECT(gbc.pc(), 0xc0c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0be), 0xcb);
        EXPECT(gbc.readMem(0xc0bf), 0xee);
        // CB EE 016A
        gbc.setState(0x4f3d, 0x9c2e, 0xb700, 0xa55a, 0x3dfa, 0xebed, 0x0, 0x1);
        gbc.writeMem(0x4f3d, { 0xcb, 0xee });
        gbc.writeMem(0xebed, { 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x9c2e);
        EXPECT(gbc.pc(), 0x4f3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebed), 0xbf);
        // CB EE 016B
        gbc.setState(0x7ec8, 0xa841, 0x6bc0, 0x98fd, 0xff0b, 0xa600, 0x1, 0x0);
        gbc.writeMem(0x7ec8, { 0xcb, 0xee });
        gbc.writeMem(0xa600, { 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xa841);
        EXPECT(gbc.pc(), 0x7eca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa600), 0x33);
        // CB EE 016C
        gbc.setState(0xed1e, 0x563b, 0x5790, 0x2432, 0xa7dc, 0xc174, 0x0, 0x0);
        gbc.writeMem(0xc174, { 0xf4 });
        gbc.writeMem(0xed1e, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x563b);
        EXPECT(gbc.pc(), 0xed20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc174), 0xf4);
        EXPECT(gbc.readMem(0xed1e), 0xcb);
        EXPECT(gbc.readMem(0xed1f), 0xee);
        // CB EE 016D
        gbc.setState(0x5248, 0x4d5, 0x75a0, 0x2594, 0xd638, 0xb26c, 0x1, 0x0);
        gbc.writeMem(0x5248, { 0xcb, 0xee });
        gbc.writeMem(0xb26c, { 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x4d5);
        EXPECT(gbc.pc(), 0x524a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb26c), 0xa3);
        // CB EE 016E
        gbc.setState(0x2243, 0x4445, 0xd390, 0xfe10, 0xa529, 0x9e0c, 0x0, 0x0);
        gbc.writeMem(0x2243, { 0xcb, 0xee });
        gbc.writeMem(0x9e0c, { 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x4445);
        EXPECT(gbc.pc(), 0x2245);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e0c), 0x7a);
        // CB EE 0172
        gbc.setState(0x4da6, 0x77f3, 0xcd60, 0x27c6, 0x949c, 0xbb6c, 0x1, 0x1);
        gbc.writeMem(0x4da6, { 0xcb, 0xee });
        gbc.writeMem(0xbb6c, { 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x77f3);
        EXPECT(gbc.pc(), 0x4da8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb6c), 0xea);
        // CB EE 0173
        gbc.setState(0x6901, 0x8594, 0x1750, 0xfffa, 0xcdd, 0xc346, 0x1, 0x0);
        gbc.writeMem(0x6901, { 0xcb, 0xee });
        gbc.writeMem(0xc346, { 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x8594);
        EXPECT(gbc.pc(), 0x6903);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc346), 0x3c);
        // CB EE 0174
        gbc.setState(0xc916, 0xdd80, 0x4420, 0x3215, 0x4214, 0xf590, 0x0, 0x0);
        gbc.writeMem(0xc916, { 0xcb, 0xee });
        gbc.writeMem(0xf590, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xdd80);
        EXPECT(gbc.pc(), 0xc918);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc916), 0xcb);
        EXPECT(gbc.readMem(0xc917), 0xee);
        EXPECT(gbc.readMem(0xf590), 0x6a);
        // CB EE 0175
        gbc.setState(0x68d0, 0x75ca, 0x9c70, 0xd44c, 0x662a, 0xbb0f, 0x0, 0x0);
        gbc.writeMem(0x68d0, { 0xcb, 0xee });
        gbc.writeMem(0xbb0f, { 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x75ca);
        EXPECT(gbc.pc(), 0x68d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb0f), 0x7c);
        // CB EE 0176
        gbc.setState(0xba96, 0x68df, 0xcf90, 0x809a, 0xa23b, 0x56be, 0x1, 0x0);
        gbc.writeMem(0x56be, { 0x23 });
        gbc.writeMem(0xba96, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x68df);
        EXPECT(gbc.pc(), 0xba98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba96), 0xcb);
        EXPECT(gbc.readMem(0xba97), 0xee);
        // CB EE 0177
        gbc.setState(0x5b27, 0xd054, 0x6d60, 0x6b67, 0x1fbf, 0x22, 0x1, 0x0);
        gbc.writeMem(0x22, { 0xab });
        gbc.writeMem(0x5b27, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xd054);
        EXPECT(gbc.pc(), 0x5b29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EE 0178
        gbc.setState(0xaa7, 0x919d, 0x2780, 0xad1f, 0xc21c, 0xe5cd, 0x0, 0x1);
        gbc.writeMem(0xaa7, { 0xcb, 0xee });
        gbc.writeMem(0xe5cd, { 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x919d);
        EXPECT(gbc.pc(), 0xaa9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5cd), 0x2f);
        // CB EE 0179
        gbc.setState(0xa801, 0x24e4, 0xef60, 0xd3e7, 0x6913, 0xdcbc, 0x1, 0x1);
        gbc.writeMem(0xa801, { 0xcb, 0xee });
        gbc.writeMem(0xdcbc, { 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x24e4);
        EXPECT(gbc.pc(), 0xa803);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa801), 0xcb);
        EXPECT(gbc.readMem(0xa802), 0xee);
        EXPECT(gbc.readMem(0xdcbc), 0xf7);
        // CB EE 017A
        gbc.setState(0xb24a, 0xf61e, 0x9050, 0x15b8, 0xfdba, 0x6f74, 0x1, 0x0);
        gbc.writeMem(0x6f74, { 0xf8 });
        gbc.writeMem(0xb24a, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xf61e);
        EXPECT(gbc.pc(), 0xb24c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb24a), 0xcb);
        EXPECT(gbc.readMem(0xb24b), 0xee);
        // CB EE 017B
        gbc.setState(0xb2, 0x5ec9, 0x20e0, 0xb11a, 0x48dc, 0x33e3, 0x1, 0x0);
        gbc.writeMem(0xb2, { 0xcb, 0xee });
        gbc.writeMem(0x33e3, { 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x5ec9);
        EXPECT(gbc.pc(), 0xb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EE 017C
        gbc.setState(0x7e06, 0x3657, 0x5160, 0xc0b8, 0x3676, 0xde04, 0x0, 0x1);
        gbc.writeMem(0x7e06, { 0xcb, 0xee });
        gbc.writeMem(0xde04, { 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x3657);
        EXPECT(gbc.pc(), 0x7e08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde04), 0x3a);
        // CB EE 017D
        gbc.setState(0x91b5, 0x5583, 0x2560, 0x8770, 0x1732, 0x32db, 0x0, 0x0);
        gbc.writeMem(0x32db, { 0x64 });
        gbc.writeMem(0x91b5, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x5583);
        EXPECT(gbc.pc(), 0x91b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91b5), 0xcb);
        EXPECT(gbc.readMem(0x91b6), 0xee);
        // CB EE 017E
        gbc.setState(0x79a5, 0xe2b7, 0x73d0, 0xd65f, 0x9917, 0xe73c, 0x0, 0x1);
        gbc.writeMem(0x79a5, { 0xcb, 0xee });
        gbc.writeMem(0xe73c, { 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xe2b7);
        EXPECT(gbc.pc(), 0x79a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe73c), 0xa4);
        // CB EE 017F
        gbc.setState(0x1888, 0xcffb, 0x6dc0, 0xa05a, 0x2c2b, 0x6b79, 0x1, 0x0);
        gbc.writeMem(0x1888, { 0xcb, 0xee });
        gbc.writeMem(0x6b79, { 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xcffb);
        EXPECT(gbc.pc(), 0x188a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EE 0180
        gbc.setState(0xa68d, 0x36d6, 0x5c00, 0xf0fb, 0xceee, 0xf28c, 0x0, 0x0);
        gbc.writeMem(0xa68d, { 0xcb, 0xee });
        gbc.writeMem(0xf28c, { 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x36d6);
        EXPECT(gbc.pc(), 0xa68f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa68d), 0xcb);
        EXPECT(gbc.readMem(0xa68e), 0xee);
        EXPECT(gbc.readMem(0xf28c), 0xfd);
        // CB EE 0181
        gbc.setState(0x9fd6, 0xd7c5, 0x690, 0xbd40, 0x4a7f, 0x3d8, 0x0, 0x1);
        gbc.writeMem(0x3d8, { 0x2a });
        gbc.writeMem(0x9fd6, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xd7c5);
        EXPECT(gbc.pc(), 0x9fd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fd6), 0xcb);
        EXPECT(gbc.readMem(0x9fd7), 0xee);
        // CB EE 0182
        gbc.setState(0x178f, 0xfa44, 0xcee0, 0xd8e3, 0x47e6, 0xf80b, 0x1, 0x1);
        gbc.writeMem(0x178f, { 0xcb, 0xee });
        gbc.writeMem(0xf80b, { 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xfa44);
        EXPECT(gbc.pc(), 0x1791);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf80b), 0x7f);
        // CB EE 0183
        gbc.setState(0x5717, 0x297f, 0xfe80, 0xaa5d, 0x3567, 0xc76, 0x1, 0x0);
        gbc.writeMem(0xc76, { 0x6f });
        gbc.writeMem(0x5717, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x297f);
        EXPECT(gbc.pc(), 0x5719);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EE 0184
        gbc.setState(0x2694, 0x8a57, 0xf3e0, 0xcda2, 0xf89f, 0xd31a, 0x0, 0x1);
        gbc.writeMem(0x2694, { 0xcb, 0xee });
        gbc.writeMem(0xd31a, { 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x8a57);
        EXPECT(gbc.pc(), 0x2696);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd31a), 0x64);
        // CB EE 0185
        gbc.setState(0x118f, 0x8bcb, 0x180, 0x240e, 0x8ce2, 0xffbb, 0x1, 0x1);
        gbc.writeMem(0x118f, { 0xcb, 0xee });
        gbc.writeMem(0xffbb, { 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x8bcb);
        EXPECT(gbc.pc(), 0x1191);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffbb), 0x22);
        // CB EE 0186
        gbc.setState(0xd95e, 0x525e, 0x5a40, 0x142f, 0x5277, 0xa370, 0x1, 0x1);
        gbc.writeMem(0xa370, { 0x4f });
        gbc.writeMem(0xd95e, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x525e);
        EXPECT(gbc.pc(), 0xd960);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa370), 0x6f);
        EXPECT(gbc.readMem(0xd95e), 0xcb);
        EXPECT(gbc.readMem(0xd95f), 0xee);
        // CB EE 0188
        gbc.setState(0x89e9, 0xb3c6, 0x33e0, 0xd8b8, 0xb115, 0xb28d, 0x1, 0x0);
        gbc.writeMem(0x89e9, { 0xcb, 0xee });
        gbc.writeMem(0xb28d, { 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xb3c6);
        EXPECT(gbc.pc(), 0x89eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89e9), 0xcb);
        EXPECT(gbc.readMem(0x89ea), 0xee);
        EXPECT(gbc.readMem(0xb28d), 0xe1);
        // CB EE 0189
        gbc.setState(0x7afa, 0x10c4, 0x3b90, 0xb2dc, 0xdb1d, 0x4a8b, 0x0, 0x0);
        gbc.writeMem(0x4a8b, { 0xe5 });
        gbc.writeMem(0x7afa, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x10c4);
        EXPECT(gbc.pc(), 0x7afc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EE 018A
        gbc.setState(0x712e, 0x7c61, 0x8120, 0x3b15, 0xcbaa, 0xd315, 0x1, 0x0);
        gbc.writeMem(0x712e, { 0xcb, 0xee });
        gbc.writeMem(0xd315, { 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x7c61);
        EXPECT(gbc.pc(), 0x7130);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd315), 0xf1);
        // CB EE 018B
        gbc.setState(0x7f6b, 0x368c, 0xe810, 0x55a9, 0x9c98, 0x134d, 0x0, 0x0);
        gbc.writeMem(0x134d, { 0x21 });
        gbc.writeMem(0x7f6b, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x368c);
        EXPECT(gbc.pc(), 0x7f6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EE 018C
        gbc.setState(0x832b, 0xd2f9, 0x4560, 0xc5e8, 0xc9cf, 0xd0c8, 0x1, 0x1);
        gbc.writeMem(0x832b, { 0xcb, 0xee });
        gbc.writeMem(0xd0c8, { 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xd2f9);
        EXPECT(gbc.pc(), 0x832d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x832b), 0xcb);
        EXPECT(gbc.readMem(0x832c), 0xee);
        EXPECT(gbc.readMem(0xd0c8), 0xfa);
        // CB EE 018E
        gbc.setState(0x5a68, 0xf40a, 0xe5b0, 0x48bd, 0xe86b, 0x7375, 0x1, 0x1);
        gbc.writeMem(0x5a68, { 0xcb, 0xee });
        gbc.writeMem(0x7375, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xf40a);
        EXPECT(gbc.pc(), 0x5a6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EE 018F
        gbc.setState(0x9882, 0x3a, 0x9090, 0x48a9, 0x2052, 0xb78e, 0x0, 0x0);
        gbc.writeMem(0x9882, { 0xcb, 0xee });
        gbc.writeMem(0xb78e, { 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x3a);
        EXPECT(gbc.pc(), 0x9884);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9882), 0xcb);
        EXPECT(gbc.readMem(0x9883), 0xee);
        EXPECT(gbc.readMem(0xb78e), 0x2f);
        // CB EE 0191
        gbc.setState(0x5784, 0xaad5, 0x8770, 0xba90, 0xeb2b, 0xf9b9, 0x1, 0x0);
        gbc.writeMem(0x5784, { 0xcb, 0xee });
        gbc.writeMem(0xf9b9, { 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xaad5);
        EXPECT(gbc.pc(), 0x5786);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf9b9), 0xe6);
        // CB EE 0192
        gbc.setState(0xa76b, 0x305a, 0x6250, 0xf64e, 0xcf3d, 0x13aa, 0x0, 0x0);
        gbc.writeMem(0x13aa, { 0x3f });
        gbc.writeMem(0xa76b, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x305a);
        EXPECT(gbc.pc(), 0xa76d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa76b), 0xcb);
        EXPECT(gbc.readMem(0xa76c), 0xee);
        // CB EE 0195
        gbc.setState(0x3769, 0x1ade, 0xae00, 0xfaf8, 0x8bef, 0xbc8e, 0x1, 0x1);
        gbc.writeMem(0x3769, { 0xcb, 0xee });
        gbc.writeMem(0xbc8e, { 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x1ade);
        EXPECT(gbc.pc(), 0x376b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc8e), 0x7a);
        // CB EE 0196
        gbc.setState(0xb25d, 0x388f, 0x1ee0, 0x9016, 0x2332, 0xc60f, 0x0, 0x0);
        gbc.writeMem(0xb25d, { 0xcb, 0xee });
        gbc.writeMem(0xc60f, { 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x388f);
        EXPECT(gbc.pc(), 0xb25f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb25d), 0xcb);
        EXPECT(gbc.readMem(0xb25e), 0xee);
        EXPECT(gbc.readMem(0xc60f), 0x28);
        // CB EE 0197
        gbc.setState(0x856d, 0xc922, 0x3a70, 0x63ab, 0x9e4f, 0xcc5d, 0x1, 0x1);
        gbc.writeMem(0x856d, { 0xcb, 0xee });
        gbc.writeMem(0xcc5d, { 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xc922);
        EXPECT(gbc.pc(), 0x856f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x856d), 0xcb);
        EXPECT(gbc.readMem(0x856e), 0xee);
        EXPECT(gbc.readMem(0xcc5d), 0xed);
        // CB EE 0199
        gbc.setState(0xda6d, 0xcec, 0x4b80, 0x1cca, 0x450f, 0xd645, 0x0, 0x1);
        gbc.writeMem(0xd645, { 0xae });
        gbc.writeMem(0xda6d, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xcec);
        EXPECT(gbc.pc(), 0xda6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd645), 0xae);
        EXPECT(gbc.readMem(0xda6d), 0xcb);
        EXPECT(gbc.readMem(0xda6e), 0xee);
        // CB EE 019B
        gbc.setState(0x8c16, 0x509d, 0x9670, 0x6a12, 0xaa5c, 0x95ac, 0x1, 0x0);
        gbc.writeMem(0x8c16, { 0xcb, 0xee });
        gbc.writeMem(0x95ac, { 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x509d);
        EXPECT(gbc.pc(), 0x8c18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c16), 0xcb);
        EXPECT(gbc.readMem(0x8c17), 0xee);
        EXPECT(gbc.readMem(0x95ac), 0x3d);
        // CB EE 019D
        gbc.setState(0x3288, 0x3744, 0xa7c0, 0xcddf, 0xa255, 0x9818, 0x0, 0x1);
        gbc.writeMem(0x3288, { 0xcb, 0xee });
        gbc.writeMem(0x9818, { 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x3744);
        EXPECT(gbc.pc(), 0x328a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9818), 0xf3);
        // CB EE 019E
        gbc.setState(0x4360, 0x4c71, 0xcce0, 0xa0fa, 0xa525, 0xd13f, 0x1, 0x1);
        gbc.writeMem(0x4360, { 0xcb, 0xee });
        gbc.writeMem(0xd13f, { 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x4c71);
        EXPECT(gbc.pc(), 0x4362);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd13f), 0xad);
        // CB EE 019F
        gbc.setState(0x636, 0x2de3, 0xc7c0, 0x788b, 0x2804, 0x4959, 0x1, 0x0);
        gbc.writeMem(0x636, { 0xcb, 0xee });
        gbc.writeMem(0x4959, { 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x2de3);
        EXPECT(gbc.pc(), 0x638);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EE 01A0
        gbc.setState(0x5c58, 0x4fd0, 0x54e0, 0x996a, 0x26b8, 0x626e, 0x0, 0x1);
        gbc.writeMem(0x5c58, { 0xcb, 0xee });
        gbc.writeMem(0x626e, { 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x4fd0);
        EXPECT(gbc.pc(), 0x5c5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EE 01A1
        gbc.setState(0x3cd1, 0xacc9, 0xf960, 0x8e50, 0x7702, 0x7cee, 0x0, 0x0);
        gbc.writeMem(0x3cd1, { 0xcb, 0xee });
        gbc.writeMem(0x7cee, { 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xacc9);
        EXPECT(gbc.pc(), 0x3cd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EE 01A4
        gbc.setState(0xdc97, 0xb727, 0x4040, 0x4cf4, 0x4644, 0xf82d, 0x1, 0x1);
        gbc.writeMem(0xdc97, { 0xcb, 0xee });
        gbc.writeMem(0xf82d, { 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xb727);
        EXPECT(gbc.pc(), 0xdc99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc97), 0xcb);
        EXPECT(gbc.readMem(0xdc98), 0xee);
        EXPECT(gbc.readMem(0xf82d), 0x6c);
        // CB EE 01A7
        gbc.setState(0xef8c, 0x6e87, 0x41f0, 0xba3c, 0xd4d2, 0xa297, 0x0, 0x1);
        gbc.writeMem(0xa297, { 0x9b });
        gbc.writeMem(0xef8c, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x6e87);
        EXPECT(gbc.pc(), 0xef8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa297), 0xbb);
        EXPECT(gbc.readMem(0xef8c), 0xcb);
        EXPECT(gbc.readMem(0xef8d), 0xee);
        // CB EE 01AA
        gbc.setState(0x292b, 0x93bd, 0x31c0, 0x179a, 0xfa2e, 0xabfa, 0x1, 0x0);
        gbc.writeMem(0x292b, { 0xcb, 0xee });
        gbc.writeMem(0xabfa, { 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x93bd);
        EXPECT(gbc.pc(), 0x292d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabfa), 0xa2);
        // CB EE 01AB
        gbc.setState(0x538, 0x8a5d, 0x2580, 0xcaff, 0x34e0, 0x837f, 0x1, 0x1);
        gbc.writeMem(0x538, { 0xcb, 0xee });
        gbc.writeMem(0x837f, { 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x8a5d);
        EXPECT(gbc.pc(), 0x53a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x837f), 0xe1);
        // CB EE 01AD
        gbc.setState(0x3880, 0xa63e, 0x30e0, 0x978b, 0x7164, 0xe9a1, 0x0, 0x0);
        gbc.writeMem(0x3880, { 0xcb, 0xee });
        gbc.writeMem(0xe9a1, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xa63e);
        EXPECT(gbc.pc(), 0x3882);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9a1), 0xf1);
        // CB EE 01AF
        gbc.setState(0x9559, 0xcce8, 0x4b40, 0xc9e1, 0xaa6c, 0x6f0a, 0x0, 0x0);
        gbc.writeMem(0x6f0a, { 0xea });
        gbc.writeMem(0x9559, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xcce8);
        EXPECT(gbc.pc(), 0x955b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9559), 0xcb);
        EXPECT(gbc.readMem(0x955a), 0xee);
        // CB EE 01B2
        gbc.setState(0x8779, 0x5ac, 0xa4d0, 0xefdc, 0x7cb8, 0xafef, 0x0, 0x1);
        gbc.writeMem(0x8779, { 0xcb, 0xee });
        gbc.writeMem(0xafef, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x5ac);
        EXPECT(gbc.pc(), 0x877b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8779), 0xcb);
        EXPECT(gbc.readMem(0x877a), 0xee);
        EXPECT(gbc.readMem(0xafef), 0x60);
        // CB EE 01B3
        gbc.setState(0xb7ec, 0xa16c, 0xa420, 0xc1b, 0x709, 0xc183, 0x1, 0x1);
        gbc.writeMem(0xb7ec, { 0xcb, 0xee });
        gbc.writeMem(0xc183, { 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xa16c);
        EXPECT(gbc.pc(), 0xb7ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7ec), 0xcb);
        EXPECT(gbc.readMem(0xb7ed), 0xee);
        EXPECT(gbc.readMem(0xc183), 0xeb);
        // CB EE 01B4
        gbc.setState(0x3696, 0xf7aa, 0xc1b0, 0x8414, 0x1ba4, 0xb474, 0x1, 0x0);
        gbc.writeMem(0x3696, { 0xcb, 0xee });
        gbc.writeMem(0xb474, { 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xf7aa);
        EXPECT(gbc.pc(), 0x3698);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb474), 0xfe);
        // CB EE 01B6
        gbc.setState(0xecbc, 0x6ff6, 0x1500, 0x11af, 0x3b0b, 0x79ba, 0x1, 0x0);
        gbc.writeMem(0x79ba, { 0x73 });
        gbc.writeMem(0xecbc, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x6ff6);
        EXPECT(gbc.pc(), 0xecbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecbc), 0xcb);
        EXPECT(gbc.readMem(0xecbd), 0xee);
        // CB EE 01B7
        gbc.setState(0x2968, 0xe2fc, 0x9c90, 0x5ec4, 0xfa68, 0xa82, 0x1, 0x1);
        gbc.writeMem(0xa82, { 0x35 });
        gbc.writeMem(0x2968, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xe2fc);
        EXPECT(gbc.pc(), 0x296a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EE 01B8
        gbc.setState(0x4af5, 0x4b69, 0xe1c0, 0x5cdb, 0x517f, 0xba6d, 0x0, 0x1);
        gbc.writeMem(0x4af5, { 0xcb, 0xee });
        gbc.writeMem(0xba6d, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x4b69);
        EXPECT(gbc.pc(), 0x4af7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba6d), 0x6a);
        // CB EE 01BC
        gbc.setState(0x2b6, 0xa83e, 0xca40, 0x4864, 0xff43, 0x6c5a, 0x0, 0x1);
        gbc.writeMem(0x2b6, { 0xcb, 0xee });
        gbc.writeMem(0x6c5a, { 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xa83e);
        EXPECT(gbc.pc(), 0x2b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EE 01BD
        gbc.setState(0xdf5b, 0x79d7, 0x5e20, 0x797b, 0x386a, 0xbbeb, 0x1, 0x1);
        gbc.writeMem(0xbbeb, { 0x6a });
        gbc.writeMem(0xdf5b, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x79d7);
        EXPECT(gbc.pc(), 0xdf5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbeb), 0x6a);
        EXPECT(gbc.readMem(0xdf5b), 0xcb);
        EXPECT(gbc.readMem(0xdf5c), 0xee);
        // CB EE 01BF
        gbc.setState(0x754a, 0xefa3, 0xca60, 0x8c3f, 0xe366, 0x6187, 0x0, 0x1);
        gbc.writeMem(0x6187, { 0x74 });
        gbc.writeMem(0x754a, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xefa3);
        EXPECT(gbc.pc(), 0x754c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EE 01C2
        gbc.setState(0xda80, 0x41e9, 0x38c0, 0xff8d, 0xae6e, 0x1945, 0x1, 0x1);
        gbc.writeMem(0x1945, { 0x6f });
        gbc.writeMem(0xda80, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x41e9);
        EXPECT(gbc.pc(), 0xda82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda80), 0xcb);
        EXPECT(gbc.readMem(0xda81), 0xee);
        // CB EE 01C3
        gbc.setState(0xe333, 0x858a, 0x7420, 0xf435, 0xdbcd, 0x3523, 0x1, 0x0);
        gbc.writeMem(0x3523, { 0x64 });
        gbc.writeMem(0xe333, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x858a);
        EXPECT(gbc.pc(), 0xe335);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe333), 0xcb);
        EXPECT(gbc.readMem(0xe334), 0xee);
        // CB EE 01C4
        gbc.setState(0xea83, 0xa97, 0x1670, 0x12b, 0x7082, 0xe78a, 0x0, 0x0);
        gbc.writeMem(0xe78a, { 0x34 });
        gbc.writeMem(0xea83, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xa97);
        EXPECT(gbc.pc(), 0xea85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe78a), 0x34);
        EXPECT(gbc.readMem(0xea83), 0xcb);
        EXPECT(gbc.readMem(0xea84), 0xee);
        // CB EE 01C5
        gbc.setState(0x1f5d, 0xd47e, 0x80d0, 0xc8ed, 0x1eb5, 0xaed8, 0x1, 0x1);
        gbc.writeMem(0x1f5d, { 0xcb, 0xee });
        gbc.writeMem(0xaed8, { 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xd47e);
        EXPECT(gbc.pc(), 0x1f5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaed8), 0xf7);
        // CB EE 01C7
        gbc.setState(0x46da, 0x3296, 0xe290, 0x88db, 0x66a7, 0xf6bb, 0x1, 0x0);
        gbc.writeMem(0x46da, { 0xcb, 0xee });
        gbc.writeMem(0xf6bb, { 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x3296);
        EXPECT(gbc.pc(), 0x46dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf6bb), 0xeb);
        // CB EE 01CA
        gbc.setState(0x8fc0, 0xc758, 0xbf00, 0x281f, 0x9cb, 0x3ddb, 0x0, 0x0);
        gbc.writeMem(0x3ddb, { 0x72 });
        gbc.writeMem(0x8fc0, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xc758);
        EXPECT(gbc.pc(), 0x8fc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fc0), 0xcb);
        EXPECT(gbc.readMem(0x8fc1), 0xee);
        // CB EE 01CE
        gbc.setState(0x9889, 0xbdfa, 0xc230, 0x474d, 0xb37, 0x1989, 0x1, 0x1);
        gbc.writeMem(0x1989, { 0x39 });
        gbc.writeMem(0x9889, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xbdfa);
        EXPECT(gbc.pc(), 0x988b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9889), 0xcb);
        EXPECT(gbc.readMem(0x988a), 0xee);
        // CB EE 01D0
        gbc.setState(0x4dcf, 0x1c4, 0x3fb0, 0x502f, 0x7a0b, 0x95ac, 0x1, 0x0);
        gbc.writeMem(0x4dcf, { 0xcb, 0xee });
        gbc.writeMem(0x95ac, { 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x1c4);
        EXPECT(gbc.pc(), 0x4dd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95ac), 0x3d);
        // CB EE 01D1
        gbc.setState(0x7361, 0xaba8, 0x40c0, 0xe4b7, 0xb697, 0xfcb7, 0x1, 0x0);
        gbc.writeMem(0x7361, { 0xcb, 0xee });
        gbc.writeMem(0xfcb7, { 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xaba8);
        EXPECT(gbc.pc(), 0x7363);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfcb7), 0x6b);
        // CB EE 01D2
        gbc.setState(0x3aba, 0xc429, 0xdcb0, 0xf8d5, 0x9535, 0xa282, 0x0, 0x0);
        gbc.writeMem(0x3aba, { 0xcb, 0xee });
        gbc.writeMem(0xa282, { 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xc429);
        EXPECT(gbc.pc(), 0x3abc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa282), 0x74);
        // CB EE 01D3
        gbc.setState(0xa91c, 0x78db, 0x94c0, 0xead4, 0xac4f, 0x3fba, 0x1, 0x0);
        gbc.writeMem(0x3fba, { 0x35 });
        gbc.writeMem(0xa91c, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x78db);
        EXPECT(gbc.pc(), 0xa91e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa91c), 0xcb);
        EXPECT(gbc.readMem(0xa91d), 0xee);
        // CB EE 01D4
        gbc.setState(0xd6c7, 0xd101, 0x7f30, 0x859, 0x18b7, 0xe92a, 0x1, 0x0);
        gbc.writeMem(0xd6c7, { 0xcb, 0xee });
        gbc.writeMem(0xe92a, { 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xd101);
        EXPECT(gbc.pc(), 0xd6c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6c7), 0xcb);
        EXPECT(gbc.readMem(0xd6c8), 0xee);
        EXPECT(gbc.readMem(0xe92a), 0x65);
        // CB EE 01D6
        gbc.setState(0xc2af, 0xa2d3, 0x3070, 0xb10a, 0x6e80, 0xc5fc, 0x1, 0x0);
        gbc.writeMem(0xc2af, { 0xcb, 0xee });
        gbc.writeMem(0xc5fc, { 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xa2d3);
        EXPECT(gbc.pc(), 0xc2b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2af), 0xcb);
        EXPECT(gbc.readMem(0xc2b0), 0xee);
        EXPECT(gbc.readMem(0xc5fc), 0xa2);
        // CB EE 01D7
        gbc.setState(0xc19f, 0x9653, 0xb50, 0xe211, 0xbaad, 0xed0a, 0x0, 0x0);
        gbc.writeMem(0xc19f, { 0xcb, 0xee });
        gbc.writeMem(0xed0a, { 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x9653);
        EXPECT(gbc.pc(), 0xc1a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc19f), 0xcb);
        EXPECT(gbc.readMem(0xc1a0), 0xee);
        EXPECT(gbc.readMem(0xed0a), 0x6e);
        // CB EE 01D8
        gbc.setState(0x67bc, 0xbd1, 0x8a70, 0x687, 0x4545, 0x1888, 0x1, 0x1);
        gbc.writeMem(0x1888, { 0xa1 });
        gbc.writeMem(0x67bc, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xbd1);
        EXPECT(gbc.pc(), 0x67be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EE 01D9
        gbc.setState(0xbac9, 0xee79, 0x9d70, 0x944c, 0xdcb7, 0xcf0d, 0x1, 0x1);
        gbc.writeMem(0xbac9, { 0xcb, 0xee });
        gbc.writeMem(0xcf0d, { 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xee79);
        EXPECT(gbc.pc(), 0xbacb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbac9), 0xcb);
        EXPECT(gbc.readMem(0xbaca), 0xee);
        EXPECT(gbc.readMem(0xcf0d), 0x63);
        // CB EE 01DE
        gbc.setState(0x1afb, 0xc99e, 0x4400, 0xf70, 0x4de1, 0xe3cf, 0x1, 0x0);
        gbc.writeMem(0x1afb, { 0xcb, 0xee });
        gbc.writeMem(0xe3cf, { 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xc99e);
        EXPECT(gbc.pc(), 0x1afd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3cf), 0xa4);
        // CB EE 01E0
        gbc.setState(0x583f, 0x807b, 0x30, 0xfef6, 0x987, 0x6551, 0x0, 0x0);
        gbc.writeMem(0x583f, { 0xcb, 0xee });
        gbc.writeMem(0x6551, { 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x807b);
        EXPECT(gbc.pc(), 0x5841);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EE 01E1
        gbc.setState(0x9de4, 0x66ba, 0x4f00, 0x385e, 0xacb0, 0xae6e, 0x0, 0x0);
        gbc.writeMem(0x9de4, { 0xcb, 0xee });
        gbc.writeMem(0xae6e, { 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x66ba);
        EXPECT(gbc.pc(), 0x9de6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9de4), 0xcb);
        EXPECT(gbc.readMem(0x9de5), 0xee);
        EXPECT(gbc.readMem(0xae6e), 0xe6);
        // CB EE 01E2
        gbc.setState(0xa1f9, 0x2f2a, 0x8b80, 0xc68a, 0xacc4, 0x8ece, 0x1, 0x0);
        gbc.writeMem(0x8ece, { 0x85 });
        gbc.writeMem(0xa1f9, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x2f2a);
        EXPECT(gbc.pc(), 0xa1fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ece), 0xa5);
        EXPECT(gbc.readMem(0xa1f9), 0xcb);
        EXPECT(gbc.readMem(0xa1fa), 0xee);
        // CB EE 01E3
        gbc.setState(0x9d77, 0x4798, 0x5fd0, 0x425a, 0x3b76, 0xf28b, 0x0, 0x1);
        gbc.writeMem(0x9d77, { 0xcb, 0xee });
        gbc.writeMem(0xf28b, { 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x4798);
        EXPECT(gbc.pc(), 0x9d79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d77), 0xcb);
        EXPECT(gbc.readMem(0x9d78), 0xee);
        EXPECT(gbc.readMem(0xf28b), 0x7a);
        // CB EE 01E4
        gbc.setState(0x2b62, 0xc681, 0xdd30, 0xaba2, 0xa612, 0xca31, 0x0, 0x0);
        gbc.writeMem(0x2b62, { 0xcb, 0xee });
        gbc.writeMem(0xca31, { 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xc681);
        EXPECT(gbc.pc(), 0x2b64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca31), 0x77);
        // CB EE 01E9
        gbc.setState(0x4520, 0x2df8, 0x2320, 0x1639, 0x6016, 0xaab1, 0x0, 0x1);
        gbc.writeMem(0x4520, { 0xcb, 0xee });
        gbc.writeMem(0xaab1, { 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x2df8);
        EXPECT(gbc.pc(), 0x4522);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaab1), 0xb6);
        // CB EE 01EA
        gbc.setState(0x4e11, 0x2437, 0x3af0, 0xd2bc, 0xd92d, 0xe2e8, 0x0, 0x0);
        gbc.writeMem(0x4e11, { 0xcb, 0xee });
        gbc.writeMem(0xe2e8, { 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x2437);
        EXPECT(gbc.pc(), 0x4e13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2e8), 0xe2);
        // CB EE 01EB
        gbc.setState(0x7e07, 0xd24a, 0x8b80, 0xf70f, 0xabeb, 0x9cab, 0x0, 0x1);
        gbc.writeMem(0x7e07, { 0xcb, 0xee });
        gbc.writeMem(0x9cab, { 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xd24a);
        EXPECT(gbc.pc(), 0x7e09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cab), 0xf0);
        // CB EE 01EC
        gbc.setState(0xe92c, 0xb833, 0x7250, 0x10ba, 0xa7fd, 0x3962, 0x1, 0x1);
        gbc.writeMem(0x3962, { 0x2c });
        gbc.writeMem(0xe92c, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xb833);
        EXPECT(gbc.pc(), 0xe92e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe92c), 0xcb);
        EXPECT(gbc.readMem(0xe92d), 0xee);
        // CB EE 01ED
        gbc.setState(0xdc8e, 0x5983, 0xd6f0, 0xb2d3, 0xbed9, 0xc4c6, 0x1, 0x0);
        gbc.writeMem(0xc4c6, { 0x66 });
        gbc.writeMem(0xdc8e, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x5983);
        EXPECT(gbc.pc(), 0xdc90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4c6), 0x66);
        EXPECT(gbc.readMem(0xdc8e), 0xcb);
        EXPECT(gbc.readMem(0xdc8f), 0xee);
        // CB EE 01EE
        gbc.setState(0x538a, 0xdc22, 0xad60, 0x3551, 0x16fb, 0xf096, 0x1, 0x0);
        gbc.writeMem(0x538a, { 0xcb, 0xee });
        gbc.writeMem(0xf096, { 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xdc22);
        EXPECT(gbc.pc(), 0x538c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf096), 0x3d);
        // CB EE 01EF
        gbc.setState(0x12e, 0xe72b, 0xa5a0, 0x34b8, 0x80b5, 0xac09, 0x0, 0x1);
        gbc.writeMem(0x12e, { 0xcb, 0xee });
        gbc.writeMem(0xac09, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xe72b);
        EXPECT(gbc.pc(), 0x130);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac09), 0xb9);
        // CB EE 01F0
        gbc.setState(0xdc08, 0xa137, 0x7230, 0xa794, 0x8355, 0x7c02, 0x0, 0x1);
        gbc.writeMem(0x7c02, { 0x38 });
        gbc.writeMem(0xdc08, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xa137);
        EXPECT(gbc.pc(), 0xdc0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc08), 0xcb);
        EXPECT(gbc.readMem(0xdc09), 0xee);
        // CB EE 01F1
        gbc.setState(0xeaa7, 0x30ff, 0x2b50, 0x934c, 0xcacf, 0xbdce, 0x0, 0x1);
        gbc.writeMem(0xbdce, { 0xab });
        gbc.writeMem(0xeaa7, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x30ff);
        EXPECT(gbc.pc(), 0xeaa9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdce), 0xab);
        EXPECT(gbc.readMem(0xeaa7), 0xcb);
        EXPECT(gbc.readMem(0xeaa8), 0xee);
        // CB EE 01F2
        gbc.setState(0xcd3f, 0x8bea, 0xd2d0, 0x7538, 0x4fe2, 0x5cff, 0x0, 0x0);
        gbc.writeMem(0x5cff, { 0x68 });
        gbc.writeMem(0xcd3f, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x8bea);
        EXPECT(gbc.pc(), 0xcd41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd3f), 0xcb);
        EXPECT(gbc.readMem(0xcd40), 0xee);
        // CB EE 01F3
        gbc.setState(0x7777, 0x5dae, 0x1d0, 0xb17e, 0xd2bb, 0xcc34, 0x1, 0x0);
        gbc.writeMem(0x7777, { 0xcb, 0xee });
        gbc.writeMem(0xcc34, { 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x5dae);
        EXPECT(gbc.pc(), 0x7779);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc34), 0xa0);
        // CB EE 01F5
        gbc.setState(0x1ed1, 0xfe2, 0x1ef0, 0xc853, 0xea4c, 0x54bd, 0x1, 0x0);
        gbc.writeMem(0x1ed1, { 0xcb, 0xee });
        gbc.writeMem(0x54bd, { 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xfe2);
        EXPECT(gbc.pc(), 0x1ed3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EE 01F7
        gbc.setState(0xa6ef, 0xffe7, 0x5600, 0x20bb, 0x4f, 0xcb44, 0x0, 0x1);
        gbc.writeMem(0xa6ef, { 0xcb, 0xee });
        gbc.writeMem(0xcb44, { 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xffe7);
        EXPECT(gbc.pc(), 0xa6f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6ef), 0xcb);
        EXPECT(gbc.readMem(0xa6f0), 0xee);
        EXPECT(gbc.readMem(0xcb44), 0xfa);
        // CB EE 01F8
        gbc.setState(0xb93f, 0x1ce2, 0x7c10, 0x9d50, 0xda53, 0x23a3, 0x1, 0x1);
        gbc.writeMem(0x23a3, { 0xe0 });
        gbc.writeMem(0xb93f, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x1ce2);
        EXPECT(gbc.pc(), 0xb941);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb93f), 0xcb);
        EXPECT(gbc.readMem(0xb940), 0xee);
        // CB EE 01F9
        gbc.setState(0xb64a, 0xae57, 0x56b0, 0x4a09, 0x6901, 0xa788, 0x1, 0x1);
        gbc.writeMem(0xa788, { 0xbb });
        gbc.writeMem(0xb64a, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xae57);
        EXPECT(gbc.pc(), 0xb64c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa788), 0xbb);
        EXPECT(gbc.readMem(0xb64a), 0xcb);
        EXPECT(gbc.readMem(0xb64b), 0xee);
        // CB EE 01FA
        gbc.setState(0x4888, 0xada8, 0x5840, 0x92c4, 0xf97f, 0xb9b5, 0x0, 0x0);
        gbc.writeMem(0x4888, { 0xcb, 0xee });
        gbc.writeMem(0xb9b5, { 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xada8);
        EXPECT(gbc.pc(), 0x488a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9b5), 0xbe);
        // CB EE 01FB
        gbc.setState(0x40bc, 0xc516, 0x3720, 0xed, 0xe308, 0x5176, 0x0, 0x1);
        gbc.writeMem(0x40bc, { 0xcb, 0xee });
        gbc.writeMem(0x5176, { 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xc516);
        EXPECT(gbc.pc(), 0x40be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EE 01FC
        gbc.setState(0xba01, 0x4646, 0xbce0, 0x6381, 0x25c8, 0xb40f, 0x0, 0x0);
        gbc.writeMem(0xb40f, { 0x54 });
        gbc.writeMem(0xba01, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x4646);
        EXPECT(gbc.pc(), 0xba03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb40f), 0x74);
        EXPECT(gbc.readMem(0xba01), 0xcb);
        EXPECT(gbc.readMem(0xba02), 0xee);
        // CB EE 01FD
        gbc.setState(0xb10d, 0x7a96, 0xca50, 0x83f5, 0x1517, 0xd6be, 0x0, 0x1);
        gbc.writeMem(0xb10d, { 0xcb, 0xee });
        gbc.writeMem(0xd6be, { 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x7a96);
        EXPECT(gbc.pc(), 0xb10f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb10d), 0xcb);
        EXPECT(gbc.readMem(0xb10e), 0xee);
        EXPECT(gbc.readMem(0xd6be), 0x60);
        // CB EE 01FE
        gbc.setState(0xe6de, 0x6f9, 0x9290, 0x3763, 0x33fd, 0x2630, 0x1, 0x0);
        gbc.writeMem(0x2630, { 0x7a });
        gbc.writeMem(0xe6de, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x6f9);
        EXPECT(gbc.pc(), 0xe6e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6de), 0xcb);
        EXPECT(gbc.readMem(0xe6df), 0xee);
        // CB EE 01FF
        gbc.setState(0x2126, 0x2bf8, 0xe4f0, 0x15b8, 0x7c18, 0xb644, 0x0, 0x0);
        gbc.writeMem(0x2126, { 0xcb, 0xee });
        gbc.writeMem(0xb644, { 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x2bf8);
        EXPECT(gbc.pc(), 0x2128);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb644), 0xa7);
        // CB EE 0200
        gbc.setState(0x6ccb, 0x7570, 0xd060, 0x44c2, 0xb855, 0xfc18, 0x0, 0x0);
        gbc.writeMem(0x6ccb, { 0xcb, 0xee });
        gbc.writeMem(0xfc18, { 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x7570);
        EXPECT(gbc.pc(), 0x6ccd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfc18), 0xeb);
        // CB EE 0202
        gbc.setState(0xb898, 0x63af, 0x3b20, 0x9ae3, 0xd2f, 0x4e74, 0x0, 0x0);
        gbc.writeMem(0x4e74, { 0x22 });
        gbc.writeMem(0xb898, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x63af);
        EXPECT(gbc.pc(), 0xb89a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb898), 0xcb);
        EXPECT(gbc.readMem(0xb899), 0xee);
        // CB EE 0203
        gbc.setState(0xd90d, 0x2173, 0x91a0, 0x36d4, 0xdd3f, 0xa37e, 0x1, 0x1);
        gbc.writeMem(0xa37e, { 0x45 });
        gbc.writeMem(0xd90d, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x2173);
        EXPECT(gbc.pc(), 0xd90f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa37e), 0x65);
        EXPECT(gbc.readMem(0xd90d), 0xcb);
        EXPECT(gbc.readMem(0xd90e), 0xee);
        // CB EE 0204
        gbc.setState(0x7b26, 0xfa1, 0x2900, 0x4262, 0xc26b, 0xdf0e, 0x0, 0x0);
        gbc.writeMem(0x7b26, { 0xcb, 0xee });
        gbc.writeMem(0xdf0e, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xfa1);
        EXPECT(gbc.pc(), 0x7b28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf0e), 0xab);
        // CB EE 0205
        gbc.setState(0x1f92, 0x58a9, 0xb570, 0xd806, 0xbf78, 0xa95, 0x1, 0x1);
        gbc.writeMem(0xa95, { 0x3b });
        gbc.writeMem(0x1f92, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x58a9);
        EXPECT(gbc.pc(), 0x1f94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EE 0208
        gbc.setState(0x689a, 0x9d41, 0xec60, 0x8ed4, 0x373c, 0xca30, 0x1, 0x0);
        gbc.writeMem(0x689a, { 0xcb, 0xee });
        gbc.writeMem(0xca30, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x9d41);
        EXPECT(gbc.pc(), 0x689c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca30), 0x79);
        // CB EE 0209
        gbc.setState(0xd3f0, 0x8e2c, 0x200, 0xb99f, 0xdea, 0xc212, 0x1, 0x1);
        gbc.writeMem(0xc212, { 0xa9 });
        gbc.writeMem(0xd3f0, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x8e2c);
        EXPECT(gbc.pc(), 0xd3f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc212), 0xa9);
        EXPECT(gbc.readMem(0xd3f0), 0xcb);
        EXPECT(gbc.readMem(0xd3f1), 0xee);
        // CB EE 020A
        gbc.setState(0x2af4, 0x1281, 0x99e0, 0xcb52, 0xb2df, 0xd016, 0x1, 0x1);
        gbc.writeMem(0x2af4, { 0xcb, 0xee });
        gbc.writeMem(0xd016, { 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x1281);
        EXPECT(gbc.pc(), 0x2af6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd016), 0x31);
        // CB EE 020E
        gbc.setState(0xa74, 0x3ec9, 0x4ee0, 0x7e88, 0xd1e5, 0xe0d7, 0x0, 0x1);
        gbc.writeMem(0xa74, { 0xcb, 0xee });
        gbc.writeMem(0xe0d7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x3ec9);
        EXPECT(gbc.pc(), 0xa76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0d7), 0x20);
        // CB EE 020F
        gbc.setState(0xa13e, 0xc0bd, 0x5360, 0xb63e, 0xc70e, 0x4c21, 0x1, 0x0);
        gbc.writeMem(0x4c21, { 0x6c });
        gbc.writeMem(0xa13e, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xc0bd);
        EXPECT(gbc.pc(), 0xa140);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa13e), 0xcb);
        EXPECT(gbc.readMem(0xa13f), 0xee);
        // CB EE 0210
        gbc.setState(0x678f, 0x5050, 0x60e0, 0x973d, 0x16fc, 0xa534, 0x1, 0x1);
        gbc.writeMem(0x678f, { 0xcb, 0xee });
        gbc.writeMem(0xa534, { 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x5050);
        EXPECT(gbc.pc(), 0x6791);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa534), 0x39);
        // CB EE 0211
        gbc.setState(0xab60, 0xc500, 0x3ef0, 0x54b8, 0xe5a3, 0xa9f2, 0x1, 0x0);
        gbc.writeMem(0xa9f2, { 0x12 });
        gbc.writeMem(0xab60, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xc500);
        EXPECT(gbc.pc(), 0xab62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9f2), 0x32);
        EXPECT(gbc.readMem(0xab60), 0xcb);
        EXPECT(gbc.readMem(0xab61), 0xee);
        // CB EE 0212
        gbc.setState(0x4a11, 0xed66, 0x1090, 0xb546, 0xf128, 0xcba9, 0x0, 0x1);
        gbc.writeMem(0x4a11, { 0xcb, 0xee });
        gbc.writeMem(0xcba9, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xed66);
        EXPECT(gbc.pc(), 0x4a13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcba9), 0xab);
        // CB EE 0214
        gbc.setState(0x44ed, 0xb723, 0xdda0, 0xb819, 0x641e, 0x4dc7, 0x1, 0x0);
        gbc.writeMem(0x44ed, { 0xcb, 0xee });
        gbc.writeMem(0x4dc7, { 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xb723);
        EXPECT(gbc.pc(), 0x44ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EE 0215
        gbc.setState(0x327d, 0xdcff, 0xc6f0, 0xfe06, 0x1691, 0x24af, 0x0, 0x1);
        gbc.writeMem(0x24af, { 0xf7 });
        gbc.writeMem(0x327d, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xdcff);
        EXPECT(gbc.pc(), 0x327f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EE 0216
        gbc.setState(0x485, 0x2468, 0x6a90, 0xba6e, 0x5499, 0xad46, 0x1, 0x1);
        gbc.writeMem(0x485, { 0xcb, 0xee });
        gbc.writeMem(0xad46, { 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x2468);
        EXPECT(gbc.pc(), 0x487);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad46), 0xfe);
        // CB EE 0218
        gbc.setState(0xd3e4, 0x761e, 0x7f70, 0xfeff, 0x65d1, 0x912e, 0x1, 0x0);
        gbc.writeMem(0x912e, { 0x7f });
        gbc.writeMem(0xd3e4, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x761e);
        EXPECT(gbc.pc(), 0xd3e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x912e), 0x7f);
        EXPECT(gbc.readMem(0xd3e4), 0xcb);
        EXPECT(gbc.readMem(0xd3e5), 0xee);
        // CB EE 0219
        gbc.setState(0xa5cb, 0x55d9, 0xde70, 0xd3fb, 0xace2, 0xf360, 0x0, 0x0);
        gbc.writeMem(0xa5cb, { 0xcb, 0xee });
        gbc.writeMem(0xf360, { 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x55d9);
        EXPECT(gbc.pc(), 0xa5cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5cb), 0xcb);
        EXPECT(gbc.readMem(0xa5cc), 0xee);
        EXPECT(gbc.readMem(0xf360), 0x7a);
        // CB EE 021C
        gbc.setState(0xae4d, 0xff79, 0xc710, 0x1b4f, 0x9def, 0x6e91, 0x1, 0x1);
        gbc.writeMem(0x6e91, { 0x36 });
        gbc.writeMem(0xae4d, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xff79);
        EXPECT(gbc.pc(), 0xae4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae4d), 0xcb);
        EXPECT(gbc.readMem(0xae4e), 0xee);
        // CB EE 021E
        gbc.setState(0xe822, 0x89ed, 0x9d80, 0x1e2, 0x8693, 0x82b6, 0x1, 0x1);
        gbc.writeMem(0x82b6, { 0x55 });
        gbc.writeMem(0xe822, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x89ed);
        EXPECT(gbc.pc(), 0xe824);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82b6), 0x75);
        EXPECT(gbc.readMem(0xe822), 0xcb);
        EXPECT(gbc.readMem(0xe823), 0xee);
        // CB EE 021F
        gbc.setState(0x3783, 0xc4ac, 0xc2c0, 0x1e59, 0x1201, 0xc481, 0x1, 0x1);
        gbc.writeMem(0x3783, { 0xcb, 0xee });
        gbc.writeMem(0xc481, { 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xc4ac);
        EXPECT(gbc.pc(), 0x3785);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc481), 0xf9);
        // CB EE 0221
        gbc.setState(0x4195, 0x6488, 0xcf20, 0x38aa, 0x3b69, 0xc0fd, 0x1, 0x1);
        gbc.writeMem(0x4195, { 0xcb, 0xee });
        gbc.writeMem(0xc0fd, { 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x6488);
        EXPECT(gbc.pc(), 0x4197);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0fd), 0xb4);
        // CB EE 0222
        gbc.setState(0x60e4, 0x23fd, 0xaf00, 0x6eb0, 0x95f5, 0x22e2, 0x0, 0x0);
        gbc.writeMem(0x22e2, { 0x75 });
        gbc.writeMem(0x60e4, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x23fd);
        EXPECT(gbc.pc(), 0x60e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EE 0223
        gbc.setState(0x5783, 0x7d8d, 0xcd80, 0x9785, 0x4f02, 0x50e4, 0x1, 0x1);
        gbc.writeMem(0x50e4, { 0xe8 });
        gbc.writeMem(0x5783, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x7d8d);
        EXPECT(gbc.pc(), 0x5785);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EE 0224
        gbc.setState(0x1958, 0xd34, 0xf630, 0x9cc5, 0x32cb, 0x974, 0x1, 0x1);
        gbc.writeMem(0x974, { 0x77 });
        gbc.writeMem(0x1958, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xd34);
        EXPECT(gbc.pc(), 0x195a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EE 0225
        gbc.setState(0x6a60, 0x940d, 0x270, 0xa66e, 0x31ea, 0x3d47, 0x1, 0x0);
        gbc.writeMem(0x3d47, { 0x21 });
        gbc.writeMem(0x6a60, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x940d);
        EXPECT(gbc.pc(), 0x6a62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EE 0226
        gbc.setState(0xcb32, 0x1ec1, 0xef60, 0x8eb1, 0x5622, 0x8261, 0x1, 0x0);
        gbc.writeMem(0x8261, { 0xad });
        gbc.writeMem(0xcb32, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x1ec1);
        EXPECT(gbc.pc(), 0xcb34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8261), 0xad);
        EXPECT(gbc.readMem(0xcb32), 0xcb);
        EXPECT(gbc.readMem(0xcb33), 0xee);
        // CB EE 0227
        gbc.setState(0x7c36, 0xebde, 0x5f90, 0xf0f1, 0xcb36, 0xe7ce, 0x1, 0x0);
        gbc.writeMem(0x7c36, { 0xcb, 0xee });
        gbc.writeMem(0xe7ce, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xebde);
        EXPECT(gbc.pc(), 0x7c38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7ce), 0xf7);
        // CB EE 0228
        gbc.setState(0x5365, 0x995b, 0x16b0, 0x7be4, 0xa78d, 0xb906, 0x1, 0x1);
        gbc.writeMem(0x5365, { 0xcb, 0xee });
        gbc.writeMem(0xb906, { 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x995b);
        EXPECT(gbc.pc(), 0x5367);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb906), 0x62);
        // CB EE 0229
        gbc.setState(0xa74d, 0x8001, 0xd90, 0x9cab, 0x2620, 0xb293, 0x1, 0x0);
        gbc.writeMem(0xa74d, { 0xcb, 0xee });
        gbc.writeMem(0xb293, { 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x8001);
        EXPECT(gbc.pc(), 0xa74f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa74d), 0xcb);
        EXPECT(gbc.readMem(0xa74e), 0xee);
        EXPECT(gbc.readMem(0xb293), 0xb4);
        // CB EE 022B
        gbc.setState(0x4575, 0x857a, 0x4110, 0x468b, 0xcff, 0xb728, 0x1, 0x1);
        gbc.writeMem(0x4575, { 0xcb, 0xee });
        gbc.writeMem(0xb728, { 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x857a);
        EXPECT(gbc.pc(), 0x4577);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb728), 0xe6);
        // CB EE 022C
        gbc.setState(0x5984, 0xf4be, 0x2290, 0x9d71, 0x48a5, 0x8236, 0x1, 0x0);
        gbc.writeMem(0x5984, { 0xcb, 0xee });
        gbc.writeMem(0x8236, { 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xf4be);
        EXPECT(gbc.pc(), 0x5986);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8236), 0x7e);
        // CB EE 022D
        gbc.setState(0xd1cb, 0x7a67, 0x760, 0x1657, 0xaf40, 0x9122, 0x1, 0x1);
        gbc.writeMem(0x9122, { 0xf5 });
        gbc.writeMem(0xd1cb, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x7a67);
        EXPECT(gbc.pc(), 0xd1cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9122), 0xf5);
        EXPECT(gbc.readMem(0xd1cb), 0xcb);
        EXPECT(gbc.readMem(0xd1cc), 0xee);
        // CB EE 0230
        gbc.setState(0xc0a5, 0xa93b, 0x1870, 0x971f, 0xf0b9, 0xb5f9, 0x0, 0x1);
        gbc.writeMem(0xb5f9, { 0x51 });
        gbc.writeMem(0xc0a5, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xa93b);
        EXPECT(gbc.pc(), 0xc0a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5f9), 0x71);
        EXPECT(gbc.readMem(0xc0a5), 0xcb);
        EXPECT(gbc.readMem(0xc0a6), 0xee);
        // CB EE 0232
        gbc.setState(0x674c, 0x95b9, 0x3400, 0x460a, 0x8e5d, 0xe452, 0x0, 0x1);
        gbc.writeMem(0x674c, { 0xcb, 0xee });
        gbc.writeMem(0xe452, { 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x95b9);
        EXPECT(gbc.pc(), 0x674e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe452), 0x6b);
        // CB EE 0233
        gbc.setState(0x5cc2, 0x3064, 0xfd50, 0xcfc3, 0x3f6d, 0xb527, 0x1, 0x1);
        gbc.writeMem(0x5cc2, { 0xcb, 0xee });
        gbc.writeMem(0xb527, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x3064);
        EXPECT(gbc.pc(), 0x5cc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb527), 0xac);
        // CB EE 0234
        gbc.setState(0xe711, 0x75ea, 0x3340, 0xfe5, 0xbd06, 0xa4ad, 0x0, 0x0);
        gbc.writeMem(0xa4ad, { 0xa2 });
        gbc.writeMem(0xe711, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x75ea);
        EXPECT(gbc.pc(), 0xe713);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4ad), 0xa2);
        EXPECT(gbc.readMem(0xe711), 0xcb);
        EXPECT(gbc.readMem(0xe712), 0xee);
        // CB EE 0235
        gbc.setState(0xf9e, 0xf31, 0xb8b0, 0x8432, 0xf8b1, 0xe5a9, 0x0, 0x1);
        gbc.writeMem(0xf9e, { 0xcb, 0xee });
        gbc.writeMem(0xe5a9, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xf31);
        EXPECT(gbc.pc(), 0xfa0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5a9), 0xb9);
        // CB EE 0236
        gbc.setState(0x9ed7, 0x1f13, 0x8960, 0xdf32, 0x30b5, 0xf94a, 0x1, 0x1);
        gbc.writeMem(0x9ed7, { 0xcb, 0xee });
        gbc.writeMem(0xf94a, { 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x1f13);
        EXPECT(gbc.pc(), 0x9ed9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ed7), 0xcb);
        EXPECT(gbc.readMem(0x9ed8), 0xee);
        EXPECT(gbc.readMem(0xf94a), 0x7c);
        // CB EE 0237
        gbc.setState(0xea9c, 0x4e71, 0x4bf0, 0xff01, 0x3150, 0xb17c, 0x0, 0x0);
        gbc.writeMem(0xb17c, { 0xc5 });
        gbc.writeMem(0xea9c, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x4e71);
        EXPECT(gbc.pc(), 0xea9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb17c), 0xe5);
        EXPECT(gbc.readMem(0xea9c), 0xcb);
        EXPECT(gbc.readMem(0xea9d), 0xee);
        // CB EE 0238
        gbc.setState(0x9fbe, 0x5083, 0xe560, 0x2a09, 0x2aba, 0x7a81, 0x0, 0x1);
        gbc.writeMem(0x7a81, { 0x2e });
        gbc.writeMem(0x9fbe, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x5083);
        EXPECT(gbc.pc(), 0x9fc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fbe), 0xcb);
        EXPECT(gbc.readMem(0x9fbf), 0xee);
        // CB EE 023B
        gbc.setState(0x992f, 0x32f9, 0xeda0, 0x4180, 0x7ab6, 0x3b01, 0x0, 0x1);
        gbc.writeMem(0x3b01, { 0x74 });
        gbc.writeMem(0x992f, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x32f9);
        EXPECT(gbc.pc(), 0x9931);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x992f), 0xcb);
        EXPECT(gbc.readMem(0x9930), 0xee);
        // CB EE 023D
        gbc.setState(0x9e3, 0x362e, 0x6040, 0x4a07, 0x38e5, 0xd609, 0x1, 0x0);
        gbc.writeMem(0x9e3, { 0xcb, 0xee });
        gbc.writeMem(0xd609, { 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x362e);
        EXPECT(gbc.pc(), 0x9e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd609), 0x3d);
        // CB EE 023F
        gbc.setState(0x2fbf, 0x7d45, 0xa0c0, 0x6f91, 0x104c, 0xcfc9, 0x0, 0x0);
        gbc.writeMem(0x2fbf, { 0xcb, 0xee });
        gbc.writeMem(0xcfc9, { 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x7d45);
        EXPECT(gbc.pc(), 0x2fc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfc9), 0xff);
        // CB EE 0240
        gbc.setState(0x4d92, 0x4486, 0xe330, 0x45ee, 0x41d9, 0xd990, 0x1, 0x0);
        gbc.writeMem(0x4d92, { 0xcb, 0xee });
        gbc.writeMem(0xd990, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x4486);
        EXPECT(gbc.pc(), 0x4d94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd990), 0x78);
        // CB EE 0241
        gbc.setState(0xb869, 0xb810, 0xb560, 0x5cac, 0x28a8, 0xba61, 0x0, 0x0);
        gbc.writeMem(0xb869, { 0xcb, 0xee });
        gbc.writeMem(0xba61, { 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xb810);
        EXPECT(gbc.pc(), 0xb86b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb869), 0xcb);
        EXPECT(gbc.readMem(0xb86a), 0xee);
        EXPECT(gbc.readMem(0xba61), 0xb2);
        // CB EE 0243
        gbc.setState(0xccd3, 0x32d8, 0xee0, 0xb4a8, 0x726a, 0x3258, 0x0, 0x1);
        gbc.writeMem(0x3258, { 0xad });
        gbc.writeMem(0xccd3, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x32d8);
        EXPECT(gbc.pc(), 0xccd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccd3), 0xcb);
        EXPECT(gbc.readMem(0xccd4), 0xee);
        // CB EE 0244
        gbc.setState(0xa089, 0x5f9, 0xddf0, 0xcb35, 0x8fa0, 0x4a9b, 0x0, 0x0);
        gbc.writeMem(0x4a9b, { 0xe0 });
        gbc.writeMem(0xa089, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x5f9);
        EXPECT(gbc.pc(), 0xa08b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa089), 0xcb);
        EXPECT(gbc.readMem(0xa08a), 0xee);
        // CB EE 0245
        gbc.setState(0xe32f, 0x6bda, 0x65f0, 0xc8e4, 0x463c, 0xb4d2, 0x0, 0x1);
        gbc.writeMem(0xb4d2, { 0x95 });
        gbc.writeMem(0xe32f, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x6bda);
        EXPECT(gbc.pc(), 0xe331);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4d2), 0xb5);
        EXPECT(gbc.readMem(0xe32f), 0xcb);
        EXPECT(gbc.readMem(0xe330), 0xee);
        // CB EE 0248
        gbc.setState(0xe410, 0x1854, 0x8050, 0x1039, 0xfe06, 0x9aa8, 0x1, 0x1);
        gbc.writeMem(0x9aa8, { 0x2f });
        gbc.writeMem(0xe410, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x1854);
        EXPECT(gbc.pc(), 0xe412);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9aa8), 0x2f);
        EXPECT(gbc.readMem(0xe410), 0xcb);
        EXPECT(gbc.readMem(0xe411), 0xee);
        // CB EE 024B
        gbc.setState(0x4ccb, 0xa0c4, 0xbac0, 0x4d00, 0x1aaa, 0xc81d, 0x0, 0x0);
        gbc.writeMem(0x4ccb, { 0xcb, 0xee });
        gbc.writeMem(0xc81d, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xa0c4);
        EXPECT(gbc.pc(), 0x4ccd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc81d), 0xb8);
        // CB EE 024C
        gbc.setState(0xc155, 0x864e, 0xf080, 0x79e9, 0xc9d8, 0x9eb4, 0x1, 0x1);
        gbc.writeMem(0x9eb4, { 0x7d });
        gbc.writeMem(0xc155, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x864e);
        EXPECT(gbc.pc(), 0xc157);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9eb4), 0x7d);
        EXPECT(gbc.readMem(0xc155), 0xcb);
        EXPECT(gbc.readMem(0xc156), 0xee);
        // CB EE 024E
        gbc.setState(0x4729, 0x6eb5, 0xdb50, 0x33c6, 0xdb94, 0xca17, 0x0, 0x1);
        gbc.writeMem(0x4729, { 0xcb, 0xee });
        gbc.writeMem(0xca17, { 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x6eb5);
        EXPECT(gbc.pc(), 0x472b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca17), 0x3e);
        // CB EE 0250
        gbc.setState(0x2750, 0x178d, 0xda20, 0xd9d5, 0xb6d7, 0xf20a, 0x1, 0x1);
        gbc.writeMem(0x2750, { 0xcb, 0xee });
        gbc.writeMem(0xf20a, { 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x178d);
        EXPECT(gbc.pc(), 0x2752);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf20a), 0x64);
        // CB EE 0251
        gbc.setState(0x4970, 0x1f39, 0x9dc0, 0x3af7, 0x6c0e, 0x743, 0x0, 0x0);
        gbc.writeMem(0x743, { 0x77 });
        gbc.writeMem(0x4970, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x1f39);
        EXPECT(gbc.pc(), 0x4972);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EE 0252
        gbc.setState(0x2f85, 0x1632, 0x4980, 0x313, 0x3315, 0xcf71, 0x1, 0x0);
        gbc.writeMem(0x2f85, { 0xcb, 0xee });
        gbc.writeMem(0xcf71, { 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x1632);
        EXPECT(gbc.pc(), 0x2f87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf71), 0xa8);
        // CB EE 0253
        gbc.setState(0xb4e7, 0xc3c8, 0x79c0, 0x9062, 0xbc6a, 0x82bc, 0x1, 0x0);
        gbc.writeMem(0x82bc, { 0xd9 });
        gbc.writeMem(0xb4e7, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xc3c8);
        EXPECT(gbc.pc(), 0xb4e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82bc), 0xf9);
        EXPECT(gbc.readMem(0xb4e7), 0xcb);
        EXPECT(gbc.readMem(0xb4e8), 0xee);
        // CB EE 0254
        gbc.setState(0x2b20, 0xb49d, 0x83b0, 0x2633, 0xf3e, 0x615a, 0x0, 0x0);
        gbc.writeMem(0x2b20, { 0xcb, 0xee });
        gbc.writeMem(0x615a, { 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xb49d);
        EXPECT(gbc.pc(), 0x2b22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EE 0255
        gbc.setState(0x6579, 0x323d, 0x5f0, 0x1f31, 0x6611, 0xff50, 0x0, 0x1);
        gbc.writeMem(0x6579, { 0xcb, 0xee });
        gbc.writeMem(0xff50, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x323d);
        EXPECT(gbc.pc(), 0x657b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff50), 0x6a);
        // CB EE 0256
        gbc.setState(0xd4d4, 0x8527, 0xdf30, 0xdbc2, 0xcde9, 0x8ee5, 0x1, 0x0);
        gbc.writeMem(0x8ee5, { 0xad });
        gbc.writeMem(0xd4d4, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x8527);
        EXPECT(gbc.pc(), 0xd4d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ee5), 0xad);
        EXPECT(gbc.readMem(0xd4d4), 0xcb);
        EXPECT(gbc.readMem(0xd4d5), 0xee);
        // CB EE 0257
        gbc.setState(0x4451, 0x3998, 0x1c0, 0x50f, 0x83d1, 0xaac8, 0x1, 0x1);
        gbc.writeMem(0x4451, { 0xcb, 0xee });
        gbc.writeMem(0xaac8, { 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x3998);
        EXPECT(gbc.pc(), 0x4453);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaac8), 0x63);
        // CB EE 0258
        gbc.setState(0x687f, 0x27d6, 0xde30, 0x5422, 0xb189, 0xe56c, 0x1, 0x1);
        gbc.writeMem(0x687f, { 0xcb, 0xee });
        gbc.writeMem(0xe56c, { 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x27d6);
        EXPECT(gbc.pc(), 0x6881);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe56c), 0xff);
        // CB EE 025A
        gbc.setState(0xd542, 0x7c52, 0x960, 0xf8f4, 0x7474, 0x9ffd, 0x1, 0x0);
        gbc.writeMem(0x9ffd, { 0x77 });
        gbc.writeMem(0xd542, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x7c52);
        EXPECT(gbc.pc(), 0xd544);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ffd), 0x77);
        EXPECT(gbc.readMem(0xd542), 0xcb);
        EXPECT(gbc.readMem(0xd543), 0xee);
        // CB EE 025B
        gbc.setState(0xbc8b, 0x504a, 0xb960, 0xf673, 0x108c, 0xb185, 0x0, 0x0);
        gbc.writeMem(0xb185, { 0x2b });
        gbc.writeMem(0xbc8b, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x504a);
        EXPECT(gbc.pc(), 0xbc8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb185), 0x2b);
        EXPECT(gbc.readMem(0xbc8b), 0xcb);
        EXPECT(gbc.readMem(0xbc8c), 0xee);
        // CB EE 025C
        gbc.setState(0x668b, 0xa00e, 0xca0, 0x211c, 0x3104, 0x91ec, 0x1, 0x1);
        gbc.writeMem(0x668b, { 0xcb, 0xee });
        gbc.writeMem(0x91ec, { 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xa00e);
        EXPECT(gbc.pc(), 0x668d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91ec), 0x77);
        // CB EE 025D
        gbc.setState(0xd898, 0x91e2, 0xc040, 0xcdf0, 0x125c, 0x140a, 0x1, 0x0);
        gbc.writeMem(0x140a, { 0xba });
        gbc.writeMem(0xd898, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x91e2);
        EXPECT(gbc.pc(), 0xd89a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd898), 0xcb);
        EXPECT(gbc.readMem(0xd899), 0xee);
        // CB EE 025E
        gbc.setState(0x1b79, 0x9772, 0x68c0, 0xa05, 0x72cc, 0xbba, 0x0, 0x0);
        gbc.writeMem(0xbba, { 0xe5 });
        gbc.writeMem(0x1b79, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x9772);
        EXPECT(gbc.pc(), 0x1b7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EE 025F
        gbc.setState(0x5f72, 0xf757, 0x2ac0, 0x71bc, 0xb911, 0x80c8, 0x1, 0x0);
        gbc.writeMem(0x5f72, { 0xcb, 0xee });
        gbc.writeMem(0x80c8, { 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xf757);
        EXPECT(gbc.pc(), 0x5f74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80c8), 0xeb);
        // CB EE 0266
        gbc.setState(0xc753, 0x55fc, 0x3dc0, 0x4b09, 0x509f, 0x260f, 0x1, 0x0);
        gbc.writeMem(0x260f, { 0x73 });
        gbc.writeMem(0xc753, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x55fc);
        EXPECT(gbc.pc(), 0xc755);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc753), 0xcb);
        EXPECT(gbc.readMem(0xc754), 0xee);
        // CB EE 0267
        gbc.setState(0x2355, 0x3cd4, 0x6010, 0x8cc3, 0xa829, 0xa4ca, 0x1, 0x0);
        gbc.writeMem(0x2355, { 0xcb, 0xee });
        gbc.writeMem(0xa4ca, { 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x3cd4);
        EXPECT(gbc.pc(), 0x2357);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4ca), 0xa0);
        // CB EE 0268
        gbc.setState(0x86e2, 0x3446, 0x6670, 0x7e03, 0x7a13, 0x4097, 0x1, 0x0);
        gbc.writeMem(0x4097, { 0x71 });
        gbc.writeMem(0x86e2, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x3446);
        EXPECT(gbc.pc(), 0x86e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86e2), 0xcb);
        EXPECT(gbc.readMem(0x86e3), 0xee);
        // CB EE 0269
        gbc.setState(0xc789, 0x8b4d, 0xa6e0, 0xa552, 0xb0dc, 0xce41, 0x0, 0x1);
        gbc.writeMem(0xc789, { 0xcb, 0xee });
        gbc.writeMem(0xce41, { 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x8b4d);
        EXPECT(gbc.pc(), 0xc78b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc789), 0xcb);
        EXPECT(gbc.readMem(0xc78a), 0xee);
        EXPECT(gbc.readMem(0xce41), 0x2c);
        // CB EE 026E
        gbc.setState(0xc61e, 0x81e0, 0x3d90, 0x3a80, 0x49da, 0x5abe, 0x1, 0x0);
        gbc.writeMem(0x5abe, { 0xfc });
        gbc.writeMem(0xc61e, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x81e0);
        EXPECT(gbc.pc(), 0xc620);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc61e), 0xcb);
        EXPECT(gbc.readMem(0xc61f), 0xee);
        // CB EE 026F
        gbc.setState(0xdb8a, 0xd54e, 0x7f0, 0xfa0f, 0x97d2, 0xb00b, 0x0, 0x0);
        gbc.writeMem(0xb00b, { 0x8c });
        gbc.writeMem(0xdb8a, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xd54e);
        EXPECT(gbc.pc(), 0xdb8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb00b), 0xac);
        EXPECT(gbc.readMem(0xdb8a), 0xcb);
        EXPECT(gbc.readMem(0xdb8b), 0xee);
        // CB EE 0270
        gbc.setState(0x3a3e, 0xd137, 0x5090, 0x79a7, 0x3dab, 0x1d16, 0x0, 0x1);
        gbc.writeMem(0x1d16, { 0xf1 });
        gbc.writeMem(0x3a3e, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xd137);
        EXPECT(gbc.pc(), 0x3a40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EE 0272
        gbc.setState(0x37be, 0x851, 0x5c90, 0x53cd, 0xc1bf, 0x9a70, 0x0, 0x1);
        gbc.writeMem(0x37be, { 0xcb, 0xee });
        gbc.writeMem(0x9a70, { 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x851);
        EXPECT(gbc.pc(), 0x37c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a70), 0xf2);
        // CB EE 0273
        gbc.setState(0x3a2e, 0x8d60, 0xd7d0, 0xb35c, 0xd521, 0x8ca2, 0x1, 0x0);
        gbc.writeMem(0x3a2e, { 0xcb, 0xee });
        gbc.writeMem(0x8ca2, { 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x8d60);
        EXPECT(gbc.pc(), 0x3a30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ca2), 0xfc);
        // CB EE 0276
        gbc.setState(0x696a, 0x4701, 0x4eb0, 0xd6e1, 0xe4d8, 0xd8ab, 0x0, 0x0);
        gbc.writeMem(0x696a, { 0xcb, 0xee });
        gbc.writeMem(0xd8ab, { 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x4701);
        EXPECT(gbc.pc(), 0x696c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8ab), 0x29);
        // CB EE 0279
        gbc.setState(0xda57, 0x78fb, 0x7210, 0xdc88, 0xbce6, 0xbe12, 0x0, 0x1);
        gbc.writeMem(0xbe12, { 0x71 });
        gbc.writeMem(0xda57, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x78fb);
        EXPECT(gbc.pc(), 0xda59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe12), 0x71);
        EXPECT(gbc.readMem(0xda57), 0xcb);
        EXPECT(gbc.readMem(0xda58), 0xee);
        // CB EE 027C
        gbc.setState(0xeeeb, 0xd659, 0x9bf0, 0x4001, 0xd3fe, 0x1e05, 0x0, 0x1);
        gbc.writeMem(0x1e05, { 0xe1 });
        gbc.writeMem(0xeeeb, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xd659);
        EXPECT(gbc.pc(), 0xeeed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeeeb), 0xcb);
        EXPECT(gbc.readMem(0xeeec), 0xee);
        // CB EE 027E
        gbc.setState(0x6fcd, 0xd622, 0x7f00, 0x3626, 0x342c, 0x63be, 0x1, 0x1);
        gbc.writeMem(0x63be, { 0x27 });
        gbc.writeMem(0x6fcd, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xd622);
        EXPECT(gbc.pc(), 0x6fcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EE 027F
        gbc.setState(0x5ab5, 0xe5f5, 0xa600, 0xc7b8, 0x3c6f, 0xf0d1, 0x0, 0x1);
        gbc.writeMem(0x5ab5, { 0xcb, 0xee });
        gbc.writeMem(0xf0d1, { 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xe5f5);
        EXPECT(gbc.pc(), 0x5ab7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf0d1), 0x70);
        // CB EE 0280
        gbc.setState(0x4c22, 0x9ea9, 0x9bc0, 0xe7e3, 0x1042, 0x9337, 0x1, 0x1);
        gbc.writeMem(0x4c22, { 0xcb, 0xee });
        gbc.writeMem(0x9337, { 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x9ea9);
        EXPECT(gbc.pc(), 0x4c24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9337), 0xa9);
        // CB EE 0281
        gbc.setState(0x7960, 0x188c, 0xc130, 0xd93c, 0x7ddf, 0xfd8f, 0x1, 0x0);
        gbc.writeMem(0x7960, { 0xcb, 0xee });
        gbc.writeMem(0xfd8f, { 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x188c);
        EXPECT(gbc.pc(), 0x7962);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfd8f), 0xe2);
        // CB EE 0282
        gbc.setState(0x218f, 0xc336, 0x5590, 0xf426, 0xef23, 0x9bbb, 0x0, 0x1);
        gbc.writeMem(0x218f, { 0xcb, 0xee });
        gbc.writeMem(0x9bbb, { 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xc336);
        EXPECT(gbc.pc(), 0x2191);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bbb), 0x6d);
        // CB EE 0283
        gbc.setState(0x2077, 0xd0f4, 0xa240, 0x200a, 0x6933, 0xede3, 0x1, 0x1);
        gbc.writeMem(0x2077, { 0xcb, 0xee });
        gbc.writeMem(0xede3, { 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xd0f4);
        EXPECT(gbc.pc(), 0x2079);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xede3), 0xa8);
        // CB EE 0284
        gbc.setState(0xe357, 0xad18, 0x7ac0, 0x3b81, 0xa1a5, 0xc733, 0x0, 0x1);
        gbc.writeMem(0xc733, { 0x35 });
        gbc.writeMem(0xe357, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xad18);
        EXPECT(gbc.pc(), 0xe359);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc733), 0x35);
        EXPECT(gbc.readMem(0xe357), 0xcb);
        EXPECT(gbc.readMem(0xe358), 0xee);
        // CB EE 0285
        gbc.setState(0x19f, 0x93b5, 0x12c0, 0xb35e, 0xf1d9, 0x25ee, 0x1, 0x0);
        gbc.writeMem(0x19f, { 0xcb, 0xee });
        gbc.writeMem(0x25ee, { 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x93b5);
        EXPECT(gbc.pc(), 0x1a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EE 0286
        gbc.setState(0x5e12, 0xac56, 0x5a00, 0xe5bc, 0xc6a7, 0x1d2a, 0x0, 0x1);
        gbc.writeMem(0x1d2a, { 0xa3 });
        gbc.writeMem(0x5e12, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xac56);
        EXPECT(gbc.pc(), 0x5e14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EE 0288
        gbc.setState(0xcdee, 0xcad5, 0xc7d0, 0xafb1, 0x435, 0xcded, 0x0, 0x1);
        gbc.writeMem(0xcded, { 0x7d, 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xcad5);
        EXPECT(gbc.pc(), 0xcdf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcded), 0x7d);
        EXPECT(gbc.readMem(0xcdee), 0xcb);
        EXPECT(gbc.readMem(0xcdef), 0xee);
        // CB EE 0289
        gbc.setState(0x60fe, 0x2549, 0x1fb0, 0xd1ed, 0xe5f7, 0xa60a, 0x0, 0x0);
        gbc.writeMem(0x60fe, { 0xcb, 0xee });
        gbc.writeMem(0xa60a, { 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x2549);
        EXPECT(gbc.pc(), 0x6100);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa60a), 0xe2);
        // CB EE 028A
        gbc.setState(0x2cc9, 0x1c28, 0x42a0, 0xd8, 0xba1b, 0xca30, 0x0, 0x1);
        gbc.writeMem(0x2cc9, { 0xcb, 0xee });
        gbc.writeMem(0xca30, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x1c28);
        EXPECT(gbc.pc(), 0x2ccb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca30), 0x79);
        // CB EE 028B
        gbc.setState(0x3af9, 0x42ff, 0x59e0, 0x79a8, 0x5139, 0xa2ab, 0x0, 0x0);
        gbc.writeMem(0x3af9, { 0xcb, 0xee });
        gbc.writeMem(0xa2ab, { 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x42ff);
        EXPECT(gbc.pc(), 0x3afb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2ab), 0x2b);
        // CB EE 028C
        gbc.setState(0x27bf, 0x6357, 0x11f0, 0x943e, 0x1995, 0xe8b1, 0x0, 0x0);
        gbc.writeMem(0x27bf, { 0xcb, 0xee });
        gbc.writeMem(0xe8b1, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x6357);
        EXPECT(gbc.pc(), 0x27c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8b1), 0xf1);
        // CB EE 028F
        gbc.setState(0x847d, 0xb7a8, 0x4d80, 0x6004, 0x874d, 0x3c61, 0x1, 0x1);
        gbc.writeMem(0x3c61, { 0xfc });
        gbc.writeMem(0x847d, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xb7a8);
        EXPECT(gbc.pc(), 0x847f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x847d), 0xcb);
        EXPECT(gbc.readMem(0x847e), 0xee);
        // CB EE 0290
        gbc.setState(0xc2f3, 0xf082, 0xa160, 0x587e, 0xac2c, 0x5945, 0x1, 0x0);
        gbc.writeMem(0x5945, { 0xf6 });
        gbc.writeMem(0xc2f3, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xf082);
        EXPECT(gbc.pc(), 0xc2f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2f3), 0xcb);
        EXPECT(gbc.readMem(0xc2f4), 0xee);
        // CB EE 0291
        gbc.setState(0xb534, 0x34fd, 0x37f0, 0x8076, 0xdc16, 0x9a76, 0x0, 0x1);
        gbc.writeMem(0x9a76, { 0xa3 });
        gbc.writeMem(0xb534, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x34fd);
        EXPECT(gbc.pc(), 0xb536);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a76), 0xa3);
        EXPECT(gbc.readMem(0xb534), 0xcb);
        EXPECT(gbc.readMem(0xb535), 0xee);
        // CB EE 0292
        gbc.setState(0x1f51, 0x708b, 0xdc80, 0xe68c, 0x5bef, 0x23eb, 0x1, 0x1);
        gbc.writeMem(0x1f51, { 0xcb, 0xee });
        gbc.writeMem(0x23eb, { 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x708b);
        EXPECT(gbc.pc(), 0x1f53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EE 0293
        gbc.setState(0x9185, 0xd40c, 0xbc70, 0x4b5a, 0x6c27, 0xdbd3, 0x0, 0x1);
        gbc.writeMem(0x9185, { 0xcb, 0xee });
        gbc.writeMem(0xdbd3, { 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xd40c);
        EXPECT(gbc.pc(), 0x9187);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9185), 0xcb);
        EXPECT(gbc.readMem(0x9186), 0xee);
        EXPECT(gbc.readMem(0xdbd3), 0x6c);
        // CB EE 0295
        gbc.setState(0x45f3, 0xdc1d, 0xd610, 0x7b60, 0x99bf, 0x6826, 0x1, 0x1);
        gbc.writeMem(0x45f3, { 0xcb, 0xee });
        gbc.writeMem(0x6826, { 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xdc1d);
        EXPECT(gbc.pc(), 0x45f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EE 0296
        gbc.setState(0x1626, 0x8231, 0xeca0, 0x16af, 0xab0a, 0xd442, 0x0, 0x1);
        gbc.writeMem(0x1626, { 0xcb, 0xee });
        gbc.writeMem(0xd442, { 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x8231);
        EXPECT(gbc.pc(), 0x1628);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd442), 0xe2);
        // CB EE 0297
        gbc.setState(0x30d4, 0x8a3a, 0x5f00, 0x1ffb, 0x3ad4, 0xa783, 0x1, 0x1);
        gbc.writeMem(0x30d4, { 0xcb, 0xee });
        gbc.writeMem(0xa783, { 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x8a3a);
        EXPECT(gbc.pc(), 0x30d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa783), 0xf6);
        // CB EE 0298
        gbc.setState(0xd659, 0x9101, 0xc770, 0xba98, 0x6fbb, 0xe59d, 0x1, 0x1);
        gbc.writeMem(0xd659, { 0xcb, 0xee });
        gbc.writeMem(0xe59d, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x9101);
        EXPECT(gbc.pc(), 0xd65b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd659), 0xcb);
        EXPECT(gbc.readMem(0xd65a), 0xee);
        EXPECT(gbc.readMem(0xe59d), 0xf5);
        // CB EE 0299
        gbc.setState(0x71c3, 0x5b8f, 0xb8f0, 0x748f, 0x7edf, 0xd185, 0x0, 0x0);
        gbc.writeMem(0x71c3, { 0xcb, 0xee });
        gbc.writeMem(0xd185, { 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x5b8f);
        EXPECT(gbc.pc(), 0x71c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd185), 0xed);
        // CB EE 029B
        gbc.setState(0xaac7, 0xed83, 0xf0, 0x4662, 0x86d5, 0x78ea, 0x0, 0x0);
        gbc.writeMem(0x78ea, { 0xac });
        gbc.writeMem(0xaac7, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xed83);
        EXPECT(gbc.pc(), 0xaac9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaac7), 0xcb);
        EXPECT(gbc.readMem(0xaac8), 0xee);
        // CB EE 029D
        gbc.setState(0xb27c, 0x9ab3, 0x3cb0, 0x4c05, 0x2265, 0x2634, 0x1, 0x1);
        gbc.writeMem(0x2634, { 0xb0 });
        gbc.writeMem(0xb27c, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x9ab3);
        EXPECT(gbc.pc(), 0xb27e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb27c), 0xcb);
        EXPECT(gbc.readMem(0xb27d), 0xee);
        // CB EE 029E
        gbc.setState(0x5782, 0x54f5, 0xea0, 0xf52f, 0xd151, 0x1fab, 0x0, 0x0);
        gbc.writeMem(0x1fab, { 0xb5 });
        gbc.writeMem(0x5782, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x54f5);
        EXPECT(gbc.pc(), 0x5784);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EE 02A0
        gbc.setState(0xe282, 0xcecf, 0xfc90, 0xf728, 0x3f11, 0x2257, 0x1, 0x1);
        gbc.writeMem(0x2257, { 0x7e });
        gbc.writeMem(0xe282, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xcecf);
        EXPECT(gbc.pc(), 0xe284);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe282), 0xcb);
        EXPECT(gbc.readMem(0xe283), 0xee);
        // CB EE 02A1
        gbc.setState(0xc112, 0xc4e9, 0x5c10, 0xe1fe, 0x258a, 0x6995, 0x0, 0x0);
        gbc.writeMem(0x6995, { 0xa2 });
        gbc.writeMem(0xc112, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xc4e9);
        EXPECT(gbc.pc(), 0xc114);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc112), 0xcb);
        EXPECT(gbc.readMem(0xc113), 0xee);
        // CB EE 02A2
        gbc.setState(0xe924, 0x8e1d, 0x1510, 0xda37, 0xddee, 0xc22f, 0x1, 0x1);
        gbc.writeMem(0xc22f, { 0x1f });
        gbc.writeMem(0xe924, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x8e1d);
        EXPECT(gbc.pc(), 0xe926);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc22f), 0x3f);
        EXPECT(gbc.readMem(0xe924), 0xcb);
        EXPECT(gbc.readMem(0xe925), 0xee);
        // CB EE 02A3
        gbc.setState(0xb969, 0xe5e8, 0x8a10, 0x3693, 0x224f, 0xcd19, 0x0, 0x0);
        gbc.writeMem(0xb969, { 0xcb, 0xee });
        gbc.writeMem(0xcd19, { 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xe5e8);
        EXPECT(gbc.pc(), 0xb96b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb969), 0xcb);
        EXPECT(gbc.readMem(0xb96a), 0xee);
        EXPECT(gbc.readMem(0xcd19), 0x24);
        // CB EE 02A4
        gbc.setState(0xa215, 0x19c0, 0x5300, 0x8812, 0x6c2f, 0xc541, 0x1, 0x1);
        gbc.writeMem(0xa215, { 0xcb, 0xee });
        gbc.writeMem(0xc541, { 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x19c0);
        EXPECT(gbc.pc(), 0xa217);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa215), 0xcb);
        EXPECT(gbc.readMem(0xa216), 0xee);
        EXPECT(gbc.readMem(0xc541), 0xa6);
        // CB EE 02A5
        gbc.setState(0xc6e4, 0x6df1, 0xab70, 0xcf56, 0xb6df, 0xb63b, 0x0, 0x1);
        gbc.writeMem(0xb63b, { 0x22 });
        gbc.writeMem(0xc6e4, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x6df1);
        EXPECT(gbc.pc(), 0xc6e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb63b), 0x22);
        EXPECT(gbc.readMem(0xc6e4), 0xcb);
        EXPECT(gbc.readMem(0xc6e5), 0xee);
        // CB EE 02A6
        gbc.setState(0x5e25, 0x392a, 0x86c0, 0xe043, 0xb425, 0x24c9, 0x0, 0x0);
        gbc.writeMem(0x24c9, { 0x2c });
        gbc.writeMem(0x5e25, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x392a);
        EXPECT(gbc.pc(), 0x5e27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EE 02A7
        gbc.setState(0x36b2, 0xe422, 0xa5b0, 0x8c9, 0x1a82, 0x78d5, 0x1, 0x0);
        gbc.writeMem(0x36b2, { 0xcb, 0xee });
        gbc.writeMem(0x78d5, { 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xe422);
        EXPECT(gbc.pc(), 0x36b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EE 02A8
        gbc.setState(0x5a7f, 0x3b06, 0x9c0, 0x3511, 0xef63, 0xc5e6, 0x0, 0x1);
        gbc.writeMem(0x5a7f, { 0xcb, 0xee });
        gbc.writeMem(0xc5e6, { 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x3b06);
        EXPECT(gbc.pc(), 0x5a81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5e6), 0x66);
        // CB EE 02AB
        gbc.setState(0x6d3c, 0x6e0f, 0xd560, 0x481f, 0xea26, 0xcefe, 0x1, 0x1);
        gbc.writeMem(0x6d3c, { 0xcb, 0xee });
        gbc.writeMem(0xcefe, { 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x6e0f);
        EXPECT(gbc.pc(), 0x6d3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcefe), 0x6f);
        // CB EE 02AC
        gbc.setState(0x439a, 0xbc95, 0xec80, 0xb8f9, 0xd48a, 0x28e8, 0x1, 0x1);
        gbc.writeMem(0x28e8, { 0x22 });
        gbc.writeMem(0x439a, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xbc95);
        EXPECT(gbc.pc(), 0x439c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EE 02AD
        gbc.setState(0x843c, 0xa495, 0xd190, 0xbaef, 0x5b9a, 0x5a6f, 0x0, 0x0);
        gbc.writeMem(0x5a6f, { 0xb2 });
        gbc.writeMem(0x843c, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xa495);
        EXPECT(gbc.pc(), 0x843e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x843c), 0xcb);
        EXPECT(gbc.readMem(0x843d), 0xee);
        // CB EE 02AE
        gbc.setState(0x1e7c, 0xacc5, 0x790, 0x407e, 0xcdc, 0xb299, 0x1, 0x0);
        gbc.writeMem(0x1e7c, { 0xcb, 0xee });
        gbc.writeMem(0xb299, { 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xacc5);
        EXPECT(gbc.pc(), 0x1e7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb299), 0xa7);
        // CB EE 02AF
        gbc.setState(0xe777, 0xc8fc, 0x5f30, 0xf424, 0x1162, 0x2d53, 0x0, 0x1);
        gbc.writeMem(0x2d53, { 0x2f });
        gbc.writeMem(0xe777, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xc8fc);
        EXPECT(gbc.pc(), 0xe779);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe777), 0xcb);
        EXPECT(gbc.readMem(0xe778), 0xee);
        // CB EE 02B0
        gbc.setState(0x7465, 0x33cf, 0x9dc0, 0x42de, 0xb3f2, 0xa09a, 0x1, 0x1);
        gbc.writeMem(0x7465, { 0xcb, 0xee });
        gbc.writeMem(0xa09a, { 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x33cf);
        EXPECT(gbc.pc(), 0x7467);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa09a), 0xa5);
        // CB EE 02B1
        gbc.setState(0xc5a6, 0x13a, 0xb7c0, 0x48a6, 0x108f, 0xad67, 0x1, 0x1);
        gbc.writeMem(0xad67, { 0x79 });
        gbc.writeMem(0xc5a6, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x13a);
        EXPECT(gbc.pc(), 0xc5a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad67), 0x79);
        EXPECT(gbc.readMem(0xc5a6), 0xcb);
        EXPECT(gbc.readMem(0xc5a7), 0xee);
        // CB EE 02B2
        gbc.setState(0xb4d8, 0x88d8, 0xc810, 0xe7ab, 0xc9dc, 0xab6c, 0x0, 0x1);
        gbc.writeMem(0xab6c, { 0xf5 });
        gbc.writeMem(0xb4d8, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x88d8);
        EXPECT(gbc.pc(), 0xb4da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab6c), 0xf5);
        EXPECT(gbc.readMem(0xb4d8), 0xcb);
        EXPECT(gbc.readMem(0xb4d9), 0xee);
        // CB EE 02B4
        gbc.setState(0x8b80, 0xd7f, 0x90a0, 0xa98b, 0x55f5, 0x5487, 0x1, 0x0);
        gbc.writeMem(0x5487, { 0x74 });
        gbc.writeMem(0x8b80, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xd7f);
        EXPECT(gbc.pc(), 0x8b82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b80), 0xcb);
        EXPECT(gbc.readMem(0x8b81), 0xee);
        // CB EE 02B6
        gbc.setState(0x71a, 0x2627, 0x1340, 0x5f45, 0x9bda, 0xabe5, 0x1, 0x1);
        gbc.writeMem(0x71a, { 0xcb, 0xee });
        gbc.writeMem(0xabe5, { 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x2627);
        EXPECT(gbc.pc(), 0x71c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabe5), 0xfa);
        // CB EE 02B7
        gbc.setState(0xe801, 0x95a2, 0x99c0, 0xa6ab, 0x4762, 0x8002, 0x0, 0x0);
        gbc.writeMem(0x8002, { 0xe0 });
        gbc.writeMem(0xe801, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x95a2);
        EXPECT(gbc.pc(), 0xe803);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8002), 0xe0);
        EXPECT(gbc.readMem(0xe801), 0xcb);
        EXPECT(gbc.readMem(0xe802), 0xee);
        // CB EE 02B9
        gbc.setState(0x5b7, 0xdaac, 0x8740, 0x717, 0x366f, 0x1b9d, 0x0, 0x1);
        gbc.writeMem(0x5b7, { 0xcb, 0xee });
        gbc.writeMem(0x1b9d, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xdaac);
        EXPECT(gbc.pc(), 0x5b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EE 02BA
        gbc.setState(0xca9e, 0x26d8, 0xf360, 0x9c09, 0x18e9, 0x2912, 0x0, 0x0);
        gbc.writeMem(0x2912, { 0x2f });
        gbc.writeMem(0xca9e, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x26d8);
        EXPECT(gbc.pc(), 0xcaa0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca9e), 0xcb);
        EXPECT(gbc.readMem(0xca9f), 0xee);
        // CB EE 02BB
        gbc.setState(0x2b83, 0x9e56, 0x8020, 0x3a2, 0x18e5, 0x8e4d, 0x0, 0x1);
        gbc.writeMem(0x2b83, { 0xcb, 0xee });
        gbc.writeMem(0x8e4d, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x9e56);
        EXPECT(gbc.pc(), 0x2b85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e4d), 0x2a);
        // CB EE 02BC
        gbc.setState(0x10f0, 0xd487, 0xe200, 0xd73f, 0xad41, 0x9d38, 0x0, 0x1);
        gbc.writeMem(0x10f0, { 0xcb, 0xee });
        gbc.writeMem(0x9d38, { 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xd487);
        EXPECT(gbc.pc(), 0x10f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d38), 0xf6);
        // CB EE 02BD
        gbc.setState(0x504a, 0xd545, 0x3790, 0x23b3, 0x413f, 0x77d, 0x0, 0x0);
        gbc.writeMem(0x77d, { 0x2f });
        gbc.writeMem(0x504a, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xd545);
        EXPECT(gbc.pc(), 0x504c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EE 02BE
        gbc.setState(0x6678, 0xba9f, 0xe830, 0x67be, 0x3f2, 0xf81c, 0x1, 0x1);
        gbc.writeMem(0x6678, { 0xcb, 0xee });
        gbc.writeMem(0xf81c, { 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xba9f);
        EXPECT(gbc.pc(), 0x667a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf81c), 0x25);
        // CB EE 02BF
        gbc.setState(0x1176, 0x6c84, 0xdef0, 0x906c, 0xc140, 0x985a, 0x0, 0x1);
        gbc.writeMem(0x1176, { 0xcb, 0xee });
        gbc.writeMem(0x985a, { 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x6c84);
        EXPECT(gbc.pc(), 0x1178);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x985a), 0x3f);
        // CB EE 02C1
        gbc.setState(0x5918, 0x39e0, 0xdf90, 0x4d7c, 0xd129, 0x1d32, 0x0, 0x1);
        gbc.writeMem(0x1d32, { 0x33 });
        gbc.writeMem(0x5918, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x39e0);
        EXPECT(gbc.pc(), 0x591a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EE 02C4
        gbc.setState(0x63eb, 0x6549, 0x9950, 0x93b1, 0xfcdc, 0x344b, 0x0, 0x1);
        gbc.writeMem(0x344b, { 0x3b });
        gbc.writeMem(0x63eb, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x6549);
        EXPECT(gbc.pc(), 0x63ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EE 02C5
        gbc.setState(0x563b, 0x476, 0xeff0, 0x2af3, 0x980e, 0xf6ea, 0x0, 0x0);
        gbc.writeMem(0x563b, { 0xcb, 0xee });
        gbc.writeMem(0xf6ea, { 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x476);
        EXPECT(gbc.pc(), 0x563d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf6ea), 0x38);
        // CB EE 02C6
        gbc.setState(0xae5b, 0x322b, 0x5520, 0xcd35, 0xba00, 0x30de, 0x1, 0x0);
        gbc.writeMem(0x30de, { 0x7a });
        gbc.writeMem(0xae5b, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x322b);
        EXPECT(gbc.pc(), 0xae5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae5b), 0xcb);
        EXPECT(gbc.readMem(0xae5c), 0xee);
        // CB EE 02C9
        gbc.setState(0x90a4, 0x5a8a, 0xe450, 0x8eab, 0x7f16, 0x4773, 0x0, 0x1);
        gbc.writeMem(0x4773, { 0x2b });
        gbc.writeMem(0x90a4, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x5a8a);
        EXPECT(gbc.pc(), 0x90a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90a4), 0xcb);
        EXPECT(gbc.readMem(0x90a5), 0xee);
        // CB EE 02CB
        gbc.setState(0x903a, 0x8e9, 0xf290, 0x17f0, 0x757a, 0xd21d, 0x0, 0x1);
        gbc.writeMem(0x903a, { 0xcb, 0xee });
        gbc.writeMem(0xd21d, { 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x8e9);
        EXPECT(gbc.pc(), 0x903c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x903a), 0xcb);
        EXPECT(gbc.readMem(0x903b), 0xee);
        EXPECT(gbc.readMem(0xd21d), 0x30);
        // CB EE 02CC
        gbc.setState(0x5c8, 0x165, 0x2180, 0xa3f, 0x6ca7, 0x8452, 0x1, 0x0);
        gbc.writeMem(0x5c8, { 0xcb, 0xee });
        gbc.writeMem(0x8452, { 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x165);
        EXPECT(gbc.pc(), 0x5ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8452), 0x6d);
        // CB EE 02CD
        gbc.setState(0x42e1, 0x498e, 0x9ee0, 0x51ff, 0x7daf, 0xff53, 0x0, 0x1);
        gbc.writeMem(0x42e1, { 0xcb, 0xee });
        gbc.writeMem(0xff53, { 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x498e);
        EXPECT(gbc.pc(), 0x42e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff53), 0xf2);
        // CB EE 02CE
        gbc.setState(0x6895, 0xd268, 0x9a70, 0x39a7, 0x6995, 0xcfe6, 0x1, 0x0);
        gbc.writeMem(0x6895, { 0xcb, 0xee });
        gbc.writeMem(0xcfe6, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xd268);
        EXPECT(gbc.pc(), 0x6897);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfe6), 0x60);
        // CB EE 02CF
        gbc.setState(0xdfde, 0xd36f, 0xb4d0, 0xa360, 0xc2b7, 0xce08, 0x0, 0x1);
        gbc.writeMem(0xce08, { 0xde });
        gbc.writeMem(0xdfde, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xd36f);
        EXPECT(gbc.pc(), 0xdfe0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce08), 0xfe);
        EXPECT(gbc.readMem(0xdfde), 0xcb);
        EXPECT(gbc.readMem(0xdfdf), 0xee);
        // CB EE 02D0
        gbc.setState(0x3132, 0xe926, 0x8c0, 0x328f, 0xcfa, 0x189c, 0x0, 0x1);
        gbc.writeMem(0x189c, { 0xb2 });
        gbc.writeMem(0x3132, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xe926);
        EXPECT(gbc.pc(), 0x3134);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EE 02D1
        gbc.setState(0xdc85, 0xfe4c, 0x94e0, 0xfb4, 0x5685, 0xcd03, 0x0, 0x0);
        gbc.writeMem(0xcd03, { 0x51 });
        gbc.writeMem(0xdc85, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xfe4c);
        EXPECT(gbc.pc(), 0xdc87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd03), 0x71);
        EXPECT(gbc.readMem(0xdc85), 0xcb);
        EXPECT(gbc.readMem(0xdc86), 0xee);
        // CB EE 02D2
        gbc.setState(0xd0ec, 0x9e1d, 0x4510, 0x17bc, 0x2a71, 0xbb01, 0x0, 0x0);
        gbc.writeMem(0xbb01, { 0x45 });
        gbc.writeMem(0xd0ec, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x9e1d);
        EXPECT(gbc.pc(), 0xd0ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb01), 0x65);
        EXPECT(gbc.readMem(0xd0ec), 0xcb);
        EXPECT(gbc.readMem(0xd0ed), 0xee);
        // CB EE 02D3
        gbc.setState(0x2aa2, 0xc9e3, 0x86e0, 0x1d12, 0x719d, 0x7a70, 0x1, 0x1);
        gbc.writeMem(0x2aa2, { 0xcb, 0xee });
        gbc.writeMem(0x7a70, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xc9e3);
        EXPECT(gbc.pc(), 0x2aa4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EE 02D5
        gbc.setState(0x4c09, 0x85fa, 0x8360, 0xbcf8, 0xec8e, 0xe128, 0x1, 0x0);
        gbc.writeMem(0x4c09, { 0xcb, 0xee });
        gbc.writeMem(0xe128, { 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x85fa);
        EXPECT(gbc.pc(), 0x4c0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe128), 0x6d);
        // CB EE 02D6
        gbc.setState(0x2c2d, 0x9920, 0x6090, 0x41dc, 0x31dc, 0xfa3e, 0x1, 0x0);
        gbc.writeMem(0x2c2d, { 0xcb, 0xee });
        gbc.writeMem(0xfa3e, { 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x9920);
        EXPECT(gbc.pc(), 0x2c2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfa3e), 0x6f);
        // CB EE 02D9
        gbc.setState(0x6f80, 0x5e6a, 0xd440, 0xdab7, 0x9866, 0x6133, 0x0, 0x0);
        gbc.writeMem(0x6133, { 0x6d });
        gbc.writeMem(0x6f80, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x5e6a);
        EXPECT(gbc.pc(), 0x6f82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EE 02DA
        gbc.setState(0x55cb, 0xa766, 0x6400, 0x65b0, 0xb1cd, 0x1a81, 0x0, 0x1);
        gbc.writeMem(0x1a81, { 0x36 });
        gbc.writeMem(0x55cb, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xa766);
        EXPECT(gbc.pc(), 0x55cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EE 02DB
        gbc.setState(0x941a, 0x52d0, 0xc9b0, 0xff8e, 0xa5d5, 0xbe2d, 0x1, 0x1);
        gbc.writeMem(0x941a, { 0xcb, 0xee });
        gbc.writeMem(0xbe2d, { 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x52d0);
        EXPECT(gbc.pc(), 0x941c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x941a), 0xcb);
        EXPECT(gbc.readMem(0x941b), 0xee);
        EXPECT(gbc.readMem(0xbe2d), 0xff);
        // CB EE 02DD
        gbc.setState(0xdd30, 0xeaa2, 0x7d0, 0xdd29, 0x225f, 0x8cf7, 0x1, 0x0);
        gbc.writeMem(0x8cf7, { 0x38 });
        gbc.writeMem(0xdd30, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xeaa2);
        EXPECT(gbc.pc(), 0xdd32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cf7), 0x38);
        EXPECT(gbc.readMem(0xdd30), 0xcb);
        EXPECT(gbc.readMem(0xdd31), 0xee);
        // CB EE 02DE
        gbc.setState(0x9d3f, 0xd56c, 0x9480, 0xfb2a, 0xdd08, 0x493e, 0x0, 0x1);
        gbc.writeMem(0x493e, { 0xb9 });
        gbc.writeMem(0x9d3f, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xd56c);
        EXPECT(gbc.pc(), 0x9d41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d3f), 0xcb);
        EXPECT(gbc.readMem(0x9d40), 0xee);
        // CB EE 02DF
        gbc.setState(0x470, 0x913a, 0x90b0, 0x6ebf, 0x6a80, 0xd19, 0x0, 0x1);
        gbc.writeMem(0x470, { 0xcb, 0xee });
        gbc.writeMem(0xd19, { 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x913a);
        EXPECT(gbc.pc(), 0x472);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EE 02E0
        gbc.setState(0x7805, 0x8120, 0x3350, 0x9aeb, 0x7014, 0xd655, 0x1, 0x1);
        gbc.writeMem(0x7805, { 0xcb, 0xee });
        gbc.writeMem(0xd655, { 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x8120);
        EXPECT(gbc.pc(), 0x7807);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd655), 0x7e);
        // CB EE 02E4
        gbc.setState(0xe2f3, 0xbc5f, 0x8900, 0xd21e, 0x8b38, 0xdfee, 0x1, 0x0);
        gbc.writeMem(0xdfee, { 0x2d });
        gbc.writeMem(0xe2f3, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xbc5f);
        EXPECT(gbc.pc(), 0xe2f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfee), 0x2d);
        EXPECT(gbc.readMem(0xe2f3), 0xcb);
        EXPECT(gbc.readMem(0xe2f4), 0xee);
        // CB EE 02E7
        gbc.setState(0xdc15, 0xd5de, 0xd180, 0xd0a6, 0xa583, 0xee01, 0x1, 0x0);
        gbc.writeMem(0xdc15, { 0xcb, 0xee });
        gbc.writeMem(0xee01, { 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xd5de);
        EXPECT(gbc.pc(), 0xdc17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc15), 0xcb);
        EXPECT(gbc.readMem(0xdc16), 0xee);
        EXPECT(gbc.readMem(0xee01), 0x7b);
        // CB EE 02E9
        gbc.setState(0xbbb3, 0xf1dc, 0xdc40, 0xfc6d, 0x2325, 0xa7a2, 0x1, 0x1);
        gbc.writeMem(0xa7a2, { 0x98 });
        gbc.writeMem(0xbbb3, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xf1dc);
        EXPECT(gbc.pc(), 0xbbb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7a2), 0xb8);
        EXPECT(gbc.readMem(0xbbb3), 0xcb);
        EXPECT(gbc.readMem(0xbbb4), 0xee);
        // CB EE 02EB
        gbc.setState(0x947f, 0x8d2f, 0x2860, 0xc09e, 0x4312, 0xa0af, 0x0, 0x1);
        gbc.writeMem(0x947f, { 0xcb, 0xee });
        gbc.writeMem(0xa0af, { 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x8d2f);
        EXPECT(gbc.pc(), 0x9481);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x947f), 0xcb);
        EXPECT(gbc.readMem(0x9480), 0xee);
        EXPECT(gbc.readMem(0xa0af), 0xb1);
        // CB EE 02EC
        gbc.setState(0x5821, 0x9aa2, 0xab20, 0x1121, 0xbd95, 0x7d5e, 0x1, 0x0);
        gbc.writeMem(0x5821, { 0xcb, 0xee });
        gbc.writeMem(0x7d5e, { 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x9aa2);
        EXPECT(gbc.pc(), 0x5823);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EE 02F0
        gbc.setState(0x4449, 0x17ab, 0x7f10, 0xbefc, 0x52d7, 0x3aa6, 0x1, 0x0);
        gbc.writeMem(0x3aa6, { 0xb9 });
        gbc.writeMem(0x4449, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x17ab);
        EXPECT(gbc.pc(), 0x444b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EE 02F1
        gbc.setState(0xd2bc, 0x2c90, 0x1bd0, 0x6435, 0x9716, 0x1196, 0x0, 0x0);
        gbc.writeMem(0x1196, { 0x3e });
        gbc.writeMem(0xd2bc, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x2c90);
        EXPECT(gbc.pc(), 0xd2be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2bc), 0xcb);
        EXPECT(gbc.readMem(0xd2bd), 0xee);
        // CB EE 02F2
        gbc.setState(0x3ce0, 0xf743, 0x3cf0, 0xca92, 0x9144, 0x5bc5, 0x0, 0x1);
        gbc.writeMem(0x3ce0, { 0xcb, 0xee });
        gbc.writeMem(0x5bc5, { 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xf743);
        EXPECT(gbc.pc(), 0x3ce2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EE 02F4
        gbc.setState(0x2b7c, 0x61c3, 0xf4f0, 0x6bd4, 0x8e23, 0xdaef, 0x0, 0x0);
        gbc.writeMem(0x2b7c, { 0xcb, 0xee });
        gbc.writeMem(0xdaef, { 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x61c3);
        EXPECT(gbc.pc(), 0x2b7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdaef), 0xbe);
        // CB EE 02F5
        gbc.setState(0x6409, 0x9e08, 0xb6a0, 0x695a, 0x168e, 0x81de, 0x0, 0x1);
        gbc.writeMem(0x6409, { 0xcb, 0xee });
        gbc.writeMem(0x81de, { 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x9e08);
        EXPECT(gbc.pc(), 0x640b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81de), 0x3b);
        // CB EE 02F9
        gbc.setState(0x9f4, 0x5c37, 0x1c20, 0x2967, 0x431a, 0xae78, 0x1, 0x1);
        gbc.writeMem(0x9f4, { 0xcb, 0xee });
        gbc.writeMem(0xae78, { 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x5c37);
        EXPECT(gbc.pc(), 0x9f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae78), 0xf9);
        // CB EE 02FB
        gbc.setState(0x27d8, 0x8315, 0x7920, 0xff08, 0x2ed1, 0xd8dd, 0x1, 0x1);
        gbc.writeMem(0x27d8, { 0xcb, 0xee });
        gbc.writeMem(0xd8dd, { 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x8315);
        EXPECT(gbc.pc(), 0x27da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8dd), 0x67);
        // CB EE 02FC
        gbc.setState(0x77d0, 0x3611, 0x4720, 0x9153, 0x7933, 0xd7ef, 0x0, 0x1);
        gbc.writeMem(0x77d0, { 0xcb, 0xee });
        gbc.writeMem(0xd7ef, { 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x3611);
        EXPECT(gbc.pc(), 0x77d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7ef), 0x60);
        // CB EE 02FD
        gbc.setState(0x4216, 0x84b9, 0x2100, 0xd7e2, 0x85b0, 0xb21d, 0x1, 0x1);
        gbc.writeMem(0x4216, { 0xcb, 0xee });
        gbc.writeMem(0xb21d, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x84b9);
        EXPECT(gbc.pc(), 0x4218);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb21d), 0xb8);
        // CB EE 02FE
        gbc.setState(0xb659, 0x3564, 0xe00, 0x53c6, 0x6e50, 0xcca4, 0x0, 0x1);
        gbc.writeMem(0xb659, { 0xcb, 0xee });
        gbc.writeMem(0xcca4, { 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x3564);
        EXPECT(gbc.pc(), 0xb65b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb659), 0xcb);
        EXPECT(gbc.readMem(0xb65a), 0xee);
        EXPECT(gbc.readMem(0xcca4), 0xb3);
        // CB EE 02FF
        gbc.setState(0xa71a, 0xfe8d, 0x39c0, 0xf37e, 0x8554, 0x1516, 0x0, 0x0);
        gbc.writeMem(0x1516, { 0xae });
        gbc.writeMem(0xa71a, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xfe8d);
        EXPECT(gbc.pc(), 0xa71c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa71a), 0xcb);
        EXPECT(gbc.readMem(0xa71b), 0xee);
        // CB EE 0300
        gbc.setState(0x99b0, 0x51c2, 0x61d0, 0x559, 0x8950, 0x18ca, 0x1, 0x1);
        gbc.writeMem(0x18ca, { 0x21 });
        gbc.writeMem(0x99b0, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x51c2);
        EXPECT(gbc.pc(), 0x99b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99b0), 0xcb);
        EXPECT(gbc.readMem(0x99b1), 0xee);
        // CB EE 0302
        gbc.setState(0x6ac0, 0x6c23, 0xa650, 0xbed6, 0xba35, 0xa858, 0x1, 0x1);
        gbc.writeMem(0x6ac0, { 0xcb, 0xee });
        gbc.writeMem(0xa858, { 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x6c23);
        EXPECT(gbc.pc(), 0x6ac2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa858), 0xe8);
        // CB EE 0303
        gbc.setState(0x19cc, 0xdee9, 0x5cb0, 0x3e46, 0x924b, 0xa3a0, 0x1, 0x0);
        gbc.writeMem(0x19cc, { 0xcb, 0xee });
        gbc.writeMem(0xa3a0, { 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xdee9);
        EXPECT(gbc.pc(), 0x19ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3a0), 0xad);
        // CB EE 0304
        gbc.setState(0xcc6e, 0xa99d, 0x9bf0, 0x77e7, 0xb4e0, 0x70c7, 0x1, 0x1);
        gbc.writeMem(0x70c7, { 0xea });
        gbc.writeMem(0xcc6e, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xa99d);
        EXPECT(gbc.pc(), 0xcc70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc6e), 0xcb);
        EXPECT(gbc.readMem(0xcc6f), 0xee);
        // CB EE 0305
        gbc.setState(0x138f, 0x7e29, 0xaf90, 0x4599, 0xc855, 0xf67b, 0x0, 0x1);
        gbc.writeMem(0x138f, { 0xcb, 0xee });
        gbc.writeMem(0xf67b, { 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x7e29);
        EXPECT(gbc.pc(), 0x1391);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf67b), 0xe7);
        // CB EE 0307
        gbc.setState(0xe47f, 0xa2fe, 0xa530, 0x6da6, 0x5817, 0x93f9, 0x1, 0x0);
        gbc.writeMem(0x93f9, { 0xdf });
        gbc.writeMem(0xe47f, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xa2fe);
        EXPECT(gbc.pc(), 0xe481);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93f9), 0xff);
        EXPECT(gbc.readMem(0xe47f), 0xcb);
        EXPECT(gbc.readMem(0xe480), 0xee);
        // CB EE 0308
        gbc.setState(0xca6f, 0x4b0d, 0xb050, 0xbb16, 0xfb92, 0x13d5, 0x0, 0x1);
        gbc.writeMem(0x13d5, { 0xba });
        gbc.writeMem(0xca6f, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x4b0d);
        EXPECT(gbc.pc(), 0xca71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca6f), 0xcb);
        EXPECT(gbc.readMem(0xca70), 0xee);
        // CB EE 0309
        gbc.setState(0x957e, 0xddd5, 0x52e0, 0xde14, 0x48da, 0xedf1, 0x0, 0x1);
        gbc.writeMem(0x957e, { 0xcb, 0xee });
        gbc.writeMem(0xedf1, { 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xddd5);
        EXPECT(gbc.pc(), 0x9580);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x957e), 0xcb);
        EXPECT(gbc.readMem(0x957f), 0xee);
        EXPECT(gbc.readMem(0xedf1), 0x73);
        // CB EE 030A
        gbc.setState(0x3f6e, 0x63cb, 0xf710, 0x2e23, 0xf7e5, 0x3c02, 0x0, 0x0);
        gbc.writeMem(0x3c02, { 0xe0 });
        gbc.writeMem(0x3f6e, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x63cb);
        EXPECT(gbc.pc(), 0x3f70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EE 030B
        gbc.setState(0xcb86, 0x6e8b, 0x21b0, 0x43be, 0xc17b, 0x7c37, 0x1, 0x1);
        gbc.writeMem(0x7c37, { 0x2d });
        gbc.writeMem(0xcb86, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x6e8b);
        EXPECT(gbc.pc(), 0xcb88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb86), 0xcb);
        EXPECT(gbc.readMem(0xcb87), 0xee);
        // CB EE 030C
        gbc.setState(0xe439, 0x5c04, 0xe430, 0x55cb, 0x5888, 0xf4e3, 0x1, 0x1);
        gbc.writeMem(0xe439, { 0xcb, 0xee });
        gbc.writeMem(0xf4e3, { 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x5c04);
        EXPECT(gbc.pc(), 0xe43b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe439), 0xcb);
        EXPECT(gbc.readMem(0xe43a), 0xee);
        EXPECT(gbc.readMem(0xf4e3), 0x7c);
        // CB EE 030D
        gbc.setState(0x607c, 0x706a, 0x3c60, 0x96ee, 0x8f46, 0x7393, 0x1, 0x1);
        gbc.writeMem(0x607c, { 0xcb, 0xee });
        gbc.writeMem(0x7393, { 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x706a);
        EXPECT(gbc.pc(), 0x607e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EE 030E
        gbc.setState(0xd920, 0x3180, 0x350, 0x9b74, 0xa3ba, 0x93bf, 0x0, 0x0);
        gbc.writeMem(0x93bf, { 0x79 });
        gbc.writeMem(0xd920, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x3180);
        EXPECT(gbc.pc(), 0xd922);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93bf), 0x79);
        EXPECT(gbc.readMem(0xd920), 0xcb);
        EXPECT(gbc.readMem(0xd921), 0xee);
        // CB EE 030F
        gbc.setState(0xe781, 0x98d3, 0xdaa0, 0x26ac, 0x931e, 0xed86, 0x0, 0x0);
        gbc.writeMem(0xe781, { 0xcb, 0xee });
        gbc.writeMem(0xed86, { 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x98d3);
        EXPECT(gbc.pc(), 0xe783);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe781), 0xcb);
        EXPECT(gbc.readMem(0xe782), 0xee);
        EXPECT(gbc.readMem(0xed86), 0x20);
        // CB EE 0310
        gbc.setState(0x7d1d, 0xfe61, 0xeda0, 0xc3c9, 0x52c0, 0xf1fb, 0x1, 0x1);
        gbc.writeMem(0x7d1d, { 0xcb, 0xee });
        gbc.writeMem(0xf1fb, { 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xfe61);
        EXPECT(gbc.pc(), 0x7d1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf1fb), 0xe8);
        // CB EE 0311
        gbc.setState(0x1d42, 0x1f03, 0x1800, 0x2ace, 0x8eab, 0xcb52, 0x1, 0x1);
        gbc.writeMem(0x1d42, { 0xcb, 0xee });
        gbc.writeMem(0xcb52, { 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x1f03);
        EXPECT(gbc.pc(), 0x1d44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb52), 0xa6);
        // CB EE 0312
        gbc.setState(0xa780, 0x7508, 0x8ed0, 0x7493, 0x9b81, 0x8b88, 0x0, 0x0);
        gbc.writeMem(0x8b88, { 0x76 });
        gbc.writeMem(0xa780, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x7508);
        EXPECT(gbc.pc(), 0xa782);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b88), 0x76);
        EXPECT(gbc.readMem(0xa780), 0xcb);
        EXPECT(gbc.readMem(0xa781), 0xee);
        // CB EE 0313
        gbc.setState(0xca12, 0x877d, 0x3f70, 0xa16b, 0x48a, 0x77bd, 0x1, 0x1);
        gbc.writeMem(0x77bd, { 0x26 });
        gbc.writeMem(0xca12, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x877d);
        EXPECT(gbc.pc(), 0xca14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca12), 0xcb);
        EXPECT(gbc.readMem(0xca13), 0xee);
        // CB EE 0314
        gbc.setState(0x7c95, 0x7fc7, 0x7d60, 0x5863, 0xbb5b, 0xa873, 0x0, 0x0);
        gbc.writeMem(0x7c95, { 0xcb, 0xee });
        gbc.writeMem(0xa873, { 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x7fc7);
        EXPECT(gbc.pc(), 0x7c97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa873), 0x64);
        // CB EE 0315
        gbc.setState(0x3536, 0x2a2a, 0xe6e0, 0xe6ae, 0xb88c, 0x5df3, 0x0, 0x1);
        gbc.writeMem(0x3536, { 0xcb, 0xee });
        gbc.writeMem(0x5df3, { 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x2a2a);
        EXPECT(gbc.pc(), 0x3538);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EE 0316
        gbc.setState(0xef7d, 0x4ac8, 0x10b0, 0xd38e, 0x770d, 0x6d79, 0x1, 0x0);
        gbc.writeMem(0x6d79, { 0xff });
        gbc.writeMem(0xef7d, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x4ac8);
        EXPECT(gbc.pc(), 0xef7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef7d), 0xcb);
        EXPECT(gbc.readMem(0xef7e), 0xee);
        // CB EE 0317
        gbc.setState(0xe605, 0x8f51, 0x8b90, 0xcdc7, 0xb8ac, 0xdc5f, 0x1, 0x0);
        gbc.writeMem(0xdc5f, { 0x14 });
        gbc.writeMem(0xe605, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x8f51);
        EXPECT(gbc.pc(), 0xe607);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc5f), 0x34);
        EXPECT(gbc.readMem(0xe605), 0xcb);
        EXPECT(gbc.readMem(0xe606), 0xee);
        // CB EE 0318
        gbc.setState(0x6f24, 0xe902, 0xb70, 0x9557, 0x5585, 0x1d60, 0x1, 0x1);
        gbc.writeMem(0x1d60, { 0xed });
        gbc.writeMem(0x6f24, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xe902);
        EXPECT(gbc.pc(), 0x6f26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EE 0319
        gbc.setState(0xa9be, 0x295e, 0x5650, 0xe3ea, 0xeacc, 0x6c, 0x1, 0x0);
        gbc.writeMem(0x6c, { 0xa1 });
        gbc.writeMem(0xa9be, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x295e);
        EXPECT(gbc.pc(), 0xa9c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9be), 0xcb);
        EXPECT(gbc.readMem(0xa9bf), 0xee);
        // CB EE 031A
        gbc.setState(0x6dc5, 0xe475, 0xd6e0, 0xdbec, 0x7382, 0x1997, 0x0, 0x0);
        gbc.writeMem(0x1997, { 0x66 });
        gbc.writeMem(0x6dc5, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xe475);
        EXPECT(gbc.pc(), 0x6dc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EE 031B
        gbc.setState(0xe6c9, 0xa71, 0x73f0, 0x24db, 0x9d80, 0x9bc1, 0x1, 0x1);
        gbc.writeMem(0x9bc1, { 0x7 });
        gbc.writeMem(0xe6c9, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xa71);
        EXPECT(gbc.pc(), 0xe6cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bc1), 0x27);
        EXPECT(gbc.readMem(0xe6c9), 0xcb);
        EXPECT(gbc.readMem(0xe6ca), 0xee);
        // CB EE 031C
        gbc.setState(0xc07f, 0xca13, 0xa760, 0x1d7a, 0x59db, 0x619c, 0x0, 0x1);
        gbc.writeMem(0x619c, { 0x70 });
        gbc.writeMem(0xc07f, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xca13);
        EXPECT(gbc.pc(), 0xc081);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc07f), 0xcb);
        EXPECT(gbc.readMem(0xc080), 0xee);
        // CB EE 031D
        gbc.setState(0xdd3e, 0xc601, 0xf5a0, 0xf82d, 0x2637, 0xebe4, 0x1, 0x0);
        gbc.writeMem(0xdd3e, { 0xcb, 0xee });
        gbc.writeMem(0xebe4, { 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xc601);
        EXPECT(gbc.pc(), 0xdd40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd3e), 0xcb);
        EXPECT(gbc.readMem(0xdd3f), 0xee);
        EXPECT(gbc.readMem(0xebe4), 0xbf);
        // CB EE 0320
        gbc.setState(0xbb74, 0xe084, 0x3b30, 0x9ba8, 0xe8f6, 0x9a46, 0x1, 0x0);
        gbc.writeMem(0x9a46, { 0x10 });
        gbc.writeMem(0xbb74, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xe084);
        EXPECT(gbc.pc(), 0xbb76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a46), 0x30);
        EXPECT(gbc.readMem(0xbb74), 0xcb);
        EXPECT(gbc.readMem(0xbb75), 0xee);
        // CB EE 0321
        gbc.setState(0x169c, 0xc764, 0xcb40, 0xa64e, 0xbc44, 0x260f, 0x0, 0x1);
        gbc.writeMem(0x169c, { 0xcb, 0xee });
        gbc.writeMem(0x260f, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xc764);
        EXPECT(gbc.pc(), 0x169e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EE 0322
        gbc.setState(0xca4f, 0x6a3a, 0xf580, 0xc9ac, 0x1097, 0x89ba, 0x0, 0x0);
        gbc.writeMem(0x89ba, { 0xd2 });
        gbc.writeMem(0xca4f, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x6a3a);
        EXPECT(gbc.pc(), 0xca51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89ba), 0xf2);
        EXPECT(gbc.readMem(0xca4f), 0xcb);
        EXPECT(gbc.readMem(0xca50), 0xee);
        // CB EE 0324
        gbc.setState(0x53c5, 0xfa3, 0x8760, 0x7740, 0xc743, 0x639d, 0x0, 0x0);
        gbc.writeMem(0x53c5, { 0xcb, 0xee });
        gbc.writeMem(0x639d, { 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xfa3);
        EXPECT(gbc.pc(), 0x53c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EE 0326
        gbc.setState(0xedcb, 0xbe51, 0x79f0, 0xc6fd, 0x78f0, 0xf191, 0x0, 0x0);
        gbc.writeMem(0xedcb, { 0xcb, 0xee });
        gbc.writeMem(0xf191, { 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xbe51);
        EXPECT(gbc.pc(), 0xedcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedcb), 0xcb);
        EXPECT(gbc.readMem(0xedcc), 0xee);
        EXPECT(gbc.readMem(0xf191), 0xe1);
        // CB EE 0327
        gbc.setState(0x2f6c, 0x4915, 0x7050, 0xdcbd, 0x851c, 0xcf5f, 0x0, 0x0);
        gbc.writeMem(0x2f6c, { 0xcb, 0xee });
        gbc.writeMem(0xcf5f, { 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x4915);
        EXPECT(gbc.pc(), 0x2f6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf5f), 0x7f);
        // CB EE 0329
        gbc.setState(0x6236, 0x741a, 0x6f60, 0xd85b, 0x7556, 0xe3b9, 0x0, 0x0);
        gbc.writeMem(0x6236, { 0xcb, 0xee });
        gbc.writeMem(0xe3b9, { 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x741a);
        EXPECT(gbc.pc(), 0x6238);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3b9), 0x7e);
        // CB EE 032A
        gbc.setState(0x302f, 0xddad, 0x34c0, 0xe6bc, 0x3549, 0x950c, 0x0, 0x0);
        gbc.writeMem(0x302f, { 0xcb, 0xee });
        gbc.writeMem(0x950c, { 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xddad);
        EXPECT(gbc.pc(), 0x3031);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x950c), 0xbf);
        // CB EE 032C
        gbc.setState(0xd956, 0xdb35, 0x6b50, 0xa30, 0x9e6c, 0xd3f, 0x1, 0x0);
        gbc.writeMem(0xd3f, { 0xfa });
        gbc.writeMem(0xd956, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xdb35);
        EXPECT(gbc.pc(), 0xd958);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd956), 0xcb);
        EXPECT(gbc.readMem(0xd957), 0xee);
        // CB EE 032D
        gbc.setState(0x1e47, 0x6acb, 0xd040, 0x5d0, 0x4dc9, 0xece3, 0x1, 0x1);
        gbc.writeMem(0x1e47, { 0xcb, 0xee });
        gbc.writeMem(0xece3, { 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x6acb);
        EXPECT(gbc.pc(), 0x1e49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xece3), 0x66);
        // CB EE 032E
        gbc.setState(0xe1e5, 0x731, 0xdd90, 0xfd1b, 0xb0ef, 0xfbbe, 0x0, 0x0);
        gbc.writeMem(0xe1e5, { 0xcb, 0xee });
        gbc.writeMem(0xfbbe, { 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x731);
        EXPECT(gbc.pc(), 0xe1e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1e5), 0xcb);
        EXPECT(gbc.readMem(0xe1e6), 0xee);
        EXPECT(gbc.readMem(0xfbbe), 0xe8);
        // CB EE 032F
        gbc.setState(0x3030, 0xcfac, 0xf500, 0x8fcd, 0xa858, 0x6acc, 0x1, 0x1);
        gbc.writeMem(0x3030, { 0xcb, 0xee });
        gbc.writeMem(0x6acc, { 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xcfac);
        EXPECT(gbc.pc(), 0x3032);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EE 0330
        gbc.setState(0x8c39, 0xe648, 0xd2b0, 0xea0a, 0x565d, 0xa5b8, 0x1, 0x0);
        gbc.writeMem(0x8c39, { 0xcb, 0xee });
        gbc.writeMem(0xa5b8, { 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xe648);
        EXPECT(gbc.pc(), 0x8c3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c39), 0xcb);
        EXPECT(gbc.readMem(0x8c3a), 0xee);
        EXPECT(gbc.readMem(0xa5b8), 0xe9);
        // CB EE 0331
        gbc.setState(0xc24c, 0x95ff, 0x6500, 0x991b, 0x3e36, 0x8da8, 0x1, 0x0);
        gbc.writeMem(0x8da8, { 0xad });
        gbc.writeMem(0xc24c, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x95ff);
        EXPECT(gbc.pc(), 0xc24e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8da8), 0xad);
        EXPECT(gbc.readMem(0xc24c), 0xcb);
        EXPECT(gbc.readMem(0xc24d), 0xee);
        // CB EE 0333
        gbc.setState(0x38e9, 0x2a59, 0x7730, 0xc7c1, 0x55bd, 0x62a6, 0x0, 0x0);
        gbc.writeMem(0x38e9, { 0xcb, 0xee });
        gbc.writeMem(0x62a6, { 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x2a59);
        EXPECT(gbc.pc(), 0x38eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EE 0334
        gbc.setState(0xe781, 0x3872, 0xd210, 0x5b99, 0x3d5d, 0xdf0f, 0x1, 0x0);
        gbc.writeMem(0xdf0f, { 0xf2 });
        gbc.writeMem(0xe781, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x3872);
        EXPECT(gbc.pc(), 0xe783);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf0f), 0xf2);
        EXPECT(gbc.readMem(0xe781), 0xcb);
        EXPECT(gbc.readMem(0xe782), 0xee);
        // CB EE 0335
        gbc.setState(0xe78b, 0xc811, 0x49c0, 0x5e57, 0xe4db, 0x8220, 0x1, 0x0);
        gbc.writeMem(0x8220, { 0x46 });
        gbc.writeMem(0xe78b, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xc811);
        EXPECT(gbc.pc(), 0xe78d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8220), 0x66);
        EXPECT(gbc.readMem(0xe78b), 0xcb);
        EXPECT(gbc.readMem(0xe78c), 0xee);
        // CB EE 0338
        gbc.setState(0x8226, 0x2af6, 0x4b0, 0xbd5, 0x21e, 0x2d33, 0x1, 0x0);
        gbc.writeMem(0x2d33, { 0x34 });
        gbc.writeMem(0x8226, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x2af6);
        EXPECT(gbc.pc(), 0x8228);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8226), 0xcb);
        EXPECT(gbc.readMem(0x8227), 0xee);
        // CB EE 0339
        gbc.setState(0xeb03, 0xfe, 0x1090, 0x1287, 0x1d65, 0x8ac5, 0x0, 0x1);
        gbc.writeMem(0x8ac5, { 0x5 });
        gbc.writeMem(0xeb03, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xfe);
        EXPECT(gbc.pc(), 0xeb05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ac5), 0x25);
        EXPECT(gbc.readMem(0xeb03), 0xcb);
        EXPECT(gbc.readMem(0xeb04), 0xee);
        // CB EE 033A
        gbc.setState(0xe95a, 0x96ba, 0x5610, 0xfba2, 0x53cd, 0x1e9f, 0x0, 0x1);
        gbc.writeMem(0x1e9f, { 0xa5 });
        gbc.writeMem(0xe95a, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x96ba);
        EXPECT(gbc.pc(), 0xe95c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe95a), 0xcb);
        EXPECT(gbc.readMem(0xe95b), 0xee);
        // CB EE 033B
        gbc.setState(0x837b, 0x25e3, 0x5b80, 0xff47, 0x2fc4, 0xd040, 0x1, 0x1);
        gbc.writeMem(0x837b, { 0xcb, 0xee });
        gbc.writeMem(0xd040, { 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x25e3);
        EXPECT(gbc.pc(), 0x837d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x837b), 0xcb);
        EXPECT(gbc.readMem(0x837c), 0xee);
        EXPECT(gbc.readMem(0xd040), 0xb6);
        // CB EE 033C
        gbc.setState(0x66c2, 0xcd1c, 0xe7c0, 0x78ba, 0x9d19, 0x8bec, 0x0, 0x1);
        gbc.writeMem(0x66c2, { 0xcb, 0xee });
        gbc.writeMem(0x8bec, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xcd1c);
        EXPECT(gbc.pc(), 0x66c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bec), 0xba);
        // CB EE 033E
        gbc.setState(0x9fd1, 0xeac6, 0x76f0, 0xef2e, 0xb564, 0x61d0, 0x0, 0x1);
        gbc.writeMem(0x61d0, { 0xb6 });
        gbc.writeMem(0x9fd1, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xeac6);
        EXPECT(gbc.pc(), 0x9fd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fd1), 0xcb);
        EXPECT(gbc.readMem(0x9fd2), 0xee);
        // CB EE 033F
        gbc.setState(0x51ac, 0x6a55, 0x52c0, 0xde89, 0xbbdf, 0x3483, 0x0, 0x1);
        gbc.writeMem(0x3483, { 0x31 });
        gbc.writeMem(0x51ac, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x6a55);
        EXPECT(gbc.pc(), 0x51ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EE 0341
        gbc.setState(0x22c2, 0x6573, 0x8dd0, 0xe6c8, 0x7ca3, 0x1e69, 0x1, 0x0);
        gbc.writeMem(0x1e69, { 0x24 });
        gbc.writeMem(0x22c2, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x6573);
        EXPECT(gbc.pc(), 0x22c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EE 0342
        gbc.setState(0x8b6, 0xd6cf, 0xbe20, 0x676e, 0xec23, 0xed23, 0x0, 0x0);
        gbc.writeMem(0x8b6, { 0xcb, 0xee });
        gbc.writeMem(0xed23, { 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xd6cf);
        EXPECT(gbc.pc(), 0x8b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed23), 0xeb);
        // CB EE 0343
        gbc.setState(0x92ef, 0x3bb8, 0xa090, 0x3318, 0x89b1, 0xa32c, 0x1, 0x0);
        gbc.writeMem(0x92ef, { 0xcb, 0xee });
        gbc.writeMem(0xa32c, { 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x3bb8);
        EXPECT(gbc.pc(), 0x92f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92ef), 0xcb);
        EXPECT(gbc.readMem(0x92f0), 0xee);
        EXPECT(gbc.readMem(0xa32c), 0x6d);
        // CB EE 0348
        gbc.setState(0xb57f, 0x5613, 0xcef0, 0x3772, 0x5615, 0x4bf7, 0x1, 0x1);
        gbc.writeMem(0x4bf7, { 0x6a });
        gbc.writeMem(0xb57f, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x5613);
        EXPECT(gbc.pc(), 0xb581);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb57f), 0xcb);
        EXPECT(gbc.readMem(0xb580), 0xee);
        // CB EE 0349
        gbc.setState(0x39d, 0xfe2f, 0x8720, 0x3ca4, 0xd128, 0x134a, 0x1, 0x1);
        gbc.writeMem(0x39d, { 0xcb, 0xee });
        gbc.writeMem(0x134a, { 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xfe2f);
        EXPECT(gbc.pc(), 0x39f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EE 034A
        gbc.setState(0x184c, 0x4214, 0x8d80, 0xfc5d, 0x89d9, 0xa994, 0x1, 0x1);
        gbc.writeMem(0x184c, { 0xcb, 0xee });
        gbc.writeMem(0xa994, { 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x4214);
        EXPECT(gbc.pc(), 0x184e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa994), 0xec);
        // CB EE 034B
        gbc.setState(0x1bd0, 0x9d2b, 0xc6d0, 0xa568, 0x4faf, 0x32cb, 0x1, 0x0);
        gbc.writeMem(0x1bd0, { 0xcb, 0xee });
        gbc.writeMem(0x32cb, { 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x9d2b);
        EXPECT(gbc.pc(), 0x1bd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EE 034C
        gbc.setState(0x6ae9, 0x98d8, 0xd250, 0x2202, 0x93dd, 0xdd73, 0x1, 0x1);
        gbc.writeMem(0x6ae9, { 0xcb, 0xee });
        gbc.writeMem(0xdd73, { 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x98d8);
        EXPECT(gbc.pc(), 0x6aeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd73), 0x69);
        // CB EE 034D
        gbc.setState(0xb864, 0x76c2, 0x9e0, 0x3587, 0x415c, 0x4865, 0x0, 0x0);
        gbc.writeMem(0x4865, { 0xa5 });
        gbc.writeMem(0xb864, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x76c2);
        EXPECT(gbc.pc(), 0xb866);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb864), 0xcb);
        EXPECT(gbc.readMem(0xb865), 0xee);
        // CB EE 034E
        gbc.setState(0x262e, 0xc86b, 0xaa50, 0x781d, 0xe38a, 0x89df, 0x1, 0x0);
        gbc.writeMem(0x262e, { 0xcb, 0xee });
        gbc.writeMem(0x89df, { 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xc86b);
        EXPECT(gbc.pc(), 0x2630);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89df), 0xed);
        // CB EE 034F
        gbc.setState(0x51ac, 0xd857, 0xf8e0, 0xe84a, 0xb0b5, 0xbf53, 0x0, 0x0);
        gbc.writeMem(0x51ac, { 0xcb, 0xee });
        gbc.writeMem(0xbf53, { 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xd857);
        EXPECT(gbc.pc(), 0x51ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf53), 0x6b);
        // CB EE 0350
        gbc.setState(0xc880, 0x179, 0xd360, 0xd6cc, 0xea60, 0x28d9, 0x1, 0x0);
        gbc.writeMem(0x28d9, { 0xbc });
        gbc.writeMem(0xc880, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x179);
        EXPECT(gbc.pc(), 0xc882);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc880), 0xcb);
        EXPECT(gbc.readMem(0xc881), 0xee);
        // CB EE 0351
        gbc.setState(0x8216, 0xf24, 0xe670, 0x4aee, 0x67ed, 0xa329, 0x1, 0x1);
        gbc.writeMem(0x8216, { 0xcb, 0xee });
        gbc.writeMem(0xa329, { 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xf24);
        EXPECT(gbc.pc(), 0x8218);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8216), 0xcb);
        EXPECT(gbc.readMem(0x8217), 0xee);
        EXPECT(gbc.readMem(0xa329), 0xa6);
        // CB EE 0352
        gbc.setState(0xc0f1, 0x9dcb, 0x1810, 0x3dbc, 0x1c3f, 0xb572, 0x1, 0x0);
        gbc.writeMem(0xb572, { 0xe9 });
        gbc.writeMem(0xc0f1, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x9dcb);
        EXPECT(gbc.pc(), 0xc0f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb572), 0xe9);
        EXPECT(gbc.readMem(0xc0f1), 0xcb);
        EXPECT(gbc.readMem(0xc0f2), 0xee);
        // CB EE 0355
        gbc.setState(0x608e, 0x6f44, 0x7d30, 0x7e0, 0x45cb, 0x6a4, 0x0, 0x0);
        gbc.writeMem(0x6a4, { 0xfc });
        gbc.writeMem(0x608e, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x6f44);
        EXPECT(gbc.pc(), 0x6090);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EE 0356
        gbc.setState(0xb819, 0x5752, 0x5610, 0xcea6, 0xcb60, 0x24b0, 0x0, 0x0);
        gbc.writeMem(0x24b0, { 0xa6 });
        gbc.writeMem(0xb819, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x5752);
        EXPECT(gbc.pc(), 0xb81b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb819), 0xcb);
        EXPECT(gbc.readMem(0xb81a), 0xee);
        // CB EE 0357
        gbc.setState(0x8f95, 0x653b, 0xbc00, 0x6b79, 0xd517, 0xa55c, 0x0, 0x1);
        gbc.writeMem(0x8f95, { 0xcb, 0xee });
        gbc.writeMem(0xa55c, { 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x653b);
        EXPECT(gbc.pc(), 0x8f97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f95), 0xcb);
        EXPECT(gbc.readMem(0x8f96), 0xee);
        EXPECT(gbc.readMem(0xa55c), 0xb1);
        // CB EE 0358
        gbc.setState(0x622d, 0x2b9b, 0xd910, 0xa2ff, 0x8afa, 0x10b9, 0x1, 0x0);
        gbc.writeMem(0x10b9, { 0x72 });
        gbc.writeMem(0x622d, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x2b9b);
        EXPECT(gbc.pc(), 0x622f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EE 035C
        gbc.setState(0x7338, 0xb550, 0x62f0, 0x8784, 0x2934, 0xc5cc, 0x0, 0x0);
        gbc.writeMem(0x7338, { 0xcb, 0xee });
        gbc.writeMem(0xc5cc, { 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xb550);
        EXPECT(gbc.pc(), 0x733a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5cc), 0xb8);
        // CB EE 035E
        gbc.setState(0x2578, 0xea11, 0x16f0, 0xd4f5, 0xdd67, 0x6321, 0x0, 0x0);
        gbc.writeMem(0x2578, { 0xcb, 0xee });
        gbc.writeMem(0x6321, { 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xea11);
        EXPECT(gbc.pc(), 0x257a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EE 035F
        gbc.setState(0x141a, 0xfbf3, 0xa330, 0xd889, 0xe9f2, 0x68b2, 0x1, 0x0);
        gbc.writeMem(0x141a, { 0xcb, 0xee });
        gbc.writeMem(0x68b2, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xfbf3);
        EXPECT(gbc.pc(), 0x141c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EE 0360
        gbc.setState(0x5b12, 0x70d7, 0x48e0, 0xf3ee, 0x89c8, 0xca89, 0x1, 0x0);
        gbc.writeMem(0x5b12, { 0xcb, 0xee });
        gbc.writeMem(0xca89, { 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x70d7);
        EXPECT(gbc.pc(), 0x5b14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca89), 0x60);
        // CB EE 0362
        gbc.setState(0x521e, 0x7d10, 0x40e0, 0xeee9, 0xda1d, 0xa78c, 0x1, 0x0);
        gbc.writeMem(0x521e, { 0xcb, 0xee });
        gbc.writeMem(0xa78c, { 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x7d10);
        EXPECT(gbc.pc(), 0x5220);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa78c), 0x2b);
        // CB EE 0363
        gbc.setState(0xe88d, 0x7820, 0xd0e0, 0xb0cf, 0xa19e, 0x41e3, 0x0, 0x1);
        gbc.writeMem(0x41e3, { 0x73 });
        gbc.writeMem(0xe88d, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x7820);
        EXPECT(gbc.pc(), 0xe88f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe88d), 0xcb);
        EXPECT(gbc.readMem(0xe88e), 0xee);
        // CB EE 0365
        gbc.setState(0xe5a4, 0x449d, 0xfc80, 0xe6b, 0xc026, 0x98f2, 0x1, 0x1);
        gbc.writeMem(0x98f2, { 0xe7 });
        gbc.writeMem(0xe5a4, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x449d);
        EXPECT(gbc.pc(), 0xe5a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98f2), 0xe7);
        EXPECT(gbc.readMem(0xe5a4), 0xcb);
        EXPECT(gbc.readMem(0xe5a5), 0xee);
        // CB EE 0366
        gbc.setState(0xe9c7, 0xf3e, 0x4f90, 0x4696, 0x6f9e, 0xbe6c, 0x0, 0x0);
        gbc.writeMem(0xbe6c, { 0x60 });
        gbc.writeMem(0xe9c7, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xf3e);
        EXPECT(gbc.pc(), 0xe9c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe6c), 0x60);
        EXPECT(gbc.readMem(0xe9c7), 0xcb);
        EXPECT(gbc.readMem(0xe9c8), 0xee);
        // CB EE 0367
        gbc.setState(0x9431, 0x2840, 0xc3a0, 0xda31, 0xc55b, 0x97b, 0x1, 0x0);
        gbc.writeMem(0x97b, { 0xb1 });
        gbc.writeMem(0x9431, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x2840);
        EXPECT(gbc.pc(), 0x9433);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9431), 0xcb);
        EXPECT(gbc.readMem(0x9432), 0xee);
        // CB EE 0369
        gbc.setState(0x6f4c, 0xc983, 0xdd90, 0xd84f, 0x6863, 0xdf70, 0x0, 0x0);
        gbc.writeMem(0x6f4c, { 0xcb, 0xee });
        gbc.writeMem(0xdf70, { 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xc983);
        EXPECT(gbc.pc(), 0x6f4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf70), 0xf6);
        // CB EE 036A
        gbc.setState(0xe537, 0xb155, 0x3050, 0x2d21, 0x3518, 0xdc0c, 0x1, 0x0);
        gbc.writeMem(0xdc0c, { 0x2c });
        gbc.writeMem(0xe537, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xb155);
        EXPECT(gbc.pc(), 0xe539);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc0c), 0x2c);
        EXPECT(gbc.readMem(0xe537), 0xcb);
        EXPECT(gbc.readMem(0xe538), 0xee);
        // CB EE 036C
        gbc.setState(0xca90, 0x1827, 0x1de0, 0x68c2, 0xfa9c, 0xbfc1, 0x0, 0x0);
        gbc.writeMem(0xbfc1, { 0xa7 });
        gbc.writeMem(0xca90, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x1827);
        EXPECT(gbc.pc(), 0xca92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfc1), 0xa7);
        EXPECT(gbc.readMem(0xca90), 0xcb);
        EXPECT(gbc.readMem(0xca91), 0xee);
        // CB EE 036D
        gbc.setState(0x30f5, 0x28bf, 0x4af0, 0x93e2, 0x88a3, 0x9da0, 0x0, 0x0);
        gbc.writeMem(0x30f5, { 0xcb, 0xee });
        gbc.writeMem(0x9da0, { 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x28bf);
        EXPECT(gbc.pc(), 0x30f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9da0), 0xbb);
        // CB EE 036F
        gbc.setState(0xd845, 0x8bd7, 0xbfa0, 0x25d, 0x15fa, 0xd13d, 0x1, 0x0);
        gbc.writeMem(0xd13d, { 0x4b });
        gbc.writeMem(0xd845, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x8bd7);
        EXPECT(gbc.pc(), 0xd847);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd13d), 0x6b);
        EXPECT(gbc.readMem(0xd845), 0xcb);
        EXPECT(gbc.readMem(0xd846), 0xee);
        // CB EE 0371
        gbc.setState(0x6334, 0xc3a0, 0x52f0, 0xcdb6, 0x4d5d, 0x3c43, 0x0, 0x0);
        gbc.writeMem(0x3c43, { 0x7d });
        gbc.writeMem(0x6334, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xc3a0);
        EXPECT(gbc.pc(), 0x6336);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EE 0372
        gbc.setState(0x4a65, 0x1dff, 0xab40, 0x2a4f, 0xf048, 0x7b12, 0x1, 0x0);
        gbc.writeMem(0x4a65, { 0xcb, 0xee });
        gbc.writeMem(0x7b12, { 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x1dff);
        EXPECT(gbc.pc(), 0x4a67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EE 0374
        gbc.setState(0x3d26, 0x5b04, 0xc970, 0x76e6, 0x350f, 0x720f, 0x0, 0x0);
        gbc.writeMem(0x3d26, { 0xcb, 0xee });
        gbc.writeMem(0x720f, { 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x5b04);
        EXPECT(gbc.pc(), 0x3d28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EE 0376
        gbc.setState(0x2995, 0x757c, 0x93f0, 0xd83f, 0xa6a5, 0x39d6, 0x0, 0x1);
        gbc.writeMem(0x2995, { 0xcb, 0xee });
        gbc.writeMem(0x39d6, { 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x757c);
        EXPECT(gbc.pc(), 0x2997);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EE 0379
        gbc.setState(0xb981, 0xba9c, 0x9e60, 0xacf8, 0x6225, 0xf928, 0x0, 0x1);
        gbc.writeMem(0xb981, { 0xcb, 0xee });
        gbc.writeMem(0xf928, { 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xba9c);
        EXPECT(gbc.pc(), 0xb983);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb981), 0xcb);
        EXPECT(gbc.readMem(0xb982), 0xee);
        EXPECT(gbc.readMem(0xf928), 0x2c);
        // CB EE 037B
        gbc.setState(0x76b1, 0x2b00, 0x650, 0x7cdf, 0x2076, 0x9ca2, 0x1, 0x0);
        gbc.writeMem(0x76b1, { 0xcb, 0xee });
        gbc.writeMem(0x9ca2, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x2b00);
        EXPECT(gbc.pc(), 0x76b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ca2), 0xf8);
        // CB EE 037D
        gbc.setState(0x4853, 0xf4e3, 0x12f0, 0x4e24, 0xf63e, 0x6fb1, 0x0, 0x0);
        gbc.writeMem(0x4853, { 0xcb, 0xee });
        gbc.writeMem(0x6fb1, { 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xf4e3);
        EXPECT(gbc.pc(), 0x4855);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EE 037E
        gbc.setState(0x33db, 0x908c, 0x1100, 0xe7ab, 0x7e2a, 0x2901, 0x1, 0x0);
        gbc.writeMem(0x2901, { 0xe0 });
        gbc.writeMem(0x33db, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x908c);
        EXPECT(gbc.pc(), 0x33dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EE 037F
        gbc.setState(0x7a99, 0x6ff2, 0x1e00, 0xece7, 0x5ca3, 0xaea9, 0x0, 0x0);
        gbc.writeMem(0x7a99, { 0xcb, 0xee });
        gbc.writeMem(0xaea9, { 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x6ff2);
        EXPECT(gbc.pc(), 0x7a9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaea9), 0xe6);
        // CB EE 0380
        gbc.setState(0x79ce, 0xc87, 0x9130, 0x2020, 0x773f, 0x8c08, 0x1, 0x0);
        gbc.writeMem(0x79ce, { 0xcb, 0xee });
        gbc.writeMem(0x8c08, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xc87);
        EXPECT(gbc.pc(), 0x79d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c08), 0x30);
        // CB EE 0383
        gbc.setState(0x3e36, 0x44ee, 0xd080, 0x3d23, 0x32aa, 0x92f5, 0x1, 0x1);
        gbc.writeMem(0x3e36, { 0xcb, 0xee });
        gbc.writeMem(0x92f5, { 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x44ee);
        EXPECT(gbc.pc(), 0x3e38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92f5), 0x3d);
        // CB EE 0384
        gbc.setState(0x74df, 0x8672, 0x9e90, 0xad7e, 0x3c68, 0x5aa, 0x0, 0x0);
        gbc.writeMem(0x5aa, { 0xf5 });
        gbc.writeMem(0x74df, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x8672);
        EXPECT(gbc.pc(), 0x74e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EE 0385
        gbc.setState(0x59d, 0x39fd, 0xcae0, 0xcdf1, 0x6640, 0xa831, 0x0, 0x1);
        gbc.writeMem(0x59d, { 0xcb, 0xee });
        gbc.writeMem(0xa831, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x39fd);
        EXPECT(gbc.pc(), 0x59f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa831), 0xf8);
        // CB EE 0386
        gbc.setState(0xb574, 0x4379, 0xbce0, 0x8f56, 0x69d9, 0x750, 0x1, 0x0);
        gbc.writeMem(0x750, { 0xa9 });
        gbc.writeMem(0xb574, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x4379);
        EXPECT(gbc.pc(), 0xb576);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb574), 0xcb);
        EXPECT(gbc.readMem(0xb575), 0xee);
        // CB EE 0387
        gbc.setState(0x246a, 0x7dd5, 0x7340, 0x882, 0xaaca, 0x12a4, 0x1, 0x0);
        gbc.writeMem(0x12a4, { 0xbe });
        gbc.writeMem(0x246a, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x7dd5);
        EXPECT(gbc.pc(), 0x246c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EE 0388
        gbc.setState(0x6c86, 0xeb37, 0xbc40, 0x4ecd, 0x91b0, 0xf7b4, 0x1, 0x0);
        gbc.writeMem(0x6c86, { 0xcb, 0xee });
        gbc.writeMem(0xf7b4, { 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xeb37);
        EXPECT(gbc.pc(), 0x6c88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf7b4), 0x2f);
        // CB EE 0389
        gbc.setState(0x6a89, 0x26de, 0xf9a0, 0xea3f, 0x8a94, 0x2638, 0x1, 0x0);
        gbc.writeMem(0x2638, { 0xf3 });
        gbc.writeMem(0x6a89, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x26de);
        EXPECT(gbc.pc(), 0x6a8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EE 038A
        gbc.setState(0xb787, 0xd35e, 0x9630, 0x1989, 0x1baf, 0xdce6, 0x1, 0x1);
        gbc.writeMem(0xb787, { 0xcb, 0xee });
        gbc.writeMem(0xdce6, { 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xd35e);
        EXPECT(gbc.pc(), 0xb789);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb787), 0xcb);
        EXPECT(gbc.readMem(0xb788), 0xee);
        EXPECT(gbc.readMem(0xdce6), 0xe7);
        // CB EE 038B
        gbc.setState(0x440d, 0x88e1, 0xe570, 0x533b, 0xa228, 0x93b7, 0x1, 0x1);
        gbc.writeMem(0x440d, { 0xcb, 0xee });
        gbc.writeMem(0x93b7, { 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x88e1);
        EXPECT(gbc.pc(), 0x440f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93b7), 0x77);
        // CB EE 038C
        gbc.setState(0x2c59, 0x660, 0xbc20, 0x1900, 0x13f0, 0xc93d, 0x1, 0x0);
        gbc.writeMem(0x2c59, { 0xcb, 0xee });
        gbc.writeMem(0xc93d, { 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x660);
        EXPECT(gbc.pc(), 0x2c5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc93d), 0x6d);
        // CB EE 038D
        gbc.setState(0x1b50, 0x3ec3, 0xe7f0, 0x33c3, 0x24c9, 0x6bab, 0x1, 0x1);
        gbc.writeMem(0x1b50, { 0xcb, 0xee });
        gbc.writeMem(0x6bab, { 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x3ec3);
        EXPECT(gbc.pc(), 0x1b52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EE 038E
        gbc.setState(0x5c25, 0x15e3, 0x19d0, 0xa56, 0x8287, 0x90ed, 0x0, 0x0);
        gbc.writeMem(0x5c25, { 0xcb, 0xee });
        gbc.writeMem(0x90ed, { 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x15e3);
        EXPECT(gbc.pc(), 0x5c27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90ed), 0xea);
        // CB EE 038F
        gbc.setState(0xa1c7, 0x85d7, 0x9090, 0x26e, 0x82e3, 0xdbee, 0x1, 0x0);
        gbc.writeMem(0xa1c7, { 0xcb, 0xee });
        gbc.writeMem(0xdbee, { 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x85d7);
        EXPECT(gbc.pc(), 0xa1c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1c7), 0xcb);
        EXPECT(gbc.readMem(0xa1c8), 0xee);
        EXPECT(gbc.readMem(0xdbee), 0xa6);
        // CB EE 0390
        gbc.setState(0x2faf, 0xbeb0, 0x8510, 0x6f2a, 0xafe3, 0xb43d, 0x1, 0x0);
        gbc.writeMem(0x2faf, { 0xcb, 0xee });
        gbc.writeMem(0xb43d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xbeb0);
        EXPECT(gbc.pc(), 0x2fb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb43d), 0x20);
        // CB EE 0394
        gbc.setState(0x8709, 0xfb18, 0x4820, 0x6d3d, 0xe363, 0xa0b6, 0x0, 0x0);
        gbc.writeMem(0x8709, { 0xcb, 0xee });
        gbc.writeMem(0xa0b6, { 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xfb18);
        EXPECT(gbc.pc(), 0x870b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8709), 0xcb);
        EXPECT(gbc.readMem(0x870a), 0xee);
        EXPECT(gbc.readMem(0xa0b6), 0x36);
        // CB EE 0395
        gbc.setState(0xd990, 0xc868, 0x29b0, 0x7f8c, 0x7366, 0xd5b0, 0x1, 0x1);
        gbc.writeMem(0xd5b0, { 0x44 });
        gbc.writeMem(0xd990, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xc868);
        EXPECT(gbc.pc(), 0xd992);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5b0), 0x64);
        EXPECT(gbc.readMem(0xd990), 0xcb);
        EXPECT(gbc.readMem(0xd991), 0xee);
        // CB EE 0397
        gbc.setState(0x8090, 0x83d5, 0xf610, 0xa164, 0x1e22, 0x8b7e, 0x1, 0x0);
        gbc.writeMem(0x8090, { 0xcb, 0xee });
        gbc.writeMem(0x8b7e, { 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x83d5);
        EXPECT(gbc.pc(), 0x8092);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8090), 0xcb);
        EXPECT(gbc.readMem(0x8091), 0xee);
        EXPECT(gbc.readMem(0x8b7e), 0xea);
        // CB EE 0398
        gbc.setState(0x6891, 0x2223, 0xae90, 0x21d, 0x1e9a, 0xa261, 0x0, 0x0);
        gbc.writeMem(0x6891, { 0xcb, 0xee });
        gbc.writeMem(0xa261, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x2223);
        EXPECT(gbc.pc(), 0x6893);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa261), 0xb3);
        // CB EE 0399
        gbc.setState(0x58b2, 0xa50a, 0xb810, 0x9ce7, 0x9d40, 0x562d, 0x0, 0x0);
        gbc.writeMem(0x562d, { 0xb9 });
        gbc.writeMem(0x58b2, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xa50a);
        EXPECT(gbc.pc(), 0x58b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EE 039A
        gbc.setState(0x7003, 0x6ebe, 0xe120, 0xfbc0, 0x9561, 0x3613, 0x1, 0x1);
        gbc.writeMem(0x3613, { 0xea });
        gbc.writeMem(0x7003, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x6ebe);
        EXPECT(gbc.pc(), 0x7005);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EE 039C
        gbc.setState(0x425f, 0x29c7, 0x30d0, 0xa495, 0xde00, 0xd696, 0x0, 0x0);
        gbc.writeMem(0x425f, { 0xcb, 0xee });
        gbc.writeMem(0xd696, { 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x29c7);
        EXPECT(gbc.pc(), 0x4261);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd696), 0x6f);
        // CB EE 039D
        gbc.setState(0xb55, 0xbea9, 0xa3f0, 0xfda1, 0xf223, 0x23c7, 0x1, 0x0);
        gbc.writeMem(0xb55, { 0xcb, 0xee });
        gbc.writeMem(0x23c7, { 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xbea9);
        EXPECT(gbc.pc(), 0xb57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EE 039E
        gbc.setState(0xce73, 0xc162, 0xe740, 0xae64, 0x2e7e, 0x751f, 0x0, 0x1);
        gbc.writeMem(0x751f, { 0xb8 });
        gbc.writeMem(0xce73, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xc162);
        EXPECT(gbc.pc(), 0xce75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce73), 0xcb);
        EXPECT(gbc.readMem(0xce74), 0xee);
        // CB EE 039F
        gbc.setState(0xb6e, 0x4d72, 0x4e20, 0x2fd7, 0xe9d5, 0xceae, 0x1, 0x1);
        gbc.writeMem(0xb6e, { 0xcb, 0xee });
        gbc.writeMem(0xceae, { 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x4d72);
        EXPECT(gbc.pc(), 0xb70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xceae), 0xf3);
        // CB EE 03A1
        gbc.setState(0xbe46, 0x2c6d, 0xfab0, 0xddd8, 0xa54e, 0x24c1, 0x0, 0x0);
        gbc.writeMem(0x24c1, { 0xf9 });
        gbc.writeMem(0xbe46, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x2c6d);
        EXPECT(gbc.pc(), 0xbe48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe46), 0xcb);
        EXPECT(gbc.readMem(0xbe47), 0xee);
        // CB EE 03A3
        gbc.setState(0x2772, 0xa2ae, 0x21b0, 0xca05, 0x1fd4, 0x4bf2, 0x0, 0x1);
        gbc.writeMem(0x2772, { 0xcb, 0xee });
        gbc.writeMem(0x4bf2, { 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xa2ae);
        EXPECT(gbc.pc(), 0x2774);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EE 03A5
        gbc.setState(0x719a, 0xc796, 0x6110, 0x890f, 0xa000, 0xaa13, 0x1, 0x1);
        gbc.writeMem(0x719a, { 0xcb, 0xee });
        gbc.writeMem(0xaa13, { 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xc796);
        EXPECT(gbc.pc(), 0x719c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa13), 0xe1);
        // CB EE 03A6
        gbc.setState(0x2a9e, 0x6a36, 0xaf0, 0xabf1, 0x6cac, 0x3f4a, 0x0, 0x0);
        gbc.writeMem(0x2a9e, { 0xcb, 0xee });
        gbc.writeMem(0x3f4a, { 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x6a36);
        EXPECT(gbc.pc(), 0x2aa0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EE 03A7
        gbc.setState(0xc87b, 0x13c6, 0x7090, 0x50f6, 0xaf1e, 0xb679, 0x0, 0x1);
        gbc.writeMem(0xb679, { 0x2a });
        gbc.writeMem(0xc87b, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x13c6);
        EXPECT(gbc.pc(), 0xc87d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb679), 0x2a);
        EXPECT(gbc.readMem(0xc87b), 0xcb);
        EXPECT(gbc.readMem(0xc87c), 0xee);
        // CB EE 03A8
        gbc.setState(0x1a89, 0x5d2b, 0xa530, 0x8913, 0xa56d, 0xb9de, 0x1, 0x0);
        gbc.writeMem(0x1a89, { 0xcb, 0xee });
        gbc.writeMem(0xb9de, { 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x5d2b);
        EXPECT(gbc.pc(), 0x1a8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9de), 0xf1);
        // CB EE 03AA
        gbc.setState(0xc187, 0x19cf, 0x1860, 0x84d, 0xf3fd, 0x995a, 0x0, 0x0);
        gbc.writeMem(0x995a, { 0xbe });
        gbc.writeMem(0xc187, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x19cf);
        EXPECT(gbc.pc(), 0xc189);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x995a), 0xbe);
        EXPECT(gbc.readMem(0xc187), 0xcb);
        EXPECT(gbc.readMem(0xc188), 0xee);
        // CB EE 03AB
        gbc.setState(0x23dd, 0xcacb, 0x8050, 0xa065, 0x5d97, 0xd5c3, 0x1, 0x0);
        gbc.writeMem(0x23dd, { 0xcb, 0xee });
        gbc.writeMem(0xd5c3, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xcacb);
        EXPECT(gbc.pc(), 0x23df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5c3), 0xe0);
        // CB EE 03AC
        gbc.setState(0x6ba3, 0x896f, 0x1290, 0xbb51, 0x5090, 0x56e6, 0x1, 0x0);
        gbc.writeMem(0x56e6, { 0xb4 });
        gbc.writeMem(0x6ba3, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x896f);
        EXPECT(gbc.pc(), 0x6ba5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EE 03AD
        gbc.setState(0x85cf, 0x678e, 0xf0b0, 0xf7e, 0x1cb6, 0x959a, 0x0, 0x1);
        gbc.writeMem(0x85cf, { 0xcb, 0xee });
        gbc.writeMem(0x959a, { 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x678e);
        EXPECT(gbc.pc(), 0x85d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85cf), 0xcb);
        EXPECT(gbc.readMem(0x85d0), 0xee);
        EXPECT(gbc.readMem(0x959a), 0xa8);
        // CB EE 03B1
        gbc.setState(0x6308, 0x4ebc, 0x2500, 0xf8d2, 0x20e7, 0x473d, 0x0, 0x1);
        gbc.writeMem(0x473d, { 0x3d });
        gbc.writeMem(0x6308, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x4ebc);
        EXPECT(gbc.pc(), 0x630a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EE 03B2
        gbc.setState(0x209b, 0xc292, 0x6780, 0x769a, 0x6f7a, 0x2552, 0x0, 0x1);
        gbc.writeMem(0x209b, { 0xcb, 0xee });
        gbc.writeMem(0x2552, { 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xc292);
        EXPECT(gbc.pc(), 0x209d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EE 03B3
        gbc.setState(0x6d59, 0x3d9d, 0x1b00, 0x53e1, 0x3847, 0x8ab7, 0x0, 0x0);
        gbc.writeMem(0x6d59, { 0xcb, 0xee });
        gbc.writeMem(0x8ab7, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x3d9d);
        EXPECT(gbc.pc(), 0x6d5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ab7), 0x29);
        // CB EE 03B4
        gbc.setState(0xcbfd, 0x14f9, 0xcb20, 0x941f, 0xd111, 0x8dc5, 0x0, 0x0);
        gbc.writeMem(0x8dc5, { 0xd6 });
        gbc.writeMem(0xcbfd, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x14f9);
        EXPECT(gbc.pc(), 0xcbff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dc5), 0xf6);
        EXPECT(gbc.readMem(0xcbfd), 0xcb);
        EXPECT(gbc.readMem(0xcbfe), 0xee);
        // CB EE 03B5
        gbc.setState(0x82e3, 0x3ad, 0xa560, 0x7a8e, 0x28ff, 0xb739, 0x1, 0x1);
        gbc.writeMem(0x82e3, { 0xcb, 0xee });
        gbc.writeMem(0xb739, { 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x3ad);
        EXPECT(gbc.pc(), 0x82e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82e3), 0xcb);
        EXPECT(gbc.readMem(0x82e4), 0xee);
        EXPECT(gbc.readMem(0xb739), 0x2f);
        // CB EE 03B6
        gbc.setState(0x4aab, 0xc1a5, 0x2e90, 0x704a, 0x89b2, 0xfb0b, 0x0, 0x0);
        gbc.writeMem(0x4aab, { 0xcb, 0xee });
        gbc.writeMem(0xfb0b, { 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xc1a5);
        EXPECT(gbc.pc(), 0x4aad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfb0b), 0xb5);
        // CB EE 03B7
        gbc.setState(0x87c2, 0x2ef3, 0x81f0, 0x514d, 0xc3dc, 0x7b7f, 0x0, 0x0);
        gbc.writeMem(0x7b7f, { 0xb6 });
        gbc.writeMem(0x87c2, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x2ef3);
        EXPECT(gbc.pc(), 0x87c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87c2), 0xcb);
        EXPECT(gbc.readMem(0x87c3), 0xee);
        // CB EE 03B8
        gbc.setState(0x366a, 0x43d, 0x4dc0, 0xc666, 0x6c8b, 0xe1a4, 0x1, 0x1);
        gbc.writeMem(0x366a, { 0xcb, 0xee });
        gbc.writeMem(0xe1a4, { 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x43d);
        EXPECT(gbc.pc(), 0x366c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1a4), 0xef);
        // CB EE 03B9
        gbc.setState(0x6628, 0x2959, 0x95f0, 0xd70f, 0x2d5c, 0x228f, 0x0, 0x0);
        gbc.writeMem(0x228f, { 0x35 });
        gbc.writeMem(0x6628, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x2959);
        EXPECT(gbc.pc(), 0x662a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EE 03BD
        gbc.setState(0xe22a, 0x19ec, 0x9980, 0x951c, 0x4eda, 0xafc2, 0x1, 0x0);
        gbc.writeMem(0xafc2, { 0xae });
        gbc.writeMem(0xe22a, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x19ec);
        EXPECT(gbc.pc(), 0xe22c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafc2), 0xae);
        EXPECT(gbc.readMem(0xe22a), 0xcb);
        EXPECT(gbc.readMem(0xe22b), 0xee);
        // CB EE 03BE
        gbc.setState(0x7e7f, 0x2fb7, 0x2910, 0xb99, 0x33b1, 0xdb34, 0x1, 0x0);
        gbc.writeMem(0x7e7f, { 0xcb, 0xee });
        gbc.writeMem(0xdb34, { 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x2fb7);
        EXPECT(gbc.pc(), 0x7e81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb34), 0x61);
        // CB EE 03BF
        gbc.setState(0x2c39, 0x53b5, 0x1480, 0x83e6, 0x3d3f, 0xa669, 0x1, 0x1);
        gbc.writeMem(0x2c39, { 0xcb, 0xee });
        gbc.writeMem(0xa669, { 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x53b5);
        EXPECT(gbc.pc(), 0x2c3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa669), 0xad);
        // CB EE 03C0
        gbc.setState(0x8031, 0xaf31, 0xc70, 0xd541, 0xe041, 0x478c, 0x1, 0x0);
        gbc.writeMem(0x478c, { 0x25 });
        gbc.writeMem(0x8031, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xaf31);
        EXPECT(gbc.pc(), 0x8033);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8031), 0xcb);
        EXPECT(gbc.readMem(0x8032), 0xee);
        // CB EE 03C2
        gbc.setState(0x49e5, 0x3348, 0x9350, 0x20f4, 0x3d96, 0x64be, 0x1, 0x1);
        gbc.writeMem(0x49e5, { 0xcb, 0xee });
        gbc.writeMem(0x64be, { 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x3348);
        EXPECT(gbc.pc(), 0x49e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EE 03C3
        gbc.setState(0x5a5a, 0x3e1c, 0x7d40, 0xc297, 0xf751, 0xbcd0, 0x0, 0x0);
        gbc.writeMem(0x5a5a, { 0xcb, 0xee });
        gbc.writeMem(0xbcd0, { 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x3e1c);
        EXPECT(gbc.pc(), 0x5a5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcd0), 0x35);
        // CB EE 03C4
        gbc.setState(0x37c1, 0x8dbf, 0xf900, 0x7363, 0xd341, 0xdc85, 0x0, 0x1);
        gbc.writeMem(0x37c1, { 0xcb, 0xee });
        gbc.writeMem(0xdc85, { 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x8dbf);
        EXPECT(gbc.pc(), 0x37c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc85), 0x6b);
        // CB EE 03C7
        gbc.setState(0x8e15, 0xd136, 0x77f0, 0x3f84, 0xd009, 0x94cf, 0x1, 0x0);
        gbc.writeMem(0x8e15, { 0xcb, 0xee });
        gbc.writeMem(0x94cf, { 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xd136);
        EXPECT(gbc.pc(), 0x8e17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e15), 0xcb);
        EXPECT(gbc.readMem(0x8e16), 0xee);
        EXPECT(gbc.readMem(0x94cf), 0xe5);
        // CB EE 03C8
        gbc.setState(0x9523, 0x1bb9, 0x14a0, 0xf799, 0x7d3b, 0xebe6, 0x0, 0x0);
        gbc.writeMem(0x9523, { 0xcb, 0xee });
        gbc.writeMem(0xebe6, { 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x1bb9);
        EXPECT(gbc.pc(), 0x9525);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9523), 0xcb);
        EXPECT(gbc.readMem(0x9524), 0xee);
        EXPECT(gbc.readMem(0xebe6), 0x60);
        // CB EE 03C9
        gbc.setState(0xdcda, 0xcbf3, 0xb110, 0xbfea, 0x3850, 0x8037, 0x0, 0x1);
        gbc.writeMem(0x8037, { 0xb0 });
        gbc.writeMem(0xdcda, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xcbf3);
        EXPECT(gbc.pc(), 0xdcdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8037), 0xb0);
        EXPECT(gbc.readMem(0xdcda), 0xcb);
        EXPECT(gbc.readMem(0xdcdb), 0xee);
        // CB EE 03CB
        gbc.setState(0x61f8, 0x84b2, 0x7e80, 0x14c8, 0x23e, 0xa791, 0x1, 0x1);
        gbc.writeMem(0x61f8, { 0xcb, 0xee });
        gbc.writeMem(0xa791, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x84b2);
        EXPECT(gbc.pc(), 0x61fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa791), 0xa3);
        // CB EE 03CE
        gbc.setState(0x7075, 0xe876, 0x8b00, 0x7d2c, 0x7353, 0xf8b1, 0x1, 0x1);
        gbc.writeMem(0x7075, { 0xcb, 0xee });
        gbc.writeMem(0xf8b1, { 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xe876);
        EXPECT(gbc.pc(), 0x7077);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf8b1), 0x38);
        // CB EE 03CF
        gbc.setState(0x9e49, 0xfb52, 0xacb0, 0xaf07, 0xa6f7, 0x560, 0x0, 0x1);
        gbc.writeMem(0x560, { 0xe6 });
        gbc.writeMem(0x9e49, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xfb52);
        EXPECT(gbc.pc(), 0x9e4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e49), 0xcb);
        EXPECT(gbc.readMem(0x9e4a), 0xee);
        // CB EE 03D2
        gbc.setState(0xe1a3, 0xe3ac, 0xdb40, 0xb0e2, 0x53e0, 0xdd1d, 0x1, 0x1);
        gbc.writeMem(0xdd1d, { 0xb5 });
        gbc.writeMem(0xe1a3, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xe3ac);
        EXPECT(gbc.pc(), 0xe1a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd1d), 0xb5);
        EXPECT(gbc.readMem(0xe1a3), 0xcb);
        EXPECT(gbc.readMem(0xe1a4), 0xee);
        // CB EE 03D3
        gbc.setState(0x132c, 0x792f, 0x2a30, 0xb27d, 0x1ed7, 0xb157, 0x0, 0x1);
        gbc.writeMem(0x132c, { 0xcb, 0xee });
        gbc.writeMem(0xb157, { 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x792f);
        EXPECT(gbc.pc(), 0x132e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb157), 0xf0);
        // CB EE 03D4
        gbc.setState(0x80e6, 0x4a15, 0xd980, 0x3072, 0x6ac0, 0xd36, 0x1, 0x1);
        gbc.writeMem(0xd36, { 0x24 });
        gbc.writeMem(0x80e6, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x4a15);
        EXPECT(gbc.pc(), 0x80e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80e6), 0xcb);
        EXPECT(gbc.readMem(0x80e7), 0xee);
        // CB EE 03D7
        gbc.setState(0x7dcf, 0x4d40, 0xc930, 0xc761, 0x62b8, 0x9caf, 0x0, 0x1);
        gbc.writeMem(0x7dcf, { 0xcb, 0xee });
        gbc.writeMem(0x9caf, { 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x4d40);
        EXPECT(gbc.pc(), 0x7dd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9caf), 0xa3);
        // CB EE 03D8
        gbc.setState(0x5b7, 0xf34e, 0x42d0, 0x71ca, 0xf0b9, 0x9199, 0x0, 0x0);
        gbc.writeMem(0x5b7, { 0xcb, 0xee });
        gbc.writeMem(0x9199, { 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xf34e);
        EXPECT(gbc.pc(), 0x5b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9199), 0xad);
        // CB EE 03D9
        gbc.setState(0x4c03, 0xb248, 0x1290, 0x1855, 0x91e2, 0x9633, 0x1, 0x0);
        gbc.writeMem(0x4c03, { 0xcb, 0xee });
        gbc.writeMem(0x9633, { 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xb248);
        EXPECT(gbc.pc(), 0x4c05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9633), 0x69);
        // CB EE 03DA
        gbc.setState(0xa036, 0x767d, 0xc620, 0xfdb5, 0xc066, 0x3c7a, 0x0, 0x0);
        gbc.writeMem(0x3c7a, { 0xff });
        gbc.writeMem(0xa036, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x767d);
        EXPECT(gbc.pc(), 0xa038);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa036), 0xcb);
        EXPECT(gbc.readMem(0xa037), 0xee);
        // CB EE 03DB
        gbc.setState(0x281b, 0x707f, 0x7e40, 0x3210, 0xcfa5, 0x687b, 0x0, 0x1);
        gbc.writeMem(0x281b, { 0xcb, 0xee });
        gbc.writeMem(0x687b, { 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x707f);
        EXPECT(gbc.pc(), 0x281d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EE 03DC
        gbc.setState(0x1575, 0x5f1e, 0x5130, 0x542, 0x23bf, 0xf466, 0x1, 0x0);
        gbc.writeMem(0x1575, { 0xcb, 0xee });
        gbc.writeMem(0xf466, { 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x5f1e);
        EXPECT(gbc.pc(), 0x1577);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf466), 0x27);
        // CB EE 03DD
        gbc.setState(0xe3a, 0xe6be, 0xbfc0, 0xb268, 0x1268, 0x8e32, 0x1, 0x1);
        gbc.writeMem(0xe3a, { 0xcb, 0xee });
        gbc.writeMem(0x8e32, { 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xe6be);
        EXPECT(gbc.pc(), 0xe3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e32), 0x7e);
        // CB EE 03DE
        gbc.setState(0x3c11, 0xc2d3, 0x7920, 0x9e93, 0x1770, 0xb644, 0x1, 0x1);
        gbc.writeMem(0x3c11, { 0xcb, 0xee });
        gbc.writeMem(0xb644, { 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xc2d3);
        EXPECT(gbc.pc(), 0x3c13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb644), 0xa7);
        // CB EE 03E0
        gbc.setState(0xaca9, 0xb51d, 0x8a60, 0x4a8e, 0xea26, 0x6d2b, 0x1, 0x1);
        gbc.writeMem(0x6d2b, { 0xa5 });
        gbc.writeMem(0xaca9, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xb51d);
        EXPECT(gbc.pc(), 0xacab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaca9), 0xcb);
        EXPECT(gbc.readMem(0xacaa), 0xee);
        // CB EE 03E1
        gbc.setState(0x89ae, 0x4958, 0xb720, 0x18a3, 0x367f, 0xc8ae, 0x1, 0x1);
        gbc.writeMem(0x89ae, { 0xcb, 0xee });
        gbc.writeMem(0xc8ae, { 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x4958);
        EXPECT(gbc.pc(), 0x89b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89ae), 0xcb);
        EXPECT(gbc.readMem(0x89af), 0xee);
        EXPECT(gbc.readMem(0xc8ae), 0x33);
        // CB EE 03E4
        gbc.setState(0xda10, 0x4d7f, 0x8a40, 0x67fe, 0xf1a2, 0x7d2f, 0x0, 0x1);
        gbc.writeMem(0x7d2f, { 0xa0 });
        gbc.writeMem(0xda10, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x4d7f);
        EXPECT(gbc.pc(), 0xda12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda10), 0xcb);
        EXPECT(gbc.readMem(0xda11), 0xee);
        // CB EE 03E5
        gbc.setState(0xbff3, 0xf5a4, 0x1c30, 0x3e28, 0xca0e, 0x3fc9, 0x1, 0x1);
        gbc.writeMem(0x3fc9, { 0x72 });
        gbc.writeMem(0xbff3, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xf5a4);
        EXPECT(gbc.pc(), 0xbff5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbff3), 0xcb);
        EXPECT(gbc.readMem(0xbff4), 0xee);
        // CB EE 03E6
        gbc.setState(0xd24e, 0xb80a, 0x3a40, 0x6801, 0x752, 0x3c0e, 0x0, 0x1);
        gbc.writeMem(0x3c0e, { 0x74 });
        gbc.writeMem(0xd24e, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xb80a);
        EXPECT(gbc.pc(), 0xd250);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd24e), 0xcb);
        EXPECT(gbc.readMem(0xd24f), 0xee);
        // CB EE 03E7
        gbc.setState(0xcbba, 0x87f, 0xd680, 0xff67, 0x4452, 0x8dfd, 0x0, 0x0);
        gbc.writeMem(0x8dfd, { 0xe4 });
        gbc.writeMem(0xcbba, { 0xcb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x87f);
        EXPECT(gbc.pc(), 0xcbbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dfd), 0xe4);
        EXPECT(gbc.readMem(0xcbba), 0xcb);
        EXPECT(gbc.readMem(0xcbbb), 0xee);
    }
}
#endif
