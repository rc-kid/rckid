    TEST(gbcemu, opcode_c7) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // C7 0002
        gbc.setState(0x5693, 0xf450, 0xa8b0, 0x85b8, 0xb57d, 0x525f, 0x1, 0x0);
        gbc.writeMem(0x5693, { 0xc7 });
        gbc.writeMem(0xf44e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf44e, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xf44e));
        EXPECT(0x56, gbc.readMem(0xf44f));
        // C7 0004
        gbc.setState(0x8ffb, 0xd6d9, 0x46e0, 0xd5b7, 0xc311, 0xddd1, 0x0, 0x0);
        gbc.writeMem(0x8ffb, { 0xc7 });
        gbc.writeMem(0xd6d7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xd6d7, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x8ffb));
        EXPECT(0xfc, gbc.readMem(0xd6d7));
        EXPECT(0x8f, gbc.readMem(0xd6d8));
        // C7 0005
        gbc.setState(0xce7d, 0xed67, 0x6b90, 0xddf, 0x2b7c, 0xfc97, 0x0, 0x0);
        gbc.writeMem(0xce7d, { 0xc7 });
        gbc.writeMem(0xed65, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xed65, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xce7d));
        EXPECT(0x7e, gbc.readMem(0xed65));
        EXPECT(0xce, gbc.readMem(0xed66));
        // C7 0006
        gbc.setState(0xe4ee, 0xd833, 0x4750, 0xbdad, 0x4248, 0x9fe5, 0x1, 0x0);
        gbc.writeMem(0xd831, { 0x0, 0x0 });
        gbc.writeMem(0xe4ee, { 0xc7 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd831, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xd831));
        EXPECT(0xe4, gbc.readMem(0xd832));
        EXPECT(0xc7, gbc.readMem(0xe4ee));
        // C7 000C
        gbc.setState(0x1f59, 0xffe6, 0x7000, 0x8606, 0x72b2, 0x1666, 0x0, 0x1);
        gbc.writeMem(0x1f59, { 0xc7 });
        gbc.writeMem(0xffe4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xffe4, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xffe4));
        EXPECT(0x1f, gbc.readMem(0xffe5));
        // C7 000D
        gbc.setState(0x53ae, 0xac1b, 0x690, 0x8fc3, 0x75ba, 0x6cb6, 0x0, 0x0);
        gbc.writeMem(0x53ae, { 0xc7 });
        gbc.writeMem(0xac19, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xac19, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xac19));
        EXPECT(0x53, gbc.readMem(0xac1a));
        // C7 000E
        gbc.setState(0x1b24, 0xcf18, 0x5dc0, 0xe16f, 0x850, 0x3406, 0x1, 0x0);
        gbc.writeMem(0x1b24, { 0xc7 });
        gbc.writeMem(0xcf16, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xcf16, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xcf16));
        EXPECT(0x1b, gbc.readMem(0xcf17));
        // C7 0011
        gbc.setState(0x90db, 0xea77, 0x5e30, 0x728b, 0xc424, 0xb52d, 0x1, 0x1);
        gbc.writeMem(0x90db, { 0xc7 });
        gbc.writeMem(0xea75, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xea75, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x90db));
        EXPECT(0xdc, gbc.readMem(0xea75));
        EXPECT(0x90, gbc.readMem(0xea76));
        // C7 0012
        gbc.setState(0xec57, 0xd527, 0x2d60, 0x39d0, 0x7c0d, 0x60df, 0x1, 0x1);
        gbc.writeMem(0xd525, { 0x0, 0x0 });
        gbc.writeMem(0xec57, { 0xc7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xd525, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xd525));
        EXPECT(0xec, gbc.readMem(0xd526));
        EXPECT(0xc7, gbc.readMem(0xec57));
        // C7 0013
        gbc.setState(0xaeaa, 0xf827, 0x3dc0, 0xfe2b, 0x5b96, 0x369b, 0x1, 0x1);
        gbc.writeMem(0xaeaa, { 0xc7 });
        gbc.writeMem(0xf825, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf825, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xaeaa));
        EXPECT(0xab, gbc.readMem(0xf825));
        EXPECT(0xae, gbc.readMem(0xf826));
        // C7 0017
        gbc.setState(0x41a9, 0xc120, 0x2380, 0x7dce, 0x3cce, 0x5340, 0x1, 0x1);
        gbc.writeMem(0x41a9, { 0xc7 });
        gbc.writeMem(0xc11e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc11e, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xc11e));
        EXPECT(0x41, gbc.readMem(0xc11f));
        // C7 0018
        gbc.setState(0x9e6e, 0x91f7, 0x8720, 0xd81, 0x5b8e, 0x7386, 0x1, 0x0);
        gbc.writeMem(0x91f5, { 0x0, 0x0 });
        gbc.writeMem(0x9e6e, { 0xc7 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x91f5, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0x91f5));
        EXPECT(0x9e, gbc.readMem(0x91f6));
        EXPECT(0xc7, gbc.readMem(0x9e6e));
        // C7 001C
        gbc.setState(0xab9f, 0xe918, 0x5950, 0x1c85, 0x79f6, 0xfc4d, 0x1, 0x1);
        gbc.writeMem(0xab9f, { 0xc7 });
        gbc.writeMem(0xe916, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xe916, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xab9f));
        EXPECT(0xa0, gbc.readMem(0xe916));
        EXPECT(0xab, gbc.readMem(0xe917));
        // C7 001E
        gbc.setState(0x768a, 0xd8e9, 0x66e0, 0x6dfa, 0x9b6, 0xed6f, 0x1, 0x0);
        gbc.writeMem(0x768a, { 0xc7 });
        gbc.writeMem(0xd8e7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd8e7, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xd8e7));
        EXPECT(0x76, gbc.readMem(0xd8e8));
        // C7 0020
        gbc.setState(0x4a31, 0xdc4a, 0xebe0, 0xd17a, 0x8c8, 0xc84e, 0x1, 0x1);
        gbc.writeMem(0x4a31, { 0xc7 });
        gbc.writeMem(0xdc48, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xdc48, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xdc48));
        EXPECT(0x4a, gbc.readMem(0xdc49));
        // C7 0023
        gbc.setState(0x113b, 0xf4e3, 0xda90, 0xc177, 0x70e6, 0x8d35, 0x0, 0x0);
        gbc.writeMem(0x113b, { 0xc7 });
        gbc.writeMem(0xf4e1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xf4e1, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xf4e1));
        EXPECT(0x11, gbc.readMem(0xf4e2));
        // C7 0024
        gbc.setState(0xba67, 0xe7fe, 0x7330, 0x3dc5, 0x2663, 0x7b44, 0x0, 0x1);
        gbc.writeMem(0xba67, { 0xc7 });
        gbc.writeMem(0xe7fc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xe7fc, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xba67));
        EXPECT(0x68, gbc.readMem(0xe7fc));
        EXPECT(0xba, gbc.readMem(0xe7fd));
        // C7 0026
        gbc.setState(0x2464, 0x8942, 0xb2e0, 0x398e, 0x2e87, 0x7f27, 0x0, 0x1);
        gbc.writeMem(0x2464, { 0xc7 });
        gbc.writeMem(0x8940, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8940, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8940));
        EXPECT(0x24, gbc.readMem(0x8941));
        // C7 0029
        gbc.setState(0x264a, 0xc220, 0x6b50, 0x4f26, 0x22d0, 0x4bbc, 0x0, 0x0);
        gbc.writeMem(0x264a, { 0xc7 });
        gbc.writeMem(0xc21e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xc21e, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc21e));
        EXPECT(0x26, gbc.readMem(0xc21f));
        // C7 002A
        gbc.setState(0x60bc, 0x828b, 0xc6d0, 0x3d0c, 0xaf64, 0xc307, 0x0, 0x0);
        gbc.writeMem(0x60bc, { 0xc7 });
        gbc.writeMem(0x8289, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x8289, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x8289));
        EXPECT(0x60, gbc.readMem(0x828a));
        // C7 002B
        gbc.setState(0x8bac, 0xccaa, 0xe2f0, 0x6df1, 0x6267, 0x478c, 0x0, 0x1);
        gbc.writeMem(0x8bac, { 0xc7 });
        gbc.writeMem(0xcca8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xcca8, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x8bac));
        EXPECT(0xad, gbc.readMem(0xcca8));
        EXPECT(0x8b, gbc.readMem(0xcca9));
        // C7 002C
        gbc.setState(0x67b2, 0xf403, 0x1960, 0x8502, 0x6482, 0xf055, 0x0, 0x1);
        gbc.writeMem(0x67b2, { 0xc7 });
        gbc.writeMem(0xf401, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf401, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xf401));
        EXPECT(0x67, gbc.readMem(0xf402));
        // C7 002D
        gbc.setState(0xee14, 0x88a0, 0x8760, 0x7463, 0x9216, 0x99ec, 0x0, 0x0);
        gbc.writeMem(0x889e, { 0x0, 0x0 });
        gbc.writeMem(0xee14, { 0xc7 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x889e, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x889e));
        EXPECT(0xee, gbc.readMem(0x889f));
        EXPECT(0xc7, gbc.readMem(0xee14));
        // C7 002F
        gbc.setState(0x6575, 0xdf95, 0x1bf0, 0xe718, 0xc021, 0xf124, 0x0, 0x1);
        gbc.writeMem(0x6575, { 0xc7 });
        gbc.writeMem(0xdf93, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xdf93, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xdf93));
        EXPECT(0x65, gbc.readMem(0xdf94));
        // C7 0032
        gbc.setState(0xe182, 0xe7c9, 0xdaa0, 0x7c5b, 0xbef0, 0xd3, 0x0, 0x1);
        gbc.writeMem(0xe182, { 0xc7 });
        gbc.writeMem(0xe7c7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xe7c7, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xe182));
        EXPECT(0x83, gbc.readMem(0xe7c7));
        EXPECT(0xe1, gbc.readMem(0xe7c8));
        // C7 0036
        gbc.setState(0x636d, 0xe4ad, 0x5e00, 0x179d, 0x455f, 0xecbb, 0x0, 0x0);
        gbc.writeMem(0x636d, { 0xc7 });
        gbc.writeMem(0xe4ab, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xe4ab, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xe4ab));
        EXPECT(0x63, gbc.readMem(0xe4ac));
        // C7 0039
        gbc.setState(0x328, 0xc0c2, 0x7b80, 0x42a7, 0x6884, 0xab34, 0x0, 0x1);
        gbc.writeMem(0x328, { 0xc7 });
        gbc.writeMem(0xc0c0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc0c0, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc0c0));
        EXPECT(0x3, gbc.readMem(0xc0c1));
        // C7 003C
        gbc.setState(0x4dbe, 0xb5be, 0x5b20, 0x3051, 0x34f4, 0x50d0, 0x0, 0x1);
        gbc.writeMem(0x4dbe, { 0xc7 });
        gbc.writeMem(0xb5bc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xb5bc, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xb5bc));
        EXPECT(0x4d, gbc.readMem(0xb5bd));
        // C7 003E
        gbc.setState(0x37f3, 0xf4ee, 0xcd90, 0x2ba2, 0x1742, 0x7baf, 0x1, 0x0);
        gbc.writeMem(0x37f3, { 0xc7 });
        gbc.writeMem(0xf4ec, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf4ec, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xf4ec));
        EXPECT(0x37, gbc.readMem(0xf4ed));
        // C7 003F
        gbc.setState(0x83cc, 0x8b24, 0xcd50, 0x1606, 0x9ede, 0x2356, 0x0, 0x0);
        gbc.writeMem(0x83cc, { 0xc7 });
        gbc.writeMem(0x8b22, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x8b22, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x83cc));
        EXPECT(0xcd, gbc.readMem(0x8b22));
        EXPECT(0x83, gbc.readMem(0x8b23));
        // C7 0044
        gbc.setState(0x28ec, 0x959c, 0xab80, 0x4d5, 0x7a29, 0xc1bb, 0x1, 0x0);
        gbc.writeMem(0x28ec, { 0xc7 });
        gbc.writeMem(0x959a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x959a, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0x959a));
        EXPECT(0x28, gbc.readMem(0x959b));
        // C7 0049
        gbc.setState(0xa692, 0xd644, 0x7d10, 0x284, 0xba7b, 0xc536, 0x0, 0x1);
        gbc.writeMem(0xa692, { 0xc7 });
        gbc.writeMem(0xd642, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd642, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xa692));
        EXPECT(0x93, gbc.readMem(0xd642));
        EXPECT(0xa6, gbc.readMem(0xd643));
        // C7 004A
        gbc.setState(0x714d, 0xb97d, 0xaf10, 0x9cb9, 0x9b32, 0xc0a1, 0x1, 0x1);
        gbc.writeMem(0x714d, { 0xc7 });
        gbc.writeMem(0xb97b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xb97b, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xb97b));
        EXPECT(0x71, gbc.readMem(0xb97c));
        // C7 004C
        gbc.setState(0x74c2, 0xb8c4, 0x53f0, 0xefef, 0x2f24, 0x34c2, 0x1, 0x1);
        gbc.writeMem(0x74c2, { 0xc7 });
        gbc.writeMem(0xb8c2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xb8c2, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xb8c2));
        EXPECT(0x74, gbc.readMem(0xb8c3));
        // C7 004D
        gbc.setState(0xecef, 0xacad, 0xd2f0, 0x7bfc, 0x7e6, 0x9b9e, 0x0, 0x0);
        gbc.writeMem(0xacab, { 0x0, 0x0 });
        gbc.writeMem(0xecef, { 0xc7 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xacab, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xacab));
        EXPECT(0xec, gbc.readMem(0xacac));
        EXPECT(0xc7, gbc.readMem(0xecef));
        // C7 004E
        gbc.setState(0x5fda, 0xb26c, 0x820, 0xf020, 0x4f8d, 0xfa6f, 0x1, 0x0);
        gbc.writeMem(0x5fda, { 0xc7 });
        gbc.writeMem(0xb26a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xb26a, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xb26a));
        EXPECT(0x5f, gbc.readMem(0xb26b));
        // C7 0050
        gbc.setState(0xfde, 0x9562, 0xe520, 0x37c5, 0x797f, 0xb0d6, 0x1, 0x0);
        gbc.writeMem(0xfde, { 0xc7 });
        gbc.writeMem(0x9560, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x9560, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0x9560));
        EXPECT(0xf, gbc.readMem(0x9561));
        // C7 0052
        gbc.setState(0xaf44, 0xf6e0, 0x6e80, 0x570c, 0xa1f1, 0xc3ec, 0x1, 0x1);
        gbc.writeMem(0xaf44, { 0xc7 });
        gbc.writeMem(0xf6de, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xf6de, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xaf44));
        EXPECT(0x45, gbc.readMem(0xf6de));
        EXPECT(0xaf, gbc.readMem(0xf6df));
        // C7 0054
        gbc.setState(0xd24a, 0xa29c, 0x9cc0, 0x15f0, 0x9f86, 0x5afd, 0x1, 0x1);
        gbc.writeMem(0xa29a, { 0x0, 0x0 });
        gbc.writeMem(0xd24a, { 0xc7 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xa29a, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xa29a));
        EXPECT(0xd2, gbc.readMem(0xa29b));
        EXPECT(0xc7, gbc.readMem(0xd24a));
        // C7 0057
        gbc.setState(0xc715, 0xb8e8, 0xf6d0, 0xaeaf, 0xffd4, 0xc27e, 0x0, 0x0);
        gbc.writeMem(0xb8e6, { 0x0, 0x0 });
        gbc.writeMem(0xc715, { 0xc7 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xb8e6, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xb8e6));
        EXPECT(0xc7, gbc.readMem(0xb8e7));
        EXPECT(0xc7, gbc.readMem(0xc715));
        // C7 0059
        gbc.setState(0xc364, 0xf2df, 0xd540, 0xf071, 0x5434, 0x31d2, 0x1, 0x1);
        gbc.writeMem(0xc364, { 0xc7 });
        gbc.writeMem(0xf2dd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xf2dd, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xc364));
        EXPECT(0x65, gbc.readMem(0xf2dd));
        EXPECT(0xc3, gbc.readMem(0xf2de));
        // C7 005C
        gbc.setState(0xde88, 0xfed2, 0xf920, 0xab28, 0xd11e, 0x7d9d, 0x1, 0x0);
        gbc.writeMem(0xde88, { 0xc7 });
        gbc.writeMem(0xfed0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xfed0, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xde88));
        EXPECT(0x89, gbc.readMem(0xfed0));
        EXPECT(0xde, gbc.readMem(0xfed1));
        // C7 0060
        gbc.setState(0x3bc1, 0xf7b3, 0x9ec0, 0x3b4a, 0x773b, 0xd28c, 0x0, 0x0);
        gbc.writeMem(0x3bc1, { 0xc7 });
        gbc.writeMem(0xf7b1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xf7b1, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xf7b1));
        EXPECT(0x3b, gbc.readMem(0xf7b2));
        // C7 0062
        gbc.setState(0x980a, 0xb8a9, 0xd1c0, 0x4fff, 0x8936, 0x7662, 0x1, 0x1);
        gbc.writeMem(0x980a, { 0xc7 });
        gbc.writeMem(0xb8a7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb8a7, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x980a));
        EXPECT(0xb, gbc.readMem(0xb8a7));
        EXPECT(0x98, gbc.readMem(0xb8a8));
        // C7 0065
        gbc.setState(0xc21c, 0xcde4, 0xac40, 0x8157, 0x819b, 0x502c, 0x1, 0x0);
        gbc.writeMem(0xc21c, { 0xc7 });
        gbc.writeMem(0xcde2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xcde2, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xc21c));
        EXPECT(0x1d, gbc.readMem(0xcde2));
        EXPECT(0xc2, gbc.readMem(0xcde3));
        // C7 0066
        gbc.setState(0x5d09, 0xbf47, 0x3240, 0x1e12, 0x6250, 0xe78c, 0x1, 0x0);
        gbc.writeMem(0x5d09, { 0xc7 });
        gbc.writeMem(0xbf45, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xbf45, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xbf45));
        EXPECT(0x5d, gbc.readMem(0xbf46));
        // C7 0067
        gbc.setState(0x750b, 0xead1, 0xd950, 0xcf26, 0x750f, 0xe9ac, 0x0, 0x0);
        gbc.writeMem(0x750b, { 0xc7 });
        gbc.writeMem(0xeacf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xeacf, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xeacf));
        EXPECT(0x75, gbc.readMem(0xead0));
        // C7 0069
        gbc.setState(0xb9b1, 0x8324, 0xa880, 0x7f12, 0x18, 0xfec0, 0x1, 0x1);
        gbc.writeMem(0x8322, { 0x0, 0x0 });
        gbc.writeMem(0xb9b1, { 0xc7 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8322, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x8322));
        EXPECT(0xb9, gbc.readMem(0x8323));
        EXPECT(0xc7, gbc.readMem(0xb9b1));
        // C7 006A
        gbc.setState(0xd755, 0xc796, 0x7690, 0x73aa, 0xd516, 0x95e, 0x1, 0x1);
        gbc.writeMem(0xc794, { 0x0, 0x0 });
        gbc.writeMem(0xd755, { 0xc7 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xc794, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xc794));
        EXPECT(0xd7, gbc.readMem(0xc795));
        EXPECT(0xc7, gbc.readMem(0xd755));
        // C7 006B
        gbc.setState(0x842, 0xed94, 0x5050, 0xd8c3, 0xab46, 0x4a1a, 0x1, 0x0);
        gbc.writeMem(0x842, { 0xc7 });
        gbc.writeMem(0xed92, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xed92, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xed92));
        EXPECT(0x8, gbc.readMem(0xed93));
        // C7 006D
        gbc.setState(0xa648, 0xd3c8, 0x8f20, 0xd710, 0x689f, 0x1560, 0x0, 0x1);
        gbc.writeMem(0xa648, { 0xc7 });
        gbc.writeMem(0xd3c6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xd3c6, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xa648));
        EXPECT(0x49, gbc.readMem(0xd3c6));
        EXPECT(0xa6, gbc.readMem(0xd3c7));
        // C7 006E
        gbc.setState(0xa231, 0xf569, 0x2a00, 0x7ca8, 0x6bcf, 0x2cd3, 0x0, 0x1);
        gbc.writeMem(0xa231, { 0xc7 });
        gbc.writeMem(0xf567, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf567, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xa231));
        EXPECT(0x32, gbc.readMem(0xf567));
        EXPECT(0xa2, gbc.readMem(0xf568));
        // C7 006F
        gbc.setState(0x7ae6, 0x8f33, 0x8980, 0x2c7c, 0xd1d4, 0xf382, 0x1, 0x0);
        gbc.writeMem(0x7ae6, { 0xc7 });
        gbc.writeMem(0x8f31, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8f31, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x8f31));
        EXPECT(0x7a, gbc.readMem(0x8f32));
        // C7 0070
        gbc.setState(0x731a, 0x9500, 0x2b00, 0x841f, 0xc006, 0x1fe3, 0x0, 0x0);
        gbc.writeMem(0x731a, { 0xc7 });
        gbc.writeMem(0x94fe, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x94fe, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0x94fe));
        EXPECT(0x73, gbc.readMem(0x94ff));
        // C7 0072
        gbc.setState(0xa100, 0xa686, 0x9790, 0x3008, 0x7fbd, 0xd1a5, 0x1, 0x1);
        gbc.writeMem(0xa100, { 0xc7 });
        gbc.writeMem(0xa684, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xa684, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xa100));
        EXPECT(0x1, gbc.readMem(0xa684));
        EXPECT(0xa1, gbc.readMem(0xa685));
        // C7 0073
        gbc.setState(0x4a94, 0xf129, 0x30f0, 0x6442, 0x7cba, 0xb5a6, 0x1, 0x1);
        gbc.writeMem(0x4a94, { 0xc7 });
        gbc.writeMem(0xf127, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf127, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xf127));
        EXPECT(0x4a, gbc.readMem(0xf128));
        // C7 0077
        gbc.setState(0x23fc, 0xd15d, 0x13c0, 0xbf8d, 0x5729, 0x6f93, 0x1, 0x0);
        gbc.writeMem(0x23fc, { 0xc7 });
        gbc.writeMem(0xd15b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd15b, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xd15b));
        EXPECT(0x23, gbc.readMem(0xd15c));
        // C7 0079
        gbc.setState(0x1ed8, 0xb472, 0xaca0, 0xf117, 0x1437, 0x63ac, 0x0, 0x0);
        gbc.writeMem(0x1ed8, { 0xc7 });
        gbc.writeMem(0xb470, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xb470, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xb470));
        EXPECT(0x1e, gbc.readMem(0xb471));
        // C7 007C
        gbc.setState(0x9c06, 0x826d, 0xfd00, 0xc43, 0x6090, 0x15, 0x0, 0x0);
        gbc.writeMem(0x826b, { 0x0, 0x0 });
        gbc.writeMem(0x9c06, { 0xc7 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x826b, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x826b));
        EXPECT(0x9c, gbc.readMem(0x826c));
        EXPECT(0xc7, gbc.readMem(0x9c06));
        // C7 007D
        gbc.setState(0xe0f3, 0xb215, 0x1610, 0x4fda, 0x7f56, 0xb0ad, 0x1, 0x1);
        gbc.writeMem(0xb213, { 0x0, 0x0 });
        gbc.writeMem(0xe0f3, { 0xc7 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xb213, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xb213));
        EXPECT(0xe0, gbc.readMem(0xb214));
        EXPECT(0xc7, gbc.readMem(0xe0f3));
        // C7 007F
        gbc.setState(0x9122, 0x8f9e, 0xdec0, 0x176b, 0x8504, 0x53d5, 0x0, 0x0);
        gbc.writeMem(0x8f9c, { 0x0, 0x0 });
        gbc.writeMem(0x9122, { 0xc7 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x8f9c, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0x8f9c));
        EXPECT(0x91, gbc.readMem(0x8f9d));
        EXPECT(0xc7, gbc.readMem(0x9122));
        // C7 0082
        gbc.setState(0x4088, 0xde76, 0x8cc0, 0xc0d8, 0x679a, 0x18ee, 0x0, 0x1);
        gbc.writeMem(0x4088, { 0xc7 });
        gbc.writeMem(0xde74, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xde74, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xde74));
        EXPECT(0x40, gbc.readMem(0xde75));
        // C7 0083
        gbc.setState(0x735a, 0x9887, 0xf920, 0x4a7b, 0xde55, 0xfb37, 0x0, 0x1);
        gbc.writeMem(0x735a, { 0xc7 });
        gbc.writeMem(0x9885, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9885, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x9885));
        EXPECT(0x73, gbc.readMem(0x9886));
        // C7 0084
        gbc.setState(0xd2cd, 0xa328, 0xa040, 0xf2e4, 0xf744, 0x30c0, 0x1, 0x0);
        gbc.writeMem(0xa326, { 0x0, 0x0 });
        gbc.writeMem(0xd2cd, { 0xc7 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa326, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xa326));
        EXPECT(0xd2, gbc.readMem(0xa327));
        EXPECT(0xc7, gbc.readMem(0xd2cd));
        // C7 0087
        gbc.setState(0xe870, 0xd6d8, 0xb1d0, 0xcace, 0x82ca, 0xb9a8, 0x1, 0x1);
        gbc.writeMem(0xd6d6, { 0x0, 0x0 });
        gbc.writeMem(0xe870, { 0xc7 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xd6d6, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xd6d6));
        EXPECT(0xe8, gbc.readMem(0xd6d7));
        EXPECT(0xc7, gbc.readMem(0xe870));
        // C7 008A
        gbc.setState(0x9e6, 0x8e60, 0xa800, 0xb582, 0x2b0b, 0xfe53, 0x1, 0x1);
        gbc.writeMem(0x9e6, { 0xc7 });
        gbc.writeMem(0x8e5e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x8e5e, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x8e5e));
        EXPECT(0x9, gbc.readMem(0x8e5f));
        // C7 008B
        gbc.setState(0x6c63, 0xe092, 0x5ff0, 0xf28f, 0x2514, 0xb2ca, 0x1, 0x1);
        gbc.writeMem(0x6c63, { 0xc7 });
        gbc.writeMem(0xe090, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xe090, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xe090));
        EXPECT(0x6c, gbc.readMem(0xe091));
        // C7 008C
        gbc.setState(0x2584, 0xf064, 0x5cf0, 0x86be, 0x3667, 0xaa8f, 0x1, 0x1);
        gbc.writeMem(0x2584, { 0xc7 });
        gbc.writeMem(0xf062, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xf062, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xf062));
        EXPECT(0x25, gbc.readMem(0xf063));
        // C7 008D
        gbc.setState(0xa8e7, 0xa5a1, 0xb70, 0x4711, 0xdbff, 0xba20, 0x0, 0x0);
        gbc.writeMem(0xa59f, { 0x0, 0x0 });
        gbc.writeMem(0xa8e7, { 0xc7 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xa59f, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xa59f));
        EXPECT(0xa8, gbc.readMem(0xa5a0));
        EXPECT(0xc7, gbc.readMem(0xa8e7));
        // C7 008E
        gbc.setState(0x49b7, 0xf54e, 0x9560, 0x2758, 0x6810, 0xcf19, 0x0, 0x1);
        gbc.writeMem(0x49b7, { 0xc7 });
        gbc.writeMem(0xf54c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xf54c, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xf54c));
        EXPECT(0x49, gbc.readMem(0xf54d));
        // C7 0091
        gbc.setState(0x3c8d, 0xa10f, 0x8730, 0x1839, 0xefe7, 0xb8bb, 0x1, 0x1);
        gbc.writeMem(0x3c8d, { 0xc7 });
        gbc.writeMem(0xa10d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xa10d, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xa10d));
        EXPECT(0x3c, gbc.readMem(0xa10e));
        // C7 0093
        gbc.setState(0xddd0, 0x8715, 0xba80, 0x8823, 0x9cdd, 0x42c5, 0x0, 0x1);
        gbc.writeMem(0x8713, { 0x0, 0x0 });
        gbc.writeMem(0xddd0, { 0xc7 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8713, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0x8713));
        EXPECT(0xdd, gbc.readMem(0x8714));
        EXPECT(0xc7, gbc.readMem(0xddd0));
        // C7 0095
        gbc.setState(0xb6d9, 0xfc2a, 0x4300, 0xa929, 0x130, 0x2098, 0x0, 0x1);
        gbc.writeMem(0xb6d9, { 0xc7 });
        gbc.writeMem(0xfc28, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xfc28, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xb6d9));
        EXPECT(0xda, gbc.readMem(0xfc28));
        EXPECT(0xb6, gbc.readMem(0xfc29));
        // C7 0096
        gbc.setState(0x84bf, 0x8d0d, 0x9b90, 0x69ab, 0xbcc, 0x109d, 0x1, 0x1);
        gbc.writeMem(0x84bf, { 0xc7 });
        gbc.writeMem(0x8d0b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x8d0b, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x84bf));
        EXPECT(0xc0, gbc.readMem(0x8d0b));
        EXPECT(0x84, gbc.readMem(0x8d0c));
        // C7 009A
        gbc.setState(0x8daf, 0x9a25, 0x6500, 0x8e8f, 0x38b2, 0xc362, 0x1, 0x0);
        gbc.writeMem(0x8daf, { 0xc7 });
        gbc.writeMem(0x9a23, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x9a23, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x8daf));
        EXPECT(0xb0, gbc.readMem(0x9a23));
        EXPECT(0x8d, gbc.readMem(0x9a24));
        // C7 00A0
        gbc.setState(0x17cd, 0xa9b7, 0x3610, 0x1652, 0x5780, 0x9d2d, 0x1, 0x0);
        gbc.writeMem(0x17cd, { 0xc7 });
        gbc.writeMem(0xa9b5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xa9b5, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xa9b5));
        EXPECT(0x17, gbc.readMem(0xa9b6));
        // C7 00A2
        gbc.setState(0xae3c, 0x949c, 0x2270, 0xa27e, 0x1173, 0x3c6f, 0x0, 0x1);
        gbc.writeMem(0x949a, { 0x0, 0x0 });
        gbc.writeMem(0xae3c, { 0xc7 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x949a, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0x949a));
        EXPECT(0xae, gbc.readMem(0x949b));
        EXPECT(0xc7, gbc.readMem(0xae3c));
        // C7 00A4
        gbc.setState(0x9b12, 0xabe2, 0x1b0, 0x6fc, 0xba34, 0x3170, 0x1, 0x0);
        gbc.writeMem(0x9b12, { 0xc7 });
        gbc.writeMem(0xabe0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xabe0, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x9b12));
        EXPECT(0x13, gbc.readMem(0xabe0));
        EXPECT(0x9b, gbc.readMem(0xabe1));
        // C7 00A5
        gbc.setState(0x4354, 0xd2c8, 0x7a30, 0x88ed, 0x76d4, 0x21a8, 0x1, 0x1);
        gbc.writeMem(0x4354, { 0xc7 });
        gbc.writeMem(0xd2c6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xd2c6, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xd2c6));
        EXPECT(0x43, gbc.readMem(0xd2c7));
        // C7 00A7
        gbc.setState(0x7016, 0xbd84, 0x8100, 0xaf11, 0x492, 0x5fa6, 0x1, 0x0);
        gbc.writeMem(0x7016, { 0xc7 });
        gbc.writeMem(0xbd82, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xbd82, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xbd82));
        EXPECT(0x70, gbc.readMem(0xbd83));
        // C7 00A9
        gbc.setState(0xdb69, 0xe5f7, 0x4800, 0xee16, 0xc7a2, 0xad7c, 0x1, 0x1);
        gbc.writeMem(0xdb69, { 0xc7 });
        gbc.writeMem(0xe5f5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe5f5, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xdb69));
        EXPECT(0x6a, gbc.readMem(0xe5f5));
        EXPECT(0xdb, gbc.readMem(0xe5f6));
        // C7 00AB
        gbc.setState(0x6c98, 0xc57e, 0x93d0, 0xfb53, 0xdfaf, 0xcac8, 0x0, 0x0);
        gbc.writeMem(0x6c98, { 0xc7 });
        gbc.writeMem(0xc57c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xc57c, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xc57c));
        EXPECT(0x6c, gbc.readMem(0xc57d));
        // C7 00AF
        gbc.setState(0xde08, 0xeb73, 0xbe20, 0x14c4, 0x8698, 0xfe0c, 0x1, 0x0);
        gbc.writeMem(0xde08, { 0xc7 });
        gbc.writeMem(0xeb71, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xeb71, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xde08));
        EXPECT(0x9, gbc.readMem(0xeb71));
        EXPECT(0xde, gbc.readMem(0xeb72));
        // C7 00B6
        gbc.setState(0xca0b, 0xd3de, 0xd110, 0xb63b, 0x9bfb, 0xc6f6, 0x0, 0x0);
        gbc.writeMem(0xca0b, { 0xc7 });
        gbc.writeMem(0xd3dc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xd3dc, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xca0b));
        EXPECT(0xc, gbc.readMem(0xd3dc));
        EXPECT(0xca, gbc.readMem(0xd3dd));
        // C7 00B8
        gbc.setState(0x761c, 0xab15, 0x4cc0, 0x89c, 0x73f5, 0xe5de, 0x0, 0x1);
        gbc.writeMem(0x761c, { 0xc7 });
        gbc.writeMem(0xab13, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xab13, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xab13));
        EXPECT(0x76, gbc.readMem(0xab14));
        // C7 00BB
        gbc.setState(0xab5d, 0xd1b3, 0xfd10, 0xe0a1, 0x17be, 0xfcd5, 0x1, 0x0);
        gbc.writeMem(0xab5d, { 0xc7 });
        gbc.writeMem(0xd1b1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xd1b1, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xab5d));
        EXPECT(0x5e, gbc.readMem(0xd1b1));
        EXPECT(0xab, gbc.readMem(0xd1b2));
        // C7 00BD
        gbc.setState(0x5411, 0xe960, 0x2580, 0xc3a0, 0xd781, 0x4b8a, 0x1, 0x0);
        gbc.writeMem(0x5411, { 0xc7 });
        gbc.writeMem(0xe95e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xe95e, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xe95e));
        EXPECT(0x54, gbc.readMem(0xe95f));
        // C7 00BE
        gbc.setState(0xbd5a, 0xa4ed, 0x52c0, 0x2489, 0x504, 0x9760, 0x0, 0x1);
        gbc.writeMem(0xa4eb, { 0x0, 0x0 });
        gbc.writeMem(0xbd5a, { 0xc7 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa4eb, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xa4eb));
        EXPECT(0xbd, gbc.readMem(0xa4ec));
        EXPECT(0xc7, gbc.readMem(0xbd5a));
        // C7 00C9
        gbc.setState(0x9d31, 0xe2bb, 0x3710, 0x881c, 0x2d9a, 0x3015, 0x1, 0x0);
        gbc.writeMem(0x9d31, { 0xc7 });
        gbc.writeMem(0xe2b9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe2b9, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x9d31));
        EXPECT(0x32, gbc.readMem(0xe2b9));
        EXPECT(0x9d, gbc.readMem(0xe2ba));
        // C7 00CB
        gbc.setState(0x6cfc, 0xbdf4, 0xf840, 0x7f57, 0x243f, 0x5fe8, 0x0, 0x1);
        gbc.writeMem(0x6cfc, { 0xc7 });
        gbc.writeMem(0xbdf2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xbdf2, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xbdf2));
        EXPECT(0x6c, gbc.readMem(0xbdf3));
        // C7 00CC
        gbc.setState(0xa55f, 0x9b89, 0x8600, 0xab16, 0xf444, 0xae11, 0x0, 0x0);
        gbc.writeMem(0x9b87, { 0x0, 0x0 });
        gbc.writeMem(0xa55f, { 0xc7 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x9b87, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0x9b87));
        EXPECT(0xa5, gbc.readMem(0x9b88));
        EXPECT(0xc7, gbc.readMem(0xa55f));
        // C7 00CE
        gbc.setState(0x7cdb, 0xc012, 0x5000, 0x83d7, 0xb5f1, 0x636d, 0x0, 0x0);
        gbc.writeMem(0x7cdb, { 0xc7 });
        gbc.writeMem(0xc010, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xc010, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xc010));
        EXPECT(0x7c, gbc.readMem(0xc011));
        // C7 00CF
        gbc.setState(0xb9b6, 0xc0cb, 0xa6f0, 0x360e, 0xb978, 0x24b4, 0x1, 0x0);
        gbc.writeMem(0xb9b6, { 0xc7 });
        gbc.writeMem(0xc0c9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xc0c9, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xb9b6));
        EXPECT(0xb7, gbc.readMem(0xc0c9));
        EXPECT(0xb9, gbc.readMem(0xc0ca));
        // C7 00D1
        gbc.setState(0xeabd, 0xfe20, 0xfdb0, 0x7ad4, 0xa029, 0xca36, 0x0, 0x0);
        gbc.writeMem(0xeabd, { 0xc7 });
        gbc.writeMem(0xfe1e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xfe1e, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xeabd));
        EXPECT(0xbe, gbc.readMem(0xfe1e));
        EXPECT(0xea, gbc.readMem(0xfe1f));
        // C7 00D2
        gbc.setState(0x5838, 0xb2d2, 0x1760, 0xf852, 0x4964, 0xe665, 0x1, 0x1);
        gbc.writeMem(0x5838, { 0xc7 });
        gbc.writeMem(0xb2d0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb2d0, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xb2d0));
        EXPECT(0x58, gbc.readMem(0xb2d1));
        // C7 00D3
        gbc.setState(0x850e, 0xf3c4, 0x77a0, 0xbe72, 0xadaa, 0x2b8c, 0x1, 0x0);
        gbc.writeMem(0x850e, { 0xc7 });
        gbc.writeMem(0xf3c2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xf3c2, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x850e));
        EXPECT(0xf, gbc.readMem(0xf3c2));
        EXPECT(0x85, gbc.readMem(0xf3c3));
        // C7 00D7
        gbc.setState(0x7271, 0xacd0, 0x7a90, 0x8e3f, 0xfd85, 0x9747, 0x0, 0x1);
        gbc.writeMem(0x7271, { 0xc7 });
        gbc.writeMem(0xacce, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xacce, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xacce));
        EXPECT(0x72, gbc.readMem(0xaccf));
        // C7 00D8
        gbc.setState(0xdae6, 0xe32f, 0xa9e0, 0x44ef, 0xe56d, 0x3813, 0x1, 0x1);
        gbc.writeMem(0xdae6, { 0xc7 });
        gbc.writeMem(0xe32d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xe32d, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xdae6));
        EXPECT(0xe7, gbc.readMem(0xe32d));
        EXPECT(0xda, gbc.readMem(0xe32e));
        // C7 00D9
        gbc.setState(0xda7b, 0xdaff, 0x3c00, 0x38ee, 0x6e07, 0x7104, 0x0, 0x1);
        gbc.writeMem(0xda7b, { 0xc7 });
        gbc.writeMem(0xdafd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xdafd, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xda7b));
        EXPECT(0x7c, gbc.readMem(0xdafd));
        EXPECT(0xda, gbc.readMem(0xdafe));
        // C7 00DB
        gbc.setState(0x7283, 0xb663, 0x2270, 0xa5ee, 0x969a, 0x479, 0x0, 0x1);
        gbc.writeMem(0x7283, { 0xc7 });
        gbc.writeMem(0xb661, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xb661, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xb661));
        EXPECT(0x72, gbc.readMem(0xb662));
        // C7 00DD
        gbc.setState(0x2391, 0xb41f, 0xf2d0, 0x7406, 0x2cbd, 0x9b26, 0x1, 0x1);
        gbc.writeMem(0x2391, { 0xc7 });
        gbc.writeMem(0xb41d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb41d, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xb41d));
        EXPECT(0x23, gbc.readMem(0xb41e));
        // C7 00E0
        gbc.setState(0x1b97, 0x9889, 0xa4f0, 0xb73, 0x204f, 0xd0a8, 0x1, 0x1);
        gbc.writeMem(0x1b97, { 0xc7 });
        gbc.writeMem(0x9887, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x9887, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9887));
        EXPECT(0x1b, gbc.readMem(0x9888));
        // C7 00E2
        gbc.setState(0x8d28, 0xc724, 0xe070, 0xde59, 0x15ea, 0xe51e, 0x0, 0x0);
        gbc.writeMem(0x8d28, { 0xc7 });
        gbc.writeMem(0xc722, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xc722, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x8d28));
        EXPECT(0x29, gbc.readMem(0xc722));
        EXPECT(0x8d, gbc.readMem(0xc723));
        // C7 00E4
        gbc.setState(0x1909, 0x86d2, 0x66e0, 0x3220, 0x7dd4, 0x4cd2, 0x0, 0x0);
        gbc.writeMem(0x1909, { 0xc7 });
        gbc.writeMem(0x86d0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x86d0, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x86d0));
        EXPECT(0x19, gbc.readMem(0x86d1));
        // C7 00E6
        gbc.setState(0x9f6f, 0xbeb1, 0x97f0, 0xb120, 0x7d5d, 0xfa97, 0x1, 0x1);
        gbc.writeMem(0x9f6f, { 0xc7 });
        gbc.writeMem(0xbeaf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xbeaf, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x9f6f));
        EXPECT(0x70, gbc.readMem(0xbeaf));
        EXPECT(0x9f, gbc.readMem(0xbeb0));
        // C7 00E7
        gbc.setState(0x8f2c, 0xf183, 0xab40, 0xa551, 0x80f2, 0x997c, 0x1, 0x1);
        gbc.writeMem(0x8f2c, { 0xc7 });
        gbc.writeMem(0xf181, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf181, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x8f2c));
        EXPECT(0x2d, gbc.readMem(0xf181));
        EXPECT(0x8f, gbc.readMem(0xf182));
        // C7 00EC
        gbc.setState(0xdc13, 0xa260, 0x5740, 0x1e3, 0x3143, 0x15f8, 0x0, 0x0);
        gbc.writeMem(0xa25e, { 0x0, 0x0 });
        gbc.writeMem(0xdc13, { 0xc7 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xa25e, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xa25e));
        EXPECT(0xdc, gbc.readMem(0xa25f));
        EXPECT(0xc7, gbc.readMem(0xdc13));
        // C7 00EE
        gbc.setState(0xa768, 0xc1bc, 0x2330, 0x8f40, 0x5641, 0x6bcf, 0x1, 0x1);
        gbc.writeMem(0xa768, { 0xc7 });
        gbc.writeMem(0xc1ba, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xc1ba, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xa768));
        EXPECT(0x69, gbc.readMem(0xc1ba));
        EXPECT(0xa7, gbc.readMem(0xc1bb));
        // C7 00EF
        gbc.setState(0xe14d, 0x8c51, 0x3520, 0x7963, 0xfa66, 0x8d0a, 0x0, 0x0);
        gbc.writeMem(0x8c4f, { 0x0, 0x0 });
        gbc.writeMem(0xe14d, { 0xc7 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x8c4f, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x8c4f));
        EXPECT(0xe1, gbc.readMem(0x8c50));
        EXPECT(0xc7, gbc.readMem(0xe14d));
        // C7 00F1
        gbc.setState(0x111a, 0x80cc, 0x4f90, 0xccae, 0x1ca, 0x118b, 0x1, 0x0);
        gbc.writeMem(0x111a, { 0xc7 });
        gbc.writeMem(0x80ca, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x80ca, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0x80ca));
        EXPECT(0x11, gbc.readMem(0x80cb));
        // C7 00F5
        gbc.setState(0x119a, 0xab80, 0xd610, 0xa3eb, 0xba1, 0xfbce, 0x1, 0x1);
        gbc.writeMem(0x119a, { 0xc7 });
        gbc.writeMem(0xab7e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xab7e, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xab7e));
        EXPECT(0x11, gbc.readMem(0xab7f));
        // C7 00F9
        gbc.setState(0xa0d1, 0xdf83, 0x2440, 0x9c47, 0x9385, 0xa804, 0x1, 0x1);
        gbc.writeMem(0xa0d1, { 0xc7 });
        gbc.writeMem(0xdf81, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xdf81, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xa0d1));
        EXPECT(0xd2, gbc.readMem(0xdf81));
        EXPECT(0xa0, gbc.readMem(0xdf82));
        // C7 00FA
        gbc.setState(0x910a, 0xb353, 0xefc0, 0xaad, 0xbf6b, 0xbf79, 0x1, 0x0);
        gbc.writeMem(0x910a, { 0xc7 });
        gbc.writeMem(0xb351, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xb351, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x910a));
        EXPECT(0xb, gbc.readMem(0xb351));
        EXPECT(0x91, gbc.readMem(0xb352));
        // C7 00FB
        gbc.setState(0x2162, 0x86f3, 0x5160, 0xcaeb, 0x5e51, 0x7180, 0x0, 0x0);
        gbc.writeMem(0x2162, { 0xc7 });
        gbc.writeMem(0x86f1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x86f1, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0x86f1));
        EXPECT(0x21, gbc.readMem(0x86f2));
        // C7 0100
        gbc.setState(0x31cc, 0xb03c, 0x1890, 0x8ff2, 0x133d, 0xa44a, 0x0, 0x1);
        gbc.writeMem(0x31cc, { 0xc7 });
        gbc.writeMem(0xb03a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xb03a, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xb03a));
        EXPECT(0x31, gbc.readMem(0xb03b));
        // C7 0102
        gbc.setState(0xb669, 0xd19b, 0x4550, 0x630, 0x2c89, 0x2589, 0x1, 0x1);
        gbc.writeMem(0xb669, { 0xc7 });
        gbc.writeMem(0xd199, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xd199, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xb669));
        EXPECT(0x6a, gbc.readMem(0xd199));
        EXPECT(0xb6, gbc.readMem(0xd19a));
        // C7 0104
        gbc.setState(0x7cdb, 0xc6b0, 0x6750, 0x6707, 0x642a, 0xbba5, 0x1, 0x0);
        gbc.writeMem(0x7cdb, { 0xc7 });
        gbc.writeMem(0xc6ae, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc6ae, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xc6ae));
        EXPECT(0x7c, gbc.readMem(0xc6af));
        // C7 0106
        gbc.setState(0xb4b1, 0xc4f2, 0x4c00, 0x17ca, 0x86ab, 0x54f5, 0x0, 0x1);
        gbc.writeMem(0xb4b1, { 0xc7 });
        gbc.writeMem(0xc4f0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xc4f0, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xb4b1));
        EXPECT(0xb2, gbc.readMem(0xc4f0));
        EXPECT(0xb4, gbc.readMem(0xc4f1));
        // C7 0109
        gbc.setState(0xc971, 0xd188, 0x15d0, 0x8e44, 0x5916, 0x1c36, 0x1, 0x1);
        gbc.writeMem(0xc971, { 0xc7 });
        gbc.writeMem(0xd186, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd186, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xc971));
        EXPECT(0x72, gbc.readMem(0xd186));
        EXPECT(0xc9, gbc.readMem(0xd187));
        // C7 010C
        gbc.setState(0x42e1, 0xd714, 0x2e40, 0xdb56, 0xc797, 0x2088, 0x1, 0x0);
        gbc.writeMem(0x42e1, { 0xc7 });
        gbc.writeMem(0xd712, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xd712, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xd712));
        EXPECT(0x42, gbc.readMem(0xd713));
        // C7 010D
        gbc.setState(0x612f, 0xb595, 0xd430, 0x176c, 0x52a1, 0xd5ac, 0x1, 0x1);
        gbc.writeMem(0x612f, { 0xc7 });
        gbc.writeMem(0xb593, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xb593, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xb593));
        EXPECT(0x61, gbc.readMem(0xb594));
        // C7 0111
        gbc.setState(0xcdd9, 0xaa9c, 0x1290, 0x4df1, 0x18eb, 0x2c81, 0x1, 0x1);
        gbc.writeMem(0xaa9a, { 0x0, 0x0 });
        gbc.writeMem(0xcdd9, { 0xc7 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xaa9a, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xaa9a));
        EXPECT(0xcd, gbc.readMem(0xaa9b));
        EXPECT(0xc7, gbc.readMem(0xcdd9));
        // C7 0113
        gbc.setState(0x30cf, 0xbf76, 0x3a60, 0x783b, 0x9354, 0xfa16, 0x1, 0x0);
        gbc.writeMem(0x30cf, { 0xc7 });
        gbc.writeMem(0xbf74, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xbf74, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xbf74));
        EXPECT(0x30, gbc.readMem(0xbf75));
        // C7 0115
        gbc.setState(0x8263, 0xd878, 0x1860, 0x5ca7, 0xb783, 0xef70, 0x1, 0x1);
        gbc.writeMem(0x8263, { 0xc7 });
        gbc.writeMem(0xd876, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xd876, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x8263));
        EXPECT(0x64, gbc.readMem(0xd876));
        EXPECT(0x82, gbc.readMem(0xd877));
        // C7 0117
        gbc.setState(0xcb38, 0xefc2, 0xb360, 0xf3ec, 0xa2a1, 0x6fa5, 0x0, 0x1);
        gbc.writeMem(0xcb38, { 0xc7 });
        gbc.writeMem(0xefc0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xefc0, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xcb38));
        EXPECT(0x39, gbc.readMem(0xefc0));
        EXPECT(0xcb, gbc.readMem(0xefc1));
        // C7 0118
        gbc.setState(0xb922, 0xb70a, 0x40a0, 0x47e6, 0x25fb, 0xdd07, 0x0, 0x0);
        gbc.writeMem(0xb708, { 0x0, 0x0 });
        gbc.writeMem(0xb922, { 0xc7 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xb708, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xb708));
        EXPECT(0xb9, gbc.readMem(0xb709));
        EXPECT(0xc7, gbc.readMem(0xb922));
        // C7 0119
        gbc.setState(0xdebe, 0xf824, 0xc500, 0x6d64, 0xda06, 0xb4d1, 0x1, 0x0);
        gbc.writeMem(0xdebe, { 0xc7 });
        gbc.writeMem(0xf822, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xf822, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xdebe));
        EXPECT(0xbf, gbc.readMem(0xf822));
        EXPECT(0xde, gbc.readMem(0xf823));
        // C7 011B
        gbc.setState(0x9c56, 0x9c12, 0xc0f0, 0x9fbc, 0xf0bc, 0x72d6, 0x1, 0x0);
        gbc.writeMem(0x9c10, { 0x0, 0x0 });
        gbc.writeMem(0x9c56, { 0xc7 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x9c10, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x9c10));
        EXPECT(0x9c, gbc.readMem(0x9c11));
        EXPECT(0xc7, gbc.readMem(0x9c56));
        // C7 0120
        gbc.setState(0xb558, 0xf940, 0x7910, 0xd77, 0x4375, 0xbd82, 0x0, 0x1);
        gbc.writeMem(0xb558, { 0xc7 });
        gbc.writeMem(0xf93e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xf93e, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xb558));
        EXPECT(0x59, gbc.readMem(0xf93e));
        EXPECT(0xb5, gbc.readMem(0xf93f));
        // C7 0121
        gbc.setState(0xe80b, 0x8eb9, 0xd8a0, 0x7f7c, 0xc9b0, 0x5ce6, 0x0, 0x0);
        gbc.writeMem(0x8eb7, { 0x0, 0x0 });
        gbc.writeMem(0xe80b, { 0xc7 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x8eb7, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x8eb7));
        EXPECT(0xe8, gbc.readMem(0x8eb8));
        EXPECT(0xc7, gbc.readMem(0xe80b));
        // C7 0122
        gbc.setState(0x8c8f, 0x870b, 0xe6f0, 0x6d51, 0x2f75, 0xe12e, 0x0, 0x0);
        gbc.writeMem(0x8709, { 0x0, 0x0 });
        gbc.writeMem(0x8c8f, { 0xc7 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x8709, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0x8709));
        EXPECT(0x8c, gbc.readMem(0x870a));
        EXPECT(0xc7, gbc.readMem(0x8c8f));
        // C7 0124
        gbc.setState(0x4e7c, 0xeabe, 0xa210, 0xbfdf, 0xf847, 0x5e2d, 0x1, 0x1);
        gbc.writeMem(0x4e7c, { 0xc7 });
        gbc.writeMem(0xeabc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xeabc, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xeabc));
        EXPECT(0x4e, gbc.readMem(0xeabd));
        // C7 0127
        gbc.setState(0x6cda, 0xe68e, 0x1230, 0xb103, 0x9457, 0x252b, 0x1, 0x1);
        gbc.writeMem(0x6cda, { 0xc7 });
        gbc.writeMem(0xe68c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xe68c, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xe68c));
        EXPECT(0x6c, gbc.readMem(0xe68d));
        // C7 0128
        gbc.setState(0x376c, 0xd91a, 0x1f80, 0x1bd4, 0xd612, 0xd0a5, 0x1, 0x1);
        gbc.writeMem(0x376c, { 0xc7 });
        gbc.writeMem(0xd918, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xd918, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xd918));
        EXPECT(0x37, gbc.readMem(0xd919));
        // C7 012A
        gbc.setState(0x8b82, 0x85b1, 0x7680, 0x2c9c, 0x59ab, 0x85c7, 0x1, 0x1);
        gbc.writeMem(0x85af, { 0x0, 0x0 });
        gbc.writeMem(0x8b82, { 0xc7 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x85af, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0x85af));
        EXPECT(0x8b, gbc.readMem(0x85b0));
        EXPECT(0xc7, gbc.readMem(0x8b82));
        // C7 012C
        gbc.setState(0x4e00, 0xbd63, 0x6740, 0x2102, 0x4f18, 0x6c07, 0x1, 0x0);
        gbc.writeMem(0x4e00, { 0xc7 });
        gbc.writeMem(0xbd61, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xbd61, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xbd61));
        EXPECT(0x4e, gbc.readMem(0xbd62));
        // C7 012E
        gbc.setState(0x416b, 0xb7ef, 0xc120, 0x8495, 0xae6a, 0x85f1, 0x0, 0x0);
        gbc.writeMem(0x416b, { 0xc7 });
        gbc.writeMem(0xb7ed, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xb7ed, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xb7ed));
        EXPECT(0x41, gbc.readMem(0xb7ee));
        // C7 012F
        gbc.setState(0x4bb7, 0x8c3b, 0xbf00, 0x94ef, 0x138a, 0x56e7, 0x1, 0x0);
        gbc.writeMem(0x4bb7, { 0xc7 });
        gbc.writeMem(0x8c39, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x8c39, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0x8c39));
        EXPECT(0x4b, gbc.readMem(0x8c3a));
        // C7 0130
        gbc.setState(0x8166, 0x8348, 0xd920, 0x2e2a, 0x9527, 0x6866, 0x0, 0x1);
        gbc.writeMem(0x8166, { 0xc7 });
        gbc.writeMem(0x8346, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8346, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x8166));
        EXPECT(0x67, gbc.readMem(0x8346));
        EXPECT(0x81, gbc.readMem(0x8347));
        // C7 0132
        gbc.setState(0xce6a, 0xb16b, 0xc740, 0x601f, 0xf1db, 0x4e0a, 0x1, 0x1);
        gbc.writeMem(0xb169, { 0x0, 0x0 });
        gbc.writeMem(0xce6a, { 0xc7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xb169, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xb169));
        EXPECT(0xce, gbc.readMem(0xb16a));
        EXPECT(0xc7, gbc.readMem(0xce6a));
        // C7 0134
        gbc.setState(0xcdb4, 0xf730, 0x7840, 0x7ebd, 0x40df, 0x51a, 0x1, 0x0);
        gbc.writeMem(0xcdb4, { 0xc7 });
        gbc.writeMem(0xf72e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf72e, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xcdb4));
        EXPECT(0xb5, gbc.readMem(0xf72e));
        EXPECT(0xcd, gbc.readMem(0xf72f));
        // C7 0136
        gbc.setState(0xc76f, 0xa4bc, 0x15b0, 0x7d45, 0x9692, 0x5cad, 0x1, 0x0);
        gbc.writeMem(0xa4ba, { 0x0, 0x0 });
        gbc.writeMem(0xc76f, { 0xc7 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xa4ba, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xa4ba));
        EXPECT(0xc7, gbc.readMem(0xa4bb));
        EXPECT(0xc7, gbc.readMem(0xc76f));
        // C7 013A
        gbc.setState(0xcfbd, 0x9762, 0x7fc0, 0xf835, 0x5faa, 0xd8d2, 0x1, 0x1);
        gbc.writeMem(0x9760, { 0x0, 0x0 });
        gbc.writeMem(0xcfbd, { 0xc7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x9760, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0x9760));
        EXPECT(0xcf, gbc.readMem(0x9761));
        EXPECT(0xc7, gbc.readMem(0xcfbd));
        // C7 013E
        gbc.setState(0x6abb, 0xbae5, 0xb370, 0xb54d, 0x4cbf, 0xe48e, 0x0, 0x0);
        gbc.writeMem(0x6abb, { 0xc7 });
        gbc.writeMem(0xbae3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xbae3, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xbae3));
        EXPECT(0x6a, gbc.readMem(0xbae4));
        // C7 013F
        gbc.setState(0x69e4, 0xefbe, 0xce60, 0xc61d, 0x57e1, 0x4545, 0x1, 0x1);
        gbc.writeMem(0x69e4, { 0xc7 });
        gbc.writeMem(0xefbc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xefbc, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xefbc));
        EXPECT(0x69, gbc.readMem(0xefbd));
        // C7 0140
        gbc.setState(0x738d, 0xecbc, 0xef90, 0x399b, 0x9b85, 0x5901, 0x1, 0x1);
        gbc.writeMem(0x738d, { 0xc7 });
        gbc.writeMem(0xecba, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xecba, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xecba));
        EXPECT(0x73, gbc.readMem(0xecbb));
        // C7 0145
        gbc.setState(0x4274, 0xda3c, 0x2040, 0xcaf7, 0x95c7, 0x74f1, 0x1, 0x0);
        gbc.writeMem(0x4274, { 0xc7 });
        gbc.writeMem(0xda3a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xda3a, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xda3a));
        EXPECT(0x42, gbc.readMem(0xda3b));
        // C7 0146
        gbc.setState(0x349a, 0xb48b, 0x2740, 0xe02f, 0x127e, 0x2aa0, 0x0, 0x1);
        gbc.writeMem(0x349a, { 0xc7 });
        gbc.writeMem(0xb489, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb489, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xb489));
        EXPECT(0x34, gbc.readMem(0xb48a));
        // C7 0148
        gbc.setState(0xb2e5, 0xaed4, 0x1da0, 0xe8d1, 0x3303, 0x65f9, 0x0, 0x1);
        gbc.writeMem(0xaed2, { 0x0, 0x0 });
        gbc.writeMem(0xb2e5, { 0xc7 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xaed2, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xaed2));
        EXPECT(0xb2, gbc.readMem(0xaed3));
        EXPECT(0xc7, gbc.readMem(0xb2e5));
        // C7 014B
        gbc.setState(0xdc65, 0xbe5e, 0x2a80, 0x84fb, 0xd53, 0x8e77, 0x1, 0x0);
        gbc.writeMem(0xbe5c, { 0x0, 0x0 });
        gbc.writeMem(0xdc65, { 0xc7 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xbe5c, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xbe5c));
        EXPECT(0xdc, gbc.readMem(0xbe5d));
        EXPECT(0xc7, gbc.readMem(0xdc65));
        // C7 014C
        gbc.setState(0x6e4c, 0xe8eb, 0xf800, 0x741e, 0x9104, 0x9d2d, 0x1, 0x0);
        gbc.writeMem(0x6e4c, { 0xc7 });
        gbc.writeMem(0xe8e9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe8e9, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xe8e9));
        EXPECT(0x6e, gbc.readMem(0xe8ea));
        // C7 014F
        gbc.setState(0x46dd, 0xb32f, 0x6530, 0xc1c8, 0x1e47, 0xe4f2, 0x0, 0x1);
        gbc.writeMem(0x46dd, { 0xc7 });
        gbc.writeMem(0xb32d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb32d, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xb32d));
        EXPECT(0x46, gbc.readMem(0xb32e));
        // C7 0153
        gbc.setState(0x4e3a, 0xd219, 0xaa70, 0x24b5, 0x66c8, 0xb906, 0x0, 0x1);
        gbc.writeMem(0x4e3a, { 0xc7 });
        gbc.writeMem(0xd217, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xd217, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xd217));
        EXPECT(0x4e, gbc.readMem(0xd218));
        // C7 0155
        gbc.setState(0xccc9, 0xfe16, 0x2c40, 0xbf, 0x51c8, 0xc16f, 0x0, 0x1);
        gbc.writeMem(0xccc9, { 0xc7 });
        gbc.writeMem(0xfe14, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xfe14, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xccc9));
        EXPECT(0xca, gbc.readMem(0xfe14));
        EXPECT(0xcc, gbc.readMem(0xfe15));
        // C7 0157
        gbc.setState(0xb1b4, 0xe569, 0xcbf0, 0xcced, 0x55fe, 0x5bd8, 0x1, 0x0);
        gbc.writeMem(0xb1b4, { 0xc7 });
        gbc.writeMem(0xe567, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xe567, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xb1b4));
        EXPECT(0xb5, gbc.readMem(0xe567));
        EXPECT(0xb1, gbc.readMem(0xe568));
        // C7 0158
        gbc.setState(0xe151, 0xdaad, 0x7100, 0x2aac, 0x1435, 0x5e4b, 0x0, 0x1);
        gbc.writeMem(0xdaab, { 0x0, 0x0 });
        gbc.writeMem(0xe151, { 0xc7 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xdaab, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xdaab));
        EXPECT(0xe1, gbc.readMem(0xdaac));
        EXPECT(0xc7, gbc.readMem(0xe151));
        // C7 015A
        gbc.setState(0x7bfc, 0xd54e, 0xc5d0, 0xb983, 0x12b0, 0x96e4, 0x1, 0x1);
        gbc.writeMem(0x7bfc, { 0xc7 });
        gbc.writeMem(0xd54c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xd54c, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xd54c));
        EXPECT(0x7b, gbc.readMem(0xd54d));
        // C7 015C
        gbc.setState(0x5925, 0xc971, 0xd6d0, 0xaab7, 0xca6c, 0xff7d, 0x0, 0x1);
        gbc.writeMem(0x5925, { 0xc7 });
        gbc.writeMem(0xc96f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc96f, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xc96f));
        EXPECT(0x59, gbc.readMem(0xc970));
        // C7 0163
        gbc.setState(0xa9e1, 0xea21, 0xf9c0, 0xb1a4, 0x913d, 0xc0f2, 0x1, 0x1);
        gbc.writeMem(0xa9e1, { 0xc7 });
        gbc.writeMem(0xea1f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xea1f, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xa9e1));
        EXPECT(0xe2, gbc.readMem(0xea1f));
        EXPECT(0xa9, gbc.readMem(0xea20));
        // C7 0164
        gbc.setState(0x69c6, 0xfd79, 0x3ca0, 0x93, 0x6e44, 0xd351, 0x0, 0x1);
        gbc.writeMem(0x69c6, { 0xc7 });
        gbc.writeMem(0xfd77, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xfd77, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xfd77));
        EXPECT(0x69, gbc.readMem(0xfd78));
        // C7 0167
        gbc.setState(0xb850, 0x8ea9, 0x320, 0x3949, 0xc0b2, 0x71a0, 0x1, 0x1);
        gbc.writeMem(0x8ea7, { 0x0, 0x0 });
        gbc.writeMem(0xb850, { 0xc7 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x8ea7, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x8ea7));
        EXPECT(0xb8, gbc.readMem(0x8ea8));
        EXPECT(0xc7, gbc.readMem(0xb850));
        // C7 0168
        gbc.setState(0xdd37, 0xcf02, 0x4d50, 0xe4ca, 0xe14c, 0x6f9b, 0x1, 0x0);
        gbc.writeMem(0xcf00, { 0x0, 0x0 });
        gbc.writeMem(0xdd37, { 0xc7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xcf00, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xcf00));
        EXPECT(0xdd, gbc.readMem(0xcf01));
        EXPECT(0xc7, gbc.readMem(0xdd37));
        // C7 0169
        gbc.setState(0x44ab, 0xf0ae, 0xea40, 0xa9e9, 0x24f4, 0x36a8, 0x0, 0x0);
        gbc.writeMem(0x44ab, { 0xc7 });
        gbc.writeMem(0xf0ac, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf0ac, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xf0ac));
        EXPECT(0x44, gbc.readMem(0xf0ad));
        // C7 016D
        gbc.setState(0xd7b2, 0xbbcc, 0x4a0, 0x852d, 0x2155, 0xb859, 0x1, 0x0);
        gbc.writeMem(0xbbca, { 0x0, 0x0 });
        gbc.writeMem(0xd7b2, { 0xc7 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xbbca, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xbbca));
        EXPECT(0xd7, gbc.readMem(0xbbcb));
        EXPECT(0xc7, gbc.readMem(0xd7b2));
        // C7 016E
        gbc.setState(0x5131, 0xd0e0, 0xc020, 0xb4cb, 0xca9f, 0xcf84, 0x0, 0x1);
        gbc.writeMem(0x5131, { 0xc7 });
        gbc.writeMem(0xd0de, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd0de, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xd0de));
        EXPECT(0x51, gbc.readMem(0xd0df));
        // C7 016F
        gbc.setState(0xb3e8, 0xd900, 0xbe70, 0xbea2, 0xef25, 0x5eae, 0x0, 0x0);
        gbc.writeMem(0xb3e8, { 0xc7 });
        gbc.writeMem(0xd8fe, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd8fe, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xb3e8));
        EXPECT(0xe9, gbc.readMem(0xd8fe));
        EXPECT(0xb3, gbc.readMem(0xd8ff));
        // C7 0170
        gbc.setState(0xe407, 0x997d, 0x3370, 0xc05, 0x1f45, 0xb178, 0x1, 0x1);
        gbc.writeMem(0x997b, { 0x0, 0x0 });
        gbc.writeMem(0xe407, { 0xc7 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x997b, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0x997b));
        EXPECT(0xe4, gbc.readMem(0x997c));
        EXPECT(0xc7, gbc.readMem(0xe407));
        // C7 0171
        gbc.setState(0x2e60, 0x8fce, 0x6d70, 0x6581, 0x419e, 0x6b39, 0x1, 0x0);
        gbc.writeMem(0x2e60, { 0xc7 });
        gbc.writeMem(0x8fcc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x8fcc, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8fcc));
        EXPECT(0x2e, gbc.readMem(0x8fcd));
        // C7 0172
        gbc.setState(0x3e74, 0xe4e2, 0x8ca0, 0xbdf0, 0x4770, 0x6870, 0x1, 0x0);
        gbc.writeMem(0x3e74, { 0xc7 });
        gbc.writeMem(0xe4e0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe4e0, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xe4e0));
        EXPECT(0x3e, gbc.readMem(0xe4e1));
        // C7 0175
        gbc.setState(0x4cf2, 0x8036, 0xb350, 0xe359, 0x8211, 0x9f77, 0x0, 0x1);
        gbc.writeMem(0x4cf2, { 0xc7 });
        gbc.writeMem(0x8034, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x8034, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0x8034));
        EXPECT(0x4c, gbc.readMem(0x8035));
        // C7 0178
        gbc.setState(0x71b2, 0xbcd2, 0x4b90, 0xa7b2, 0x9b3b, 0x64f9, 0x0, 0x1);
        gbc.writeMem(0x71b2, { 0xc7 });
        gbc.writeMem(0xbcd0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xbcd0, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xbcd0));
        EXPECT(0x71, gbc.readMem(0xbcd1));
        // C7 0179
        gbc.setState(0x8628, 0xab09, 0x200, 0xde4, 0xf4ba, 0xf08, 0x1, 0x1);
        gbc.writeMem(0x8628, { 0xc7 });
        gbc.writeMem(0xab07, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xab07, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x8628));
        EXPECT(0x29, gbc.readMem(0xab07));
        EXPECT(0x86, gbc.readMem(0xab08));
        // C7 017B
        gbc.setState(0x5731, 0xb6e7, 0x75b0, 0xaafc, 0xfec6, 0x7240, 0x1, 0x0);
        gbc.writeMem(0x5731, { 0xc7 });
        gbc.writeMem(0xb6e5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xb6e5, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xb6e5));
        EXPECT(0x57, gbc.readMem(0xb6e6));
        // C7 017D
        gbc.setState(0xecb8, 0xa418, 0x53b0, 0x1af, 0x2386, 0x7ce3, 0x1, 0x0);
        gbc.writeMem(0xa416, { 0x0, 0x0 });
        gbc.writeMem(0xecb8, { 0xc7 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa416, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xa416));
        EXPECT(0xec, gbc.readMem(0xa417));
        EXPECT(0xc7, gbc.readMem(0xecb8));
        // C7 017E
        gbc.setState(0x3bf4, 0xb779, 0x5410, 0xd415, 0x84b0, 0x2b83, 0x0, 0x1);
        gbc.writeMem(0x3bf4, { 0xc7 });
        gbc.writeMem(0xb777, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xb777, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xb777));
        EXPECT(0x3b, gbc.readMem(0xb778));
        // C7 0183
        gbc.setState(0x6676, 0xdf89, 0x8600, 0x7f9d, 0x984d, 0xa3b6, 0x0, 0x0);
        gbc.writeMem(0x6676, { 0xc7 });
        gbc.writeMem(0xdf87, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xdf87, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xdf87));
        EXPECT(0x66, gbc.readMem(0xdf88));
        // C7 0184
        gbc.setState(0x62c, 0xf006, 0x5a20, 0xcd9e, 0x3da6, 0xc0b1, 0x1, 0x1);
        gbc.writeMem(0x62c, { 0xc7 });
        gbc.writeMem(0xf004, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xf004, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xf004));
        EXPECT(0x6, gbc.readMem(0xf005));
        // C7 0187
        gbc.setState(0x4287, 0xc659, 0x30f0, 0x6a92, 0x8d84, 0xe4a1, 0x0, 0x1);
        gbc.writeMem(0x4287, { 0xc7 });
        gbc.writeMem(0xc657, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xc657, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xc657));
        EXPECT(0x42, gbc.readMem(0xc658));
        // C7 018D
        gbc.setState(0x5870, 0xbf67, 0xb990, 0x695e, 0xbfa4, 0xacee, 0x1, 0x0);
        gbc.writeMem(0x5870, { 0xc7 });
        gbc.writeMem(0xbf65, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xbf65, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xbf65));
        EXPECT(0x58, gbc.readMem(0xbf66));
        // C7 018E
        gbc.setState(0xc9a9, 0xe01d, 0x5890, 0x62eb, 0xfcec, 0x4d2d, 0x0, 0x1);
        gbc.writeMem(0xc9a9, { 0xc7 });
        gbc.writeMem(0xe01b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe01b, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xc9a9));
        EXPECT(0xaa, gbc.readMem(0xe01b));
        EXPECT(0xc9, gbc.readMem(0xe01c));
        // C7 0191
        gbc.setState(0x59c9, 0x9f2a, 0xa3c0, 0xb19, 0x51af, 0x8314, 0x1, 0x0);
        gbc.writeMem(0x59c9, { 0xc7 });
        gbc.writeMem(0x9f28, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x9f28, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0x9f28));
        EXPECT(0x59, gbc.readMem(0x9f29));
        // C7 0192
        gbc.setState(0x8c96, 0xe4a2, 0x62c0, 0xd418, 0xa9d9, 0xca8d, 0x0, 0x0);
        gbc.writeMem(0x8c96, { 0xc7 });
        gbc.writeMem(0xe4a0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe4a0, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x8c96));
        EXPECT(0x97, gbc.readMem(0xe4a0));
        EXPECT(0x8c, gbc.readMem(0xe4a1));
        // C7 0195
        gbc.setState(0x7e87, 0x9aa6, 0x11c0, 0x2d4c, 0xee5b, 0xa329, 0x0, 0x1);
        gbc.writeMem(0x7e87, { 0xc7 });
        gbc.writeMem(0x9aa4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9aa4, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x9aa4));
        EXPECT(0x7e, gbc.readMem(0x9aa5));
        // C7 0196
        gbc.setState(0xe308, 0xe552, 0x9830, 0x1c9d, 0xe6f7, 0xc75d, 0x1, 0x1);
        gbc.writeMem(0xe308, { 0xc7 });
        gbc.writeMem(0xe550, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xe550, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xe308));
        EXPECT(0x9, gbc.readMem(0xe550));
        EXPECT(0xe3, gbc.readMem(0xe551));
        // C7 019C
        gbc.setState(0xbc6f, 0x8d1e, 0x1340, 0xcdb9, 0x9ae2, 0x2d5b, 0x1, 0x0);
        gbc.writeMem(0x8d1c, { 0x0, 0x0 });
        gbc.writeMem(0xbc6f, { 0xc7 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x8d1c, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0x8d1c));
        EXPECT(0xbc, gbc.readMem(0x8d1d));
        EXPECT(0xc7, gbc.readMem(0xbc6f));
        // C7 01A1
        gbc.setState(0x6157, 0x8e2f, 0xae40, 0x9864, 0x2a01, 0x36cc, 0x1, 0x0);
        gbc.writeMem(0x6157, { 0xc7 });
        gbc.writeMem(0x8e2d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x8e2d, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x8e2d));
        EXPECT(0x61, gbc.readMem(0x8e2e));
        // C7 01A2
        gbc.setState(0x23ce, 0xb553, 0x7240, 0x8845, 0xb802, 0x35fd, 0x1, 0x0);
        gbc.writeMem(0x23ce, { 0xc7 });
        gbc.writeMem(0xb551, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xb551, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xb551));
        EXPECT(0x23, gbc.readMem(0xb552));
        // C7 01A4
        gbc.setState(0xe117, 0x86e1, 0x9a0, 0xa824, 0x72fe, 0xc874, 0x0, 0x1);
        gbc.writeMem(0x86df, { 0x0, 0x0 });
        gbc.writeMem(0xe117, { 0xc7 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x86df, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0x86df));
        EXPECT(0xe1, gbc.readMem(0x86e0));
        EXPECT(0xc7, gbc.readMem(0xe117));
        // C7 01A5
        gbc.setState(0xeea5, 0xa3b1, 0xbc30, 0xef1e, 0x912e, 0xb5e5, 0x0, 0x1);
        gbc.writeMem(0xa3af, { 0x0, 0x0 });
        gbc.writeMem(0xeea5, { 0xc7 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xa3af, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xa3af));
        EXPECT(0xee, gbc.readMem(0xa3b0));
        EXPECT(0xc7, gbc.readMem(0xeea5));
        // C7 01A8
        gbc.setState(0xa792, 0x92ef, 0x1940, 0x6ecc, 0xa0cd, 0xb8a5, 0x0, 0x1);
        gbc.writeMem(0x92ed, { 0x0, 0x0 });
        gbc.writeMem(0xa792, { 0xc7 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x92ed, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x92ed));
        EXPECT(0xa7, gbc.readMem(0x92ee));
        EXPECT(0xc7, gbc.readMem(0xa792));
        // C7 01AA
        gbc.setState(0x1a96, 0x88a7, 0x2e60, 0x3a92, 0xeb11, 0xb03a, 0x0, 0x1);
        gbc.writeMem(0x1a96, { 0xc7 });
        gbc.writeMem(0x88a5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x88a5, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x88a5));
        EXPECT(0x1a, gbc.readMem(0x88a6));
        // C7 01AE
        gbc.setState(0x1108, 0x8a92, 0x1a00, 0x89b9, 0xa735, 0x5250, 0x0, 0x0);
        gbc.writeMem(0x1108, { 0xc7 });
        gbc.writeMem(0x8a90, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x8a90, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8a90));
        EXPECT(0x11, gbc.readMem(0x8a91));
        // C7 01AF
        gbc.setState(0xae16, 0xa15f, 0xcbe0, 0x453c, 0x994a, 0x8f38, 0x1, 0x0);
        gbc.writeMem(0xa15d, { 0x0, 0x0 });
        gbc.writeMem(0xae16, { 0xc7 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa15d, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xa15d));
        EXPECT(0xae, gbc.readMem(0xa15e));
        EXPECT(0xc7, gbc.readMem(0xae16));
        // C7 01B1
        gbc.setState(0x261c, 0x9e92, 0xea50, 0xdc3c, 0x2b41, 0x7fb3, 0x0, 0x0);
        gbc.writeMem(0x261c, { 0xc7 });
        gbc.writeMem(0x9e90, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9e90, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9e90));
        EXPECT(0x26, gbc.readMem(0x9e91));
        // C7 01B4
        gbc.setState(0xd96d, 0xa107, 0x3650, 0xe8c, 0x7a3a, 0xb36b, 0x1, 0x1);
        gbc.writeMem(0xa105, { 0x0, 0x0 });
        gbc.writeMem(0xd96d, { 0xc7 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xa105, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xa105));
        EXPECT(0xd9, gbc.readMem(0xa106));
        EXPECT(0xc7, gbc.readMem(0xd96d));
        // C7 01B8
        gbc.setState(0x739c, 0x97ea, 0x1c40, 0x9242, 0x1578, 0x757c, 0x0, 0x0);
        gbc.writeMem(0x739c, { 0xc7 });
        gbc.writeMem(0x97e8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x97e8, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x97e8));
        EXPECT(0x73, gbc.readMem(0x97e9));
        // C7 01BA
        gbc.setState(0x6ece, 0xd752, 0x76d0, 0xcb0a, 0x70b3, 0x6e8c, 0x0, 0x1);
        gbc.writeMem(0x6ece, { 0xc7 });
        gbc.writeMem(0xd750, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xd750, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xd750));
        EXPECT(0x6e, gbc.readMem(0xd751));
        // C7 01BC
        gbc.setState(0x7150, 0xc1a0, 0xd580, 0xb2cf, 0x57a1, 0xe2c3, 0x0, 0x1);
        gbc.writeMem(0x7150, { 0xc7 });
        gbc.writeMem(0xc19e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc19e, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xc19e));
        EXPECT(0x71, gbc.readMem(0xc19f));
        // C7 01BD
        gbc.setState(0x4f91, 0xad42, 0x46f0, 0x1549, 0xd908, 0x7cdf, 0x1, 0x1);
        gbc.writeMem(0x4f91, { 0xc7 });
        gbc.writeMem(0xad40, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xad40, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xad40));
        EXPECT(0x4f, gbc.readMem(0xad41));
        // C7 01BF
        gbc.setState(0x2c74, 0xf156, 0x4170, 0x3379, 0x345c, 0x1793, 0x1, 0x1);
        gbc.writeMem(0x2c74, { 0xc7 });
        gbc.writeMem(0xf154, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xf154, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xf154));
        EXPECT(0x2c, gbc.readMem(0xf155));
        // C7 01C0
        gbc.setState(0x177d, 0xf6d4, 0x6da0, 0x376, 0xb146, 0xde96, 0x0, 0x0);
        gbc.writeMem(0x177d, { 0xc7 });
        gbc.writeMem(0xf6d2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf6d2, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xf6d2));
        EXPECT(0x17, gbc.readMem(0xf6d3));
        // C7 01C1
        gbc.setState(0x4b50, 0xa1f4, 0x77b0, 0x2da5, 0xe745, 0x458b, 0x0, 0x1);
        gbc.writeMem(0x4b50, { 0xc7 });
        gbc.writeMem(0xa1f2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xa1f2, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xa1f2));
        EXPECT(0x4b, gbc.readMem(0xa1f3));
        // C7 01C3
        gbc.setState(0xd5bc, 0xdd7b, 0xf1a0, 0x610d, 0x471a, 0xedce, 0x0, 0x1);
        gbc.writeMem(0xd5bc, { 0xc7 });
        gbc.writeMem(0xdd79, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xdd79, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xd5bc));
        EXPECT(0xbd, gbc.readMem(0xdd79));
        EXPECT(0xd5, gbc.readMem(0xdd7a));
        // C7 01C4
        gbc.setState(0x466e, 0x953a, 0xf160, 0xd2a9, 0xf25e, 0x815a, 0x1, 0x1);
        gbc.writeMem(0x466e, { 0xc7 });
        gbc.writeMem(0x9538, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x9538, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0x9538));
        EXPECT(0x46, gbc.readMem(0x9539));
        // C7 01C5
        gbc.setState(0x27b8, 0xfa9a, 0x4d60, 0x16d8, 0x5873, 0x147d, 0x1, 0x1);
        gbc.writeMem(0x27b8, { 0xc7 });
        gbc.writeMem(0xfa98, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xfa98, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xfa98));
        EXPECT(0x27, gbc.readMem(0xfa99));
        // C7 01C8
        gbc.setState(0xb87, 0xaf40, 0x5ad0, 0xb902, 0xa14a, 0x93b7, 0x0, 0x1);
        gbc.writeMem(0xb87, { 0xc7 });
        gbc.writeMem(0xaf3e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xaf3e, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xaf3e));
        EXPECT(0xb, gbc.readMem(0xaf3f));
        // C7 01CA
        gbc.setState(0xee84, 0xae7d, 0xf120, 0x1f90, 0x9147, 0x9c88, 0x0, 0x1);
        gbc.writeMem(0xae7b, { 0x0, 0x0 });
        gbc.writeMem(0xee84, { 0xc7 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xae7b, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xae7b));
        EXPECT(0xee, gbc.readMem(0xae7c));
        EXPECT(0xc7, gbc.readMem(0xee84));
        // C7 01CB
        gbc.setState(0x3bd8, 0x9eaf, 0xf960, 0xb87c, 0x5f79, 0xbca9, 0x0, 0x1);
        gbc.writeMem(0x3bd8, { 0xc7 });
        gbc.writeMem(0x9ead, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x9ead, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x9ead));
        EXPECT(0x3b, gbc.readMem(0x9eae));
        // C7 01CC
        gbc.setState(0x2fb2, 0xcc00, 0x8fe0, 0x6b03, 0xbe9b, 0xbbaf, 0x1, 0x1);
        gbc.writeMem(0x2fb2, { 0xc7 });
        gbc.writeMem(0xcbfe, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xcbfe, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xcbfe));
        EXPECT(0x2f, gbc.readMem(0xcbff));
        // C7 01CF
        gbc.setState(0xa826, 0xa56a, 0xfb90, 0x2370, 0x1f1b, 0x6e01, 0x1, 0x1);
        gbc.writeMem(0xa568, { 0x0, 0x0 });
        gbc.writeMem(0xa826, { 0xc7 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xa568, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xa568));
        EXPECT(0xa8, gbc.readMem(0xa569));
        EXPECT(0xc7, gbc.readMem(0xa826));
        // C7 01D2
        gbc.setState(0x9624, 0xbcf9, 0x37d0, 0x87c9, 0x1ee5, 0x296a, 0x0, 0x0);
        gbc.writeMem(0x9624, { 0xc7 });
        gbc.writeMem(0xbcf7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xbcf7, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x9624));
        EXPECT(0x25, gbc.readMem(0xbcf7));
        EXPECT(0x96, gbc.readMem(0xbcf8));
        // C7 01D4
        gbc.setState(0x428, 0x851a, 0x1ff0, 0x8bad, 0xacf5, 0x6d85, 0x1, 0x0);
        gbc.writeMem(0x428, { 0xc7 });
        gbc.writeMem(0x8518, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x8518, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8518));
        EXPECT(0x4, gbc.readMem(0x8519));
        // C7 01D5
        gbc.setState(0xb522, 0xac85, 0x7f70, 0xdb86, 0xc1ef, 0x3b0b, 0x1, 0x1);
        gbc.writeMem(0xac83, { 0x0, 0x0 });
        gbc.writeMem(0xb522, { 0xc7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xac83, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xac83));
        EXPECT(0xb5, gbc.readMem(0xac84));
        EXPECT(0xc7, gbc.readMem(0xb522));
        // C7 01D6
        gbc.setState(0xdba6, 0xbead, 0xf900, 0x4702, 0x92db, 0x4d12, 0x1, 0x0);
        gbc.writeMem(0xbeab, { 0x0, 0x0 });
        gbc.writeMem(0xdba6, { 0xc7 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xbeab, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xbeab));
        EXPECT(0xdb, gbc.readMem(0xbeac));
        EXPECT(0xc7, gbc.readMem(0xdba6));
        // C7 01DA
        gbc.setState(0xc91f, 0xfa20, 0xbde0, 0x9641, 0xa1a2, 0x5cdd, 0x0, 0x1);
        gbc.writeMem(0xc91f, { 0xc7 });
        gbc.writeMem(0xfa1e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xfa1e, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xc91f));
        EXPECT(0x20, gbc.readMem(0xfa1e));
        EXPECT(0xc9, gbc.readMem(0xfa1f));
        // C7 01DE
        gbc.setState(0xbbc4, 0x8bf5, 0x2c80, 0x7fe1, 0xc755, 0x124f, 0x0, 0x0);
        gbc.writeMem(0x8bf3, { 0x0, 0x0 });
        gbc.writeMem(0xbbc4, { 0xc7 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x8bf3, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x8bf3));
        EXPECT(0xbb, gbc.readMem(0x8bf4));
        EXPECT(0xc7, gbc.readMem(0xbbc4));
        // C7 01E1
        gbc.setState(0x561f, 0x9048, 0x290, 0x6a3, 0x816c, 0x4a78, 0x0, 0x1);
        gbc.writeMem(0x561f, { 0xc7 });
        gbc.writeMem(0x9046, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x9046, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9046));
        EXPECT(0x56, gbc.readMem(0x9047));
        // C7 01E2
        gbc.setState(0xd6bc, 0xefb6, 0x7150, 0xf312, 0x787a, 0xb1b8, 0x0, 0x0);
        gbc.writeMem(0xd6bc, { 0xc7 });
        gbc.writeMem(0xefb4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xefb4, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xd6bc));
        EXPECT(0xbd, gbc.readMem(0xefb4));
        EXPECT(0xd6, gbc.readMem(0xefb5));
        // C7 01E6
        gbc.setState(0x52f4, 0xc656, 0x2960, 0xedad, 0x1b32, 0xddec, 0x0, 0x1);
        gbc.writeMem(0x52f4, { 0xc7 });
        gbc.writeMem(0xc654, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xc654, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xc654));
        EXPECT(0x52, gbc.readMem(0xc655));
        // C7 01ED
        gbc.setState(0xd47, 0x923a, 0x70c0, 0x3a5a, 0x21fa, 0x6041, 0x0, 0x0);
        gbc.writeMem(0xd47, { 0xc7 });
        gbc.writeMem(0x9238, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x9238, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x9238));
        EXPECT(0xd, gbc.readMem(0x9239));
        // C7 01EF
        gbc.setState(0xcc66, 0xf84a, 0xea0, 0xce3, 0x3593, 0x516c, 0x1, 0x0);
        gbc.writeMem(0xcc66, { 0xc7 });
        gbc.writeMem(0xf848, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xf848, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xcc66));
        EXPECT(0x67, gbc.readMem(0xf848));
        EXPECT(0xcc, gbc.readMem(0xf849));
        // C7 01F0
        gbc.setState(0x94e8, 0x9dc7, 0x8210, 0xc8bd, 0x395f, 0xd743, 0x1, 0x1);
        gbc.writeMem(0x94e8, { 0xc7 });
        gbc.writeMem(0x9dc5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x9dc5, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x94e8));
        EXPECT(0xe9, gbc.readMem(0x9dc5));
        EXPECT(0x94, gbc.readMem(0x9dc6));
        // C7 01F2
        gbc.setState(0xdc8e, 0x8e1e, 0xa880, 0x792e, 0xd077, 0x7069, 0x0, 0x1);
        gbc.writeMem(0x8e1c, { 0x0, 0x0 });
        gbc.writeMem(0xdc8e, { 0xc7 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x8e1c, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8e1c));
        EXPECT(0xdc, gbc.readMem(0x8e1d));
        EXPECT(0xc7, gbc.readMem(0xdc8e));
        // C7 01F3
        gbc.setState(0xbff9, 0xb99a, 0xd670, 0xaeee, 0xdce1, 0x6272, 0x1, 0x1);
        gbc.writeMem(0xb998, { 0x0, 0x0 });
        gbc.writeMem(0xbff9, { 0xc7 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xb998, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xb998));
        EXPECT(0xbf, gbc.readMem(0xb999));
        EXPECT(0xc7, gbc.readMem(0xbff9));
        // C7 01F5
        gbc.setState(0x91e3, 0xdcac, 0xc660, 0x4138, 0x99cf, 0x5397, 0x1, 0x0);
        gbc.writeMem(0x91e3, { 0xc7 });
        gbc.writeMem(0xdcaa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xdcaa, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x91e3));
        EXPECT(0xe4, gbc.readMem(0xdcaa));
        EXPECT(0x91, gbc.readMem(0xdcab));
        // C7 01F6
        gbc.setState(0x42ec, 0x87e7, 0x20b0, 0x7052, 0xb1ac, 0x7e27, 0x0, 0x1);
        gbc.writeMem(0x42ec, { 0xc7 });
        gbc.writeMem(0x87e5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x87e5, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0x87e5));
        EXPECT(0x42, gbc.readMem(0x87e6));
        // C7 01F7
        gbc.setState(0x17a5, 0xb6f2, 0xd8f0, 0x5ae, 0x6ebc, 0x4ad6, 0x1, 0x1);
        gbc.writeMem(0x17a5, { 0xc7 });
        gbc.writeMem(0xb6f0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xb6f0, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xb6f0));
        EXPECT(0x17, gbc.readMem(0xb6f1));
        // C7 01FC
        gbc.setState(0x2c18, 0xf27c, 0x22f0, 0x3036, 0x192, 0xf484, 0x0, 0x1);
        gbc.writeMem(0x2c18, { 0xc7 });
        gbc.writeMem(0xf27a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xf27a, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xf27a));
        EXPECT(0x2c, gbc.readMem(0xf27b));
        // C7 01FD
        gbc.setState(0x6740, 0xdee5, 0xa9f0, 0x9082, 0x76f4, 0x35a6, 0x1, 0x0);
        gbc.writeMem(0x6740, { 0xc7 });
        gbc.writeMem(0xdee3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xdee3, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xdee3));
        EXPECT(0x67, gbc.readMem(0xdee4));
        // C7 01FF
        gbc.setState(0xbe69, 0x85b5, 0xfee0, 0x37b1, 0xa6ab, 0x2663, 0x0, 0x0);
        gbc.writeMem(0x85b3, { 0x0, 0x0 });
        gbc.writeMem(0xbe69, { 0xc7 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x85b3, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x85b3));
        EXPECT(0xbe, gbc.readMem(0x85b4));
        EXPECT(0xc7, gbc.readMem(0xbe69));
        // C7 0202
        gbc.setState(0x9612, 0x90ea, 0x55b0, 0x47a3, 0x5e97, 0x161c, 0x0, 0x0);
        gbc.writeMem(0x90e8, { 0x0, 0x0 });
        gbc.writeMem(0x9612, { 0xc7 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x90e8, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x90e8));
        EXPECT(0x96, gbc.readMem(0x90e9));
        EXPECT(0xc7, gbc.readMem(0x9612));
        // C7 0203
        gbc.setState(0xa8fe, 0xd731, 0x3f00, 0x9d8f, 0xbfae, 0x8b6e, 0x0, 0x0);
        gbc.writeMem(0xa8fe, { 0xc7 });
        gbc.writeMem(0xd72f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xd72f, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xa8fe));
        EXPECT(0xff, gbc.readMem(0xd72f));
        EXPECT(0xa8, gbc.readMem(0xd730));
        // C7 0206
        gbc.setState(0x14a0, 0xcf5d, 0x7ff0, 0x1c9e, 0xee33, 0xac41, 0x0, 0x1);
        gbc.writeMem(0x14a0, { 0xc7 });
        gbc.writeMem(0xcf5b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xcf5b, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xcf5b));
        EXPECT(0x14, gbc.readMem(0xcf5c));
        // C7 0207
        gbc.setState(0x215e, 0xfb88, 0x5a90, 0xb93e, 0xf2b4, 0x303b, 0x0, 0x1);
        gbc.writeMem(0x215e, { 0xc7 });
        gbc.writeMem(0xfb86, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xfb86, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xfb86));
        EXPECT(0x21, gbc.readMem(0xfb87));
        // C7 020C
        gbc.setState(0xab5b, 0x9bbf, 0x62d0, 0x775c, 0x9b79, 0x1beb, 0x1, 0x1);
        gbc.writeMem(0x9bbd, { 0x0, 0x0 });
        gbc.writeMem(0xab5b, { 0xc7 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x9bbd, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0x9bbd));
        EXPECT(0xab, gbc.readMem(0x9bbe));
        EXPECT(0xc7, gbc.readMem(0xab5b));
        // C7 0210
        gbc.setState(0xb6e2, 0x84f9, 0x6ae0, 0x5321, 0xa5cd, 0xdfa3, 0x0, 0x0);
        gbc.writeMem(0x84f7, { 0x0, 0x0 });
        gbc.writeMem(0xb6e2, { 0xc7 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x84f7, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0x84f7));
        EXPECT(0xb6, gbc.readMem(0x84f8));
        EXPECT(0xc7, gbc.readMem(0xb6e2));
        // C7 0211
        gbc.setState(0x37f1, 0xd7e0, 0x2780, 0x8edd, 0xbf3f, 0x4230, 0x1, 0x1);
        gbc.writeMem(0x37f1, { 0xc7 });
        gbc.writeMem(0xd7de, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd7de, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xd7de));
        EXPECT(0x37, gbc.readMem(0xd7df));
        // C7 0213
        gbc.setState(0xb1c7, 0xfe5b, 0x87b0, 0x7fd8, 0xa428, 0x96df, 0x0, 0x0);
        gbc.writeMem(0xb1c7, { 0xc7 });
        gbc.writeMem(0xfe59, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xfe59, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xb1c7));
        EXPECT(0xc8, gbc.readMem(0xfe59));
        EXPECT(0xb1, gbc.readMem(0xfe5a));
        // C7 0215
        gbc.setState(0xcb07, 0xb079, 0xa7f0, 0x7629, 0x85cf, 0x4b60, 0x0, 0x1);
        gbc.writeMem(0xb077, { 0x0, 0x0 });
        gbc.writeMem(0xcb07, { 0xc7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xb077, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xb077));
        EXPECT(0xcb, gbc.readMem(0xb078));
        EXPECT(0xc7, gbc.readMem(0xcb07));
        // C7 0216
        gbc.setState(0x60ea, 0xb95f, 0x8110, 0x906d, 0x9aa, 0xf9bc, 0x1, 0x0);
        gbc.writeMem(0x60ea, { 0xc7 });
        gbc.writeMem(0xb95d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xb95d, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xb95d));
        EXPECT(0x60, gbc.readMem(0xb95e));
        // C7 0219
        gbc.setState(0xce77, 0x816e, 0x9b40, 0x25de, 0x36c0, 0x9fcc, 0x0, 0x1);
        gbc.writeMem(0x816c, { 0x0, 0x0 });
        gbc.writeMem(0xce77, { 0xc7 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x816c, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x816c));
        EXPECT(0xce, gbc.readMem(0x816d));
        EXPECT(0xc7, gbc.readMem(0xce77));
        // C7 021C
        gbc.setState(0xda66, 0xa73e, 0xab60, 0xae6d, 0x41aa, 0x7f17, 0x1, 0x1);
        gbc.writeMem(0xa73c, { 0x0, 0x0 });
        gbc.writeMem(0xda66, { 0xc7 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa73c, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0xa73c));
        EXPECT(0xda, gbc.readMem(0xa73d));
        EXPECT(0xc7, gbc.readMem(0xda66));
        // C7 0220
        gbc.setState(0xa2f5, 0x98b0, 0x2e20, 0xf508, 0x7c44, 0xe7cd, 0x0, 0x1);
        gbc.writeMem(0x98ae, { 0x0, 0x0 });
        gbc.writeMem(0xa2f5, { 0xc7 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x98ae, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0x98ae));
        EXPECT(0xa2, gbc.readMem(0x98af));
        EXPECT(0xc7, gbc.readMem(0xa2f5));
        // C7 0222
        gbc.setState(0xdb65, 0xf48d, 0xa9a0, 0xe4f6, 0xb1d9, 0xfde5, 0x1, 0x0);
        gbc.writeMem(0xdb65, { 0xc7 });
        gbc.writeMem(0xf48b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xf48b, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xdb65));
        EXPECT(0x66, gbc.readMem(0xf48b));
        EXPECT(0xdb, gbc.readMem(0xf48c));
        // C7 0223
        gbc.setState(0xcb38, 0xc69e, 0x4ed0, 0x949, 0x5f32, 0x3253, 0x0, 0x1);
        gbc.writeMem(0xc69c, { 0x0, 0x0 });
        gbc.writeMem(0xcb38, { 0xc7 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xc69c, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xc69c));
        EXPECT(0xcb, gbc.readMem(0xc69d));
        EXPECT(0xc7, gbc.readMem(0xcb38));
        // C7 0224
        gbc.setState(0xbb5c, 0xafe9, 0xcdb0, 0x2459, 0x271e, 0xc405, 0x1, 0x1);
        gbc.writeMem(0xafe7, { 0x0, 0x0 });
        gbc.writeMem(0xbb5c, { 0xc7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xafe7, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xafe7));
        EXPECT(0xbb, gbc.readMem(0xafe8));
        EXPECT(0xc7, gbc.readMem(0xbb5c));
        // C7 0226
        gbc.setState(0x8b60, 0xdb2e, 0x33e0, 0xf524, 0x40e9, 0x3389, 0x1, 0x1);
        gbc.writeMem(0x8b60, { 0xc7 });
        gbc.writeMem(0xdb2c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xdb2c, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x8b60));
        EXPECT(0x61, gbc.readMem(0xdb2c));
        EXPECT(0x8b, gbc.readMem(0xdb2d));
        // C7 0227
        gbc.setState(0x7347, 0xe47c, 0xa000, 0xd8a4, 0x92ac, 0x1456, 0x0, 0x1);
        gbc.writeMem(0x7347, { 0xc7 });
        gbc.writeMem(0xe47a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xe47a, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xe47a));
        EXPECT(0x73, gbc.readMem(0xe47b));
        // C7 0229
        gbc.setState(0x7871, 0x803e, 0xd5e0, 0x46cc, 0xb41f, 0x2c68, 0x0, 0x1);
        gbc.writeMem(0x7871, { 0xc7 });
        gbc.writeMem(0x803c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x803c, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x803c));
        EXPECT(0x78, gbc.readMem(0x803d));
        // C7 022A
        gbc.setState(0xec7e, 0xab24, 0x21f0, 0xd285, 0x1f4d, 0xa234, 0x0, 0x1);
        gbc.writeMem(0xab22, { 0x0, 0x0 });
        gbc.writeMem(0xec7e, { 0xc7 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xab22, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xab22));
        EXPECT(0xec, gbc.readMem(0xab23));
        EXPECT(0xc7, gbc.readMem(0xec7e));
        // C7 022B
        gbc.setState(0xaf41, 0xeffd, 0x4420, 0x72c0, 0x884f, 0x8c7f, 0x1, 0x1);
        gbc.writeMem(0xaf41, { 0xc7 });
        gbc.writeMem(0xeffb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xeffb, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xaf41));
        EXPECT(0x42, gbc.readMem(0xeffb));
        EXPECT(0xaf, gbc.readMem(0xeffc));
        // C7 0234
        gbc.setState(0xd236, 0xfec9, 0xabc0, 0x494c, 0xde5a, 0x6a4a, 0x0, 0x0);
        gbc.writeMem(0xd236, { 0xc7 });
        gbc.writeMem(0xfec7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xfec7, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xd236));
        EXPECT(0x37, gbc.readMem(0xfec7));
        EXPECT(0xd2, gbc.readMem(0xfec8));
        // C7 0236
        gbc.setState(0x9d3f, 0xddb2, 0xa090, 0xc210, 0x8a91, 0x3805, 0x1, 0x1);
        gbc.writeMem(0x9d3f, { 0xc7 });
        gbc.writeMem(0xddb0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xddb0, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x9d3f));
        EXPECT(0x40, gbc.readMem(0xddb0));
        EXPECT(0x9d, gbc.readMem(0xddb1));
        // C7 0237
        gbc.setState(0x617d, 0xb2a8, 0x1290, 0x8e8b, 0x7f6f, 0xcfc2, 0x0, 0x1);
        gbc.writeMem(0x617d, { 0xc7 });
        gbc.writeMem(0xb2a6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xb2a6, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xb2a6));
        EXPECT(0x61, gbc.readMem(0xb2a7));
        // C7 023A
        gbc.setState(0xc133, 0xac24, 0x2280, 0xa485, 0x1f8f, 0xb7eb, 0x0, 0x0);
        gbc.writeMem(0xac22, { 0x0, 0x0 });
        gbc.writeMem(0xc133, { 0xc7 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xac22, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xac22));
        EXPECT(0xc1, gbc.readMem(0xac23));
        EXPECT(0xc7, gbc.readMem(0xc133));
        // C7 023E
        gbc.setState(0x32a6, 0xf065, 0x6a90, 0x2442, 0x5e4f, 0xb0f4, 0x1, 0x1);
        gbc.writeMem(0x32a6, { 0xc7 });
        gbc.writeMem(0xf063, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xf063, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xf063));
        EXPECT(0x32, gbc.readMem(0xf064));
        // C7 0243
        gbc.setState(0x1613, 0xd60c, 0xbdb0, 0x48d6, 0x8305, 0xf155, 0x1, 0x0);
        gbc.writeMem(0x1613, { 0xc7 });
        gbc.writeMem(0xd60a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xd60a, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xd60a));
        EXPECT(0x16, gbc.readMem(0xd60b));
        // C7 0249
        gbc.setState(0x8515, 0xcbce, 0xd0, 0x1d1e, 0x6dd7, 0x2197, 0x0, 0x0);
        gbc.writeMem(0x8515, { 0xc7 });
        gbc.writeMem(0xcbcc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xcbcc, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x8515));
        EXPECT(0x16, gbc.readMem(0xcbcc));
        EXPECT(0x85, gbc.readMem(0xcbcd));
        // C7 024E
        gbc.setState(0xa8d8, 0xbbdc, 0x6750, 0xeba, 0xf597, 0xc084, 0x0, 0x0);
        gbc.writeMem(0xa8d8, { 0xc7 });
        gbc.writeMem(0xbbda, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xbbda, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xa8d8));
        EXPECT(0xd9, gbc.readMem(0xbbda));
        EXPECT(0xa8, gbc.readMem(0xbbdb));
        // C7 024F
        gbc.setState(0xd44d, 0xd6cf, 0x2990, 0x8357, 0x3ab, 0xa8ab, 0x0, 0x1);
        gbc.writeMem(0xd44d, { 0xc7 });
        gbc.writeMem(0xd6cd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xd6cd, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xd44d));
        EXPECT(0x4e, gbc.readMem(0xd6cd));
        EXPECT(0xd4, gbc.readMem(0xd6ce));
        // C7 0251
        gbc.setState(0x7a72, 0xfc58, 0x8690, 0x5101, 0x420b, 0x4cef, 0x1, 0x0);
        gbc.writeMem(0x7a72, { 0xc7 });
        gbc.writeMem(0xfc56, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xfc56, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xfc56));
        EXPECT(0x7a, gbc.readMem(0xfc57));
        // C7 0253
        gbc.setState(0x6b3d, 0xd57e, 0xeeb0, 0xa89d, 0x276d, 0x6d51, 0x1, 0x1);
        gbc.writeMem(0x6b3d, { 0xc7 });
        gbc.writeMem(0xd57c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd57c, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd57c));
        EXPECT(0x6b, gbc.readMem(0xd57d));
        // C7 0254
        gbc.setState(0x92cf, 0x82ac, 0xf720, 0xa3f, 0xa574, 0x9c2b, 0x0, 0x0);
        gbc.writeMem(0x82aa, { 0x0, 0x0 });
        gbc.writeMem(0x92cf, { 0xc7 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x82aa, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x82aa));
        EXPECT(0x92, gbc.readMem(0x82ab));
        EXPECT(0xc7, gbc.readMem(0x92cf));
        // C7 0256
        gbc.setState(0x8e64, 0xa0f4, 0x6d30, 0x499b, 0x67a0, 0xba8e, 0x0, 0x0);
        gbc.writeMem(0x8e64, { 0xc7 });
        gbc.writeMem(0xa0f2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xa0f2, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x8e64));
        EXPECT(0x65, gbc.readMem(0xa0f2));
        EXPECT(0x8e, gbc.readMem(0xa0f3));
        // C7 0257
        gbc.setState(0x451b, 0xe029, 0x2d90, 0xdad9, 0x4120, 0xa198, 0x0, 0x1);
        gbc.writeMem(0x451b, { 0xc7 });
        gbc.writeMem(0xe027, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xe027, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xe027));
        EXPECT(0x45, gbc.readMem(0xe028));
        // C7 0259
        gbc.setState(0x9ae9, 0x855d, 0xaea0, 0xb6ce, 0xb626, 0x32dc, 0x0, 0x0);
        gbc.writeMem(0x855b, { 0x0, 0x0 });
        gbc.writeMem(0x9ae9, { 0xc7 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x855b, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0x855b));
        EXPECT(0x9a, gbc.readMem(0x855c));
        EXPECT(0xc7, gbc.readMem(0x9ae9));
        // C7 025A
        gbc.setState(0xdabb, 0x9b7e, 0x69b0, 0x79ea, 0xeb0d, 0xfd10, 0x0, 0x1);
        gbc.writeMem(0x9b7c, { 0x0, 0x0 });
        gbc.writeMem(0xdabb, { 0xc7 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x9b7c, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9b7c));
        EXPECT(0xda, gbc.readMem(0x9b7d));
        EXPECT(0xc7, gbc.readMem(0xdabb));
        // C7 025B
        gbc.setState(0x6928, 0xf00f, 0x2b10, 0x71ef, 0x663a, 0xc87c, 0x0, 0x1);
        gbc.writeMem(0x6928, { 0xc7 });
        gbc.writeMem(0xf00d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf00d, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xf00d));
        EXPECT(0x69, gbc.readMem(0xf00e));
        // C7 025C
        gbc.setState(0xbc73, 0xf8ee, 0xa150, 0xe8e2, 0xecf4, 0xacfb, 0x1, 0x0);
        gbc.writeMem(0xbc73, { 0xc7 });
        gbc.writeMem(0xf8ec, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf8ec, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xbc73));
        EXPECT(0x74, gbc.readMem(0xf8ec));
        EXPECT(0xbc, gbc.readMem(0xf8ed));
        // C7 025E
        gbc.setState(0x89a4, 0x97cb, 0xde50, 0xd6, 0x47ec, 0xf334, 0x1, 0x1);
        gbc.writeMem(0x89a4, { 0xc7 });
        gbc.writeMem(0x97c9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x97c9, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x89a4));
        EXPECT(0xa5, gbc.readMem(0x97c9));
        EXPECT(0x89, gbc.readMem(0x97ca));
        // C7 0260
        gbc.setState(0xdaa6, 0x9e50, 0xcf00, 0x12e1, 0x37d0, 0xccce, 0x0, 0x1);
        gbc.writeMem(0x9e4e, { 0x0, 0x0 });
        gbc.writeMem(0xdaa6, { 0xc7 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9e4e, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9e4e));
        EXPECT(0xda, gbc.readMem(0x9e4f));
        EXPECT(0xc7, gbc.readMem(0xdaa6));
        // C7 0261
        gbc.setState(0x3663, 0xd986, 0x8510, 0xe1ed, 0xd9d, 0xe7df, 0x0, 0x1);
        gbc.writeMem(0x3663, { 0xc7 });
        gbc.writeMem(0xd984, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xd984, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd984));
        EXPECT(0x36, gbc.readMem(0xd985));
        // C7 0262
        gbc.setState(0x4e97, 0xf6fa, 0x8150, 0x6d1d, 0x38db, 0x3c52, 0x1, 0x0);
        gbc.writeMem(0x4e97, { 0xc7 });
        gbc.writeMem(0xf6f8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xf6f8, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xf6f8));
        EXPECT(0x4e, gbc.readMem(0xf6f9));
        // C7 0263
        gbc.setState(0x751c, 0xf6ad, 0x3750, 0xea5d, 0xd8ce, 0x3bc8, 0x0, 0x0);
        gbc.writeMem(0x751c, { 0xc7 });
        gbc.writeMem(0xf6ab, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xf6ab, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xf6ab));
        EXPECT(0x75, gbc.readMem(0xf6ac));
        // C7 0264
        gbc.setState(0x98d2, 0x9846, 0x1c10, 0x5c14, 0x6920, 0xfc0, 0x0, 0x1);
        gbc.writeMem(0x9844, { 0x0, 0x0 });
        gbc.writeMem(0x98d2, { 0xc7 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x9844, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0x9844));
        EXPECT(0x98, gbc.readMem(0x9845));
        EXPECT(0xc7, gbc.readMem(0x98d2));
        // C7 0265
        gbc.setState(0xced8, 0xdc65, 0x3510, 0x8fe5, 0x52ce, 0x52ca, 0x0, 0x0);
        gbc.writeMem(0xced8, { 0xc7 });
        gbc.writeMem(0xdc63, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xdc63, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xced8));
        EXPECT(0xd9, gbc.readMem(0xdc63));
        EXPECT(0xce, gbc.readMem(0xdc64));
        // C7 0268
        gbc.setState(0x95b4, 0xbd4b, 0x7620, 0x7d56, 0xbc0, 0x7694, 0x1, 0x0);
        gbc.writeMem(0x95b4, { 0xc7 });
        gbc.writeMem(0xbd49, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xbd49, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x95b4));
        EXPECT(0xb5, gbc.readMem(0xbd49));
        EXPECT(0x95, gbc.readMem(0xbd4a));
        // C7 0269
        gbc.setState(0xc8d2, 0xf734, 0x3c50, 0x618c, 0xc244, 0x3971, 0x0, 0x1);
        gbc.writeMem(0xc8d2, { 0xc7 });
        gbc.writeMem(0xf732, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf732, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xc8d2));
        EXPECT(0xd3, gbc.readMem(0xf732));
        EXPECT(0xc8, gbc.readMem(0xf733));
        // C7 026A
        gbc.setState(0xcf4e, 0x8cad, 0xf200, 0x268c, 0xcf99, 0x7f35, 0x1, 0x1);
        gbc.writeMem(0x8cab, { 0x0, 0x0 });
        gbc.writeMem(0xcf4e, { 0xc7 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x8cab, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0x8cab));
        EXPECT(0xcf, gbc.readMem(0x8cac));
        EXPECT(0xc7, gbc.readMem(0xcf4e));
        // C7 026C
        gbc.setState(0x3c1c, 0xbfc7, 0x73e0, 0xa205, 0x94e7, 0xc520, 0x1, 0x1);
        gbc.writeMem(0x3c1c, { 0xc7 });
        gbc.writeMem(0xbfc5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xbfc5, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xbfc5));
        EXPECT(0x3c, gbc.readMem(0xbfc6));
        // C7 026E
        gbc.setState(0xa08d, 0xb540, 0x8910, 0xd9d3, 0x4669, 0xda0e, 0x0, 0x1);
        gbc.writeMem(0xa08d, { 0xc7 });
        gbc.writeMem(0xb53e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xb53e, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xa08d));
        EXPECT(0x8e, gbc.readMem(0xb53e));
        EXPECT(0xa0, gbc.readMem(0xb53f));
        // C7 0270
        gbc.setState(0x3bda, 0xd4bf, 0x4fe0, 0xd1af, 0x2a4c, 0xd181, 0x1, 0x0);
        gbc.writeMem(0x3bda, { 0xc7 });
        gbc.writeMem(0xd4bd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xd4bd, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xd4bd));
        EXPECT(0x3b, gbc.readMem(0xd4be));
        // C7 0272
        gbc.setState(0xc0c9, 0x8847, 0xd960, 0x9971, 0xc5ed, 0xaf20, 0x0, 0x0);
        gbc.writeMem(0x8845, { 0x0, 0x0 });
        gbc.writeMem(0xc0c9, { 0xc7 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x8845, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0x8845));
        EXPECT(0xc0, gbc.readMem(0x8846));
        EXPECT(0xc7, gbc.readMem(0xc0c9));
        // C7 0273
        gbc.setState(0xe6e1, 0xc19d, 0xb190, 0x6c93, 0xf836, 0x9a2d, 0x0, 0x0);
        gbc.writeMem(0xc19b, { 0x0, 0x0 });
        gbc.writeMem(0xe6e1, { 0xc7 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xc19b, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xc19b));
        EXPECT(0xe6, gbc.readMem(0xc19c));
        EXPECT(0xc7, gbc.readMem(0xe6e1));
        // C7 027A
        gbc.setState(0x39e0, 0xff50, 0x7db0, 0x559f, 0x670d, 0xcce2, 0x1, 0x1);
        gbc.writeMem(0x39e0, { 0xc7 });
        gbc.writeMem(0xff4e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xff4e, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xff4e));
        EXPECT(0x39, gbc.readMem(0xff4f));
        // C7 027B
        gbc.setState(0x47b, 0xd834, 0x4970, 0x1e35, 0xfd38, 0xa109, 0x1, 0x1);
        gbc.writeMem(0x47b, { 0xc7 });
        gbc.writeMem(0xd832, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xd832, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xd832));
        EXPECT(0x4, gbc.readMem(0xd833));
        // C7 027C
        gbc.setState(0xba9f, 0x93ec, 0x2aa0, 0x4ea3, 0xd700, 0xff41, 0x0, 0x0);
        gbc.writeMem(0x93ea, { 0x0, 0x0 });
        gbc.writeMem(0xba9f, { 0xc7 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x93ea, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x93ea));
        EXPECT(0xba, gbc.readMem(0x93eb));
        EXPECT(0xc7, gbc.readMem(0xba9f));
        // C7 027F
        gbc.setState(0x12d8, 0xc21c, 0x9420, 0xfdc7, 0xb176, 0xf055, 0x1, 0x1);
        gbc.writeMem(0x12d8, { 0xc7 });
        gbc.writeMem(0xc21a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xc21a, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xc21a));
        EXPECT(0x12, gbc.readMem(0xc21b));
        // C7 0280
        gbc.setState(0x6dfb, 0xb59e, 0x6e80, 0xbcfd, 0xa6e6, 0x246, 0x0, 0x1);
        gbc.writeMem(0x6dfb, { 0xc7 });
        gbc.writeMem(0xb59c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xb59c, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xb59c));
        EXPECT(0x6d, gbc.readMem(0xb59d));
        // C7 0281
        gbc.setState(0x4a63, 0x900d, 0x95e0, 0x4ce6, 0x453c, 0x99e6, 0x1, 0x1);
        gbc.writeMem(0x4a63, { 0xc7 });
        gbc.writeMem(0x900b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x900b, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x900b));
        EXPECT(0x4a, gbc.readMem(0x900c));
        // C7 0283
        gbc.setState(0x1876, 0x993c, 0x4860, 0xe831, 0xe72e, 0x3105, 0x1, 0x0);
        gbc.writeMem(0x1876, { 0xc7 });
        gbc.writeMem(0x993a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x993a, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x993a));
        EXPECT(0x18, gbc.readMem(0x993b));
        // C7 0285
        gbc.setState(0xdcaf, 0xa7c9, 0xfc00, 0x4d27, 0x75e8, 0x73cf, 0x1, 0x1);
        gbc.writeMem(0xa7c7, { 0x0, 0x0 });
        gbc.writeMem(0xdcaf, { 0xc7 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xa7c7, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa7c7));
        EXPECT(0xdc, gbc.readMem(0xa7c8));
        EXPECT(0xc7, gbc.readMem(0xdcaf));
        // C7 0286
        gbc.setState(0x1e9b, 0xc198, 0xf710, 0x6659, 0x25f1, 0xbb12, 0x0, 0x0);
        gbc.writeMem(0x1e9b, { 0xc7 });
        gbc.writeMem(0xc196, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xc196, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xc196));
        EXPECT(0x1e, gbc.readMem(0xc197));
        // C7 0289
        gbc.setState(0xc702, 0xdf25, 0x2cb0, 0x58ae, 0x77a3, 0xb2ea, 0x0, 0x0);
        gbc.writeMem(0xc702, { 0xc7 });
        gbc.writeMem(0xdf23, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xdf23, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xc702));
        EXPECT(0x3, gbc.readMem(0xdf23));
        EXPECT(0xc7, gbc.readMem(0xdf24));
        // C7 028C
        gbc.setState(0x92b5, 0x97e9, 0x3640, 0xbf6d, 0xf315, 0xa82f, 0x0, 0x0);
        gbc.writeMem(0x92b5, { 0xc7 });
        gbc.writeMem(0x97e7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x97e7, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x92b5));
        EXPECT(0xb6, gbc.readMem(0x97e7));
        EXPECT(0x92, gbc.readMem(0x97e8));
        // C7 0290
        gbc.setState(0x320c, 0xb24e, 0xe230, 0x3a90, 0x204a, 0xd1bc, 0x1, 0x1);
        gbc.writeMem(0x320c, { 0xc7 });
        gbc.writeMem(0xb24c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xb24c, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xb24c));
        EXPECT(0x32, gbc.readMem(0xb24d));
        // C7 0293
        gbc.setState(0x166d, 0xb6a7, 0x4430, 0xb5ec, 0x784, 0xe961, 0x1, 0x1);
        gbc.writeMem(0x166d, { 0xc7 });
        gbc.writeMem(0xb6a5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xb6a5, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb6a5));
        EXPECT(0x16, gbc.readMem(0xb6a6));
        // C7 0295
        gbc.setState(0xb12, 0xde26, 0xc1b0, 0xa825, 0xfdfb, 0x2f1, 0x1, 0x0);
        gbc.writeMem(0xb12, { 0xc7 });
        gbc.writeMem(0xde24, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xde24, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xde24));
        EXPECT(0xb, gbc.readMem(0xde25));
        // C7 029B
        gbc.setState(0xbfed, 0xf3fd, 0xf750, 0x6e8c, 0x249e, 0x601b, 0x0, 0x1);
        gbc.writeMem(0xbfed, { 0xc7 });
        gbc.writeMem(0xf3fb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xf3fb, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xbfed));
        EXPECT(0xee, gbc.readMem(0xf3fb));
        EXPECT(0xbf, gbc.readMem(0xf3fc));
        // C7 029C
        gbc.setState(0x3c2, 0xb6e8, 0x4f70, 0x6e39, 0x5c79, 0xcd33, 0x1, 0x0);
        gbc.writeMem(0x3c2, { 0xc7 });
        gbc.writeMem(0xb6e6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xb6e6, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xb6e6));
        EXPECT(0x3, gbc.readMem(0xb6e7));
        // C7 029D
        gbc.setState(0x83cb, 0xe020, 0xe690, 0x54be, 0x99b4, 0x1ca1, 0x0, 0x0);
        gbc.writeMem(0x83cb, { 0xc7 });
        gbc.writeMem(0xe01e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe01e, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x83cb));
        EXPECT(0xcc, gbc.readMem(0xe01e));
        EXPECT(0x83, gbc.readMem(0xe01f));
        // C7 029E
        gbc.setState(0x1bfe, 0xa6cf, 0xf210, 0xb451, 0x5c7d, 0x314f, 0x0, 0x1);
        gbc.writeMem(0x1bfe, { 0xc7 });
        gbc.writeMem(0xa6cd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa6cd, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xa6cd));
        EXPECT(0x1b, gbc.readMem(0xa6ce));
        // C7 02A0
        gbc.setState(0x7521, 0xae25, 0x97f0, 0x8f6e, 0x6896, 0xe088, 0x0, 0x1);
        gbc.writeMem(0x7521, { 0xc7 });
        gbc.writeMem(0xae23, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xae23, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xae23));
        EXPECT(0x75, gbc.readMem(0xae24));
        // C7 02A1
        gbc.setState(0xb272, 0xc3fa, 0x6040, 0xb551, 0xe724, 0x5fba, 0x0, 0x0);
        gbc.writeMem(0xb272, { 0xc7 });
        gbc.writeMem(0xc3f8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xc3f8, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xb272));
        EXPECT(0x73, gbc.readMem(0xc3f8));
        EXPECT(0xb2, gbc.readMem(0xc3f9));
        // C7 02A2
        gbc.setState(0x6461, 0xf64c, 0xdd30, 0x23ab, 0xf2b4, 0xd877, 0x1, 0x1);
        gbc.writeMem(0x6461, { 0xc7 });
        gbc.writeMem(0xf64a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xf64a, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xf64a));
        EXPECT(0x64, gbc.readMem(0xf64b));
        // C7 02A3
        gbc.setState(0x3c8b, 0x8266, 0x8400, 0xa42f, 0x7e75, 0x67d1, 0x1, 0x1);
        gbc.writeMem(0x3c8b, { 0xc7 });
        gbc.writeMem(0x8264, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x8264, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x8264));
        EXPECT(0x3c, gbc.readMem(0x8265));
        // C7 02A7
        gbc.setState(0x358, 0xfdf8, 0x3ca0, 0x9f0b, 0xeb41, 0x32e4, 0x0, 0x1);
        gbc.writeMem(0x358, { 0xc7 });
        gbc.writeMem(0xfdf6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xfdf6, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xfdf6));
        EXPECT(0x3, gbc.readMem(0xfdf7));
        // C7 02A8
        gbc.setState(0x8a6, 0x8fe4, 0x22a0, 0x130e, 0xe33a, 0x3949, 0x0, 0x1);
        gbc.writeMem(0x8a6, { 0xc7 });
        gbc.writeMem(0x8fe2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x8fe2, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x8fe2));
        EXPECT(0x8, gbc.readMem(0x8fe3));
        // C7 02AB
        gbc.setState(0x7a44, 0xc5b2, 0xe250, 0x1fad, 0x4d87, 0x1c60, 0x1, 0x0);
        gbc.writeMem(0x7a44, { 0xc7 });
        gbc.writeMem(0xc5b0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xc5b0, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xc5b0));
        EXPECT(0x7a, gbc.readMem(0xc5b1));
        // C7 02AE
        gbc.setState(0x3275, 0x996c, 0xd160, 0xc439, 0x68e7, 0xc19d, 0x1, 0x1);
        gbc.writeMem(0x3275, { 0xc7 });
        gbc.writeMem(0x996a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x996a, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x996a));
        EXPECT(0x32, gbc.readMem(0x996b));
        // C7 02AF
        gbc.setState(0x368e, 0xaf05, 0xc430, 0x2c71, 0xeb89, 0xd134, 0x0, 0x1);
        gbc.writeMem(0x368e, { 0xc7 });
        gbc.writeMem(0xaf03, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xaf03, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xaf03));
        EXPECT(0x36, gbc.readMem(0xaf04));
        // C7 02B5
        gbc.setState(0x2102, 0xad7a, 0x1da0, 0xc43d, 0xdb17, 0x4698, 0x1, 0x0);
        gbc.writeMem(0x2102, { 0xc7 });
        gbc.writeMem(0xad78, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xad78, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xad78));
        EXPECT(0x21, gbc.readMem(0xad79));
        // C7 02B6
        gbc.setState(0x7aa6, 0xb263, 0x1ac0, 0xd476, 0xd04f, 0xbec1, 0x0, 0x1);
        gbc.writeMem(0x7aa6, { 0xc7 });
        gbc.writeMem(0xb261, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xb261, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xb261));
        EXPECT(0x7a, gbc.readMem(0xb262));
        // C7 02B8
        gbc.setState(0xb16b, 0xfbba, 0x170, 0x5aaf, 0x8d1e, 0xea1a, 0x1, 0x1);
        gbc.writeMem(0xb16b, { 0xc7 });
        gbc.writeMem(0xfbb8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xfbb8, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xb16b));
        EXPECT(0x6c, gbc.readMem(0xfbb8));
        EXPECT(0xb1, gbc.readMem(0xfbb9));
        // C7 02BD
        gbc.setState(0x490d, 0xbd5f, 0xc900, 0xc2d8, 0xf2, 0x8436, 0x1, 0x0);
        gbc.writeMem(0x490d, { 0xc7 });
        gbc.writeMem(0xbd5d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xbd5d, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xbd5d));
        EXPECT(0x49, gbc.readMem(0xbd5e));
        // C7 02C1
        gbc.setState(0x44b2, 0xeeb0, 0xcec0, 0xa2fb, 0x5315, 0x5dea, 0x1, 0x0);
        gbc.writeMem(0x44b2, { 0xc7 });
        gbc.writeMem(0xeeae, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xeeae, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xeeae));
        EXPECT(0x44, gbc.readMem(0xeeaf));
        // C7 02C2
        gbc.setState(0x91e7, 0x8189, 0x8900, 0x5fe6, 0xd918, 0x3e09, 0x0, 0x0);
        gbc.writeMem(0x8187, { 0x0, 0x0 });
        gbc.writeMem(0x91e7, { 0xc7 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8187, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0x8187));
        EXPECT(0x91, gbc.readMem(0x8188));
        EXPECT(0xc7, gbc.readMem(0x91e7));
        // C7 02C3
        gbc.setState(0x401b, 0xe298, 0x1400, 0xb686, 0x3853, 0xd7a3, 0x1, 0x1);
        gbc.writeMem(0x401b, { 0xc7 });
        gbc.writeMem(0xe296, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xe296, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xe296));
        EXPECT(0x40, gbc.readMem(0xe297));
        // C7 02C6
        gbc.setState(0x1d92, 0xb601, 0x65d0, 0x864e, 0xf282, 0x8fd0, 0x0, 0x1);
        gbc.writeMem(0x1d92, { 0xc7 });
        gbc.writeMem(0xb5ff, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xb5ff, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb5ff));
        EXPECT(0x1d, gbc.readMem(0xb600));
        // C7 02C7
        gbc.setState(0x4314, 0xd1bc, 0x1130, 0x7cfc, 0x7a12, 0xe649, 0x0, 0x1);
        gbc.writeMem(0x4314, { 0xc7 });
        gbc.writeMem(0xd1ba, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xd1ba, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xd1ba));
        EXPECT(0x43, gbc.readMem(0xd1bb));
        // C7 02C9
        gbc.setState(0x3ec4, 0x85a8, 0xd760, 0xe53, 0x715f, 0xc44b, 0x1, 0x1);
        gbc.writeMem(0x3ec4, { 0xc7 });
        gbc.writeMem(0x85a6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x85a6, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x85a6));
        EXPECT(0x3e, gbc.readMem(0x85a7));
        // C7 02CA
        gbc.setState(0x2228, 0xae43, 0x9f00, 0xed0b, 0x437f, 0x735b, 0x0, 0x0);
        gbc.writeMem(0x2228, { 0xc7 });
        gbc.writeMem(0xae41, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xae41, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xae41));
        EXPECT(0x22, gbc.readMem(0xae42));
        // C7 02CB
        gbc.setState(0xd0a7, 0xab88, 0x85e0, 0xf71a, 0x369b, 0x26ba, 0x0, 0x1);
        gbc.writeMem(0xab86, { 0x0, 0x0 });
        gbc.writeMem(0xd0a7, { 0xc7 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xab86, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0xab86));
        EXPECT(0xd0, gbc.readMem(0xab87));
        EXPECT(0xc7, gbc.readMem(0xd0a7));
        // C7 02CC
        gbc.setState(0x839f, 0xc3dc, 0xf140, 0x56, 0x4860, 0xf5de, 0x1, 0x0);
        gbc.writeMem(0x839f, { 0xc7 });
        gbc.writeMem(0xc3da, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc3da, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x839f));
        EXPECT(0xa0, gbc.readMem(0xc3da));
        EXPECT(0x83, gbc.readMem(0xc3db));
        // C7 02CD
        gbc.setState(0x3f68, 0x823a, 0xbc90, 0x7f57, 0x4eed, 0xbee, 0x0, 0x1);
        gbc.writeMem(0x3f68, { 0xc7 });
        gbc.writeMem(0x8238, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x8238, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8238));
        EXPECT(0x3f, gbc.readMem(0x8239));
        // C7 02D0
        gbc.setState(0xcbe1, 0xe8b3, 0xe440, 0xa484, 0xf8f6, 0x98d0, 0x1, 0x0);
        gbc.writeMem(0xcbe1, { 0xc7 });
        gbc.writeMem(0xe8b1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xe8b1, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xcbe1));
        EXPECT(0xe2, gbc.readMem(0xe8b1));
        EXPECT(0xcb, gbc.readMem(0xe8b2));
        // C7 02D1
        gbc.setState(0xa723, 0xd35b, 0x90f0, 0xa536, 0x2424, 0x790, 0x1, 0x0);
        gbc.writeMem(0xa723, { 0xc7 });
        gbc.writeMem(0xd359, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xd359, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xa723));
        EXPECT(0x24, gbc.readMem(0xd359));
        EXPECT(0xa7, gbc.readMem(0xd35a));
        // C7 02D3
        gbc.setState(0x12f, 0xc291, 0x33a0, 0x4c5, 0xfac1, 0xbf04, 0x0, 0x1);
        gbc.writeMem(0x12f, { 0xc7 });
        gbc.writeMem(0xc28f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc28f, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xc28f));
        EXPECT(0x1, gbc.readMem(0xc290));
        // C7 02D4
        gbc.setState(0xe247, 0xf64a, 0x7c80, 0x3ff7, 0x49c6, 0xa5b, 0x1, 0x0);
        gbc.writeMem(0xe247, { 0xc7 });
        gbc.writeMem(0xf648, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xf648, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xe247));
        EXPECT(0x48, gbc.readMem(0xf648));
        EXPECT(0xe2, gbc.readMem(0xf649));
        // C7 02D6
        gbc.setState(0x7eb2, 0xbfd4, 0x5fa0, 0x757c, 0xa5c2, 0x12fd, 0x0, 0x1);
        gbc.writeMem(0x7eb2, { 0xc7 });
        gbc.writeMem(0xbfd2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xbfd2, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xbfd2));
        EXPECT(0x7e, gbc.readMem(0xbfd3));
        // C7 02DA
        gbc.setState(0xa0da, 0xe824, 0xa930, 0x4435, 0xfe9e, 0xdc24, 0x0, 0x1);
        gbc.writeMem(0xa0da, { 0xc7 });
        gbc.writeMem(0xe822, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xe822, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xa0da));
        EXPECT(0xdb, gbc.readMem(0xe822));
        EXPECT(0xa0, gbc.readMem(0xe823));
        // C7 02DC
        gbc.setState(0xc8ac, 0x88ba, 0xbaa0, 0x55e3, 0x1f36, 0x4791, 0x0, 0x0);
        gbc.writeMem(0x88b8, { 0x0, 0x0 });
        gbc.writeMem(0xc8ac, { 0xc7 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x88b8, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0x88b8));
        EXPECT(0xc8, gbc.readMem(0x88b9));
        EXPECT(0xc7, gbc.readMem(0xc8ac));
        // C7 02DF
        gbc.setState(0x4e78, 0xa7b3, 0xab40, 0xebac, 0xe0b6, 0x67f3, 0x0, 0x0);
        gbc.writeMem(0x4e78, { 0xc7 });
        gbc.writeMem(0xa7b1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xa7b1, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xa7b1));
        EXPECT(0x4e, gbc.readMem(0xa7b2));
        // C7 02E0
        gbc.setState(0x8e7b, 0xb24f, 0xeaa0, 0x2fd5, 0x863e, 0xe6ee, 0x0, 0x1);
        gbc.writeMem(0x8e7b, { 0xc7 });
        gbc.writeMem(0xb24d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xb24d, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x8e7b));
        EXPECT(0x7c, gbc.readMem(0xb24d));
        EXPECT(0x8e, gbc.readMem(0xb24e));
        // C7 02E1
        gbc.setState(0x5199, 0xf4c9, 0x3040, 0xaa26, 0xed12, 0x58e8, 0x0, 0x0);
        gbc.writeMem(0x5199, { 0xc7 });
        gbc.writeMem(0xf4c7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xf4c7, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xf4c7));
        EXPECT(0x51, gbc.readMem(0xf4c8));
        // C7 02E3
        gbc.setState(0x946b, 0x98f1, 0x4650, 0x6fd1, 0x2065, 0x8af1, 0x1, 0x1);
        gbc.writeMem(0x946b, { 0xc7 });
        gbc.writeMem(0x98ef, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x98ef, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x946b));
        EXPECT(0x6c, gbc.readMem(0x98ef));
        EXPECT(0x94, gbc.readMem(0x98f0));
        // C7 02E7
        gbc.setState(0x9f11, 0xaa15, 0x55f0, 0xc78a, 0xfd1b, 0x3ab7, 0x1, 0x0);
        gbc.writeMem(0x9f11, { 0xc7 });
        gbc.writeMem(0xaa13, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xaa13, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x9f11));
        EXPECT(0x12, gbc.readMem(0xaa13));
        EXPECT(0x9f, gbc.readMem(0xaa14));
        // C7 02E8
        gbc.setState(0xd9a5, 0xc164, 0x6370, 0xa2d4, 0x756f, 0xd2f6, 0x1, 0x0);
        gbc.writeMem(0xc162, { 0x0, 0x0 });
        gbc.writeMem(0xd9a5, { 0xc7 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xc162, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xc162));
        EXPECT(0xd9, gbc.readMem(0xc163));
        EXPECT(0xc7, gbc.readMem(0xd9a5));
        // C7 02EB
        gbc.setState(0x7531, 0xf403, 0xb4c0, 0x2f96, 0x5db0, 0xdef8, 0x1, 0x0);
        gbc.writeMem(0x7531, { 0xc7 });
        gbc.writeMem(0xf401, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xf401, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xf401));
        EXPECT(0x75, gbc.readMem(0xf402));
        // C7 02EC
        gbc.setState(0x36e8, 0xeaf1, 0x38a0, 0x650c, 0xcc7a, 0x886b, 0x1, 0x0);
        gbc.writeMem(0x36e8, { 0xc7 });
        gbc.writeMem(0xeaef, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xeaef, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xeaef));
        EXPECT(0x36, gbc.readMem(0xeaf0));
        // C7 02EF
        gbc.setState(0x9b43, 0x80dc, 0x70d0, 0xe6dd, 0xfa0c, 0x3a7b, 0x1, 0x0);
        gbc.writeMem(0x80da, { 0x0, 0x0 });
        gbc.writeMem(0x9b43, { 0xc7 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x80da, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x80da));
        EXPECT(0x9b, gbc.readMem(0x80db));
        EXPECT(0xc7, gbc.readMem(0x9b43));
        // C7 02F1
        gbc.setState(0x5ee7, 0xd4f3, 0xa680, 0x710e, 0xde5f, 0x22f4, 0x0, 0x0);
        gbc.writeMem(0x5ee7, { 0xc7 });
        gbc.writeMem(0xd4f1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd4f1, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xd4f1));
        EXPECT(0x5e, gbc.readMem(0xd4f2));
        // C7 02F2
        gbc.setState(0x6e9d, 0xdb5d, 0x5940, 0xc0fa, 0xf8b4, 0xbc10, 0x1, 0x0);
        gbc.writeMem(0x6e9d, { 0xc7 });
        gbc.writeMem(0xdb5b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xdb5b, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xdb5b));
        EXPECT(0x6e, gbc.readMem(0xdb5c));
        // C7 02F3
        gbc.setState(0xd880, 0xa58d, 0xfdb0, 0x64f, 0x4333, 0xf36c, 0x0, 0x0);
        gbc.writeMem(0xa58b, { 0x0, 0x0 });
        gbc.writeMem(0xd880, { 0xc7 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xa58b, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xa58b));
        EXPECT(0xd8, gbc.readMem(0xa58c));
        EXPECT(0xc7, gbc.readMem(0xd880));
        // C7 02F7
        gbc.setState(0xa4ea, 0xa2f8, 0x9170, 0x9281, 0x982c, 0xbe6b, 0x1, 0x1);
        gbc.writeMem(0xa2f6, { 0x0, 0x0 });
        gbc.writeMem(0xa4ea, { 0xc7 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xa2f6, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xa2f6));
        EXPECT(0xa4, gbc.readMem(0xa2f7));
        EXPECT(0xc7, gbc.readMem(0xa4ea));
        // C7 02F8
        gbc.setState(0x5de2, 0xb629, 0x62a0, 0x39de, 0xbd88, 0xf47f, 0x1, 0x0);
        gbc.writeMem(0x5de2, { 0xc7 });
        gbc.writeMem(0xb627, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xb627, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xb627));
        EXPECT(0x5d, gbc.readMem(0xb628));
        // C7 02FC
        gbc.setState(0x2dbc, 0xd467, 0x49a0, 0xb122, 0xe947, 0x798, 0x0, 0x1);
        gbc.writeMem(0x2dbc, { 0xc7 });
        gbc.writeMem(0xd465, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xd465, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xd465));
        EXPECT(0x2d, gbc.readMem(0xd466));
        // C7 02FD
        gbc.setState(0xd5a5, 0xfa5c, 0x1870, 0xe65e, 0xa463, 0xf474, 0x1, 0x0);
        gbc.writeMem(0xd5a5, { 0xc7 });
        gbc.writeMem(0xfa5a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xfa5a, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xd5a5));
        EXPECT(0xa6, gbc.readMem(0xfa5a));
        EXPECT(0xd5, gbc.readMem(0xfa5b));
        // C7 02FE
        gbc.setState(0xad34, 0xa267, 0xfc80, 0xca4b, 0x82d4, 0x10ee, 0x0, 0x1);
        gbc.writeMem(0xa265, { 0x0, 0x0 });
        gbc.writeMem(0xad34, { 0xc7 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xa265, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xa265));
        EXPECT(0xad, gbc.readMem(0xa266));
        EXPECT(0xc7, gbc.readMem(0xad34));
        // C7 0301
        gbc.setState(0x365c, 0xcd9e, 0x5d40, 0x1209, 0xd6cf, 0x81f1, 0x0, 0x1);
        gbc.writeMem(0x365c, { 0xc7 });
        gbc.writeMem(0xcd9c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xcd9c, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xcd9c));
        EXPECT(0x36, gbc.readMem(0xcd9d));
        // C7 0308
        gbc.setState(0xa4c, 0x886e, 0xa410, 0x1178, 0xa19f, 0xbd7e, 0x1, 0x1);
        gbc.writeMem(0xa4c, { 0xc7 });
        gbc.writeMem(0x886c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x886c, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x886c));
        EXPECT(0xa, gbc.readMem(0x886d));
        // C7 0309
        gbc.setState(0x5d75, 0xb42c, 0x59a0, 0x7eaa, 0x60c3, 0x3d32, 0x1, 0x1);
        gbc.writeMem(0x5d75, { 0xc7 });
        gbc.writeMem(0xb42a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xb42a, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb42a));
        EXPECT(0x5d, gbc.readMem(0xb42b));
        // C7 0310
        gbc.setState(0xe27, 0xecd5, 0x2830, 0x1fcd, 0x4f4, 0x3ebe, 0x0, 0x0);
        gbc.writeMem(0xe27, { 0xc7 });
        gbc.writeMem(0xecd3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xecd3, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xecd3));
        EXPECT(0xe, gbc.readMem(0xecd4));
        // C7 0313
        gbc.setState(0x7138, 0xd4ba, 0xc720, 0xba7f, 0x59ef, 0x5db9, 0x1, 0x1);
        gbc.writeMem(0x7138, { 0xc7 });
        gbc.writeMem(0xd4b8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xd4b8, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xd4b8));
        EXPECT(0x71, gbc.readMem(0xd4b9));
        // C7 0315
        gbc.setState(0x946f, 0xc56d, 0x8be0, 0x82ef, 0x77ad, 0x87, 0x0, 0x0);
        gbc.writeMem(0x946f, { 0xc7 });
        gbc.writeMem(0xc56b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xc56b, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x946f));
        EXPECT(0x70, gbc.readMem(0xc56b));
        EXPECT(0x94, gbc.readMem(0xc56c));
        // C7 0316
        gbc.setState(0xe5aa, 0xc0ea, 0xfe40, 0xc775, 0xb277, 0xa7fb, 0x0, 0x0);
        gbc.writeMem(0xc0e8, { 0x0, 0x0 });
        gbc.writeMem(0xe5aa, { 0xc7 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xc0e8, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xc0e8));
        EXPECT(0xe5, gbc.readMem(0xc0e9));
        EXPECT(0xc7, gbc.readMem(0xe5aa));
        // C7 0319
        gbc.setState(0x1444, 0xdd12, 0x4310, 0x453c, 0x5fe6, 0x9a34, 0x1, 0x0);
        gbc.writeMem(0x1444, { 0xc7 });
        gbc.writeMem(0xdd10, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xdd10, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xdd10));
        EXPECT(0x14, gbc.readMem(0xdd11));
        // C7 031A
        gbc.setState(0x21b9, 0xec68, 0x1420, 0xefb3, 0x72ce, 0xa615, 0x0, 0x1);
        gbc.writeMem(0x21b9, { 0xc7 });
        gbc.writeMem(0xec66, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xec66, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xec66));
        EXPECT(0x21, gbc.readMem(0xec67));
        // C7 031D
        gbc.setState(0x1c6a, 0xbba0, 0x2680, 0xfa9c, 0x1c63, 0xcf17, 0x0, 0x0);
        gbc.writeMem(0x1c6a, { 0xc7 });
        gbc.writeMem(0xbb9e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xbb9e, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xbb9e));
        EXPECT(0x1c, gbc.readMem(0xbb9f));
        // C7 031E
        gbc.setState(0x9950, 0xd82c, 0x9dd0, 0x1644, 0x6946, 0x44c5, 0x0, 0x0);
        gbc.writeMem(0x9950, { 0xc7 });
        gbc.writeMem(0xd82a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xd82a, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x9950));
        EXPECT(0x51, gbc.readMem(0xd82a));
        EXPECT(0x99, gbc.readMem(0xd82b));
        // C7 031F
        gbc.setState(0x1933, 0xd3b4, 0xb700, 0x2664, 0x2ddb, 0xab97, 0x1, 0x0);
        gbc.writeMem(0x1933, { 0xc7 });
        gbc.writeMem(0xd3b2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xd3b2, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xd3b2));
        EXPECT(0x19, gbc.readMem(0xd3b3));
        // C7 0320
        gbc.setState(0xd2a3, 0xafda, 0xe890, 0x85be, 0xf712, 0x39a, 0x0, 0x1);
        gbc.writeMem(0xafd8, { 0x0, 0x0 });
        gbc.writeMem(0xd2a3, { 0xc7 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xafd8, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xafd8));
        EXPECT(0xd2, gbc.readMem(0xafd9));
        EXPECT(0xc7, gbc.readMem(0xd2a3));
        // C7 0321
        gbc.setState(0x67ab, 0xc52e, 0x940, 0xb6d0, 0x69ec, 0xac76, 0x0, 0x0);
        gbc.writeMem(0x67ab, { 0xc7 });
        gbc.writeMem(0xc52c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xc52c, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xc52c));
        EXPECT(0x67, gbc.readMem(0xc52d));
        // C7 0322
        gbc.setState(0x2bff, 0xf0f5, 0xd980, 0x7127, 0xeda0, 0xbeb7, 0x1, 0x0);
        gbc.writeMem(0x2bff, { 0xc7 });
        gbc.writeMem(0xf0f3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xf0f3, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xf0f3));
        EXPECT(0x2c, gbc.readMem(0xf0f4));
        // C7 0323
        gbc.setState(0xbd4f, 0xbd17, 0xfb00, 0x8abd, 0x15b6, 0x56da, 0x0, 0x1);
        gbc.writeMem(0xbd15, { 0x0, 0x0 });
        gbc.writeMem(0xbd4f, { 0xc7 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xbd15, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xbd15));
        EXPECT(0xbd, gbc.readMem(0xbd16));
        EXPECT(0xc7, gbc.readMem(0xbd4f));
        // C7 0329
        gbc.setState(0xd612, 0xfcdd, 0x4ef0, 0xf55d, 0xc013, 0x3eca, 0x0, 0x1);
        gbc.writeMem(0xd612, { 0xc7 });
        gbc.writeMem(0xfcdb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xfcdb, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xd612));
        EXPECT(0x13, gbc.readMem(0xfcdb));
        EXPECT(0xd6, gbc.readMem(0xfcdc));
        // C7 032A
        gbc.setState(0x58fe, 0xdee8, 0x50e0, 0x58d5, 0x3e18, 0xd9d7, 0x1, 0x0);
        gbc.writeMem(0x58fe, { 0xc7 });
        gbc.writeMem(0xdee6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xdee6, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xdee6));
        EXPECT(0x58, gbc.readMem(0xdee7));
        // C7 032E
        gbc.setState(0x9766, 0xf4a3, 0x1dc0, 0xd573, 0xf27f, 0x8027, 0x0, 0x0);
        gbc.writeMem(0x9766, { 0xc7 });
        gbc.writeMem(0xf4a1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xf4a1, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x9766));
        EXPECT(0x67, gbc.readMem(0xf4a1));
        EXPECT(0x97, gbc.readMem(0xf4a2));
        // C7 0330
        gbc.setState(0x7cae, 0xb323, 0x92a0, 0x762f, 0x9e10, 0xc63d, 0x1, 0x0);
        gbc.writeMem(0x7cae, { 0xc7 });
        gbc.writeMem(0xb321, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xb321, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xb321));
        EXPECT(0x7c, gbc.readMem(0xb322));
        // C7 0333
        gbc.setState(0x1d24, 0xba03, 0x6650, 0x5c1d, 0x25da, 0x3d13, 0x0, 0x1);
        gbc.writeMem(0x1d24, { 0xc7 });
        gbc.writeMem(0xba01, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xba01, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xba01));
        EXPECT(0x1d, gbc.readMem(0xba02));
        // C7 0334
        gbc.setState(0x9aea, 0x8a60, 0x1850, 0x6f5, 0x3a52, 0x361c, 0x0, 0x1);
        gbc.writeMem(0x8a5e, { 0x0, 0x0 });
        gbc.writeMem(0x9aea, { 0xc7 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x8a5e, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0x8a5e));
        EXPECT(0x9a, gbc.readMem(0x8a5f));
        EXPECT(0xc7, gbc.readMem(0x9aea));
        // C7 0335
        gbc.setState(0x8c78, 0xcdc6, 0xf840, 0x6730, 0x5c75, 0xc131, 0x0, 0x1);
        gbc.writeMem(0x8c78, { 0xc7 });
        gbc.writeMem(0xcdc4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xcdc4, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x8c78));
        EXPECT(0x79, gbc.readMem(0xcdc4));
        EXPECT(0x8c, gbc.readMem(0xcdc5));
        // C7 0336
        gbc.setState(0xabc1, 0xb7e2, 0x18e0, 0x2711, 0x3e5d, 0x2b28, 0x0, 0x1);
        gbc.writeMem(0xabc1, { 0xc7 });
        gbc.writeMem(0xb7e0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xb7e0, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xabc1));
        EXPECT(0xc2, gbc.readMem(0xb7e0));
        EXPECT(0xab, gbc.readMem(0xb7e1));
        // C7 0337
        gbc.setState(0x5a29, 0xd837, 0x10, 0xbef8, 0x6cc0, 0x8075, 0x0, 0x1);
        gbc.writeMem(0x5a29, { 0xc7 });
        gbc.writeMem(0xd835, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xd835, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xd835));
        EXPECT(0x5a, gbc.readMem(0xd836));
        // C7 033B
        gbc.setState(0x50, 0xa851, 0xe9e0, 0x7b82, 0x5d7e, 0x956f, 0x0, 0x1);
        gbc.writeMem(0x50, { 0xc7 });
        gbc.writeMem(0xa84f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa84f, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xa84f));
        EXPECT(0x0, gbc.readMem(0xa850));
        // C7 033C
        gbc.setState(0x882d, 0xcf6a, 0x1f90, 0xb081, 0x597c, 0xa9c7, 0x0, 0x0);
        gbc.writeMem(0x882d, { 0xc7 });
        gbc.writeMem(0xcf68, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xcf68, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x882d));
        EXPECT(0x2e, gbc.readMem(0xcf68));
        EXPECT(0x88, gbc.readMem(0xcf69));
        // C7 033E
        gbc.setState(0x2828, 0xc914, 0x7000, 0xd914, 0x72df, 0x2760, 0x0, 0x0);
        gbc.writeMem(0x2828, { 0xc7 });
        gbc.writeMem(0xc912, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xc912, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc912));
        EXPECT(0x28, gbc.readMem(0xc913));
        // C7 033F
        gbc.setState(0xb6bf, 0x9f99, 0x8380, 0x7ec1, 0x8408, 0x5974, 0x0, 0x1);
        gbc.writeMem(0x9f97, { 0x0, 0x0 });
        gbc.writeMem(0xb6bf, { 0xc7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x9f97, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0x9f97));
        EXPECT(0xb6, gbc.readMem(0x9f98));
        EXPECT(0xc7, gbc.readMem(0xb6bf));
        // C7 0340
        gbc.setState(0x5302, 0xee50, 0x6400, 0x326e, 0xbcd9, 0xd1b1, 0x1, 0x1);
        gbc.writeMem(0x5302, { 0xc7 });
        gbc.writeMem(0xee4e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xee4e, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xee4e));
        EXPECT(0x53, gbc.readMem(0xee4f));
        // C7 0341
        gbc.setState(0xee17, 0xdbeb, 0xe5f0, 0xe6d1, 0x6993, 0x1518, 0x0, 0x0);
        gbc.writeMem(0xdbe9, { 0x0, 0x0 });
        gbc.writeMem(0xee17, { 0xc7 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xdbe9, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xdbe9));
        EXPECT(0xee, gbc.readMem(0xdbea));
        EXPECT(0xc7, gbc.readMem(0xee17));
        // C7 0343
        gbc.setState(0xc735, 0xad0a, 0x9df0, 0xc7a3, 0x1c40, 0xd0a3, 0x1, 0x1);
        gbc.writeMem(0xad08, { 0x0, 0x0 });
        gbc.writeMem(0xc735, { 0xc7 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xad08, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xad08));
        EXPECT(0xc7, gbc.readMem(0xad09));
        EXPECT(0xc7, gbc.readMem(0xc735));
        // C7 0344
        gbc.setState(0x2d30, 0xd1e7, 0xa7f0, 0xc838, 0x28eb, 0x156e, 0x0, 0x1);
        gbc.writeMem(0x2d30, { 0xc7 });
        gbc.writeMem(0xd1e5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xd1e5, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd1e5));
        EXPECT(0x2d, gbc.readMem(0xd1e6));
        // C7 0346
        gbc.setState(0x6f5, 0xf49e, 0x2350, 0xbf71, 0x147d, 0x8ae7, 0x0, 0x0);
        gbc.writeMem(0x6f5, { 0xc7 });
        gbc.writeMem(0xf49c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xf49c, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xf49c));
        EXPECT(0x6, gbc.readMem(0xf49d));
        // C7 034C
        gbc.setState(0x3227, 0xca35, 0x8b50, 0xfee1, 0x8b15, 0x843b, 0x0, 0x0);
        gbc.writeMem(0x3227, { 0xc7 });
        gbc.writeMem(0xca33, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xca33, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xca33));
        EXPECT(0x32, gbc.readMem(0xca34));
        // C7 034E
        gbc.setState(0xa0eb, 0xed55, 0xbe0, 0xdcdc, 0xe4b8, 0x8d51, 0x0, 0x0);
        gbc.writeMem(0xa0eb, { 0xc7 });
        gbc.writeMem(0xed53, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xed53, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xa0eb));
        EXPECT(0xec, gbc.readMem(0xed53));
        EXPECT(0xa0, gbc.readMem(0xed54));
        // C7 034F
        gbc.setState(0x7389, 0xd41f, 0xcdc0, 0x9328, 0xf407, 0x4a2e, 0x1, 0x0);
        gbc.writeMem(0x7389, { 0xc7 });
        gbc.writeMem(0xd41d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xd41d, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xd41d));
        EXPECT(0x73, gbc.readMem(0xd41e));
        // C7 0351
        gbc.setState(0x67b6, 0xeb46, 0x54f0, 0xde61, 0xb908, 0x5ab9, 0x0, 0x0);
        gbc.writeMem(0x67b6, { 0xc7 });
        gbc.writeMem(0xeb44, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xeb44, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xeb44));
        EXPECT(0x67, gbc.readMem(0xeb45));
        // C7 0352
        gbc.setState(0xf20, 0xfaaf, 0xc40, 0x307f, 0xa7ca, 0xeb1f, 0x1, 0x0);
        gbc.writeMem(0xf20, { 0xc7 });
        gbc.writeMem(0xfaad, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xfaad, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xfaad));
        EXPECT(0xf, gbc.readMem(0xfaae));
        // C7 0353
        gbc.setState(0xa4b4, 0xd598, 0x7540, 0xab29, 0xd060, 0xb1a8, 0x0, 0x1);
        gbc.writeMem(0xa4b4, { 0xc7 });
        gbc.writeMem(0xd596, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xd596, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xa4b4));
        EXPECT(0xb5, gbc.readMem(0xd596));
        EXPECT(0xa4, gbc.readMem(0xd597));
        // C7 0354
        gbc.setState(0x980, 0x82ea, 0xa710, 0x8304, 0x36, 0x50cf, 0x0, 0x1);
        gbc.writeMem(0x980, { 0xc7 });
        gbc.writeMem(0x82e8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x82e8, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x82e8));
        EXPECT(0x9, gbc.readMem(0x82e9));
        // C7 0355
        gbc.setState(0x8eba, 0xc43c, 0xf980, 0xb5ee, 0xe787, 0x2f38, 0x0, 0x1);
        gbc.writeMem(0x8eba, { 0xc7 });
        gbc.writeMem(0xc43a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xc43a, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x8eba));
        EXPECT(0xbb, gbc.readMem(0xc43a));
        EXPECT(0x8e, gbc.readMem(0xc43b));
        // C7 0359
        gbc.setState(0x4800, 0x9a5b, 0xf470, 0x15d2, 0xb1a9, 0xa1, 0x1, 0x1);
        gbc.writeMem(0x4800, { 0xc7 });
        gbc.writeMem(0x9a59, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9a59, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0x9a59));
        EXPECT(0x48, gbc.readMem(0x9a5a));
        // C7 035A
        gbc.setState(0x80d7, 0xef5a, 0x1840, 0x51c, 0xc320, 0xbe2b, 0x0, 0x0);
        gbc.writeMem(0x80d7, { 0xc7 });
        gbc.writeMem(0xef58, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xef58, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x80d7));
        EXPECT(0xd8, gbc.readMem(0xef58));
        EXPECT(0x80, gbc.readMem(0xef59));
        // C7 035E
        gbc.setState(0x19a9, 0xdaa2, 0xcf10, 0x97fd, 0x4b16, 0xf3c5, 0x0, 0x0);
        gbc.writeMem(0x19a9, { 0xc7 });
        gbc.writeMem(0xdaa0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xdaa0, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xdaa0));
        EXPECT(0x19, gbc.readMem(0xdaa1));
        // C7 0363
        gbc.setState(0xcb8a, 0xbb21, 0xb710, 0x4c4f, 0xf865, 0xfd03, 0x0, 0x1);
        gbc.writeMem(0xbb1f, { 0x0, 0x0 });
        gbc.writeMem(0xcb8a, { 0xc7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xbb1f, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xbb1f));
        EXPECT(0xcb, gbc.readMem(0xbb20));
        EXPECT(0xc7, gbc.readMem(0xcb8a));
        // C7 0364
        gbc.setState(0x5400, 0x93ba, 0xd130, 0x7492, 0x773f, 0x29b7, 0x1, 0x1);
        gbc.writeMem(0x5400, { 0xc7 });
        gbc.writeMem(0x93b8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x93b8, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0x93b8));
        EXPECT(0x54, gbc.readMem(0x93b9));
        // C7 0366
        gbc.setState(0xcb3, 0xc476, 0x30b0, 0xc9a4, 0xcc09, 0x328f, 0x0, 0x1);
        gbc.writeMem(0xcb3, { 0xc7 });
        gbc.writeMem(0xc474, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xc474, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xc474));
        EXPECT(0xc, gbc.readMem(0xc475));
        // C7 0367
        gbc.setState(0xc333, 0xb0e5, 0x4d50, 0x58e2, 0x5261, 0xfaa1, 0x0, 0x0);
        gbc.writeMem(0xb0e3, { 0x0, 0x0 });
        gbc.writeMem(0xc333, { 0xc7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xb0e3, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xb0e3));
        EXPECT(0xc3, gbc.readMem(0xb0e4));
        EXPECT(0xc7, gbc.readMem(0xc333));
        // C7 0368
        gbc.setState(0x598a, 0xe611, 0x8270, 0xad9e, 0x8ac, 0x8ffe, 0x1, 0x1);
        gbc.writeMem(0x598a, { 0xc7 });
        gbc.writeMem(0xe60f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe60f, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xe60f));
        EXPECT(0x59, gbc.readMem(0xe610));
        // C7 036B
        gbc.setState(0x6fe3, 0xe2c6, 0x86f0, 0x8eb5, 0x4e88, 0xfd5b, 0x1, 0x0);
        gbc.writeMem(0x6fe3, { 0xc7 });
        gbc.writeMem(0xe2c4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xe2c4, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0xe2c4));
        EXPECT(0x6f, gbc.readMem(0xe2c5));
        // C7 036C
        gbc.setState(0xdd41, 0xdb7d, 0xae40, 0xaedc, 0xacd1, 0x3834, 0x0, 0x0);
        gbc.writeMem(0xdb7b, { 0x0, 0x0 });
        gbc.writeMem(0xdd41, { 0xc7 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xdb7b, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xdb7b));
        EXPECT(0xdd, gbc.readMem(0xdb7c));
        EXPECT(0xc7, gbc.readMem(0xdd41));
        // C7 036E
        gbc.setState(0x4a9d, 0xa5d5, 0x1470, 0x4b28, 0x400a, 0xf8e2, 0x1, 0x1);
        gbc.writeMem(0x4a9d, { 0xc7 });
        gbc.writeMem(0xa5d3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xa5d3, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xa5d3));
        EXPECT(0x4a, gbc.readMem(0xa5d4));
        // C7 0373
        gbc.setState(0xd1c0, 0x9fbd, 0xc8a0, 0x40e6, 0x3589, 0x2979, 0x0, 0x0);
        gbc.writeMem(0x9fbb, { 0x0, 0x0 });
        gbc.writeMem(0xd1c0, { 0xc7 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x9fbb, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x9fbb));
        EXPECT(0xd1, gbc.readMem(0x9fbc));
        EXPECT(0xc7, gbc.readMem(0xd1c0));
        // C7 0375
        gbc.setState(0xcf42, 0xf7d4, 0x9850, 0x81c, 0x53fa, 0x2a4c, 0x0, 0x0);
        gbc.writeMem(0xcf42, { 0xc7 });
        gbc.writeMem(0xf7d2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xf7d2, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xcf42));
        EXPECT(0x43, gbc.readMem(0xf7d2));
        EXPECT(0xcf, gbc.readMem(0xf7d3));
        // C7 037A
        gbc.setState(0xb9c0, 0xf192, 0xf2a0, 0x1286, 0xeb86, 0x141e, 0x0, 0x1);
        gbc.writeMem(0xb9c0, { 0xc7 });
        gbc.writeMem(0xf190, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf190, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xb9c0));
        EXPECT(0xc1, gbc.readMem(0xf190));
        EXPECT(0xb9, gbc.readMem(0xf191));
        // C7 037E
        gbc.setState(0x6427, 0xfe88, 0xd1b0, 0x4865, 0xbf1d, 0xce5f, 0x1, 0x0);
        gbc.writeMem(0x6427, { 0xc7 });
        gbc.writeMem(0xfe86, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xfe86, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xfe86));
        EXPECT(0x64, gbc.readMem(0xfe87));
        // C7 0380
        gbc.setState(0x3b7a, 0xcaf5, 0x8250, 0x508d, 0x29a4, 0x2464, 0x1, 0x1);
        gbc.writeMem(0x3b7a, { 0xc7 });
        gbc.writeMem(0xcaf3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xcaf3, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xcaf3));
        EXPECT(0x3b, gbc.readMem(0xcaf4));
        // C7 0381
        gbc.setState(0xa2b, 0xab6e, 0x5ad0, 0x93c4, 0xf8d9, 0xf68a, 0x1, 0x1);
        gbc.writeMem(0xa2b, { 0xc7 });
        gbc.writeMem(0xab6c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xab6c, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xab6c));
        EXPECT(0xa, gbc.readMem(0xab6d));
        // C7 0383
        gbc.setState(0x4b76, 0x83ad, 0xd640, 0xec6, 0x2c8d, 0x7b56, 0x1, 0x0);
        gbc.writeMem(0x4b76, { 0xc7 });
        gbc.writeMem(0x83ab, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x83ab, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x83ab));
        EXPECT(0x4b, gbc.readMem(0x83ac));
        // C7 0384
        gbc.setState(0x9d8d, 0xb889, 0x2d20, 0x4252, 0x3521, 0x1916, 0x0, 0x0);
        gbc.writeMem(0x9d8d, { 0xc7 });
        gbc.writeMem(0xb887, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xb887, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x9d8d));
        EXPECT(0x8e, gbc.readMem(0xb887));
        EXPECT(0x9d, gbc.readMem(0xb888));
        // C7 0385
        gbc.setState(0x6952, 0xce50, 0x6eb0, 0xa22d, 0xfd59, 0xf6ec, 0x1, 0x1);
        gbc.writeMem(0x6952, { 0xc7 });
        gbc.writeMem(0xce4e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xce4e, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xce4e));
        EXPECT(0x69, gbc.readMem(0xce4f));
        // C7 0386
        gbc.setState(0x99f7, 0x9b14, 0x60e0, 0x8918, 0x83aa, 0x48de, 0x1, 0x0);
        gbc.writeMem(0x99f7, { 0xc7 });
        gbc.writeMem(0x9b12, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x9b12, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x99f7));
        EXPECT(0xf8, gbc.readMem(0x9b12));
        EXPECT(0x99, gbc.readMem(0x9b13));
        // C7 0387
        gbc.setState(0x5c3a, 0xaf6e, 0xd9c0, 0xd973, 0xe343, 0x159b, 0x0, 0x1);
        gbc.writeMem(0x5c3a, { 0xc7 });
        gbc.writeMem(0xaf6c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xaf6c, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xaf6c));
        EXPECT(0x5c, gbc.readMem(0xaf6d));
        // C7 038A
        gbc.setState(0x97ae, 0x842e, 0x87b0, 0x11f5, 0x771f, 0xbd3b, 0x0, 0x1);
        gbc.writeMem(0x842c, { 0x0, 0x0 });
        gbc.writeMem(0x97ae, { 0xc7 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x842c, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0x842c));
        EXPECT(0x97, gbc.readMem(0x842d));
        EXPECT(0xc7, gbc.readMem(0x97ae));
        // C7 038B
        gbc.setState(0x54e, 0xf673, 0x4fb0, 0x4342, 0x85e0, 0x428, 0x0, 0x0);
        gbc.writeMem(0x54e, { 0xc7 });
        gbc.writeMem(0xf671, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf671, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xf671));
        EXPECT(0x5, gbc.readMem(0xf672));
        // C7 038E
        gbc.setState(0xd762, 0x8847, 0x6e20, 0xeca, 0x188d, 0xe911, 0x0, 0x0);
        gbc.writeMem(0x8845, { 0x0, 0x0 });
        gbc.writeMem(0xd762, { 0xc7 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x8845, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0x8845));
        EXPECT(0xd7, gbc.readMem(0x8846));
        EXPECT(0xc7, gbc.readMem(0xd762));
        // C7 039A
        gbc.setState(0xb654, 0xfb0b, 0xad10, 0x96bd, 0x7830, 0x8e7d, 0x1, 0x0);
        gbc.writeMem(0xb654, { 0xc7 });
        gbc.writeMem(0xfb09, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xfb09, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xb654));
        EXPECT(0x55, gbc.readMem(0xfb09));
        EXPECT(0xb6, gbc.readMem(0xfb0a));
        // C7 039D
        gbc.setState(0x84fc, 0xd19e, 0x7ca0, 0x6ee8, 0x9f2, 0xcf2c, 0x1, 0x1);
        gbc.writeMem(0x84fc, { 0xc7 });
        gbc.writeMem(0xd19c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd19c, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x84fc));
        EXPECT(0xfd, gbc.readMem(0xd19c));
        EXPECT(0x84, gbc.readMem(0xd19d));
        // C7 039E
        gbc.setState(0x4ddb, 0x8eea, 0x8f00, 0x35ce, 0xbc2c, 0x1ceb, 0x1, 0x0);
        gbc.writeMem(0x4ddb, { 0xc7 });
        gbc.writeMem(0x8ee8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x8ee8, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0x8ee8));
        EXPECT(0x4d, gbc.readMem(0x8ee9));
        // C7 039F
        gbc.setState(0xb5b4, 0xa313, 0xbde0, 0x2dc4, 0xcf53, 0xdde3, 0x1, 0x0);
        gbc.writeMem(0xa311, { 0x0, 0x0 });
        gbc.writeMem(0xb5b4, { 0xc7 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa311, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa311));
        EXPECT(0xb5, gbc.readMem(0xa312));
        EXPECT(0xc7, gbc.readMem(0xb5b4));
        // C7 03A1
        gbc.setState(0x9622, 0xb557, 0x1d0, 0xf008, 0x787e, 0x265f, 0x0, 0x1);
        gbc.writeMem(0x9622, { 0xc7 });
        gbc.writeMem(0xb555, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb555, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x9622));
        EXPECT(0x23, gbc.readMem(0xb555));
        EXPECT(0x96, gbc.readMem(0xb556));
        // C7 03A2
        gbc.setState(0xad5, 0xfd41, 0x2250, 0x829a, 0x28a6, 0x404e, 0x0, 0x0);
        gbc.writeMem(0xad5, { 0xc7 });
        gbc.writeMem(0xfd3f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xfd3f, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xfd3f));
        EXPECT(0xa, gbc.readMem(0xfd40));
        // C7 03A3
        gbc.setState(0x9f76, 0xd52e, 0x1860, 0xc66b, 0x5549, 0x6778, 0x0, 0x0);
        gbc.writeMem(0x9f76, { 0xc7 });
        gbc.writeMem(0xd52c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xd52c, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x9f76));
        EXPECT(0x77, gbc.readMem(0xd52c));
        EXPECT(0x9f, gbc.readMem(0xd52d));
        // C7 03A7
        gbc.setState(0xe181, 0xba7e, 0x2730, 0xe699, 0xce40, 0xd144, 0x0, 0x1);
        gbc.writeMem(0xba7c, { 0x0, 0x0 });
        gbc.writeMem(0xe181, { 0xc7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xba7c, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xba7c));
        EXPECT(0xe1, gbc.readMem(0xba7d));
        EXPECT(0xc7, gbc.readMem(0xe181));
        // C7 03A8
        gbc.setState(0x9772, 0xf2bb, 0xc890, 0xf02, 0xf68b, 0x4261, 0x0, 0x0);
        gbc.writeMem(0x9772, { 0xc7 });
        gbc.writeMem(0xf2b9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf2b9, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x9772));
        EXPECT(0x73, gbc.readMem(0xf2b9));
        EXPECT(0x97, gbc.readMem(0xf2ba));
        // C7 03A9
        gbc.setState(0x9d6f, 0xb968, 0xe0d0, 0x1f7d, 0x45dd, 0x2df0, 0x0, 0x0);
        gbc.writeMem(0x9d6f, { 0xc7 });
        gbc.writeMem(0xb966, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xb966, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x9d6f));
        EXPECT(0x70, gbc.readMem(0xb966));
        EXPECT(0x9d, gbc.readMem(0xb967));
        // C7 03AA
        gbc.setState(0xcca8, 0xef35, 0x39a0, 0x7d7b, 0x9ff2, 0x7668, 0x1, 0x1);
        gbc.writeMem(0xcca8, { 0xc7 });
        gbc.writeMem(0xef33, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xef33, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xcca8));
        EXPECT(0xa9, gbc.readMem(0xef33));
        EXPECT(0xcc, gbc.readMem(0xef34));
        // C7 03AB
        gbc.setState(0x8b8f, 0xecb0, 0xcc20, 0x8d42, 0xb76c, 0x3e0e, 0x0, 0x0);
        gbc.writeMem(0x8b8f, { 0xc7 });
        gbc.writeMem(0xecae, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xecae, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x8b8f));
        EXPECT(0x90, gbc.readMem(0xecae));
        EXPECT(0x8b, gbc.readMem(0xecaf));
        // C7 03AC
        gbc.setState(0x3f9c, 0xe5ce, 0x95e0, 0x3ccf, 0xa5f5, 0xa221, 0x0, 0x1);
        gbc.writeMem(0x3f9c, { 0xc7 });
        gbc.writeMem(0xe5cc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe5cc, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe5cc));
        EXPECT(0x3f, gbc.readMem(0xe5cd));
        // C7 03B2
        gbc.setState(0x3149, 0x83a7, 0x1870, 0x1ebc, 0xc97c, 0xc95, 0x1, 0x1);
        gbc.writeMem(0x3149, { 0xc7 });
        gbc.writeMem(0x83a5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x83a5, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0x83a5));
        EXPECT(0x31, gbc.readMem(0x83a6));
        // C7 03B3
        gbc.setState(0x1fb6, 0xe8f9, 0xa050, 0xa154, 0x7737, 0x9e0c, 0x0, 0x0);
        gbc.writeMem(0x1fb6, { 0xc7 });
        gbc.writeMem(0xe8f7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xe8f7, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xe8f7));
        EXPECT(0x1f, gbc.readMem(0xe8f8));
        // C7 03B4
        gbc.setState(0xea19, 0xdcf8, 0xa0b0, 0x515f, 0x9adf, 0x5e2d, 0x0, 0x0);
        gbc.writeMem(0xdcf6, { 0x0, 0x0 });
        gbc.writeMem(0xea19, { 0xc7 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xdcf6, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xdcf6));
        EXPECT(0xea, gbc.readMem(0xdcf7));
        EXPECT(0xc7, gbc.readMem(0xea19));
        // C7 03B5
        gbc.setState(0x2f8c, 0xd92c, 0xecc0, 0x5f54, 0x8c3c, 0x8187, 0x1, 0x1);
        gbc.writeMem(0x2f8c, { 0xc7 });
        gbc.writeMem(0xd92a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xd92a, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xd92a));
        EXPECT(0x2f, gbc.readMem(0xd92b));
        // C7 03B6
        gbc.setState(0x5afb, 0xa991, 0xa570, 0x98e9, 0x5b0f, 0x5039, 0x0, 0x1);
        gbc.writeMem(0x5afb, { 0xc7 });
        gbc.writeMem(0xa98f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xa98f, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xa98f));
        EXPECT(0x5a, gbc.readMem(0xa990));
        // C7 03B8
        gbc.setState(0x8faa, 0xe308, 0x2b50, 0x611b, 0xbdf1, 0xd6a5, 0x1, 0x0);
        gbc.writeMem(0x8faa, { 0xc7 });
        gbc.writeMem(0xe306, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xe306, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x8faa));
        EXPECT(0xab, gbc.readMem(0xe306));
        EXPECT(0x8f, gbc.readMem(0xe307));
        // C7 03B9
        gbc.setState(0xbdaa, 0xf5b1, 0x7b30, 0x5785, 0x332b, 0xa862, 0x1, 0x1);
        gbc.writeMem(0xbdaa, { 0xc7 });
        gbc.writeMem(0xf5af, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf5af, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xbdaa));
        EXPECT(0xab, gbc.readMem(0xf5af));
        EXPECT(0xbd, gbc.readMem(0xf5b0));
        // C7 03BB
        gbc.setState(0x5a67, 0xe0f2, 0xf850, 0x7b53, 0x4640, 0xe319, 0x0, 0x1);
        gbc.writeMem(0x5a67, { 0xc7 });
        gbc.writeMem(0xe0f0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe0f0, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xe0f0));
        EXPECT(0x5a, gbc.readMem(0xe0f1));
        // C7 03BF
        gbc.setState(0xb7d4, 0x886e, 0x81d0, 0x80a1, 0x6185, 0x92e0, 0x1, 0x0);
        gbc.writeMem(0x886c, { 0x0, 0x0 });
        gbc.writeMem(0xb7d4, { 0xc7 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x886c, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x886c));
        EXPECT(0xb7, gbc.readMem(0x886d));
        EXPECT(0xc7, gbc.readMem(0xb7d4));
        // C7 03C6
        gbc.setState(0xd84c, 0xdb4d, 0x8ba0, 0x8204, 0x789f, 0x889d, 0x1, 0x0);
        gbc.writeMem(0xd84c, { 0xc7 });
        gbc.writeMem(0xdb4b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xdb4b, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xd84c));
        EXPECT(0x4d, gbc.readMem(0xdb4b));
        EXPECT(0xd8, gbc.readMem(0xdb4c));
        // C7 03C7
        gbc.setState(0x4287, 0xf34e, 0x1670, 0xc6f7, 0x6504, 0xfe0b, 0x0, 0x0);
        gbc.writeMem(0x4287, { 0xc7 });
        gbc.writeMem(0xf34c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf34c, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xf34c));
        EXPECT(0x42, gbc.readMem(0xf34d));
        // C7 03C9
        gbc.setState(0x1b2f, 0xd70a, 0x10c0, 0x441, 0x4317, 0x9b7b, 0x1, 0x1);
        gbc.writeMem(0x1b2f, { 0xc7 });
        gbc.writeMem(0xd708, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xd708, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xd708));
        EXPECT(0x1b, gbc.readMem(0xd709));
        // C7 03CB
        gbc.setState(0x8f3d, 0xb3ab, 0x1ec0, 0xcd21, 0x221, 0xc15d, 0x0, 0x0);
        gbc.writeMem(0x8f3d, { 0xc7 });
        gbc.writeMem(0xb3a9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb3a9, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x8f3d));
        EXPECT(0x3e, gbc.readMem(0xb3a9));
        EXPECT(0x8f, gbc.readMem(0xb3aa));
        // C7 03CC
        gbc.setState(0xeee, 0xe63c, 0x8820, 0x914, 0x548d, 0x1943, 0x0, 0x1);
        gbc.writeMem(0xeee, { 0xc7 });
        gbc.writeMem(0xe63a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe63a, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xe63a));
        EXPECT(0xe, gbc.readMem(0xe63b));
        // C7 03CD
        gbc.setState(0x30af, 0x8c06, 0xfaa0, 0x9d2d, 0x3902, 0xbf35, 0x1, 0x0);
        gbc.writeMem(0x30af, { 0xc7 });
        gbc.writeMem(0x8c04, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x8c04, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x8c04));
        EXPECT(0x30, gbc.readMem(0x8c05));
        // C7 03CE
        gbc.setState(0x3474, 0x8340, 0xc310, 0xd3e9, 0x40c2, 0x3b0f, 0x1, 0x0);
        gbc.writeMem(0x3474, { 0xc7 });
        gbc.writeMem(0x833e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x833e, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x833e));
        EXPECT(0x34, gbc.readMem(0x833f));
        // C7 03CF
        gbc.setState(0x6d27, 0xa489, 0x2c90, 0x3ae, 0x8647, 0xf683, 0x0, 0x0);
        gbc.writeMem(0x6d27, { 0xc7 });
        gbc.writeMem(0xa487, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa487, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xa487));
        EXPECT(0x6d, gbc.readMem(0xa488));
        // C7 03D1
        gbc.setState(0xc42c, 0x8731, 0x9a70, 0xc3f, 0x81c5, 0x52be, 0x0, 0x0);
        gbc.writeMem(0x872f, { 0x0, 0x0 });
        gbc.writeMem(0xc42c, { 0xc7 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x872f, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x872f));
        EXPECT(0xc4, gbc.readMem(0x8730));
        EXPECT(0xc7, gbc.readMem(0xc42c));
        // C7 03D4
        gbc.setState(0x91ca, 0xdc90, 0x8bd0, 0x9b9a, 0xff8b, 0x7154, 0x1, 0x0);
        gbc.writeMem(0x91ca, { 0xc7 });
        gbc.writeMem(0xdc8e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xdc8e, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x91ca));
        EXPECT(0xcb, gbc.readMem(0xdc8e));
        EXPECT(0x91, gbc.readMem(0xdc8f));
        // C7 03D7
        gbc.setState(0xdfa7, 0xac33, 0xab60, 0xf9d, 0x35b0, 0xeee, 0x0, 0x1);
        gbc.writeMem(0xac31, { 0x0, 0x0 });
        gbc.writeMem(0xdfa7, { 0xc7 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xac31, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0xac31));
        EXPECT(0xdf, gbc.readMem(0xac32));
        EXPECT(0xc7, gbc.readMem(0xdfa7));
        // C7 03D9
        gbc.setState(0xe1a, 0xf2b1, 0x9a60, 0x5f4c, 0x3a76, 0x8e9, 0x1, 0x1);
        gbc.writeMem(0xe1a, { 0xc7 });
        gbc.writeMem(0xf2af, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xf2af, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xf2af));
        EXPECT(0xe, gbc.readMem(0xf2b0));
        // C7 03DB
        gbc.setState(0x7a6a, 0xa999, 0xd020, 0x4e68, 0x5359, 0xbb8a, 0x1, 0x1);
        gbc.writeMem(0x7a6a, { 0xc7 });
        gbc.writeMem(0xa997, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa997, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xa997));
        EXPECT(0x7a, gbc.readMem(0xa998));
        // C7 03DE
        gbc.setState(0xdb9, 0x99a9, 0xdab0, 0x501e, 0x4c66, 0xa16f, 0x1, 0x0);
        gbc.writeMem(0xdb9, { 0xc7 });
        gbc.writeMem(0x99a7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x99a7, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0x99a7));
        EXPECT(0xd, gbc.readMem(0x99a8));
        // C7 03DF
        gbc.setState(0x55a6, 0xd10a, 0xcb00, 0x8a23, 0xf43c, 0x5303, 0x1, 0x0);
        gbc.writeMem(0x55a6, { 0xc7 });
        gbc.writeMem(0xd108, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xd108, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd108));
        EXPECT(0x55, gbc.readMem(0xd109));
        // C7 03E0
        gbc.setState(0xeb9, 0xffd6, 0xe8a0, 0xda56, 0x1d52, 0x5b1a, 0x1, 0x0);
        gbc.writeMem(0xeb9, { 0xc7 });
        gbc.writeMem(0xffd4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xffd4, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xffd4));
        EXPECT(0xe, gbc.readMem(0xffd5));
        // C7 03E1
        gbc.setState(0x1acf, 0xafb1, 0x51d0, 0xb120, 0x256b, 0x5cf3, 0x0, 0x0);
        gbc.writeMem(0x1acf, { 0xc7 });
        gbc.writeMem(0xafaf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xafaf, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xafaf));
        EXPECT(0x1a, gbc.readMem(0xafb0));
        // C7 03E6
        gbc.setState(0x777d, 0xbfd9, 0xe060, 0x709, 0xd514, 0x1f63, 0x1, 0x1);
        gbc.writeMem(0x777d, { 0xc7 });
        gbc.writeMem(0xbfd7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xbfd7, gbc.sp());
        EXPECT(0x0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xbfd7));
        EXPECT(0x77, gbc.readMem(0xbfd8));
    }
