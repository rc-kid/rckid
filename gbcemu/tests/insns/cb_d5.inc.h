    TEST(gbcemu, opcode_cb_d5) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB D5 0000
        gbc.setState(0x8c48, 0x3bae, 0x7680, 0xc013, 0x1407, 0x5d71, 0x0, 0x0);
        gbc.writeMem(0x8c48, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x3bae, gbc.sp());
        EXPECT(0x8c4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c48));
        EXPECT(0xd5, gbc.readMem(0x8c49));
        // CB D5 0001
        gbc.setState(0x388a, 0xc93e, 0xfdf0, 0xd5c, 0x1535, 0xfe99, 0x1, 0x1);
        gbc.writeMem(0x388a, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xc93e, gbc.sp());
        EXPECT(0x388c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0002
        gbc.setState(0x1c93, 0x37f, 0xc470, 0x5e86, 0x36c0, 0xaa49, 0x1, 0x1);
        gbc.writeMem(0x1c93, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x37f, gbc.sp());
        EXPECT(0x1c95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0003
        gbc.setState(0xb1f8, 0xee43, 0x2a30, 0xf704, 0x5294, 0x5e34, 0x0, 0x1);
        gbc.writeMem(0xb1f8, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xee43, gbc.sp());
        EXPECT(0xb1fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1f8));
        EXPECT(0xd5, gbc.readMem(0xb1f9));
        // CB D5 0004
        gbc.setState(0xc82, 0xb999, 0x8780, 0x1c5, 0x9041, 0xa0b0, 0x1, 0x0);
        gbc.writeMem(0xc82, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xb999, gbc.sp());
        EXPECT(0xc84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0005
        gbc.setState(0xda9c, 0xed02, 0xed10, 0x2aa5, 0xfada, 0xf3b4, 0x1, 0x1);
        gbc.writeMem(0xda9c, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xed02, gbc.sp());
        EXPECT(0xda9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda9c));
        EXPECT(0xd5, gbc.readMem(0xda9d));
        // CB D5 0006
        gbc.setState(0xa544, 0x6f41, 0x6200, 0xa792, 0x6eb9, 0x70ad, 0x0, 0x0);
        gbc.writeMem(0xa544, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x6f41, gbc.sp());
        EXPECT(0xa546, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa544));
        EXPECT(0xd5, gbc.readMem(0xa545));
        // CB D5 0007
        gbc.setState(0xb61f, 0xf30c, 0x9970, 0x1d6f, 0x3b86, 0xb554, 0x0, 0x0);
        gbc.writeMem(0xb61f, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xf30c, gbc.sp());
        EXPECT(0xb621, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb61f));
        EXPECT(0xd5, gbc.readMem(0xb620));
        // CB D5 0008
        gbc.setState(0x7e7e, 0x90dd, 0xe1b0, 0x4f65, 0xa97d, 0xb44e, 0x0, 0x1);
        gbc.writeMem(0x7e7e, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x90dd, gbc.sp());
        EXPECT(0x7e80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0009
        gbc.setState(0x796a, 0x60d6, 0x2560, 0x55e9, 0xca70, 0xe4ae, 0x0, 0x1);
        gbc.writeMem(0x796a, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x60d6, gbc.sp());
        EXPECT(0x796c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 000A
        gbc.setState(0x245, 0xd908, 0xa340, 0x1067, 0xd33f, 0xb8fa, 0x1, 0x0);
        gbc.writeMem(0x245, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xd908, gbc.sp());
        EXPECT(0x247, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 000B
        gbc.setState(0x1fef, 0xa3b, 0xe7e0, 0x9fcf, 0x569, 0x84ed, 0x0, 0x1);
        gbc.writeMem(0x1fef, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xa3b, gbc.sp());
        EXPECT(0x1ff1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 000C
        gbc.setState(0xbc72, 0xa6ed, 0x3ec0, 0x9a93, 0x90dc, 0xd10f, 0x1, 0x0);
        gbc.writeMem(0xbc72, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa6ed, gbc.sp());
        EXPECT(0xbc74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc72));
        EXPECT(0xd5, gbc.readMem(0xbc73));
        // CB D5 000D
        gbc.setState(0x2697, 0xfaf, 0xe1d0, 0x2423, 0x4628, 0xe162, 0x1, 0x1);
        gbc.writeMem(0x2697, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xfaf, gbc.sp());
        EXPECT(0x2699, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 000E
        gbc.setState(0xc6bd, 0xedc4, 0x1b00, 0xfc5e, 0xd7da, 0xaf9e, 0x0, 0x0);
        gbc.writeMem(0xc6bd, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xedc4, gbc.sp());
        EXPECT(0xc6bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6bd));
        EXPECT(0xd5, gbc.readMem(0xc6be));
        // CB D5 000F
        gbc.setState(0xae73, 0x91a8, 0x4920, 0x1047, 0xbe6b, 0xd993, 0x1, 0x1);
        gbc.writeMem(0xae73, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x91a8, gbc.sp());
        EXPECT(0xae75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae73));
        EXPECT(0xd5, gbc.readMem(0xae74));
        // CB D5 0010
        gbc.setState(0x7115, 0x2cbf, 0xb120, 0x4e7f, 0xb1a5, 0x608e, 0x1, 0x1);
        gbc.writeMem(0x7115, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x2cbf, gbc.sp());
        EXPECT(0x7117, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0011
        gbc.setState(0x3021, 0x5830, 0x8520, 0x3e49, 0xd633, 0x2885, 0x0, 0x1);
        gbc.writeMem(0x3021, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x5830, gbc.sp());
        EXPECT(0x3023, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0012
        gbc.setState(0xd856, 0x783f, 0x84d0, 0xaa11, 0x4d3, 0x8e68, 0x1, 0x0);
        gbc.writeMem(0xd856, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x783f, gbc.sp());
        EXPECT(0xd858, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd856));
        EXPECT(0xd5, gbc.readMem(0xd857));
        // CB D5 0013
        gbc.setState(0x7de9, 0xc20c, 0x67f0, 0x59b9, 0x2f31, 0x976, 0x1, 0x0);
        gbc.writeMem(0x7de9, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xc20c, gbc.sp());
        EXPECT(0x7deb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0014
        gbc.setState(0x35ae, 0x5804, 0x1210, 0x7291, 0x32ef, 0xc0c3, 0x1, 0x1);
        gbc.writeMem(0x35ae, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x5804, gbc.sp());
        EXPECT(0x35b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0015
        gbc.setState(0x68e, 0x9148, 0x88b0, 0xb1b6, 0x331, 0x2bc1, 0x0, 0x1);
        gbc.writeMem(0x68e, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x9148, gbc.sp());
        EXPECT(0x690, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0016
        gbc.setState(0x18a, 0xceef, 0xe2a0, 0x1db1, 0x14f6, 0x1221, 0x1, 0x1);
        gbc.writeMem(0x18a, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xceef, gbc.sp());
        EXPECT(0x18c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0017
        gbc.setState(0xdf19, 0x62f1, 0xb330, 0xa564, 0x9324, 0x3a30, 0x1, 0x0);
        gbc.writeMem(0xdf19, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x62f1, gbc.sp());
        EXPECT(0xdf1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf19));
        EXPECT(0xd5, gbc.readMem(0xdf1a));
        // CB D5 0018
        gbc.setState(0x5dfa, 0xb6e5, 0x73f0, 0xf7e8, 0x9160, 0xd8a0, 0x0, 0x1);
        gbc.writeMem(0x5dfa, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xb6e5, gbc.sp());
        EXPECT(0x5dfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0019
        gbc.setState(0xa0ff, 0x78f, 0x9760, 0xef58, 0x3989, 0xfa29, 0x0, 0x1);
        gbc.writeMem(0xa0ff, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x78f, gbc.sp());
        EXPECT(0xa101, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0ff));
        EXPECT(0xd5, gbc.readMem(0xa100));
        // CB D5 001A
        gbc.setState(0x6edf, 0xcde3, 0xbb30, 0xd411, 0xfa6f, 0x3509, 0x1, 0x1);
        gbc.writeMem(0x6edf, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xcde3, gbc.sp());
        EXPECT(0x6ee1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 001B
        gbc.setState(0xac93, 0xc4f1, 0x3ac0, 0xafba, 0xfb33, 0xfeff, 0x0, 0x0);
        gbc.writeMem(0xac93, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xc4f1, gbc.sp());
        EXPECT(0xac95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac93));
        EXPECT(0xd5, gbc.readMem(0xac94));
        // CB D5 001C
        gbc.setState(0xc9f6, 0x9429, 0x4e50, 0xec8c, 0xe8c3, 0x25e0, 0x1, 0x1);
        gbc.writeMem(0xc9f6, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9429, gbc.sp());
        EXPECT(0xc9f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9f6));
        EXPECT(0xd5, gbc.readMem(0xc9f7));
        // CB D5 001D
        gbc.setState(0x6182, 0xa1a1, 0x6900, 0x5ac5, 0x1a0f, 0x722c, 0x0, 0x1);
        gbc.writeMem(0x6182, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xa1a1, gbc.sp());
        EXPECT(0x6184, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 001E
        gbc.setState(0x4cbf, 0x83b2, 0x94e0, 0xe60f, 0xc20a, 0x4d6e, 0x1, 0x0);
        gbc.writeMem(0x4cbf, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x83b2, gbc.sp());
        EXPECT(0x4cc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 001F
        gbc.setState(0x82f5, 0xcbde, 0x65d0, 0xed9b, 0xd8d2, 0xbbf0, 0x1, 0x1);
        gbc.writeMem(0x82f5, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xcbde, gbc.sp());
        EXPECT(0x82f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82f5));
        EXPECT(0xd5, gbc.readMem(0x82f6));
        // CB D5 0020
        gbc.setState(0x570e, 0x796, 0x69d0, 0x9bb, 0xe130, 0xd13c, 0x0, 0x1);
        gbc.writeMem(0x570e, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x796, gbc.sp());
        EXPECT(0x5710, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0021
        gbc.setState(0x9bd6, 0x31aa, 0x7780, 0x46cc, 0xecf1, 0xc5b0, 0x0, 0x1);
        gbc.writeMem(0x9bd6, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x31aa, gbc.sp());
        EXPECT(0x9bd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bd6));
        EXPECT(0xd5, gbc.readMem(0x9bd7));
        // CB D5 0022
        gbc.setState(0xc779, 0xa6dc, 0xd350, 0x7c54, 0x4f06, 0x185f, 0x1, 0x0);
        gbc.writeMem(0xc779, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa6dc, gbc.sp());
        EXPECT(0xc77b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc779));
        EXPECT(0xd5, gbc.readMem(0xc77a));
        // CB D5 0023
        gbc.setState(0xdff5, 0xee92, 0x94f0, 0x99c8, 0x58f1, 0xf663, 0x0, 0x0);
        gbc.writeMem(0xdff5, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xee92, gbc.sp());
        EXPECT(0xdff7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdff5));
        EXPECT(0xd5, gbc.readMem(0xdff6));
        // CB D5 0024
        gbc.setState(0x9285, 0xf9fc, 0x870, 0xfada, 0x566f, 0x42b9, 0x0, 0x0);
        gbc.writeMem(0x9285, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xf9fc, gbc.sp());
        EXPECT(0x9287, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9285));
        EXPECT(0xd5, gbc.readMem(0x9286));
        // CB D5 0025
        gbc.setState(0xb9a5, 0xf90a, 0x76e0, 0x9c39, 0x9a24, 0x799a, 0x0, 0x1);
        gbc.writeMem(0xb9a5, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xf90a, gbc.sp());
        EXPECT(0xb9a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9a5));
        EXPECT(0xd5, gbc.readMem(0xb9a6));
        // CB D5 0027
        gbc.setState(0x23d2, 0x6514, 0xb890, 0x76f, 0x10c6, 0x7470, 0x1, 0x0);
        gbc.writeMem(0x23d2, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x6514, gbc.sp());
        EXPECT(0x23d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0029
        gbc.setState(0x1ba4, 0xa5b2, 0xa740, 0x6651, 0xe507, 0xfc53, 0x1, 0x1);
        gbc.writeMem(0x1ba4, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa5b2, gbc.sp());
        EXPECT(0x1ba6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 002B
        gbc.setState(0x3a9f, 0x42f8, 0xdca0, 0xd5a0, 0xa59a, 0x7a2c, 0x0, 0x0);
        gbc.writeMem(0x3a9f, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x42f8, gbc.sp());
        EXPECT(0x3aa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 002C
        gbc.setState(0x666f, 0xdca3, 0x7360, 0xb4f8, 0xf269, 0xcf24, 0x0, 0x1);
        gbc.writeMem(0x666f, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xdca3, gbc.sp());
        EXPECT(0x6671, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 002D
        gbc.setState(0x3436, 0x4cdf, 0x7a20, 0xf542, 0x3cc, 0xcb1a, 0x0, 0x1);
        gbc.writeMem(0x3436, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x4cdf, gbc.sp());
        EXPECT(0x3438, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 002E
        gbc.setState(0xe708, 0xeb11, 0xe810, 0xbde7, 0xe579, 0xdacd, 0x0, 0x0);
        gbc.writeMem(0xe708, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xeb11, gbc.sp());
        EXPECT(0xe70a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe708));
        EXPECT(0xd5, gbc.readMem(0xe709));
        // CB D5 002F
        gbc.setState(0xa7b1, 0x353e, 0x83e0, 0x8886, 0x198e, 0x28e7, 0x0, 0x0);
        gbc.writeMem(0xa7b1, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x353e, gbc.sp());
        EXPECT(0xa7b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7b1));
        EXPECT(0xd5, gbc.readMem(0xa7b2));
        // CB D5 0030
        gbc.setState(0x3e66, 0xa076, 0xdc80, 0xe829, 0x7753, 0x2041, 0x0, 0x1);
        gbc.writeMem(0x3e66, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa076, gbc.sp());
        EXPECT(0x3e68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0031
        gbc.setState(0x4cc9, 0x8559, 0xa4c0, 0x922c, 0x7501, 0xf395, 0x0, 0x0);
        gbc.writeMem(0x4cc9, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8559, gbc.sp());
        EXPECT(0x4ccb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0032
        gbc.setState(0x14db, 0xc1ec, 0xeff0, 0xdda1, 0x783f, 0xc0a1, 0x1, 0x0);
        gbc.writeMem(0x14db, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc1ec, gbc.sp());
        EXPECT(0x14dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0033
        gbc.setState(0xed57, 0x73db, 0x2760, 0xc3dc, 0xdd95, 0xafdf, 0x0, 0x0);
        gbc.writeMem(0xed57, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x73db, gbc.sp());
        EXPECT(0xed59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed57));
        EXPECT(0xd5, gbc.readMem(0xed58));
        // CB D5 0034
        gbc.setState(0x3f3a, 0xaa21, 0xe8c0, 0x10db, 0x7baa, 0x962b, 0x0, 0x1);
        gbc.writeMem(0x3f3a, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xaa21, gbc.sp());
        EXPECT(0x3f3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0035
        gbc.setState(0x6e83, 0x9233, 0x30c0, 0xfb9d, 0xdf70, 0xc23b, 0x1, 0x0);
        gbc.writeMem(0x6e83, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x9233, gbc.sp());
        EXPECT(0x6e85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0036
        gbc.setState(0x448c, 0x560e, 0x99d0, 0xdd2c, 0x2c4f, 0x81c4, 0x1, 0x1);
        gbc.writeMem(0x448c, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x560e, gbc.sp());
        EXPECT(0x448e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0037
        gbc.setState(0x79a3, 0x42ca, 0x7c00, 0xb141, 0xae35, 0xb185, 0x0, 0x0);
        gbc.writeMem(0x79a3, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x42ca, gbc.sp());
        EXPECT(0x79a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0038
        gbc.setState(0xae00, 0x478e, 0x2fd0, 0xcbd6, 0xe50e, 0x8f79, 0x0, 0x1);
        gbc.writeMem(0xae00, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x478e, gbc.sp());
        EXPECT(0xae02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae00));
        EXPECT(0xd5, gbc.readMem(0xae01));
        // CB D5 0039
        gbc.setState(0x9288, 0x7699, 0x330, 0x3442, 0x775b, 0xd5b1, 0x0, 0x1);
        gbc.writeMem(0x9288, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x7699, gbc.sp());
        EXPECT(0x928a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9288));
        EXPECT(0xd5, gbc.readMem(0x9289));
        // CB D5 003A
        gbc.setState(0xc8a1, 0xc1a6, 0xe70, 0xe37c, 0x4c6c, 0xa1d5, 0x1, 0x1);
        gbc.writeMem(0xc8a1, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xc1a6, gbc.sp());
        EXPECT(0xc8a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8a1));
        EXPECT(0xd5, gbc.readMem(0xc8a2));
        // CB D5 003B
        gbc.setState(0x5754, 0x6895, 0x2550, 0xb631, 0xf83f, 0x5395, 0x0, 0x0);
        gbc.writeMem(0x5754, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x6895, gbc.sp());
        EXPECT(0x5756, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 003D
        gbc.setState(0x2b69, 0x77c6, 0xd720, 0xeaee, 0x4e6f, 0x11b9, 0x0, 0x0);
        gbc.writeMem(0x2b69, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x77c6, gbc.sp());
        EXPECT(0x2b6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 003E
        gbc.setState(0x735f, 0xfd72, 0x7060, 0xe349, 0x3453, 0x93ae, 0x0, 0x0);
        gbc.writeMem(0x735f, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xfd72, gbc.sp());
        EXPECT(0x7361, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 003F
        gbc.setState(0x8cf4, 0x1c54, 0xc620, 0xf05f, 0xb558, 0x9d8, 0x1, 0x1);
        gbc.writeMem(0x8cf4, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x1c54, gbc.sp());
        EXPECT(0x8cf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cf4));
        EXPECT(0xd5, gbc.readMem(0x8cf5));
        // CB D5 0040
        gbc.setState(0x35a7, 0xd401, 0xf9a0, 0x23d7, 0x816b, 0x901c, 0x0, 0x1);
        gbc.writeMem(0x35a7, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xd401, gbc.sp());
        EXPECT(0x35a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0041
        gbc.setState(0xc068, 0x3961, 0x7510, 0x631f, 0xc0bc, 0xd44, 0x1, 0x0);
        gbc.writeMem(0xc068, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x3961, gbc.sp());
        EXPECT(0xc06a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc068));
        EXPECT(0xd5, gbc.readMem(0xc069));
        // CB D5 0042
        gbc.setState(0xa381, 0xca28, 0xe2f0, 0xcac, 0x2bf7, 0x6a26, 0x0, 0x0);
        gbc.writeMem(0xa381, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xca28, gbc.sp());
        EXPECT(0xa383, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa381));
        EXPECT(0xd5, gbc.readMem(0xa382));
        // CB D5 0043
        gbc.setState(0x6471, 0xb33, 0x7720, 0xd4e2, 0xbc98, 0x23da, 0x0, 0x0);
        gbc.writeMem(0x6471, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb33, gbc.sp());
        EXPECT(0x6473, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0044
        gbc.setState(0x6f9e, 0x4842, 0xcf90, 0xa1bc, 0x1712, 0x267a, 0x1, 0x1);
        gbc.writeMem(0x6f9e, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x4842, gbc.sp());
        EXPECT(0x6fa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0045
        gbc.setState(0x24e7, 0x6003, 0x9710, 0xe30e, 0xfe5c, 0xa772, 0x0, 0x1);
        gbc.writeMem(0x24e7, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6003, gbc.sp());
        EXPECT(0x24e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0046
        gbc.setState(0xc1a0, 0xa76f, 0xb110, 0xbe2, 0xcee4, 0x55fa, 0x1, 0x1);
        gbc.writeMem(0xc1a0, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xa76f, gbc.sp());
        EXPECT(0xc1a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1a0));
        EXPECT(0xd5, gbc.readMem(0xc1a1));
        // CB D5 0048
        gbc.setState(0xc77c, 0x8e44, 0xc360, 0x1099, 0xa3fc, 0x49dd, 0x1, 0x1);
        gbc.writeMem(0xc77c, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8e44, gbc.sp());
        EXPECT(0xc77e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc77c));
        EXPECT(0xd5, gbc.readMem(0xc77d));
        // CB D5 0049
        gbc.setState(0x986f, 0x8a4a, 0x2710, 0xa231, 0x87b, 0xe3f4, 0x1, 0x1);
        gbc.writeMem(0x986f, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x8a4a, gbc.sp());
        EXPECT(0x9871, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x986f));
        EXPECT(0xd5, gbc.readMem(0x9870));
        // CB D5 004A
        gbc.setState(0x9194, 0xe94b, 0xc220, 0xf554, 0xd1e7, 0xf4d6, 0x0, 0x0);
        gbc.writeMem(0x9194, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xe94b, gbc.sp());
        EXPECT(0x9196, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9194));
        EXPECT(0xd5, gbc.readMem(0x9195));
        // CB D5 004B
        gbc.setState(0xe09e, 0xfc5c, 0x66d0, 0x8446, 0xe5dc, 0x1f5f, 0x0, 0x0);
        gbc.writeMem(0xe09e, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xfc5c, gbc.sp());
        EXPECT(0xe0a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe09e));
        EXPECT(0xd5, gbc.readMem(0xe09f));
        // CB D5 004C
        gbc.setState(0x3d1a, 0x4806, 0x1af0, 0xe6e3, 0xa9fa, 0x3ef2, 0x0, 0x1);
        gbc.writeMem(0x3d1a, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x4806, gbc.sp());
        EXPECT(0x3d1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 004D
        gbc.setState(0xb7d7, 0x4f5, 0x4800, 0xaca7, 0x303b, 0xdeaa, 0x0, 0x0);
        gbc.writeMem(0xb7d7, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x4f5, gbc.sp());
        EXPECT(0xb7d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7d7));
        EXPECT(0xd5, gbc.readMem(0xb7d8));
        // CB D5 004E
        gbc.setState(0x5ac4, 0xaa83, 0xc880, 0x7594, 0x2d8b, 0x5ac, 0x1, 0x0);
        gbc.writeMem(0x5ac4, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xaa83, gbc.sp());
        EXPECT(0x5ac6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 004F
        gbc.setState(0xae29, 0x167f, 0x51a0, 0x5c22, 0x9f9b, 0x6092, 0x1, 0x0);
        gbc.writeMem(0xae29, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x167f, gbc.sp());
        EXPECT(0xae2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae29));
        EXPECT(0xd5, gbc.readMem(0xae2a));
        // CB D5 0050
        gbc.setState(0x34f3, 0xc7a5, 0x7ca0, 0x9b05, 0xf274, 0x91cd, 0x0, 0x0);
        gbc.writeMem(0x34f3, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc7a5, gbc.sp());
        EXPECT(0x34f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0051
        gbc.setState(0x9ee1, 0x3363, 0xe170, 0xa56a, 0x5719, 0xa8e2, 0x1, 0x0);
        gbc.writeMem(0x9ee1, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x3363, gbc.sp());
        EXPECT(0x9ee3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ee1));
        EXPECT(0xd5, gbc.readMem(0x9ee2));
        // CB D5 0052
        gbc.setState(0xa7f1, 0x61e1, 0xf610, 0x7e51, 0x22f5, 0x2ee9, 0x1, 0x1);
        gbc.writeMem(0xa7f1, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x61e1, gbc.sp());
        EXPECT(0xa7f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7f1));
        EXPECT(0xd5, gbc.readMem(0xa7f2));
        // CB D5 0053
        gbc.setState(0xdcf9, 0x4a25, 0xc9c0, 0x4c94, 0xc56e, 0xd85b, 0x0, 0x0);
        gbc.writeMem(0xdcf9, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x4a25, gbc.sp());
        EXPECT(0xdcfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcf9));
        EXPECT(0xd5, gbc.readMem(0xdcfa));
        // CB D5 0054
        gbc.setState(0xa6af, 0xa608, 0x15b0, 0x7271, 0xc1c4, 0xe275, 0x1, 0x0);
        gbc.writeMem(0xa6af, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa608, gbc.sp());
        EXPECT(0xa6b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6af));
        EXPECT(0xd5, gbc.readMem(0xa6b0));
        // CB D5 0055
        gbc.setState(0x5d0f, 0x3be2, 0xaba0, 0xa86, 0x2672, 0xb74b, 0x1, 0x0);
        gbc.writeMem(0x5d0f, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x3be2, gbc.sp());
        EXPECT(0x5d11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0056
        gbc.setState(0x494e, 0xb4a2, 0xd360, 0x1046, 0xc33f, 0xa226, 0x0, 0x0);
        gbc.writeMem(0x494e, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb4a2, gbc.sp());
        EXPECT(0x4950, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0057
        gbc.setState(0x8937, 0x1893, 0x9e40, 0xe766, 0x5304, 0xefdf, 0x1, 0x0);
        gbc.writeMem(0x8937, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x1893, gbc.sp());
        EXPECT(0x8939, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8937));
        EXPECT(0xd5, gbc.readMem(0x8938));
        // CB D5 0058
        gbc.setState(0x2637, 0xd7f4, 0x2f0, 0x296, 0x1c21, 0x82ba, 0x1, 0x0);
        gbc.writeMem(0x2637, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xd7f4, gbc.sp());
        EXPECT(0x2639, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0059
        gbc.setState(0xef5a, 0x1b4, 0x30d0, 0xd016, 0xed36, 0xbe66, 0x0, 0x1);
        gbc.writeMem(0xef5a, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x1b4, gbc.sp());
        EXPECT(0xef5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef5a));
        EXPECT(0xd5, gbc.readMem(0xef5b));
        // CB D5 005A
        gbc.setState(0x9321, 0xe7c1, 0x31b0, 0xf1a4, 0xbcbb, 0x2fa2, 0x1, 0x1);
        gbc.writeMem(0x9321, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xe7c1, gbc.sp());
        EXPECT(0x9323, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9321));
        EXPECT(0xd5, gbc.readMem(0x9322));
        // CB D5 005B
        gbc.setState(0x5702, 0xc322, 0x5e0, 0x4ea8, 0xeeed, 0x1d06, 0x1, 0x1);
        gbc.writeMem(0x5702, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc322, gbc.sp());
        EXPECT(0x5704, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 005C
        gbc.setState(0x879e, 0xe522, 0xc850, 0x6411, 0x70b2, 0xf4f, 0x1, 0x1);
        gbc.writeMem(0x879e, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xe522, gbc.sp());
        EXPECT(0x87a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x879e));
        EXPECT(0xd5, gbc.readMem(0x879f));
        // CB D5 005D
        gbc.setState(0xe06d, 0xa400, 0x7640, 0x88f9, 0xdb06, 0xb3fd, 0x0, 0x1);
        gbc.writeMem(0xe06d, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xa400, gbc.sp());
        EXPECT(0xe06f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe06d));
        EXPECT(0xd5, gbc.readMem(0xe06e));
        // CB D5 005E
        gbc.setState(0x15e9, 0x13c5, 0xbd0, 0x8cf2, 0xf57a, 0xcd0b, 0x1, 0x1);
        gbc.writeMem(0x15e9, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x13c5, gbc.sp());
        EXPECT(0x15eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 005F
        gbc.setState(0x7238, 0x5344, 0x4db0, 0x7de3, 0xceb1, 0xf0b7, 0x0, 0x1);
        gbc.writeMem(0x7238, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x5344, gbc.sp());
        EXPECT(0x723a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0060
        gbc.setState(0x230a, 0x24a1, 0x9650, 0x5979, 0x22b4, 0xbd55, 0x1, 0x0);
        gbc.writeMem(0x230a, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x24a1, gbc.sp());
        EXPECT(0x230c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0061
        gbc.setState(0x48c9, 0x24ca, 0x6980, 0xb7da, 0xa2d5, 0xfe9f, 0x1, 0x0);
        gbc.writeMem(0x48c9, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x24ca, gbc.sp());
        EXPECT(0x48cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0062
        gbc.setState(0x69df, 0x2e95, 0xe010, 0x3e46, 0x9ae1, 0x36ac, 0x0, 0x1);
        gbc.writeMem(0x69df, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x2e95, gbc.sp());
        EXPECT(0x69e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0063
        gbc.setState(0xb620, 0x353, 0xec50, 0xee7f, 0x3474, 0xff6e, 0x1, 0x1);
        gbc.writeMem(0xb620, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x353, gbc.sp());
        EXPECT(0xb622, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb620));
        EXPECT(0xd5, gbc.readMem(0xb621));
        // CB D5 0064
        gbc.setState(0x497c, 0xc156, 0xf180, 0xd2cf, 0xec77, 0x711d, 0x0, 0x0);
        gbc.writeMem(0x497c, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc156, gbc.sp());
        EXPECT(0x497e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0065
        gbc.setState(0x8554, 0xd4d5, 0xfc60, 0x533a, 0x8ced, 0x6adc, 0x0, 0x0);
        gbc.writeMem(0x8554, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xd4d5, gbc.sp());
        EXPECT(0x8556, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8554));
        EXPECT(0xd5, gbc.readMem(0x8555));
        // CB D5 0066
        gbc.setState(0xb2eb, 0xc5ce, 0xbe60, 0x1517, 0x9c71, 0x3181, 0x1, 0x1);
        gbc.writeMem(0xb2eb, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc5ce, gbc.sp());
        EXPECT(0xb2ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2eb));
        EXPECT(0xd5, gbc.readMem(0xb2ec));
        // CB D5 0067
        gbc.setState(0x1b9, 0x2815, 0x6c50, 0x475b, 0xa4d2, 0x9c7d, 0x0, 0x0);
        gbc.writeMem(0x1b9, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x2815, gbc.sp());
        EXPECT(0x1bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0068
        gbc.setState(0x16cd, 0xa602, 0x2a50, 0x9c24, 0x61a7, 0xdd30, 0x1, 0x0);
        gbc.writeMem(0x16cd, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xa602, gbc.sp());
        EXPECT(0x16cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0069
        gbc.setState(0x9ca0, 0xae5d, 0x42c0, 0x79ee, 0xc570, 0x483f, 0x0, 0x0);
        gbc.writeMem(0x9ca0, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xae5d, gbc.sp());
        EXPECT(0x9ca2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ca0));
        EXPECT(0xd5, gbc.readMem(0x9ca1));
        // CB D5 006A
        gbc.setState(0xcb7d, 0x3692, 0x3ee0, 0xec1a, 0x2529, 0x349c, 0x0, 0x1);
        gbc.writeMem(0xcb7d, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x3692, gbc.sp());
        EXPECT(0xcb7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb7d));
        EXPECT(0xd5, gbc.readMem(0xcb7e));
        // CB D5 006B
        gbc.setState(0x47a5, 0x27cf, 0x4f20, 0x5742, 0x8e6b, 0x1d46, 0x0, 0x0);
        gbc.writeMem(0x47a5, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x27cf, gbc.sp());
        EXPECT(0x47a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 006C
        gbc.setState(0x255, 0x2ad, 0x4610, 0xe7d3, 0xe728, 0xcd68, 0x0, 0x0);
        gbc.writeMem(0x255, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2ad, gbc.sp());
        EXPECT(0x257, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 006D
        gbc.setState(0x3748, 0xa487, 0x9b80, 0x83bd, 0xefb7, 0xbafd, 0x0, 0x0);
        gbc.writeMem(0x3748, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xa487, gbc.sp());
        EXPECT(0x374a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 006E
        gbc.setState(0x89b6, 0xed71, 0x1b30, 0xbcb6, 0xdec3, 0x30f9, 0x1, 0x1);
        gbc.writeMem(0x89b6, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xed71, gbc.sp());
        EXPECT(0x89b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89b6));
        EXPECT(0xd5, gbc.readMem(0x89b7));
        // CB D5 006F
        gbc.setState(0x57bc, 0x873, 0xbb0, 0x43f1, 0xe731, 0xfe79, 0x0, 0x1);
        gbc.writeMem(0x57bc, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x873, gbc.sp());
        EXPECT(0x57be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0070
        gbc.setState(0x76d3, 0x9f7b, 0xff30, 0xb516, 0x36dc, 0x72ba, 0x0, 0x0);
        gbc.writeMem(0x76d3, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x9f7b, gbc.sp());
        EXPECT(0x76d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0071
        gbc.setState(0x15b6, 0x6fdc, 0x6c00, 0xeaad, 0xcc82, 0xe01b, 0x1, 0x1);
        gbc.writeMem(0x15b6, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x6fdc, gbc.sp());
        EXPECT(0x15b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0072
        gbc.setState(0x934f, 0x946, 0x2f60, 0x5f9e, 0x42f2, 0x882f, 0x1, 0x0);
        gbc.writeMem(0x934f, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x946, gbc.sp());
        EXPECT(0x9351, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x934f));
        EXPECT(0xd5, gbc.readMem(0x9350));
        // CB D5 0073
        gbc.setState(0x54e3, 0x3c4b, 0x5e40, 0x9b92, 0x950a, 0x4d00, 0x1, 0x1);
        gbc.writeMem(0x54e3, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3c4b, gbc.sp());
        EXPECT(0x54e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0074
        gbc.setState(0xe1df, 0xdd44, 0xd7f0, 0x34ab, 0x7c32, 0x387a, 0x1, 0x1);
        gbc.writeMem(0xe1df, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xdd44, gbc.sp());
        EXPECT(0xe1e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1df));
        EXPECT(0xd5, gbc.readMem(0xe1e0));
        // CB D5 0075
        gbc.setState(0xc06d, 0xd915, 0x93d0, 0xe532, 0x613f, 0xfeb0, 0x0, 0x1);
        gbc.writeMem(0xc06d, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd915, gbc.sp());
        EXPECT(0xc06f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc06d));
        EXPECT(0xd5, gbc.readMem(0xc06e));
        // CB D5 0076
        gbc.setState(0xa601, 0xced, 0x7ce0, 0x4ac1, 0x430, 0xfa2f, 0x1, 0x1);
        gbc.writeMem(0xa601, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xced, gbc.sp());
        EXPECT(0xa603, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa601));
        EXPECT(0xd5, gbc.readMem(0xa602));
        // CB D5 0077
        gbc.setState(0xb448, 0x92f5, 0x4520, 0x22d2, 0x591c, 0xfe22, 0x0, 0x0);
        gbc.writeMem(0xb448, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x92f5, gbc.sp());
        EXPECT(0xb44a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb448));
        EXPECT(0xd5, gbc.readMem(0xb449));
        // CB D5 0078
        gbc.setState(0x4685, 0xf086, 0x9f30, 0x3448, 0x8202, 0xb5af, 0x1, 0x1);
        gbc.writeMem(0x4685, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf086, gbc.sp());
        EXPECT(0x4687, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0079
        gbc.setState(0x99be, 0xc5bd, 0x38c0, 0x90e9, 0xfe7c, 0x4319, 0x0, 0x1);
        gbc.writeMem(0x99be, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc5bd, gbc.sp());
        EXPECT(0x99c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99be));
        EXPECT(0xd5, gbc.readMem(0x99bf));
        // CB D5 007A
        gbc.setState(0xacf3, 0x13bd, 0x1b0, 0x54b4, 0x33cd, 0x6aad, 0x1, 0x0);
        gbc.writeMem(0xacf3, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x13bd, gbc.sp());
        EXPECT(0xacf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacf3));
        EXPECT(0xd5, gbc.readMem(0xacf4));
        // CB D5 007B
        gbc.setState(0x4570, 0xb33c, 0x4b60, 0x9845, 0x1f0f, 0xc09d, 0x1, 0x0);
        gbc.writeMem(0x4570, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb33c, gbc.sp());
        EXPECT(0x4572, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 007C
        gbc.setState(0x2f8f, 0x163d, 0xcf20, 0xa5dd, 0x593d, 0x34d6, 0x1, 0x1);
        gbc.writeMem(0x2f8f, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x163d, gbc.sp());
        EXPECT(0x2f91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 007D
        gbc.setState(0x6f33, 0x7263, 0xc60, 0xfe0e, 0xaa91, 0xf45e, 0x1, 0x0);
        gbc.writeMem(0x6f33, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x7263, gbc.sp());
        EXPECT(0x6f35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 007E
        gbc.setState(0x7eec, 0xd978, 0x9f40, 0x965b, 0x610d, 0x9866, 0x0, 0x0);
        gbc.writeMem(0x7eec, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xd978, gbc.sp());
        EXPECT(0x7eee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0080
        gbc.setState(0x219c, 0x8e44, 0x1380, 0x4a96, 0x3768, 0xb19, 0x0, 0x1);
        gbc.writeMem(0x219c, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x8e44, gbc.sp());
        EXPECT(0x219e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0081
        gbc.setState(0x915f, 0x7d6d, 0xcd20, 0x3e91, 0x5064, 0x694d, 0x1, 0x0);
        gbc.writeMem(0x915f, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x7d6d, gbc.sp());
        EXPECT(0x9161, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x915f));
        EXPECT(0xd5, gbc.readMem(0x9160));
        // CB D5 0082
        gbc.setState(0x92bc, 0xdb5, 0xeeb0, 0xc510, 0xfaa8, 0xadb, 0x0, 0x1);
        gbc.writeMem(0x92bc, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xdb5, gbc.sp());
        EXPECT(0x92be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92bc));
        EXPECT(0xd5, gbc.readMem(0x92bd));
        // CB D5 0083
        gbc.setState(0xcd93, 0xb77e, 0xf550, 0x2be5, 0x5e01, 0x55ee, 0x1, 0x0);
        gbc.writeMem(0xcd93, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xb77e, gbc.sp());
        EXPECT(0xcd95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd93));
        EXPECT(0xd5, gbc.readMem(0xcd94));
        // CB D5 0084
        gbc.setState(0x710c, 0x509d, 0xe1b0, 0x868a, 0x7ba9, 0xb0a6, 0x0, 0x1);
        gbc.writeMem(0x710c, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x509d, gbc.sp());
        EXPECT(0x710e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0085
        gbc.setState(0x1ba6, 0x3735, 0x4da0, 0xa66f, 0x8e4e, 0xf42f, 0x0, 0x1);
        gbc.writeMem(0x1ba6, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x3735, gbc.sp());
        EXPECT(0x1ba8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0086
        gbc.setState(0x6d0, 0xc2a2, 0x84f0, 0xf970, 0x68a9, 0x1386, 0x0, 0x0);
        gbc.writeMem(0x6d0, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc2a2, gbc.sp());
        EXPECT(0x6d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0087
        gbc.setState(0xeea8, 0x843, 0x1cd0, 0xd739, 0x3f3b, 0xa7ba, 0x1, 0x0);
        gbc.writeMem(0xeea8, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x843, gbc.sp());
        EXPECT(0xeeaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeea8));
        EXPECT(0xd5, gbc.readMem(0xeea9));
        // CB D5 0088
        gbc.setState(0x2b8, 0x841d, 0x8e70, 0x2fa, 0x1904, 0x8ffb, 0x1, 0x1);
        gbc.writeMem(0x2b8, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x841d, gbc.sp());
        EXPECT(0x2ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0089
        gbc.setState(0x7f67, 0x7182, 0xe7b0, 0x327a, 0xecf5, 0x123a, 0x0, 0x0);
        gbc.writeMem(0x7f67, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x7182, gbc.sp());
        EXPECT(0x7f69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 008A
        gbc.setState(0xea04, 0xa4fc, 0x1c00, 0x3cfd, 0xec5c, 0xce62, 0x0, 0x0);
        gbc.writeMem(0xea04, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa4fc, gbc.sp());
        EXPECT(0xea06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea04));
        EXPECT(0xd5, gbc.readMem(0xea05));
        // CB D5 008C
        gbc.setState(0x5c16, 0xabb9, 0x5050, 0xb2b0, 0xcab3, 0xbc64, 0x1, 0x1);
        gbc.writeMem(0x5c16, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xabb9, gbc.sp());
        EXPECT(0x5c18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 008D
        gbc.setState(0x6a6d, 0x74da, 0x5550, 0x60e0, 0xd59b, 0xa89d, 0x1, 0x1);
        gbc.writeMem(0x6a6d, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x74da, gbc.sp());
        EXPECT(0x6a6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 008E
        gbc.setState(0xab17, 0xe18e, 0xfe70, 0xea5e, 0xf82f, 0x63b7, 0x0, 0x1);
        gbc.writeMem(0xab17, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xe18e, gbc.sp());
        EXPECT(0xab19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab17));
        EXPECT(0xd5, gbc.readMem(0xab18));
        // CB D5 008F
        gbc.setState(0x1650, 0x9eb5, 0xbfd0, 0xe2ca, 0x3434, 0xb832, 0x1, 0x0);
        gbc.writeMem(0x1650, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x9eb5, gbc.sp());
        EXPECT(0x1652, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0090
        gbc.setState(0xca7a, 0x4c02, 0x31a0, 0x8487, 0xd8a8, 0x4552, 0x1, 0x1);
        gbc.writeMem(0xca7a, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x4c02, gbc.sp());
        EXPECT(0xca7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca7a));
        EXPECT(0xd5, gbc.readMem(0xca7b));
        // CB D5 0091
        gbc.setState(0x8423, 0x1211, 0x2700, 0x389f, 0xad46, 0x87a, 0x0, 0x0);
        gbc.writeMem(0x8423, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x1211, gbc.sp());
        EXPECT(0x8425, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8423));
        EXPECT(0xd5, gbc.readMem(0x8424));
        // CB D5 0092
        gbc.setState(0x5345, 0xe964, 0x1710, 0x8288, 0xec10, 0x5249, 0x0, 0x1);
        gbc.writeMem(0x5345, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xe964, gbc.sp());
        EXPECT(0x5347, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0093
        gbc.setState(0x24d7, 0x9a75, 0xe550, 0xc492, 0xa71, 0xcccf, 0x1, 0x0);
        gbc.writeMem(0x24d7, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x9a75, gbc.sp());
        EXPECT(0x24d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0094
        gbc.setState(0xd693, 0xe0cf, 0x6750, 0x4002, 0xe451, 0x9138, 0x1, 0x0);
        gbc.writeMem(0xd693, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xe0cf, gbc.sp());
        EXPECT(0xd695, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd693));
        EXPECT(0xd5, gbc.readMem(0xd694));
        // CB D5 0097
        gbc.setState(0xac73, 0xf4a4, 0x99f0, 0x6e30, 0x793e, 0xa3e4, 0x0, 0x0);
        gbc.writeMem(0xac73, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xf4a4, gbc.sp());
        EXPECT(0xac75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac73));
        EXPECT(0xd5, gbc.readMem(0xac74));
        // CB D5 0099
        gbc.setState(0x1eef, 0xca4, 0xf750, 0xb799, 0xb95d, 0x525a, 0x1, 0x1);
        gbc.writeMem(0x1eef, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xca4, gbc.sp());
        EXPECT(0x1ef1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 009A
        gbc.setState(0x27ee, 0x7052, 0xcd10, 0x737e, 0xdba3, 0x159a, 0x0, 0x1);
        gbc.writeMem(0x27ee, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7052, gbc.sp());
        EXPECT(0x27f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 009B
        gbc.setState(0x1b19, 0x44be, 0x40, 0xa985, 0x566d, 0x4d0d, 0x1, 0x1);
        gbc.writeMem(0x1b19, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x44be, gbc.sp());
        EXPECT(0x1b1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 009C
        gbc.setState(0xa653, 0x2f69, 0x9b70, 0x85e3, 0xa19c, 0xb99b, 0x0, 0x1);
        gbc.writeMem(0xa653, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x2f69, gbc.sp());
        EXPECT(0xa655, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa653));
        EXPECT(0xd5, gbc.readMem(0xa654));
        // CB D5 009D
        gbc.setState(0xbc4, 0x37b6, 0x8fd0, 0xe665, 0xc20f, 0xce2d, 0x1, 0x1);
        gbc.writeMem(0xbc4, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x37b6, gbc.sp());
        EXPECT(0xbc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 009E
        gbc.setState(0xa7f6, 0x8f29, 0x6e0, 0x7d95, 0x2f78, 0x571a, 0x0, 0x1);
        gbc.writeMem(0xa7f6, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x8f29, gbc.sp());
        EXPECT(0xa7f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7f6));
        EXPECT(0xd5, gbc.readMem(0xa7f7));
        // CB D5 009F
        gbc.setState(0xcbfb, 0x1868, 0x9f30, 0xae6b, 0xa117, 0xc07f, 0x0, 0x0);
        gbc.writeMem(0xcbfb, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x1868, gbc.sp());
        EXPECT(0xcbfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbfb));
        EXPECT(0xd5, gbc.readMem(0xcbfc));
        // CB D5 00A0
        gbc.setState(0xec2e, 0x7543, 0x210, 0xed3d, 0x3e22, 0x554, 0x0, 0x1);
        gbc.writeMem(0xec2e, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7543, gbc.sp());
        EXPECT(0xec30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec2e));
        EXPECT(0xd5, gbc.readMem(0xec2f));
        // CB D5 00A1
        gbc.setState(0xa88, 0x8922, 0x8f50, 0x702, 0x3c9f, 0xaaf6, 0x0, 0x0);
        gbc.writeMem(0xa88, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x8922, gbc.sp());
        EXPECT(0xa8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 00A2
        gbc.setState(0xcce7, 0x3933, 0xde10, 0xe1dc, 0x6bb8, 0xe4ac, 0x0, 0x1);
        gbc.writeMem(0xcce7, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x3933, gbc.sp());
        EXPECT(0xcce9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcce7));
        EXPECT(0xd5, gbc.readMem(0xcce8));
        // CB D5 00A3
        gbc.setState(0xa25, 0x4422, 0x5bf0, 0xfb3e, 0x1d0f, 0xf22e, 0x1, 0x0);
        gbc.writeMem(0xa25, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x4422, gbc.sp());
        EXPECT(0xa27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 00A4
        gbc.setState(0xb6b8, 0x4eb7, 0xc550, 0x220, 0x6e65, 0xbd5e, 0x0, 0x1);
        gbc.writeMem(0xb6b8, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4eb7, gbc.sp());
        EXPECT(0xb6ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6b8));
        EXPECT(0xd5, gbc.readMem(0xb6b9));
        // CB D5 00A5
        gbc.setState(0x95d2, 0x1d7c, 0xa330, 0xa030, 0x26bd, 0x391b, 0x1, 0x0);
        gbc.writeMem(0x95d2, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x1d7c, gbc.sp());
        EXPECT(0x95d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95d2));
        EXPECT(0xd5, gbc.readMem(0x95d3));
        // CB D5 00A6
        gbc.setState(0xca97, 0xa6e8, 0x14a0, 0x6501, 0x3cad, 0x7cb3, 0x0, 0x0);
        gbc.writeMem(0xca97, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa6e8, gbc.sp());
        EXPECT(0xca99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca97));
        EXPECT(0xd5, gbc.readMem(0xca98));
        // CB D5 00A7
        gbc.setState(0xa5de, 0x6aa9, 0xca0, 0x2173, 0xf4da, 0xb6, 0x1, 0x0);
        gbc.writeMem(0xa5de, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x6aa9, gbc.sp());
        EXPECT(0xa5e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5de));
        EXPECT(0xd5, gbc.readMem(0xa5df));
        // CB D5 00A8
        gbc.setState(0xb264, 0xa496, 0x7d0, 0xf2d2, 0x32e1, 0x7a4c, 0x0, 0x1);
        gbc.writeMem(0xb264, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xa496, gbc.sp());
        EXPECT(0xb266, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb264));
        EXPECT(0xd5, gbc.readMem(0xb265));
        // CB D5 00A9
        gbc.setState(0x83e8, 0x726d, 0x5170, 0xb970, 0xbe08, 0xd4c6, 0x0, 0x0);
        gbc.writeMem(0x83e8, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x726d, gbc.sp());
        EXPECT(0x83ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83e8));
        EXPECT(0xd5, gbc.readMem(0x83e9));
        // CB D5 00AB
        gbc.setState(0xd9bb, 0x85d7, 0x9cf0, 0x9752, 0x9c0f, 0x7ca2, 0x1, 0x0);
        gbc.writeMem(0xd9bb, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x85d7, gbc.sp());
        EXPECT(0xd9bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9bb));
        EXPECT(0xd5, gbc.readMem(0xd9bc));
        // CB D5 00AC
        gbc.setState(0x3dec, 0xf971, 0x22a0, 0x5fa6, 0x6b3, 0x3bf5, 0x1, 0x0);
        gbc.writeMem(0x3dec, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf971, gbc.sp());
        EXPECT(0x3dee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 00AD
        gbc.setState(0xe004, 0x7547, 0x5ae0, 0xa7a, 0xdf31, 0xe24b, 0x1, 0x1);
        gbc.writeMem(0xe004, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x7547, gbc.sp());
        EXPECT(0xe006, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe004));
        EXPECT(0xd5, gbc.readMem(0xe005));
        // CB D5 00AE
        gbc.setState(0x155a, 0x8eb3, 0xeea0, 0x1aea, 0xd293, 0x4ccb, 0x1, 0x1);
        gbc.writeMem(0x155a, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x8eb3, gbc.sp());
        EXPECT(0x155c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 00AF
        gbc.setState(0x3a2d, 0x60b, 0x8c90, 0x229a, 0x8e7e, 0x26b9, 0x1, 0x0);
        gbc.writeMem(0x3a2d, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x60b, gbc.sp());
        EXPECT(0x3a2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 00B1
        gbc.setState(0x9868, 0xc67e, 0xc750, 0xbfaf, 0x1e9e, 0x1af4, 0x1, 0x1);
        gbc.writeMem(0x9868, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc67e, gbc.sp());
        EXPECT(0x986a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9868));
        EXPECT(0xd5, gbc.readMem(0x9869));
        // CB D5 00B2
        gbc.setState(0x3f1f, 0x418e, 0x7d90, 0x8a7d, 0x65f3, 0x659b, 0x0, 0x1);
        gbc.writeMem(0x3f1f, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x418e, gbc.sp());
        EXPECT(0x3f21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 00B3
        gbc.setState(0xc9e1, 0x457e, 0xd80, 0x2cd7, 0xac71, 0x803c, 0x0, 0x0);
        gbc.writeMem(0xc9e1, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x457e, gbc.sp());
        EXPECT(0xc9e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9e1));
        EXPECT(0xd5, gbc.readMem(0xc9e2));
        // CB D5 00B4
        gbc.setState(0xeb97, 0xec9, 0x8a70, 0x215f, 0xdbb1, 0xdb69, 0x1, 0x0);
        gbc.writeMem(0xeb97, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xec9, gbc.sp());
        EXPECT(0xeb99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb97));
        EXPECT(0xd5, gbc.readMem(0xeb98));
        // CB D5 00B5
        gbc.setState(0xabd9, 0x4e79, 0xe730, 0x7b30, 0x194, 0xf5c3, 0x1, 0x1);
        gbc.writeMem(0xabd9, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x4e79, gbc.sp());
        EXPECT(0xabdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabd9));
        EXPECT(0xd5, gbc.readMem(0xabda));
        // CB D5 00B6
        gbc.setState(0x9994, 0xaf3a, 0xe580, 0xab96, 0x66a6, 0x127d, 0x0, 0x0);
        gbc.writeMem(0x9994, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xaf3a, gbc.sp());
        EXPECT(0x9996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9994));
        EXPECT(0xd5, gbc.readMem(0x9995));
        // CB D5 00B7
        gbc.setState(0xa150, 0x2ae6, 0xdb00, 0xfdd8, 0x144e, 0x33a8, 0x1, 0x1);
        gbc.writeMem(0xa150, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x2ae6, gbc.sp());
        EXPECT(0xa152, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa150));
        EXPECT(0xd5, gbc.readMem(0xa151));
        // CB D5 00B8
        gbc.setState(0x1754, 0x55f0, 0x6ef0, 0xa76e, 0x4e7c, 0x46b0, 0x1, 0x0);
        gbc.writeMem(0x1754, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x55f0, gbc.sp());
        EXPECT(0x1756, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 00B9
        gbc.setState(0x32f1, 0x599c, 0x7e40, 0xca17, 0x1e21, 0xb616, 0x1, 0x0);
        gbc.writeMem(0x32f1, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x599c, gbc.sp());
        EXPECT(0x32f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 00BA
        gbc.setState(0x3159, 0x96bc, 0x87a0, 0x3eed, 0xb5f9, 0xca09, 0x1, 0x0);
        gbc.writeMem(0x3159, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x96bc, gbc.sp());
        EXPECT(0x315b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 00BB
        gbc.setState(0x3761, 0x388d, 0xce80, 0x807e, 0x964d, 0x1aee, 0x0, 0x0);
        gbc.writeMem(0x3761, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x388d, gbc.sp());
        EXPECT(0x3763, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 00BC
        gbc.setState(0x4aa, 0x5e3e, 0xd70, 0x3216, 0xfe8d, 0xc0bb, 0x0, 0x1);
        gbc.writeMem(0x4aa, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x5e3e, gbc.sp());
        EXPECT(0x4ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 00BD
        gbc.setState(0xa000, 0x89eb, 0xb4d0, 0x4710, 0x8b84, 0x267b, 0x1, 0x1);
        gbc.writeMem(0xa000, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x89eb, gbc.sp());
        EXPECT(0xa002, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa000));
        EXPECT(0xd5, gbc.readMem(0xa001));
        // CB D5 00BE
        gbc.setState(0x7623, 0xe451, 0x7030, 0x62d3, 0x1a07, 0x14ab, 0x0, 0x1);
        gbc.writeMem(0x7623, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xe451, gbc.sp());
        EXPECT(0x7625, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 00BF
        gbc.setState(0xb4fe, 0xb9e8, 0xada0, 0x1446, 0xc0ce, 0xf1e9, 0x1, 0x1);
        gbc.writeMem(0xb4fe, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xb9e8, gbc.sp());
        EXPECT(0xb500, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4fe));
        EXPECT(0xd5, gbc.readMem(0xb4ff));
        // CB D5 00C0
        gbc.setState(0xdee9, 0x775, 0x15c0, 0x6617, 0x5aa3, 0xb19a, 0x1, 0x0);
        gbc.writeMem(0xdee9, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x775, gbc.sp());
        EXPECT(0xdeeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdee9));
        EXPECT(0xd5, gbc.readMem(0xdeea));
        // CB D5 00C1
        gbc.setState(0xbce9, 0x986, 0xa830, 0x3ee4, 0xb08d, 0x95b, 0x0, 0x1);
        gbc.writeMem(0xbce9, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x986, gbc.sp());
        EXPECT(0xbceb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbce9));
        EXPECT(0xd5, gbc.readMem(0xbcea));
        // CB D5 00C2
        gbc.setState(0x63be, 0x7ab5, 0xde00, 0xafc8, 0x3459, 0x1962, 0x1, 0x1);
        gbc.writeMem(0x63be, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x7ab5, gbc.sp());
        EXPECT(0x63c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 00C3
        gbc.setState(0x1346, 0x8e7f, 0xec10, 0x54c9, 0x71be, 0x427d, 0x1, 0x0);
        gbc.writeMem(0x1346, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x8e7f, gbc.sp());
        EXPECT(0x1348, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 00C5
        gbc.setState(0xb01d, 0xea85, 0xb80, 0xa0b3, 0x81f3, 0x7fa7, 0x0, 0x1);
        gbc.writeMem(0xb01d, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xea85, gbc.sp());
        EXPECT(0xb01f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb01d));
        EXPECT(0xd5, gbc.readMem(0xb01e));
        // CB D5 00C6
        gbc.setState(0x6a2f, 0x6256, 0xa980, 0xcb4c, 0x4305, 0x3107, 0x1, 0x1);
        gbc.writeMem(0x6a2f, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6256, gbc.sp());
        EXPECT(0x6a31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 00C8
        gbc.setState(0x93a2, 0x1f56, 0x3670, 0xdb9b, 0x6a41, 0x460e, 0x1, 0x0);
        gbc.writeMem(0x93a2, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x1f56, gbc.sp());
        EXPECT(0x93a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93a2));
        EXPECT(0xd5, gbc.readMem(0x93a3));
        // CB D5 00C9
        gbc.setState(0x4f59, 0xdb62, 0xf160, 0xb3eb, 0xf340, 0xaa09, 0x1, 0x0);
        gbc.writeMem(0x4f59, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xdb62, gbc.sp());
        EXPECT(0x4f5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 00CA
        gbc.setState(0xd0c1, 0xeb50, 0x5840, 0x16e2, 0x61a6, 0x380d, 0x0, 0x1);
        gbc.writeMem(0xd0c1, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xeb50, gbc.sp());
        EXPECT(0xd0c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0c1));
        EXPECT(0xd5, gbc.readMem(0xd0c2));
        // CB D5 00CB
        gbc.setState(0xb747, 0xc5eb, 0x2520, 0x2b7f, 0xe76f, 0x3461, 0x1, 0x1);
        gbc.writeMem(0xb747, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc5eb, gbc.sp());
        EXPECT(0xb749, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb747));
        EXPECT(0xd5, gbc.readMem(0xb748));
        // CB D5 00CC
        gbc.setState(0x97ab, 0xbe8c, 0x61b0, 0xb212, 0x191e, 0x8db0, 0x1, 0x0);
        gbc.writeMem(0x97ab, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xbe8c, gbc.sp());
        EXPECT(0x97ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97ab));
        EXPECT(0xd5, gbc.readMem(0x97ac));
        // CB D5 00CD
        gbc.setState(0xbcf0, 0x910f, 0x6890, 0xe810, 0x301b, 0xf8f6, 0x1, 0x0);
        gbc.writeMem(0xbcf0, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x910f, gbc.sp());
        EXPECT(0xbcf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcf0));
        EXPECT(0xd5, gbc.readMem(0xbcf1));
        // CB D5 00CE
        gbc.setState(0xa35f, 0x8f1e, 0xec30, 0x1387, 0x7214, 0xd460, 0x1, 0x0);
        gbc.writeMem(0xa35f, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x8f1e, gbc.sp());
        EXPECT(0xa361, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa35f));
        EXPECT(0xd5, gbc.readMem(0xa360));
        // CB D5 00CF
        gbc.setState(0x86f8, 0xaec1, 0x2510, 0x6caa, 0x9368, 0x8414, 0x0, 0x0);
        gbc.writeMem(0x86f8, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xaec1, gbc.sp());
        EXPECT(0x86fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86f8));
        EXPECT(0xd5, gbc.readMem(0x86f9));
        // CB D5 00D0
        gbc.setState(0x81bd, 0xfe6c, 0x7d30, 0xc905, 0x332b, 0x3bdd, 0x1, 0x0);
        gbc.writeMem(0x81bd, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xfe6c, gbc.sp());
        EXPECT(0x81bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81bd));
        EXPECT(0xd5, gbc.readMem(0x81be));
        // CB D5 00D2
        gbc.setState(0xe92c, 0x6da6, 0x2150, 0xd6a2, 0x6cda, 0xf488, 0x1, 0x0);
        gbc.writeMem(0xe92c, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x6da6, gbc.sp());
        EXPECT(0xe92e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe92c));
        EXPECT(0xd5, gbc.readMem(0xe92d));
        // CB D5 00D3
        gbc.setState(0x886d, 0x206a, 0x6f80, 0x8832, 0x62d8, 0x8532, 0x0, 0x1);
        gbc.writeMem(0x886d, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x206a, gbc.sp());
        EXPECT(0x886f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x886d));
        EXPECT(0xd5, gbc.readMem(0x886e));
        // CB D5 00D4
        gbc.setState(0xcb93, 0xf016, 0x98f0, 0x4b9a, 0xf454, 0x77e9, 0x0, 0x1);
        gbc.writeMem(0xcb93, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xf016, gbc.sp());
        EXPECT(0xcb95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb93));
        EXPECT(0xd5, gbc.readMem(0xcb94));
        // CB D5 00D5
        gbc.setState(0xaf18, 0x6a06, 0xe750, 0x8f99, 0xe4df, 0xb89b, 0x1, 0x0);
        gbc.writeMem(0xaf18, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x6a06, gbc.sp());
        EXPECT(0xaf1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf18));
        EXPECT(0xd5, gbc.readMem(0xaf19));
        // CB D5 00D6
        gbc.setState(0x5cbf, 0xf370, 0x480, 0xa255, 0xdb91, 0x8bb8, 0x0, 0x1);
        gbc.writeMem(0x5cbf, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf370, gbc.sp());
        EXPECT(0x5cc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 00D7
        gbc.setState(0xe51f, 0x215f, 0x59f0, 0x261, 0x483c, 0x2c9c, 0x0, 0x0);
        gbc.writeMem(0xe51f, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x215f, gbc.sp());
        EXPECT(0xe521, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe51f));
        EXPECT(0xd5, gbc.readMem(0xe520));
        // CB D5 00D8
        gbc.setState(0x3b83, 0x45c2, 0x7fb0, 0xfc4e, 0xe6d5, 0x4f34, 0x1, 0x0);
        gbc.writeMem(0x3b83, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x45c2, gbc.sp());
        EXPECT(0x3b85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 00D9
        gbc.setState(0x4a87, 0xa679, 0x1270, 0x489, 0x2394, 0xd233, 0x0, 0x0);
        gbc.writeMem(0x4a87, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xa679, gbc.sp());
        EXPECT(0x4a89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 00DA
        gbc.setState(0x2f62, 0x12b, 0x4ab0, 0x7331, 0x39c7, 0xbde8, 0x0, 0x0);
        gbc.writeMem(0x2f62, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x12b, gbc.sp());
        EXPECT(0x2f64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 00DB
        gbc.setState(0x878b, 0xddaf, 0x70a0, 0xf500, 0x8185, 0x584c, 0x1, 0x1);
        gbc.writeMem(0x878b, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xddaf, gbc.sp());
        EXPECT(0x878d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x878b));
        EXPECT(0xd5, gbc.readMem(0x878c));
        // CB D5 00DC
        gbc.setState(0x6e0c, 0xe532, 0xb6b0, 0x871f, 0x71d9, 0x2b52, 0x1, 0x1);
        gbc.writeMem(0x6e0c, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xe532, gbc.sp());
        EXPECT(0x6e0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 00DD
        gbc.setState(0xa89e, 0xa4a3, 0x8490, 0xe14d, 0x8ca4, 0xbb6a, 0x0, 0x1);
        gbc.writeMem(0xa89e, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xa4a3, gbc.sp());
        EXPECT(0xa8a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa89e));
        EXPECT(0xd5, gbc.readMem(0xa89f));
        // CB D5 00DF
        gbc.setState(0x3cb6, 0x23c3, 0x2840, 0xe94a, 0x74ad, 0x97d8, 0x0, 0x0);
        gbc.writeMem(0x3cb6, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x23c3, gbc.sp());
        EXPECT(0x3cb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 00E0
        gbc.setState(0xb64d, 0x4d9a, 0x7820, 0x2b6, 0xdf20, 0x3ae8, 0x1, 0x1);
        gbc.writeMem(0xb64d, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x4d9a, gbc.sp());
        EXPECT(0xb64f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb64d));
        EXPECT(0xd5, gbc.readMem(0xb64e));
        // CB D5 00E1
        gbc.setState(0x3cc, 0xa952, 0x4480, 0x8d09, 0xf43b, 0xca98, 0x1, 0x1);
        gbc.writeMem(0x3cc, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xa952, gbc.sp());
        EXPECT(0x3ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 00E2
        gbc.setState(0x412f, 0x977a, 0x1ce0, 0xd399, 0x541d, 0xab13, 0x0, 0x1);
        gbc.writeMem(0x412f, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x977a, gbc.sp());
        EXPECT(0x4131, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 00E3
        gbc.setState(0x529, 0xf9c2, 0xae70, 0x8deb, 0x57cd, 0x4903, 0x0, 0x0);
        gbc.writeMem(0x529, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf9c2, gbc.sp());
        EXPECT(0x52b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 00E4
        gbc.setState(0x988c, 0xd4b4, 0x5650, 0xe09e, 0x1221, 0xe5fa, 0x0, 0x0);
        gbc.writeMem(0x988c, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xd4b4, gbc.sp());
        EXPECT(0x988e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x988c));
        EXPECT(0xd5, gbc.readMem(0x988d));
        // CB D5 00E5
        gbc.setState(0x9087, 0x11d5, 0x4e30, 0x95f3, 0xc705, 0xa900, 0x0, 0x0);
        gbc.writeMem(0x9087, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x11d5, gbc.sp());
        EXPECT(0x9089, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9087));
        EXPECT(0xd5, gbc.readMem(0x9088));
        // CB D5 00E6
        gbc.setState(0x4fb1, 0xf7c6, 0x7b80, 0x7044, 0xeae9, 0xdce5, 0x1, 0x1);
        gbc.writeMem(0x4fb1, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xf7c6, gbc.sp());
        EXPECT(0x4fb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 00E7
        gbc.setState(0x3328, 0xb029, 0xdc80, 0x8f23, 0x6b37, 0xfdbe, 0x1, 0x1);
        gbc.writeMem(0x3328, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xb029, gbc.sp());
        EXPECT(0x332a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 00E8
        gbc.setState(0x93c7, 0xe4af, 0xd070, 0xfa6b, 0xcd2a, 0xa247, 0x1, 0x0);
        gbc.writeMem(0x93c7, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe4af, gbc.sp());
        EXPECT(0x93c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93c7));
        EXPECT(0xd5, gbc.readMem(0x93c8));
        // CB D5 00E9
        gbc.setState(0x230, 0x5756, 0x1120, 0x4d17, 0x410a, 0xb1c1, 0x1, 0x1);
        gbc.writeMem(0x230, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5756, gbc.sp());
        EXPECT(0x232, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 00EA
        gbc.setState(0x4cda, 0x4074, 0x3850, 0xda8f, 0x5369, 0xadcc, 0x0, 0x0);
        gbc.writeMem(0x4cda, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x4074, gbc.sp());
        EXPECT(0x4cdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 00EB
        gbc.setState(0x4a44, 0xdefe, 0x5cb0, 0xf856, 0x332e, 0xe52d, 0x0, 0x0);
        gbc.writeMem(0x4a44, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xdefe, gbc.sp());
        EXPECT(0x4a46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 00EE
        gbc.setState(0x5ff8, 0x68bd, 0x2400, 0x87d4, 0xf270, 0x4680, 0x0, 0x0);
        gbc.writeMem(0x5ff8, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x68bd, gbc.sp());
        EXPECT(0x5ffa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 00EF
        gbc.setState(0x596c, 0x271e, 0x9920, 0x19e4, 0xa3a0, 0x9c90, 0x0, 0x0);
        gbc.writeMem(0x596c, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x271e, gbc.sp());
        EXPECT(0x596e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 00F0
        gbc.setState(0x8e1f, 0xf62e, 0xc3f0, 0xcc03, 0x8b6c, 0x79ed, 0x0, 0x0);
        gbc.writeMem(0x8e1f, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xf62e, gbc.sp());
        EXPECT(0x8e21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e1f));
        EXPECT(0xd5, gbc.readMem(0x8e20));
        // CB D5 00F1
        gbc.setState(0x5062, 0x932e, 0x22b0, 0x248e, 0x3d56, 0x9800, 0x0, 0x0);
        gbc.writeMem(0x5062, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x932e, gbc.sp());
        EXPECT(0x5064, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 00F2
        gbc.setState(0x14c7, 0xbbea, 0x1c90, 0x178d, 0x647c, 0x9ada, 0x1, 0x1);
        gbc.writeMem(0x14c7, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xbbea, gbc.sp());
        EXPECT(0x14c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 00F3
        gbc.setState(0x8a13, 0xecdf, 0xa40, 0xd580, 0x47e0, 0xddb1, 0x0, 0x0);
        gbc.writeMem(0x8a13, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xecdf, gbc.sp());
        EXPECT(0x8a15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a13));
        EXPECT(0xd5, gbc.readMem(0x8a14));
        // CB D5 00F4
        gbc.setState(0x898f, 0x8869, 0x1f80, 0x7345, 0x82bb, 0x3421, 0x1, 0x1);
        gbc.writeMem(0x898f, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x8869, gbc.sp());
        EXPECT(0x8991, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x898f));
        EXPECT(0xd5, gbc.readMem(0x8990));
        // CB D5 00F5
        gbc.setState(0x6ea9, 0x97e9, 0xf40, 0xeed7, 0xb07e, 0x4853, 0x0, 0x1);
        gbc.writeMem(0x6ea9, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x97e9, gbc.sp());
        EXPECT(0x6eab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 00F6
        gbc.setState(0x90c4, 0x8fae, 0xaea0, 0x586d, 0xe1ed, 0xface, 0x0, 0x0);
        gbc.writeMem(0x90c4, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8fae, gbc.sp());
        EXPECT(0x90c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90c4));
        EXPECT(0xd5, gbc.readMem(0x90c5));
        // CB D5 00F7
        gbc.setState(0x1d0d, 0x8107, 0x1e20, 0x1a3f, 0x21c8, 0x230a, 0x0, 0x1);
        gbc.writeMem(0x1d0d, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x8107, gbc.sp());
        EXPECT(0x1d0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 00F8
        gbc.setState(0x4c6a, 0xe78d, 0x5d30, 0xc83e, 0xf3fb, 0xfb4a, 0x1, 0x1);
        gbc.writeMem(0x4c6a, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe78d, gbc.sp());
        EXPECT(0x4c6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 00F9
        gbc.setState(0x6b0d, 0xe856, 0x7e30, 0x509b, 0x4de8, 0x9e76, 0x1, 0x0);
        gbc.writeMem(0x6b0d, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xe856, gbc.sp());
        EXPECT(0x6b0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 00FA
        gbc.setState(0xb1f2, 0x7323, 0x7c10, 0xeb7c, 0x8768, 0x44fb, 0x1, 0x0);
        gbc.writeMem(0xb1f2, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x7323, gbc.sp());
        EXPECT(0xb1f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1f2));
        EXPECT(0xd5, gbc.readMem(0xb1f3));
        // CB D5 00FB
        gbc.setState(0x34b2, 0x2eac, 0xc040, 0xb1ad, 0xe392, 0xe552, 0x1, 0x0);
        gbc.writeMem(0x34b2, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x2eac, gbc.sp());
        EXPECT(0x34b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 00FC
        gbc.setState(0x78a5, 0xdc31, 0x2040, 0xf25a, 0x9e52, 0xd24a, 0x0, 0x1);
        gbc.writeMem(0x78a5, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xdc31, gbc.sp());
        EXPECT(0x78a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 00FD
        gbc.setState(0xa3e2, 0xc9bc, 0x68b0, 0x6e79, 0xf49b, 0x3b11, 0x1, 0x1);
        gbc.writeMem(0xa3e2, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xc9bc, gbc.sp());
        EXPECT(0xa3e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3e2));
        EXPECT(0xd5, gbc.readMem(0xa3e3));
        // CB D5 00FE
        gbc.setState(0x42fe, 0xbc55, 0x8b80, 0x28b3, 0xb277, 0xa1e1, 0x1, 0x1);
        gbc.writeMem(0x42fe, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xbc55, gbc.sp());
        EXPECT(0x4300, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 00FF
        gbc.setState(0x4734, 0xeec2, 0x2700, 0x59f4, 0x8c7a, 0x910, 0x1, 0x1);
        gbc.writeMem(0x4734, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xeec2, gbc.sp());
        EXPECT(0x4736, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0100
        gbc.setState(0xfff, 0x1312, 0x2b90, 0x911a, 0x609f, 0xf147, 0x1, 0x1);
        gbc.writeMem(0xfff, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1312, gbc.sp());
        EXPECT(0x1001, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0101
        gbc.setState(0xa89, 0xd83e, 0x51b0, 0x7268, 0xbaab, 0x471f, 0x1, 0x0);
        gbc.writeMem(0xa89, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xd83e, gbc.sp());
        EXPECT(0xa8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0102
        gbc.setState(0x45c2, 0xee69, 0x6c0, 0x5655, 0x609c, 0x9d72, 0x0, 0x1);
        gbc.writeMem(0x45c2, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xee69, gbc.sp());
        EXPECT(0x45c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0103
        gbc.setState(0x5fd8, 0xcb25, 0x790, 0x9a3b, 0xb085, 0x2133, 0x0, 0x0);
        gbc.writeMem(0x5fd8, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xcb25, gbc.sp());
        EXPECT(0x5fda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0104
        gbc.setState(0x2f13, 0x41ab, 0x58f0, 0x3660, 0x151f, 0x7ba0, 0x1, 0x0);
        gbc.writeMem(0x2f13, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x41ab, gbc.sp());
        EXPECT(0x2f15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0105
        gbc.setState(0x671c, 0xc8f2, 0x4650, 0xd002, 0x791b, 0x486e, 0x0, 0x0);
        gbc.writeMem(0x671c, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xc8f2, gbc.sp());
        EXPECT(0x671e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0106
        gbc.setState(0xa7df, 0x7a8c, 0x8590, 0xa29a, 0xed96, 0x9661, 0x0, 0x1);
        gbc.writeMem(0xa7df, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7a8c, gbc.sp());
        EXPECT(0xa7e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7df));
        EXPECT(0xd5, gbc.readMem(0xa7e0));
        // CB D5 0107
        gbc.setState(0xd986, 0x8cc4, 0x8160, 0xfaa9, 0xa457, 0x629e, 0x1, 0x1);
        gbc.writeMem(0xd986, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x8cc4, gbc.sp());
        EXPECT(0xd988, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd986));
        EXPECT(0xd5, gbc.readMem(0xd987));
        // CB D5 0108
        gbc.setState(0x7609, 0x1b7, 0xc980, 0x1aec, 0x1bb4, 0x7453, 0x0, 0x1);
        gbc.writeMem(0x7609, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x1b7, gbc.sp());
        EXPECT(0x760b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0109
        gbc.setState(0xbd19, 0x8268, 0x4660, 0x30a4, 0x1e86, 0x17f2, 0x0, 0x0);
        gbc.writeMem(0xbd19, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x8268, gbc.sp());
        EXPECT(0xbd1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd19));
        EXPECT(0xd5, gbc.readMem(0xbd1a));
        // CB D5 010A
        gbc.setState(0xd753, 0xfb78, 0x4e40, 0xe85b, 0x848a, 0xc184, 0x0, 0x0);
        gbc.writeMem(0xd753, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xfb78, gbc.sp());
        EXPECT(0xd755, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd753));
        EXPECT(0xd5, gbc.readMem(0xd754));
        // CB D5 010B
        gbc.setState(0xbdee, 0x63f5, 0x64f0, 0x346a, 0xb13e, 0x2b6f, 0x1, 0x0);
        gbc.writeMem(0xbdee, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x63f5, gbc.sp());
        EXPECT(0xbdf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdee));
        EXPECT(0xd5, gbc.readMem(0xbdef));
        // CB D5 010C
        gbc.setState(0x16b1, 0x9bda, 0xb840, 0xcb4a, 0x4fab, 0xfeeb, 0x0, 0x1);
        gbc.writeMem(0x16b1, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9bda, gbc.sp());
        EXPECT(0x16b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 010D
        gbc.setState(0xba5, 0xfb6e, 0xe840, 0xc5c1, 0x1bdf, 0xf140, 0x0, 0x0);
        gbc.writeMem(0xba5, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xfb6e, gbc.sp());
        EXPECT(0xba7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 010E
        gbc.setState(0x2a63, 0xfc49, 0x9c0, 0x5833, 0xad71, 0x1c57, 0x1, 0x1);
        gbc.writeMem(0x2a63, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xfc49, gbc.sp());
        EXPECT(0x2a65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 010F
        gbc.setState(0xebe1, 0x649, 0x20b0, 0xc7ec, 0x37ea, 0x1807, 0x1, 0x0);
        gbc.writeMem(0xebe1, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x649, gbc.sp());
        EXPECT(0xebe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebe1));
        EXPECT(0xd5, gbc.readMem(0xebe2));
        // CB D5 0110
        gbc.setState(0x1e45, 0x442f, 0xca20, 0x72a0, 0xd575, 0xd4c0, 0x0, 0x1);
        gbc.writeMem(0x1e45, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x442f, gbc.sp());
        EXPECT(0x1e47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0111
        gbc.setState(0x1a3d, 0xc5fa, 0x6b40, 0x1309, 0xb359, 0x3026, 0x0, 0x1);
        gbc.writeMem(0x1a3d, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc5fa, gbc.sp());
        EXPECT(0x1a3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0112
        gbc.setState(0x192d, 0x15a2, 0x54e0, 0xf8ae, 0xa93f, 0xab40, 0x1, 0x1);
        gbc.writeMem(0x192d, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x15a2, gbc.sp());
        EXPECT(0x192f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0113
        gbc.setState(0xd5ee, 0x8433, 0x9480, 0x4548, 0x313b, 0x7a8, 0x0, 0x0);
        gbc.writeMem(0xd5ee, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x8433, gbc.sp());
        EXPECT(0xd5f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5ee));
        EXPECT(0xd5, gbc.readMem(0xd5ef));
        // CB D5 0114
        gbc.setState(0x9f85, 0x495b, 0x9ae0, 0xe75d, 0x52cd, 0x266e, 0x1, 0x0);
        gbc.writeMem(0x9f85, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x495b, gbc.sp());
        EXPECT(0x9f87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f85));
        EXPECT(0xd5, gbc.readMem(0x9f86));
        // CB D5 0116
        gbc.setState(0x10c9, 0xa1a0, 0xf230, 0x834d, 0xcf41, 0xb57c, 0x1, 0x0);
        gbc.writeMem(0x10c9, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa1a0, gbc.sp());
        EXPECT(0x10cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0117
        gbc.setState(0x42a2, 0xf8cd, 0x8230, 0xfa72, 0x6d14, 0xa3d6, 0x1, 0x0);
        gbc.writeMem(0x42a2, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xf8cd, gbc.sp());
        EXPECT(0x42a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0119
        gbc.setState(0xaabd, 0xfeac, 0x4080, 0xafe0, 0x1b71, 0x22b8, 0x1, 0x0);
        gbc.writeMem(0xaabd, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xfeac, gbc.sp());
        EXPECT(0xaabf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaabd));
        EXPECT(0xd5, gbc.readMem(0xaabe));
        // CB D5 011A
        gbc.setState(0x2df, 0xd38f, 0xac30, 0x76e5, 0xb670, 0x1e4b, 0x1, 0x1);
        gbc.writeMem(0x2df, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xd38f, gbc.sp());
        EXPECT(0x2e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 011B
        gbc.setState(0xbc51, 0x72ff, 0x6f40, 0xf833, 0x944d, 0x134d, 0x1, 0x0);
        gbc.writeMem(0xbc51, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x72ff, gbc.sp());
        EXPECT(0xbc53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc51));
        EXPECT(0xd5, gbc.readMem(0xbc52));
        // CB D5 011C
        gbc.setState(0x96fa, 0x94f8, 0x37c0, 0x33f2, 0x6a6d, 0x1249, 0x0, 0x1);
        gbc.writeMem(0x96fa, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x94f8, gbc.sp());
        EXPECT(0x96fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96fa));
        EXPECT(0xd5, gbc.readMem(0x96fb));
        // CB D5 011D
        gbc.setState(0x2423, 0x51ec, 0x7150, 0x5555, 0x9ce6, 0x11d0, 0x0, 0x0);
        gbc.writeMem(0x2423, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x51ec, gbc.sp());
        EXPECT(0x2425, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 011E
        gbc.setState(0xce52, 0xb83a, 0x13f0, 0xb53a, 0x4228, 0x6705, 0x1, 0x0);
        gbc.writeMem(0xce52, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xb83a, gbc.sp());
        EXPECT(0xce54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce52));
        EXPECT(0xd5, gbc.readMem(0xce53));
        // CB D5 011F
        gbc.setState(0x54bf, 0x2f9f, 0x2880, 0xca6b, 0xa55a, 0xf963, 0x0, 0x0);
        gbc.writeMem(0x54bf, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x2f9f, gbc.sp());
        EXPECT(0x54c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0120
        gbc.setState(0x8d70, 0xaf04, 0xefe0, 0x80b5, 0x145f, 0x98a6, 0x0, 0x1);
        gbc.writeMem(0x8d70, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xaf04, gbc.sp());
        EXPECT(0x8d72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d70));
        EXPECT(0xd5, gbc.readMem(0x8d71));
        // CB D5 0121
        gbc.setState(0x6c8b, 0xfea9, 0x5840, 0x69ce, 0x698f, 0x1fc1, 0x0, 0x0);
        gbc.writeMem(0x6c8b, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xfea9, gbc.sp());
        EXPECT(0x6c8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0122
        gbc.setState(0x738, 0x1ed6, 0x23e0, 0x1897, 0xa02b, 0x70fc, 0x1, 0x1);
        gbc.writeMem(0x738, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x1ed6, gbc.sp());
        EXPECT(0x73a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0123
        gbc.setState(0xdcfb, 0x9b0c, 0xab90, 0xbfce, 0x18c1, 0x3ff9, 0x1, 0x1);
        gbc.writeMem(0xdcfb, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x9b0c, gbc.sp());
        EXPECT(0xdcfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcfb));
        EXPECT(0xd5, gbc.readMem(0xdcfc));
        // CB D5 0124
        gbc.setState(0x27a2, 0x63cf, 0x9ff0, 0x1561, 0x7a7f, 0xd6c0, 0x0, 0x0);
        gbc.writeMem(0x27a2, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x63cf, gbc.sp());
        EXPECT(0x27a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0125
        gbc.setState(0xea45, 0xeb51, 0xcd90, 0x110c, 0xe1d1, 0xc74b, 0x0, 0x0);
        gbc.writeMem(0xea45, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xeb51, gbc.sp());
        EXPECT(0xea47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea45));
        EXPECT(0xd5, gbc.readMem(0xea46));
        // CB D5 0126
        gbc.setState(0x547a, 0xca16, 0xc7e0, 0x7244, 0xdc4, 0x5a6a, 0x0, 0x0);
        gbc.writeMem(0x547a, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xca16, gbc.sp());
        EXPECT(0x547c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0127
        gbc.setState(0xe163, 0xaa9a, 0xb280, 0xe28c, 0x8503, 0x7336, 0x0, 0x1);
        gbc.writeMem(0xe163, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xaa9a, gbc.sp());
        EXPECT(0xe165, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe163));
        EXPECT(0xd5, gbc.readMem(0xe164));
        // CB D5 0128
        gbc.setState(0xb7bc, 0x394e, 0x40e0, 0xbf96, 0xdfaa, 0x3e56, 0x1, 0x1);
        gbc.writeMem(0xb7bc, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x394e, gbc.sp());
        EXPECT(0xb7be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7bc));
        EXPECT(0xd5, gbc.readMem(0xb7bd));
        // CB D5 0129
        gbc.setState(0x3488, 0x827f, 0xf620, 0x650e, 0x9f50, 0xd7ed, 0x1, 0x1);
        gbc.writeMem(0x3488, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x827f, gbc.sp());
        EXPECT(0x348a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 012A
        gbc.setState(0x9e83, 0xf8c4, 0xd430, 0xf04c, 0xa5db, 0xf97, 0x0, 0x0);
        gbc.writeMem(0x9e83, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf8c4, gbc.sp());
        EXPECT(0x9e85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e83));
        EXPECT(0xd5, gbc.readMem(0x9e84));
        // CB D5 012B
        gbc.setState(0xd9f2, 0x1c09, 0x8b80, 0x4bcb, 0xe8f7, 0x2c5c, 0x1, 0x1);
        gbc.writeMem(0xd9f2, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x1c09, gbc.sp());
        EXPECT(0xd9f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9f2));
        EXPECT(0xd5, gbc.readMem(0xd9f3));
        // CB D5 012C
        gbc.setState(0x6ab1, 0x79ca, 0xbfb0, 0x649d, 0x82b2, 0x884, 0x0, 0x1);
        gbc.writeMem(0x6ab1, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x79ca, gbc.sp());
        EXPECT(0x6ab3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 012D
        gbc.setState(0xdd90, 0xca6f, 0x5ea0, 0x23e0, 0x12c7, 0x2d7b, 0x1, 0x0);
        gbc.writeMem(0xdd90, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xca6f, gbc.sp());
        EXPECT(0xdd92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd90));
        EXPECT(0xd5, gbc.readMem(0xdd91));
        // CB D5 012E
        gbc.setState(0x6033, 0xe507, 0xe30, 0x77b8, 0x755b, 0x4270, 0x1, 0x0);
        gbc.writeMem(0x6033, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xe507, gbc.sp());
        EXPECT(0x6035, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 012F
        gbc.setState(0x62e9, 0xe4b2, 0x38c0, 0xf4f9, 0x23bf, 0xe645, 0x1, 0x1);
        gbc.writeMem(0x62e9, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xe4b2, gbc.sp());
        EXPECT(0x62eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0130
        gbc.setState(0x5af5, 0x7bf2, 0xd4e0, 0x5257, 0x5c5f, 0x7991, 0x0, 0x0);
        gbc.writeMem(0x5af5, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x7bf2, gbc.sp());
        EXPECT(0x5af7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0131
        gbc.setState(0x2e78, 0xff2a, 0xee70, 0x8c50, 0xdbff, 0xdda1, 0x0, 0x0);
        gbc.writeMem(0x2e78, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xff2a, gbc.sp());
        EXPECT(0x2e7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0132
        gbc.setState(0xa46b, 0x9334, 0xe260, 0xcb5d, 0x30b9, 0xacba, 0x1, 0x0);
        gbc.writeMem(0xa46b, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x9334, gbc.sp());
        EXPECT(0xa46d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa46b));
        EXPECT(0xd5, gbc.readMem(0xa46c));
        // CB D5 0133
        gbc.setState(0x57b6, 0xf97f, 0x210, 0x18b1, 0x64c6, 0xefbc, 0x1, 0x1);
        gbc.writeMem(0x57b6, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf97f, gbc.sp());
        EXPECT(0x57b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0134
        gbc.setState(0xae98, 0x54b7, 0x18e0, 0x3b69, 0x1fe, 0x6ac2, 0x1, 0x0);
        gbc.writeMem(0xae98, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x54b7, gbc.sp());
        EXPECT(0xae9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae98));
        EXPECT(0xd5, gbc.readMem(0xae99));
        // CB D5 0135
        gbc.setState(0xc6e2, 0xfae2, 0x2af0, 0x8588, 0x25d3, 0x1234, 0x0, 0x0);
        gbc.writeMem(0xc6e2, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xfae2, gbc.sp());
        EXPECT(0xc6e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6e2));
        EXPECT(0xd5, gbc.readMem(0xc6e3));
        // CB D5 0136
        gbc.setState(0xed4, 0xbbdb, 0x9700, 0x6e62, 0x8c40, 0x47d7, 0x1, 0x0);
        gbc.writeMem(0xed4, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xbbdb, gbc.sp());
        EXPECT(0xed6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0137
        gbc.setState(0xa4c9, 0x5b79, 0xae70, 0x92c5, 0x8b0a, 0x4d98, 0x0, 0x1);
        gbc.writeMem(0xa4c9, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x5b79, gbc.sp());
        EXPECT(0xa4cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4c9));
        EXPECT(0xd5, gbc.readMem(0xa4ca));
        // CB D5 0138
        gbc.setState(0x4b81, 0xa879, 0x6fe0, 0x769b, 0x8073, 0x3981, 0x1, 0x0);
        gbc.writeMem(0x4b81, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xa879, gbc.sp());
        EXPECT(0x4b83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0139
        gbc.setState(0x6309, 0x8dc4, 0x47e0, 0xab07, 0xb420, 0x62a7, 0x1, 0x1);
        gbc.writeMem(0x6309, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x8dc4, gbc.sp());
        EXPECT(0x630b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 013A
        gbc.setState(0x2377, 0x61ff, 0x4e0, 0x2fa2, 0x48b9, 0x1d1c, 0x0, 0x1);
        gbc.writeMem(0x2377, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x61ff, gbc.sp());
        EXPECT(0x2379, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 013B
        gbc.setState(0x928, 0xb337, 0xf520, 0xf541, 0x61a6, 0x6dcd, 0x1, 0x1);
        gbc.writeMem(0x928, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xb337, gbc.sp());
        EXPECT(0x92a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 013C
        gbc.setState(0x5816, 0x75df, 0xbe10, 0xc482, 0x73df, 0xcdaf, 0x1, 0x1);
        gbc.writeMem(0x5816, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x75df, gbc.sp());
        EXPECT(0x5818, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 013D
        gbc.setState(0x56b1, 0x5a0d, 0xe00, 0x4be6, 0x8b5a, 0x88e9, 0x1, 0x0);
        gbc.writeMem(0x56b1, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x5a0d, gbc.sp());
        EXPECT(0x56b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 013E
        gbc.setState(0x703, 0x5c9d, 0x1220, 0x9f5f, 0x37b8, 0x516d, 0x0, 0x1);
        gbc.writeMem(0x703, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x5c9d, gbc.sp());
        EXPECT(0x705, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 013F
        gbc.setState(0x525a, 0x56a9, 0x16f0, 0x8e76, 0x9ea9, 0x15b2, 0x0, 0x1);
        gbc.writeMem(0x525a, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x56a9, gbc.sp());
        EXPECT(0x525c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0140
        gbc.setState(0xd938, 0x6389, 0x1970, 0x172c, 0x4066, 0x62c, 0x1, 0x0);
        gbc.writeMem(0xd938, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x6389, gbc.sp());
        EXPECT(0xd93a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd938));
        EXPECT(0xd5, gbc.readMem(0xd939));
        // CB D5 0142
        gbc.setState(0x3937, 0xac3, 0x7230, 0x76b, 0xc50a, 0x448b, 0x1, 0x1);
        gbc.writeMem(0x3937, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xac3, gbc.sp());
        EXPECT(0x3939, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0143
        gbc.setState(0xb040, 0x30db, 0x5580, 0x3384, 0xdaa7, 0x5c54, 0x1, 0x1);
        gbc.writeMem(0xb040, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x30db, gbc.sp());
        EXPECT(0xb042, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb040));
        EXPECT(0xd5, gbc.readMem(0xb041));
        // CB D5 0144
        gbc.setState(0x8bb8, 0xa71, 0xc0f0, 0xd65, 0xea28, 0x56ee, 0x0, 0x1);
        gbc.writeMem(0x8bb8, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xa71, gbc.sp());
        EXPECT(0x8bba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bb8));
        EXPECT(0xd5, gbc.readMem(0x8bb9));
        // CB D5 0145
        gbc.setState(0xcdd, 0x18d, 0x7f10, 0x2d28, 0x64bd, 0x5437, 0x1, 0x0);
        gbc.writeMem(0xcdd, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x18d, gbc.sp());
        EXPECT(0xcdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0146
        gbc.setState(0x69dd, 0xa386, 0xdf60, 0x7bb4, 0xfbf6, 0xd960, 0x1, 0x0);
        gbc.writeMem(0x69dd, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xa386, gbc.sp());
        EXPECT(0x69df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0147
        gbc.setState(0x2ed1, 0xcd24, 0x21f0, 0x545c, 0x46aa, 0x3355, 0x0, 0x0);
        gbc.writeMem(0x2ed1, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xcd24, gbc.sp());
        EXPECT(0x2ed3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0148
        gbc.setState(0xdbd2, 0x7813, 0x9f40, 0x5012, 0xb0da, 0x207c, 0x0, 0x0);
        gbc.writeMem(0xdbd2, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x7813, gbc.sp());
        EXPECT(0xdbd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbd2));
        EXPECT(0xd5, gbc.readMem(0xdbd3));
        // CB D5 0149
        gbc.setState(0x806a, 0x568c, 0xd170, 0x238b, 0xa064, 0xe553, 0x0, 0x0);
        gbc.writeMem(0x806a, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x568c, gbc.sp());
        EXPECT(0x806c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x806a));
        EXPECT(0xd5, gbc.readMem(0x806b));
        // CB D5 014A
        gbc.setState(0x416c, 0x4a97, 0x4680, 0xad38, 0x5a34, 0x6b8f, 0x1, 0x1);
        gbc.writeMem(0x416c, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x4a97, gbc.sp());
        EXPECT(0x416e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 014B
        gbc.setState(0xcdb2, 0xa5bc, 0xfa40, 0x222f, 0xf25d, 0xab00, 0x1, 0x1);
        gbc.writeMem(0xcdb2, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa5bc, gbc.sp());
        EXPECT(0xcdb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdb2));
        EXPECT(0xd5, gbc.readMem(0xcdb3));
        // CB D5 014C
        gbc.setState(0xac54, 0xcb00, 0x3400, 0xa78b, 0x841a, 0xd058, 0x0, 0x1);
        gbc.writeMem(0xac54, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xcb00, gbc.sp());
        EXPECT(0xac56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac54));
        EXPECT(0xd5, gbc.readMem(0xac55));
        // CB D5 014D
        gbc.setState(0xcb38, 0x63e0, 0xeaa0, 0x3ab3, 0xb574, 0x623b, 0x1, 0x1);
        gbc.writeMem(0xcb38, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x63e0, gbc.sp());
        EXPECT(0xcb3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb38));
        EXPECT(0xd5, gbc.readMem(0xcb39));
        // CB D5 014E
        gbc.setState(0x88b4, 0xc9ad, 0xe500, 0xdceb, 0xde8d, 0xddae, 0x1, 0x1);
        gbc.writeMem(0x88b4, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xc9ad, gbc.sp());
        EXPECT(0x88b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88b4));
        EXPECT(0xd5, gbc.readMem(0x88b5));
        // CB D5 014F
        gbc.setState(0x1e51, 0xb322, 0x1030, 0xf449, 0xbe4d, 0x89b4, 0x0, 0x1);
        gbc.writeMem(0x1e51, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xb322, gbc.sp());
        EXPECT(0x1e53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0150
        gbc.setState(0x3ff8, 0xfc9d, 0x4830, 0xc6dc, 0x8c75, 0xb119, 0x1, 0x0);
        gbc.writeMem(0x3ff8, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xfc9d, gbc.sp());
        EXPECT(0x3ffa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0151
        gbc.setState(0x1014, 0x9a55, 0xe2a0, 0xeb8b, 0xe56b, 0x7a48, 0x1, 0x1);
        gbc.writeMem(0x1014, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9a55, gbc.sp());
        EXPECT(0x1016, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0152
        gbc.setState(0x7992, 0x973f, 0x73b0, 0xf660, 0xc701, 0x3930, 0x1, 0x0);
        gbc.writeMem(0x7992, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x973f, gbc.sp());
        EXPECT(0x7994, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0153
        gbc.setState(0x7571, 0x442e, 0xe660, 0x55d1, 0xce95, 0x13c6, 0x0, 0x0);
        gbc.writeMem(0x7571, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x442e, gbc.sp());
        EXPECT(0x7573, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0154
        gbc.setState(0x5e19, 0x2b65, 0x7d0, 0x66b6, 0xadbc, 0x5a85, 0x1, 0x0);
        gbc.writeMem(0x5e19, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x2b65, gbc.sp());
        EXPECT(0x5e1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0156
        gbc.setState(0x142e, 0xbfd7, 0x3d40, 0xe62a, 0xfcd7, 0xe479, 0x0, 0x1);
        gbc.writeMem(0x142e, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xbfd7, gbc.sp());
        EXPECT(0x1430, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0157
        gbc.setState(0x2fd2, 0x74c5, 0xa580, 0xcdd5, 0x91b9, 0x9fa2, 0x1, 0x0);
        gbc.writeMem(0x2fd2, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x74c5, gbc.sp());
        EXPECT(0x2fd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0158
        gbc.setState(0x72e3, 0x96ec, 0xaa10, 0xe62e, 0x7b6b, 0xe85d, 0x0, 0x1);
        gbc.writeMem(0x72e3, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x96ec, gbc.sp());
        EXPECT(0x72e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0159
        gbc.setState(0x3f3e, 0x7940, 0x3950, 0xd14f, 0x880b, 0xf621, 0x0, 0x0);
        gbc.writeMem(0x3f3e, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x7940, gbc.sp());
        EXPECT(0x3f40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 015A
        gbc.setState(0x4a5b, 0x4f79, 0xaf10, 0x448c, 0x5d8e, 0x9918, 0x0, 0x1);
        gbc.writeMem(0x4a5b, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x4f79, gbc.sp());
        EXPECT(0x4a5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 015B
        gbc.setState(0xb0ab, 0x7357, 0x9f00, 0xc5e2, 0x234c, 0x6a77, 0x0, 0x1);
        gbc.writeMem(0xb0ab, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7357, gbc.sp());
        EXPECT(0xb0ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0ab));
        EXPECT(0xd5, gbc.readMem(0xb0ac));
        // CB D5 015C
        gbc.setState(0xc936, 0xeeab, 0xaab0, 0x73a0, 0x27da, 0xc3fb, 0x0, 0x0);
        gbc.writeMem(0xc936, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xeeab, gbc.sp());
        EXPECT(0xc938, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc936));
        EXPECT(0xd5, gbc.readMem(0xc937));
        // CB D5 015D
        gbc.setState(0x3701, 0xb984, 0xe90, 0xba7a, 0xb7cd, 0xa48b, 0x0, 0x0);
        gbc.writeMem(0x3701, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xb984, gbc.sp());
        EXPECT(0x3703, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 015E
        gbc.setState(0xa562, 0xfb54, 0x2440, 0xfd02, 0xd841, 0x5370, 0x1, 0x1);
        gbc.writeMem(0xa562, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xfb54, gbc.sp());
        EXPECT(0xa564, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa562));
        EXPECT(0xd5, gbc.readMem(0xa563));
        // CB D5 015F
        gbc.setState(0x1ac5, 0xb07d, 0x9310, 0xa948, 0x2e67, 0xbcf3, 0x1, 0x1);
        gbc.writeMem(0x1ac5, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xb07d, gbc.sp());
        EXPECT(0x1ac7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0160
        gbc.setState(0x31dc, 0x223c, 0xf070, 0xa4e8, 0x3b71, 0x4f7c, 0x1, 0x1);
        gbc.writeMem(0x31dc, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x223c, gbc.sp());
        EXPECT(0x31de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0161
        gbc.setState(0x6053, 0xcf8f, 0xb390, 0x7b29, 0x6137, 0x4194, 0x0, 0x1);
        gbc.writeMem(0x6053, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xcf8f, gbc.sp());
        EXPECT(0x6055, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0162
        gbc.setState(0x8cef, 0x3414, 0x42e0, 0xa633, 0xd263, 0xdbe4, 0x1, 0x0);
        gbc.writeMem(0x8cef, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x3414, gbc.sp());
        EXPECT(0x8cf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cef));
        EXPECT(0xd5, gbc.readMem(0x8cf0));
        // CB D5 0163
        gbc.setState(0x47fa, 0x524a, 0x5380, 0xf6c1, 0xd17b, 0xeb9d, 0x1, 0x1);
        gbc.writeMem(0x47fa, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x524a, gbc.sp());
        EXPECT(0x47fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0164
        gbc.setState(0xa245, 0x4e89, 0xccb0, 0x81dd, 0xc3d9, 0xc0ab, 0x1, 0x0);
        gbc.writeMem(0xa245, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x4e89, gbc.sp());
        EXPECT(0xa247, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa245));
        EXPECT(0xd5, gbc.readMem(0xa246));
        // CB D5 0165
        gbc.setState(0x38a7, 0x53c1, 0x1ef0, 0xf7ed, 0x6a7f, 0xf163, 0x0, 0x0);
        gbc.writeMem(0x38a7, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x53c1, gbc.sp());
        EXPECT(0x38a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0166
        gbc.setState(0x9902, 0x103, 0x89a0, 0x42b7, 0x43f4, 0x4ce7, 0x0, 0x0);
        gbc.writeMem(0x9902, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x103, gbc.sp());
        EXPECT(0x9904, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9902));
        EXPECT(0xd5, gbc.readMem(0x9903));
        // CB D5 0168
        gbc.setState(0x9db7, 0xf331, 0xc570, 0xdf98, 0xf29c, 0xd57d, 0x1, 0x1);
        gbc.writeMem(0x9db7, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf331, gbc.sp());
        EXPECT(0x9db9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9db7));
        EXPECT(0xd5, gbc.readMem(0x9db8));
        // CB D5 0169
        gbc.setState(0x7bed, 0x7535, 0x9f60, 0x6803, 0xb830, 0xa87b, 0x0, 0x0);
        gbc.writeMem(0x7bed, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x7535, gbc.sp());
        EXPECT(0x7bef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 016A
        gbc.setState(0x8039, 0xe2db, 0x7f30, 0x14bf, 0xb943, 0xd4d9, 0x0, 0x0);
        gbc.writeMem(0x8039, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe2db, gbc.sp());
        EXPECT(0x803b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8039));
        EXPECT(0xd5, gbc.readMem(0x803a));
        // CB D5 016B
        gbc.setState(0x7488, 0xc7f8, 0xa140, 0x77b8, 0xff72, 0x7fae, 0x1, 0x1);
        gbc.writeMem(0x7488, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xc7f8, gbc.sp());
        EXPECT(0x748a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 016C
        gbc.setState(0x40d2, 0xe7d4, 0x4800, 0xad61, 0x35e4, 0x86e8, 0x1, 0x0);
        gbc.writeMem(0x40d2, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xe7d4, gbc.sp());
        EXPECT(0x40d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 016D
        gbc.setState(0x5619, 0x480, 0x4020, 0x3c2, 0xe2cd, 0x9c19, 0x0, 0x0);
        gbc.writeMem(0x5619, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x480, gbc.sp());
        EXPECT(0x561b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 016E
        gbc.setState(0xd61e, 0x2b3e, 0xf210, 0xb81a, 0xffc5, 0xac72, 0x0, 0x0);
        gbc.writeMem(0xd61e, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2b3e, gbc.sp());
        EXPECT(0xd620, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd61e));
        EXPECT(0xd5, gbc.readMem(0xd61f));
        // CB D5 016F
        gbc.setState(0x2a94, 0xa54b, 0xc460, 0xad27, 0xf1fc, 0xfdf2, 0x0, 0x0);
        gbc.writeMem(0x2a94, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xa54b, gbc.sp());
        EXPECT(0x2a96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0170
        gbc.setState(0x4de0, 0xb794, 0x4670, 0x88dc, 0x8fca, 0x6696, 0x0, 0x1);
        gbc.writeMem(0x4de0, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xb794, gbc.sp());
        EXPECT(0x4de2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0171
        gbc.setState(0x4edb, 0x266e, 0x28c0, 0xbf7f, 0xef3d, 0x94ce, 0x0, 0x1);
        gbc.writeMem(0x4edb, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x266e, gbc.sp());
        EXPECT(0x4edd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0172
        gbc.setState(0x67f4, 0x429e, 0x2780, 0x66e3, 0x7071, 0x9449, 0x0, 0x0);
        gbc.writeMem(0x67f4, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x429e, gbc.sp());
        EXPECT(0x67f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0173
        gbc.setState(0xd1ec, 0x511e, 0xbb90, 0xf7, 0x7136, 0xa3bd, 0x1, 0x0);
        gbc.writeMem(0xd1ec, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x511e, gbc.sp());
        EXPECT(0xd1ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1ec));
        EXPECT(0xd5, gbc.readMem(0xd1ed));
        // CB D5 0174
        gbc.setState(0x28f1, 0x8b77, 0xf7c0, 0xea57, 0xeaf3, 0x5895, 0x0, 0x0);
        gbc.writeMem(0x28f1, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8b77, gbc.sp());
        EXPECT(0x28f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0175
        gbc.setState(0xe401, 0x8096, 0xf650, 0xde8b, 0xce5b, 0xb5db, 0x0, 0x0);
        gbc.writeMem(0xe401, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x8096, gbc.sp());
        EXPECT(0xe403, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe401));
        EXPECT(0xd5, gbc.readMem(0xe402));
        // CB D5 0176
        gbc.setState(0x174, 0xa172, 0x1c50, 0x6ea1, 0x4a57, 0xa623, 0x0, 0x0);
        gbc.writeMem(0x174, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xa172, gbc.sp());
        EXPECT(0x176, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0177
        gbc.setState(0xda4e, 0x2998, 0xc530, 0xb2ea, 0x6cba, 0x954c, 0x1, 0x0);
        gbc.writeMem(0xda4e, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x2998, gbc.sp());
        EXPECT(0xda50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda4e));
        EXPECT(0xd5, gbc.readMem(0xda4f));
        // CB D5 0178
        gbc.setState(0xa9cb, 0xb08c, 0xcd50, 0x515d, 0x6347, 0x9903, 0x0, 0x1);
        gbc.writeMem(0xa9cb, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xb08c, gbc.sp());
        EXPECT(0xa9cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9cb));
        EXPECT(0xd5, gbc.readMem(0xa9cc));
        // CB D5 0179
        gbc.setState(0x36e3, 0x2e5f, 0xbc40, 0xccf9, 0xc8e3, 0x4b28, 0x0, 0x1);
        gbc.writeMem(0x36e3, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x2e5f, gbc.sp());
        EXPECT(0x36e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 017A
        gbc.setState(0xccba, 0xa1cd, 0x4aa0, 0x4fdd, 0xdda8, 0x8c35, 0x1, 0x1);
        gbc.writeMem(0xccba, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xa1cd, gbc.sp());
        EXPECT(0xccbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccba));
        EXPECT(0xd5, gbc.readMem(0xccbb));
        // CB D5 017B
        gbc.setState(0x21a2, 0x50ec, 0x2a20, 0x64e2, 0xc217, 0x15da, 0x0, 0x1);
        gbc.writeMem(0x21a2, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x50ec, gbc.sp());
        EXPECT(0x21a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 017C
        gbc.setState(0xbee5, 0xa581, 0x3a70, 0x982e, 0xf96d, 0x20c7, 0x1, 0x0);
        gbc.writeMem(0xbee5, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xa581, gbc.sp());
        EXPECT(0xbee7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbee5));
        EXPECT(0xd5, gbc.readMem(0xbee6));
        // CB D5 017D
        gbc.setState(0x8808, 0x8582, 0xece0, 0x17e7, 0x53a2, 0x56dd, 0x0, 0x0);
        gbc.writeMem(0x8808, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8582, gbc.sp());
        EXPECT(0x880a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8808));
        EXPECT(0xd5, gbc.readMem(0x8809));
        // CB D5 017E
        gbc.setState(0x7f7c, 0xa215, 0x3d50, 0x7d9, 0x4f54, 0x84f9, 0x0, 0x0);
        gbc.writeMem(0x7f7c, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xa215, gbc.sp());
        EXPECT(0x7f7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 017F
        gbc.setState(0x8340, 0x5a9a, 0xe3d0, 0x5071, 0xf9ee, 0x7fea, 0x0, 0x0);
        gbc.writeMem(0x8340, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x5a9a, gbc.sp());
        EXPECT(0x8342, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8340));
        EXPECT(0xd5, gbc.readMem(0x8341));
        // CB D5 0180
        gbc.setState(0xbb9a, 0x8314, 0xc390, 0xf26, 0xb03, 0x441f, 0x1, 0x1);
        gbc.writeMem(0xbb9a, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x8314, gbc.sp());
        EXPECT(0xbb9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb9a));
        EXPECT(0xd5, gbc.readMem(0xbb9b));
        // CB D5 0181
        gbc.setState(0xe3ca, 0xc628, 0x9130, 0x1ce2, 0x612e, 0x6d07, 0x0, 0x1);
        gbc.writeMem(0xe3ca, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xc628, gbc.sp());
        EXPECT(0xe3cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3ca));
        EXPECT(0xd5, gbc.readMem(0xe3cb));
        // CB D5 0182
        gbc.setState(0x3f16, 0x3d7b, 0xbe60, 0x5d82, 0xe9c, 0x559d, 0x0, 0x1);
        gbc.writeMem(0x3f16, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3d7b, gbc.sp());
        EXPECT(0x3f18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0183
        gbc.setState(0x15d3, 0xa564, 0x40, 0x4f3f, 0xcd19, 0x4670, 0x1, 0x0);
        gbc.writeMem(0x15d3, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xa564, gbc.sp());
        EXPECT(0x15d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0184
        gbc.setState(0x41c8, 0xaeb, 0x2610, 0x7249, 0x7261, 0xbed5, 0x0, 0x1);
        gbc.writeMem(0x41c8, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xaeb, gbc.sp());
        EXPECT(0x41ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0185
        gbc.setState(0x5d26, 0x9663, 0xe490, 0x4497, 0xbe66, 0x9bb, 0x1, 0x0);
        gbc.writeMem(0x5d26, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x9663, gbc.sp());
        EXPECT(0x5d28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0186
        gbc.setState(0x492b, 0xa69b, 0x7b40, 0x20c5, 0x7bf0, 0xb251, 0x1, 0x0);
        gbc.writeMem(0x492b, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa69b, gbc.sp());
        EXPECT(0x492d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0187
        gbc.setState(0x6aef, 0xa215, 0xddc0, 0xd726, 0x13b6, 0x1ab5, 0x1, 0x0);
        gbc.writeMem(0x6aef, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xa215, gbc.sp());
        EXPECT(0x6af1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0188
        gbc.setState(0x1bc2, 0x3376, 0x3fe0, 0x4095, 0x1112, 0xf0b9, 0x1, 0x0);
        gbc.writeMem(0x1bc2, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3376, gbc.sp());
        EXPECT(0x1bc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0189
        gbc.setState(0x94bf, 0xff58, 0xf260, 0xe710, 0xee57, 0x31d0, 0x1, 0x1);
        gbc.writeMem(0x94bf, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xff58, gbc.sp());
        EXPECT(0x94c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94bf));
        EXPECT(0xd5, gbc.readMem(0x94c0));
        // CB D5 018A
        gbc.setState(0xb7a3, 0x780e, 0x5460, 0xfee1, 0x4fa8, 0x41cc, 0x1, 0x0);
        gbc.writeMem(0xb7a3, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x780e, gbc.sp());
        EXPECT(0xb7a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7a3));
        EXPECT(0xd5, gbc.readMem(0xb7a4));
        // CB D5 018B
        gbc.setState(0x1af1, 0xeb41, 0x3960, 0x9e0d, 0x5aef, 0xfde, 0x1, 0x0);
        gbc.writeMem(0x1af1, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xeb41, gbc.sp());
        EXPECT(0x1af3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 018C
        gbc.setState(0x256b, 0x1031, 0xe660, 0xe8b, 0x90f5, 0xb237, 0x0, 0x0);
        gbc.writeMem(0x256b, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x1031, gbc.sp());
        EXPECT(0x256d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 018D
        gbc.setState(0xda39, 0x503c, 0x9d10, 0x3de2, 0x8729, 0x89da, 0x1, 0x0);
        gbc.writeMem(0xda39, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x503c, gbc.sp());
        EXPECT(0xda3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda39));
        EXPECT(0xd5, gbc.readMem(0xda3a));
        // CB D5 018E
        gbc.setState(0x321f, 0x9448, 0x9b60, 0x10fd, 0xe1f1, 0x7626, 0x0, 0x0);
        gbc.writeMem(0x321f, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x9448, gbc.sp());
        EXPECT(0x3221, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 018F
        gbc.setState(0x583c, 0xc905, 0xd310, 0xe71f, 0xc3a5, 0xf50e, 0x1, 0x1);
        gbc.writeMem(0x583c, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xc905, gbc.sp());
        EXPECT(0x583e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0190
        gbc.setState(0x77f2, 0xa85c, 0xa5e0, 0xec6a, 0x1709, 0x74d0, 0x1, 0x1);
        gbc.writeMem(0x77f2, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa85c, gbc.sp());
        EXPECT(0x77f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0191
        gbc.setState(0xb215, 0x8576, 0xff70, 0x29ad, 0x5878, 0xea3c, 0x0, 0x1);
        gbc.writeMem(0xb215, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8576, gbc.sp());
        EXPECT(0xb217, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb215));
        EXPECT(0xd5, gbc.readMem(0xb216));
        // CB D5 0192
        gbc.setState(0x96b5, 0x2e0a, 0x46f0, 0xf39, 0xf917, 0x865d, 0x1, 0x1);
        gbc.writeMem(0x96b5, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x2e0a, gbc.sp());
        EXPECT(0x96b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96b5));
        EXPECT(0xd5, gbc.readMem(0x96b6));
        // CB D5 0193
        gbc.setState(0x91b0, 0x139b, 0xbe90, 0xd700, 0x481c, 0x1f91, 0x0, 0x1);
        gbc.writeMem(0x91b0, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x139b, gbc.sp());
        EXPECT(0x91b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91b0));
        EXPECT(0xd5, gbc.readMem(0x91b1));
        // CB D5 0194
        gbc.setState(0xb3e1, 0x3632, 0x1680, 0x3d31, 0x8e0b, 0x8717, 0x1, 0x0);
        gbc.writeMem(0xb3e1, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3632, gbc.sp());
        EXPECT(0xb3e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3e1));
        EXPECT(0xd5, gbc.readMem(0xb3e2));
        // CB D5 0195
        gbc.setState(0xc201, 0xa3f6, 0x2010, 0xf3fa, 0xdd37, 0xe427, 0x1, 0x1);
        gbc.writeMem(0xc201, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xa3f6, gbc.sp());
        EXPECT(0xc203, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc201));
        EXPECT(0xd5, gbc.readMem(0xc202));
        // CB D5 0196
        gbc.setState(0x9fbf, 0xd096, 0x9ab0, 0x9303, 0x989b, 0x94d1, 0x0, 0x1);
        gbc.writeMem(0x9fbf, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xd096, gbc.sp());
        EXPECT(0x9fc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fbf));
        EXPECT(0xd5, gbc.readMem(0x9fc0));
        // CB D5 0197
        gbc.setState(0xd369, 0x1296, 0xd550, 0xf62d, 0x9518, 0xc668, 0x1, 0x1);
        gbc.writeMem(0xd369, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x1296, gbc.sp());
        EXPECT(0xd36b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd369));
        EXPECT(0xd5, gbc.readMem(0xd36a));
        // CB D5 0198
        gbc.setState(0xd823, 0xced7, 0xef40, 0x65fc, 0x3d19, 0x621b, 0x0, 0x0);
        gbc.writeMem(0xd823, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xced7, gbc.sp());
        EXPECT(0xd825, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd823));
        EXPECT(0xd5, gbc.readMem(0xd824));
        // CB D5 0199
        gbc.setState(0xd9cb, 0xced5, 0x8ca0, 0xf4dd, 0x84a7, 0x2f74, 0x1, 0x1);
        gbc.writeMem(0xd9cb, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xced5, gbc.sp());
        EXPECT(0xd9cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9cb));
        EXPECT(0xd5, gbc.readMem(0xd9cc));
        // CB D5 019A
        gbc.setState(0x8c4c, 0x20f, 0x48c0, 0x1800, 0x9963, 0x2a1b, 0x1, 0x0);
        gbc.writeMem(0x8c4c, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x20f, gbc.sp());
        EXPECT(0x8c4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c4c));
        EXPECT(0xd5, gbc.readMem(0x8c4d));
        // CB D5 019B
        gbc.setState(0xcdbc, 0xb76d, 0xbab0, 0x64c4, 0xaed9, 0xb9d0, 0x0, 0x1);
        gbc.writeMem(0xcdbc, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xb76d, gbc.sp());
        EXPECT(0xcdbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdbc));
        EXPECT(0xd5, gbc.readMem(0xcdbd));
        // CB D5 019C
        gbc.setState(0xac09, 0x254a, 0xbcf0, 0xaaba, 0x4fac, 0xf4a5, 0x1, 0x1);
        gbc.writeMem(0xac09, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x254a, gbc.sp());
        EXPECT(0xac0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac09));
        EXPECT(0xd5, gbc.readMem(0xac0a));
        // CB D5 019D
        gbc.setState(0x366a, 0x44c3, 0x4e80, 0x70c1, 0x18ee, 0x935, 0x1, 0x1);
        gbc.writeMem(0x366a, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x44c3, gbc.sp());
        EXPECT(0x366c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 019E
        gbc.setState(0xb745, 0xe625, 0x2c0, 0xabe5, 0x53fe, 0x6b6a, 0x1, 0x1);
        gbc.writeMem(0xb745, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xe625, gbc.sp());
        EXPECT(0xb747, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb745));
        EXPECT(0xd5, gbc.readMem(0xb746));
        // CB D5 01A0
        gbc.setState(0xcdb1, 0x9560, 0x9e30, 0x15ba, 0x35d8, 0xfeb9, 0x0, 0x1);
        gbc.writeMem(0xcdb1, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x9560, gbc.sp());
        EXPECT(0xcdb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdb1));
        EXPECT(0xd5, gbc.readMem(0xcdb2));
        // CB D5 01A1
        gbc.setState(0x330, 0x54d, 0x8150, 0x589d, 0x1e3e, 0x479d, 0x1, 0x1);
        gbc.writeMem(0x330, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x54d, gbc.sp());
        EXPECT(0x332, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 01A2
        gbc.setState(0x4a88, 0xcc4c, 0x8070, 0xe268, 0xe2dd, 0xe7, 0x1, 0x0);
        gbc.writeMem(0x4a88, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xcc4c, gbc.sp());
        EXPECT(0x4a8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 01A3
        gbc.setState(0x8dde, 0xa8b6, 0xc110, 0xcfcd, 0x4ea6, 0x2f8c, 0x1, 0x0);
        gbc.writeMem(0x8dde, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xa8b6, gbc.sp());
        EXPECT(0x8de0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dde));
        EXPECT(0xd5, gbc.readMem(0x8ddf));
        // CB D5 01A4
        gbc.setState(0x9d08, 0xa6a1, 0x93c0, 0xc8e0, 0x7dd2, 0xae0e, 0x1, 0x1);
        gbc.writeMem(0x9d08, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xa6a1, gbc.sp());
        EXPECT(0x9d0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d08));
        EXPECT(0xd5, gbc.readMem(0x9d09));
        // CB D5 01A5
        gbc.setState(0x27b3, 0xa4a3, 0xfc0, 0x5d3, 0x5130, 0xa9fa, 0x1, 0x1);
        gbc.writeMem(0x27b3, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xa4a3, gbc.sp());
        EXPECT(0x27b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 01A6
        gbc.setState(0x42af, 0xa0d7, 0x4b90, 0x7272, 0xbf99, 0x3b20, 0x0, 0x0);
        gbc.writeMem(0x42af, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xa0d7, gbc.sp());
        EXPECT(0x42b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 01A7
        gbc.setState(0x88, 0xe316, 0x3310, 0x9045, 0x72fa, 0x7b2f, 0x0, 0x1);
        gbc.writeMem(0x88, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xe316, gbc.sp());
        EXPECT(0x8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 01A8
        gbc.setState(0x29b8, 0x23c6, 0xaf10, 0x6f7e, 0xcfe1, 0x3d2b, 0x0, 0x1);
        gbc.writeMem(0x29b8, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x23c6, gbc.sp());
        EXPECT(0x29ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 01A9
        gbc.setState(0xa12b, 0xf376, 0xfd70, 0x6c1a, 0x1eae, 0xa68d, 0x1, 0x1);
        gbc.writeMem(0xa12b, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xf376, gbc.sp());
        EXPECT(0xa12d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa12b));
        EXPECT(0xd5, gbc.readMem(0xa12c));
        // CB D5 01AA
        gbc.setState(0x4236, 0x4ddd, 0x360, 0xb227, 0xf452, 0xee74, 0x1, 0x1);
        gbc.writeMem(0x4236, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x4ddd, gbc.sp());
        EXPECT(0x4238, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 01AB
        gbc.setState(0x3935, 0x9028, 0x5270, 0x92f4, 0x23ce, 0x7aaa, 0x0, 0x1);
        gbc.writeMem(0x3935, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x9028, gbc.sp());
        EXPECT(0x3937, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 01AD
        gbc.setState(0x40e8, 0x672e, 0x9cb0, 0xcaa2, 0x68d3, 0xc573, 0x0, 0x0);
        gbc.writeMem(0x40e8, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x672e, gbc.sp());
        EXPECT(0x40ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 01AE
        gbc.setState(0x3df9, 0x82cb, 0xe550, 0xa4d9, 0x3cdd, 0xbd12, 0x0, 0x0);
        gbc.writeMem(0x3df9, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x82cb, gbc.sp());
        EXPECT(0x3dfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 01AF
        gbc.setState(0x76d4, 0x6907, 0xf0d0, 0x4d3a, 0x1448, 0xa773, 0x1, 0x0);
        gbc.writeMem(0x76d4, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x6907, gbc.sp());
        EXPECT(0x76d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 01B1
        gbc.setState(0x6d69, 0x249b, 0x3f20, 0x3314, 0xf0fc, 0xa98, 0x1, 0x1);
        gbc.writeMem(0x6d69, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x249b, gbc.sp());
        EXPECT(0x6d6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 01B2
        gbc.setState(0xae8, 0x204d, 0x87b0, 0xc1fe, 0xb7d2, 0x5b84, 0x1, 0x1);
        gbc.writeMem(0xae8, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x204d, gbc.sp());
        EXPECT(0xaea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 01B3
        gbc.setState(0x8450, 0x8732, 0xe9d0, 0xb9e9, 0xe203, 0x9d0b, 0x0, 0x1);
        gbc.writeMem(0x8450, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8732, gbc.sp());
        EXPECT(0x8452, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8450));
        EXPECT(0xd5, gbc.readMem(0x8451));
        // CB D5 01B5
        gbc.setState(0x955, 0x2f5c, 0x7e90, 0x4d3e, 0x3277, 0x6694, 0x0, 0x0);
        gbc.writeMem(0x955, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2f5c, gbc.sp());
        EXPECT(0x957, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 01B6
        gbc.setState(0xa60b, 0xcaa2, 0x7540, 0xde6e, 0x517, 0xf88c, 0x0, 0x0);
        gbc.writeMem(0xa60b, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xcaa2, gbc.sp());
        EXPECT(0xa60d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa60b));
        EXPECT(0xd5, gbc.readMem(0xa60c));
        // CB D5 01B7
        gbc.setState(0x829a, 0x52ba, 0xc220, 0x1e3b, 0x4e32, 0x5776, 0x1, 0x0);
        gbc.writeMem(0x829a, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x52ba, gbc.sp());
        EXPECT(0x829c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x829a));
        EXPECT(0xd5, gbc.readMem(0x829b));
        // CB D5 01B8
        gbc.setState(0xe8ed, 0xe4d4, 0xd050, 0x1fd4, 0x7bcf, 0x910c, 0x1, 0x0);
        gbc.writeMem(0xe8ed, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xe4d4, gbc.sp());
        EXPECT(0xe8ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8ed));
        EXPECT(0xd5, gbc.readMem(0xe8ee));
        // CB D5 01B9
        gbc.setState(0x2421, 0xeffc, 0xdec0, 0x98a6, 0x4db4, 0xaa20, 0x1, 0x1);
        gbc.writeMem(0x2421, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xeffc, gbc.sp());
        EXPECT(0x2423, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 01BA
        gbc.setState(0x1e34, 0x37e2, 0x7190, 0x7e18, 0xc0b1, 0x9efc, 0x1, 0x1);
        gbc.writeMem(0x1e34, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x37e2, gbc.sp());
        EXPECT(0x1e36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 01BB
        gbc.setState(0x7c1c, 0xd91f, 0xf190, 0xc315, 0xa361, 0x68a4, 0x1, 0x1);
        gbc.writeMem(0x7c1c, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xd91f, gbc.sp());
        EXPECT(0x7c1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 01BC
        gbc.setState(0x57ee, 0x2e0a, 0x2030, 0xf08e, 0x10e4, 0x68cf, 0x0, 0x1);
        gbc.writeMem(0x57ee, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x2e0a, gbc.sp());
        EXPECT(0x57f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 01BE
        gbc.setState(0xb6ab, 0x5eea, 0xc050, 0xa7aa, 0x8e2, 0x9be2, 0x0, 0x1);
        gbc.writeMem(0xb6ab, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x5eea, gbc.sp());
        EXPECT(0xb6ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6ab));
        EXPECT(0xd5, gbc.readMem(0xb6ac));
        // CB D5 01C0
        gbc.setState(0xa510, 0xa57e, 0x55b0, 0x4f1f, 0xf5ff, 0x6df7, 0x1, 0x1);
        gbc.writeMem(0xa510, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xa57e, gbc.sp());
        EXPECT(0xa512, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa510));
        EXPECT(0xd5, gbc.readMem(0xa511));
        // CB D5 01C1
        gbc.setState(0x56ec, 0x3759, 0x780, 0x4198, 0x7dab, 0x9d08, 0x1, 0x1);
        gbc.writeMem(0x56ec, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x3759, gbc.sp());
        EXPECT(0x56ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 01C2
        gbc.setState(0x57b, 0x4be9, 0xfb60, 0x2626, 0x89c, 0x65e0, 0x0, 0x0);
        gbc.writeMem(0x57b, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x4be9, gbc.sp());
        EXPECT(0x57d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 01C3
        gbc.setState(0x8d9b, 0x8fc9, 0x60a0, 0x9a11, 0x2733, 0xaf06, 0x1, 0x0);
        gbc.writeMem(0x8d9b, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x8fc9, gbc.sp());
        EXPECT(0x8d9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d9b));
        EXPECT(0xd5, gbc.readMem(0x8d9c));
        // CB D5 01C4
        gbc.setState(0xc3df, 0x6846, 0x4900, 0x7c57, 0x1f4f, 0x7019, 0x1, 0x1);
        gbc.writeMem(0xc3df, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x6846, gbc.sp());
        EXPECT(0xc3e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3df));
        EXPECT(0xd5, gbc.readMem(0xc3e0));
        // CB D5 01C5
        gbc.setState(0x129, 0xdc39, 0xff20, 0x4a89, 0x68f2, 0xcbee, 0x0, 0x1);
        gbc.writeMem(0x129, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xdc39, gbc.sp());
        EXPECT(0x12b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 01C6
        gbc.setState(0x550f, 0x17f4, 0x75d0, 0xc5c8, 0xdf5b, 0x5e13, 0x1, 0x1);
        gbc.writeMem(0x550f, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x17f4, gbc.sp());
        EXPECT(0x5511, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 01C7
        gbc.setState(0x9837, 0x551f, 0x5000, 0xf43a, 0xefca, 0xfaf2, 0x1, 0x1);
        gbc.writeMem(0x9837, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x551f, gbc.sp());
        EXPECT(0x9839, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9837));
        EXPECT(0xd5, gbc.readMem(0x9838));
        // CB D5 01C8
        gbc.setState(0x9da, 0xb14f, 0xa90, 0x405f, 0x195e, 0x1c22, 0x1, 0x1);
        gbc.writeMem(0x9da, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb14f, gbc.sp());
        EXPECT(0x9dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 01C9
        gbc.setState(0xc1d, 0xfabe, 0xa1b0, 0x2ea8, 0x6beb, 0x99f6, 0x1, 0x0);
        gbc.writeMem(0xc1d, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xfabe, gbc.sp());
        EXPECT(0xc1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 01CA
        gbc.setState(0x5cf, 0x843c, 0x3090, 0xee5, 0x291, 0xbcf5, 0x0, 0x1);
        gbc.writeMem(0x5cf, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x843c, gbc.sp());
        EXPECT(0x5d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 01CB
        gbc.setState(0xa418, 0x8201, 0x8a10, 0x69b3, 0x3c30, 0x910c, 0x0, 0x1);
        gbc.writeMem(0xa418, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x8201, gbc.sp());
        EXPECT(0xa41a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa418));
        EXPECT(0xd5, gbc.readMem(0xa419));
        // CB D5 01CC
        gbc.setState(0x6656, 0xb832, 0x7860, 0x4423, 0x4cb5, 0xa85c, 0x0, 0x0);
        gbc.writeMem(0x6656, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xb832, gbc.sp());
        EXPECT(0x6658, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 01CE
        gbc.setState(0x5325, 0x64a4, 0x4410, 0xf4b6, 0x1539, 0x85df, 0x1, 0x0);
        gbc.writeMem(0x5325, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x64a4, gbc.sp());
        EXPECT(0x5327, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 01CF
        gbc.setState(0xb32a, 0x8313, 0x3a0, 0x6878, 0xa476, 0xee2a, 0x1, 0x1);
        gbc.writeMem(0xb32a, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x8313, gbc.sp());
        EXPECT(0xb32c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb32a));
        EXPECT(0xd5, gbc.readMem(0xb32b));
        // CB D5 01D0
        gbc.setState(0x67c6, 0x1f65, 0xaf10, 0xabd3, 0x759d, 0xe4c0, 0x1, 0x1);
        gbc.writeMem(0x67c6, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1f65, gbc.sp());
        EXPECT(0x67c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 01D1
        gbc.setState(0xd9e5, 0xe796, 0x4030, 0x6d0c, 0xe7db, 0x389a, 0x0, 0x1);
        gbc.writeMem(0xd9e5, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xe796, gbc.sp());
        EXPECT(0xd9e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9e5));
        EXPECT(0xd5, gbc.readMem(0xd9e6));
        // CB D5 01D3
        gbc.setState(0xaf18, 0x1f12, 0xd270, 0xc06e, 0x3dec, 0xf8, 0x0, 0x0);
        gbc.writeMem(0xaf18, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x1f12, gbc.sp());
        EXPECT(0xaf1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf18));
        EXPECT(0xd5, gbc.readMem(0xaf19));
        // CB D5 01D4
        gbc.setState(0x9a03, 0x32f7, 0xe3a0, 0x50e9, 0x67ba, 0x3f99, 0x1, 0x0);
        gbc.writeMem(0x9a03, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x32f7, gbc.sp());
        EXPECT(0x9a05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a03));
        EXPECT(0xd5, gbc.readMem(0x9a04));
        // CB D5 01D5
        gbc.setState(0xa7ac, 0x747c, 0xb70, 0xff1b, 0x1c35, 0x57ba, 0x1, 0x0);
        gbc.writeMem(0xa7ac, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x747c, gbc.sp());
        EXPECT(0xa7ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7ac));
        EXPECT(0xd5, gbc.readMem(0xa7ad));
        // CB D5 01D6
        gbc.setState(0x168c, 0xb88c, 0x5100, 0x86ca, 0x88f1, 0xf7af, 0x0, 0x1);
        gbc.writeMem(0x168c, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb88c, gbc.sp());
        EXPECT(0x168e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 01D7
        gbc.setState(0xde34, 0x2478, 0x2290, 0xc3d4, 0x626a, 0xc15f, 0x1, 0x0);
        gbc.writeMem(0xde34, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x2478, gbc.sp());
        EXPECT(0xde36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde34));
        EXPECT(0xd5, gbc.readMem(0xde35));
        // CB D5 01D8
        gbc.setState(0xd8d6, 0xff6b, 0xf240, 0x29f, 0x2871, 0x7f87, 0x1, 0x0);
        gbc.writeMem(0xd8d6, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xff6b, gbc.sp());
        EXPECT(0xd8d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8d6));
        EXPECT(0xd5, gbc.readMem(0xd8d7));
        // CB D5 01D9
        gbc.setState(0xdbbd, 0xe0d8, 0xd0b0, 0xe5f4, 0x998a, 0x2280, 0x0, 0x0);
        gbc.writeMem(0xdbbd, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe0d8, gbc.sp());
        EXPECT(0xdbbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbbd));
        EXPECT(0xd5, gbc.readMem(0xdbbe));
        // CB D5 01DA
        gbc.setState(0x3a, 0x8b29, 0xfd40, 0x7b4c, 0xda7b, 0xe25f, 0x0, 0x1);
        gbc.writeMem(0x3a, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x8b29, gbc.sp());
        EXPECT(0x3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 01DB
        gbc.setState(0x13e6, 0x57f6, 0x7bf0, 0xd41e, 0xfb1f, 0xfbfa, 0x1, 0x1);
        gbc.writeMem(0x13e6, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x57f6, gbc.sp());
        EXPECT(0x13e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 01DC
        gbc.setState(0x520b, 0x27c5, 0x1a20, 0x5391, 0x3e11, 0xcfbf, 0x1, 0x0);
        gbc.writeMem(0x520b, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x27c5, gbc.sp());
        EXPECT(0x520d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 01DD
        gbc.setState(0x377b, 0xbfd2, 0x3c0, 0xafab, 0x3bb8, 0x71f0, 0x0, 0x1);
        gbc.writeMem(0x377b, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xbfd2, gbc.sp());
        EXPECT(0x377d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 01DE
        gbc.setState(0x363b, 0xdbf4, 0x86e0, 0xdec2, 0xdbf2, 0xa1a1, 0x1, 0x1);
        gbc.writeMem(0x363b, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xdbf4, gbc.sp());
        EXPECT(0x363d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 01E1
        gbc.setState(0x13b7, 0x28fd, 0xf1b0, 0x1f2f, 0x6114, 0x93fb, 0x1, 0x0);
        gbc.writeMem(0x13b7, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x28fd, gbc.sp());
        EXPECT(0x13b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 01E2
        gbc.setState(0xdc9c, 0xd314, 0x43d0, 0xae8f, 0x341a, 0x4159, 0x0, 0x1);
        gbc.writeMem(0xdc9c, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xd314, gbc.sp());
        EXPECT(0xdc9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc9c));
        EXPECT(0xd5, gbc.readMem(0xdc9d));
        // CB D5 01E3
        gbc.setState(0x3c85, 0x7a33, 0x93a0, 0x82fd, 0x923f, 0xa60c, 0x0, 0x1);
        gbc.writeMem(0x3c85, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x7a33, gbc.sp());
        EXPECT(0x3c87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 01E4
        gbc.setState(0x22b2, 0x5cd6, 0x2c70, 0x191f, 0x7ed0, 0x8ea8, 0x1, 0x0);
        gbc.writeMem(0x22b2, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x5cd6, gbc.sp());
        EXPECT(0x22b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 01E5
        gbc.setState(0xdf5b, 0xa508, 0x8d70, 0x6319, 0x624c, 0x5a42, 0x0, 0x0);
        gbc.writeMem(0xdf5b, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xa508, gbc.sp());
        EXPECT(0xdf5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf5b));
        EXPECT(0xd5, gbc.readMem(0xdf5c));
        // CB D5 01E6
        gbc.setState(0x64f5, 0x778d, 0x8dd0, 0xb714, 0xbc19, 0xac27, 0x1, 0x0);
        gbc.writeMem(0x64f5, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x778d, gbc.sp());
        EXPECT(0x64f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 01E7
        gbc.setState(0xdc85, 0x5fa6, 0xaf0, 0x95ae, 0x1b38, 0xd9cf, 0x0, 0x0);
        gbc.writeMem(0xdc85, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x5fa6, gbc.sp());
        EXPECT(0xdc87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc85));
        EXPECT(0xd5, gbc.readMem(0xdc86));
        // CB D5 01E8
        gbc.setState(0x3225, 0x8d30, 0xc8a0, 0x9e7e, 0xd307, 0x2a31, 0x1, 0x0);
        gbc.writeMem(0x3225, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x8d30, gbc.sp());
        EXPECT(0x3227, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 01E9
        gbc.setState(0x62b5, 0xf74d, 0x88f0, 0xe6dc, 0x49b4, 0xa68, 0x1, 0x1);
        gbc.writeMem(0x62b5, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xf74d, gbc.sp());
        EXPECT(0x62b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 01EA
        gbc.setState(0x11a1, 0xc873, 0x2c60, 0x907a, 0xce3f, 0x8e99, 0x1, 0x0);
        gbc.writeMem(0x11a1, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xc873, gbc.sp());
        EXPECT(0x11a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 01EB
        gbc.setState(0xc4df, 0xce40, 0xc410, 0xebe, 0x842a, 0x2a4e, 0x1, 0x1);
        gbc.writeMem(0xc4df, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xce40, gbc.sp());
        EXPECT(0xc4e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4df));
        EXPECT(0xd5, gbc.readMem(0xc4e0));
        // CB D5 01EC
        gbc.setState(0x2170, 0x49cd, 0x21a0, 0x6d32, 0x6e43, 0x9451, 0x0, 0x0);
        gbc.writeMem(0x2170, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x49cd, gbc.sp());
        EXPECT(0x2172, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 01ED
        gbc.setState(0x5415, 0x95d8, 0x4150, 0xb0f8, 0xebc6, 0x2785, 0x1, 0x0);
        gbc.writeMem(0x5415, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x95d8, gbc.sp());
        EXPECT(0x5417, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 01EE
        gbc.setState(0x820b, 0xfe65, 0xd4c0, 0x1d8c, 0x5ed1, 0x48f0, 0x0, 0x1);
        gbc.writeMem(0x820b, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xfe65, gbc.sp());
        EXPECT(0x820d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x820b));
        EXPECT(0xd5, gbc.readMem(0x820c));
        // CB D5 01EF
        gbc.setState(0x4b4e, 0x92d5, 0x53a0, 0x95e5, 0x5642, 0x6897, 0x1, 0x1);
        gbc.writeMem(0x4b4e, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x92d5, gbc.sp());
        EXPECT(0x4b50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 01F0
        gbc.setState(0x735b, 0x395b, 0xa30, 0x2bfb, 0x7a3b, 0xdece, 0x0, 0x1);
        gbc.writeMem(0x735b, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x395b, gbc.sp());
        EXPECT(0x735d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 01F1
        gbc.setState(0x8c46, 0x8c51, 0x5140, 0xc7ae, 0xcbf7, 0xf16, 0x0, 0x0);
        gbc.writeMem(0x8c46, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x8c51, gbc.sp());
        EXPECT(0x8c48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c46));
        EXPECT(0xd5, gbc.readMem(0x8c47));
        // CB D5 01F2
        gbc.setState(0x42e4, 0xca51, 0xeb00, 0x152e, 0x9308, 0xb7e8, 0x1, 0x1);
        gbc.writeMem(0x42e4, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xca51, gbc.sp());
        EXPECT(0x42e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 01F3
        gbc.setState(0xd6be, 0x3eed, 0x9a0, 0x93f3, 0xbb95, 0xc0d6, 0x1, 0x0);
        gbc.writeMem(0xd6be, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x3eed, gbc.sp());
        EXPECT(0xd6c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6be));
        EXPECT(0xd5, gbc.readMem(0xd6bf));
        // CB D5 01F4
        gbc.setState(0x1d7d, 0xafb, 0xbf50, 0xaab, 0xdc40, 0xeb62, 0x0, 0x0);
        gbc.writeMem(0x1d7d, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xafb, gbc.sp());
        EXPECT(0x1d7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 01F5
        gbc.setState(0xdbd5, 0x35d0, 0x7000, 0x3c37, 0x978e, 0x4cde, 0x1, 0x0);
        gbc.writeMem(0xdbd5, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x35d0, gbc.sp());
        EXPECT(0xdbd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbd5));
        EXPECT(0xd5, gbc.readMem(0xdbd6));
        // CB D5 01F6
        gbc.setState(0x3a0e, 0x4f4b, 0x7a00, 0x5080, 0x710f, 0xec9e, 0x1, 0x1);
        gbc.writeMem(0x3a0e, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x4f4b, gbc.sp());
        EXPECT(0x3a10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 01F7
        gbc.setState(0x774f, 0x1b8d, 0x9c20, 0xd6e7, 0x7313, 0xea3f, 0x1, 0x1);
        gbc.writeMem(0x774f, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x1b8d, gbc.sp());
        EXPECT(0x7751, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 01F8
        gbc.setState(0xc8fc, 0xb4e1, 0x5aa0, 0x2301, 0x34ef, 0xafc2, 0x1, 0x1);
        gbc.writeMem(0xc8fc, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb4e1, gbc.sp());
        EXPECT(0xc8fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8fc));
        EXPECT(0xd5, gbc.readMem(0xc8fd));
        // CB D5 01F9
        gbc.setState(0x786c, 0x4e1e, 0xb270, 0x9e57, 0x4fb8, 0xf079, 0x0, 0x1);
        gbc.writeMem(0x786c, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x4e1e, gbc.sp());
        EXPECT(0x786e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 01FA
        gbc.setState(0x885, 0x1e41, 0xd9b0, 0x3957, 0x9f76, 0x4a71, 0x0, 0x1);
        gbc.writeMem(0x885, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x1e41, gbc.sp());
        EXPECT(0x887, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 01FB
        gbc.setState(0x7882, 0x1190, 0xce10, 0xef18, 0xb73e, 0x3efe, 0x0, 0x1);
        gbc.writeMem(0x7882, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x1190, gbc.sp());
        EXPECT(0x7884, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 01FC
        gbc.setState(0xb710, 0x944d, 0x7310, 0xf140, 0x9dc8, 0x453a, 0x0, 0x0);
        gbc.writeMem(0xb710, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x944d, gbc.sp());
        EXPECT(0xb712, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb710));
        EXPECT(0xd5, gbc.readMem(0xb711));
        // CB D5 01FD
        gbc.setState(0xc898, 0xfbd9, 0x5600, 0xebca, 0x54ae, 0xb5d4, 0x1, 0x1);
        gbc.writeMem(0xc898, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xfbd9, gbc.sp());
        EXPECT(0xc89a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc898));
        EXPECT(0xd5, gbc.readMem(0xc899));
        // CB D5 01FE
        gbc.setState(0xde55, 0xecbe, 0x290, 0x99db, 0xebda, 0xe29f, 0x1, 0x1);
        gbc.writeMem(0xde55, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xecbe, gbc.sp());
        EXPECT(0xde57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde55));
        EXPECT(0xd5, gbc.readMem(0xde56));
        // CB D5 01FF
        gbc.setState(0x767c, 0x17fc, 0xd660, 0x6b50, 0xb6b6, 0x4afc, 0x1, 0x1);
        gbc.writeMem(0x767c, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x17fc, gbc.sp());
        EXPECT(0x767e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0200
        gbc.setState(0xb649, 0xc92d, 0xe350, 0x1fd4, 0x288b, 0x760e, 0x1, 0x1);
        gbc.writeMem(0xb649, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xc92d, gbc.sp());
        EXPECT(0xb64b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb649));
        EXPECT(0xd5, gbc.readMem(0xb64a));
        // CB D5 0201
        gbc.setState(0x48ea, 0x3c59, 0x5560, 0x1fc0, 0x7008, 0xfa4b, 0x0, 0x0);
        gbc.writeMem(0x48ea, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x3c59, gbc.sp());
        EXPECT(0x48ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0202
        gbc.setState(0x89b, 0xb986, 0x5170, 0x889c, 0xad2d, 0xdde3, 0x1, 0x1);
        gbc.writeMem(0x89b, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb986, gbc.sp());
        EXPECT(0x89d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0203
        gbc.setState(0x8d42, 0xe150, 0x73a0, 0xd98c, 0x6dd1, 0x2b7, 0x0, 0x1);
        gbc.writeMem(0x8d42, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xe150, gbc.sp());
        EXPECT(0x8d44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d42));
        EXPECT(0xd5, gbc.readMem(0x8d43));
        // CB D5 0204
        gbc.setState(0x2a6b, 0x62f1, 0xe1d0, 0x6453, 0x247d, 0x233c, 0x0, 0x1);
        gbc.writeMem(0x2a6b, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x62f1, gbc.sp());
        EXPECT(0x2a6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0205
        gbc.setState(0xe188, 0xec5c, 0x79e0, 0x347b, 0x3508, 0xcef3, 0x1, 0x1);
        gbc.writeMem(0xe188, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xec5c, gbc.sp());
        EXPECT(0xe18a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe188));
        EXPECT(0xd5, gbc.readMem(0xe189));
        // CB D5 0206
        gbc.setState(0xbd4b, 0x9ac0, 0x3800, 0x3a6d, 0xe4d, 0x74c6, 0x0, 0x0);
        gbc.writeMem(0xbd4b, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x9ac0, gbc.sp());
        EXPECT(0xbd4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd4b));
        EXPECT(0xd5, gbc.readMem(0xbd4c));
        // CB D5 0207
        gbc.setState(0xbec7, 0xf10b, 0x6d20, 0xa6b7, 0xa5da, 0x3cbd, 0x1, 0x1);
        gbc.writeMem(0xbec7, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xf10b, gbc.sp());
        EXPECT(0xbec9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbec7));
        EXPECT(0xd5, gbc.readMem(0xbec8));
        // CB D5 0208
        gbc.setState(0x2fea, 0xfd2, 0xbc70, 0xbf96, 0x3e08, 0x901d, 0x0, 0x1);
        gbc.writeMem(0x2fea, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xfd2, gbc.sp());
        EXPECT(0x2fec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0209
        gbc.setState(0x2915, 0xd7bc, 0x9d40, 0x28d2, 0xe124, 0xce35, 0x0, 0x0);
        gbc.writeMem(0x2915, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xd7bc, gbc.sp());
        EXPECT(0x2917, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 020A
        gbc.setState(0xcecc, 0x8776, 0x220, 0x8a63, 0x2a02, 0x7654, 0x0, 0x0);
        gbc.writeMem(0xcecc, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x8776, gbc.sp());
        EXPECT(0xcece, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcecc));
        EXPECT(0xd5, gbc.readMem(0xcecd));
        // CB D5 020B
        gbc.setState(0x2f8b, 0x1c61, 0x7860, 0xa3bd, 0x9df1, 0x4fbe, 0x1, 0x0);
        gbc.writeMem(0x2f8b, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x1c61, gbc.sp());
        EXPECT(0x2f8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 020C
        gbc.setState(0x4c77, 0xb40d, 0xc810, 0x4509, 0x4696, 0x1fcf, 0x0, 0x0);
        gbc.writeMem(0x4c77, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb40d, gbc.sp());
        EXPECT(0x4c79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 020D
        gbc.setState(0x3ea4, 0xe74c, 0xf110, 0x3e92, 0x52d0, 0x6dd6, 0x1, 0x0);
        gbc.writeMem(0x3ea4, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xe74c, gbc.sp());
        EXPECT(0x3ea6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 020E
        gbc.setState(0x3407, 0x991e, 0x2470, 0x5cb7, 0x3ba5, 0x6dcc, 0x1, 0x1);
        gbc.writeMem(0x3407, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x991e, gbc.sp());
        EXPECT(0x3409, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 020F
        gbc.setState(0x7b2b, 0x3d09, 0x31e0, 0x4d58, 0x6980, 0x7412, 0x0, 0x1);
        gbc.writeMem(0x7b2b, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x3d09, gbc.sp());
        EXPECT(0x7b2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0210
        gbc.setState(0x17d2, 0x1741, 0xc3a0, 0x5ea8, 0xbdd8, 0x7da6, 0x1, 0x0);
        gbc.writeMem(0x17d2, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x1741, gbc.sp());
        EXPECT(0x17d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0211
        gbc.setState(0x5f22, 0x6d73, 0x43f0, 0xf8bf, 0xdb75, 0xeea0, 0x1, 0x0);
        gbc.writeMem(0x5f22, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x6d73, gbc.sp());
        EXPECT(0x5f24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0212
        gbc.setState(0x70d7, 0x9877, 0x8740, 0x9999, 0x9979, 0x21cf, 0x1, 0x0);
        gbc.writeMem(0x70d7, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x9877, gbc.sp());
        EXPECT(0x70d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0213
        gbc.setState(0xe4f2, 0x6a59, 0xb3c0, 0xc8ec, 0x847f, 0xbc9e, 0x0, 0x0);
        gbc.writeMem(0xe4f2, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x6a59, gbc.sp());
        EXPECT(0xe4f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4f2));
        EXPECT(0xd5, gbc.readMem(0xe4f3));
        // CB D5 0214
        gbc.setState(0xd68f, 0xddf6, 0x30a0, 0x1a89, 0x4f43, 0x3bc0, 0x1, 0x1);
        gbc.writeMem(0xd68f, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xddf6, gbc.sp());
        EXPECT(0xd691, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd68f));
        EXPECT(0xd5, gbc.readMem(0xd690));
        // CB D5 0215
        gbc.setState(0x1d58, 0xee5a, 0x2f30, 0xd688, 0x8789, 0xcad1, 0x1, 0x1);
        gbc.writeMem(0x1d58, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xee5a, gbc.sp());
        EXPECT(0x1d5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0217
        gbc.setState(0xe341, 0x3a66, 0x21a0, 0x6b02, 0xcd73, 0xfcb3, 0x1, 0x1);
        gbc.writeMem(0xe341, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x3a66, gbc.sp());
        EXPECT(0xe343, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe341));
        EXPECT(0xd5, gbc.readMem(0xe342));
        // CB D5 0218
        gbc.setState(0x6822, 0x2a56, 0x7d0, 0x24a5, 0x91c3, 0xb270, 0x0, 0x1);
        gbc.writeMem(0x6822, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x2a56, gbc.sp());
        EXPECT(0x6824, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0219
        gbc.setState(0xd804, 0x5c58, 0xaaf0, 0x66e, 0x597d, 0x4272, 0x1, 0x1);
        gbc.writeMem(0xd804, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x5c58, gbc.sp());
        EXPECT(0xd806, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd804));
        EXPECT(0xd5, gbc.readMem(0xd805));
        // CB D5 021A
        gbc.setState(0x104a, 0x17ea, 0x1920, 0x78f6, 0x4ec2, 0xe1f8, 0x0, 0x1);
        gbc.writeMem(0x104a, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x17ea, gbc.sp());
        EXPECT(0x104c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 021C
        gbc.setState(0xc0d5, 0x4fcd, 0xfc0, 0x5968, 0xee9c, 0x4f1, 0x0, 0x0);
        gbc.writeMem(0xc0d5, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x4fcd, gbc.sp());
        EXPECT(0xc0d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0d5));
        EXPECT(0xd5, gbc.readMem(0xc0d6));
        // CB D5 021D
        gbc.setState(0xa153, 0x4311, 0x7fe0, 0x4bfc, 0x5918, 0x88db, 0x0, 0x0);
        gbc.writeMem(0xa153, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x4311, gbc.sp());
        EXPECT(0xa155, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa153));
        EXPECT(0xd5, gbc.readMem(0xa154));
        // CB D5 021E
        gbc.setState(0x8bc0, 0x4357, 0x2820, 0x2513, 0xdd75, 0xa0e2, 0x0, 0x0);
        gbc.writeMem(0x8bc0, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x4357, gbc.sp());
        EXPECT(0x8bc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bc0));
        EXPECT(0xd5, gbc.readMem(0x8bc1));
        // CB D5 021F
        gbc.setState(0x31fe, 0x2d1b, 0x7200, 0x4fb0, 0xe6c0, 0x771d, 0x0, 0x0);
        gbc.writeMem(0x31fe, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2d1b, gbc.sp());
        EXPECT(0x3200, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0221
        gbc.setState(0x4b65, 0xf9e0, 0x62d0, 0x8e77, 0x96dc, 0xcb0e, 0x0, 0x0);
        gbc.writeMem(0x4b65, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xf9e0, gbc.sp());
        EXPECT(0x4b67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0222
        gbc.setState(0xc441, 0xdef7, 0x42e0, 0xb346, 0x1d0a, 0x136e, 0x0, 0x0);
        gbc.writeMem(0xc441, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xdef7, gbc.sp());
        EXPECT(0xc443, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc441));
        EXPECT(0xd5, gbc.readMem(0xc442));
        // CB D5 0223
        gbc.setState(0xa76, 0x720, 0x9f10, 0x6b9e, 0x2958, 0xa928, 0x0, 0x1);
        gbc.writeMem(0xa76, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x720, gbc.sp());
        EXPECT(0xa78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0224
        gbc.setState(0x2b91, 0xd312, 0x9020, 0x3d57, 0xf7cc, 0x5925, 0x1, 0x0);
        gbc.writeMem(0x2b91, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xd312, gbc.sp());
        EXPECT(0x2b93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0225
        gbc.setState(0xacf6, 0xe76e, 0x7400, 0xd72e, 0x4ee, 0x275b, 0x1, 0x1);
        gbc.writeMem(0xacf6, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xe76e, gbc.sp());
        EXPECT(0xacf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacf6));
        EXPECT(0xd5, gbc.readMem(0xacf7));
        // CB D5 0226
        gbc.setState(0x375a, 0xd4ef, 0x98f0, 0x6624, 0xd83, 0x34cf, 0x0, 0x1);
        gbc.writeMem(0x375a, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xd4ef, gbc.sp());
        EXPECT(0x375c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0227
        gbc.setState(0x761a, 0xe8f8, 0xd740, 0x9b8f, 0x1a26, 0xea8c, 0x0, 0x1);
        gbc.writeMem(0x761a, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xe8f8, gbc.sp());
        EXPECT(0x761c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0228
        gbc.setState(0x44dd, 0x27b8, 0xb860, 0xf31b, 0x3639, 0x5991, 0x0, 0x0);
        gbc.writeMem(0x44dd, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x27b8, gbc.sp());
        EXPECT(0x44df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0229
        gbc.setState(0x2be0, 0x57e8, 0xc350, 0xa987, 0xcca5, 0x2fab, 0x0, 0x0);
        gbc.writeMem(0x2be0, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x57e8, gbc.sp());
        EXPECT(0x2be2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 022A
        gbc.setState(0xcbff, 0xafdd, 0xf60, 0x5e93, 0x66a5, 0xcee4, 0x0, 0x1);
        gbc.writeMem(0xcbff, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xafdd, gbc.sp());
        EXPECT(0xcc01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbff));
        EXPECT(0xd5, gbc.readMem(0xcc00));
        // CB D5 022B
        gbc.setState(0x7404, 0xccda, 0x6a10, 0x3585, 0x4704, 0xda88, 0x1, 0x1);
        gbc.writeMem(0x7404, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xccda, gbc.sp());
        EXPECT(0x7406, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 022C
        gbc.setState(0x1ae8, 0x9dd, 0x3f20, 0x49d, 0x342a, 0xbdb4, 0x1, 0x1);
        gbc.writeMem(0x1ae8, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x9dd, gbc.sp());
        EXPECT(0x1aea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 022D
        gbc.setState(0x5771, 0xd39e, 0x4e80, 0x892, 0x6aab, 0xcbff, 0x0, 0x1);
        gbc.writeMem(0x5771, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xd39e, gbc.sp());
        EXPECT(0x5773, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 022E
        gbc.setState(0x32e9, 0x4d85, 0xf790, 0xc49c, 0x406a, 0xfcff, 0x0, 0x0);
        gbc.writeMem(0x32e9, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x4d85, gbc.sp());
        EXPECT(0x32eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 022F
        gbc.setState(0xa382, 0x9d8e, 0x8ef0, 0xea1a, 0x543, 0x950, 0x0, 0x1);
        gbc.writeMem(0xa382, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x9d8e, gbc.sp());
        EXPECT(0xa384, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa382));
        EXPECT(0xd5, gbc.readMem(0xa383));
        // CB D5 0230
        gbc.setState(0x98c5, 0x5504, 0x54d0, 0x9448, 0x913, 0x4131, 0x0, 0x0);
        gbc.writeMem(0x98c5, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x5504, gbc.sp());
        EXPECT(0x98c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98c5));
        EXPECT(0xd5, gbc.readMem(0x98c6));
        // CB D5 0231
        gbc.setState(0xddcb, 0x4c29, 0xc830, 0xb93c, 0xdf63, 0x51fc, 0x0, 0x1);
        gbc.writeMem(0xddcb, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4c29, gbc.sp());
        EXPECT(0xddcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddcb));
        EXPECT(0xd5, gbc.readMem(0xddcc));
        // CB D5 0232
        gbc.setState(0x7b80, 0x89e3, 0x59a0, 0x871d, 0xa457, 0x36b0, 0x1, 0x0);
        gbc.writeMem(0x7b80, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x89e3, gbc.sp());
        EXPECT(0x7b82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0233
        gbc.setState(0x4637, 0x69c8, 0x1600, 0x468f, 0x5018, 0x6ef2, 0x1, 0x0);
        gbc.writeMem(0x4637, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x69c8, gbc.sp());
        EXPECT(0x4639, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0235
        gbc.setState(0xdc62, 0xcc12, 0x2f60, 0xb6c5, 0xe37b, 0x97e7, 0x1, 0x1);
        gbc.writeMem(0xdc62, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xcc12, gbc.sp());
        EXPECT(0xdc64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc62));
        EXPECT(0xd5, gbc.readMem(0xdc63));
        // CB D5 0236
        gbc.setState(0x5aa4, 0x809c, 0x16d0, 0x5cf0, 0x3cd8, 0x5862, 0x0, 0x1);
        gbc.writeMem(0x5aa4, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x809c, gbc.sp());
        EXPECT(0x5aa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0237
        gbc.setState(0x9259, 0x27f2, 0x4490, 0x69f8, 0x3c4b, 0x85d8, 0x1, 0x1);
        gbc.writeMem(0x9259, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x27f2, gbc.sp());
        EXPECT(0x925b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9259));
        EXPECT(0xd5, gbc.readMem(0x925a));
        // CB D5 0239
        gbc.setState(0x13e3, 0x9c47, 0x61f0, 0xe917, 0x47d7, 0xd3d3, 0x1, 0x0);
        gbc.writeMem(0x13e3, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x9c47, gbc.sp());
        EXPECT(0x13e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 023A
        gbc.setState(0xd03b, 0x3e8e, 0x6b00, 0x1ffb, 0x26ea, 0xb508, 0x0, 0x0);
        gbc.writeMem(0xd03b, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x3e8e, gbc.sp());
        EXPECT(0xd03d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd03b));
        EXPECT(0xd5, gbc.readMem(0xd03c));
        // CB D5 023B
        gbc.setState(0x3a43, 0x9bb7, 0xb600, 0xda4b, 0x4691, 0x9bbc, 0x1, 0x0);
        gbc.writeMem(0x3a43, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x9bb7, gbc.sp());
        EXPECT(0x3a45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 023D
        gbc.setState(0xc24d, 0xa0d, 0xbae0, 0x2276, 0x650d, 0x7abd, 0x1, 0x1);
        gbc.writeMem(0xc24d, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xa0d, gbc.sp());
        EXPECT(0xc24f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc24d));
        EXPECT(0xd5, gbc.readMem(0xc24e));
        // CB D5 023E
        gbc.setState(0xbeee, 0x7318, 0xc540, 0x7530, 0x8582, 0x82a2, 0x0, 0x0);
        gbc.writeMem(0xbeee, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7318, gbc.sp());
        EXPECT(0xbef0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbeee));
        EXPECT(0xd5, gbc.readMem(0xbeef));
        // CB D5 023F
        gbc.setState(0xccd0, 0x118b, 0x520, 0xe3a, 0xd1f0, 0x845e, 0x1, 0x0);
        gbc.writeMem(0xccd0, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x118b, gbc.sp());
        EXPECT(0xccd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccd0));
        EXPECT(0xd5, gbc.readMem(0xccd1));
        // CB D5 0240
        gbc.setState(0x24e4, 0x632, 0x42c0, 0xbfcc, 0x8135, 0x64dc, 0x1, 0x1);
        gbc.writeMem(0x24e4, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x632, gbc.sp());
        EXPECT(0x24e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0241
        gbc.setState(0x5aa5, 0xe486, 0x9170, 0x4794, 0xd8b9, 0xb4bd, 0x0, 0x1);
        gbc.writeMem(0x5aa5, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xe486, gbc.sp());
        EXPECT(0x5aa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0242
        gbc.setState(0xe739, 0xec49, 0x65e0, 0xe06d, 0xcfbd, 0x7d35, 0x0, 0x1);
        gbc.writeMem(0xe739, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xec49, gbc.sp());
        EXPECT(0xe73b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe739));
        EXPECT(0xd5, gbc.readMem(0xe73a));
        // CB D5 0243
        gbc.setState(0xa49e, 0x20c2, 0x5f10, 0x2d7a, 0x2c48, 0x6276, 0x0, 0x0);
        gbc.writeMem(0xa49e, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x20c2, gbc.sp());
        EXPECT(0xa4a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa49e));
        EXPECT(0xd5, gbc.readMem(0xa49f));
        // CB D5 0244
        gbc.setState(0x9216, 0xeab5, 0xbc40, 0x732b, 0xc2d5, 0x38f0, 0x1, 0x1);
        gbc.writeMem(0x9216, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xeab5, gbc.sp());
        EXPECT(0x9218, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9216));
        EXPECT(0xd5, gbc.readMem(0x9217));
        // CB D5 0245
        gbc.setState(0x4243, 0xaea2, 0x4c50, 0xc8dd, 0x25c5, 0x83b4, 0x0, 0x1);
        gbc.writeMem(0x4243, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xaea2, gbc.sp());
        EXPECT(0x4245, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0246
        gbc.setState(0xc51, 0x40b7, 0x5730, 0x471d, 0x308b, 0x9fa5, 0x0, 0x1);
        gbc.writeMem(0xc51, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x40b7, gbc.sp());
        EXPECT(0xc53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0248
        gbc.setState(0xa33, 0xf03, 0x44a0, 0xbc26, 0xf72e, 0x65b, 0x0, 0x1);
        gbc.writeMem(0xa33, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf03, gbc.sp());
        EXPECT(0xa35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0249
        gbc.setState(0x1240, 0x2f9c, 0xc280, 0xdff3, 0x2590, 0x89e5, 0x1, 0x0);
        gbc.writeMem(0x1240, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x2f9c, gbc.sp());
        EXPECT(0x1242, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 024A
        gbc.setState(0xad91, 0xb14, 0x3f10, 0x3aa5, 0x2825, 0xe0a9, 0x1, 0x1);
        gbc.writeMem(0xad91, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xb14, gbc.sp());
        EXPECT(0xad93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad91));
        EXPECT(0xd5, gbc.readMem(0xad92));
        // CB D5 024B
        gbc.setState(0xbd42, 0x28f, 0x8ac0, 0xcce5, 0xf2fa, 0xed9e, 0x0, 0x1);
        gbc.writeMem(0xbd42, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x28f, gbc.sp());
        EXPECT(0xbd44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd42));
        EXPECT(0xd5, gbc.readMem(0xbd43));
        // CB D5 024C
        gbc.setState(0x3fca, 0xfd9a, 0xa890, 0xde6d, 0x9d81, 0xd44d, 0x1, 0x1);
        gbc.writeMem(0x3fca, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xfd9a, gbc.sp());
        EXPECT(0x3fcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 024D
        gbc.setState(0x2eba, 0xd4bc, 0x7b90, 0x4c5f, 0xeee7, 0x692e, 0x1, 0x0);
        gbc.writeMem(0x2eba, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xd4bc, gbc.sp());
        EXPECT(0x2ebc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 024E
        gbc.setState(0xa090, 0x43bd, 0xbb80, 0x6e77, 0x3865, 0xf035, 0x1, 0x1);
        gbc.writeMem(0xa090, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x43bd, gbc.sp());
        EXPECT(0xa092, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa090));
        EXPECT(0xd5, gbc.readMem(0xa091));
        // CB D5 024F
        gbc.setState(0x509c, 0x81ad, 0x40, 0xf764, 0x22cb, 0x19b, 0x0, 0x0);
        gbc.writeMem(0x509c, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x81ad, gbc.sp());
        EXPECT(0x509e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0250
        gbc.setState(0x8142, 0xbe0f, 0x9b50, 0x4e2b, 0xe091, 0x1580, 0x0, 0x1);
        gbc.writeMem(0x8142, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xbe0f, gbc.sp());
        EXPECT(0x8144, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8142));
        EXPECT(0xd5, gbc.readMem(0x8143));
        // CB D5 0251
        gbc.setState(0x1d1b, 0xdca, 0xff70, 0x1a75, 0x1ce6, 0x781f, 0x0, 0x0);
        gbc.writeMem(0x1d1b, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xdca, gbc.sp());
        EXPECT(0x1d1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0252
        gbc.setState(0x7f79, 0x793a, 0x1820, 0xca98, 0x5881, 0x6065, 0x1, 0x1);
        gbc.writeMem(0x7f79, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x793a, gbc.sp());
        EXPECT(0x7f7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0253
        gbc.setState(0x9ad3, 0x2b41, 0x7490, 0x9dcd, 0xbf45, 0xab41, 0x0, 0x0);
        gbc.writeMem(0x9ad3, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x2b41, gbc.sp());
        EXPECT(0x9ad5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ad3));
        EXPECT(0xd5, gbc.readMem(0x9ad4));
        // CB D5 0254
        gbc.setState(0x9b93, 0x8ed1, 0x6690, 0xe117, 0x7028, 0x6c1a, 0x0, 0x0);
        gbc.writeMem(0x9b93, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x8ed1, gbc.sp());
        EXPECT(0x9b95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b93));
        EXPECT(0xd5, gbc.readMem(0x9b94));
        // CB D5 0255
        gbc.setState(0xb1ae, 0x687e, 0x8340, 0xbbe0, 0x4d40, 0xd762, 0x0, 0x1);
        gbc.writeMem(0xb1ae, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x687e, gbc.sp());
        EXPECT(0xb1b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1ae));
        EXPECT(0xd5, gbc.readMem(0xb1af));
        // CB D5 0256
        gbc.setState(0x73be, 0xdade, 0x4660, 0x6717, 0xd999, 0x1dc4, 0x0, 0x1);
        gbc.writeMem(0x73be, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xdade, gbc.sp());
        EXPECT(0x73c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0257
        gbc.setState(0x3c3e, 0xd8a9, 0xa5e0, 0xdfe4, 0x9c8d, 0x9c98, 0x0, 0x1);
        gbc.writeMem(0x3c3e, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd8a9, gbc.sp());
        EXPECT(0x3c40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0258
        gbc.setState(0xc046, 0x1657, 0xf860, 0x8aba, 0x9793, 0x1250, 0x0, 0x1);
        gbc.writeMem(0xc046, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x1657, gbc.sp());
        EXPECT(0xc048, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc046));
        EXPECT(0xd5, gbc.readMem(0xc047));
        // CB D5 0259
        gbc.setState(0x9969, 0xb820, 0xbbb0, 0x8bc5, 0x186a, 0x6a73, 0x0, 0x0);
        gbc.writeMem(0x9969, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb820, gbc.sp());
        EXPECT(0x996b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9969));
        EXPECT(0xd5, gbc.readMem(0x996a));
        // CB D5 025A
        gbc.setState(0xc1ad, 0xd2d4, 0x6a80, 0xae65, 0xe1a7, 0xb0b2, 0x0, 0x0);
        gbc.writeMem(0xc1ad, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xd2d4, gbc.sp());
        EXPECT(0xc1af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1ad));
        EXPECT(0xd5, gbc.readMem(0xc1ae));
        // CB D5 025B
        gbc.setState(0xb62d, 0xe8bc, 0x79f0, 0x66aa, 0x46d8, 0xb45d, 0x0, 0x1);
        gbc.writeMem(0xb62d, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xe8bc, gbc.sp());
        EXPECT(0xb62f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb62d));
        EXPECT(0xd5, gbc.readMem(0xb62e));
        // CB D5 025C
        gbc.setState(0xd49e, 0x3f5f, 0xaee0, 0x1648, 0xe5fc, 0x8496, 0x1, 0x0);
        gbc.writeMem(0xd49e, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3f5f, gbc.sp());
        EXPECT(0xd4a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd49e));
        EXPECT(0xd5, gbc.readMem(0xd49f));
        // CB D5 025D
        gbc.setState(0x9090, 0xb0bb, 0x6d30, 0xa7fd, 0xc28d, 0x793c, 0x1, 0x0);
        gbc.writeMem(0x9090, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xb0bb, gbc.sp());
        EXPECT(0x9092, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9090));
        EXPECT(0xd5, gbc.readMem(0x9091));
        // CB D5 025E
        gbc.setState(0xde7f, 0x3e83, 0xc2d0, 0xd6ec, 0x70b2, 0x7c9b, 0x1, 0x0);
        gbc.writeMem(0xde7f, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x3e83, gbc.sp());
        EXPECT(0xde81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde7f));
        EXPECT(0xd5, gbc.readMem(0xde80));
        // CB D5 025F
        gbc.setState(0xab6, 0x87b7, 0x3950, 0x2701, 0x6824, 0x7198, 0x1, 0x1);
        gbc.writeMem(0xab6, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x87b7, gbc.sp());
        EXPECT(0xab8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0260
        gbc.setState(0x428b, 0x922d, 0xea40, 0x3868, 0xd127, 0xb706, 0x0, 0x0);
        gbc.writeMem(0x428b, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x922d, gbc.sp());
        EXPECT(0x428d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0261
        gbc.setState(0x93bd, 0x9aa4, 0x3dd0, 0x4e0, 0x955d, 0x52d5, 0x1, 0x0);
        gbc.writeMem(0x93bd, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x9aa4, gbc.sp());
        EXPECT(0x93bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93bd));
        EXPECT(0xd5, gbc.readMem(0x93be));
        // CB D5 0262
        gbc.setState(0x4741, 0xbc3e, 0xeb10, 0xfc6c, 0x861d, 0x1719, 0x1, 0x1);
        gbc.writeMem(0x4741, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xbc3e, gbc.sp());
        EXPECT(0x4743, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0263
        gbc.setState(0x5feb, 0x5468, 0x910, 0xd559, 0x5832, 0x3357, 0x1, 0x0);
        gbc.writeMem(0x5feb, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x5468, gbc.sp());
        EXPECT(0x5fed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0264
        gbc.setState(0x265, 0x6913, 0xa6a0, 0x4f77, 0x1332, 0xbbe4, 0x1, 0x1);
        gbc.writeMem(0x265, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6913, gbc.sp());
        EXPECT(0x267, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0265
        gbc.setState(0x7650, 0x6334, 0xe060, 0x5f90, 0x2fe8, 0x5c63, 0x1, 0x0);
        gbc.writeMem(0x7650, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x6334, gbc.sp());
        EXPECT(0x7652, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0266
        gbc.setState(0x7bb1, 0x78a5, 0x6a90, 0x70dc, 0xa061, 0x8067, 0x1, 0x1);
        gbc.writeMem(0x7bb1, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x78a5, gbc.sp());
        EXPECT(0x7bb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0267
        gbc.setState(0xd8aa, 0xdd30, 0xc850, 0xfaa5, 0xf145, 0xe0cc, 0x1, 0x0);
        gbc.writeMem(0xd8aa, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xdd30, gbc.sp());
        EXPECT(0xd8ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8aa));
        EXPECT(0xd5, gbc.readMem(0xd8ab));
        // CB D5 0268
        gbc.setState(0xeae5, 0x9194, 0x70a0, 0x9848, 0xc2c6, 0xdf02, 0x0, 0x0);
        gbc.writeMem(0xeae5, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9194, gbc.sp());
        EXPECT(0xeae7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeae5));
        EXPECT(0xd5, gbc.readMem(0xeae6));
        // CB D5 0269
        gbc.setState(0x91a, 0xa928, 0xa80, 0xe17d, 0x630f, 0xddf, 0x1, 0x0);
        gbc.writeMem(0x91a, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa928, gbc.sp());
        EXPECT(0x91c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 026A
        gbc.setState(0x3f43, 0xfb04, 0x7a70, 0xbac9, 0x3d04, 0x8b1b, 0x0, 0x0);
        gbc.writeMem(0x3f43, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xfb04, gbc.sp());
        EXPECT(0x3f45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 026B
        gbc.setState(0xc2c4, 0x295b, 0xd9b0, 0xe602, 0x5f71, 0xb7b5, 0x0, 0x0);
        gbc.writeMem(0xc2c4, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x295b, gbc.sp());
        EXPECT(0xc2c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2c4));
        EXPECT(0xd5, gbc.readMem(0xc2c5));
        // CB D5 026C
        gbc.setState(0xba96, 0x6ea9, 0x59d0, 0xfd9e, 0xfc2b, 0xb3ed, 0x0, 0x1);
        gbc.writeMem(0xba96, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x6ea9, gbc.sp());
        EXPECT(0xba98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba96));
        EXPECT(0xd5, gbc.readMem(0xba97));
        // CB D5 026D
        gbc.setState(0x89da, 0xfcdb, 0x47c0, 0x25ed, 0x2ace, 0x19af, 0x1, 0x1);
        gbc.writeMem(0x89da, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xfcdb, gbc.sp());
        EXPECT(0x89dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89da));
        EXPECT(0xd5, gbc.readMem(0x89db));
        // CB D5 026E
        gbc.setState(0x41b6, 0xa3b4, 0x27e0, 0xd4e0, 0xc6, 0xdedc, 0x0, 0x1);
        gbc.writeMem(0x41b6, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xa3b4, gbc.sp());
        EXPECT(0x41b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 026F
        gbc.setState(0xc022, 0x4d0, 0xb9e0, 0xd3e4, 0x7662, 0x1dc6, 0x1, 0x1);
        gbc.writeMem(0xc022, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4d0, gbc.sp());
        EXPECT(0xc024, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc022));
        EXPECT(0xd5, gbc.readMem(0xc023));
        // CB D5 0270
        gbc.setState(0x4326, 0xd8ee, 0x6d90, 0x9be3, 0x2fd, 0xda5d, 0x1, 0x1);
        gbc.writeMem(0x4326, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xd8ee, gbc.sp());
        EXPECT(0x4328, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0271
        gbc.setState(0x9c83, 0x12e2, 0x8200, 0x348f, 0x37f1, 0x4dcc, 0x1, 0x0);
        gbc.writeMem(0x9c83, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x12e2, gbc.sp());
        EXPECT(0x9c85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c83));
        EXPECT(0xd5, gbc.readMem(0x9c84));
        // CB D5 0272
        gbc.setState(0xae01, 0x23e1, 0x48d0, 0xd70e, 0x8569, 0xde10, 0x0, 0x1);
        gbc.writeMem(0xae01, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x23e1, gbc.sp());
        EXPECT(0xae03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae01));
        EXPECT(0xd5, gbc.readMem(0xae02));
        // CB D5 0273
        gbc.setState(0xdc11, 0x69f6, 0x6770, 0x17b5, 0x582e, 0x9ec1, 0x0, 0x0);
        gbc.writeMem(0xdc11, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x69f6, gbc.sp());
        EXPECT(0xdc13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc11));
        EXPECT(0xd5, gbc.readMem(0xdc12));
        // CB D5 0274
        gbc.setState(0xcf05, 0x9c21, 0x8b20, 0x6145, 0x4a8a, 0xe5f1, 0x1, 0x0);
        gbc.writeMem(0xcf05, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x9c21, gbc.sp());
        EXPECT(0xcf07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf05));
        EXPECT(0xd5, gbc.readMem(0xcf06));
        // CB D5 0275
        gbc.setState(0xd46a, 0x213, 0x3060, 0xb9b7, 0x4f63, 0x5a79, 0x0, 0x0);
        gbc.writeMem(0xd46a, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x213, gbc.sp());
        EXPECT(0xd46c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd46a));
        EXPECT(0xd5, gbc.readMem(0xd46b));
        // CB D5 0276
        gbc.setState(0x45e7, 0x861, 0x1c90, 0x6df4, 0x96fc, 0xc598, 0x0, 0x0);
        gbc.writeMem(0x45e7, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x861, gbc.sp());
        EXPECT(0x45e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0277
        gbc.setState(0xc73c, 0x9c42, 0xa4c0, 0x52ec, 0xfef, 0xbb8, 0x0, 0x0);
        gbc.writeMem(0xc73c, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x9c42, gbc.sp());
        EXPECT(0xc73e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc73c));
        EXPECT(0xd5, gbc.readMem(0xc73d));
        // CB D5 0278
        gbc.setState(0xa9bb, 0xf544, 0x2940, 0x504e, 0x5c9c, 0x3086, 0x0, 0x1);
        gbc.writeMem(0xa9bb, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xf544, gbc.sp());
        EXPECT(0xa9bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9bb));
        EXPECT(0xd5, gbc.readMem(0xa9bc));
        // CB D5 0279
        gbc.setState(0xc051, 0x6ec9, 0x3a90, 0x80f5, 0x284d, 0xed65, 0x1, 0x0);
        gbc.writeMem(0xc051, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x6ec9, gbc.sp());
        EXPECT(0xc053, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc051));
        EXPECT(0xd5, gbc.readMem(0xc052));
        // CB D5 027B
        gbc.setState(0x7bdb, 0x7164, 0xfc10, 0x63f4, 0x6c67, 0x6009, 0x0, 0x1);
        gbc.writeMem(0x7bdb, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x7164, gbc.sp());
        EXPECT(0x7bdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 027C
        gbc.setState(0x6d4e, 0xc0ad, 0xde50, 0xa87, 0xf416, 0xe42c, 0x1, 0x0);
        gbc.writeMem(0x6d4e, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xc0ad, gbc.sp());
        EXPECT(0x6d50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 027D
        gbc.setState(0x9bf6, 0x1fcb, 0x8510, 0x7190, 0x8333, 0xd789, 0x1, 0x1);
        gbc.writeMem(0x9bf6, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x1fcb, gbc.sp());
        EXPECT(0x9bf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bf6));
        EXPECT(0xd5, gbc.readMem(0x9bf7));
        // CB D5 027E
        gbc.setState(0xd543, 0x8691, 0x1c90, 0x7faa, 0x7654, 0x412, 0x0, 0x1);
        gbc.writeMem(0xd543, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x8691, gbc.sp());
        EXPECT(0xd545, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd543));
        EXPECT(0xd5, gbc.readMem(0xd544));
        // CB D5 027F
        gbc.setState(0x2a2d, 0x4bec, 0x8690, 0xb625, 0xa766, 0x4769, 0x0, 0x0);
        gbc.writeMem(0x2a2d, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x4bec, gbc.sp());
        EXPECT(0x2a2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0280
        gbc.setState(0x948e, 0xa7d2, 0x6340, 0x18f3, 0xabc8, 0x38fc, 0x0, 0x0);
        gbc.writeMem(0x948e, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xa7d2, gbc.sp());
        EXPECT(0x9490, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x948e));
        EXPECT(0xd5, gbc.readMem(0x948f));
        // CB D5 0281
        gbc.setState(0x7bb8, 0xa6b3, 0x8440, 0x5b70, 0x7621, 0xf79d, 0x0, 0x0);
        gbc.writeMem(0x7bb8, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xa6b3, gbc.sp());
        EXPECT(0x7bba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0282
        gbc.setState(0xd188, 0xdae, 0x2af0, 0x4f18, 0xd443, 0xc2b3, 0x1, 0x0);
        gbc.writeMem(0xd188, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xdae, gbc.sp());
        EXPECT(0xd18a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd188));
        EXPECT(0xd5, gbc.readMem(0xd189));
        // CB D5 0283
        gbc.setState(0xde9f, 0xd75f, 0x3360, 0xc441, 0x7bff, 0xb723, 0x1, 0x1);
        gbc.writeMem(0xde9f, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd75f, gbc.sp());
        EXPECT(0xdea1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde9f));
        EXPECT(0xd5, gbc.readMem(0xdea0));
        // CB D5 0284
        gbc.setState(0xaeae, 0xa905, 0x8650, 0xb47f, 0x85a0, 0x765c, 0x1, 0x0);
        gbc.writeMem(0xaeae, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa905, gbc.sp());
        EXPECT(0xaeb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeae));
        EXPECT(0xd5, gbc.readMem(0xaeaf));
        // CB D5 0285
        gbc.setState(0x5400, 0x4334, 0x10c0, 0x4caa, 0xf3ab, 0xe2f1, 0x0, 0x1);
        gbc.writeMem(0x5400, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x4334, gbc.sp());
        EXPECT(0x5402, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0286
        gbc.setState(0x52a2, 0x503b, 0x5fc0, 0x8574, 0x95bc, 0x4b95, 0x1, 0x0);
        gbc.writeMem(0x52a2, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x503b, gbc.sp());
        EXPECT(0x52a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0287
        gbc.setState(0x6f2e, 0x993e, 0x1aa0, 0x720c, 0x120, 0xe16d, 0x1, 0x1);
        gbc.writeMem(0x6f2e, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x993e, gbc.sp());
        EXPECT(0x6f30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0288
        gbc.setState(0x9bb0, 0x6200, 0xa800, 0x1981, 0x1e3d, 0x1631, 0x0, 0x1);
        gbc.writeMem(0x9bb0, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x6200, gbc.sp());
        EXPECT(0x9bb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bb0));
        EXPECT(0xd5, gbc.readMem(0x9bb1));
        // CB D5 0289
        gbc.setState(0x9718, 0x383, 0x7210, 0x640d, 0x113e, 0x310a, 0x1, 0x0);
        gbc.writeMem(0x9718, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x383, gbc.sp());
        EXPECT(0x971a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9718));
        EXPECT(0xd5, gbc.readMem(0x9719));
        // CB D5 028A
        gbc.setState(0x44a1, 0xa728, 0x74a0, 0x1260, 0xc4ef, 0x8cbd, 0x1, 0x1);
        gbc.writeMem(0x44a1, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xa728, gbc.sp());
        EXPECT(0x44a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 028B
        gbc.setState(0x342e, 0xa9d8, 0x4ab0, 0x153f, 0x75f, 0x51db, 0x0, 0x1);
        gbc.writeMem(0x342e, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa9d8, gbc.sp());
        EXPECT(0x3430, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 028C
        gbc.setState(0x5e70, 0xc7b8, 0xb0c0, 0x2293, 0x1ea6, 0x64bf, 0x1, 0x0);
        gbc.writeMem(0x5e70, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xc7b8, gbc.sp());
        EXPECT(0x5e72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 028D
        gbc.setState(0xcc19, 0x42e4, 0x160, 0x316f, 0x9bcb, 0x14ac, 0x0, 0x0);
        gbc.writeMem(0xcc19, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x42e4, gbc.sp());
        EXPECT(0xcc1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc19));
        EXPECT(0xd5, gbc.readMem(0xcc1a));
        // CB D5 028E
        gbc.setState(0x4bf7, 0xa8a1, 0xf6e0, 0x2c46, 0xbbb, 0x9c84, 0x0, 0x1);
        gbc.writeMem(0x4bf7, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xa8a1, gbc.sp());
        EXPECT(0x4bf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 028F
        gbc.setState(0x66f1, 0xa4b8, 0x1c50, 0x5bab, 0x9158, 0xe35a, 0x0, 0x1);
        gbc.writeMem(0x66f1, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xa4b8, gbc.sp());
        EXPECT(0x66f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0290
        gbc.setState(0x681b, 0x77ae, 0x12e0, 0xd0c7, 0xaa21, 0xb195, 0x1, 0x0);
        gbc.writeMem(0x681b, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x77ae, gbc.sp());
        EXPECT(0x681d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0292
        gbc.setState(0xede, 0xee77, 0xf20, 0xffc1, 0xf09, 0xa3e0, 0x0, 0x0);
        gbc.writeMem(0xede, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xee77, gbc.sp());
        EXPECT(0xee0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0293
        gbc.setState(0x156a, 0xfe8c, 0x95b0, 0x2642, 0xa25f, 0xf39b, 0x0, 0x0);
        gbc.writeMem(0x156a, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xfe8c, gbc.sp());
        EXPECT(0x156c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0294
        gbc.setState(0x9d8d, 0xab50, 0x7370, 0x4486, 0xa6ac, 0x4c22, 0x1, 0x1);
        gbc.writeMem(0x9d8d, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xab50, gbc.sp());
        EXPECT(0x9d8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d8d));
        EXPECT(0xd5, gbc.readMem(0x9d8e));
        // CB D5 0295
        gbc.setState(0xa2a3, 0x5382, 0x4480, 0x30c8, 0x532a, 0x5d28, 0x0, 0x0);
        gbc.writeMem(0xa2a3, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x5382, gbc.sp());
        EXPECT(0xa2a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2a3));
        EXPECT(0xd5, gbc.readMem(0xa2a4));
        // CB D5 0296
        gbc.setState(0x2edc, 0x9567, 0x9fa0, 0xd155, 0xac4b, 0xf450, 0x0, 0x0);
        gbc.writeMem(0x2edc, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x9567, gbc.sp());
        EXPECT(0x2ede, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0297
        gbc.setState(0x2bae, 0xc74f, 0x1bb0, 0x2471, 0x6924, 0x50a4, 0x1, 0x0);
        gbc.writeMem(0x2bae, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xc74f, gbc.sp());
        EXPECT(0x2bb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0298
        gbc.setState(0x954a, 0x5c99, 0x8fe0, 0x95b7, 0x82d0, 0xd323, 0x1, 0x1);
        gbc.writeMem(0x954a, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x5c99, gbc.sp());
        EXPECT(0x954c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x954a));
        EXPECT(0xd5, gbc.readMem(0x954b));
        // CB D5 0299
        gbc.setState(0x2bfe, 0x90d4, 0xa7f0, 0x1b9c, 0x2250, 0xd425, 0x0, 0x1);
        gbc.writeMem(0x2bfe, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x90d4, gbc.sp());
        EXPECT(0x2c00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 029A
        gbc.setState(0x3075, 0x54c8, 0x68e0, 0x1b8d, 0xc461, 0x24df, 0x0, 0x0);
        gbc.writeMem(0x3075, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x54c8, gbc.sp());
        EXPECT(0x3077, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 029B
        gbc.setState(0x7ee6, 0xdd71, 0x7c30, 0x7a69, 0xce7, 0xf695, 0x0, 0x0);
        gbc.writeMem(0x7ee6, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xdd71, gbc.sp());
        EXPECT(0x7ee8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 029C
        gbc.setState(0xd68d, 0xd093, 0xf600, 0x7288, 0x2f71, 0x2b3d, 0x1, 0x0);
        gbc.writeMem(0xd68d, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd093, gbc.sp());
        EXPECT(0xd68f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd68d));
        EXPECT(0xd5, gbc.readMem(0xd68e));
        // CB D5 029D
        gbc.setState(0x252f, 0xcb3d, 0x4b40, 0x515, 0x8659, 0xe4e5, 0x0, 0x0);
        gbc.writeMem(0x252f, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xcb3d, gbc.sp());
        EXPECT(0x2531, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 029E
        gbc.setState(0x6902, 0xe0f3, 0x75d0, 0xa797, 0xb0f3, 0x49cf, 0x0, 0x1);
        gbc.writeMem(0x6902, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xe0f3, gbc.sp());
        EXPECT(0x6904, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 029F
        gbc.setState(0xe3b2, 0x9160, 0x96f0, 0xb9aa, 0xedb4, 0x41e9, 0x0, 0x1);
        gbc.writeMem(0xe3b2, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9160, gbc.sp());
        EXPECT(0xe3b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3b2));
        EXPECT(0xd5, gbc.readMem(0xe3b3));
        // CB D5 02A0
        gbc.setState(0x383f, 0x6497, 0x7950, 0xdc, 0x2de4, 0xd94a, 0x0, 0x1);
        gbc.writeMem(0x383f, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x6497, gbc.sp());
        EXPECT(0x3841, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 02A1
        gbc.setState(0x287a, 0xe4e8, 0x62a0, 0xba41, 0xdc55, 0xcaea, 0x0, 0x1);
        gbc.writeMem(0x287a, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xe4e8, gbc.sp());
        EXPECT(0x287c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 02A2
        gbc.setState(0x3c70, 0xb3c7, 0x7ab0, 0xe8f, 0xc137, 0xda79, 0x1, 0x0);
        gbc.writeMem(0x3c70, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xb3c7, gbc.sp());
        EXPECT(0x3c72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 02A3
        gbc.setState(0x2520, 0x308c, 0x5fa0, 0x32ef, 0x4aff, 0xf6d9, 0x1, 0x1);
        gbc.writeMem(0x2520, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x308c, gbc.sp());
        EXPECT(0x2522, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 02A4
        gbc.setState(0x37d8, 0x9a13, 0x8480, 0xbd7d, 0xcc73, 0x1090, 0x0, 0x0);
        gbc.writeMem(0x37d8, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x9a13, gbc.sp());
        EXPECT(0x37da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 02A5
        gbc.setState(0x85, 0xd689, 0x3d20, 0x90f8, 0x1fcc, 0x95d9, 0x1, 0x1);
        gbc.writeMem(0x85, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd689, gbc.sp());
        EXPECT(0x87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 02A6
        gbc.setState(0x261c, 0x56f0, 0xcaa0, 0x6677, 0xfc17, 0x5310, 0x0, 0x0);
        gbc.writeMem(0x261c, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x56f0, gbc.sp());
        EXPECT(0x261e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 02A7
        gbc.setState(0x3ff6, 0xac01, 0xecd0, 0x2e2b, 0xa893, 0xac87, 0x0, 0x0);
        gbc.writeMem(0x3ff6, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xac01, gbc.sp());
        EXPECT(0x3ff8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 02A9
        gbc.setState(0x8ae3, 0xa93, 0x6c40, 0x6dbf, 0xaf9, 0xd51d, 0x1, 0x1);
        gbc.writeMem(0x8ae3, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xa93, gbc.sp());
        EXPECT(0x8ae5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ae3));
        EXPECT(0xd5, gbc.readMem(0x8ae4));
        // CB D5 02AA
        gbc.setState(0xb1f4, 0xad4a, 0x8d50, 0x6433, 0x3af3, 0xd116, 0x1, 0x0);
        gbc.writeMem(0xb1f4, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xad4a, gbc.sp());
        EXPECT(0xb1f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1f4));
        EXPECT(0xd5, gbc.readMem(0xb1f5));
        // CB D5 02AB
        gbc.setState(0x481e, 0xf3ad, 0x2d0, 0x4ac5, 0x9009, 0x1a9e, 0x1, 0x1);
        gbc.writeMem(0x481e, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xf3ad, gbc.sp());
        EXPECT(0x4820, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 02AC
        gbc.setState(0xe62e, 0xdb4a, 0xec00, 0x1917, 0xbace, 0x7956, 0x1, 0x0);
        gbc.writeMem(0xe62e, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xdb4a, gbc.sp());
        EXPECT(0xe630, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe62e));
        EXPECT(0xd5, gbc.readMem(0xe62f));
        // CB D5 02AD
        gbc.setState(0xcdce, 0x1d18, 0x46c0, 0x34f8, 0xd53e, 0xcb46, 0x0, 0x0);
        gbc.writeMem(0xcdce, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x1d18, gbc.sp());
        EXPECT(0xcdd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdce));
        EXPECT(0xd5, gbc.readMem(0xcdcf));
        // CB D5 02AE
        gbc.setState(0x18ca, 0x4659, 0xc210, 0x1098, 0xf9cd, 0x2400, 0x1, 0x0);
        gbc.writeMem(0x18ca, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x4659, gbc.sp());
        EXPECT(0x18cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 02AF
        gbc.setState(0xd7bd, 0x6e4e, 0xa970, 0xe8e4, 0x583, 0x34c2, 0x1, 0x0);
        gbc.writeMem(0xd7bd, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x6e4e, gbc.sp());
        EXPECT(0xd7bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7bd));
        EXPECT(0xd5, gbc.readMem(0xd7be));
        // CB D5 02B0
        gbc.setState(0x2c4c, 0x644, 0x6140, 0xc533, 0x64f4, 0xafaf, 0x0, 0x1);
        gbc.writeMem(0x2c4c, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x644, gbc.sp());
        EXPECT(0x2c4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 02B1
        gbc.setState(0x87d4, 0x6fc2, 0xbcc0, 0x2ee7, 0x9cd1, 0xee57, 0x0, 0x0);
        gbc.writeMem(0x87d4, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6fc2, gbc.sp());
        EXPECT(0x87d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87d4));
        EXPECT(0xd5, gbc.readMem(0x87d5));
        // CB D5 02B2
        gbc.setState(0xd68a, 0x9c14, 0x27e0, 0xc5b, 0x51e2, 0x6ac6, 0x1, 0x0);
        gbc.writeMem(0xd68a, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x9c14, gbc.sp());
        EXPECT(0xd68c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd68a));
        EXPECT(0xd5, gbc.readMem(0xd68b));
        // CB D5 02B3
        gbc.setState(0xe042, 0x5f2c, 0xaf40, 0x5279, 0x1897, 0x98cf, 0x0, 0x1);
        gbc.writeMem(0xe042, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x5f2c, gbc.sp());
        EXPECT(0xe044, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe042));
        EXPECT(0xd5, gbc.readMem(0xe043));
        // CB D5 02B4
        gbc.setState(0xd197, 0x815b, 0x13b0, 0xe41e, 0xbc17, 0x2718, 0x1, 0x1);
        gbc.writeMem(0xd197, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x815b, gbc.sp());
        EXPECT(0xd199, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd197));
        EXPECT(0xd5, gbc.readMem(0xd198));
        // CB D5 02B5
        gbc.setState(0x3c37, 0x350a, 0x5920, 0xa20a, 0x7aa9, 0x45bb, 0x1, 0x1);
        gbc.writeMem(0x3c37, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x350a, gbc.sp());
        EXPECT(0x3c39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 02B6
        gbc.setState(0x9fe, 0x4e94, 0x11e0, 0x6241, 0x958d, 0x21be, 0x1, 0x0);
        gbc.writeMem(0x9fe, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x4e94, gbc.sp());
        EXPECT(0xa00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 02B7
        gbc.setState(0xc616, 0xf2ed, 0xea10, 0x484, 0xe024, 0x3198, 0x0, 0x0);
        gbc.writeMem(0xc616, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xf2ed, gbc.sp());
        EXPECT(0xc618, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc616));
        EXPECT(0xd5, gbc.readMem(0xc617));
        // CB D5 02B8
        gbc.setState(0x226b, 0x1398, 0x8e10, 0xb40f, 0x462, 0x22f3, 0x1, 0x1);
        gbc.writeMem(0x226b, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x1398, gbc.sp());
        EXPECT(0x226d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 02BB
        gbc.setState(0x60f7, 0x343f, 0x7c70, 0x5a34, 0x9daf, 0xadf8, 0x0, 0x1);
        gbc.writeMem(0x60f7, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x343f, gbc.sp());
        EXPECT(0x60f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 02BC
        gbc.setState(0x4aec, 0x4679, 0x8580, 0xbe33, 0x2241, 0x8277, 0x0, 0x0);
        gbc.writeMem(0x4aec, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x4679, gbc.sp());
        EXPECT(0x4aee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 02BD
        gbc.setState(0xbecf, 0x1ab0, 0xf1d0, 0x45ae, 0x13a1, 0x3c75, 0x0, 0x0);
        gbc.writeMem(0xbecf, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x1ab0, gbc.sp());
        EXPECT(0xbed1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbecf));
        EXPECT(0xd5, gbc.readMem(0xbed0));
        // CB D5 02BE
        gbc.setState(0x1fe4, 0xa63f, 0x1410, 0x30c8, 0x6942, 0x2a8b, 0x1, 0x0);
        gbc.writeMem(0x1fe4, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xa63f, gbc.sp());
        EXPECT(0x1fe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 02BF
        gbc.setState(0x3cc9, 0xb43a, 0xaa70, 0xee01, 0x6510, 0xf9cf, 0x1, 0x1);
        gbc.writeMem(0x3cc9, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb43a, gbc.sp());
        EXPECT(0x3ccb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 02C0
        gbc.setState(0xeca4, 0x8101, 0x79a0, 0xa1b6, 0x1636, 0x4135, 0x1, 0x0);
        gbc.writeMem(0xeca4, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x8101, gbc.sp());
        EXPECT(0xeca6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeca4));
        EXPECT(0xd5, gbc.readMem(0xeca5));
        // CB D5 02C1
        gbc.setState(0xaf3d, 0xc9f9, 0x2510, 0x5772, 0xd9d6, 0xbe6e, 0x0, 0x1);
        gbc.writeMem(0xaf3d, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xc9f9, gbc.sp());
        EXPECT(0xaf3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf3d));
        EXPECT(0xd5, gbc.readMem(0xaf3e));
        // CB D5 02C2
        gbc.setState(0xd00c, 0xb8, 0x3a80, 0x32c4, 0xdfc4, 0x32b2, 0x0, 0x0);
        gbc.writeMem(0xd00c, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xb8, gbc.sp());
        EXPECT(0xd00e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd00c));
        EXPECT(0xd5, gbc.readMem(0xd00d));
        // CB D5 02C3
        gbc.setState(0x3ac0, 0xd490, 0x79a0, 0x934c, 0x54c2, 0x434, 0x0, 0x0);
        gbc.writeMem(0x3ac0, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xd490, gbc.sp());
        EXPECT(0x3ac2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 02C4
        gbc.setState(0xd6ce, 0x3748, 0xeea0, 0xf923, 0x75a3, 0x42be, 0x1, 0x1);
        gbc.writeMem(0xd6ce, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x3748, gbc.sp());
        EXPECT(0xd6d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6ce));
        EXPECT(0xd5, gbc.readMem(0xd6cf));
        // CB D5 02C5
        gbc.setState(0xd65b, 0x21e4, 0x8280, 0x949f, 0x65cf, 0xe0bc, 0x1, 0x0);
        gbc.writeMem(0xd65b, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x21e4, gbc.sp());
        EXPECT(0xd65d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd65b));
        EXPECT(0xd5, gbc.readMem(0xd65c));
        // CB D5 02C6
        gbc.setState(0x8339, 0x6e2e, 0xfa60, 0xe222, 0x9600, 0x6be6, 0x0, 0x1);
        gbc.writeMem(0x8339, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x6e2e, gbc.sp());
        EXPECT(0x833b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8339));
        EXPECT(0xd5, gbc.readMem(0x833a));
        // CB D5 02C7
        gbc.setState(0x1ebf, 0xe572, 0x4b20, 0xe6fc, 0xfea4, 0x7818, 0x1, 0x1);
        gbc.writeMem(0x1ebf, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe572, gbc.sp());
        EXPECT(0x1ec1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 02C8
        gbc.setState(0xcd9, 0xc0bb, 0x9980, 0x90b5, 0xfc84, 0xc1fe, 0x1, 0x0);
        gbc.writeMem(0xcd9, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc0bb, gbc.sp());
        EXPECT(0xcdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 02C9
        gbc.setState(0x9549, 0x141b, 0xe6e0, 0xa422, 0xbeff, 0x3b99, 0x0, 0x0);
        gbc.writeMem(0x9549, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x141b, gbc.sp());
        EXPECT(0x954b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9549));
        EXPECT(0xd5, gbc.readMem(0x954a));
        // CB D5 02CA
        gbc.setState(0x7f52, 0x740d, 0xad20, 0x411a, 0x5f17, 0xb069, 0x0, 0x0);
        gbc.writeMem(0x7f52, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x740d, gbc.sp());
        EXPECT(0x7f54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 02CB
        gbc.setState(0xad11, 0x19d8, 0xa280, 0x19df, 0x8246, 0x1f63, 0x1, 0x0);
        gbc.writeMem(0xad11, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x19d8, gbc.sp());
        EXPECT(0xad13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad11));
        EXPECT(0xd5, gbc.readMem(0xad12));
        // CB D5 02CC
        gbc.setState(0x4eb8, 0x86b8, 0xf610, 0xfa98, 0x6f34, 0xd595, 0x0, 0x1);
        gbc.writeMem(0x4eb8, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x86b8, gbc.sp());
        EXPECT(0x4eba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 02CD
        gbc.setState(0x1529, 0x72c, 0x4ba0, 0xbe47, 0xff07, 0xb6ee, 0x1, 0x0);
        gbc.writeMem(0x1529, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x72c, gbc.sp());
        EXPECT(0x152b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 02CF
        gbc.setState(0x21b, 0xba08, 0xf80, 0x5192, 0x8a1e, 0xf15d, 0x0, 0x0);
        gbc.writeMem(0x21b, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xba08, gbc.sp());
        EXPECT(0x21d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 02D0
        gbc.setState(0x534b, 0xead, 0x4c00, 0x4da1, 0xee86, 0x6bab, 0x1, 0x0);
        gbc.writeMem(0x534b, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xead, gbc.sp());
        EXPECT(0x534d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 02D1
        gbc.setState(0x66c2, 0xf499, 0xdd40, 0xb7fd, 0x3aed, 0x30f, 0x0, 0x1);
        gbc.writeMem(0x66c2, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xf499, gbc.sp());
        EXPECT(0x66c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 02D2
        gbc.setState(0x19cc, 0xf7a4, 0x76b0, 0xe4a5, 0xd0b9, 0x65dd, 0x1, 0x0);
        gbc.writeMem(0x19cc, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xf7a4, gbc.sp());
        EXPECT(0x19ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 02D3
        gbc.setState(0x8e35, 0x226d, 0x1350, 0xf58c, 0x9801, 0x59cd, 0x0, 0x0);
        gbc.writeMem(0x8e35, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x226d, gbc.sp());
        EXPECT(0x8e37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e35));
        EXPECT(0xd5, gbc.readMem(0x8e36));
        // CB D5 02D4
        gbc.setState(0x79f6, 0xd530, 0xe690, 0x45d3, 0xecf7, 0x8efa, 0x1, 0x1);
        gbc.writeMem(0x79f6, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xd530, gbc.sp());
        EXPECT(0x79f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 02D5
        gbc.setState(0x5253, 0xee7f, 0x3170, 0x642a, 0xb49f, 0xc59, 0x1, 0x0);
        gbc.writeMem(0x5253, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xee7f, gbc.sp());
        EXPECT(0x5255, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 02D6
        gbc.setState(0xa92c, 0x6965, 0x5c70, 0x3904, 0xf3ee, 0x8509, 0x1, 0x1);
        gbc.writeMem(0xa92c, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x6965, gbc.sp());
        EXPECT(0xa92e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa92c));
        EXPECT(0xd5, gbc.readMem(0xa92d));
        // CB D5 02D7
        gbc.setState(0x3663, 0xb710, 0x2780, 0x5de0, 0xbf1f, 0x4481, 0x1, 0x0);
        gbc.writeMem(0x3663, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb710, gbc.sp());
        EXPECT(0x3665, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 02D8
        gbc.setState(0x1626, 0xf8e4, 0x4050, 0xc0dd, 0xfb05, 0xd18c, 0x0, 0x1);
        gbc.writeMem(0x1626, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xf8e4, gbc.sp());
        EXPECT(0x1628, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 02D9
        gbc.setState(0xb02c, 0xf4b, 0x48d0, 0x8d7a, 0x2368, 0xdce5, 0x1, 0x0);
        gbc.writeMem(0xb02c, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xf4b, gbc.sp());
        EXPECT(0xb02e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb02c));
        EXPECT(0xd5, gbc.readMem(0xb02d));
        // CB D5 02DA
        gbc.setState(0x9251, 0xd22b, 0x4df0, 0xb788, 0x8e5e, 0x6fc9, 0x0, 0x0);
        gbc.writeMem(0x9251, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd22b, gbc.sp());
        EXPECT(0x9253, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9251));
        EXPECT(0xd5, gbc.readMem(0x9252));
        // CB D5 02DB
        gbc.setState(0x7432, 0x240e, 0x6950, 0x7f23, 0x2d0a, 0x6ea, 0x0, 0x1);
        gbc.writeMem(0x7432, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x240e, gbc.sp());
        EXPECT(0x7434, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 02DC
        gbc.setState(0x52e, 0xd75d, 0xe420, 0xfd6e, 0x9d64, 0x406d, 0x1, 0x0);
        gbc.writeMem(0x52e, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xd75d, gbc.sp());
        EXPECT(0x530, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 02DD
        gbc.setState(0xea21, 0x61d3, 0x2150, 0x28a1, 0xb282, 0x1660, 0x1, 0x1);
        gbc.writeMem(0xea21, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x61d3, gbc.sp());
        EXPECT(0xea23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea21));
        EXPECT(0xd5, gbc.readMem(0xea22));
        // CB D5 02DE
        gbc.setState(0xca1b, 0x220b, 0x26b0, 0x49c3, 0xe44e, 0xd768, 0x0, 0x0);
        gbc.writeMem(0xca1b, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x220b, gbc.sp());
        EXPECT(0xca1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca1b));
        EXPECT(0xd5, gbc.readMem(0xca1c));
        // CB D5 02DF
        gbc.setState(0x5189, 0xad14, 0xef70, 0x370b, 0x1f3c, 0xb104, 0x1, 0x1);
        gbc.writeMem(0x5189, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xad14, gbc.sp());
        EXPECT(0x518b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 02E0
        gbc.setState(0x2e1, 0xd8b3, 0x5670, 0x14b0, 0x356c, 0xaac9, 0x1, 0x0);
        gbc.writeMem(0x2e1, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd8b3, gbc.sp());
        EXPECT(0x2e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 02E1
        gbc.setState(0x5ae2, 0x24d1, 0xfbe0, 0x3035, 0x3010, 0xddf7, 0x1, 0x1);
        gbc.writeMem(0x5ae2, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x24d1, gbc.sp());
        EXPECT(0x5ae4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 02E2
        gbc.setState(0x5da8, 0x4d25, 0x5850, 0x7130, 0xdc1d, 0x12da, 0x1, 0x1);
        gbc.writeMem(0x5da8, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x4d25, gbc.sp());
        EXPECT(0x5daa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 02E3
        gbc.setState(0x455d, 0xc5d0, 0xf240, 0xd931, 0x438f, 0xdca8, 0x0, 0x0);
        gbc.writeMem(0x455d, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc5d0, gbc.sp());
        EXPECT(0x455f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 02E4
        gbc.setState(0xa2d7, 0x9fb9, 0xdae0, 0x47a0, 0x26d4, 0x5d1f, 0x1, 0x0);
        gbc.writeMem(0xa2d7, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x9fb9, gbc.sp());
        EXPECT(0xa2d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2d7));
        EXPECT(0xd5, gbc.readMem(0xa2d8));
        // CB D5 02E5
        gbc.setState(0x19ef, 0x419d, 0x8020, 0x42d1, 0xac95, 0x8c2d, 0x0, 0x1);
        gbc.writeMem(0x19ef, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x419d, gbc.sp());
        EXPECT(0x19f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 02E6
        gbc.setState(0xbfbe, 0x4c61, 0xa30, 0xe3c4, 0x2358, 0x6453, 0x0, 0x1);
        gbc.writeMem(0xbfbe, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x4c61, gbc.sp());
        EXPECT(0xbfc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfbe));
        EXPECT(0xd5, gbc.readMem(0xbfbf));
        // CB D5 02E7
        gbc.setState(0x841e, 0x424a, 0x3370, 0x3bd7, 0xf0b5, 0xe007, 0x1, 0x0);
        gbc.writeMem(0x841e, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x424a, gbc.sp());
        EXPECT(0x8420, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x841e));
        EXPECT(0xd5, gbc.readMem(0x841f));
        // CB D5 02E8
        gbc.setState(0x8c9a, 0x50b1, 0xbd80, 0xc560, 0x8707, 0x7e4e, 0x0, 0x1);
        gbc.writeMem(0x8c9a, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x50b1, gbc.sp());
        EXPECT(0x8c9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c9a));
        EXPECT(0xd5, gbc.readMem(0x8c9b));
        // CB D5 02E9
        gbc.setState(0x77a7, 0xc4c8, 0xd940, 0x9475, 0x8a98, 0x5944, 0x1, 0x0);
        gbc.writeMem(0x77a7, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xc4c8, gbc.sp());
        EXPECT(0x77a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 02EA
        gbc.setState(0x50e9, 0xe0b8, 0x41b0, 0xb8f1, 0x2af, 0xa7a9, 0x1, 0x0);
        gbc.writeMem(0x50e9, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xe0b8, gbc.sp());
        EXPECT(0x50eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 02EB
        gbc.setState(0x8011, 0x2094, 0x4550, 0xdfc9, 0x153e, 0x3306, 0x0, 0x1);
        gbc.writeMem(0x8011, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x2094, gbc.sp());
        EXPECT(0x8013, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8011));
        EXPECT(0xd5, gbc.readMem(0x8012));
        // CB D5 02EC
        gbc.setState(0x43d6, 0x53c4, 0x5570, 0x6055, 0xde20, 0x9f61, 0x1, 0x1);
        gbc.writeMem(0x43d6, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x53c4, gbc.sp());
        EXPECT(0x43d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 02ED
        gbc.setState(0x39bf, 0x8dd6, 0x2000, 0xfd0, 0xa710, 0xe71a, 0x1, 0x1);
        gbc.writeMem(0x39bf, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x8dd6, gbc.sp());
        EXPECT(0x39c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 02EE
        gbc.setState(0x6e27, 0x2ecb, 0x3ad0, 0xf354, 0x5dae, 0x9f9a, 0x0, 0x0);
        gbc.writeMem(0x6e27, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x2ecb, gbc.sp());
        EXPECT(0x6e29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 02EF
        gbc.setState(0x1577, 0x25d, 0x1ae0, 0xc61b, 0xffe7, 0x8d89, 0x1, 0x0);
        gbc.writeMem(0x1577, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x25d, gbc.sp());
        EXPECT(0x1579, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 02F0
        gbc.setState(0xeff7, 0x873d, 0x4fb0, 0xfd7d, 0x12fa, 0xbdc6, 0x0, 0x1);
        gbc.writeMem(0xeff7, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x873d, gbc.sp());
        EXPECT(0xeff9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeff7));
        EXPECT(0xd5, gbc.readMem(0xeff8));
        // CB D5 02F1
        gbc.setState(0x4b13, 0xf3db, 0xbc50, 0x565a, 0xc2a7, 0x64a9, 0x1, 0x1);
        gbc.writeMem(0x4b13, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xf3db, gbc.sp());
        EXPECT(0x4b15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 02F2
        gbc.setState(0x5935, 0x205e, 0xb00, 0x69cb, 0x5be, 0x8db1, 0x1, 0x1);
        gbc.writeMem(0x5935, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x205e, gbc.sp());
        EXPECT(0x5937, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 02F3
        gbc.setState(0x899, 0xaaad, 0x4bb0, 0x8a6e, 0xc3eb, 0x826d, 0x0, 0x1);
        gbc.writeMem(0x899, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xaaad, gbc.sp());
        EXPECT(0x89b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 02F4
        gbc.setState(0x5926, 0x3803, 0x8530, 0x6ac, 0x5d69, 0x4bd0, 0x1, 0x0);
        gbc.writeMem(0x5926, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x3803, gbc.sp());
        EXPECT(0x5928, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 02F5
        gbc.setState(0xe584, 0x65bb, 0x2c70, 0x423e, 0x1071, 0xb673, 0x1, 0x1);
        gbc.writeMem(0xe584, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x65bb, gbc.sp());
        EXPECT(0xe586, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe584));
        EXPECT(0xd5, gbc.readMem(0xe585));
        // CB D5 02F6
        gbc.setState(0x483b, 0x5110, 0x60c0, 0x8d15, 0x24e9, 0x99c6, 0x1, 0x0);
        gbc.writeMem(0x483b, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x5110, gbc.sp());
        EXPECT(0x483d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 02F7
        gbc.setState(0x1ffd, 0x453b, 0x9e70, 0xefe9, 0x2e8c, 0xfcfd, 0x0, 0x0);
        gbc.writeMem(0x1ffd, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x453b, gbc.sp());
        EXPECT(0x1fff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 02F8
        gbc.setState(0x8e50, 0x3059, 0x4890, 0xc0a3, 0xc60a, 0xef87, 0x1, 0x1);
        gbc.writeMem(0x8e50, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x3059, gbc.sp());
        EXPECT(0x8e52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e50));
        EXPECT(0xd5, gbc.readMem(0x8e51));
        // CB D5 02F9
        gbc.setState(0xb116, 0x9c, 0xa8b0, 0x7eae, 0x4d69, 0x57e1, 0x0, 0x0);
        gbc.writeMem(0xb116, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9c, gbc.sp());
        EXPECT(0xb118, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb116));
        EXPECT(0xd5, gbc.readMem(0xb117));
        // CB D5 02FA
        gbc.setState(0x6ad4, 0xa444, 0xfdc0, 0xaf6b, 0xfc36, 0x7f, 0x1, 0x0);
        gbc.writeMem(0x6ad4, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xa444, gbc.sp());
        EXPECT(0x6ad6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 02FD
        gbc.setState(0x5d00, 0x66be, 0x4910, 0xa0a1, 0xa421, 0x8332, 0x0, 0x0);
        gbc.writeMem(0x5d00, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x66be, gbc.sp());
        EXPECT(0x5d02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 02FE
        gbc.setState(0x21bf, 0x1d3f, 0x7570, 0x8a39, 0x88f4, 0xecdd, 0x0, 0x0);
        gbc.writeMem(0x21bf, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x1d3f, gbc.sp());
        EXPECT(0x21c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 02FF
        gbc.setState(0x1437, 0x38ae, 0x51e0, 0x83b3, 0x78c1, 0x7ee4, 0x1, 0x0);
        gbc.writeMem(0x1437, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x38ae, gbc.sp());
        EXPECT(0x1439, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0300
        gbc.setState(0xc8fc, 0x6bd5, 0xe00, 0xbab2, 0xf6ef, 0x31c9, 0x1, 0x0);
        gbc.writeMem(0xc8fc, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x6bd5, gbc.sp());
        EXPECT(0xc8fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8fc));
        EXPECT(0xd5, gbc.readMem(0xc8fd));
        // CB D5 0301
        gbc.setState(0x5452, 0x9d74, 0x92b0, 0xacd1, 0xc2b0, 0x2434, 0x0, 0x1);
        gbc.writeMem(0x5452, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x9d74, gbc.sp());
        EXPECT(0x5454, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0302
        gbc.setState(0x116c, 0xfae0, 0x8bd0, 0xfa6, 0x4c52, 0xf033, 0x1, 0x0);
        gbc.writeMem(0x116c, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xfae0, gbc.sp());
        EXPECT(0x116e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0304
        gbc.setState(0x7a1, 0xaad3, 0xf000, 0x6611, 0xa0e0, 0x2daa, 0x0, 0x0);
        gbc.writeMem(0x7a1, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xaad3, gbc.sp());
        EXPECT(0x7a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0305
        gbc.setState(0x4785, 0x99ca, 0xe9b0, 0x14a6, 0x74b3, 0x125b, 0x0, 0x0);
        gbc.writeMem(0x4785, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x99ca, gbc.sp());
        EXPECT(0x4787, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0306
        gbc.setState(0x1b9, 0x543a, 0x8d80, 0x141f, 0x46b6, 0x5b50, 0x0, 0x1);
        gbc.writeMem(0x1b9, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x543a, gbc.sp());
        EXPECT(0x1bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0307
        gbc.setState(0x2550, 0xb8bf, 0xb320, 0x983e, 0x96b5, 0xefa4, 0x0, 0x1);
        gbc.writeMem(0x2550, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xb8bf, gbc.sp());
        EXPECT(0x2552, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0308
        gbc.setState(0xde30, 0xe41e, 0xbd70, 0x387e, 0xd5bf, 0xf17f, 0x0, 0x1);
        gbc.writeMem(0xde30, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe41e, gbc.sp());
        EXPECT(0xde32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde30));
        EXPECT(0xd5, gbc.readMem(0xde31));
        // CB D5 0309
        gbc.setState(0xbff9, 0x72fd, 0x3270, 0x262a, 0xfa63, 0x9c97, 0x1, 0x0);
        gbc.writeMem(0xbff9, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x72fd, gbc.sp());
        EXPECT(0xbffb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbff9));
        EXPECT(0xd5, gbc.readMem(0xbffa));
        // CB D5 030A
        gbc.setState(0xd4f2, 0xa6fb, 0x2920, 0x3c30, 0x665d, 0xd7d9, 0x0, 0x0);
        gbc.writeMem(0xd4f2, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xa6fb, gbc.sp());
        EXPECT(0xd4f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4f2));
        EXPECT(0xd5, gbc.readMem(0xd4f3));
        // CB D5 030B
        gbc.setState(0x8605, 0x48f7, 0xfc80, 0x473a, 0x414e, 0xce94, 0x1, 0x0);
        gbc.writeMem(0x8605, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x48f7, gbc.sp());
        EXPECT(0x8607, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8605));
        EXPECT(0xd5, gbc.readMem(0x8606));
        // CB D5 030C
        gbc.setState(0xe751, 0x7d, 0xc70, 0xef3e, 0x4951, 0x66ab, 0x0, 0x1);
        gbc.writeMem(0xe751, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x7d, gbc.sp());
        EXPECT(0xe753, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe751));
        EXPECT(0xd5, gbc.readMem(0xe752));
        // CB D5 030D
        gbc.setState(0x77e0, 0x5ab9, 0xb80, 0x6275, 0xed16, 0x8ddd, 0x0, 0x0);
        gbc.writeMem(0x77e0, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x5ab9, gbc.sp());
        EXPECT(0x77e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 030E
        gbc.setState(0x8610, 0x2bdc, 0x86a0, 0x713c, 0x1829, 0xa141, 0x0, 0x1);
        gbc.writeMem(0x8610, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x2bdc, gbc.sp());
        EXPECT(0x8612, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8610));
        EXPECT(0xd5, gbc.readMem(0x8611));
        // CB D5 030F
        gbc.setState(0xc9ef, 0xcee6, 0x4d00, 0xd56, 0x963d, 0x8a6, 0x1, 0x0);
        gbc.writeMem(0xc9ef, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xcee6, gbc.sp());
        EXPECT(0xc9f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9ef));
        EXPECT(0xd5, gbc.readMem(0xc9f0));
        // CB D5 0310
        gbc.setState(0x84f3, 0x7447, 0x5ce0, 0x84aa, 0xb38b, 0x25b6, 0x1, 0x0);
        gbc.writeMem(0x84f3, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x7447, gbc.sp());
        EXPECT(0x84f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84f3));
        EXPECT(0xd5, gbc.readMem(0x84f4));
        // CB D5 0311
        gbc.setState(0x79d8, 0x2fdf, 0x7ce0, 0xcae, 0xf63, 0x7f89, 0x0, 0x1);
        gbc.writeMem(0x79d8, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x2fdf, gbc.sp());
        EXPECT(0x79da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0312
        gbc.setState(0x6c7e, 0x63a1, 0xfe50, 0x4487, 0x2449, 0xfe8c, 0x0, 0x0);
        gbc.writeMem(0x6c7e, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x63a1, gbc.sp());
        EXPECT(0x6c80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0313
        gbc.setState(0x1c21, 0x61e7, 0x74a0, 0x33c, 0xa2ae, 0xdf8d, 0x0, 0x0);
        gbc.writeMem(0x1c21, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x61e7, gbc.sp());
        EXPECT(0x1c23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0314
        gbc.setState(0x10b3, 0x79b1, 0x9600, 0x85c9, 0xbe57, 0xcf53, 0x1, 0x1);
        gbc.writeMem(0x10b3, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x79b1, gbc.sp());
        EXPECT(0x10b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0315
        gbc.setState(0xdb8e, 0xa451, 0xd0f0, 0x35ac, 0x416c, 0xebec, 0x0, 0x0);
        gbc.writeMem(0xdb8e, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xa451, gbc.sp());
        EXPECT(0xdb90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb8e));
        EXPECT(0xd5, gbc.readMem(0xdb8f));
        // CB D5 0317
        gbc.setState(0x9ff2, 0x246f, 0xbe90, 0xd53d, 0x311c, 0x1e8a, 0x0, 0x0);
        gbc.writeMem(0x9ff2, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x246f, gbc.sp());
        EXPECT(0x9ff4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ff2));
        EXPECT(0xd5, gbc.readMem(0x9ff3));
        // CB D5 0318
        gbc.setState(0x8011, 0xbdcf, 0x35f0, 0xe600, 0x5124, 0xfbb7, 0x0, 0x0);
        gbc.writeMem(0x8011, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xbdcf, gbc.sp());
        EXPECT(0x8013, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8011));
        EXPECT(0xd5, gbc.readMem(0x8012));
        // CB D5 0319
        gbc.setState(0x884, 0xb26, 0xb0f0, 0xb0a, 0x594f, 0xd9a3, 0x1, 0x0);
        gbc.writeMem(0x884, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb26, gbc.sp());
        EXPECT(0x886, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 031A
        gbc.setState(0x6661, 0x70f2, 0xb930, 0x9be3, 0x6fed, 0x87d5, 0x0, 0x1);
        gbc.writeMem(0x6661, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x70f2, gbc.sp());
        EXPECT(0x6663, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 031C
        gbc.setState(0x341d, 0x68c7, 0x710, 0xd784, 0x7dfe, 0xd870, 0x1, 0x0);
        gbc.writeMem(0x341d, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x68c7, gbc.sp());
        EXPECT(0x341f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 031D
        gbc.setState(0x3360, 0xc739, 0x3af0, 0x9f6f, 0xdb1b, 0xbcd8, 0x1, 0x0);
        gbc.writeMem(0x3360, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xc739, gbc.sp());
        EXPECT(0x3362, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 031E
        gbc.setState(0x3a8c, 0x3fed, 0x9520, 0x2c8, 0xd54, 0xea4b, 0x1, 0x1);
        gbc.writeMem(0x3a8c, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x3fed, gbc.sp());
        EXPECT(0x3a8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 031F
        gbc.setState(0x794a, 0xa3d2, 0x9040, 0x507d, 0x66c4, 0xe989, 0x0, 0x1);
        gbc.writeMem(0x794a, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa3d2, gbc.sp());
        EXPECT(0x794c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0320
        gbc.setState(0x3500, 0x8d26, 0xa7b0, 0x9e7c, 0xc904, 0x68f1, 0x0, 0x0);
        gbc.writeMem(0x3500, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x8d26, gbc.sp());
        EXPECT(0x3502, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0321
        gbc.setState(0x76b6, 0xeb5b, 0x18e0, 0x3b5, 0xfc1b, 0x2cf8, 0x0, 0x0);
        gbc.writeMem(0x76b6, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xeb5b, gbc.sp());
        EXPECT(0x76b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0322
        gbc.setState(0x24da, 0xe1ac, 0x66f0, 0x868f, 0x357e, 0x8335, 0x1, 0x0);
        gbc.writeMem(0x24da, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe1ac, gbc.sp());
        EXPECT(0x24dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0323
        gbc.setState(0xee32, 0xf47a, 0x1d40, 0xf315, 0xb255, 0x35ed, 0x0, 0x0);
        gbc.writeMem(0xee32, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xf47a, gbc.sp());
        EXPECT(0xee34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee32));
        EXPECT(0xd5, gbc.readMem(0xee33));
        // CB D5 0324
        gbc.setState(0xa531, 0x70cb, 0xb860, 0x78fe, 0x8771, 0xab02, 0x1, 0x0);
        gbc.writeMem(0xa531, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x70cb, gbc.sp());
        EXPECT(0xa533, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa531));
        EXPECT(0xd5, gbc.readMem(0xa532));
        // CB D5 0325
        gbc.setState(0x2be4, 0xec1f, 0x6e80, 0xac92, 0x1bed, 0xb28f, 0x1, 0x1);
        gbc.writeMem(0x2be4, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xec1f, gbc.sp());
        EXPECT(0x2be6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0326
        gbc.setState(0x4f5d, 0x59e6, 0x7550, 0xd6a1, 0x3a4a, 0x17fd, 0x1, 0x1);
        gbc.writeMem(0x4f5d, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x59e6, gbc.sp());
        EXPECT(0x4f5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0327
        gbc.setState(0x7045, 0xf904, 0x6b50, 0xc28c, 0xc5c8, 0x59f0, 0x0, 0x0);
        gbc.writeMem(0x7045, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xf904, gbc.sp());
        EXPECT(0x7047, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0328
        gbc.setState(0x6905, 0x537f, 0x9b20, 0x569c, 0x47b0, 0x4717, 0x1, 0x1);
        gbc.writeMem(0x6905, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x537f, gbc.sp());
        EXPECT(0x6907, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0329
        gbc.setState(0xd230, 0x6439, 0x2240, 0x85a0, 0x702a, 0xb785, 0x0, 0x1);
        gbc.writeMem(0xd230, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6439, gbc.sp());
        EXPECT(0xd232, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd230));
        EXPECT(0xd5, gbc.readMem(0xd231));
        // CB D5 032A
        gbc.setState(0xb319, 0x9336, 0x6ce0, 0x58f8, 0xc644, 0x41db, 0x0, 0x1);
        gbc.writeMem(0xb319, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x9336, gbc.sp());
        EXPECT(0xb31b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb319));
        EXPECT(0xd5, gbc.readMem(0xb31a));
        // CB D5 032B
        gbc.setState(0x4682, 0x88c3, 0x65b0, 0x7593, 0xd056, 0x2f53, 0x1, 0x1);
        gbc.writeMem(0x4682, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x88c3, gbc.sp());
        EXPECT(0x4684, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 032C
        gbc.setState(0xdb77, 0x652d, 0x7990, 0xebc6, 0x32a1, 0xcf5d, 0x1, 0x0);
        gbc.writeMem(0xdb77, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x652d, gbc.sp());
        EXPECT(0xdb79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb77));
        EXPECT(0xd5, gbc.readMem(0xdb78));
        // CB D5 032D
        gbc.setState(0x43d2, 0x47b2, 0xa9b0, 0x5aff, 0x3448, 0xc051, 0x0, 0x1);
        gbc.writeMem(0x43d2, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x47b2, gbc.sp());
        EXPECT(0x43d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 032F
        gbc.setState(0x1501, 0xdd6f, 0x5920, 0x22ef, 0xd1a7, 0x1e9f, 0x1, 0x1);
        gbc.writeMem(0x1501, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xdd6f, gbc.sp());
        EXPECT(0x1503, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0330
        gbc.setState(0x6301, 0x574a, 0x26d0, 0x4ef8, 0xb249, 0x89a2, 0x1, 0x0);
        gbc.writeMem(0x6301, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x574a, gbc.sp());
        EXPECT(0x6303, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0331
        gbc.setState(0xdc7f, 0x9fbd, 0x6120, 0xba26, 0xfc23, 0x355a, 0x0, 0x0);
        gbc.writeMem(0xdc7f, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9fbd, gbc.sp());
        EXPECT(0xdc81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc7f));
        EXPECT(0xd5, gbc.readMem(0xdc80));
        // CB D5 0332
        gbc.setState(0x85b9, 0x793f, 0x7ad0, 0x25eb, 0xed88, 0x6b6, 0x1, 0x0);
        gbc.writeMem(0x85b9, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x793f, gbc.sp());
        EXPECT(0x85bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85b9));
        EXPECT(0xd5, gbc.readMem(0x85ba));
        // CB D5 0333
        gbc.setState(0xe186, 0xd71c, 0x1460, 0x980a, 0x59ae, 0x7f4c, 0x1, 0x0);
        gbc.writeMem(0xe186, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xd71c, gbc.sp());
        EXPECT(0xe188, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe186));
        EXPECT(0xd5, gbc.readMem(0xe187));
        // CB D5 0334
        gbc.setState(0xbc8f, 0x2a05, 0xcb40, 0x40e, 0xd8b7, 0xf5ca, 0x1, 0x1);
        gbc.writeMem(0xbc8f, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x2a05, gbc.sp());
        EXPECT(0xbc91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc8f));
        EXPECT(0xd5, gbc.readMem(0xbc90));
        // CB D5 0335
        gbc.setState(0x78a, 0x4eb5, 0x1720, 0x3347, 0xe79d, 0x5c6, 0x0, 0x0);
        gbc.writeMem(0x78a, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4eb5, gbc.sp());
        EXPECT(0x78c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0336
        gbc.setState(0x41c8, 0x3fab, 0x9fa0, 0x5639, 0xb783, 0x6124, 0x0, 0x0);
        gbc.writeMem(0x41c8, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x3fab, gbc.sp());
        EXPECT(0x41ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0337
        gbc.setState(0xb9fd, 0xc8f1, 0xb7f0, 0x2502, 0xca2, 0x89c, 0x0, 0x0);
        gbc.writeMem(0xb9fd, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xc8f1, gbc.sp());
        EXPECT(0xb9ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9fd));
        EXPECT(0xd5, gbc.readMem(0xb9fe));
        // CB D5 0338
        gbc.setState(0x5541, 0xafff, 0xe020, 0x44ab, 0x8903, 0x71cd, 0x0, 0x1);
        gbc.writeMem(0x5541, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xafff, gbc.sp());
        EXPECT(0x5543, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0339
        gbc.setState(0x13d2, 0xd0bf, 0xfa10, 0x2a10, 0x9d58, 0xf059, 0x1, 0x1);
        gbc.writeMem(0x13d2, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xd0bf, gbc.sp());
        EXPECT(0x13d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 033A
        gbc.setState(0x3e4b, 0x325b, 0xc9a0, 0x4154, 0xac32, 0x15f2, 0x1, 0x0);
        gbc.writeMem(0x3e4b, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x325b, gbc.sp());
        EXPECT(0x3e4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 033B
        gbc.setState(0x640d, 0xce43, 0xf500, 0xf219, 0x1cf4, 0xc78e, 0x1, 0x1);
        gbc.writeMem(0x640d, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xce43, gbc.sp());
        EXPECT(0x640f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 033C
        gbc.setState(0x1b5e, 0xf392, 0x6a90, 0xd7cb, 0x6424, 0x71bb, 0x0, 0x1);
        gbc.writeMem(0x1b5e, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xf392, gbc.sp());
        EXPECT(0x1b60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 033D
        gbc.setState(0x5fce, 0x3bb3, 0x1590, 0x5e2c, 0x4028, 0x5445, 0x0, 0x1);
        gbc.writeMem(0x5fce, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x3bb3, gbc.sp());
        EXPECT(0x5fd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 033E
        gbc.setState(0x3bf, 0xb5ae, 0xc200, 0x649d, 0xbbb0, 0xee65, 0x0, 0x1);
        gbc.writeMem(0x3bf, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb5ae, gbc.sp());
        EXPECT(0x3c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 033F
        gbc.setState(0x7783, 0x4548, 0xc800, 0xb60, 0xc9f9, 0xe199, 0x1, 0x1);
        gbc.writeMem(0x7783, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x4548, gbc.sp());
        EXPECT(0x7785, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0340
        gbc.setState(0xe1da, 0x7b43, 0x1640, 0xcfea, 0x77e8, 0x8615, 0x0, 0x0);
        gbc.writeMem(0xe1da, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7b43, gbc.sp());
        EXPECT(0xe1dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1da));
        EXPECT(0xd5, gbc.readMem(0xe1db));
        // CB D5 0341
        gbc.setState(0x65f6, 0xf874, 0x7000, 0xc96, 0xd9e7, 0xb7a4, 0x0, 0x0);
        gbc.writeMem(0x65f6, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf874, gbc.sp());
        EXPECT(0x65f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0342
        gbc.setState(0xad16, 0xe3dd, 0xe530, 0x692, 0xf62b, 0xeb36, 0x1, 0x0);
        gbc.writeMem(0xad16, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xe3dd, gbc.sp());
        EXPECT(0xad18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad16));
        EXPECT(0xd5, gbc.readMem(0xad17));
        // CB D5 0343
        gbc.setState(0x8275, 0xecc, 0x6940, 0xa771, 0xb4b4, 0xd2fa, 0x1, 0x0);
        gbc.writeMem(0x8275, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xecc, gbc.sp());
        EXPECT(0x8277, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8275));
        EXPECT(0xd5, gbc.readMem(0x8276));
        // CB D5 0344
        gbc.setState(0x620a, 0x766c, 0xa640, 0xbbc, 0x67a8, 0xbf99, 0x1, 0x0);
        gbc.writeMem(0x620a, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x766c, gbc.sp());
        EXPECT(0x620c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0345
        gbc.setState(0x4ff4, 0xdbf2, 0xa630, 0x925a, 0xeab, 0xf6e, 0x1, 0x1);
        gbc.writeMem(0x4ff4, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xdbf2, gbc.sp());
        EXPECT(0x4ff6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0346
        gbc.setState(0x6aac, 0x19eb, 0x9f40, 0xa971, 0x3c39, 0x4d6d, 0x0, 0x1);
        gbc.writeMem(0x6aac, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x19eb, gbc.sp());
        EXPECT(0x6aae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0347
        gbc.setState(0xe6f3, 0xea84, 0xe100, 0x10b8, 0x3d75, 0x7ef9, 0x1, 0x1);
        gbc.writeMem(0xe6f3, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xea84, gbc.sp());
        EXPECT(0xe6f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6f3));
        EXPECT(0xd5, gbc.readMem(0xe6f4));
        // CB D5 0348
        gbc.setState(0x7033, 0x2ffc, 0x5ea0, 0x5a1, 0xba2d, 0x4f86, 0x0, 0x0);
        gbc.writeMem(0x7033, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2ffc, gbc.sp());
        EXPECT(0x7035, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0349
        gbc.setState(0x2ad1, 0x2f63, 0x5e40, 0xdb0c, 0x973d, 0x6c8e, 0x1, 0x0);
        gbc.writeMem(0x2ad1, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x2f63, gbc.sp());
        EXPECT(0x2ad3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 034A
        gbc.setState(0xf93, 0xc94c, 0x82b0, 0xbb9a, 0x9d74, 0x298, 0x1, 0x1);
        gbc.writeMem(0xf93, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xc94c, gbc.sp());
        EXPECT(0xf95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 034B
        gbc.setState(0x131a, 0xe14b, 0x230, 0x2f01, 0xd542, 0xec84, 0x1, 0x1);
        gbc.writeMem(0x131a, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe14b, gbc.sp());
        EXPECT(0x131c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 034C
        gbc.setState(0xedfd, 0x7e95, 0x4800, 0x5ce4, 0xde1f, 0x2f0a, 0x1, 0x1);
        gbc.writeMem(0xedfd, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x7e95, gbc.sp());
        EXPECT(0xedff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedfd));
        EXPECT(0xd5, gbc.readMem(0xedfe));
        // CB D5 034D
        gbc.setState(0x1c01, 0x2380, 0x3280, 0xe5ec, 0x8389, 0xfc61, 0x0, 0x1);
        gbc.writeMem(0x1c01, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2380, gbc.sp());
        EXPECT(0x1c03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 034E
        gbc.setState(0xf49, 0x7ac2, 0x9450, 0x7bb6, 0x74b4, 0xcf0c, 0x0, 0x1);
        gbc.writeMem(0xf49, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x7ac2, gbc.sp());
        EXPECT(0xf4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 034F
        gbc.setState(0x6bf8, 0x9303, 0x17e0, 0x9d34, 0xaa0a, 0x6847, 0x1, 0x0);
        gbc.writeMem(0x6bf8, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x9303, gbc.sp());
        EXPECT(0x6bfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0350
        gbc.setState(0xf21, 0xfd8f, 0x9720, 0xa8ce, 0xccb6, 0x4f47, 0x0, 0x0);
        gbc.writeMem(0xf21, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xfd8f, gbc.sp());
        EXPECT(0xf23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0351
        gbc.setState(0xc629, 0x2d4b, 0xfa70, 0x493d, 0x1c0, 0xe56, 0x1, 0x1);
        gbc.writeMem(0xc629, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x2d4b, gbc.sp());
        EXPECT(0xc62b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc629));
        EXPECT(0xd5, gbc.readMem(0xc62a));
        // CB D5 0352
        gbc.setState(0x5f40, 0xe526, 0x8b50, 0x1a0, 0x882, 0x5529, 0x1, 0x0);
        gbc.writeMem(0x5f40, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe526, gbc.sp());
        EXPECT(0x5f42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0353
        gbc.setState(0x76f0, 0xb36c, 0xdc20, 0xf91c, 0x35af, 0x1993, 0x0, 0x0);
        gbc.writeMem(0x76f0, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb36c, gbc.sp());
        EXPECT(0x76f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0354
        gbc.setState(0x5d76, 0xde09, 0x34c0, 0x6bb4, 0x4938, 0x8762, 0x0, 0x1);
        gbc.writeMem(0x5d76, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xde09, gbc.sp());
        EXPECT(0x5d78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0355
        gbc.setState(0x39a2, 0x7df, 0x5ee0, 0x149a, 0x4cc8, 0x4d0e, 0x0, 0x0);
        gbc.writeMem(0x39a2, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x7df, gbc.sp());
        EXPECT(0x39a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0356
        gbc.setState(0x6632, 0xd030, 0x1020, 0x3dbd, 0xacbd, 0x9d33, 0x0, 0x1);
        gbc.writeMem(0x6632, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xd030, gbc.sp());
        EXPECT(0x6634, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0357
        gbc.setState(0xb678, 0xcc40, 0xb460, 0x79a8, 0x2c1d, 0x5acd, 0x0, 0x0);
        gbc.writeMem(0xb678, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xcc40, gbc.sp());
        EXPECT(0xb67a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb678));
        EXPECT(0xd5, gbc.readMem(0xb679));
        // CB D5 0358
        gbc.setState(0xe236, 0x115c, 0x9d60, 0xd9a5, 0xf6ce, 0xcc1b, 0x0, 0x0);
        gbc.writeMem(0xe236, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x115c, gbc.sp());
        EXPECT(0xe238, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe236));
        EXPECT(0xd5, gbc.readMem(0xe237));
        // CB D5 0359
        gbc.setState(0x1295, 0x306e, 0x3ab0, 0xe5cd, 0xe8a2, 0x8479, 0x0, 0x1);
        gbc.writeMem(0x1295, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x306e, gbc.sp());
        EXPECT(0x1297, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 035A
        gbc.setState(0xb858, 0x73ef, 0xe310, 0x4fb3, 0xb6fd, 0xefd5, 0x1, 0x1);
        gbc.writeMem(0xb858, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x73ef, gbc.sp());
        EXPECT(0xb85a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb858));
        EXPECT(0xd5, gbc.readMem(0xb859));
        // CB D5 035B
        gbc.setState(0x9378, 0xba75, 0x5d30, 0xbfbb, 0xe39b, 0xfbcd, 0x0, 0x1);
        gbc.writeMem(0x9378, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xba75, gbc.sp());
        EXPECT(0x937a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9378));
        EXPECT(0xd5, gbc.readMem(0x9379));
        // CB D5 035C
        gbc.setState(0xcb8e, 0x4c5, 0xa170, 0xc7e2, 0x2720, 0x5177, 0x1, 0x0);
        gbc.writeMem(0xcb8e, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x4c5, gbc.sp());
        EXPECT(0xcb90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb8e));
        EXPECT(0xd5, gbc.readMem(0xcb8f));
        // CB D5 035E
        gbc.setState(0xdfa6, 0xf78d, 0xe800, 0x807b, 0xbf8a, 0x4558, 0x1, 0x1);
        gbc.writeMem(0xdfa6, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf78d, gbc.sp());
        EXPECT(0xdfa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfa6));
        EXPECT(0xd5, gbc.readMem(0xdfa7));
        // CB D5 035F
        gbc.setState(0xb26f, 0xad6b, 0x3e50, 0x1bd9, 0xc7a0, 0x7003, 0x1, 0x0);
        gbc.writeMem(0xb26f, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xad6b, gbc.sp());
        EXPECT(0xb271, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb26f));
        EXPECT(0xd5, gbc.readMem(0xb270));
        // CB D5 0361
        gbc.setState(0xd0a7, 0xcf2f, 0x7b30, 0xa856, 0xe6c3, 0x6c76, 0x0, 0x0);
        gbc.writeMem(0xd0a7, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xcf2f, gbc.sp());
        EXPECT(0xd0a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0a7));
        EXPECT(0xd5, gbc.readMem(0xd0a8));
        // CB D5 0362
        gbc.setState(0xcec4, 0xadb1, 0x4160, 0x3d99, 0x485f, 0x4e73, 0x1, 0x0);
        gbc.writeMem(0xcec4, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xadb1, gbc.sp());
        EXPECT(0xcec6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcec4));
        EXPECT(0xd5, gbc.readMem(0xcec5));
        // CB D5 0363
        gbc.setState(0x2c3f, 0x814a, 0x59a0, 0x9798, 0x3f8, 0x6415, 0x1, 0x0);
        gbc.writeMem(0x2c3f, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x814a, gbc.sp());
        EXPECT(0x2c41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0364
        gbc.setState(0x5a5e, 0x16ea, 0x2d70, 0xac4, 0xd305, 0xe439, 0x0, 0x0);
        gbc.writeMem(0x5a5e, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x16ea, gbc.sp());
        EXPECT(0x5a60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0365
        gbc.setState(0xc59d, 0xc68a, 0xed80, 0x2b08, 0xe14f, 0x27f, 0x0, 0x0);
        gbc.writeMem(0xc59d, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc68a, gbc.sp());
        EXPECT(0xc59f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc59d));
        EXPECT(0xd5, gbc.readMem(0xc59e));
        // CB D5 0366
        gbc.setState(0x5945, 0xc577, 0x1530, 0xa7f6, 0x5f27, 0x2cf8, 0x0, 0x1);
        gbc.writeMem(0x5945, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc577, gbc.sp());
        EXPECT(0x5947, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0367
        gbc.setState(0x3657, 0xa0ee, 0xd4a0, 0xb79f, 0x7f20, 0x485a, 0x0, 0x1);
        gbc.writeMem(0x3657, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xa0ee, gbc.sp());
        EXPECT(0x3659, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0368
        gbc.setState(0xd7ff, 0xa009, 0x3e80, 0x5e33, 0x25b0, 0x9764, 0x1, 0x1);
        gbc.writeMem(0xd7ff, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xa009, gbc.sp());
        EXPECT(0xd801, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7ff));
        EXPECT(0xd5, gbc.readMem(0xd800));
        // CB D5 0369
        gbc.setState(0x8223, 0xca96, 0x9520, 0x6da6, 0x1924, 0x760, 0x1, 0x0);
        gbc.writeMem(0x8223, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xca96, gbc.sp());
        EXPECT(0x8225, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8223));
        EXPECT(0xd5, gbc.readMem(0x8224));
        // CB D5 036A
        gbc.setState(0x7595, 0x1b56, 0x6fd0, 0xa86e, 0x1f57, 0xfcb9, 0x1, 0x0);
        gbc.writeMem(0x7595, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x1b56, gbc.sp());
        EXPECT(0x7597, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 036B
        gbc.setState(0xdfa7, 0x78a, 0x8d80, 0xe0df, 0x187b, 0x7954, 0x0, 0x0);
        gbc.writeMem(0xdfa7, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x78a, gbc.sp());
        EXPECT(0xdfa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfa7));
        EXPECT(0xd5, gbc.readMem(0xdfa8));
        // CB D5 036C
        gbc.setState(0x4ed0, 0x9527, 0xb600, 0xb9b3, 0xe79d, 0x4ceb, 0x0, 0x1);
        gbc.writeMem(0x4ed0, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9527, gbc.sp());
        EXPECT(0x4ed2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 036D
        gbc.setState(0xd2e3, 0x6041, 0x3260, 0x67f2, 0x3046, 0x69de, 0x1, 0x1);
        gbc.writeMem(0xd2e3, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x6041, gbc.sp());
        EXPECT(0xd2e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2e3));
        EXPECT(0xd5, gbc.readMem(0xd2e4));
        // CB D5 036E
        gbc.setState(0x3625, 0xa49f, 0x9170, 0x723, 0xee9b, 0x253a, 0x0, 0x1);
        gbc.writeMem(0x3625, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xa49f, gbc.sp());
        EXPECT(0x3627, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 036F
        gbc.setState(0x6e0, 0x59cf, 0x5540, 0xd869, 0xab7c, 0xd1f1, 0x0, 0x0);
        gbc.writeMem(0x6e0, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x59cf, gbc.sp());
        EXPECT(0x6e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0370
        gbc.setState(0x821d, 0x11e6, 0x1660, 0x33f4, 0xae5a, 0x3ac, 0x0, 0x1);
        gbc.writeMem(0x821d, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x11e6, gbc.sp());
        EXPECT(0x821f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x821d));
        EXPECT(0xd5, gbc.readMem(0x821e));
        // CB D5 0371
        gbc.setState(0x8820, 0x8ddd, 0x7250, 0xced9, 0x327d, 0x1f25, 0x0, 0x0);
        gbc.writeMem(0x8820, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x8ddd, gbc.sp());
        EXPECT(0x8822, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8820));
        EXPECT(0xd5, gbc.readMem(0x8821));
        // CB D5 0372
        gbc.setState(0xd0e6, 0x4981, 0x4450, 0xae92, 0xd81, 0x7dab, 0x0, 0x1);
        gbc.writeMem(0xd0e6, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x4981, gbc.sp());
        EXPECT(0xd0e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0e6));
        EXPECT(0xd5, gbc.readMem(0xd0e7));
        // CB D5 0373
        gbc.setState(0x6646, 0x7901, 0xb790, 0x6bf7, 0xbbb4, 0x7137, 0x0, 0x1);
        gbc.writeMem(0x6646, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x7901, gbc.sp());
        EXPECT(0x6648, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0374
        gbc.setState(0x8c38, 0xe7e4, 0x73d0, 0x5800, 0xbb3b, 0xeed1, 0x0, 0x0);
        gbc.writeMem(0x8c38, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe7e4, gbc.sp());
        EXPECT(0x8c3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c38));
        EXPECT(0xd5, gbc.readMem(0x8c39));
        // CB D5 0375
        gbc.setState(0xc374, 0x365b, 0xa320, 0xcfe6, 0x8a88, 0x474a, 0x1, 0x0);
        gbc.writeMem(0xc374, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x365b, gbc.sp());
        EXPECT(0xc376, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc374));
        EXPECT(0xd5, gbc.readMem(0xc375));
        // CB D5 0376
        gbc.setState(0x10fd, 0x13c6, 0xa350, 0x1a95, 0xf638, 0xc40f, 0x1, 0x1);
        gbc.writeMem(0x10fd, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x13c6, gbc.sp());
        EXPECT(0x10ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0377
        gbc.setState(0xcbcb, 0xabcc, 0xf210, 0xdc98, 0xabd, 0x4b1e, 0x1, 0x1);
        gbc.writeMem(0xcbcb, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xabcc, gbc.sp());
        EXPECT(0xcbcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbcb));
        EXPECT(0xd5, gbc.readMem(0xcbcc));
        // CB D5 0378
        gbc.setState(0xd564, 0x83fa, 0xf6d0, 0x24f1, 0x4d1d, 0x9f07, 0x0, 0x1);
        gbc.writeMem(0xd564, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x83fa, gbc.sp());
        EXPECT(0xd566, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd564));
        EXPECT(0xd5, gbc.readMem(0xd565));
        // CB D5 0379
        gbc.setState(0x4957, 0xf8e5, 0x5190, 0x154e, 0x3aa9, 0x4add, 0x1, 0x1);
        gbc.writeMem(0x4957, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xf8e5, gbc.sp());
        EXPECT(0x4959, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 037B
        gbc.setState(0xce1a, 0xc806, 0xa240, 0x4997, 0x340f, 0x7552, 0x0, 0x0);
        gbc.writeMem(0xce1a, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xc806, gbc.sp());
        EXPECT(0xce1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce1a));
        EXPECT(0xd5, gbc.readMem(0xce1b));
        // CB D5 037C
        gbc.setState(0x90c4, 0xf4bc, 0xdaa0, 0x2f7d, 0xbdca, 0x4c83, 0x0, 0x0);
        gbc.writeMem(0x90c4, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf4bc, gbc.sp());
        EXPECT(0x90c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90c4));
        EXPECT(0xd5, gbc.readMem(0x90c5));
        // CB D5 037D
        gbc.setState(0xbbc4, 0x6a6f, 0xe5e0, 0xcbb7, 0xe87f, 0x9681, 0x1, 0x0);
        gbc.writeMem(0xbbc4, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6a6f, gbc.sp());
        EXPECT(0xbbc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbc4));
        EXPECT(0xd5, gbc.readMem(0xbbc5));
        // CB D5 037F
        gbc.setState(0xab70, 0xfd93, 0xa4e0, 0x90f3, 0xbf36, 0x4e54, 0x0, 0x1);
        gbc.writeMem(0xab70, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xfd93, gbc.sp());
        EXPECT(0xab72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab70));
        EXPECT(0xd5, gbc.readMem(0xab71));
        // CB D5 0380
        gbc.setState(0x7c7a, 0x423f, 0x8b50, 0x7593, 0x2693, 0x8c2d, 0x1, 0x1);
        gbc.writeMem(0x7c7a, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x423f, gbc.sp());
        EXPECT(0x7c7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0381
        gbc.setState(0x7042, 0xd7b6, 0x4e60, 0xce45, 0xf3a0, 0xd5b0, 0x1, 0x0);
        gbc.writeMem(0x7042, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd7b6, gbc.sp());
        EXPECT(0x7044, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0382
        gbc.setState(0xdbde, 0x2882, 0xe50, 0x4c0b, 0xb5ce, 0x1b96, 0x1, 0x1);
        gbc.writeMem(0xdbde, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2882, gbc.sp());
        EXPECT(0xdbe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbde));
        EXPECT(0xd5, gbc.readMem(0xdbdf));
        // CB D5 0384
        gbc.setState(0x5ea8, 0xb59a, 0xffc0, 0x328d, 0xbea0, 0xf943, 0x0, 0x0);
        gbc.writeMem(0x5ea8, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb59a, gbc.sp());
        EXPECT(0x5eaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0385
        gbc.setState(0x83c6, 0xd745, 0xcfb0, 0x4e8d, 0xb96b, 0x16d, 0x0, 0x0);
        gbc.writeMem(0x83c6, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xd745, gbc.sp());
        EXPECT(0x83c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83c6));
        EXPECT(0xd5, gbc.readMem(0x83c7));
        // CB D5 0387
        gbc.setState(0xee1f, 0x48fd, 0x8f90, 0x1234, 0xc39e, 0x5155, 0x0, 0x0);
        gbc.writeMem(0xee1f, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x48fd, gbc.sp());
        EXPECT(0xee21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee1f));
        EXPECT(0xd5, gbc.readMem(0xee20));
        // CB D5 0388
        gbc.setState(0x7972, 0x4e9b, 0xd550, 0x3685, 0xc5ed, 0xe81b, 0x1, 0x1);
        gbc.writeMem(0x7972, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x4e9b, gbc.sp());
        EXPECT(0x7974, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0389
        gbc.setState(0x9cca, 0xb151, 0x970, 0x8ce9, 0xf2d9, 0x79b2, 0x1, 0x0);
        gbc.writeMem(0x9cca, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xb151, gbc.sp());
        EXPECT(0x9ccc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cca));
        EXPECT(0xd5, gbc.readMem(0x9ccb));
        // CB D5 038A
        gbc.setState(0xcaa1, 0x9d9a, 0x72c0, 0x49b3, 0x81ea, 0xba5f, 0x1, 0x0);
        gbc.writeMem(0xcaa1, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x9d9a, gbc.sp());
        EXPECT(0xcaa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaa1));
        EXPECT(0xd5, gbc.readMem(0xcaa2));
        // CB D5 038B
        gbc.setState(0x91da, 0xeaf6, 0x84f0, 0xed60, 0x8a9a, 0x4d8, 0x1, 0x0);
        gbc.writeMem(0x91da, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xeaf6, gbc.sp());
        EXPECT(0x91dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91da));
        EXPECT(0xd5, gbc.readMem(0x91db));
        // CB D5 038C
        gbc.setState(0xed9b, 0xcff0, 0x5d10, 0x5dcc, 0xa13, 0xc054, 0x1, 0x0);
        gbc.writeMem(0xed9b, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xcff0, gbc.sp());
        EXPECT(0xed9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed9b));
        EXPECT(0xd5, gbc.readMem(0xed9c));
        // CB D5 038D
        gbc.setState(0x6322, 0xc4e9, 0x5850, 0xcab7, 0x9ab7, 0x5aa1, 0x1, 0x0);
        gbc.writeMem(0x6322, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc4e9, gbc.sp());
        EXPECT(0x6324, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 038E
        gbc.setState(0x4630, 0x4f3b, 0x3ba0, 0x4867, 0xf21d, 0xa44d, 0x1, 0x0);
        gbc.writeMem(0x4630, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x4f3b, gbc.sp());
        EXPECT(0x4632, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 038F
        gbc.setState(0xc570, 0x63fc, 0x1f70, 0xb2bd, 0xc68c, 0xd9fa, 0x0, 0x0);
        gbc.writeMem(0xc570, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x63fc, gbc.sp());
        EXPECT(0xc572, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc570));
        EXPECT(0xd5, gbc.readMem(0xc571));
        // CB D5 0390
        gbc.setState(0x18ac, 0xe483, 0x49e0, 0x3c3, 0x5d23, 0x8955, 0x1, 0x0);
        gbc.writeMem(0x18ac, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xe483, gbc.sp());
        EXPECT(0x18ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0391
        gbc.setState(0x3815, 0xd2ee, 0x99a0, 0xf533, 0x1041, 0xeecd, 0x0, 0x1);
        gbc.writeMem(0x3815, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd2ee, gbc.sp());
        EXPECT(0x3817, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0392
        gbc.setState(0x20cd, 0xf27a, 0x1e20, 0xf990, 0x2396, 0x1757, 0x1, 0x1);
        gbc.writeMem(0x20cd, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xf27a, gbc.sp());
        EXPECT(0x20cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0393
        gbc.setState(0x6189, 0xd01d, 0x3b50, 0xa5b0, 0xa9c4, 0x48d6, 0x0, 0x0);
        gbc.writeMem(0x6189, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xd01d, gbc.sp());
        EXPECT(0x618b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 0394
        gbc.setState(0x6a88, 0xd584, 0x18c0, 0x590, 0x89e9, 0x80ac, 0x1, 0x1);
        gbc.writeMem(0x6a88, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xd584, gbc.sp());
        EXPECT(0x6a8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0395
        gbc.setState(0x81bf, 0x2b09, 0x2f00, 0xcefa, 0x11df, 0x240c, 0x1, 0x1);
        gbc.writeMem(0x81bf, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x2b09, gbc.sp());
        EXPECT(0x81c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81bf));
        EXPECT(0xd5, gbc.readMem(0x81c0));
        // CB D5 0396
        gbc.setState(0x7438, 0xd8, 0xff40, 0x4a4, 0xc543, 0xe629, 0x1, 0x1);
        gbc.writeMem(0x7438, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xd8, gbc.sp());
        EXPECT(0x743a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 0397
        gbc.setState(0xd9ce, 0x8c, 0xfe00, 0xe284, 0xabaa, 0x24cb, 0x1, 0x1);
        gbc.writeMem(0xd9ce, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x8c, gbc.sp());
        EXPECT(0xd9d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9ce));
        EXPECT(0xd5, gbc.readMem(0xd9cf));
        // CB D5 0398
        gbc.setState(0xcdb1, 0x121c, 0xc840, 0x4733, 0xae59, 0xd26b, 0x0, 0x0);
        gbc.writeMem(0xcdb1, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x121c, gbc.sp());
        EXPECT(0xcdb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdb1));
        EXPECT(0xd5, gbc.readMem(0xcdb2));
        // CB D5 0399
        gbc.setState(0x6c07, 0x4f64, 0x2f90, 0xc02, 0xc382, 0x5638, 0x1, 0x0);
        gbc.writeMem(0x6c07, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x4f64, gbc.sp());
        EXPECT(0x6c09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 039A
        gbc.setState(0x1b5c, 0x8e9b, 0xec40, 0x5f34, 0xd818, 0x9556, 0x0, 0x1);
        gbc.writeMem(0x1b5c, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x8e9b, gbc.sp());
        EXPECT(0x1b5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 039B
        gbc.setState(0xc5d5, 0x4ea9, 0xaaf0, 0xc7de, 0x20cf, 0xd878, 0x0, 0x1);
        gbc.writeMem(0xc5d5, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x4ea9, gbc.sp());
        EXPECT(0xc5d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5d5));
        EXPECT(0xd5, gbc.readMem(0xc5d6));
        // CB D5 039D
        gbc.setState(0x7a75, 0x5856, 0x4e80, 0xfa0f, 0x111d, 0xea41, 0x1, 0x1);
        gbc.writeMem(0x7a75, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x5856, gbc.sp());
        EXPECT(0x7a77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 039E
        gbc.setState(0x5752, 0x4df9, 0x33c0, 0xbd8b, 0x9784, 0x3395, 0x0, 0x1);
        gbc.writeMem(0x5752, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4df9, gbc.sp());
        EXPECT(0x5754, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 039F
        gbc.setState(0x19ea, 0x532a, 0x59d0, 0x6784, 0x9f74, 0xc672, 0x1, 0x0);
        gbc.writeMem(0x19ea, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x532a, gbc.sp());
        EXPECT(0x19ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 03A0
        gbc.setState(0x63b8, 0xbd61, 0xcc80, 0x7b78, 0x90fe, 0xd453, 0x1, 0x1);
        gbc.writeMem(0x63b8, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xbd61, gbc.sp());
        EXPECT(0x63ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 03A1
        gbc.setState(0x98c9, 0xeb05, 0xd0d0, 0x28fe, 0xb5e7, 0x3926, 0x1, 0x0);
        gbc.writeMem(0x98c9, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xeb05, gbc.sp());
        EXPECT(0x98cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98c9));
        EXPECT(0xd5, gbc.readMem(0x98ca));
        // CB D5 03A2
        gbc.setState(0xc166, 0x5e3b, 0x2220, 0x99d8, 0xdd63, 0x35da, 0x1, 0x1);
        gbc.writeMem(0xc166, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5e3b, gbc.sp());
        EXPECT(0xc168, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc166));
        EXPECT(0xd5, gbc.readMem(0xc167));
        // CB D5 03A3
        gbc.setState(0x6add, 0x88f0, 0x1db0, 0xfcea, 0x3b72, 0xe1db, 0x0, 0x0);
        gbc.writeMem(0x6add, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x88f0, gbc.sp());
        EXPECT(0x6adf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 03A5
        gbc.setState(0x7dc0, 0xc623, 0x8c0, 0x98b6, 0xc3d1, 0xbccb, 0x1, 0x0);
        gbc.writeMem(0x7dc0, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xc623, gbc.sp());
        EXPECT(0x7dc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 03A6
        gbc.setState(0x86cd, 0xf647, 0xf480, 0xad7d, 0x2c3a, 0x17ff, 0x1, 0x0);
        gbc.writeMem(0x86cd, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xf647, gbc.sp());
        EXPECT(0x86cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86cd));
        EXPECT(0xd5, gbc.readMem(0x86ce));
        // CB D5 03A7
        gbc.setState(0x3a36, 0xb18d, 0x61d0, 0x3db4, 0x297b, 0x8c68, 0x1, 0x0);
        gbc.writeMem(0x3a36, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xb18d, gbc.sp());
        EXPECT(0x3a38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 03A8
        gbc.setState(0xa58a, 0xef07, 0xb090, 0x2cfb, 0xb14f, 0xa0ba, 0x0, 0x0);
        gbc.writeMem(0xa58a, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xef07, gbc.sp());
        EXPECT(0xa58c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa58a));
        EXPECT(0xd5, gbc.readMem(0xa58b));
        // CB D5 03A9
        gbc.setState(0x305e, 0xe38e, 0x28e0, 0xf013, 0x7173, 0x7f12, 0x0, 0x1);
        gbc.writeMem(0x305e, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe38e, gbc.sp());
        EXPECT(0x3060, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 03AA
        gbc.setState(0x869c, 0x8eaa, 0x1960, 0x2949, 0x232f, 0x3f43, 0x0, 0x0);
        gbc.writeMem(0x869c, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x8eaa, gbc.sp());
        EXPECT(0x869e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x869c));
        EXPECT(0xd5, gbc.readMem(0x869d));
        // CB D5 03AC
        gbc.setState(0xc00a, 0xd152, 0x9ca0, 0x911a, 0xc6a6, 0x9419, 0x0, 0x1);
        gbc.writeMem(0xc00a, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd152, gbc.sp());
        EXPECT(0xc00c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc00a));
        EXPECT(0xd5, gbc.readMem(0xc00b));
        // CB D5 03AD
        gbc.setState(0x834d, 0xaeb5, 0x1da0, 0xadfc, 0x69c7, 0xf7ef, 0x1, 0x0);
        gbc.writeMem(0x834d, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xaeb5, gbc.sp());
        EXPECT(0x834f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x834d));
        EXPECT(0xd5, gbc.readMem(0x834e));
        // CB D5 03AE
        gbc.setState(0x6fea, 0xc48d, 0xb890, 0x91e7, 0x6bf5, 0xeffa, 0x1, 0x1);
        gbc.writeMem(0x6fea, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc48d, gbc.sp());
        EXPECT(0x6fec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 03AF
        gbc.setState(0x7cd7, 0x657d, 0x75d0, 0xf7b, 0xa3f0, 0x4f2, 0x0, 0x1);
        gbc.writeMem(0x7cd7, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x657d, gbc.sp());
        EXPECT(0x7cd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 03B0
        gbc.setState(0xb59e, 0x99c7, 0xa370, 0x1548, 0xc2fc, 0xaf24, 0x0, 0x1);
        gbc.writeMem(0xb59e, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x99c7, gbc.sp());
        EXPECT(0xb5a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb59e));
        EXPECT(0xd5, gbc.readMem(0xb59f));
        // CB D5 03B1
        gbc.setState(0x35f8, 0x5ac0, 0xfb60, 0xb9c4, 0x3fd0, 0xe7a1, 0x0, 0x0);
        gbc.writeMem(0x35f8, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x5ac0, gbc.sp());
        EXPECT(0x35fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 03B2
        gbc.setState(0x4f7c, 0x6049, 0x73d0, 0x3aca, 0x36a0, 0x9c9b, 0x0, 0x1);
        gbc.writeMem(0x4f7c, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x6049, gbc.sp());
        EXPECT(0x4f7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 03B3
        gbc.setState(0x3c68, 0x4227, 0x74d0, 0x5aa7, 0x6f74, 0x8c3f, 0x1, 0x0);
        gbc.writeMem(0x3c68, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x4227, gbc.sp());
        EXPECT(0x3c6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 03B4
        gbc.setState(0x21d7, 0x9aa6, 0xe1a0, 0xa17c, 0x4781, 0x5a66, 0x0, 0x1);
        gbc.writeMem(0x21d7, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x9aa6, gbc.sp());
        EXPECT(0x21d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 03B5
        gbc.setState(0x181f, 0xc6f1, 0x74f0, 0x2698, 0x1dd, 0x7296, 0x1, 0x0);
        gbc.writeMem(0x181f, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xc6f1, gbc.sp());
        EXPECT(0x1821, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 03B6
        gbc.setState(0xa450, 0xa5f2, 0xde40, 0x8678, 0x4d47, 0x8b2d, 0x1, 0x0);
        gbc.writeMem(0xa450, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xa5f2, gbc.sp());
        EXPECT(0xa452, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa450));
        EXPECT(0xd5, gbc.readMem(0xa451));
        // CB D5 03B7
        gbc.setState(0xb0cd, 0x2f65, 0x4710, 0xab6, 0xa32f, 0x559, 0x1, 0x1);
        gbc.writeMem(0xb0cd, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x2f65, gbc.sp());
        EXPECT(0xb0cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0cd));
        EXPECT(0xd5, gbc.readMem(0xb0ce));
        // CB D5 03B8
        gbc.setState(0x7d5d, 0xc271, 0x6bb0, 0x59eb, 0x6add, 0x74d9, 0x1, 0x1);
        gbc.writeMem(0x7d5d, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc271, gbc.sp());
        EXPECT(0x7d5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 03B9
        gbc.setState(0x5497, 0x35f9, 0x52b0, 0x8704, 0x975c, 0xa60f, 0x0, 0x1);
        gbc.writeMem(0x5497, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x35f9, gbc.sp());
        EXPECT(0x5499, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 03BA
        gbc.setState(0x962b, 0x1ded, 0xb7e0, 0x7e3, 0x8fc1, 0x5451, 0x0, 0x1);
        gbc.writeMem(0x962b, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x1ded, gbc.sp());
        EXPECT(0x962d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x962b));
        EXPECT(0xd5, gbc.readMem(0x962c));
        // CB D5 03BB
        gbc.setState(0x18e, 0xcdef, 0x9c30, 0x3d16, 0xff63, 0xec3d, 0x0, 0x0);
        gbc.writeMem(0x18e, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xcdef, gbc.sp());
        EXPECT(0x190, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 03BC
        gbc.setState(0x76c9, 0xa58a, 0x37e0, 0x33e0, 0xe060, 0xcf36, 0x1, 0x1);
        gbc.writeMem(0x76c9, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xa58a, gbc.sp());
        EXPECT(0x76cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 03BD
        gbc.setState(0xd7f8, 0x93dd, 0x9330, 0x12e0, 0x85b, 0x98b7, 0x1, 0x1);
        gbc.writeMem(0xd7f8, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x93dd, gbc.sp());
        EXPECT(0xd7fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7f8));
        EXPECT(0xd5, gbc.readMem(0xd7f9));
        // CB D5 03BE
        gbc.setState(0x535e, 0xf5ea, 0xdd30, 0xfd3c, 0x9487, 0x37f8, 0x0, 0x1);
        gbc.writeMem(0x535e, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xf5ea, gbc.sp());
        EXPECT(0x5360, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 03BF
        gbc.setState(0x951e, 0xc2d2, 0x76c0, 0x370d, 0xc8b0, 0x45e5, 0x0, 0x1);
        gbc.writeMem(0x951e, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc2d2, gbc.sp());
        EXPECT(0x9520, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x951e));
        EXPECT(0xd5, gbc.readMem(0x951f));
        // CB D5 03C0
        gbc.setState(0x2328, 0x44c1, 0x4df0, 0xb690, 0x96b9, 0x8ea6, 0x1, 0x1);
        gbc.writeMem(0x2328, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x44c1, gbc.sp());
        EXPECT(0x232a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 03C1
        gbc.setState(0xd4a7, 0x5d01, 0x89d0, 0x1d0f, 0xb89f, 0x4cdb, 0x1, 0x1);
        gbc.writeMem(0xd4a7, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x5d01, gbc.sp());
        EXPECT(0xd4a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4a7));
        EXPECT(0xd5, gbc.readMem(0xd4a8));
        // CB D5 03C2
        gbc.setState(0x22dd, 0xc314, 0x38c0, 0xd94a, 0xe04, 0x6bed, 0x1, 0x1);
        gbc.writeMem(0x22dd, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xc314, gbc.sp());
        EXPECT(0x22df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 03C3
        gbc.setState(0xaa99, 0xa85d, 0x45e0, 0xb43e, 0x71d9, 0x39a6, 0x0, 0x1);
        gbc.writeMem(0xaa99, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa85d, gbc.sp());
        EXPECT(0xaa9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa99));
        EXPECT(0xd5, gbc.readMem(0xaa9a));
        // CB D5 03C4
        gbc.setState(0x1a79, 0x809d, 0x2740, 0xc4cd, 0xede9, 0x20da, 0x1, 0x0);
        gbc.writeMem(0x1a79, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x809d, gbc.sp());
        EXPECT(0x1a7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 03C5
        gbc.setState(0x2f19, 0x8245, 0xeae0, 0x9829, 0xefb8, 0xe369, 0x1, 0x0);
        gbc.writeMem(0x2f19, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x8245, gbc.sp());
        EXPECT(0x2f1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 03C6
        gbc.setState(0x2a15, 0x9ca6, 0x3400, 0x51da, 0xba3f, 0xdd8e, 0x0, 0x0);
        gbc.writeMem(0x2a15, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9ca6, gbc.sp());
        EXPECT(0x2a17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 03C7
        gbc.setState(0x21de, 0xaf04, 0x29d0, 0xebd6, 0x87d, 0xb2e8, 0x1, 0x1);
        gbc.writeMem(0x21de, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xaf04, gbc.sp());
        EXPECT(0x21e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 03C8
        gbc.setState(0x204f, 0xb49a, 0x2090, 0x2bae, 0xea64, 0xa10e, 0x1, 0x0);
        gbc.writeMem(0x204f, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xb49a, gbc.sp());
        EXPECT(0x2051, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 03C9
        gbc.setState(0x1ccc, 0x2a98, 0xba70, 0x9b08, 0x9af8, 0xb6e8, 0x0, 0x1);
        gbc.writeMem(0x1ccc, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x2a98, gbc.sp());
        EXPECT(0x1cce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 03CA
        gbc.setState(0x4fb0, 0x6b66, 0xee10, 0xefa7, 0xb7bc, 0x2d16, 0x1, 0x1);
        gbc.writeMem(0x4fb0, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x6b66, gbc.sp());
        EXPECT(0x4fb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 03CB
        gbc.setState(0x7ddd, 0x1599, 0xd610, 0x6f8f, 0x5be6, 0x92c, 0x0, 0x1);
        gbc.writeMem(0x7ddd, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x1599, gbc.sp());
        EXPECT(0x7ddf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 03CC
        gbc.setState(0xe0a8, 0x4c2b, 0x22b0, 0x4508, 0xeee2, 0xf451, 0x1, 0x1);
        gbc.writeMem(0xe0a8, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x4c2b, gbc.sp());
        EXPECT(0xe0aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0a8));
        EXPECT(0xd5, gbc.readMem(0xe0a9));
        // CB D5 03CE
        gbc.setState(0xe249, 0x532a, 0x860, 0xd424, 0xc371, 0x7e9c, 0x0, 0x1);
        gbc.writeMem(0xe249, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x532a, gbc.sp());
        EXPECT(0xe24b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe249));
        EXPECT(0xd5, gbc.readMem(0xe24a));
        // CB D5 03CF
        gbc.setState(0xacfe, 0x1103, 0xa880, 0x8006, 0xaea2, 0xf217, 0x0, 0x1);
        gbc.writeMem(0xacfe, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x1103, gbc.sp());
        EXPECT(0xad00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacfe));
        EXPECT(0xd5, gbc.readMem(0xacff));
        // CB D5 03D0
        gbc.setState(0x76ad, 0x3564, 0x16e0, 0x5c58, 0x9a95, 0x9b07, 0x1, 0x0);
        gbc.writeMem(0x76ad, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x3564, gbc.sp());
        EXPECT(0x76af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 03D1
        gbc.setState(0xd329, 0x10c6, 0x3660, 0xcddc, 0xa3f4, 0xb8e2, 0x0, 0x1);
        gbc.writeMem(0xd329, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x10c6, gbc.sp());
        EXPECT(0xd32b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd329));
        EXPECT(0xd5, gbc.readMem(0xd32a));
        // CB D5 03D2
        gbc.setState(0x8ba9, 0x405, 0xfc50, 0xc0dd, 0xaab0, 0x228d, 0x1, 0x0);
        gbc.writeMem(0x8ba9, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x405, gbc.sp());
        EXPECT(0x8bab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ba9));
        EXPECT(0xd5, gbc.readMem(0x8baa));
        // CB D5 03D3
        gbc.setState(0xc0fb, 0x299, 0x2590, 0x19ba, 0xb16f, 0x85c8, 0x0, 0x1);
        gbc.writeMem(0xc0fb, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x299, gbc.sp());
        EXPECT(0xc0fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0fb));
        EXPECT(0xd5, gbc.readMem(0xc0fc));
        // CB D5 03D4
        gbc.setState(0x9f4d, 0xdbc4, 0x1b50, 0x147e, 0xb95f, 0xdfaf, 0x1, 0x1);
        gbc.writeMem(0x9f4d, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xdbc4, gbc.sp());
        EXPECT(0x9f4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f4d));
        EXPECT(0xd5, gbc.readMem(0x9f4e));
        // CB D5 03D5
        gbc.setState(0xec63, 0xb531, 0x6740, 0xf0db, 0xd2ec, 0x2fe9, 0x1, 0x1);
        gbc.writeMem(0xec63, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xb531, gbc.sp());
        EXPECT(0xec65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec63));
        EXPECT(0xd5, gbc.readMem(0xec64));
        // CB D5 03D6
        gbc.setState(0x41e6, 0x92f, 0x1c40, 0x63db, 0x40cd, 0xefb1, 0x1, 0x1);
        gbc.writeMem(0x41e6, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x92f, gbc.sp());
        EXPECT(0x41e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 03D7
        gbc.setState(0x819c, 0xb00e, 0x3d0, 0x53e5, 0x5c26, 0x439f, 0x0, 0x0);
        gbc.writeMem(0x819c, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xb00e, gbc.sp());
        EXPECT(0x819e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x819c));
        EXPECT(0xd5, gbc.readMem(0x819d));
        // CB D5 03D8
        gbc.setState(0xaeb4, 0xbef6, 0x71e0, 0x40ef, 0x7df8, 0x2dc8, 0x0, 0x1);
        gbc.writeMem(0xaeb4, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xbef6, gbc.sp());
        EXPECT(0xaeb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeb4));
        EXPECT(0xd5, gbc.readMem(0xaeb5));
        // CB D5 03D9
        gbc.setState(0x3a78, 0xb5e8, 0x31a0, 0x7ad1, 0x8861, 0x37b4, 0x1, 0x0);
        gbc.writeMem(0x3a78, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xb5e8, gbc.sp());
        EXPECT(0x3a7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 03DA
        gbc.setState(0xe016, 0x5, 0xf500, 0x3921, 0xa2b7, 0xe94b, 0x1, 0x0);
        gbc.writeMem(0xe016, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x5, gbc.sp());
        EXPECT(0xe018, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe016));
        EXPECT(0xd5, gbc.readMem(0xe017));
        // CB D5 03DB
        gbc.setState(0x3a50, 0x328, 0xf5a0, 0xab0c, 0x2fa6, 0x9a17, 0x1, 0x0);
        gbc.writeMem(0x3a50, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x328, gbc.sp());
        EXPECT(0x3a52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 03DC
        gbc.setState(0x5431, 0x8352, 0x3630, 0xe5f7, 0x32aa, 0x780b, 0x1, 0x1);
        gbc.writeMem(0x5431, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8352, gbc.sp());
        EXPECT(0x5433, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 03DD
        gbc.setState(0xc936, 0x878b, 0xaab0, 0x7265, 0x2a59, 0x901c, 0x0, 0x0);
        gbc.writeMem(0xc936, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x878b, gbc.sp());
        EXPECT(0xc938, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc936));
        EXPECT(0xd5, gbc.readMem(0xc937));
        // CB D5 03DE
        gbc.setState(0xada8, 0xb687, 0x7360, 0x8c8e, 0x4f0b, 0xa5fe, 0x0, 0x1);
        gbc.writeMem(0xada8, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xb687, gbc.sp());
        EXPECT(0xadaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xada8));
        EXPECT(0xd5, gbc.readMem(0xada9));
        // CB D5 03DF
        gbc.setState(0xd92d, 0x44b8, 0xc810, 0x934f, 0x80c2, 0x59d, 0x1, 0x1);
        gbc.writeMem(0xd92d, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x44b8, gbc.sp());
        EXPECT(0xd92f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd92d));
        EXPECT(0xd5, gbc.readMem(0xd92e));
        // CB D5 03E0
        gbc.setState(0xec66, 0x4673, 0xbcf0, 0x267e, 0x714, 0x122a, 0x1, 0x0);
        gbc.writeMem(0xec66, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x4673, gbc.sp());
        EXPECT(0xec68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec66));
        EXPECT(0xd5, gbc.readMem(0xec67));
        // CB D5 03E1
        gbc.setState(0xacbd, 0xa4f, 0x4280, 0xdf12, 0x1371, 0xfba4, 0x0, 0x0);
        gbc.writeMem(0xacbd, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xa4f, gbc.sp());
        EXPECT(0xacbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacbd));
        EXPECT(0xd5, gbc.readMem(0xacbe));
        // CB D5 03E2
        gbc.setState(0x88b7, 0x4b0, 0xf990, 0xe3e0, 0x173d, 0x206, 0x1, 0x1);
        gbc.writeMem(0x88b7, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4b0, gbc.sp());
        EXPECT(0x88b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88b7));
        EXPECT(0xd5, gbc.readMem(0x88b8));
        // CB D5 03E3
        gbc.setState(0xecbd, 0x308a, 0xc820, 0x2729, 0xd07a, 0x99cb, 0x0, 0x1);
        gbc.writeMem(0xecbd, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x308a, gbc.sp());
        EXPECT(0xecbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecbd));
        EXPECT(0xd5, gbc.readMem(0xecbe));
        // CB D5 03E4
        gbc.setState(0x5634, 0xa99e, 0x7450, 0xdaef, 0xdafb, 0x48d8, 0x0, 0x1);
        gbc.writeMem(0x5634, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xa99e, gbc.sp());
        EXPECT(0x5636, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D5 03E5
        gbc.setState(0x8c37, 0x557b, 0x2a50, 0x79e1, 0xb80d, 0x3bdb, 0x1, 0x1);
        gbc.writeMem(0x8c37, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x557b, gbc.sp());
        EXPECT(0x8c39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c37));
        EXPECT(0xd5, gbc.readMem(0x8c38));
        // CB D5 03E6
        gbc.setState(0x5018, 0x263a, 0x14c0, 0x2992, 0x94a0, 0xe464, 0x1, 0x1);
        gbc.writeMem(0x5018, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x263a, gbc.sp());
        EXPECT(0x501a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D5 03E7
        gbc.setState(0xeac4, 0xafae, 0xb5b0, 0xf9a2, 0x6e0, 0xb948, 0x1, 0x1);
        gbc.writeMem(0xeac4, { 0xcb, 0xd5 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xafae, gbc.sp());
        EXPECT(0xeac6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeac4));
        EXPECT(0xd5, gbc.readMem(0xeac5));
    }
