    TEST(gbcemu, opcode_44) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 44 0000
        gbc.setState(0xeeeb, 0x85bd, 0x87e0, 0x3988, 0x47ab, 0xcdfc, 0x0, 0x0);
        gbc.writeMem(0xeeeb, { 0x44 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x85bd, gbc.sp());
        EXPECT(0xeeec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xeeeb));
        // 44 0001
        gbc.setState(0xca6e, 0xa837, 0x44a0, 0xba0a, 0x3791, 0x2fe7, 0x1, 0x0);
        gbc.writeMem(0xca6e, { 0x44 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa837, gbc.sp());
        EXPECT(0xca6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xca6e));
        // 44 0002
        gbc.setState(0x3efd, 0x42ad, 0xff40, 0xaad9, 0x63d, 0x9e54, 0x1, 0x1);
        gbc.writeMem(0x3efd, { 0x44 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x42ad, gbc.sp());
        EXPECT(0x3efe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0003
        gbc.setState(0x8a6, 0x471c, 0xba00, 0x16a6, 0xe126, 0x6554, 0x0, 0x0);
        gbc.writeMem(0x8a6, { 0x44 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x471c, gbc.sp());
        EXPECT(0x8a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0004
        gbc.setState(0x4407, 0x9389, 0x9980, 0x771b, 0x59e5, 0xaae7, 0x1, 0x0);
        gbc.writeMem(0x4407, { 0x44 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9389, gbc.sp());
        EXPECT(0x4408, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0005
        gbc.setState(0x26f2, 0x2fe1, 0x30f0, 0x951, 0x6b93, 0x944f, 0x0, 0x0);
        gbc.writeMem(0x26f2, { 0x44 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x2fe1, gbc.sp());
        EXPECT(0x26f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0006
        gbc.setState(0xea15, 0xaa55, 0x2340, 0x7bc8, 0x580f, 0xbcc7, 0x1, 0x0);
        gbc.writeMem(0xea15, { 0x44 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xaa55, gbc.sp());
        EXPECT(0xea16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xea15));
        // 44 0007
        gbc.setState(0x9a2d, 0x6d08, 0x85d0, 0xf249, 0x9cf3, 0xad6e, 0x1, 0x1);
        gbc.writeMem(0x9a2d, { 0x44 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x6d08, gbc.sp());
        EXPECT(0x9a2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x9a2d));
        // 44 0008
        gbc.setState(0xd51a, 0xad3c, 0x80, 0x4459, 0x9ae8, 0x8054, 0x0, 0x0);
        gbc.writeMem(0xd51a, { 0x44 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xad3c, gbc.sp());
        EXPECT(0xd51b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xd51a));
        // 44 0009
        gbc.setState(0xa7c7, 0x3045, 0x9a70, 0x8a75, 0xf6d5, 0x4bce, 0x1, 0x0);
        gbc.writeMem(0xa7c7, { 0x44 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x3045, gbc.sp());
        EXPECT(0xa7c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa7c7));
        // 44 000A
        gbc.setState(0x826c, 0x14c5, 0x78f0, 0xef5, 0x2b8b, 0x1da7, 0x0, 0x1);
        gbc.writeMem(0x826c, { 0x44 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x14c5, gbc.sp());
        EXPECT(0x826d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x826c));
        // 44 000B
        gbc.setState(0xb417, 0x8549, 0x6960, 0xd7c0, 0xb67a, 0xe559, 0x0, 0x1);
        gbc.writeMem(0xb417, { 0x44 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x8549, gbc.sp());
        EXPECT(0xb418, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xb417));
        // 44 000D
        gbc.setState(0x3c42, 0xd9c9, 0x850, 0x3ebd, 0xb53f, 0xefc3, 0x0, 0x1);
        gbc.writeMem(0x3c42, { 0x44 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xd9c9, gbc.sp());
        EXPECT(0x3c43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 000E
        gbc.setState(0x219f, 0xd66, 0x85a0, 0x7c8c, 0x5cf8, 0xfb1b, 0x0, 0x0);
        gbc.writeMem(0x219f, { 0x44 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xd66, gbc.sp());
        EXPECT(0x21a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 000F
        gbc.setState(0x85ff, 0x468c, 0x9840, 0xc4e3, 0xf83b, 0x456e, 0x1, 0x1);
        gbc.writeMem(0x85ff, { 0x44 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x468c, gbc.sp());
        EXPECT(0x8600, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x85ff));
        // 44 0010
        gbc.setState(0xcbad, 0x39c2, 0x76b0, 0xfcb1, 0x3d0c, 0xa56e, 0x0, 0x0);
        gbc.writeMem(0xcbad, { 0x44 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x39c2, gbc.sp());
        EXPECT(0xcbae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xcbad));
        // 44 0011
        gbc.setState(0xa5d5, 0xf7d0, 0xb8d0, 0x99ca, 0x277e, 0xb22, 0x0, 0x1);
        gbc.writeMem(0xa5d5, { 0x44 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xf7d0, gbc.sp());
        EXPECT(0xa5d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa5d5));
        // 44 0012
        gbc.setState(0xda8a, 0xd956, 0x4b0, 0xb23a, 0xfc52, 0x3576, 0x0, 0x0);
        gbc.writeMem(0xda8a, { 0x44 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xd956, gbc.sp());
        EXPECT(0xda8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xda8a));
        // 44 0013
        gbc.setState(0xd580, 0x1ba6, 0x9d90, 0x632b, 0xb9a0, 0x8aa1, 0x0, 0x1);
        gbc.writeMem(0xd580, { 0x44 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x1ba6, gbc.sp());
        EXPECT(0xd581, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xd580));
        // 44 0014
        gbc.setState(0x5, 0xe906, 0xcfa0, 0xb1da, 0x6432, 0x8e0b, 0x0, 0x0);
        gbc.writeMem(0x5, { 0x44 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xe906, gbc.sp());
        EXPECT(0x6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0015
        gbc.setState(0x2b46, 0x1f8c, 0xe410, 0x4660, 0xf32c, 0xbbfb, 0x0, 0x0);
        gbc.writeMem(0x2b46, { 0x44 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x1f8c, gbc.sp());
        EXPECT(0x2b47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0016
        gbc.setState(0xaeed, 0xc024, 0xb3e0, 0x25ce, 0xb704, 0xc9c4, 0x1, 0x1);
        gbc.writeMem(0xaeed, { 0x44 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xc024, gbc.sp());
        EXPECT(0xaeee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xaeed));
        // 44 0017
        gbc.setState(0xb29f, 0x90e8, 0xd7e0, 0x4905, 0xb4ad, 0xe614, 0x1, 0x1);
        gbc.writeMem(0xb29f, { 0x44 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x90e8, gbc.sp());
        EXPECT(0xb2a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xb29f));
        // 44 0018
        gbc.setState(0xb0fe, 0xfe92, 0x5df0, 0xd9de, 0x5a43, 0xf5bb, 0x1, 0x1);
        gbc.writeMem(0xb0fe, { 0x44 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xfe92, gbc.sp());
        EXPECT(0xb0ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xb0fe));
        // 44 001A
        gbc.setState(0x5bf9, 0x752a, 0xacd0, 0x28bc, 0x892c, 0xc178, 0x1, 0x0);
        gbc.writeMem(0x5bf9, { 0x44 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x752a, gbc.sp());
        EXPECT(0x5bfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 001B
        gbc.setState(0xddc7, 0x8da, 0x89f0, 0xa712, 0xbdb6, 0xedcf, 0x1, 0x0);
        gbc.writeMem(0xddc7, { 0x44 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x8da, gbc.sp());
        EXPECT(0xddc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xddc7));
        // 44 001C
        gbc.setState(0x2005, 0xf379, 0xb930, 0xfb7, 0x1eb6, 0x681b, 0x1, 0x1);
        gbc.writeMem(0x2005, { 0x44 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xf379, gbc.sp());
        EXPECT(0x2006, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 001D
        gbc.setState(0xe350, 0xead6, 0x2700, 0xf160, 0xac99, 0x1802, 0x1, 0x0);
        gbc.writeMem(0xe350, { 0x44 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xead6, gbc.sp());
        EXPECT(0xe351, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xe350));
        // 44 001E
        gbc.setState(0x5f31, 0xc2dd, 0x2e70, 0xb11c, 0x9b37, 0x68f7, 0x0, 0x0);
        gbc.writeMem(0x5f31, { 0x44 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xc2dd, gbc.sp());
        EXPECT(0x5f32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 001F
        gbc.setState(0x532f, 0x21bf, 0xbf40, 0x41d9, 0x70d1, 0xa098, 0x1, 0x1);
        gbc.writeMem(0x532f, { 0x44 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x21bf, gbc.sp());
        EXPECT(0x5330, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0020
        gbc.setState(0xc716, 0x9be1, 0x37e0, 0xae73, 0xfe00, 0x283f, 0x1, 0x1);
        gbc.writeMem(0xc716, { 0x44 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x9be1, gbc.sp());
        EXPECT(0xc717, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xc716));
        // 44 0021
        gbc.setState(0xec13, 0xbe80, 0x320, 0xbbeb, 0xd6f9, 0x9239, 0x0, 0x1);
        gbc.writeMem(0xec13, { 0x44 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xbe80, gbc.sp());
        EXPECT(0xec14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xec13));
        // 44 0022
        gbc.setState(0x6702, 0x1702, 0xd3d0, 0xa9ff, 0xe7a8, 0x1245, 0x0, 0x1);
        gbc.writeMem(0x6702, { 0x44 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x1702, gbc.sp());
        EXPECT(0x6703, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0023
        gbc.setState(0x3453, 0x79ae, 0xbf40, 0xf471, 0x34ac, 0x2271, 0x0, 0x1);
        gbc.writeMem(0x3453, { 0x44 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x79ae, gbc.sp());
        EXPECT(0x3454, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0024
        gbc.setState(0xaa42, 0xcb5d, 0x8c0, 0x9445, 0x69f3, 0xa301, 0x1, 0x0);
        gbc.writeMem(0xaa42, { 0x44 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xcb5d, gbc.sp());
        EXPECT(0xaa43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xaa42));
        // 44 0025
        gbc.setState(0x3733, 0xce13, 0x2d30, 0xd609, 0x1a81, 0x76c, 0x0, 0x1);
        gbc.writeMem(0x3733, { 0x44 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xce13, gbc.sp());
        EXPECT(0x3734, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0026
        gbc.setState(0x9087, 0xb278, 0x61d0, 0x5caa, 0x8046, 0x645e, 0x1, 0x0);
        gbc.writeMem(0x9087, { 0x44 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xb278, gbc.sp());
        EXPECT(0x9088, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x9087));
        // 44 0027
        gbc.setState(0x91d, 0xf8aa, 0x190, 0x1eda, 0x3046, 0x9e50, 0x0, 0x1);
        gbc.writeMem(0x91d, { 0x44 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xf8aa, gbc.sp());
        EXPECT(0x91e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0028
        gbc.setState(0xd273, 0xd438, 0x6280, 0x6459, 0xd014, 0x60e8, 0x0, 0x1);
        gbc.writeMem(0xd273, { 0x44 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xd438, gbc.sp());
        EXPECT(0xd274, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xd273));
        // 44 0029
        gbc.setState(0x8fce, 0xe316, 0xa650, 0x1bdd, 0x3b9d, 0xe60d, 0x1, 0x0);
        gbc.writeMem(0x8fce, { 0x44 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xe316, gbc.sp());
        EXPECT(0x8fcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x8fce));
        // 44 002A
        gbc.setState(0xecd0, 0xe757, 0x7c10, 0x1a5b, 0xea45, 0xc788, 0x0, 0x0);
        gbc.writeMem(0xecd0, { 0x44 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe757, gbc.sp());
        EXPECT(0xecd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xecd0));
        // 44 002B
        gbc.setState(0xcf8, 0x7753, 0xdc90, 0x5d65, 0x9de8, 0x8f84, 0x1, 0x1);
        gbc.writeMem(0xcf8, { 0x44 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x7753, gbc.sp());
        EXPECT(0xcf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 002C
        gbc.setState(0xad7d, 0x4479, 0x4230, 0xc0bb, 0x40a, 0xb476, 0x0, 0x0);
        gbc.writeMem(0xad7d, { 0x44 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x4479, gbc.sp());
        EXPECT(0xad7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xad7d));
        // 44 002D
        gbc.setState(0x4d94, 0xbddb, 0x1960, 0xff8, 0x90ba, 0x8719, 0x1, 0x0);
        gbc.writeMem(0x4d94, { 0x44 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xbddb, gbc.sp());
        EXPECT(0x4d95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 002E
        gbc.setState(0xcdc, 0x689, 0x5ff0, 0x7780, 0x1f47, 0x7f47, 0x0, 0x0);
        gbc.writeMem(0xcdc, { 0x44 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x689, gbc.sp());
        EXPECT(0xcdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 002F
        gbc.setState(0x27a, 0x25f8, 0xecb0, 0xf600, 0xe458, 0x824, 0x0, 0x1);
        gbc.writeMem(0x27a, { 0x44 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x25f8, gbc.sp());
        EXPECT(0x27b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0030
        gbc.setState(0xc857, 0xe3c1, 0x8730, 0xe2ce, 0xe7a0, 0xb42c, 0x1, 0x1);
        gbc.writeMem(0xc857, { 0x44 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe3c1, gbc.sp());
        EXPECT(0xc858, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xc857));
        // 44 0031
        gbc.setState(0x3e60, 0x141d, 0x3570, 0xfa38, 0xfd1f, 0xc3bb, 0x1, 0x1);
        gbc.writeMem(0x3e60, { 0x44 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x141d, gbc.sp());
        EXPECT(0x3e61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0032
        gbc.setState(0x8368, 0x4ab0, 0x5f90, 0x387a, 0x4790, 0xdcf2, 0x1, 0x1);
        gbc.writeMem(0x8368, { 0x44 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x4ab0, gbc.sp());
        EXPECT(0x8369, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x8368));
        // 44 0033
        gbc.setState(0xbaee, 0xf5cd, 0xbfe0, 0x3c93, 0x880a, 0x2658, 0x0, 0x0);
        gbc.writeMem(0xbaee, { 0x44 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xf5cd, gbc.sp());
        EXPECT(0xbaef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xbaee));
        // 44 0034
        gbc.setState(0xdb8e, 0x6065, 0xfc10, 0xf0e8, 0x21f, 0x9d8b, 0x0, 0x0);
        gbc.writeMem(0xdb8e, { 0x44 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x6065, gbc.sp());
        EXPECT(0xdb8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xdb8e));
        // 44 0035
        gbc.setState(0x1bb3, 0xf7c, 0x7030, 0x379f, 0x9f02, 0x7aca, 0x1, 0x1);
        gbc.writeMem(0x1bb3, { 0x44 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xf7c, gbc.sp());
        EXPECT(0x1bb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0036
        gbc.setState(0x9430, 0xeb84, 0x7cb0, 0x24d3, 0x4923, 0x5f26, 0x1, 0x0);
        gbc.writeMem(0x9430, { 0x44 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xeb84, gbc.sp());
        EXPECT(0x9431, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x9430));
        // 44 0037
        gbc.setState(0x92cf, 0x293a, 0x9c50, 0x23cc, 0xd1e6, 0x1fcd, 0x0, 0x1);
        gbc.writeMem(0x92cf, { 0x44 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x293a, gbc.sp());
        EXPECT(0x92d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x92cf));
        // 44 0038
        gbc.setState(0xbab3, 0x2cda, 0x8140, 0x7fc8, 0xe11e, 0xe215, 0x0, 0x0);
        gbc.writeMem(0xbab3, { 0x44 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x2cda, gbc.sp());
        EXPECT(0xbab4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xbab3));
        // 44 0039
        gbc.setState(0x36c5, 0x484, 0x1ca0, 0x3464, 0x8e96, 0x75cc, 0x1, 0x1);
        gbc.writeMem(0x36c5, { 0x44 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x484, gbc.sp());
        EXPECT(0x36c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 003A
        gbc.setState(0x98ff, 0xa98b, 0x70, 0x70ae, 0x626e, 0x86b3, 0x1, 0x1);
        gbc.writeMem(0x98ff, { 0x44 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa98b, gbc.sp());
        EXPECT(0x9900, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x98ff));
        // 44 003B
        gbc.setState(0xc8a3, 0xd31, 0x3510, 0xc881, 0x27dc, 0x8b41, 0x0, 0x0);
        gbc.writeMem(0xc8a3, { 0x44 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xd31, gbc.sp());
        EXPECT(0xc8a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xc8a3));
        // 44 003C
        gbc.setState(0xe42f, 0x46bd, 0xcd30, 0x1862, 0xc69b, 0x96c9, 0x1, 0x1);
        gbc.writeMem(0xe42f, { 0x44 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x46bd, gbc.sp());
        EXPECT(0xe430, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xe42f));
        // 44 003D
        gbc.setState(0xdb4, 0xc755, 0xc070, 0xf98, 0x9140, 0xbb23, 0x1, 0x0);
        gbc.writeMem(0xdb4, { 0x44 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xc755, gbc.sp());
        EXPECT(0xdb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 003E
        gbc.setState(0xb2e8, 0xfe44, 0xcbe0, 0xe95e, 0xf4d8, 0xef8e, 0x0, 0x1);
        gbc.writeMem(0xb2e8, { 0x44 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xfe44, gbc.sp());
        EXPECT(0xb2e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xb2e8));
        // 44 003F
        gbc.setState(0xded1, 0x3185, 0xd130, 0xa68a, 0xe1bd, 0x9a42, 0x1, 0x0);
        gbc.writeMem(0xded1, { 0x44 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3185, gbc.sp());
        EXPECT(0xded2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xded1));
        // 44 0040
        gbc.setState(0x4201, 0xb077, 0xbda0, 0xf9e0, 0x631b, 0x8e3, 0x1, 0x0);
        gbc.writeMem(0x4201, { 0x44 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xb077, gbc.sp());
        EXPECT(0x4202, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0041
        gbc.setState(0x6cfd, 0xe4f4, 0xce60, 0x292a, 0x79c9, 0x3b90, 0x1, 0x1);
        gbc.writeMem(0x6cfd, { 0x44 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xe4f4, gbc.sp());
        EXPECT(0x6cfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0042
        gbc.setState(0xd7e0, 0x4aa3, 0xb670, 0x92e0, 0xda11, 0x52a7, 0x1, 0x0);
        gbc.writeMem(0xd7e0, { 0x44 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x4aa3, gbc.sp());
        EXPECT(0xd7e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xd7e0));
        // 44 0043
        gbc.setState(0x1d82, 0xeb95, 0xa780, 0x2773, 0x32f4, 0x4f93, 0x0, 0x0);
        gbc.writeMem(0x1d82, { 0x44 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xeb95, gbc.sp());
        EXPECT(0x1d83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0044
        gbc.setState(0xad43, 0x57b9, 0xa9f0, 0xe5c9, 0xc0b2, 0xea52, 0x1, 0x1);
        gbc.writeMem(0xad43, { 0x44 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x57b9, gbc.sp());
        EXPECT(0xad44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xad43));
        // 44 0045
        gbc.setState(0xe312, 0xdecb, 0x7110, 0xd7bd, 0x4c60, 0x47d0, 0x0, 0x0);
        gbc.writeMem(0xe312, { 0x44 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xdecb, gbc.sp());
        EXPECT(0xe313, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xe312));
        // 44 0046
        gbc.setState(0x545, 0x6c21, 0xf90, 0x8927, 0xcaa1, 0x6b05, 0x0, 0x0);
        gbc.writeMem(0x545, { 0x44 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x6c21, gbc.sp());
        EXPECT(0x546, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0048
        gbc.setState(0x6ba4, 0xa0b1, 0xdba0, 0x1920, 0xa839, 0xcc1b, 0x1, 0x1);
        gbc.writeMem(0x6ba4, { 0x44 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xa0b1, gbc.sp());
        EXPECT(0x6ba5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0049
        gbc.setState(0x42d1, 0x6843, 0x6d90, 0x6793, 0x3a5d, 0xcbbf, 0x0, 0x0);
        gbc.writeMem(0x42d1, { 0x44 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x6843, gbc.sp());
        EXPECT(0x42d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 004A
        gbc.setState(0xd607, 0x6b4b, 0xc290, 0xb96f, 0x6f6c, 0x38fa, 0x0, 0x0);
        gbc.writeMem(0xd607, { 0x44 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x6b4b, gbc.sp());
        EXPECT(0xd608, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xd607));
        // 44 004B
        gbc.setState(0x6a12, 0xadca, 0x44b0, 0xb529, 0xd44c, 0x4a63, 0x1, 0x0);
        gbc.writeMem(0x6a12, { 0x44 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xadca, gbc.sp());
        EXPECT(0x6a13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 004C
        gbc.setState(0xed7b, 0xaf46, 0x2a60, 0x5a1b, 0x53e7, 0x82c7, 0x1, 0x1);
        gbc.writeMem(0xed7b, { 0x44 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xaf46, gbc.sp());
        EXPECT(0xed7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xed7b));
        // 44 004D
        gbc.setState(0x6edf, 0xdeb3, 0xc780, 0xd41c, 0xf3ec, 0xf8d1, 0x1, 0x0);
        gbc.writeMem(0x6edf, { 0x44 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xdeb3, gbc.sp());
        EXPECT(0x6ee0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 004E
        gbc.setState(0x6682, 0x927d, 0xdc30, 0x36ca, 0x7662, 0x74ed, 0x0, 0x1);
        gbc.writeMem(0x6682, { 0x44 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x927d, gbc.sp());
        EXPECT(0x6683, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 004F
        gbc.setState(0x8f85, 0x136c, 0xea0, 0x7a25, 0x21be, 0xa1f3, 0x0, 0x0);
        gbc.writeMem(0x8f85, { 0x44 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x136c, gbc.sp());
        EXPECT(0x8f86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x8f85));
        // 44 0050
        gbc.setState(0xd3d5, 0xeaa7, 0xe3e0, 0xa3a, 0xa272, 0x2ed5, 0x0, 0x0);
        gbc.writeMem(0xd3d5, { 0x44 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xeaa7, gbc.sp());
        EXPECT(0xd3d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xd3d5));
        // 44 0051
        gbc.setState(0x248a, 0x5d4a, 0xb410, 0x1013, 0x1544, 0xbef5, 0x0, 0x1);
        gbc.writeMem(0x248a, { 0x44 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5d4a, gbc.sp());
        EXPECT(0x248b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0052
        gbc.setState(0x8ae3, 0x18bd, 0x9fc0, 0x688f, 0xd335, 0x2a31, 0x0, 0x1);
        gbc.writeMem(0x8ae3, { 0x44 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x18bd, gbc.sp());
        EXPECT(0x8ae4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x8ae3));
        // 44 0053
        gbc.setState(0xacba, 0x616a, 0x2610, 0x74bd, 0x1f1, 0x3abf, 0x0, 0x0);
        gbc.writeMem(0xacba, { 0x44 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x616a, gbc.sp());
        EXPECT(0xacbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xacba));
        // 44 0054
        gbc.setState(0x9d5e, 0xff3f, 0xf8c0, 0x329, 0x2d65, 0x38ea, 0x0, 0x0);
        gbc.writeMem(0x9d5e, { 0x44 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xff3f, gbc.sp());
        EXPECT(0x9d5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x9d5e));
        // 44 0056
        gbc.setState(0x3741, 0x4705, 0x29f0, 0x3c74, 0x4fc7, 0x7f7b, 0x1, 0x0);
        gbc.writeMem(0x3741, { 0x44 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x4705, gbc.sp());
        EXPECT(0x3742, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0057
        gbc.setState(0x964a, 0x4f14, 0x20e0, 0x5376, 0x7813, 0x1809, 0x1, 0x1);
        gbc.writeMem(0x964a, { 0x44 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x4f14, gbc.sp());
        EXPECT(0x964b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x964a));
        // 44 0058
        gbc.setState(0xa940, 0x80cf, 0x4700, 0xd65b, 0xfcaf, 0x3c45, 0x1, 0x0);
        gbc.writeMem(0xa940, { 0x44 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x80cf, gbc.sp());
        EXPECT(0xa941, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa940));
        // 44 0059
        gbc.setState(0x3de8, 0x877c, 0x2920, 0xd281, 0x309f, 0x6fa1, 0x1, 0x1);
        gbc.writeMem(0x3de8, { 0x44 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x877c, gbc.sp());
        EXPECT(0x3de9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 005A
        gbc.setState(0xebcd, 0x4379, 0x8c90, 0xa04, 0x7674, 0x4a6, 0x0, 0x1);
        gbc.writeMem(0xebcd, { 0x44 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4379, gbc.sp());
        EXPECT(0xebce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xebcd));
        // 44 005B
        gbc.setState(0x90f1, 0x7656, 0x590, 0x4c01, 0xc7d0, 0xd875, 0x0, 0x0);
        gbc.writeMem(0x90f1, { 0x44 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x7656, gbc.sp());
        EXPECT(0x90f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x90f1));
        // 44 005C
        gbc.setState(0xd73d, 0xf5c4, 0xf130, 0x5130, 0x5aa7, 0xe32c, 0x0, 0x0);
        gbc.writeMem(0xd73d, { 0x44 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xf5c4, gbc.sp());
        EXPECT(0xd73e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xd73d));
        // 44 005D
        gbc.setState(0x2bf6, 0x8604, 0xf6a0, 0x6c80, 0x58a8, 0x3677, 0x1, 0x1);
        gbc.writeMem(0x2bf6, { 0x44 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x8604, gbc.sp());
        EXPECT(0x2bf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 005E
        gbc.setState(0x5bb9, 0x27ab, 0x6a40, 0x6463, 0xc3a5, 0x5b83, 0x0, 0x0);
        gbc.writeMem(0x5bb9, { 0x44 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x27ab, gbc.sp());
        EXPECT(0x5bba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 005F
        gbc.setState(0x9a32, 0x6a01, 0x9da0, 0x4668, 0xba2, 0xee4f, 0x0, 0x1);
        gbc.writeMem(0x9a32, { 0x44 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x6a01, gbc.sp());
        EXPECT(0x9a33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x9a32));
        // 44 0060
        gbc.setState(0x4231, 0xc6d2, 0xc5b0, 0xdc32, 0x9bca, 0x82de, 0x1, 0x1);
        gbc.writeMem(0x4231, { 0x44 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc6d2, gbc.sp());
        EXPECT(0x4232, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0062
        gbc.setState(0x28e9, 0x41c4, 0xcfc0, 0x9dcd, 0x5ae6, 0x9b37, 0x0, 0x1);
        gbc.writeMem(0x28e9, { 0x44 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x41c4, gbc.sp());
        EXPECT(0x28ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0063
        gbc.setState(0x239, 0x33f2, 0x390, 0xad6d, 0x680d, 0xdb9f, 0x0, 0x0);
        gbc.writeMem(0x239, { 0x44 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x33f2, gbc.sp());
        EXPECT(0x23a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0064
        gbc.setState(0x9b56, 0x5e04, 0x56f0, 0xefd1, 0x48, 0x4959, 0x0, 0x0);
        gbc.writeMem(0x9b56, { 0x44 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x5e04, gbc.sp());
        EXPECT(0x9b57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x9b56));
        // 44 0065
        gbc.setState(0x8bda, 0xc579, 0x6f10, 0xa8ae, 0xd676, 0x846f, 0x0, 0x1);
        gbc.writeMem(0x8bda, { 0x44 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xc579, gbc.sp());
        EXPECT(0x8bdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x8bda));
        // 44 0066
        gbc.setState(0x42ac, 0xcd, 0x3d30, 0x2640, 0xf01f, 0x3046, 0x0, 0x1);
        gbc.writeMem(0x42ac, { 0x44 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xcd, gbc.sp());
        EXPECT(0x42ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0067
        gbc.setState(0xc7fc, 0x20dc, 0x5eb0, 0xccea, 0xb100, 0x7078, 0x0, 0x0);
        gbc.writeMem(0xc7fc, { 0x44 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x20dc, gbc.sp());
        EXPECT(0xc7fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xc7fc));
        // 44 0068
        gbc.setState(0xc7ee, 0x6012, 0x1b20, 0x2d19, 0x16ca, 0x1f2c, 0x0, 0x1);
        gbc.writeMem(0xc7ee, { 0x44 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x6012, gbc.sp());
        EXPECT(0xc7ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xc7ee));
        // 44 0069
        gbc.setState(0x25a9, 0xe316, 0x9fd0, 0x4d0b, 0xc8a5, 0x7be0, 0x1, 0x0);
        gbc.writeMem(0x25a9, { 0x44 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xe316, gbc.sp());
        EXPECT(0x25aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 006A
        gbc.setState(0x29f4, 0x3553, 0xe40, 0x5b42, 0xc776, 0x8a96, 0x0, 0x1);
        gbc.writeMem(0x29f4, { 0x44 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3553, gbc.sp());
        EXPECT(0x29f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 006B
        gbc.setState(0x78d1, 0x515a, 0x36a0, 0x3c70, 0x3250, 0x3e52, 0x1, 0x1);
        gbc.writeMem(0x78d1, { 0x44 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x515a, gbc.sp());
        EXPECT(0x78d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 006C
        gbc.setState(0x9d8d, 0xc83f, 0x9a50, 0x4b78, 0x1fd1, 0x4e5c, 0x1, 0x0);
        gbc.writeMem(0x9d8d, { 0x44 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xc83f, gbc.sp());
        EXPECT(0x9d8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x9d8d));
        // 44 006D
        gbc.setState(0x43b0, 0xb43c, 0xa610, 0xba14, 0x7f21, 0x91e6, 0x1, 0x1);
        gbc.writeMem(0x43b0, { 0x44 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb43c, gbc.sp());
        EXPECT(0x43b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 006E
        gbc.setState(0xdc86, 0x9ebf, 0x4c50, 0x4b68, 0x611e, 0x51c8, 0x1, 0x0);
        gbc.writeMem(0xdc86, { 0x44 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9ebf, gbc.sp());
        EXPECT(0xdc87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xdc86));
        // 44 006F
        gbc.setState(0x4559, 0x3638, 0x1d00, 0x4620, 0x26d6, 0x7bc6, 0x1, 0x0);
        gbc.writeMem(0x4559, { 0x44 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x3638, gbc.sp());
        EXPECT(0x455a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0070
        gbc.setState(0x9e0f, 0x3837, 0xdb40, 0x5005, 0x970a, 0x9ea, 0x0, 0x0);
        gbc.writeMem(0x9e0f, { 0x44 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x3837, gbc.sp());
        EXPECT(0x9e10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x9e0f));
        // 44 0071
        gbc.setState(0x3381, 0xf73d, 0xb0c0, 0x5531, 0x9c57, 0xf8bf, 0x0, 0x1);
        gbc.writeMem(0x3381, { 0x44 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xf73d, gbc.sp());
        EXPECT(0x3382, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0072
        gbc.setState(0xe8f1, 0xa627, 0x1e80, 0x6105, 0xa5e4, 0x67db, 0x1, 0x0);
        gbc.writeMem(0xe8f1, { 0x44 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xa627, gbc.sp());
        EXPECT(0xe8f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xe8f1));
        // 44 0073
        gbc.setState(0xaa92, 0x1137, 0xbc90, 0x64bd, 0x88c7, 0x715d, 0x1, 0x1);
        gbc.writeMem(0xaa92, { 0x44 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x1137, gbc.sp());
        EXPECT(0xaa93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xaa92));
        // 44 0074
        gbc.setState(0xa9d1, 0x3388, 0x12e0, 0x2b6f, 0x5c, 0xbaa3, 0x1, 0x1);
        gbc.writeMem(0xa9d1, { 0x44 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3388, gbc.sp());
        EXPECT(0xa9d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa9d1));
        // 44 0075
        gbc.setState(0x61f, 0x7b0a, 0x15e0, 0xa7db, 0xa0ec, 0xc0b0, 0x1, 0x0);
        gbc.writeMem(0x61f, { 0x44 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7b0a, gbc.sp());
        EXPECT(0x620, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0077
        gbc.setState(0xeafd, 0xa9d9, 0x6d40, 0x52f5, 0xb6e6, 0x6b92, 0x0, 0x0);
        gbc.writeMem(0xeafd, { 0x44 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xa9d9, gbc.sp());
        EXPECT(0xeafe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xeafd));
        // 44 0078
        gbc.setState(0x10ef, 0x7435, 0xdd0, 0xab64, 0x5743, 0xfd8c, 0x1, 0x1);
        gbc.writeMem(0x10ef, { 0x44 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7435, gbc.sp());
        EXPECT(0x10f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0079
        gbc.setState(0x6fcf, 0x22b1, 0x7c90, 0x909, 0xe459, 0xc94, 0x0, 0x0);
        gbc.writeMem(0x6fcf, { 0x44 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x22b1, gbc.sp());
        EXPECT(0x6fd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 007A
        gbc.setState(0x5cac, 0xdb1f, 0xee90, 0x32f7, 0x7080, 0x698c, 0x0, 0x0);
        gbc.writeMem(0x5cac, { 0x44 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xdb1f, gbc.sp());
        EXPECT(0x5cad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 007B
        gbc.setState(0x65f9, 0x158b, 0x480, 0xa6f8, 0x1929, 0xe2a3, 0x1, 0x1);
        gbc.writeMem(0x65f9, { 0x44 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x158b, gbc.sp());
        EXPECT(0x65fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 007C
        gbc.setState(0x9764, 0x2ed5, 0x2c00, 0x3883, 0xd923, 0x4c0d, 0x1, 0x1);
        gbc.writeMem(0x9764, { 0x44 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2ed5, gbc.sp());
        EXPECT(0x9765, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x9764));
        // 44 007D
        gbc.setState(0x7b13, 0x537e, 0xa4c0, 0x919, 0x6625, 0xc658, 0x1, 0x0);
        gbc.writeMem(0x7b13, { 0x44 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x537e, gbc.sp());
        EXPECT(0x7b14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 007E
        gbc.setState(0xbfea, 0x8480, 0x5ca0, 0xbef1, 0x8422, 0x2781, 0x1, 0x1);
        gbc.writeMem(0xbfea, { 0x44 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x8480, gbc.sp());
        EXPECT(0xbfeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xbfea));
        // 44 007F
        gbc.setState(0x9eb0, 0x690c, 0x9140, 0xcfeb, 0x87ae, 0x69af, 0x1, 0x0);
        gbc.writeMem(0x9eb0, { 0x44 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x690c, gbc.sp());
        EXPECT(0x9eb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x9eb0));
        // 44 0080
        gbc.setState(0x22bd, 0xde2a, 0xf830, 0x1a3c, 0xb8ab, 0xccd7, 0x1, 0x1);
        gbc.writeMem(0x22bd, { 0x44 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xde2a, gbc.sp());
        EXPECT(0x22be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0081
        gbc.setState(0xc1bd, 0x770f, 0x7650, 0x1dbc, 0x26bb, 0x97b6, 0x1, 0x1);
        gbc.writeMem(0xc1bd, { 0x44 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x770f, gbc.sp());
        EXPECT(0xc1be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xc1bd));
        // 44 0082
        gbc.setState(0x959c, 0x54d0, 0xa6a0, 0xfa5f, 0x19f0, 0xb8b3, 0x1, 0x0);
        gbc.writeMem(0x959c, { 0x44 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x54d0, gbc.sp());
        EXPECT(0x959d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x959c));
        // 44 0083
        gbc.setState(0x6c69, 0x3dee, 0x8900, 0x194c, 0xfd1b, 0x485a, 0x0, 0x1);
        gbc.writeMem(0x6c69, { 0x44 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3dee, gbc.sp());
        EXPECT(0x6c6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0084
        gbc.setState(0x521c, 0x3c9c, 0x8fe0, 0x9622, 0x7b5e, 0x1346, 0x0, 0x1);
        gbc.writeMem(0x521c, { 0x44 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x3c9c, gbc.sp());
        EXPECT(0x521d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0085
        gbc.setState(0x1c13, 0xb0e9, 0x8da0, 0x297d, 0x3edc, 0xc4cf, 0x0, 0x1);
        gbc.writeMem(0x1c13, { 0x44 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb0e9, gbc.sp());
        EXPECT(0x1c14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0086
        gbc.setState(0xec2c, 0xecd1, 0x8060, 0xd2ff, 0x4289, 0x67c2, 0x1, 0x1);
        gbc.writeMem(0xec2c, { 0x44 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xecd1, gbc.sp());
        EXPECT(0xec2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xec2c));
        // 44 0087
        gbc.setState(0xc944, 0x91f5, 0xfdc0, 0x9068, 0x3c60, 0x5a97, 0x1, 0x0);
        gbc.writeMem(0xc944, { 0x44 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x91f5, gbc.sp());
        EXPECT(0xc945, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xc944));
        // 44 0088
        gbc.setState(0xb431, 0xba0b, 0xabe0, 0xdbc6, 0xad5d, 0xc5f1, 0x0, 0x0);
        gbc.writeMem(0xb431, { 0x44 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xba0b, gbc.sp());
        EXPECT(0xb432, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xb431));
        // 44 0089
        gbc.setState(0xa27c, 0xf5e5, 0xb4b0, 0xbdda, 0xf94, 0x3838, 0x1, 0x0);
        gbc.writeMem(0xa27c, { 0x44 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xf5e5, gbc.sp());
        EXPECT(0xa27d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa27c));
        // 44 008A
        gbc.setState(0x3775, 0xe151, 0xce00, 0x32b5, 0x31de, 0x9b62, 0x1, 0x1);
        gbc.writeMem(0x3775, { 0x44 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xe151, gbc.sp());
        EXPECT(0x3776, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 008B
        gbc.setState(0x84c3, 0x189c, 0xc450, 0x3acc, 0xa65d, 0x156b, 0x0, 0x1);
        gbc.writeMem(0x84c3, { 0x44 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x189c, gbc.sp());
        EXPECT(0x84c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x84c3));
        // 44 008C
        gbc.setState(0x9d, 0x71af, 0xcbe0, 0x94d, 0xbfd5, 0x3d5b, 0x1, 0x0);
        gbc.writeMem(0x9d, { 0x44 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x71af, gbc.sp());
        EXPECT(0x9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 008D
        gbc.setState(0x1b03, 0xbbea, 0x74d0, 0x627b, 0x79be, 0x436f, 0x0, 0x1);
        gbc.writeMem(0x1b03, { 0x44 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xbbea, gbc.sp());
        EXPECT(0x1b04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 008E
        gbc.setState(0x98b7, 0x9e11, 0x54e0, 0x2285, 0xcce9, 0x2d21, 0x1, 0x1);
        gbc.writeMem(0x98b7, { 0x44 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x9e11, gbc.sp());
        EXPECT(0x98b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x98b7));
        // 44 008F
        gbc.setState(0xe765, 0x3dd9, 0xc250, 0x34ca, 0x2654, 0x6b42, 0x1, 0x0);
        gbc.writeMem(0xe765, { 0x44 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3dd9, gbc.sp());
        EXPECT(0xe766, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xe765));
        // 44 0090
        gbc.setState(0x215, 0x503, 0x360, 0x8b26, 0xc538, 0x95ea, 0x0, 0x1);
        gbc.writeMem(0x215, { 0x44 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x503, gbc.sp());
        EXPECT(0x216, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0092
        gbc.setState(0x2893, 0xb954, 0xcc20, 0xa10f, 0x44b, 0x8f92, 0x0, 0x1);
        gbc.writeMem(0x2893, { 0x44 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xb954, gbc.sp());
        EXPECT(0x2894, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0093
        gbc.setState(0x3ee3, 0x4dbe, 0x9440, 0x214, 0x3c7, 0x19ba, 0x1, 0x0);
        gbc.writeMem(0x3ee3, { 0x44 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x4dbe, gbc.sp());
        EXPECT(0x3ee4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0094
        gbc.setState(0xac3b, 0xaeaf, 0x6710, 0xa885, 0x6f31, 0x4deb, 0x1, 0x0);
        gbc.writeMem(0xac3b, { 0x44 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xaeaf, gbc.sp());
        EXPECT(0xac3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xac3b));
        // 44 0095
        gbc.setState(0x56f6, 0x98fd, 0x8270, 0xfe89, 0x6b37, 0xbcce, 0x0, 0x1);
        gbc.writeMem(0x56f6, { 0x44 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x98fd, gbc.sp());
        EXPECT(0x56f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0096
        gbc.setState(0x6326, 0xfbaf, 0x6700, 0x1d5b, 0x35b0, 0x155b, 0x1, 0x1);
        gbc.writeMem(0x6326, { 0x44 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xfbaf, gbc.sp());
        EXPECT(0x6327, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0097
        gbc.setState(0xc48d, 0x2e99, 0x3e70, 0xe584, 0xfc41, 0x7e2d, 0x0, 0x0);
        gbc.writeMem(0xc48d, { 0x44 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x2e99, gbc.sp());
        EXPECT(0xc48e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xc48d));
        // 44 0098
        gbc.setState(0x41b0, 0xee4c, 0xac20, 0xfe33, 0xc8c3, 0x52aa, 0x0, 0x0);
        gbc.writeMem(0x41b0, { 0x44 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xee4c, gbc.sp());
        EXPECT(0x41b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0099
        gbc.setState(0x984c, 0x830, 0xa9a0, 0x9c2f, 0xa11a, 0x293d, 0x1, 0x0);
        gbc.writeMem(0x984c, { 0x44 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x830, gbc.sp());
        EXPECT(0x984d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x984c));
        // 44 009A
        gbc.setState(0x86db, 0xc6d7, 0x9420, 0xd966, 0x4eed, 0x4e5f, 0x1, 0x1);
        gbc.writeMem(0x86db, { 0x44 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xc6d7, gbc.sp());
        EXPECT(0x86dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x86db));
        // 44 009B
        gbc.setState(0x5d9a, 0x1a17, 0x2ac0, 0xfba5, 0x8aa3, 0x5ba0, 0x0, 0x0);
        gbc.writeMem(0x5d9a, { 0x44 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x1a17, gbc.sp());
        EXPECT(0x5d9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 009C
        gbc.setState(0x3f4, 0x7410, 0x7a30, 0xe3db, 0x832f, 0x2fe5, 0x1, 0x0);
        gbc.writeMem(0x3f4, { 0x44 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x7410, gbc.sp());
        EXPECT(0x3f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 009E
        gbc.setState(0x9455, 0xa97c, 0xa0c0, 0xb5a0, 0xc18b, 0xe499, 0x0, 0x0);
        gbc.writeMem(0x9455, { 0x44 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xa97c, gbc.sp());
        EXPECT(0x9456, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x9455));
        // 44 009F
        gbc.setState(0x89d5, 0x3cc7, 0x2ad0, 0x31c4, 0xdc32, 0x4ab, 0x1, 0x0);
        gbc.writeMem(0x89d5, { 0x44 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x3cc7, gbc.sp());
        EXPECT(0x89d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x89d5));
        // 44 00A1
        gbc.setState(0x65da, 0x6c18, 0x5ff0, 0x6cdb, 0x9457, 0x67d3, 0x0, 0x0);
        gbc.writeMem(0x65da, { 0x44 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x6c18, gbc.sp());
        EXPECT(0x65db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 00A2
        gbc.setState(0x6b00, 0xd090, 0xa160, 0x4862, 0xcabe, 0x3afd, 0x0, 0x1);
        gbc.writeMem(0x6b00, { 0x44 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd090, gbc.sp());
        EXPECT(0x6b01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 00A3
        gbc.setState(0xabf0, 0xd412, 0x2b70, 0x42ec, 0x6b78, 0x4961, 0x0, 0x0);
        gbc.writeMem(0xabf0, { 0x44 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd412, gbc.sp());
        EXPECT(0xabf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xabf0));
        // 44 00A4
        gbc.setState(0x7739, 0x377c, 0x8a60, 0xbfef, 0x78a, 0x3e6b, 0x0, 0x1);
        gbc.writeMem(0x7739, { 0x44 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x377c, gbc.sp());
        EXPECT(0x773a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 00A5
        gbc.setState(0xe040, 0x1d46, 0xcb40, 0x1aeb, 0x8552, 0x561, 0x0, 0x1);
        gbc.writeMem(0xe040, { 0x44 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x1d46, gbc.sp());
        EXPECT(0xe041, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xe040));
        // 44 00A6
        gbc.setState(0xa464, 0x17a3, 0xdac0, 0xc46e, 0xc6eb, 0x9b23, 0x1, 0x1);
        gbc.writeMem(0xa464, { 0x44 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x17a3, gbc.sp());
        EXPECT(0xa465, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa464));
        // 44 00A7
        gbc.setState(0x1657, 0xeb7c, 0xe4e0, 0x1b4e, 0x8cf9, 0xf5de, 0x0, 0x0);
        gbc.writeMem(0x1657, { 0x44 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xeb7c, gbc.sp());
        EXPECT(0x1658, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 00A8
        gbc.setState(0x6e32, 0xa554, 0x7260, 0xcc45, 0x47ac, 0x3d99, 0x0, 0x1);
        gbc.writeMem(0x6e32, { 0x44 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xa554, gbc.sp());
        EXPECT(0x6e33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 00A9
        gbc.setState(0x2b30, 0x2274, 0x9480, 0xf1f3, 0x26e, 0xb223, 0x1, 0x0);
        gbc.writeMem(0x2b30, { 0x44 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x2274, gbc.sp());
        EXPECT(0x2b31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 00AA
        gbc.setState(0x4059, 0xb67b, 0xadf0, 0xa598, 0xf211, 0x37c, 0x0, 0x0);
        gbc.writeMem(0x4059, { 0x44 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb67b, gbc.sp());
        EXPECT(0x405a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 00AB
        gbc.setState(0x6d51, 0xb96a, 0x4970, 0x758e, 0x648b, 0xb3aa, 0x1, 0x1);
        gbc.writeMem(0x6d51, { 0x44 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb96a, gbc.sp());
        EXPECT(0x6d52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 00AC
        gbc.setState(0x9faa, 0xc898, 0x97d0, 0x16e8, 0xf476, 0x66c5, 0x0, 0x1);
        gbc.writeMem(0x9faa, { 0x44 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc898, gbc.sp());
        EXPECT(0x9fab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x9faa));
        // 44 00AD
        gbc.setState(0x1dab, 0x4354, 0x9540, 0x5434, 0x528f, 0x4c1b, 0x1, 0x0);
        gbc.writeMem(0x1dab, { 0x44 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x4354, gbc.sp());
        EXPECT(0x1dac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 00AE
        gbc.setState(0xe208, 0xf3d5, 0x32b0, 0x3763, 0xe26f, 0x1170, 0x0, 0x0);
        gbc.writeMem(0xe208, { 0x44 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xf3d5, gbc.sp());
        EXPECT(0xe209, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xe208));
        // 44 00AF
        gbc.setState(0x5ff6, 0xd119, 0xda40, 0xe9a5, 0xdc32, 0x55c7, 0x1, 0x1);
        gbc.writeMem(0x5ff6, { 0x44 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd119, gbc.sp());
        EXPECT(0x5ff7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 00B0
        gbc.setState(0x31ce, 0x85be, 0x46b0, 0x7af4, 0x162d, 0x3793, 0x0, 0x1);
        gbc.writeMem(0x31ce, { 0x44 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x85be, gbc.sp());
        EXPECT(0x31cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 00B1
        gbc.setState(0x3d92, 0xf951, 0xc20, 0xd047, 0x9012, 0xfd3f, 0x0, 0x0);
        gbc.writeMem(0x3d92, { 0x44 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xf951, gbc.sp());
        EXPECT(0x3d93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 00B2
        gbc.setState(0x34b7, 0x40b, 0x3a80, 0xc8d6, 0x547e, 0x5fb7, 0x1, 0x1);
        gbc.writeMem(0x34b7, { 0x44 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x40b, gbc.sp());
        EXPECT(0x34b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 00B3
        gbc.setState(0x3efb, 0x5cdb, 0x28d0, 0x2f9e, 0x70bc, 0xfd28, 0x1, 0x0);
        gbc.writeMem(0x3efb, { 0x44 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x5cdb, gbc.sp());
        EXPECT(0x3efc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 00B4
        gbc.setState(0xbefe, 0x200a, 0x3840, 0x2274, 0xdff4, 0x388e, 0x1, 0x0);
        gbc.writeMem(0xbefe, { 0x44 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x200a, gbc.sp());
        EXPECT(0xbeff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xbefe));
        // 44 00B5
        gbc.setState(0x82dc, 0x2684, 0x40a0, 0xb4ca, 0x46f, 0x47bb, 0x0, 0x0);
        gbc.writeMem(0x82dc, { 0x44 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2684, gbc.sp());
        EXPECT(0x82dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x82dc));
        // 44 00B6
        gbc.setState(0x7b60, 0x39b5, 0x3ab0, 0xcd26, 0x4072, 0xdee6, 0x0, 0x1);
        gbc.writeMem(0x7b60, { 0x44 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x39b5, gbc.sp());
        EXPECT(0x7b61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 00B7
        gbc.setState(0xd20f, 0x7d8a, 0x660, 0x53fb, 0xf639, 0x2aa2, 0x0, 0x1);
        gbc.writeMem(0xd20f, { 0x44 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x7d8a, gbc.sp());
        EXPECT(0xd210, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xd20f));
        // 44 00B8
        gbc.setState(0xb240, 0x93f1, 0x10f0, 0xafb2, 0xb70e, 0x948e, 0x1, 0x0);
        gbc.writeMem(0xb240, { 0x44 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x93f1, gbc.sp());
        EXPECT(0xb241, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xb240));
        // 44 00B9
        gbc.setState(0x90ce, 0x8f6a, 0x1da0, 0x59a9, 0xfe42, 0xf00e, 0x0, 0x0);
        gbc.writeMem(0x90ce, { 0x44 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x8f6a, gbc.sp());
        EXPECT(0x90cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x90ce));
        // 44 00BA
        gbc.setState(0x4460, 0x59e9, 0xe690, 0x2413, 0x39e9, 0xb91, 0x0, 0x0);
        gbc.writeMem(0x4460, { 0x44 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x59e9, gbc.sp());
        EXPECT(0x4461, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 00BB
        gbc.setState(0x67dc, 0x9623, 0x84e0, 0xdb2e, 0x22da, 0xd1ca, 0x1, 0x1);
        gbc.writeMem(0x67dc, { 0x44 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x9623, gbc.sp());
        EXPECT(0x67dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 00BC
        gbc.setState(0x2648, 0x1c8a, 0xc350, 0x2390, 0xd05a, 0x24db, 0x1, 0x0);
        gbc.writeMem(0x2648, { 0x44 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x1c8a, gbc.sp());
        EXPECT(0x2649, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 00BD
        gbc.setState(0x1a4b, 0x97e6, 0x7d40, 0x6eb1, 0xba9a, 0xe9cc, 0x1, 0x1);
        gbc.writeMem(0x1a4b, { 0x44 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x97e6, gbc.sp());
        EXPECT(0x1a4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 00BE
        gbc.setState(0xa078, 0xc57, 0x5370, 0xaf94, 0x8f84, 0xfceb, 0x0, 0x1);
        gbc.writeMem(0xa078, { 0x44 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xc57, gbc.sp());
        EXPECT(0xa079, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa078));
        // 44 00BF
        gbc.setState(0xb029, 0x6d78, 0x8da0, 0xe263, 0xbcb2, 0x6229, 0x1, 0x0);
        gbc.writeMem(0xb029, { 0x44 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x6d78, gbc.sp());
        EXPECT(0xb02a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xb029));
        // 44 00C0
        gbc.setState(0x315e, 0x491e, 0x9270, 0xac55, 0x84ef, 0xa691, 0x0, 0x1);
        gbc.writeMem(0x315e, { 0x44 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x491e, gbc.sp());
        EXPECT(0x315f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 00C1
        gbc.setState(0x3d1b, 0x39d9, 0xffd0, 0x7d01, 0x4416, 0xbf18, 0x1, 0x1);
        gbc.writeMem(0x3d1b, { 0x44 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x39d9, gbc.sp());
        EXPECT(0x3d1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 00C3
        gbc.setState(0xe51e, 0x9ee9, 0x5c30, 0xbfa1, 0x409d, 0xefed, 0x1, 0x0);
        gbc.writeMem(0xe51e, { 0x44 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9ee9, gbc.sp());
        EXPECT(0xe51f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xe51e));
        // 44 00C4
        gbc.setState(0x53a5, 0xc73, 0xc420, 0x91b3, 0xd4e6, 0x97bb, 0x1, 0x1);
        gbc.writeMem(0x53a5, { 0x44 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xc73, gbc.sp());
        EXPECT(0x53a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 00C5
        gbc.setState(0xa150, 0x77b1, 0xed90, 0x2e1f, 0x833d, 0x848b, 0x0, 0x1);
        gbc.writeMem(0xa150, { 0x44 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x77b1, gbc.sp());
        EXPECT(0xa151, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa150));
        // 44 00C6
        gbc.setState(0xb36f, 0x909b, 0x24a0, 0x2934, 0x879f, 0x6968, 0x0, 0x1);
        gbc.writeMem(0xb36f, { 0x44 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x909b, gbc.sp());
        EXPECT(0xb370, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xb36f));
        // 44 00C7
        gbc.setState(0x9aab, 0x9cf8, 0xa3e0, 0x9e2e, 0x4058, 0x3967, 0x1, 0x0);
        gbc.writeMem(0x9aab, { 0x44 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x9cf8, gbc.sp());
        EXPECT(0x9aac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x9aab));
        // 44 00C8
        gbc.setState(0x6a0b, 0xe831, 0xe0c0, 0x14b9, 0x309a, 0xbe17, 0x1, 0x0);
        gbc.writeMem(0x6a0b, { 0x44 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xe831, gbc.sp());
        EXPECT(0x6a0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 00CA
        gbc.setState(0xe20c, 0xe572, 0x210, 0x8164, 0x955a, 0x9560, 0x0, 0x0);
        gbc.writeMem(0xe20c, { 0x44 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xe572, gbc.sp());
        EXPECT(0xe20d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xe20c));
        // 44 00CB
        gbc.setState(0x835, 0x21e4, 0x9380, 0xab08, 0x3ac4, 0x3dd, 0x0, 0x0);
        gbc.writeMem(0x835, { 0x44 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x21e4, gbc.sp());
        EXPECT(0x836, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 00CC
        gbc.setState(0xa5d9, 0x1b7f, 0xcae0, 0x65f3, 0xf8a, 0x17e5, 0x1, 0x1);
        gbc.writeMem(0xa5d9, { 0x44 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x1b7f, gbc.sp());
        EXPECT(0xa5da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa5d9));
        // 44 00CD
        gbc.setState(0x621c, 0xe998, 0x5110, 0x2d00, 0x97d2, 0xf385, 0x0, 0x1);
        gbc.writeMem(0x621c, { 0x44 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xe998, gbc.sp());
        EXPECT(0x621d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 00CF
        gbc.setState(0xc6c2, 0x724c, 0xbf60, 0x1c0f, 0xd74c, 0xfbb1, 0x1, 0x0);
        gbc.writeMem(0xc6c2, { 0x44 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x724c, gbc.sp());
        EXPECT(0xc6c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xc6c2));
        // 44 00D0
        gbc.setState(0xea15, 0xc7f0, 0x660, 0x7f71, 0x717f, 0xaaf4, 0x1, 0x1);
        gbc.writeMem(0xea15, { 0x44 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc7f0, gbc.sp());
        EXPECT(0xea16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xea15));
        // 44 00D1
        gbc.setState(0xac9d, 0x8a1c, 0x5760, 0xdf76, 0x1b62, 0x9d94, 0x1, 0x0);
        gbc.writeMem(0xac9d, { 0x44 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x8a1c, gbc.sp());
        EXPECT(0xac9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xac9d));
        // 44 00D2
        gbc.setState(0x83e7, 0xb956, 0xcf50, 0x4e56, 0xe662, 0xa8c6, 0x1, 0x1);
        gbc.writeMem(0x83e7, { 0x44 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb956, gbc.sp());
        EXPECT(0x83e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x83e7));
        // 44 00D4
        gbc.setState(0x6c02, 0x79ad, 0x8ff0, 0x584c, 0xf506, 0x6114, 0x1, 0x0);
        gbc.writeMem(0x6c02, { 0x44 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x79ad, gbc.sp());
        EXPECT(0x6c03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 00D5
        gbc.setState(0xa526, 0x4661, 0x130, 0x1622, 0xc444, 0xc1fd, 0x0, 0x1);
        gbc.writeMem(0xa526, { 0x44 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x4661, gbc.sp());
        EXPECT(0xa527, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa526));
        // 44 00D6
        gbc.setState(0xedd0, 0x2430, 0x8ab0, 0x2cd6, 0xdca2, 0xeb3f, 0x0, 0x0);
        gbc.writeMem(0xedd0, { 0x44 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x2430, gbc.sp());
        EXPECT(0xedd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xedd0));
        // 44 00D7
        gbc.setState(0x1cae, 0x922d, 0x4e70, 0xd9a5, 0x8a1b, 0xfd28, 0x1, 0x0);
        gbc.writeMem(0x1cae, { 0x44 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x922d, gbc.sp());
        EXPECT(0x1caf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 00D8
        gbc.setState(0x2dc6, 0xff84, 0x6230, 0x8501, 0x5593, 0x3448, 0x1, 0x0);
        gbc.writeMem(0x2dc6, { 0x44 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xff84, gbc.sp());
        EXPECT(0x2dc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 00D9
        gbc.setState(0xc854, 0xc486, 0x42a0, 0x6993, 0xfe8f, 0xb2bb, 0x1, 0x0);
        gbc.writeMem(0xc854, { 0x44 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xc486, gbc.sp());
        EXPECT(0xc855, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xc854));
        // 44 00DA
        gbc.setState(0x801c, 0x4fac, 0xf40, 0x57e6, 0xc7b9, 0x4729, 0x0, 0x1);
        gbc.writeMem(0x801c, { 0x44 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x4fac, gbc.sp());
        EXPECT(0x801d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x801c));
        // 44 00DB
        gbc.setState(0x7c99, 0x6835, 0x3bd0, 0xdd3b, 0xd502, 0x1ce2, 0x0, 0x0);
        gbc.writeMem(0x7c99, { 0x44 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x6835, gbc.sp());
        EXPECT(0x7c9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 00DC
        gbc.setState(0xec5c, 0x915e, 0x3b60, 0x3e3c, 0xa480, 0x340f, 0x0, 0x0);
        gbc.writeMem(0xec5c, { 0x44 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x915e, gbc.sp());
        EXPECT(0xec5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xec5c));
        // 44 00DD
        gbc.setState(0x11bc, 0x7fbc, 0x4950, 0x4741, 0xe011, 0xbe58, 0x1, 0x1);
        gbc.writeMem(0x11bc, { 0x44 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x7fbc, gbc.sp());
        EXPECT(0x11bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 00DE
        gbc.setState(0x2dd1, 0xb523, 0x4810, 0x7d5c, 0xb4db, 0x428b, 0x0, 0x1);
        gbc.writeMem(0x2dd1, { 0x44 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xb523, gbc.sp());
        EXPECT(0x2dd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 00DF
        gbc.setState(0xe96f, 0x2af0, 0x3810, 0x94b, 0x2aca, 0xa391, 0x0, 0x0);
        gbc.writeMem(0xe96f, { 0x44 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x2af0, gbc.sp());
        EXPECT(0xe970, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xe96f));
        // 44 00E0
        gbc.setState(0xbfec, 0xebd0, 0x6420, 0xcee8, 0x2255, 0x3cd3, 0x1, 0x0);
        gbc.writeMem(0xbfec, { 0x44 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xebd0, gbc.sp());
        EXPECT(0xbfed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xbfec));
        // 44 00E1
        gbc.setState(0x62c1, 0xc09, 0xebd0, 0xdf39, 0x6a4a, 0x75fb, 0x1, 0x0);
        gbc.writeMem(0x62c1, { 0x44 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xc09, gbc.sp());
        EXPECT(0x62c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 00E2
        gbc.setState(0x1ae4, 0xf0f8, 0xcf0, 0x2936, 0xb0f9, 0x94fe, 0x1, 0x1);
        gbc.writeMem(0x1ae4, { 0x44 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xf0f8, gbc.sp());
        EXPECT(0x1ae5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 00E3
        gbc.setState(0xd9ce, 0xf397, 0x440, 0x613e, 0xc693, 0xb14a, 0x1, 0x0);
        gbc.writeMem(0xd9ce, { 0x44 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf397, gbc.sp());
        EXPECT(0xd9cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xd9ce));
        // 44 00E4
        gbc.setState(0xa6ff, 0xca0e, 0xb160, 0x9e82, 0x1a05, 0xf9c6, 0x0, 0x1);
        gbc.writeMem(0xa6ff, { 0x44 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xca0e, gbc.sp());
        EXPECT(0xa700, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa6ff));
        // 44 00E5
        gbc.setState(0x989e, 0xd9, 0xe5f0, 0x2a8, 0x2bac, 0xa643, 0x1, 0x0);
        gbc.writeMem(0x989e, { 0x44 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xd9, gbc.sp());
        EXPECT(0x989f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x989e));
        // 44 00E6
        gbc.setState(0xd11f, 0x834a, 0xc040, 0x71c3, 0x1732, 0x8df5, 0x1, 0x1);
        gbc.writeMem(0xd11f, { 0x44 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x834a, gbc.sp());
        EXPECT(0xd120, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xd11f));
        // 44 00E7
        gbc.setState(0x7902, 0x9f20, 0xa550, 0xb692, 0x2ad5, 0x454c, 0x1, 0x1);
        gbc.writeMem(0x7902, { 0x44 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9f20, gbc.sp());
        EXPECT(0x7903, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 00E8
        gbc.setState(0xb1d, 0x3e13, 0x7520, 0x324d, 0xf534, 0x1660, 0x1, 0x1);
        gbc.writeMem(0xb1d, { 0x44 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x3e13, gbc.sp());
        EXPECT(0xb1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 00E9
        gbc.setState(0x41ef, 0xa6a1, 0x2bf0, 0x9aa4, 0x73a3, 0x9eac, 0x0, 0x1);
        gbc.writeMem(0x41ef, { 0x44 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xa6a1, gbc.sp());
        EXPECT(0x41f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 00EA
        gbc.setState(0x8178, 0x35fd, 0x2350, 0x209, 0xdcd1, 0x2f75, 0x1, 0x0);
        gbc.writeMem(0x8178, { 0x44 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x35fd, gbc.sp());
        EXPECT(0x8179, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x8178));
        // 44 00EB
        gbc.setState(0x791, 0x1163, 0xe650, 0x5080, 0x5872, 0xe868, 0x0, 0x0);
        gbc.writeMem(0x791, { 0x44 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x1163, gbc.sp());
        EXPECT(0x792, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 00EC
        gbc.setState(0x63b0, 0x1b2, 0x9f20, 0xf0bd, 0xae48, 0xd2a0, 0x0, 0x0);
        gbc.writeMem(0x63b0, { 0x44 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x1b2, gbc.sp());
        EXPECT(0x63b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 00ED
        gbc.setState(0xc203, 0x416c, 0xbce0, 0xcdb8, 0x6bf9, 0x66c2, 0x1, 0x1);
        gbc.writeMem(0xc203, { 0x44 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x416c, gbc.sp());
        EXPECT(0xc204, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xc203));
        // 44 00EE
        gbc.setState(0x7d50, 0xf4d6, 0x3090, 0x2078, 0x4d34, 0x6a82, 0x0, 0x0);
        gbc.writeMem(0x7d50, { 0x44 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xf4d6, gbc.sp());
        EXPECT(0x7d51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 00EF
        gbc.setState(0xbedd, 0x1945, 0xc2f0, 0x2146, 0xbdb6, 0x8027, 0x0, 0x0);
        gbc.writeMem(0xbedd, { 0x44 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x1945, gbc.sp());
        EXPECT(0xbede, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xbedd));
        // 44 00F0
        gbc.setState(0x42fe, 0x22b, 0x2720, 0x9298, 0x5807, 0xf52d, 0x1, 0x1);
        gbc.writeMem(0x42fe, { 0x44 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x22b, gbc.sp());
        EXPECT(0x42ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 00F1
        gbc.setState(0x9e3e, 0x722b, 0x8f80, 0x1ad6, 0x4246, 0x4747, 0x0, 0x1);
        gbc.writeMem(0x9e3e, { 0x44 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x722b, gbc.sp());
        EXPECT(0x9e3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x9e3e));
        // 44 00F2
        gbc.setState(0x50f2, 0x3301, 0x2b20, 0x4437, 0x4566, 0x715a, 0x1, 0x0);
        gbc.writeMem(0x50f2, { 0x44 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3301, gbc.sp());
        EXPECT(0x50f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 00F3
        gbc.setState(0xd820, 0x532d, 0x6e30, 0xb1ab, 0xe81f, 0x82ce, 0x0, 0x0);
        gbc.writeMem(0xd820, { 0x44 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x532d, gbc.sp());
        EXPECT(0xd821, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xd820));
        // 44 00F4
        gbc.setState(0x1ec2, 0x1feb, 0x5250, 0xa6be, 0xeea2, 0x2c8b, 0x1, 0x1);
        gbc.writeMem(0x1ec2, { 0x44 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1feb, gbc.sp());
        EXPECT(0x1ec3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 00F5
        gbc.setState(0xa0db, 0xfb80, 0xef90, 0x4261, 0xb289, 0x5b9b, 0x1, 0x1);
        gbc.writeMem(0xa0db, { 0x44 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xfb80, gbc.sp());
        EXPECT(0xa0dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa0db));
        // 44 00F6
        gbc.setState(0x1d33, 0xff1f, 0xfd40, 0x978e, 0xec27, 0xa726, 0x0, 0x1);
        gbc.writeMem(0x1d33, { 0x44 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xff1f, gbc.sp());
        EXPECT(0x1d34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 00F7
        gbc.setState(0xe713, 0x3608, 0xde90, 0x70d, 0x92dc, 0xebd, 0x1, 0x0);
        gbc.writeMem(0xe713, { 0x44 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3608, gbc.sp());
        EXPECT(0xe714, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xe713));
        // 44 00F8
        gbc.setState(0xa4f8, 0x7171, 0xd980, 0x8c31, 0x586b, 0xae7e, 0x1, 0x0);
        gbc.writeMem(0xa4f8, { 0x44 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x7171, gbc.sp());
        EXPECT(0xa4f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa4f8));
        // 44 00FA
        gbc.setState(0x3a5b, 0x6e0d, 0xf3d0, 0xe5c0, 0xf682, 0x6377, 0x1, 0x1);
        gbc.writeMem(0x3a5b, { 0x44 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x6e0d, gbc.sp());
        EXPECT(0x3a5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 00FB
        gbc.setState(0x4f8b, 0xebbe, 0x6fe0, 0x59cc, 0x1b6b, 0x2ee3, 0x1, 0x0);
        gbc.writeMem(0x4f8b, { 0x44 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xebbe, gbc.sp());
        EXPECT(0x4f8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 00FC
        gbc.setState(0xda0a, 0xd91b, 0xfd00, 0x76d2, 0xbe25, 0xe4d8, 0x1, 0x0);
        gbc.writeMem(0xda0a, { 0x44 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xd91b, gbc.sp());
        EXPECT(0xda0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xda0a));
        // 44 00FD
        gbc.setState(0xab89, 0xe811, 0xd080, 0xa20f, 0xc368, 0x1892, 0x0, 0x0);
        gbc.writeMem(0xab89, { 0x44 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xe811, gbc.sp());
        EXPECT(0xab8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xab89));
        // 44 00FE
        gbc.setState(0xf26, 0x9ca0, 0x5a50, 0x8b1a, 0x62b1, 0xa79c, 0x1, 0x0);
        gbc.writeMem(0xf26, { 0x44 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x9ca0, gbc.sp());
        EXPECT(0xf27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 00FF
        gbc.setState(0x9cf7, 0xf761, 0x55a0, 0xefff, 0xd2e2, 0x8b3e, 0x0, 0x1);
        gbc.writeMem(0x9cf7, { 0x44 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xf761, gbc.sp());
        EXPECT(0x9cf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x9cf7));
        // 44 0100
        gbc.setState(0x179b, 0x75b, 0x6670, 0x88c4, 0x71bf, 0xa638, 0x0, 0x1);
        gbc.writeMem(0x179b, { 0x44 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x75b, gbc.sp());
        EXPECT(0x179c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0101
        gbc.setState(0x396, 0x919e, 0x8000, 0x26cc, 0x1ba4, 0xce6c, 0x0, 0x0);
        gbc.writeMem(0x396, { 0x44 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x919e, gbc.sp());
        EXPECT(0x397, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0102
        gbc.setState(0x63ab, 0x5c5e, 0x18b0, 0x4663, 0xf6bb, 0xca5, 0x0, 0x0);
        gbc.writeMem(0x63ab, { 0x44 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x5c5e, gbc.sp());
        EXPECT(0x63ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0104
        gbc.setState(0x393e, 0xc16b, 0x3db0, 0xabc6, 0xfe31, 0xe3f9, 0x0, 0x0);
        gbc.writeMem(0x393e, { 0x44 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xc16b, gbc.sp());
        EXPECT(0x393f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0105
        gbc.setState(0x3c70, 0xa7eb, 0x9630, 0x5bbf, 0xdf61, 0x475b, 0x1, 0x0);
        gbc.writeMem(0x3c70, { 0x44 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xa7eb, gbc.sp());
        EXPECT(0x3c71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0106
        gbc.setState(0xee51, 0x8414, 0xf60, 0x8504, 0x439c, 0x187c, 0x1, 0x0);
        gbc.writeMem(0xee51, { 0x44 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x8414, gbc.sp());
        EXPECT(0xee52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xee51));
        // 44 0107
        gbc.setState(0xaaeb, 0x4106, 0x35e0, 0x7a05, 0xf8e6, 0xbd0, 0x0, 0x1);
        gbc.writeMem(0xaaeb, { 0x44 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x4106, gbc.sp());
        EXPECT(0xaaec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xaaeb));
        // 44 0108
        gbc.setState(0x4d55, 0xe0b6, 0x7360, 0x5fd9, 0xe584, 0xb7c9, 0x1, 0x0);
        gbc.writeMem(0x4d55, { 0x44 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe0b6, gbc.sp());
        EXPECT(0x4d56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0109
        gbc.setState(0xedea, 0xb934, 0xc470, 0x5ff, 0x720d, 0x7cbf, 0x1, 0x1);
        gbc.writeMem(0xedea, { 0x44 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xb934, gbc.sp());
        EXPECT(0xedeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xedea));
        // 44 010A
        gbc.setState(0x9884, 0x8c1e, 0xab50, 0x8603, 0x539d, 0x790e, 0x1, 0x0);
        gbc.writeMem(0x9884, { 0x44 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x8c1e, gbc.sp());
        EXPECT(0x9885, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x9884));
        // 44 010B
        gbc.setState(0x2c61, 0x2690, 0xe900, 0x644, 0xc719, 0x5591, 0x0, 0x0);
        gbc.writeMem(0x2c61, { 0x44 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x2690, gbc.sp());
        EXPECT(0x2c62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 010C
        gbc.setState(0x3e09, 0x8135, 0x1890, 0xcf9d, 0x12de, 0xd935, 0x1, 0x1);
        gbc.writeMem(0x3e09, { 0x44 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x8135, gbc.sp());
        EXPECT(0x3e0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 010D
        gbc.setState(0xbc4, 0x9742, 0x9160, 0x8c49, 0x78b, 0x73c0, 0x1, 0x1);
        gbc.writeMem(0xbc4, { 0x44 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x9742, gbc.sp());
        EXPECT(0xbc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 010E
        gbc.setState(0x99d3, 0x26d6, 0xb520, 0xe4e1, 0x375d, 0xc83a, 0x0, 0x0);
        gbc.writeMem(0x99d3, { 0x44 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x26d6, gbc.sp());
        EXPECT(0x99d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x99d3));
        // 44 010F
        gbc.setState(0x23fd, 0xc9ce, 0x29a0, 0x3f22, 0xbc79, 0xc47e, 0x0, 0x0);
        gbc.writeMem(0x23fd, { 0x44 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xc9ce, gbc.sp());
        EXPECT(0x23fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0110
        gbc.setState(0x6077, 0x6659, 0x3ef0, 0xa51e, 0xb19f, 0xc640, 0x0, 0x1);
        gbc.writeMem(0x6077, { 0x44 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x6659, gbc.sp());
        EXPECT(0x6078, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0111
        gbc.setState(0x4c6c, 0xc60f, 0x1580, 0x85a, 0xbfaf, 0x2003, 0x0, 0x1);
        gbc.writeMem(0x4c6c, { 0x44 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xc60f, gbc.sp());
        EXPECT(0x4c6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0112
        gbc.setState(0xc08e, 0x6480, 0x2e40, 0x63b1, 0xeb41, 0x654e, 0x1, 0x0);
        gbc.writeMem(0xc08e, { 0x44 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x6480, gbc.sp());
        EXPECT(0xc08f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xc08e));
        // 44 0113
        gbc.setState(0x58b0, 0x6da3, 0xa920, 0x1f48, 0x4b97, 0x5987, 0x0, 0x1);
        gbc.writeMem(0x58b0, { 0x44 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x6da3, gbc.sp());
        EXPECT(0x58b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0114
        gbc.setState(0x9df7, 0x76fa, 0x5820, 0x1367, 0x68c3, 0xb9b1, 0x0, 0x1);
        gbc.writeMem(0x9df7, { 0x44 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x76fa, gbc.sp());
        EXPECT(0x9df8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x9df7));
        // 44 0115
        gbc.setState(0xef23, 0xbba9, 0x2cd0, 0x2eda, 0x6a0d, 0x3c94, 0x0, 0x1);
        gbc.writeMem(0xef23, { 0x44 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xbba9, gbc.sp());
        EXPECT(0xef24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xef23));
        // 44 0116
        gbc.setState(0xd83b, 0x3ac3, 0x4190, 0x4cca, 0xe7a6, 0x4ba7, 0x0, 0x1);
        gbc.writeMem(0xd83b, { 0x44 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x3ac3, gbc.sp());
        EXPECT(0xd83c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xd83b));
        // 44 0117
        gbc.setState(0x472d, 0x35a2, 0x2e60, 0x7218, 0x771, 0x55ff, 0x1, 0x0);
        gbc.writeMem(0x472d, { 0x44 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x35a2, gbc.sp());
        EXPECT(0x472e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0118
        gbc.setState(0xa200, 0x5910, 0xe2a0, 0x269f, 0x7470, 0xf773, 0x0, 0x1);
        gbc.writeMem(0xa200, { 0x44 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x5910, gbc.sp());
        EXPECT(0xa201, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa200));
        // 44 0119
        gbc.setState(0xe9d9, 0x1950, 0xf2b0, 0x895b, 0x9bd7, 0xce7c, 0x1, 0x1);
        gbc.writeMem(0xe9d9, { 0x44 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x1950, gbc.sp());
        EXPECT(0xe9da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xe9d9));
        // 44 011A
        gbc.setState(0xb68a, 0x2c8f, 0xf0c0, 0x4df8, 0xf0bf, 0x4fd8, 0x1, 0x0);
        gbc.writeMem(0xb68a, { 0x44 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x2c8f, gbc.sp());
        EXPECT(0xb68b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xb68a));
        // 44 011B
        gbc.setState(0xc03f, 0x397, 0x4270, 0x2b59, 0xedc7, 0x1f37, 0x0, 0x1);
        gbc.writeMem(0xc03f, { 0x44 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x397, gbc.sp());
        EXPECT(0xc040, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xc03f));
        // 44 011C
        gbc.setState(0xb047, 0xaabd, 0x91c0, 0xde1a, 0x4a16, 0x395c, 0x1, 0x0);
        gbc.writeMem(0xb047, { 0x44 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xaabd, gbc.sp());
        EXPECT(0xb048, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xb047));
        // 44 011D
        gbc.setState(0xdc88, 0x73c8, 0xeab0, 0x9f8a, 0x4bdb, 0xccfa, 0x1, 0x0);
        gbc.writeMem(0xdc88, { 0x44 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x73c8, gbc.sp());
        EXPECT(0xdc89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xdc88));
        // 44 011E
        gbc.setState(0x8aa6, 0x217a, 0xb980, 0xb68b, 0x8a6c, 0x992d, 0x0, 0x1);
        gbc.writeMem(0x8aa6, { 0x44 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x217a, gbc.sp());
        EXPECT(0x8aa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x8aa6));
        // 44 011F
        gbc.setState(0xa85b, 0xca8e, 0x81b0, 0x1d8b, 0x6d8b, 0x6188, 0x0, 0x1);
        gbc.writeMem(0xa85b, { 0x44 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xca8e, gbc.sp());
        EXPECT(0xa85c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa85b));
        // 44 0120
        gbc.setState(0xa30, 0xd24b, 0xa720, 0x7d10, 0xa658, 0x4c8d, 0x0, 0x0);
        gbc.writeMem(0xa30, { 0x44 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xd24b, gbc.sp());
        EXPECT(0xa31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0121
        gbc.setState(0xcc81, 0xfc3c, 0x12c0, 0x7654, 0x6be3, 0x330c, 0x0, 0x0);
        gbc.writeMem(0xcc81, { 0x44 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xfc3c, gbc.sp());
        EXPECT(0xcc82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xcc81));
        // 44 0122
        gbc.setState(0x8b8a, 0xfb13, 0x9340, 0x69db, 0xa993, 0x6ba6, 0x0, 0x1);
        gbc.writeMem(0x8b8a, { 0x44 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xfb13, gbc.sp());
        EXPECT(0x8b8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x8b8a));
        // 44 0123
        gbc.setState(0xc093, 0xc549, 0x83c0, 0xa5de, 0xbf83, 0x3e7, 0x0, 0x1);
        gbc.writeMem(0xc093, { 0x44 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc549, gbc.sp());
        EXPECT(0xc094, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xc093));
        // 44 0124
        gbc.setState(0xe7ea, 0x1671, 0xeba0, 0x2348, 0x15b6, 0x4104, 0x0, 0x1);
        gbc.writeMem(0xe7ea, { 0x44 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1671, gbc.sp());
        EXPECT(0xe7eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xe7ea));
        // 44 0125
        gbc.setState(0xb24e, 0x8b28, 0x82a0, 0x1f90, 0x9933, 0x28b, 0x1, 0x0);
        gbc.writeMem(0xb24e, { 0x44 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x8b28, gbc.sp());
        EXPECT(0xb24f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xb24e));
        // 44 0126
        gbc.setState(0x8252, 0x8e3, 0xacf0, 0x3c09, 0xdf35, 0x3b33, 0x1, 0x1);
        gbc.writeMem(0x8252, { 0x44 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x8e3, gbc.sp());
        EXPECT(0x8253, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x8252));
        // 44 0128
        gbc.setState(0x99a0, 0xcac3, 0x6ba0, 0x94a9, 0x6b2c, 0x7448, 0x1, 0x1);
        gbc.writeMem(0x99a0, { 0x44 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xcac3, gbc.sp());
        EXPECT(0x99a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x99a0));
        // 44 0129
        gbc.setState(0x6bd5, 0x2e93, 0x3c50, 0xd711, 0x8543, 0x20cb, 0x0, 0x0);
        gbc.writeMem(0x6bd5, { 0x44 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x2e93, gbc.sp());
        EXPECT(0x6bd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 012A
        gbc.setState(0x68e9, 0xc859, 0x6b00, 0x8c55, 0xd614, 0xa104, 0x1, 0x0);
        gbc.writeMem(0x68e9, { 0x44 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc859, gbc.sp());
        EXPECT(0x68ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 012B
        gbc.setState(0x2763, 0x1ad3, 0x60c0, 0x8a78, 0x6a12, 0xe7ea, 0x1, 0x0);
        gbc.writeMem(0x2763, { 0x44 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x1ad3, gbc.sp());
        EXPECT(0x2764, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 012C
        gbc.setState(0xce21, 0xceef, 0x10c0, 0x6be7, 0x6178, 0xa821, 0x1, 0x0);
        gbc.writeMem(0xce21, { 0x44 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xceef, gbc.sp());
        EXPECT(0xce22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xce21));
        // 44 012D
        gbc.setState(0x67b4, 0xe07e, 0x1be0, 0x52c1, 0x8ecd, 0xbffb, 0x1, 0x1);
        gbc.writeMem(0x67b4, { 0x44 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe07e, gbc.sp());
        EXPECT(0x67b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 012E
        gbc.setState(0x95c1, 0xf263, 0xa6e0, 0xf095, 0xd7b2, 0x4fe0, 0x0, 0x0);
        gbc.writeMem(0x95c1, { 0x44 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xf263, gbc.sp());
        EXPECT(0x95c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x95c1));
        // 44 012F
        gbc.setState(0xbe0b, 0xd4e5, 0x4a50, 0xccf8, 0x6a6b, 0x6e47, 0x0, 0x1);
        gbc.writeMem(0xbe0b, { 0x44 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd4e5, gbc.sp());
        EXPECT(0xbe0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xbe0b));
        // 44 0131
        gbc.setState(0x205d, 0x2fd7, 0xd750, 0x3599, 0x671b, 0xbfc3, 0x0, 0x1);
        gbc.writeMem(0x205d, { 0x44 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x2fd7, gbc.sp());
        EXPECT(0x205e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0132
        gbc.setState(0x6611, 0x6efd, 0xe2c0, 0x8433, 0xb453, 0x3e12, 0x0, 0x1);
        gbc.writeMem(0x6611, { 0x44 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x6efd, gbc.sp());
        EXPECT(0x6612, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0133
        gbc.setState(0x771b, 0xd2d4, 0x2c10, 0x5c52, 0xd465, 0x11fc, 0x0, 0x1);
        gbc.writeMem(0x771b, { 0x44 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd2d4, gbc.sp());
        EXPECT(0x771c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0134
        gbc.setState(0x93ec, 0xa87e, 0x8d20, 0x81b1, 0x9475, 0x2924, 0x1, 0x1);
        gbc.writeMem(0x93ec, { 0x44 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xa87e, gbc.sp());
        EXPECT(0x93ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x93ec));
        // 44 0135
        gbc.setState(0x8ad6, 0x3d0, 0x7240, 0x9587, 0x3e43, 0x2350, 0x0, 0x1);
        gbc.writeMem(0x8ad6, { 0x44 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x3d0, gbc.sp());
        EXPECT(0x8ad7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x8ad6));
        // 44 0136
        gbc.setState(0x5d4a, 0x1915, 0x860, 0x2efa, 0xa04e, 0xf884, 0x0, 0x0);
        gbc.writeMem(0x5d4a, { 0x44 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x1915, gbc.sp());
        EXPECT(0x5d4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0137
        gbc.setState(0x87b0, 0xc2a0, 0x2b10, 0x4628, 0x3de2, 0xb2fb, 0x1, 0x0);
        gbc.writeMem(0x87b0, { 0x44 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xc2a0, gbc.sp());
        EXPECT(0x87b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x87b0));
        // 44 0138
        gbc.setState(0x76c6, 0x6c3c, 0x2db0, 0x694d, 0x2ba4, 0x64b6, 0x0, 0x1);
        gbc.writeMem(0x76c6, { 0x44 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x6c3c, gbc.sp());
        EXPECT(0x76c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0139
        gbc.setState(0xcad5, 0x2d6a, 0x4b60, 0x595e, 0x33e4, 0x59ca, 0x0, 0x1);
        gbc.writeMem(0xcad5, { 0x44 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x2d6a, gbc.sp());
        EXPECT(0xcad6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xcad5));
        // 44 013A
        gbc.setState(0x22c, 0xea50, 0x9a80, 0x83ec, 0x89c5, 0x26e6, 0x0, 0x1);
        gbc.writeMem(0x22c, { 0x44 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xea50, gbc.sp());
        EXPECT(0x22d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 013B
        gbc.setState(0x537a, 0x2eb8, 0x6680, 0x7259, 0x7d65, 0xffd3, 0x1, 0x1);
        gbc.writeMem(0x537a, { 0x44 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x2eb8, gbc.sp());
        EXPECT(0x537b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 013C
        gbc.setState(0x1995, 0x63f1, 0x65a0, 0xf1fa, 0xe9e9, 0xfd36, 0x0, 0x0);
        gbc.writeMem(0x1995, { 0x44 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x63f1, gbc.sp());
        EXPECT(0x1996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 013D
        gbc.setState(0x667, 0x8f09, 0xcdc0, 0xca7b, 0xa2f6, 0x27b, 0x0, 0x0);
        gbc.writeMem(0x667, { 0x44 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x8f09, gbc.sp());
        EXPECT(0x668, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 013E
        gbc.setState(0x871b, 0x67ef, 0x8190, 0xec52, 0xff4d, 0x744f, 0x0, 0x1);
        gbc.writeMem(0x871b, { 0x44 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x67ef, gbc.sp());
        EXPECT(0x871c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x871b));
        // 44 013F
        gbc.setState(0x2aba, 0x637d, 0x3880, 0xfdca, 0x1da, 0xdab7, 0x0, 0x0);
        gbc.writeMem(0x2aba, { 0x44 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x637d, gbc.sp());
        EXPECT(0x2abb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0140
        gbc.setState(0xe078, 0x4d9d, 0x5f80, 0xa357, 0x641, 0xce3c, 0x1, 0x0);
        gbc.writeMem(0xe078, { 0x44 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x4d9d, gbc.sp());
        EXPECT(0xe079, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xe078));
        // 44 0141
        gbc.setState(0x94e9, 0x1e14, 0x4f60, 0x168e, 0x61cd, 0x6a61, 0x1, 0x1);
        gbc.writeMem(0x94e9, { 0x44 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x1e14, gbc.sp());
        EXPECT(0x94ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x94e9));
        // 44 0142
        gbc.setState(0xa6ed, 0x28e6, 0x6a90, 0xa527, 0xde4, 0x5b5a, 0x0, 0x0);
        gbc.writeMem(0xa6ed, { 0x44 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x28e6, gbc.sp());
        EXPECT(0xa6ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa6ed));
        // 44 0143
        gbc.setState(0x3757, 0x82a7, 0xbaa0, 0x40b8, 0x8107, 0x89b7, 0x1, 0x0);
        gbc.writeMem(0x3757, { 0x44 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x82a7, gbc.sp());
        EXPECT(0x3758, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0144
        gbc.setState(0x1b05, 0xd459, 0x5a70, 0x49f0, 0xcbd6, 0x61ec, 0x0, 0x1);
        gbc.writeMem(0x1b05, { 0x44 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xd459, gbc.sp());
        EXPECT(0x1b06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0145
        gbc.setState(0xc23d, 0xc917, 0x3940, 0x126c, 0x44f8, 0x4240, 0x0, 0x1);
        gbc.writeMem(0xc23d, { 0x44 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc917, gbc.sp());
        EXPECT(0xc23e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xc23d));
        // 44 0146
        gbc.setState(0x381d, 0x775b, 0xb430, 0xae8, 0xf2c8, 0x1dbf, 0x1, 0x0);
        gbc.writeMem(0x381d, { 0x44 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x775b, gbc.sp());
        EXPECT(0x381e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0147
        gbc.setState(0x46e7, 0xceb0, 0x43a0, 0x8bc4, 0xfbbd, 0xf48c, 0x0, 0x1);
        gbc.writeMem(0x46e7, { 0x44 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xceb0, gbc.sp());
        EXPECT(0x46e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0148
        gbc.setState(0xfea, 0xe9cb, 0x73a0, 0xe0ef, 0xafc2, 0xfb2d, 0x0, 0x0);
        gbc.writeMem(0xfea, { 0x44 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe9cb, gbc.sp());
        EXPECT(0xfeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0149
        gbc.setState(0x42be, 0x9fec, 0x3d00, 0x3d7d, 0xfb7e, 0x8e7, 0x0, 0x1);
        gbc.writeMem(0x42be, { 0x44 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9fec, gbc.sp());
        EXPECT(0x42bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 014B
        gbc.setState(0x8156, 0x25ef, 0x3380, 0xc586, 0x78e5, 0x1626, 0x0, 0x0);
        gbc.writeMem(0x8156, { 0x44 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x25ef, gbc.sp());
        EXPECT(0x8157, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x8156));
        // 44 014C
        gbc.setState(0xa8b1, 0x36cb, 0x2b0, 0x8757, 0xce0c, 0xc580, 0x1, 0x1);
        gbc.writeMem(0xa8b1, { 0x44 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x36cb, gbc.sp());
        EXPECT(0xa8b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa8b1));
        // 44 014D
        gbc.setState(0x2eab, 0xbc01, 0xc0f0, 0x711d, 0x1d68, 0xc72b, 0x1, 0x1);
        gbc.writeMem(0x2eab, { 0x44 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xbc01, gbc.sp());
        EXPECT(0x2eac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 014F
        gbc.setState(0x4d42, 0x5141, 0x3590, 0x483a, 0xdb82, 0xab63, 0x0, 0x1);
        gbc.writeMem(0x4d42, { 0x44 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x5141, gbc.sp());
        EXPECT(0x4d43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0150
        gbc.setState(0xc170, 0x1399, 0x800, 0xa2a2, 0x729f, 0x6b96, 0x1, 0x0);
        gbc.writeMem(0xc170, { 0x44 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x1399, gbc.sp());
        EXPECT(0xc171, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xc170));
        // 44 0151
        gbc.setState(0x7d75, 0x7d8c, 0x2300, 0x850, 0xffcb, 0x74d0, 0x1, 0x0);
        gbc.writeMem(0x7d75, { 0x44 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7d8c, gbc.sp());
        EXPECT(0x7d76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0152
        gbc.setState(0xbaed, 0x4fc3, 0x2d80, 0x8837, 0xb68f, 0x4c63, 0x1, 0x0);
        gbc.writeMem(0xbaed, { 0x44 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x4fc3, gbc.sp());
        EXPECT(0xbaee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xbaed));
        // 44 0154
        gbc.setState(0x27d0, 0x5d3, 0x2d10, 0x3201, 0xd032, 0xb0dd, 0x1, 0x1);
        gbc.writeMem(0x27d0, { 0x44 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x5d3, gbc.sp());
        EXPECT(0x27d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0156
        gbc.setState(0x5e02, 0x9f33, 0x42b0, 0xb05c, 0x45da, 0xebc6, 0x0, 0x0);
        gbc.writeMem(0x5e02, { 0x44 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x9f33, gbc.sp());
        EXPECT(0x5e03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0158
        gbc.setState(0xebf4, 0x6707, 0x1310, 0x2e40, 0xe388, 0xe902, 0x0, 0x1);
        gbc.writeMem(0xebf4, { 0x44 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x6707, gbc.sp());
        EXPECT(0xebf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xebf4));
        // 44 0159
        gbc.setState(0x4c80, 0x3786, 0x6f20, 0xe34e, 0xa84d, 0xf11f, 0x0, 0x1);
        gbc.writeMem(0x4c80, { 0x44 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3786, gbc.sp());
        EXPECT(0x4c81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 015A
        gbc.setState(0xbc90, 0xfa16, 0xb2e0, 0xd96c, 0x43b2, 0x65ab, 0x1, 0x0);
        gbc.writeMem(0xbc90, { 0x44 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xfa16, gbc.sp());
        EXPECT(0xbc91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xbc90));
        // 44 015B
        gbc.setState(0xa0d3, 0x362d, 0x3960, 0x1882, 0x248f, 0xa1e3, 0x0, 0x0);
        gbc.writeMem(0xa0d3, { 0x44 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x362d, gbc.sp());
        EXPECT(0xa0d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa0d3));
        // 44 015D
        gbc.setState(0xc85c, 0x21b4, 0x3600, 0xc7df, 0xab35, 0xde4f, 0x1, 0x0);
        gbc.writeMem(0xc85c, { 0x44 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x21b4, gbc.sp());
        EXPECT(0xc85d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xc85c));
        // 44 015E
        gbc.setState(0x2644, 0x6ce5, 0xbd70, 0x8374, 0xc2c9, 0xe717, 0x1, 0x1);
        gbc.writeMem(0x2644, { 0x44 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x6ce5, gbc.sp());
        EXPECT(0x2645, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0160
        gbc.setState(0x36fd, 0xe165, 0xab30, 0x597b, 0x9b03, 0x1635, 0x1, 0x0);
        gbc.writeMem(0x36fd, { 0x44 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe165, gbc.sp());
        EXPECT(0x36fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0161
        gbc.setState(0xd8e7, 0x810e, 0x6cc0, 0xc33a, 0xded3, 0x69fe, 0x1, 0x1);
        gbc.writeMem(0xd8e7, { 0x44 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x810e, gbc.sp());
        EXPECT(0xd8e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xd8e7));
        // 44 0162
        gbc.setState(0xc27c, 0x843d, 0xf020, 0x1b1a, 0x6ba3, 0x8991, 0x1, 0x1);
        gbc.writeMem(0xc27c, { 0x44 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x843d, gbc.sp());
        EXPECT(0xc27d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xc27c));
        // 44 0163
        gbc.setState(0x3c13, 0xeb3a, 0x5890, 0xfd90, 0x1b08, 0x2bb5, 0x0, 0x0);
        gbc.writeMem(0x3c13, { 0x44 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xeb3a, gbc.sp());
        EXPECT(0x3c14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0164
        gbc.setState(0x2d2, 0xa135, 0xac10, 0x15bb, 0xd8c, 0x8bf4, 0x1, 0x1);
        gbc.writeMem(0x2d2, { 0x44 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xa135, gbc.sp());
        EXPECT(0x2d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0165
        gbc.setState(0x37d, 0x8dd3, 0xd550, 0xb254, 0x237f, 0xd174, 0x0, 0x0);
        gbc.writeMem(0x37d, { 0x44 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x8dd3, gbc.sp());
        EXPECT(0x37e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0166
        gbc.setState(0xa78b, 0x3fe4, 0x9190, 0x33eb, 0xbe0d, 0x71eb, 0x0, 0x1);
        gbc.writeMem(0xa78b, { 0x44 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x3fe4, gbc.sp());
        EXPECT(0xa78c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa78b));
        // 44 0167
        gbc.setState(0x9b17, 0x2a33, 0xca30, 0x8165, 0x4a75, 0x5876, 0x1, 0x1);
        gbc.writeMem(0x9b17, { 0x44 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2a33, gbc.sp());
        EXPECT(0x9b18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x9b17));
        // 44 0169
        gbc.setState(0x1863, 0xeaaa, 0x39c0, 0x81d6, 0x5d25, 0xe4af, 0x0, 0x0);
        gbc.writeMem(0x1863, { 0x44 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xeaaa, gbc.sp());
        EXPECT(0x1864, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 016A
        gbc.setState(0x556a, 0xafb6, 0x1a0, 0xe239, 0x3ed8, 0xd02e, 0x0, 0x0);
        gbc.writeMem(0x556a, { 0x44 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xafb6, gbc.sp());
        EXPECT(0x556b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 016B
        gbc.setState(0xdf94, 0x6dc0, 0x4690, 0xcb8f, 0x519a, 0xb2d6, 0x0, 0x1);
        gbc.writeMem(0xdf94, { 0x44 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6dc0, gbc.sp());
        EXPECT(0xdf95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xdf94));
        // 44 016C
        gbc.setState(0xea4d, 0x66ca, 0xea20, 0xf4c6, 0xfd94, 0x4b6e, 0x1, 0x1);
        gbc.writeMem(0xea4d, { 0x44 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x66ca, gbc.sp());
        EXPECT(0xea4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xea4d));
        // 44 016D
        gbc.setState(0x7757, 0x829d, 0x5670, 0xd8fd, 0xc139, 0x6855, 0x1, 0x1);
        gbc.writeMem(0x7757, { 0x44 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x829d, gbc.sp());
        EXPECT(0x7758, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 016E
        gbc.setState(0x426c, 0x94d7, 0xd630, 0x4aa6, 0x37af, 0x5d3d, 0x0, 0x1);
        gbc.writeMem(0x426c, { 0x44 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x94d7, gbc.sp());
        EXPECT(0x426d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 016F
        gbc.setState(0x7bb0, 0x10c8, 0x5410, 0x442e, 0x4f49, 0xd00b, 0x1, 0x1);
        gbc.writeMem(0x7bb0, { 0x44 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x10c8, gbc.sp());
        EXPECT(0x7bb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0170
        gbc.setState(0x9af7, 0xcf17, 0xc620, 0xb77f, 0x2202, 0x2158, 0x1, 0x0);
        gbc.writeMem(0x9af7, { 0x44 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xcf17, gbc.sp());
        EXPECT(0x9af8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x9af7));
        // 44 0171
        gbc.setState(0x270b, 0x9935, 0xce30, 0xb06c, 0xa413, 0x6265, 0x0, 0x1);
        gbc.writeMem(0x270b, { 0x44 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9935, gbc.sp());
        EXPECT(0x270c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0172
        gbc.setState(0xd773, 0x766b, 0xb580, 0x319b, 0x1abb, 0x3412, 0x1, 0x0);
        gbc.writeMem(0xd773, { 0x44 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x766b, gbc.sp());
        EXPECT(0xd774, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xd773));
        // 44 0173
        gbc.setState(0x4d03, 0x4593, 0x4670, 0x822c, 0xdd2d, 0x869b, 0x0, 0x1);
        gbc.writeMem(0x4d03, { 0x44 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x4593, gbc.sp());
        EXPECT(0x4d04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0174
        gbc.setState(0x6bd0, 0xc2b6, 0xd990, 0x6bab, 0x4fc5, 0x8329, 0x1, 0x1);
        gbc.writeMem(0x6bd0, { 0x44 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xc2b6, gbc.sp());
        EXPECT(0x6bd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0175
        gbc.setState(0xd114, 0xab57, 0x2080, 0xa552, 0x7c85, 0x3ef2, 0x0, 0x1);
        gbc.writeMem(0xd114, { 0x44 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xab57, gbc.sp());
        EXPECT(0xd115, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xd114));
        // 44 0176
        gbc.setState(0x2de6, 0x4176, 0xed0, 0x8289, 0x8346, 0xaa05, 0x0, 0x0);
        gbc.writeMem(0x2de6, { 0x44 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x4176, gbc.sp());
        EXPECT(0x2de7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0177
        gbc.setState(0xc960, 0x4b02, 0xd670, 0x9218, 0x1a51, 0x383c, 0x0, 0x0);
        gbc.writeMem(0xc960, { 0x44 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x4b02, gbc.sp());
        EXPECT(0xc961, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xc960));
        // 44 0178
        gbc.setState(0x7779, 0xf2d3, 0x6e70, 0xbad9, 0x25ce, 0x65e3, 0x0, 0x1);
        gbc.writeMem(0x7779, { 0x44 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xf2d3, gbc.sp());
        EXPECT(0x777a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0179
        gbc.setState(0x71bb, 0xe58c, 0x4190, 0x4b34, 0x78c6, 0x3a79, 0x0, 0x0);
        gbc.writeMem(0x71bb, { 0x44 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xe58c, gbc.sp());
        EXPECT(0x71bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 017A
        gbc.setState(0xf36, 0x29d5, 0x18b0, 0x5368, 0x59d1, 0xdea7, 0x1, 0x0);
        gbc.writeMem(0xf36, { 0x44 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x29d5, gbc.sp());
        EXPECT(0xf37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 017B
        gbc.setState(0x8c6f, 0xfed2, 0xe3d0, 0xd606, 0x72d9, 0x5110, 0x0, 0x0);
        gbc.writeMem(0x8c6f, { 0x44 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xfed2, gbc.sp());
        EXPECT(0x8c70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x8c6f));
        // 44 017C
        gbc.setState(0x8446, 0x2396, 0xfd20, 0x5628, 0xc3e9, 0x9dd7, 0x1, 0x1);
        gbc.writeMem(0x8446, { 0x44 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x2396, gbc.sp());
        EXPECT(0x8447, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x8446));
        // 44 017D
        gbc.setState(0x2a9e, 0x8e77, 0x2620, 0x4b06, 0xb6d7, 0x6abf, 0x1, 0x0);
        gbc.writeMem(0x2a9e, { 0x44 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x8e77, gbc.sp());
        EXPECT(0x2a9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 017E
        gbc.setState(0xc46d, 0x5259, 0xa9f0, 0x432f, 0xcbca, 0x32a3, 0x0, 0x1);
        gbc.writeMem(0xc46d, { 0x44 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x5259, gbc.sp());
        EXPECT(0xc46e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xc46d));
        // 44 017F
        gbc.setState(0x3d5e, 0xd075, 0xbf50, 0xb8ba, 0xb940, 0x8599, 0x0, 0x1);
        gbc.writeMem(0x3d5e, { 0x44 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xd075, gbc.sp());
        EXPECT(0x3d5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0180
        gbc.setState(0xb4a4, 0xd37e, 0x8100, 0x2762, 0x8db5, 0xf79a, 0x0, 0x0);
        gbc.writeMem(0xb4a4, { 0x44 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xd37e, gbc.sp());
        EXPECT(0xb4a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xb4a4));
        // 44 0181
        gbc.setState(0x25ad, 0xc690, 0x6d60, 0x4e1f, 0x43a5, 0xfe6f, 0x0, 0x1);
        gbc.writeMem(0x25ad, { 0x44 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xc690, gbc.sp());
        EXPECT(0x25ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0182
        gbc.setState(0x502a, 0xf7bb, 0x24a0, 0xdc9d, 0xddb2, 0xcc70, 0x0, 0x0);
        gbc.writeMem(0x502a, { 0x44 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xf7bb, gbc.sp());
        EXPECT(0x502b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0184
        gbc.setState(0x8a80, 0xdbfb, 0x6a10, 0x82b0, 0x8fb6, 0x51c4, 0x0, 0x1);
        gbc.writeMem(0x8a80, { 0x44 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xdbfb, gbc.sp());
        EXPECT(0x8a81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x8a80));
        // 44 0185
        gbc.setState(0xb763, 0x89f9, 0x8820, 0xe82, 0xa7a, 0x225a, 0x1, 0x1);
        gbc.writeMem(0xb763, { 0x44 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x89f9, gbc.sp());
        EXPECT(0xb764, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xb763));
        // 44 0186
        gbc.setState(0xf0b, 0xca75, 0x7760, 0xc8ab, 0x1b7, 0xf73d, 0x0, 0x0);
        gbc.writeMem(0xf0b, { 0x44 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xca75, gbc.sp());
        EXPECT(0xf0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0187
        gbc.setState(0x4e34, 0xc790, 0x85e0, 0x3e3b, 0x2042, 0x2b92, 0x0, 0x0);
        gbc.writeMem(0x4e34, { 0x44 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc790, gbc.sp());
        EXPECT(0x4e35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0188
        gbc.setState(0xcf8c, 0x70b2, 0xde00, 0xe180, 0xae27, 0xa943, 0x1, 0x1);
        gbc.writeMem(0xcf8c, { 0x44 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x70b2, gbc.sp());
        EXPECT(0xcf8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xcf8c));
        // 44 0189
        gbc.setState(0xd2e7, 0xa9e9, 0x95c0, 0x503, 0x2138, 0x5ecc, 0x1, 0x1);
        gbc.writeMem(0xd2e7, { 0x44 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xa9e9, gbc.sp());
        EXPECT(0xd2e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xd2e7));
        // 44 018A
        gbc.setState(0x6071, 0x456b, 0xefb0, 0x4a02, 0x4065, 0x3c6d, 0x0, 0x0);
        gbc.writeMem(0x6071, { 0x44 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x456b, gbc.sp());
        EXPECT(0x6072, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 018B
        gbc.setState(0xe79, 0x9c0c, 0x5b60, 0x9add, 0xe0d2, 0x768b, 0x0, 0x0);
        gbc.writeMem(0xe79, { 0x44 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x9c0c, gbc.sp());
        EXPECT(0xe7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 018C
        gbc.setState(0x6a6e, 0xe5d4, 0x9b40, 0x8546, 0x42d1, 0xf429, 0x0, 0x0);
        gbc.writeMem(0x6a6e, { 0x44 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xe5d4, gbc.sp());
        EXPECT(0x6a6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 018D
        gbc.setState(0xe28f, 0x9f4b, 0x54d0, 0xba66, 0xa02b, 0x77b9, 0x1, 0x0);
        gbc.writeMem(0xe28f, { 0x44 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x9f4b, gbc.sp());
        EXPECT(0xe290, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xe28f));
        // 44 018E
        gbc.setState(0x574f, 0x5b2e, 0x9db0, 0x195c, 0x3e89, 0xbb58, 0x0, 0x0);
        gbc.writeMem(0x574f, { 0x44 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x5b2e, gbc.sp());
        EXPECT(0x5750, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 018F
        gbc.setState(0x7241, 0xb725, 0x3420, 0x17fc, 0x786b, 0xcd04, 0x1, 0x0);
        gbc.writeMem(0x7241, { 0x44 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xb725, gbc.sp());
        EXPECT(0x7242, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0190
        gbc.setState(0x14e, 0x41ac, 0x7440, 0x9ff5, 0xac7c, 0xafef, 0x1, 0x0);
        gbc.writeMem(0x14e, { 0x44 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x41ac, gbc.sp());
        EXPECT(0x14f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0191
        gbc.setState(0x93f4, 0x3ad1, 0x93d0, 0xfd71, 0xa7f9, 0x869f, 0x1, 0x0);
        gbc.writeMem(0x93f4, { 0x44 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x3ad1, gbc.sp());
        EXPECT(0x93f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x93f4));
        // 44 0192
        gbc.setState(0x4e60, 0x216a, 0xdc40, 0x72fc, 0x44f9, 0x9176, 0x1, 0x1);
        gbc.writeMem(0x4e60, { 0x44 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x216a, gbc.sp());
        EXPECT(0x4e61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0193
        gbc.setState(0xe910, 0x3929, 0x8350, 0xdd65, 0xa9c7, 0x8646, 0x1, 0x0);
        gbc.writeMem(0xe910, { 0x44 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x3929, gbc.sp());
        EXPECT(0xe911, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xe910));
        // 44 0194
        gbc.setState(0x1c7c, 0xbc8c, 0x730, 0x1f53, 0x78a6, 0x436, 0x1, 0x0);
        gbc.writeMem(0x1c7c, { 0x44 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xbc8c, gbc.sp());
        EXPECT(0x1c7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0195
        gbc.setState(0x5226, 0xa3e5, 0xa0, 0x997a, 0x1b0d, 0x6c0a, 0x1, 0x0);
        gbc.writeMem(0x5226, { 0x44 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xa3e5, gbc.sp());
        EXPECT(0x5227, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0196
        gbc.setState(0x2bfd, 0xfd22, 0xac70, 0xd9f8, 0x5302, 0x880c, 0x1, 0x0);
        gbc.writeMem(0x2bfd, { 0x44 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xfd22, gbc.sp());
        EXPECT(0x2bfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0197
        gbc.setState(0xd73f, 0x266c, 0x7550, 0xadb7, 0xd6ee, 0xbbe2, 0x0, 0x1);
        gbc.writeMem(0xd73f, { 0x44 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x266c, gbc.sp());
        EXPECT(0xd740, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xd73f));
        // 44 0198
        gbc.setState(0x6eff, 0x546, 0x6260, 0xa832, 0x52ee, 0x14bd, 0x0, 0x1);
        gbc.writeMem(0x6eff, { 0x44 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x546, gbc.sp());
        EXPECT(0x6f00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0199
        gbc.setState(0x2055, 0xc068, 0x3b0, 0xe0fb, 0x42a, 0x321d, 0x1, 0x1);
        gbc.writeMem(0x2055, { 0x44 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc068, gbc.sp());
        EXPECT(0x2056, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 019A
        gbc.setState(0x88b4, 0xdecf, 0x96c0, 0x295c, 0xf2a8, 0xc4d4, 0x1, 0x1);
        gbc.writeMem(0x88b4, { 0x44 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xdecf, gbc.sp());
        EXPECT(0x88b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x88b4));
        // 44 019B
        gbc.setState(0xcaa5, 0xddde, 0xd8a0, 0x85fa, 0x64f5, 0x8a07, 0x1, 0x0);
        gbc.writeMem(0xcaa5, { 0x44 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xddde, gbc.sp());
        EXPECT(0xcaa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xcaa5));
        // 44 019C
        gbc.setState(0xbec0, 0xebcd, 0x99d0, 0x2ded, 0x9c13, 0xe476, 0x1, 0x0);
        gbc.writeMem(0xbec0, { 0x44 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xebcd, gbc.sp());
        EXPECT(0xbec1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xbec0));
        // 44 019D
        gbc.setState(0xc396, 0xfb4b, 0x75f0, 0xa2b5, 0x286d, 0x1ceb, 0x1, 0x0);
        gbc.writeMem(0xc396, { 0x44 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xfb4b, gbc.sp());
        EXPECT(0xc397, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xc396));
        // 44 019F
        gbc.setState(0xc816, 0xb224, 0x8160, 0x57d4, 0x1387, 0xd4af, 0x1, 0x0);
        gbc.writeMem(0xc816, { 0x44 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb224, gbc.sp());
        EXPECT(0xc817, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xc816));
        // 44 01A0
        gbc.setState(0xadde, 0xab0b, 0x5220, 0xb632, 0x46c, 0x94c1, 0x0, 0x1);
        gbc.writeMem(0xadde, { 0x44 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xab0b, gbc.sp());
        EXPECT(0xaddf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xadde));
        // 44 01A1
        gbc.setState(0x6f09, 0xf1ec, 0x3560, 0x3071, 0x6a9c, 0xd197, 0x1, 0x1);
        gbc.writeMem(0x6f09, { 0x44 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf1ec, gbc.sp());
        EXPECT(0x6f0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 01A2
        gbc.setState(0x9c24, 0xc186, 0x1290, 0xba6c, 0x3595, 0x1ab8, 0x0, 0x1);
        gbc.writeMem(0x9c24, { 0x44 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc186, gbc.sp());
        EXPECT(0x9c25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x9c24));
        // 44 01A3
        gbc.setState(0x46c4, 0x70c3, 0xcab0, 0x6beb, 0x2122, 0x3f62, 0x1, 0x1);
        gbc.writeMem(0x46c4, { 0x44 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x70c3, gbc.sp());
        EXPECT(0x46c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 01A4
        gbc.setState(0x50c3, 0xe393, 0xa670, 0x5795, 0x957a, 0x4729, 0x0, 0x1);
        gbc.writeMem(0x50c3, { 0x44 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xe393, gbc.sp());
        EXPECT(0x50c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 01A5
        gbc.setState(0x7017, 0x9879, 0x3920, 0x7e0b, 0x4855, 0xe133, 0x1, 0x1);
        gbc.writeMem(0x7017, { 0x44 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x9879, gbc.sp());
        EXPECT(0x7018, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 01A6
        gbc.setState(0x69b2, 0xdaf7, 0x61c0, 0xf25f, 0xb462, 0x8f50, 0x1, 0x1);
        gbc.writeMem(0x69b2, { 0x44 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xdaf7, gbc.sp());
        EXPECT(0x69b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 01A7
        gbc.setState(0x74cc, 0x1d9, 0x9cc0, 0x948d, 0xf052, 0xdd1b, 0x1, 0x0);
        gbc.writeMem(0x74cc, { 0x44 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x1d9, gbc.sp());
        EXPECT(0x74cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 01A8
        gbc.setState(0x21da, 0x8259, 0x93c0, 0x6ed0, 0x32ef, 0xc593, 0x1, 0x0);
        gbc.writeMem(0x21da, { 0x44 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8259, gbc.sp());
        EXPECT(0x21db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 01A9
        gbc.setState(0xecd4, 0x551e, 0x5330, 0x4a08, 0x81d9, 0xd22a, 0x1, 0x1);
        gbc.writeMem(0xecd4, { 0x44 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x551e, gbc.sp());
        EXPECT(0xecd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xecd4));
        // 44 01AA
        gbc.setState(0x233, 0x7d5, 0x4e20, 0xd603, 0x42cd, 0x257e, 0x0, 0x0);
        gbc.writeMem(0x233, { 0x44 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x7d5, gbc.sp());
        EXPECT(0x234, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 01AB
        gbc.setState(0x3e3e, 0x8b65, 0x8850, 0xca6, 0xaeb6, 0x649d, 0x0, 0x1);
        gbc.writeMem(0x3e3e, { 0x44 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x8b65, gbc.sp());
        EXPECT(0x3e3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 01AC
        gbc.setState(0x9d0f, 0xe995, 0x9c30, 0xa479, 0x9f68, 0xa9b5, 0x1, 0x1);
        gbc.writeMem(0x9d0f, { 0x44 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xe995, gbc.sp());
        EXPECT(0x9d10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x9d0f));
        // 44 01AD
        gbc.setState(0x3e39, 0xb269, 0x6720, 0x7a7a, 0xd7e5, 0xb665, 0x1, 0x0);
        gbc.writeMem(0x3e39, { 0x44 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb269, gbc.sp());
        EXPECT(0x3e3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 01AE
        gbc.setState(0xa14d, 0x56ed, 0x1390, 0x1467, 0x1442, 0x4c15, 0x0, 0x1);
        gbc.writeMem(0xa14d, { 0x44 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x56ed, gbc.sp());
        EXPECT(0xa14e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa14d));
        // 44 01AF
        gbc.setState(0x49aa, 0x398e, 0xcf10, 0x103c, 0x29eb, 0x6e3, 0x1, 0x1);
        gbc.writeMem(0x49aa, { 0x44 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x398e, gbc.sp());
        EXPECT(0x49ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 01B0
        gbc.setState(0x26a2, 0x6c5b, 0x3fe0, 0x43a1, 0xf7cd, 0x6b11, 0x0, 0x1);
        gbc.writeMem(0x26a2, { 0x44 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x6c5b, gbc.sp());
        EXPECT(0x26a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 01B1
        gbc.setState(0xd8fe, 0xbba6, 0x1810, 0xe6e6, 0xda68, 0xa8f7, 0x0, 0x0);
        gbc.writeMem(0xd8fe, { 0x44 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xbba6, gbc.sp());
        EXPECT(0xd8ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xd8fe));
        // 44 01B2
        gbc.setState(0x80f2, 0x3f5d, 0xe2d0, 0x7326, 0xb97c, 0xebae, 0x1, 0x0);
        gbc.writeMem(0x80f2, { 0x44 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x3f5d, gbc.sp());
        EXPECT(0x80f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x80f2));
        // 44 01B4
        gbc.setState(0x32f3, 0xe99c, 0xdef0, 0x7fa2, 0xa63, 0x1d39, 0x0, 0x1);
        gbc.writeMem(0x32f3, { 0x44 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xe99c, gbc.sp());
        EXPECT(0x32f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 01B5
        gbc.setState(0x916e, 0x4e1b, 0x5430, 0x3a1a, 0x7f06, 0x6337, 0x1, 0x0);
        gbc.writeMem(0x916e, { 0x44 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x4e1b, gbc.sp());
        EXPECT(0x916f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x916e));
        // 44 01B6
        gbc.setState(0xdf77, 0xb742, 0x7340, 0x2b8, 0x34c0, 0xe105, 0x0, 0x0);
        gbc.writeMem(0xdf77, { 0x44 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xb742, gbc.sp());
        EXPECT(0xdf78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xdf77));
        // 44 01B7
        gbc.setState(0xd108, 0x25d3, 0x2700, 0xc012, 0xd805, 0x2141, 0x1, 0x1);
        gbc.writeMem(0xd108, { 0x44 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x25d3, gbc.sp());
        EXPECT(0xd109, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xd108));
        // 44 01B8
        gbc.setState(0xbeba, 0x5691, 0xa7b0, 0x3019, 0xf9f8, 0xb987, 0x0, 0x0);
        gbc.writeMem(0xbeba, { 0x44 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x5691, gbc.sp());
        EXPECT(0xbebb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xbeba));
        // 44 01B9
        gbc.setState(0xbdc6, 0x9d95, 0xe200, 0x20c3, 0xccdb, 0x3f26, 0x1, 0x1);
        gbc.writeMem(0xbdc6, { 0x44 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x9d95, gbc.sp());
        EXPECT(0xbdc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xbdc6));
        // 44 01BA
        gbc.setState(0xec39, 0xe157, 0x1f40, 0x1b25, 0xb1ee, 0xc7b8, 0x1, 0x0);
        gbc.writeMem(0xec39, { 0x44 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe157, gbc.sp());
        EXPECT(0xec3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xec39));
        // 44 01BB
        gbc.setState(0x5145, 0xddf8, 0xd310, 0x4998, 0xa37b, 0x93c2, 0x1, 0x0);
        gbc.writeMem(0x5145, { 0x44 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xddf8, gbc.sp());
        EXPECT(0x5146, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 01BC
        gbc.setState(0x940, 0xdb6f, 0x6920, 0x1a40, 0xf5f3, 0x6afb, 0x1, 0x0);
        gbc.writeMem(0x940, { 0x44 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xdb6f, gbc.sp());
        EXPECT(0x941, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 01BD
        gbc.setState(0xa5c2, 0x8c1d, 0x5d50, 0x4cf4, 0xf0ac, 0xc7ec, 0x0, 0x0);
        gbc.writeMem(0xa5c2, { 0x44 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x8c1d, gbc.sp());
        EXPECT(0xa5c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa5c2));
        // 44 01BE
        gbc.setState(0x3a0a, 0x830f, 0x7d10, 0xaae2, 0x4235, 0x8659, 0x0, 0x0);
        gbc.writeMem(0x3a0a, { 0x44 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x830f, gbc.sp());
        EXPECT(0x3a0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 01C0
        gbc.setState(0x309f, 0xb3c9, 0x2c00, 0xef7f, 0xfc42, 0xdf13, 0x1, 0x0);
        gbc.writeMem(0x309f, { 0x44 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xb3c9, gbc.sp());
        EXPECT(0x30a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 01C1
        gbc.setState(0x64b1, 0x34f0, 0x6c70, 0x769b, 0x7106, 0xf8a0, 0x0, 0x0);
        gbc.writeMem(0x64b1, { 0x44 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x34f0, gbc.sp());
        EXPECT(0x64b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 01C2
        gbc.setState(0xda8d, 0x6577, 0xed20, 0x393f, 0x25af, 0xbb2d, 0x1, 0x1);
        gbc.writeMem(0xda8d, { 0x44 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x6577, gbc.sp());
        EXPECT(0xda8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xda8d));
        // 44 01C3
        gbc.setState(0xb4e, 0xd3ac, 0xe920, 0x9fb0, 0x8d17, 0x279, 0x1, 0x0);
        gbc.writeMem(0xb4e, { 0x44 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xd3ac, gbc.sp());
        EXPECT(0xb4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 01C4
        gbc.setState(0x7bd, 0x5165, 0x11e0, 0xd163, 0xb0d8, 0xacbc, 0x1, 0x0);
        gbc.writeMem(0x7bd, { 0x44 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5165, gbc.sp());
        EXPECT(0x7be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 01C5
        gbc.setState(0xd705, 0xe2cb, 0xe340, 0xa453, 0x9f99, 0xf729, 0x1, 0x0);
        gbc.writeMem(0xd705, { 0x44 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xe2cb, gbc.sp());
        EXPECT(0xd706, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xd705));
        // 44 01C6
        gbc.setState(0xd5d2, 0x15f1, 0xc860, 0x4dff, 0xe399, 0xef53, 0x0, 0x1);
        gbc.writeMem(0xd5d2, { 0x44 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x15f1, gbc.sp());
        EXPECT(0xd5d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xd5d2));
        // 44 01C7
        gbc.setState(0x2670, 0x2362, 0xb980, 0x78af, 0xa35a, 0x2ca5, 0x0, 0x1);
        gbc.writeMem(0x2670, { 0x44 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2362, gbc.sp());
        EXPECT(0x2671, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 01C8
        gbc.setState(0xafb3, 0xc01a, 0xa040, 0x343b, 0x510a, 0x6e4f, 0x1, 0x1);
        gbc.writeMem(0xafb3, { 0x44 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xc01a, gbc.sp());
        EXPECT(0xafb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xafb3));
        // 44 01C9
        gbc.setState(0xd2e6, 0x7549, 0x870, 0x7a88, 0xe2f, 0x320a, 0x1, 0x0);
        gbc.writeMem(0xd2e6, { 0x44 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7549, gbc.sp());
        EXPECT(0xd2e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xd2e6));
        // 44 01CA
        gbc.setState(0x2d74, 0x8c57, 0x63d0, 0xeb1b, 0x8836, 0x1426, 0x0, 0x1);
        gbc.writeMem(0x2d74, { 0x44 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x8c57, gbc.sp());
        EXPECT(0x2d75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 01CB
        gbc.setState(0x758d, 0x32f7, 0xa00, 0x9e09, 0xbe2b, 0x8673, 0x0, 0x1);
        gbc.writeMem(0x758d, { 0x44 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x32f7, gbc.sp());
        EXPECT(0x758e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 01CC
        gbc.setState(0x8f0f, 0x6d02, 0x6d60, 0xa2f4, 0x7f01, 0x68aa, 0x0, 0x0);
        gbc.writeMem(0x8f0f, { 0x44 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x6d02, gbc.sp());
        EXPECT(0x8f10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x8f0f));
        // 44 01CD
        gbc.setState(0x16ea, 0x9976, 0xd0b0, 0x8de2, 0x9312, 0x9672, 0x0, 0x1);
        gbc.writeMem(0x16ea, { 0x44 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x9976, gbc.sp());
        EXPECT(0x16eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 01CE
        gbc.setState(0xe67a, 0xe247, 0x440, 0xf86c, 0x36cb, 0xd59d, 0x0, 0x1);
        gbc.writeMem(0xe67a, { 0x44 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xe247, gbc.sp());
        EXPECT(0xe67b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xe67a));
        // 44 01CF
        gbc.setState(0x4fba, 0x4543, 0x66c0, 0xeabe, 0x487c, 0xf522, 0x0, 0x0);
        gbc.writeMem(0x4fba, { 0x44 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4543, gbc.sp());
        EXPECT(0x4fbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 01D0
        gbc.setState(0xba68, 0x7501, 0xe240, 0xfa1e, 0xfa76, 0xa512, 0x1, 0x1);
        gbc.writeMem(0xba68, { 0x44 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7501, gbc.sp());
        EXPECT(0xba69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xba68));
        // 44 01D2
        gbc.setState(0x38b5, 0x3ac, 0x6750, 0xc85b, 0xa7c9, 0xc364, 0x1, 0x0);
        gbc.writeMem(0x38b5, { 0x44 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x3ac, gbc.sp());
        EXPECT(0x38b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 01D3
        gbc.setState(0xb255, 0xaa2f, 0x5530, 0x11ae, 0x41e7, 0x4f27, 0x0, 0x1);
        gbc.writeMem(0xb255, { 0x44 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xaa2f, gbc.sp());
        EXPECT(0xb256, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xb255));
        // 44 01D4
        gbc.setState(0x4852, 0xe61d, 0xd7b0, 0x25ea, 0x977e, 0xa700, 0x0, 0x1);
        gbc.writeMem(0x4852, { 0x44 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xe61d, gbc.sp());
        EXPECT(0x4853, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 01D5
        gbc.setState(0xdc44, 0x9ffb, 0x6f40, 0x14cc, 0x4dc0, 0xf85, 0x1, 0x0);
        gbc.writeMem(0xdc44, { 0x44 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9ffb, gbc.sp());
        EXPECT(0xdc45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xdc44));
        // 44 01D6
        gbc.setState(0x1390, 0x6426, 0xd390, 0x2d64, 0x418f, 0xa3e3, 0x1, 0x1);
        gbc.writeMem(0x1390, { 0x44 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x6426, gbc.sp());
        EXPECT(0x1391, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 01D7
        gbc.setState(0x702f, 0x4750, 0x850, 0x69c3, 0xeed6, 0x828d, 0x0, 0x1);
        gbc.writeMem(0x702f, { 0x44 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x4750, gbc.sp());
        EXPECT(0x7030, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 01D8
        gbc.setState(0xf62, 0x1da, 0x3210, 0x5868, 0xe7b9, 0xb49, 0x1, 0x0);
        gbc.writeMem(0xf62, { 0x44 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x1da, gbc.sp());
        EXPECT(0xf63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 01D9
        gbc.setState(0xc71e, 0xbac0, 0x6cc0, 0x11bd, 0x9307, 0x2401, 0x1, 0x0);
        gbc.writeMem(0xc71e, { 0x44 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xbac0, gbc.sp());
        EXPECT(0xc71f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xc71e));
        // 44 01DA
        gbc.setState(0x45f8, 0xa770, 0x24b0, 0x839d, 0x30d9, 0x56b3, 0x1, 0x0);
        gbc.writeMem(0x45f8, { 0x44 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa770, gbc.sp());
        EXPECT(0x45f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 01DB
        gbc.setState(0xb6ad, 0x970, 0x1d0, 0x3d75, 0x3312, 0x202f, 0x0, 0x1);
        gbc.writeMem(0xb6ad, { 0x44 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x970, gbc.sp());
        EXPECT(0xb6ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xb6ad));
        // 44 01DC
        gbc.setState(0xaf12, 0xbe3a, 0x8360, 0x333b, 0x2036, 0x63f1, 0x1, 0x1);
        gbc.writeMem(0xaf12, { 0x44 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xbe3a, gbc.sp());
        EXPECT(0xaf13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xaf12));
        // 44 01DD
        gbc.setState(0x6226, 0x7178, 0x57c0, 0xc442, 0x816f, 0x9080, 0x0, 0x1);
        gbc.writeMem(0x6226, { 0x44 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7178, gbc.sp());
        EXPECT(0x6227, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 01DE
        gbc.setState(0x6885, 0x3d46, 0xd4c0, 0xb085, 0x3d7b, 0xf082, 0x1, 0x1);
        gbc.writeMem(0x6885, { 0x44 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3d46, gbc.sp());
        EXPECT(0x6886, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 01DF
        gbc.setState(0x1384, 0x14fd, 0x4c50, 0x8bf8, 0x9411, 0x6953, 0x1, 0x0);
        gbc.writeMem(0x1384, { 0x44 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x14fd, gbc.sp());
        EXPECT(0x1385, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 01E0
        gbc.setState(0x2c22, 0xd41e, 0xeee0, 0x7aca, 0x977b, 0x7a1c, 0x1, 0x1);
        gbc.writeMem(0x2c22, { 0x44 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xd41e, gbc.sp());
        EXPECT(0x2c23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 01E1
        gbc.setState(0x1b80, 0xe687, 0x8650, 0x4bca, 0x1223, 0x504a, 0x0, 0x1);
        gbc.writeMem(0x1b80, { 0x44 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe687, gbc.sp());
        EXPECT(0x1b81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 01E2
        gbc.setState(0x9bf7, 0xee60, 0x15b0, 0xefe7, 0xb434, 0x1422, 0x0, 0x0);
        gbc.writeMem(0x9bf7, { 0x44 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xee60, gbc.sp());
        EXPECT(0x9bf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x9bf7));
        // 44 01E3
        gbc.setState(0xb738, 0x54a8, 0x1530, 0xa23f, 0x546d, 0xb587, 0x1, 0x1);
        gbc.writeMem(0xb738, { 0x44 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x54a8, gbc.sp());
        EXPECT(0xb739, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xb738));
        // 44 01E4
        gbc.setState(0x617b, 0xf331, 0x8df0, 0x8bd5, 0x9366, 0xdc9d, 0x1, 0x1);
        gbc.writeMem(0x617b, { 0x44 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xf331, gbc.sp());
        EXPECT(0x617c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 01E5
        gbc.setState(0x7d7a, 0x20ea, 0x7630, 0x4375, 0x12ed, 0xf5fd, 0x0, 0x1);
        gbc.writeMem(0x7d7a, { 0x44 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x20ea, gbc.sp());
        EXPECT(0x7d7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 01E6
        gbc.setState(0x3fc9, 0x3e04, 0x79f0, 0xcbbf, 0xf43, 0x93c0, 0x0, 0x1);
        gbc.writeMem(0x3fc9, { 0x44 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x3e04, gbc.sp());
        EXPECT(0x3fca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 01E7
        gbc.setState(0x2ceb, 0xf7a5, 0xa810, 0xc40, 0x8e29, 0x5f28, 0x0, 0x1);
        gbc.writeMem(0x2ceb, { 0x44 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf7a5, gbc.sp());
        EXPECT(0x2cec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 01E8
        gbc.setState(0x68d5, 0xf950, 0xf060, 0x5951, 0x994d, 0xabe, 0x0, 0x1);
        gbc.writeMem(0x68d5, { 0x44 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xf950, gbc.sp());
        EXPECT(0x68d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 01EA
        gbc.setState(0x5153, 0x316f, 0x2cc0, 0xc981, 0x488c, 0x259c, 0x1, 0x0);
        gbc.writeMem(0x5153, { 0x44 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x316f, gbc.sp());
        EXPECT(0x5154, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 01EB
        gbc.setState(0xceec, 0xbea8, 0xd120, 0xb4a6, 0x4f48, 0xcff7, 0x0, 0x1);
        gbc.writeMem(0xceec, { 0x44 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xbea8, gbc.sp());
        EXPECT(0xceed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xceec));
        // 44 01EC
        gbc.setState(0x49e7, 0xcef6, 0x9fc0, 0xa525, 0x8cbd, 0x5849, 0x1, 0x1);
        gbc.writeMem(0x49e7, { 0x44 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xcef6, gbc.sp());
        EXPECT(0x49e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 01ED
        gbc.setState(0x9b3e, 0xd4f6, 0x6150, 0xdb26, 0xe4e9, 0x7300, 0x1, 0x1);
        gbc.writeMem(0x9b3e, { 0x44 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd4f6, gbc.sp());
        EXPECT(0x9b3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x9b3e));
        // 44 01EE
        gbc.setState(0x19e3, 0x57ab, 0x5840, 0xaef1, 0xeea0, 0x9d37, 0x0, 0x1);
        gbc.writeMem(0x19e3, { 0x44 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x57ab, gbc.sp());
        EXPECT(0x19e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 01EF
        gbc.setState(0x517, 0x25ba, 0x2c00, 0x824e, 0x1220, 0x6038, 0x1, 0x0);
        gbc.writeMem(0x517, { 0x44 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x25ba, gbc.sp());
        EXPECT(0x518, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 01F0
        gbc.setState(0x3dd8, 0xac5b, 0xbd90, 0xb05a, 0x6bf, 0x5998, 0x1, 0x1);
        gbc.writeMem(0x3dd8, { 0x44 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xac5b, gbc.sp());
        EXPECT(0x3dd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 01F1
        gbc.setState(0x38b2, 0xbc46, 0xc9d0, 0x59cf, 0xc26e, 0x883b, 0x1, 0x0);
        gbc.writeMem(0x38b2, { 0x44 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xbc46, gbc.sp());
        EXPECT(0x38b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 01F2
        gbc.setState(0x7d50, 0xc9ca, 0x1d30, 0xb9d, 0xa70d, 0x4b15, 0x1, 0x1);
        gbc.writeMem(0x7d50, { 0x44 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xc9ca, gbc.sp());
        EXPECT(0x7d51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 01F3
        gbc.setState(0x452f, 0x4887, 0x2090, 0xab63, 0x5e81, 0x383a, 0x0, 0x1);
        gbc.writeMem(0x452f, { 0x44 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4887, gbc.sp());
        EXPECT(0x4530, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 01F5
        gbc.setState(0xb220, 0x8a0b, 0x29f0, 0x94d7, 0x66e1, 0xa96c, 0x0, 0x1);
        gbc.writeMem(0xb220, { 0x44 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x8a0b, gbc.sp());
        EXPECT(0xb221, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xb220));
        // 44 01F6
        gbc.setState(0xeb20, 0x2855, 0x1270, 0xb7c, 0x2c82, 0x143b, 0x1, 0x1);
        gbc.writeMem(0xeb20, { 0x44 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x2855, gbc.sp());
        EXPECT(0xeb21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xeb20));
        // 44 01F7
        gbc.setState(0x5707, 0xe198, 0xace0, 0xbb41, 0xc302, 0xf911, 0x0, 0x1);
        gbc.writeMem(0x5707, { 0x44 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xe198, gbc.sp());
        EXPECT(0x5708, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 01F8
        gbc.setState(0x59e1, 0xf503, 0x31f0, 0xbeb0, 0xf798, 0xdb9e, 0x0, 0x1);
        gbc.writeMem(0x59e1, { 0x44 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xf503, gbc.sp());
        EXPECT(0x59e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 01F9
        gbc.setState(0x2404, 0x55d3, 0x2890, 0xfea1, 0x88c6, 0xfd54, 0x0, 0x0);
        gbc.writeMem(0x2404, { 0x44 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x55d3, gbc.sp());
        EXPECT(0x2405, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 01FB
        gbc.setState(0x4780, 0xbc1, 0xa690, 0xaf7e, 0xcf03, 0x912c, 0x0, 0x0);
        gbc.writeMem(0x4780, { 0x44 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xbc1, gbc.sp());
        EXPECT(0x4781, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 01FC
        gbc.setState(0xc5ba, 0x6633, 0xc540, 0xeffc, 0x821e, 0xb83e, 0x1, 0x0);
        gbc.writeMem(0xc5ba, { 0x44 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x6633, gbc.sp());
        EXPECT(0xc5bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xc5ba));
        // 44 01FE
        gbc.setState(0x386b, 0x17d4, 0x4b10, 0x1223, 0x4ad3, 0x8728, 0x1, 0x1);
        gbc.writeMem(0x386b, { 0x44 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x17d4, gbc.sp());
        EXPECT(0x386c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 01FF
        gbc.setState(0x8d66, 0x5342, 0xae10, 0x428f, 0x8ea7, 0xebb8, 0x1, 0x1);
        gbc.writeMem(0x8d66, { 0x44 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x5342, gbc.sp());
        EXPECT(0x8d67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x8d66));
        // 44 0200
        gbc.setState(0x6ec4, 0x80f6, 0xb480, 0xe91d, 0xc784, 0xa12c, 0x0, 0x1);
        gbc.writeMem(0x6ec4, { 0x44 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x80f6, gbc.sp());
        EXPECT(0x6ec5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0201
        gbc.setState(0x1641, 0xbb43, 0xeed0, 0xb1f8, 0x6835, 0x5326, 0x1, 0x0);
        gbc.writeMem(0x1641, { 0x44 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xbb43, gbc.sp());
        EXPECT(0x1642, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0202
        gbc.setState(0x40a2, 0x27d0, 0xee80, 0xaf69, 0x630e, 0xd204, 0x1, 0x0);
        gbc.writeMem(0x40a2, { 0x44 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x27d0, gbc.sp());
        EXPECT(0x40a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0203
        gbc.setState(0x54a2, 0x1ff, 0x56f0, 0xfaaf, 0xac54, 0x5ceb, 0x0, 0x1);
        gbc.writeMem(0x54a2, { 0x44 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x1ff, gbc.sp());
        EXPECT(0x54a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0204
        gbc.setState(0x831e, 0x36db, 0xd9e0, 0x8af9, 0xc448, 0x4602, 0x1, 0x0);
        gbc.writeMem(0x831e, { 0x44 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x36db, gbc.sp());
        EXPECT(0x831f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x831e));
        // 44 0205
        gbc.setState(0x9a10, 0xf6cc, 0x9c0, 0x57c5, 0x2739, 0x5057, 0x1, 0x0);
        gbc.writeMem(0x9a10, { 0x44 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xf6cc, gbc.sp());
        EXPECT(0x9a11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x9a10));
        // 44 0207
        gbc.setState(0x84d8, 0x33be, 0x4000, 0x554f, 0x8324, 0xf43, 0x0, 0x0);
        gbc.writeMem(0x84d8, { 0x44 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x33be, gbc.sp());
        EXPECT(0x84d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x84d8));
        // 44 0208
        gbc.setState(0x1a5, 0x3f7b, 0x92d0, 0xefc7, 0xb62a, 0xbf47, 0x1, 0x0);
        gbc.writeMem(0x1a5, { 0x44 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x3f7b, gbc.sp());
        EXPECT(0x1a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0209
        gbc.setState(0x1511, 0x25fa, 0xdda0, 0xa0b6, 0x4717, 0xbae0, 0x0, 0x0);
        gbc.writeMem(0x1511, { 0x44 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x25fa, gbc.sp());
        EXPECT(0x1512, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 020A
        gbc.setState(0x90ad, 0x9f04, 0xb410, 0x5dec, 0x529d, 0x490d, 0x1, 0x0);
        gbc.writeMem(0x90ad, { 0x44 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9f04, gbc.sp());
        EXPECT(0x90ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x90ad));
        // 44 020B
        gbc.setState(0x9ab5, 0xb4f3, 0x9ca0, 0xe821, 0x8ff, 0xd9d7, 0x1, 0x0);
        gbc.writeMem(0x9ab5, { 0x44 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xb4f3, gbc.sp());
        EXPECT(0x9ab6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x9ab5));
        // 44 020C
        gbc.setState(0xb97d, 0x2717, 0x43d0, 0xf90c, 0xef53, 0x946c, 0x1, 0x1);
        gbc.writeMem(0xb97d, { 0x44 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2717, gbc.sp());
        EXPECT(0xb97e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xb97d));
        // 44 020D
        gbc.setState(0x1b63, 0x4902, 0x6010, 0x9889, 0xdfdc, 0xea7, 0x0, 0x0);
        gbc.writeMem(0x1b63, { 0x44 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x4902, gbc.sp());
        EXPECT(0x1b64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 020E
        gbc.setState(0xda33, 0x466a, 0x35e0, 0x8433, 0x44a0, 0x1e7e, 0x1, 0x0);
        gbc.writeMem(0xda33, { 0x44 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x466a, gbc.sp());
        EXPECT(0xda34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xda33));
        // 44 020F
        gbc.setState(0x14ec, 0xb98a, 0x77b0, 0x7c7e, 0xba8, 0xea0f, 0x0, 0x0);
        gbc.writeMem(0x14ec, { 0x44 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xb98a, gbc.sp());
        EXPECT(0x14ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0210
        gbc.setState(0xcd5f, 0xb999, 0xe100, 0x229a, 0x54fd, 0x286f, 0x1, 0x1);
        gbc.writeMem(0xcd5f, { 0x44 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xb999, gbc.sp());
        EXPECT(0xcd60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xcd5f));
        // 44 0211
        gbc.setState(0xe380, 0xc3f8, 0x7480, 0x89ff, 0x8ad6, 0x75a6, 0x0, 0x0);
        gbc.writeMem(0xe380, { 0x44 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xc3f8, gbc.sp());
        EXPECT(0xe381, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xe380));
        // 44 0212
        gbc.setState(0x1451, 0xc2c9, 0xa610, 0x3c63, 0x68e4, 0xf2e2, 0x0, 0x1);
        gbc.writeMem(0x1451, { 0x44 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xc2c9, gbc.sp());
        EXPECT(0x1452, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0213
        gbc.setState(0x1262, 0x95cf, 0x33a0, 0xbedf, 0x88b1, 0x86d8, 0x1, 0x1);
        gbc.writeMem(0x1262, { 0x44 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x95cf, gbc.sp());
        EXPECT(0x1263, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0214
        gbc.setState(0x20cd, 0x8d0f, 0x4d0, 0x5b8c, 0x6888, 0xaba8, 0x1, 0x1);
        gbc.writeMem(0x20cd, { 0x44 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x8d0f, gbc.sp());
        EXPECT(0x20ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0215
        gbc.setState(0x81d5, 0xb9ab, 0x7110, 0xde99, 0xe17b, 0xc328, 0x0, 0x1);
        gbc.writeMem(0x81d5, { 0x44 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xb9ab, gbc.sp());
        EXPECT(0x81d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x81d5));
        // 44 0216
        gbc.setState(0x48cb, 0x2362, 0xeec0, 0xcd7e, 0x6a49, 0x338c, 0x0, 0x0);
        gbc.writeMem(0x48cb, { 0x44 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2362, gbc.sp());
        EXPECT(0x48cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0217
        gbc.setState(0x6f94, 0x93bd, 0x2da0, 0xe8f5, 0xe223, 0x43e3, 0x1, 0x1);
        gbc.writeMem(0x6f94, { 0x44 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x93bd, gbc.sp());
        EXPECT(0x6f95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0219
        gbc.setState(0x7b09, 0x8afb, 0xfef0, 0x21e4, 0x1ef6, 0x2d6a, 0x0, 0x0);
        gbc.writeMem(0x7b09, { 0x44 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x8afb, gbc.sp());
        EXPECT(0x7b0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 021A
        gbc.setState(0x345d, 0x917e, 0xd7e0, 0xae8b, 0xda17, 0xe42a, 0x1, 0x1);
        gbc.writeMem(0x345d, { 0x44 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x917e, gbc.sp());
        EXPECT(0x345e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 021B
        gbc.setState(0xeaf7, 0xd9aa, 0xe7a0, 0x649b, 0xcdfa, 0xf48c, 0x1, 0x0);
        gbc.writeMem(0xeaf7, { 0x44 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xd9aa, gbc.sp());
        EXPECT(0xeaf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xeaf7));
        // 44 021C
        gbc.setState(0xa445, 0xef37, 0x9450, 0xba6e, 0x8bca, 0xe227, 0x1, 0x1);
        gbc.writeMem(0xa445, { 0x44 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xef37, gbc.sp());
        EXPECT(0xa446, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa445));
        // 44 021D
        gbc.setState(0x5026, 0xebc8, 0x5420, 0x171f, 0x9ae9, 0x2409, 0x0, 0x0);
        gbc.writeMem(0x5026, { 0x44 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xebc8, gbc.sp());
        EXPECT(0x5027, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 021E
        gbc.setState(0xc077, 0xe7f1, 0x4c40, 0xc15b, 0x50ff, 0x29d6, 0x1, 0x1);
        gbc.writeMem(0xc077, { 0x44 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xe7f1, gbc.sp());
        EXPECT(0xc078, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xc077));
        // 44 021F
        gbc.setState(0x8308, 0x18b0, 0xe990, 0x4264, 0xee1e, 0x22ac, 0x1, 0x1);
        gbc.writeMem(0x8308, { 0x44 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x18b0, gbc.sp());
        EXPECT(0x8309, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x8308));
        // 44 0220
        gbc.setState(0x7329, 0xce83, 0x9c70, 0x8c63, 0x2836, 0x71aa, 0x1, 0x0);
        gbc.writeMem(0x7329, { 0x44 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xce83, gbc.sp());
        EXPECT(0x732a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0221
        gbc.setState(0xb6eb, 0x1062, 0x1eb0, 0xf185, 0xa28a, 0xd469, 0x1, 0x0);
        gbc.writeMem(0xb6eb, { 0x44 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1062, gbc.sp());
        EXPECT(0xb6ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xb6eb));
        // 44 0222
        gbc.setState(0xab68, 0xcd83, 0x8c60, 0x2133, 0xd753, 0x90d0, 0x0, 0x0);
        gbc.writeMem(0xab68, { 0x44 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xcd83, gbc.sp());
        EXPECT(0xab69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xab68));
        // 44 0223
        gbc.setState(0x926f, 0xf696, 0x2940, 0xf73e, 0xf231, 0x927f, 0x0, 0x1);
        gbc.writeMem(0x926f, { 0x44 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf696, gbc.sp());
        EXPECT(0x9270, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x926f));
        // 44 0224
        gbc.setState(0xd7b9, 0x4d60, 0x8f0, 0x3679, 0x18bf, 0xb5fd, 0x1, 0x1);
        gbc.writeMem(0xd7b9, { 0x44 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x4d60, gbc.sp());
        EXPECT(0xd7ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xd7b9));
        // 44 0225
        gbc.setState(0x3376, 0xc4de, 0xe0f0, 0xc680, 0xc32b, 0x6a64, 0x1, 0x1);
        gbc.writeMem(0x3376, { 0x44 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xc4de, gbc.sp());
        EXPECT(0x3377, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0226
        gbc.setState(0x3196, 0x3d56, 0xb690, 0xd48c, 0xa03f, 0x2df3, 0x1, 0x0);
        gbc.writeMem(0x3196, { 0x44 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x3d56, gbc.sp());
        EXPECT(0x3197, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0227
        gbc.setState(0x1526, 0xe686, 0x9580, 0x77f5, 0x17e4, 0x6d89, 0x0, 0x0);
        gbc.writeMem(0x1526, { 0x44 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xe686, gbc.sp());
        EXPECT(0x1527, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0228
        gbc.setState(0x47b, 0xae80, 0x1bd0, 0x9193, 0x80d1, 0xdc6f, 0x0, 0x0);
        gbc.writeMem(0x47b, { 0x44 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xae80, gbc.sp());
        EXPECT(0x47c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0229
        gbc.setState(0xd49c, 0xfa65, 0xa9f0, 0xecec, 0x7d75, 0x2518, 0x0, 0x0);
        gbc.writeMem(0xd49c, { 0x44 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xfa65, gbc.sp());
        EXPECT(0xd49d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xd49c));
        // 44 022A
        gbc.setState(0x90a, 0x23eb, 0xfc50, 0xb624, 0x9204, 0xc643, 0x0, 0x1);
        gbc.writeMem(0x90a, { 0x44 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x23eb, gbc.sp());
        EXPECT(0x90b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 022B
        gbc.setState(0x5d6d, 0xb60b, 0x8080, 0x9162, 0x2f83, 0xfc57, 0x0, 0x0);
        gbc.writeMem(0x5d6d, { 0x44 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xb60b, gbc.sp());
        EXPECT(0x5d6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 022C
        gbc.setState(0x74ab, 0x3c4a, 0x8a10, 0x884a, 0x6157, 0xa4bd, 0x1, 0x1);
        gbc.writeMem(0x74ab, { 0x44 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3c4a, gbc.sp());
        EXPECT(0x74ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 022D
        gbc.setState(0xd4a9, 0x1adc, 0x3f60, 0xd186, 0xb5dd, 0x2524, 0x0, 0x1);
        gbc.writeMem(0xd4a9, { 0x44 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x1adc, gbc.sp());
        EXPECT(0xd4aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xd4a9));
        // 44 022F
        gbc.setState(0x44f, 0xd709, 0x7d10, 0x6701, 0x9636, 0x6345, 0x1, 0x0);
        gbc.writeMem(0x44f, { 0x44 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xd709, gbc.sp());
        EXPECT(0x450, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0230
        gbc.setState(0x7ede, 0x5c9d, 0x30c0, 0x225d, 0x4d27, 0x6496, 0x0, 0x0);
        gbc.writeMem(0x7ede, { 0x44 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x5c9d, gbc.sp());
        EXPECT(0x7edf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0231
        gbc.setState(0xa912, 0xac2d, 0x1dc0, 0x3859, 0x2374, 0x2d18, 0x0, 0x0);
        gbc.writeMem(0xa912, { 0x44 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xac2d, gbc.sp());
        EXPECT(0xa913, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa912));
        // 44 0232
        gbc.setState(0x9a46, 0xc74b, 0xd100, 0xfe2d, 0xab96, 0x25cc, 0x0, 0x1);
        gbc.writeMem(0x9a46, { 0x44 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc74b, gbc.sp());
        EXPECT(0x9a47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x9a46));
        // 44 0233
        gbc.setState(0x6975, 0xed9, 0x1180, 0xb479, 0x56c2, 0x4967, 0x0, 0x1);
        gbc.writeMem(0x6975, { 0x44 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xed9, gbc.sp());
        EXPECT(0x6976, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0234
        gbc.setState(0xb87b, 0xcc21, 0x1750, 0xdf44, 0x4e02, 0xc98, 0x0, 0x1);
        gbc.writeMem(0xb87b, { 0x44 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xcc21, gbc.sp());
        EXPECT(0xb87c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xb87b));
        // 44 0235
        gbc.setState(0xcb24, 0x3a7, 0x67c0, 0x674a, 0xf058, 0x2429, 0x0, 0x1);
        gbc.writeMem(0xcb24, { 0x44 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x3a7, gbc.sp());
        EXPECT(0xcb25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xcb24));
        // 44 0236
        gbc.setState(0x1617, 0xa490, 0xbe10, 0x5954, 0xa01b, 0x64c6, 0x0, 0x1);
        gbc.writeMem(0x1617, { 0x44 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xa490, gbc.sp());
        EXPECT(0x1618, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0237
        gbc.setState(0x4adb, 0x4e84, 0xc240, 0xa3f9, 0xfb3e, 0x36e2, 0x0, 0x1);
        gbc.writeMem(0x4adb, { 0x44 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4e84, gbc.sp());
        EXPECT(0x4adc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0238
        gbc.setState(0x636b, 0x18ee, 0x63c0, 0x7738, 0x9169, 0x8c19, 0x1, 0x1);
        gbc.writeMem(0x636b, { 0x44 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x18ee, gbc.sp());
        EXPECT(0x636c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0239
        gbc.setState(0x8804, 0xf715, 0xa510, 0x89f4, 0xfae4, 0xd256, 0x1, 0x0);
        gbc.writeMem(0x8804, { 0x44 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xf715, gbc.sp());
        EXPECT(0x8805, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x8804));
        // 44 023A
        gbc.setState(0x8f3e, 0xd8b9, 0x2b60, 0xf240, 0x5973, 0x23ed, 0x0, 0x0);
        gbc.writeMem(0x8f3e, { 0x44 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd8b9, gbc.sp());
        EXPECT(0x8f3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x8f3e));
        // 44 023B
        gbc.setState(0x84b2, 0xa4d1, 0xd180, 0xdb0d, 0xc274, 0xe922, 0x0, 0x0);
        gbc.writeMem(0x84b2, { 0x44 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xa4d1, gbc.sp());
        EXPECT(0x84b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x84b2));
        // 44 023C
        gbc.setState(0x1ba9, 0xb295, 0xff70, 0x92e6, 0xcd0e, 0x4257, 0x1, 0x0);
        gbc.writeMem(0x1ba9, { 0x44 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xb295, gbc.sp());
        EXPECT(0x1baa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 023D
        gbc.setState(0xd791, 0x7c01, 0xa0b0, 0x2b7e, 0x17fc, 0xed21, 0x1, 0x1);
        gbc.writeMem(0xd791, { 0x44 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x7c01, gbc.sp());
        EXPECT(0xd792, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xd791));
        // 44 023E
        gbc.setState(0xb74b, 0x1917, 0x4360, 0x2c2f, 0x7b35, 0x99ab, 0x0, 0x1);
        gbc.writeMem(0xb74b, { 0x44 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x1917, gbc.sp());
        EXPECT(0xb74c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xb74b));
        // 44 023F
        gbc.setState(0xdf4a, 0x61f1, 0x8cc0, 0x458c, 0x617, 0x37b2, 0x0, 0x1);
        gbc.writeMem(0xdf4a, { 0x44 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x61f1, gbc.sp());
        EXPECT(0xdf4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xdf4a));
        // 44 0240
        gbc.setState(0x4679, 0x389d, 0x5580, 0x712b, 0x9ab2, 0x3744, 0x1, 0x0);
        gbc.writeMem(0x4679, { 0x44 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x389d, gbc.sp());
        EXPECT(0x467a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0241
        gbc.setState(0x7dc7, 0x2e75, 0xbcc0, 0x226f, 0x9c9f, 0x4a0c, 0x0, 0x1);
        gbc.writeMem(0x7dc7, { 0x44 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x2e75, gbc.sp());
        EXPECT(0x7dc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0242
        gbc.setState(0xd006, 0xf59c, 0xc390, 0x32b8, 0x5e55, 0xdd22, 0x1, 0x1);
        gbc.writeMem(0xd006, { 0x44 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xf59c, gbc.sp());
        EXPECT(0xd007, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xd006));
        // 44 0243
        gbc.setState(0xa7c6, 0xda35, 0x44c0, 0xd8af, 0x40eb, 0x311a, 0x0, 0x0);
        gbc.writeMem(0xa7c6, { 0x44 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xda35, gbc.sp());
        EXPECT(0xa7c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa7c6));
        // 44 0244
        gbc.setState(0xef3c, 0xe7d2, 0xf880, 0x3523, 0xaf9c, 0x25a0, 0x1, 0x0);
        gbc.writeMem(0xef3c, { 0x44 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe7d2, gbc.sp());
        EXPECT(0xef3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xef3c));
        // 44 0245
        gbc.setState(0x52e4, 0xdd52, 0x4bb0, 0x1efc, 0x4969, 0x6ed1, 0x1, 0x0);
        gbc.writeMem(0x52e4, { 0x44 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xdd52, gbc.sp());
        EXPECT(0x52e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0248
        gbc.setState(0xda04, 0x3dc1, 0x9690, 0xc9, 0xa49b, 0x2fd0, 0x1, 0x0);
        gbc.writeMem(0xda04, { 0x44 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x3dc1, gbc.sp());
        EXPECT(0xda05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xda04));
        // 44 0249
        gbc.setState(0xde1b, 0xfa83, 0xb410, 0x30b4, 0x4eac, 0x3720, 0x0, 0x0);
        gbc.writeMem(0xde1b, { 0x44 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xfa83, gbc.sp());
        EXPECT(0xde1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xde1b));
        // 44 024A
        gbc.setState(0x141b, 0xc547, 0xc170, 0x1317, 0xf5a1, 0x803d, 0x0, 0x1);
        gbc.writeMem(0x141b, { 0x44 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xc547, gbc.sp());
        EXPECT(0x141c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 024B
        gbc.setState(0xa903, 0xfed0, 0xe3b0, 0xa434, 0x67e3, 0xa269, 0x0, 0x1);
        gbc.writeMem(0xa903, { 0x44 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xfed0, gbc.sp());
        EXPECT(0xa904, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa903));
        // 44 024C
        gbc.setState(0x6117, 0x94c, 0x9990, 0xbdfc, 0xcfb0, 0x6598, 0x0, 0x1);
        gbc.writeMem(0x6117, { 0x44 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x94c, gbc.sp());
        EXPECT(0x6118, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 024D
        gbc.setState(0x2ac3, 0xd4b6, 0x2af0, 0x4cf9, 0x5d83, 0x3865, 0x1, 0x0);
        gbc.writeMem(0x2ac3, { 0x44 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xd4b6, gbc.sp());
        EXPECT(0x2ac4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 024E
        gbc.setState(0x213c, 0x673b, 0x5dd0, 0xfaaf, 0x756f, 0x3bcc, 0x1, 0x1);
        gbc.writeMem(0x213c, { 0x44 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x673b, gbc.sp());
        EXPECT(0x213d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 024F
        gbc.setState(0x398, 0x9776, 0x2c50, 0xb746, 0xdc10, 0x8e76, 0x0, 0x1);
        gbc.writeMem(0x398, { 0x44 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x9776, gbc.sp());
        EXPECT(0x399, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0250
        gbc.setState(0xaab7, 0xde0f, 0x4be0, 0xd683, 0x7c12, 0xb868, 0x1, 0x0);
        gbc.writeMem(0xaab7, { 0x44 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xde0f, gbc.sp());
        EXPECT(0xaab8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xaab7));
        // 44 0251
        gbc.setState(0x8c7e, 0x5581, 0x8bc0, 0x6299, 0x30c8, 0x8640, 0x1, 0x1);
        gbc.writeMem(0x8c7e, { 0x44 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x5581, gbc.sp());
        EXPECT(0x8c7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x8c7e));
        // 44 0252
        gbc.setState(0x92eb, 0xb5e7, 0x8770, 0x2bbb, 0x89d3, 0xf2b4, 0x1, 0x0);
        gbc.writeMem(0x92eb, { 0x44 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xb5e7, gbc.sp());
        EXPECT(0x92ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x92eb));
        // 44 0253
        gbc.setState(0xb0e7, 0x8d03, 0x45f0, 0xe7e4, 0x2508, 0xb352, 0x0, 0x1);
        gbc.writeMem(0xb0e7, { 0x44 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x8d03, gbc.sp());
        EXPECT(0xb0e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xb0e7));
        // 44 0254
        gbc.setState(0x2d9, 0xedc4, 0xf570, 0xa7a, 0xedd2, 0xa280, 0x1, 0x0);
        gbc.writeMem(0x2d9, { 0x44 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xedc4, gbc.sp());
        EXPECT(0x2da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0256
        gbc.setState(0xbb01, 0x9eb8, 0x2c0, 0xbf5c, 0x6b03, 0x1e54, 0x1, 0x1);
        gbc.writeMem(0xbb01, { 0x44 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x9eb8, gbc.sp());
        EXPECT(0xbb02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xbb01));
        // 44 0257
        gbc.setState(0x6fd, 0xccee, 0x1e10, 0xd9be, 0x8c1f, 0xc7c1, 0x1, 0x0);
        gbc.writeMem(0x6fd, { 0x44 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xccee, gbc.sp());
        EXPECT(0x6fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0258
        gbc.setState(0x18fa, 0x3b71, 0xda80, 0xf50a, 0xf723, 0xbd26, 0x0, 0x0);
        gbc.writeMem(0x18fa, { 0x44 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x3b71, gbc.sp());
        EXPECT(0x18fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0259
        gbc.setState(0x7aed, 0xa374, 0xff90, 0x89aa, 0xe106, 0x8b79, 0x0, 0x0);
        gbc.writeMem(0x7aed, { 0x44 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xa374, gbc.sp());
        EXPECT(0x7aee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 025A
        gbc.setState(0x224d, 0x64d4, 0x1ca0, 0x66b6, 0x42c8, 0xe416, 0x1, 0x1);
        gbc.writeMem(0x224d, { 0x44 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x64d4, gbc.sp());
        EXPECT(0x224e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 025B
        gbc.setState(0xdc9b, 0x76c9, 0x4140, 0x7bd3, 0xbebe, 0xc4b2, 0x0, 0x1);
        gbc.writeMem(0xdc9b, { 0x44 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x76c9, gbc.sp());
        EXPECT(0xdc9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xdc9b));
        // 44 025C
        gbc.setState(0x2fb3, 0x8697, 0x170, 0xcf2, 0xf7e, 0xefde, 0x1, 0x1);
        gbc.writeMem(0x2fb3, { 0x44 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x8697, gbc.sp());
        EXPECT(0x2fb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 025D
        gbc.setState(0x62a, 0x1920, 0x8fe0, 0xe70a, 0x683, 0x44ed, 0x0, 0x1);
        gbc.writeMem(0x62a, { 0x44 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1920, gbc.sp());
        EXPECT(0x62b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 025E
        gbc.setState(0xdfbe, 0xc8f2, 0x12f0, 0x8da9, 0xb2c7, 0x3b5c, 0x1, 0x1);
        gbc.writeMem(0xdfbe, { 0x44 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xc8f2, gbc.sp());
        EXPECT(0xdfbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xdfbe));
        // 44 025F
        gbc.setState(0x1bd6, 0x3cf2, 0x9900, 0x840b, 0x7c6c, 0x5221, 0x0, 0x1);
        gbc.writeMem(0x1bd6, { 0x44 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x3cf2, gbc.sp());
        EXPECT(0x1bd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0260
        gbc.setState(0x7f70, 0x967, 0xbf90, 0x59a6, 0x38e4, 0x2cc8, 0x1, 0x0);
        gbc.writeMem(0x7f70, { 0x44 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x967, gbc.sp());
        EXPECT(0x7f71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0261
        gbc.setState(0x230c, 0x1794, 0x1d70, 0x2bda, 0x26b6, 0xa7d7, 0x0, 0x1);
        gbc.writeMem(0x230c, { 0x44 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x1794, gbc.sp());
        EXPECT(0x230d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0262
        gbc.setState(0x3e46, 0xe48c, 0x8420, 0xc1ab, 0x8c8d, 0x31b2, 0x0, 0x0);
        gbc.writeMem(0x3e46, { 0x44 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe48c, gbc.sp());
        EXPECT(0x3e47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0263
        gbc.setState(0x87b8, 0x3aa, 0x9e00, 0x8560, 0xfed2, 0x3b06, 0x1, 0x0);
        gbc.writeMem(0x87b8, { 0x44 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x3aa, gbc.sp());
        EXPECT(0x87b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x87b8));
        // 44 0264
        gbc.setState(0x45e9, 0xa1a5, 0x2560, 0x8753, 0xc5f, 0xcd86, 0x1, 0x1);
        gbc.writeMem(0x45e9, { 0x44 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xa1a5, gbc.sp());
        EXPECT(0x45ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0265
        gbc.setState(0x939, 0x4b3, 0xcc70, 0xaee9, 0xb7fb, 0x4f62, 0x1, 0x0);
        gbc.writeMem(0x939, { 0x44 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4b3, gbc.sp());
        EXPECT(0x93a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0267
        gbc.setState(0x1efb, 0x9426, 0x1fc0, 0x76e8, 0xe4d7, 0x53d3, 0x1, 0x0);
        gbc.writeMem(0x1efb, { 0x44 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x9426, gbc.sp());
        EXPECT(0x1efc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0269
        gbc.setState(0x874b, 0xe69b, 0xc790, 0xcd47, 0xa571, 0x67a1, 0x1, 0x1);
        gbc.writeMem(0x874b, { 0x44 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe69b, gbc.sp());
        EXPECT(0x874c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x874b));
        // 44 026A
        gbc.setState(0x3552, 0xd289, 0x5d60, 0xb40f, 0x20b7, 0xed9e, 0x0, 0x1);
        gbc.writeMem(0x3552, { 0x44 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xd289, gbc.sp());
        EXPECT(0x3553, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 026B
        gbc.setState(0x150f, 0x3f51, 0x6310, 0x7617, 0x2c05, 0x8b74, 0x0, 0x1);
        gbc.writeMem(0x150f, { 0x44 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x3f51, gbc.sp());
        EXPECT(0x1510, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 026D
        gbc.setState(0xcd68, 0x3dbd, 0x3ed0, 0x5fb8, 0x554b, 0x932f, 0x1, 0x0);
        gbc.writeMem(0xcd68, { 0x44 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x3dbd, gbc.sp());
        EXPECT(0xcd69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xcd68));
        // 44 026E
        gbc.setState(0xad47, 0xfe5, 0xa510, 0xf344, 0x4d3a, 0xf1e3, 0x0, 0x0);
        gbc.writeMem(0xad47, { 0x44 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xfe5, gbc.sp());
        EXPECT(0xad48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xad47));
        // 44 026F
        gbc.setState(0x6e94, 0xa728, 0x2080, 0x2ea4, 0xdeed, 0xa34, 0x0, 0x0);
        gbc.writeMem(0x6e94, { 0x44 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xa728, gbc.sp());
        EXPECT(0x6e95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0270
        gbc.setState(0x75bc, 0xdd07, 0xfb80, 0xf12, 0x344f, 0x4ddb, 0x1, 0x1);
        gbc.writeMem(0x75bc, { 0x44 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xdd07, gbc.sp());
        EXPECT(0x75bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0271
        gbc.setState(0x9dad, 0xb66d, 0x4b50, 0x9c87, 0x5f58, 0xb6c7, 0x0, 0x1);
        gbc.writeMem(0x9dad, { 0x44 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb66d, gbc.sp());
        EXPECT(0x9dae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x9dad));
        // 44 0272
        gbc.setState(0xe9ea, 0x15a8, 0xfb70, 0x38e8, 0x1d24, 0xe255, 0x0, 0x1);
        gbc.writeMem(0xe9ea, { 0x44 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x15a8, gbc.sp());
        EXPECT(0xe9eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xe9ea));
        // 44 0273
        gbc.setState(0x72a9, 0xaba0, 0x89b0, 0x827, 0x9c01, 0x7a99, 0x0, 0x1);
        gbc.writeMem(0x72a9, { 0x44 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xaba0, gbc.sp());
        EXPECT(0x72aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0274
        gbc.setState(0x7dd, 0x7466, 0xe040, 0x1964, 0xea78, 0x1853, 0x1, 0x1);
        gbc.writeMem(0x7dd, { 0x44 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x7466, gbc.sp());
        EXPECT(0x7de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0275
        gbc.setState(0x53c0, 0x397, 0x6800, 0xb12d, 0x1598, 0xa12b, 0x0, 0x0);
        gbc.writeMem(0x53c0, { 0x44 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x397, gbc.sp());
        EXPECT(0x53c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0276
        gbc.setState(0x5e6, 0x1665, 0x67f0, 0xab04, 0xc022, 0xb107, 0x0, 0x1);
        gbc.writeMem(0x5e6, { 0x44 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x1665, gbc.sp());
        EXPECT(0x5e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0277
        gbc.setState(0xde2f, 0xc13e, 0x48c0, 0xf2bb, 0x49cc, 0x5fd8, 0x1, 0x0);
        gbc.writeMem(0xde2f, { 0x44 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc13e, gbc.sp());
        EXPECT(0xde30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xde2f));
        // 44 0278
        gbc.setState(0xe6ec, 0x661b, 0xd070, 0xcb17, 0xb7bd, 0xad5d, 0x1, 0x0);
        gbc.writeMem(0xe6ec, { 0x44 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x661b, gbc.sp());
        EXPECT(0xe6ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xe6ec));
        // 44 0279
        gbc.setState(0xccfb, 0x5f1b, 0x54b0, 0xe8bc, 0x52dd, 0xf01f, 0x1, 0x0);
        gbc.writeMem(0xccfb, { 0x44 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5f1b, gbc.sp());
        EXPECT(0xccfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xccfb));
        // 44 027A
        gbc.setState(0x5668, 0xc5cf, 0xda30, 0xb7be, 0xa2ee, 0xa0c4, 0x1, 0x1);
        gbc.writeMem(0x5668, { 0x44 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xc5cf, gbc.sp());
        EXPECT(0x5669, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 027B
        gbc.setState(0xea8c, 0x5359, 0x4c80, 0x1d13, 0x8713, 0x58c6, 0x1, 0x1);
        gbc.writeMem(0xea8c, { 0x44 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x5359, gbc.sp());
        EXPECT(0xea8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xea8c));
        // 44 027C
        gbc.setState(0xa39f, 0x4ca7, 0xc210, 0x9ada, 0x4c57, 0x723f, 0x0, 0x1);
        gbc.writeMem(0xa39f, { 0x44 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x4ca7, gbc.sp());
        EXPECT(0xa3a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa39f));
        // 44 027D
        gbc.setState(0x18cf, 0x2224, 0xd090, 0x52c7, 0x5608, 0x9f7f, 0x0, 0x0);
        gbc.writeMem(0x18cf, { 0x44 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2224, gbc.sp());
        EXPECT(0x18d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 027E
        gbc.setState(0xbc56, 0xf7e6, 0xcc20, 0x382d, 0x4650, 0x168c, 0x1, 0x0);
        gbc.writeMem(0xbc56, { 0x44 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xf7e6, gbc.sp());
        EXPECT(0xbc57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xbc56));
        // 44 027F
        gbc.setState(0x3015, 0xcb56, 0xc9d0, 0x6e74, 0x7757, 0xdcd6, 0x0, 0x1);
        gbc.writeMem(0x3015, { 0x44 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xcb56, gbc.sp());
        EXPECT(0x3016, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0280
        gbc.setState(0xd971, 0xa337, 0x61d0, 0x5646, 0xfd, 0xb8af, 0x0, 0x0);
        gbc.writeMem(0xd971, { 0x44 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa337, gbc.sp());
        EXPECT(0xd972, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xd971));
        // 44 0281
        gbc.setState(0x19bd, 0xc73d, 0x6920, 0xfe12, 0x8cb4, 0xc6d5, 0x1, 0x1);
        gbc.writeMem(0x19bd, { 0x44 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xc73d, gbc.sp());
        EXPECT(0x19be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0284
        gbc.setState(0xacef, 0xb2c, 0xf8f0, 0xec95, 0xb3b3, 0xb21d, 0x1, 0x1);
        gbc.writeMem(0xacef, { 0x44 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xb2c, gbc.sp());
        EXPECT(0xacf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xacef));
        // 44 0285
        gbc.setState(0x3113, 0xdcc0, 0xb5c0, 0xae3e, 0x87c5, 0xcf19, 0x1, 0x1);
        gbc.writeMem(0x3113, { 0x44 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xdcc0, gbc.sp());
        EXPECT(0x3114, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0287
        gbc.setState(0x90b9, 0x9f46, 0xfc80, 0x6e33, 0x1f79, 0xf3f3, 0x1, 0x1);
        gbc.writeMem(0x90b9, { 0x44 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x9f46, gbc.sp());
        EXPECT(0x90ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x90b9));
        // 44 0288
        gbc.setState(0xbb33, 0xcc48, 0x12b0, 0x6424, 0x5256, 0x636b, 0x0, 0x1);
        gbc.writeMem(0xbb33, { 0x44 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xcc48, gbc.sp());
        EXPECT(0xbb34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xbb33));
        // 44 0289
        gbc.setState(0x404, 0xf434, 0x2060, 0x6dc6, 0x94cf, 0x8cbb, 0x0, 0x1);
        gbc.writeMem(0x404, { 0x44 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xf434, gbc.sp());
        EXPECT(0x405, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 028A
        gbc.setState(0x5db9, 0xa2ef, 0x82e0, 0xf8d0, 0xa863, 0x4ecd, 0x0, 0x0);
        gbc.writeMem(0x5db9, { 0x44 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xa2ef, gbc.sp());
        EXPECT(0x5dba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 028B
        gbc.setState(0x84eb, 0x898b, 0x8ed0, 0xb6c7, 0xdceb, 0xe38f, 0x1, 0x0);
        gbc.writeMem(0x84eb, { 0x44 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x898b, gbc.sp());
        EXPECT(0x84ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x84eb));
        // 44 028C
        gbc.setState(0x377a, 0xe022, 0xeab0, 0x89d1, 0x456a, 0x212, 0x1, 0x0);
        gbc.writeMem(0x377a, { 0x44 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe022, gbc.sp());
        EXPECT(0x377b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 028D
        gbc.setState(0x6906, 0x89ac, 0xc6b0, 0xe7d7, 0x5503, 0xb88a, 0x0, 0x0);
        gbc.writeMem(0x6906, { 0x44 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x89ac, gbc.sp());
        EXPECT(0x6907, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 028E
        gbc.setState(0x3df1, 0xf98, 0x9d80, 0x5e3f, 0xb6e9, 0x79c6, 0x1, 0x1);
        gbc.writeMem(0x3df1, { 0x44 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xf98, gbc.sp());
        EXPECT(0x3df2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0290
        gbc.setState(0xefe, 0x4d8e, 0x32c0, 0x84d5, 0x9ab2, 0x7bf9, 0x1, 0x1);
        gbc.writeMem(0xefe, { 0x44 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x4d8e, gbc.sp());
        EXPECT(0xeff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0291
        gbc.setState(0x270a, 0xcef5, 0x9ae0, 0xd980, 0x3fda, 0xebef, 0x1, 0x0);
        gbc.writeMem(0x270a, { 0x44 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xcef5, gbc.sp());
        EXPECT(0x270b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0292
        gbc.setState(0x20e8, 0xc5dd, 0x6e90, 0xe12c, 0x53cf, 0x6d94, 0x0, 0x0);
        gbc.writeMem(0x20e8, { 0x44 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc5dd, gbc.sp());
        EXPECT(0x20e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0293
        gbc.setState(0x14b2, 0x88b1, 0x4c40, 0xa52a, 0x8c07, 0x4dac, 0x1, 0x1);
        gbc.writeMem(0x14b2, { 0x44 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x88b1, gbc.sp());
        EXPECT(0x14b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0295
        gbc.setState(0xc165, 0x6117, 0x1420, 0xd7d0, 0x224e, 0x766, 0x1, 0x1);
        gbc.writeMem(0xc165, { 0x44 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6117, gbc.sp());
        EXPECT(0xc166, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xc165));
        // 44 0296
        gbc.setState(0xe16a, 0x5031, 0xe00, 0xa10c, 0x96b7, 0x6424, 0x0, 0x0);
        gbc.writeMem(0xe16a, { 0x44 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x5031, gbc.sp());
        EXPECT(0xe16b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xe16a));
        // 44 0297
        gbc.setState(0x90d3, 0xa88f, 0x9a30, 0x7800, 0xc787, 0x570e, 0x1, 0x0);
        gbc.writeMem(0x90d3, { 0x44 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xa88f, gbc.sp());
        EXPECT(0x90d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x90d3));
        // 44 0298
        gbc.setState(0xca66, 0xcd7c, 0x310, 0x6bf1, 0x587b, 0xa02e, 0x0, 0x0);
        gbc.writeMem(0xca66, { 0x44 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xcd7c, gbc.sp());
        EXPECT(0xca67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xca66));
        // 44 0299
        gbc.setState(0xb294, 0xfbdc, 0x76e0, 0xbce, 0xdef8, 0x5a7f, 0x1, 0x1);
        gbc.writeMem(0xb294, { 0x44 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xfbdc, gbc.sp());
        EXPECT(0xb295, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xb294));
        // 44 029A
        gbc.setState(0x7850, 0x5578, 0x4bc0, 0x5b2b, 0x9bf7, 0x2b69, 0x0, 0x0);
        gbc.writeMem(0x7850, { 0x44 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x5578, gbc.sp());
        EXPECT(0x7851, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 029B
        gbc.setState(0x7433, 0x93cf, 0xde10, 0x9d30, 0xb30b, 0x6778, 0x1, 0x1);
        gbc.writeMem(0x7433, { 0x44 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x93cf, gbc.sp());
        EXPECT(0x7434, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 029C
        gbc.setState(0xab62, 0x126e, 0x4350, 0x28d7, 0xed2c, 0xb931, 0x0, 0x0);
        gbc.writeMem(0xab62, { 0x44 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x126e, gbc.sp());
        EXPECT(0xab63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xab62));
        // 44 029D
        gbc.setState(0x4381, 0xd9a7, 0xfdd0, 0x78c5, 0x46f3, 0xc315, 0x0, 0x0);
        gbc.writeMem(0x4381, { 0x44 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xd9a7, gbc.sp());
        EXPECT(0x4382, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 029E
        gbc.setState(0xd731, 0x760b, 0xd570, 0x20f6, 0xd046, 0x8261, 0x0, 0x1);
        gbc.writeMem(0xd731, { 0x44 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x760b, gbc.sp());
        EXPECT(0xd732, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xd731));
        // 44 029F
        gbc.setState(0x7f0, 0xe96, 0x8100, 0xcca4, 0xed7e, 0x7d31, 0x1, 0x1);
        gbc.writeMem(0x7f0, { 0x44 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xe96, gbc.sp());
        EXPECT(0x7f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 02A0
        gbc.setState(0xdbe7, 0x9a03, 0x50b0, 0x212, 0x9202, 0xc852, 0x0, 0x0);
        gbc.writeMem(0xdbe7, { 0x44 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x9a03, gbc.sp());
        EXPECT(0xdbe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xdbe7));
        // 44 02A1
        gbc.setState(0x32e0, 0xcb40, 0x1500, 0xa450, 0x49ad, 0xcf55, 0x1, 0x1);
        gbc.writeMem(0x32e0, { 0x44 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xcb40, gbc.sp());
        EXPECT(0x32e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 02A3
        gbc.setState(0x9c67, 0x7072, 0x5740, 0x80ae, 0xb5c3, 0x2251, 0x0, 0x0);
        gbc.writeMem(0x9c67, { 0x44 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x7072, gbc.sp());
        EXPECT(0x9c68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x9c67));
        // 44 02A4
        gbc.setState(0xe9af, 0x9221, 0x48f0, 0x56b6, 0x3841, 0x3530, 0x0, 0x0);
        gbc.writeMem(0xe9af, { 0x44 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x9221, gbc.sp());
        EXPECT(0xe9b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xe9af));
        // 44 02A5
        gbc.setState(0x8d48, 0x19f7, 0x26c0, 0x85c8, 0x2b6a, 0x48d0, 0x1, 0x0);
        gbc.writeMem(0x8d48, { 0x44 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x19f7, gbc.sp());
        EXPECT(0x8d49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x8d48));
        // 44 02A6
        gbc.setState(0x9945, 0xc0bc, 0x3d80, 0xb1e9, 0x9942, 0x29fc, 0x1, 0x0);
        gbc.writeMem(0x9945, { 0x44 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc0bc, gbc.sp());
        EXPECT(0x9946, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x9945));
        // 44 02A7
        gbc.setState(0x5c4c, 0x289a, 0xf740, 0x485, 0x55cc, 0xa76e, 0x1, 0x1);
        gbc.writeMem(0x5c4c, { 0x44 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x289a, gbc.sp());
        EXPECT(0x5c4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 02A8
        gbc.setState(0x53a, 0xaa0d, 0xb940, 0xc2de, 0xd700, 0xc7bc, 0x0, 0x0);
        gbc.writeMem(0x53a, { 0x44 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xaa0d, gbc.sp());
        EXPECT(0x53b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 02A9
        gbc.setState(0x83d7, 0x8702, 0xde70, 0x38db, 0xcaab, 0xcfe9, 0x1, 0x0);
        gbc.writeMem(0x83d7, { 0x44 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x8702, gbc.sp());
        EXPECT(0x83d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x83d7));
        // 44 02AC
        gbc.setState(0xa38f, 0x64f4, 0x66e0, 0xf4e, 0x958e, 0x9f74, 0x0, 0x1);
        gbc.writeMem(0xa38f, { 0x44 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x64f4, gbc.sp());
        EXPECT(0xa390, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa38f));
        // 44 02AD
        gbc.setState(0x4722, 0x6074, 0x27a0, 0x90a9, 0x101f, 0x3695, 0x1, 0x1);
        gbc.writeMem(0x4722, { 0x44 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x6074, gbc.sp());
        EXPECT(0x4723, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 02AE
        gbc.setState(0x58e3, 0x881, 0x7aa0, 0x8ade, 0xc39, 0x6bc4, 0x0, 0x0);
        gbc.writeMem(0x58e3, { 0x44 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x881, gbc.sp());
        EXPECT(0x58e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 02B0
        gbc.setState(0x9013, 0x213d, 0x5980, 0x85e1, 0x5402, 0x86b8, 0x1, 0x1);
        gbc.writeMem(0x9013, { 0x44 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x213d, gbc.sp());
        EXPECT(0x9014, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x9013));
        // 44 02B1
        gbc.setState(0xbd33, 0x636d, 0xd110, 0x461b, 0xaa3e, 0xadb6, 0x1, 0x0);
        gbc.writeMem(0xbd33, { 0x44 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x636d, gbc.sp());
        EXPECT(0xbd34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xbd33));
        // 44 02B2
        gbc.setState(0x59c0, 0x20f7, 0xbb70, 0x4bc2, 0x37b1, 0xe4ef, 0x0, 0x1);
        gbc.writeMem(0x59c0, { 0x44 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x20f7, gbc.sp());
        EXPECT(0x59c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 02B3
        gbc.setState(0x64ca, 0x47ea, 0x23f0, 0xa178, 0x4e6e, 0x3e4, 0x0, 0x0);
        gbc.writeMem(0x64ca, { 0x44 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x47ea, gbc.sp());
        EXPECT(0x64cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 02B4
        gbc.setState(0xe677, 0xaa6e, 0x9640, 0x1175, 0x3e96, 0x39a6, 0x1, 0x0);
        gbc.writeMem(0xe677, { 0x44 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xaa6e, gbc.sp());
        EXPECT(0xe678, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xe677));
        // 44 02B5
        gbc.setState(0x28c1, 0xef72, 0xf670, 0x6fd8, 0x9843, 0xd203, 0x0, 0x0);
        gbc.writeMem(0x28c1, { 0x44 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xef72, gbc.sp());
        EXPECT(0x28c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 02B6
        gbc.setState(0x60c2, 0xc6f5, 0xe800, 0x6799, 0xfde3, 0xaaa4, 0x1, 0x1);
        gbc.writeMem(0x60c2, { 0x44 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xc6f5, gbc.sp());
        EXPECT(0x60c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 02B8
        gbc.setState(0xebdf, 0xfb58, 0x3e50, 0x2098, 0x4051, 0xd43c, 0x1, 0x0);
        gbc.writeMem(0xebdf, { 0x44 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xfb58, gbc.sp());
        EXPECT(0xebe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xebdf));
        // 44 02B9
        gbc.setState(0x208a, 0xd18a, 0x8740, 0x973, 0xb78d, 0x9efe, 0x0, 0x1);
        gbc.writeMem(0x208a, { 0x44 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xd18a, gbc.sp());
        EXPECT(0x208b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 02BA
        gbc.setState(0xe351, 0xf681, 0x1e40, 0x3ebe, 0xfccd, 0x6b24, 0x0, 0x1);
        gbc.writeMem(0xe351, { 0x44 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xf681, gbc.sp());
        EXPECT(0xe352, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xe351));
        // 44 02BB
        gbc.setState(0x11f3, 0x9c9b, 0xc440, 0x4c5a, 0x1f28, 0xc6ac, 0x0, 0x0);
        gbc.writeMem(0x11f3, { 0x44 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x9c9b, gbc.sp());
        EXPECT(0x11f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 02BC
        gbc.setState(0xcdd1, 0xd658, 0x6ba0, 0x52ce, 0x48fe, 0xd191, 0x1, 0x0);
        gbc.writeMem(0xcdd1, { 0x44 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xd658, gbc.sp());
        EXPECT(0xcdd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xcdd1));
        // 44 02BD
        gbc.setState(0xe041, 0x2ccd, 0x3180, 0xa193, 0xe5d8, 0x9bf3, 0x0, 0x1);
        gbc.writeMem(0xe041, { 0x44 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x2ccd, gbc.sp());
        EXPECT(0xe042, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xe041));
        // 44 02BE
        gbc.setState(0x14f4, 0x3a30, 0x1110, 0x48f2, 0xacb5, 0x1fb0, 0x0, 0x0);
        gbc.writeMem(0x14f4, { 0x44 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3a30, gbc.sp());
        EXPECT(0x14f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 02BF
        gbc.setState(0x79e6, 0x6aa4, 0x770, 0x97b4, 0x1718, 0x4179, 0x1, 0x0);
        gbc.writeMem(0x79e6, { 0x44 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x6aa4, gbc.sp());
        EXPECT(0x79e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 02C0
        gbc.setState(0x3f3d, 0x67d5, 0x7ef0, 0x6eda, 0x20c0, 0x211, 0x0, 0x0);
        gbc.writeMem(0x3f3d, { 0x44 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x67d5, gbc.sp());
        EXPECT(0x3f3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 02C1
        gbc.setState(0x5e71, 0xdc43, 0x6540, 0x5062, 0x9c6b, 0x326a, 0x0, 0x0);
        gbc.writeMem(0x5e71, { 0x44 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xdc43, gbc.sp());
        EXPECT(0x5e72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 02C2
        gbc.setState(0x5046, 0x1122, 0x5b00, 0x225d, 0x2916, 0x46b5, 0x0, 0x0);
        gbc.writeMem(0x5046, { 0x44 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x1122, gbc.sp());
        EXPECT(0x5047, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 02C3
        gbc.setState(0x747c, 0x2946, 0xc90, 0x6b5c, 0x1a9d, 0xc962, 0x1, 0x0);
        gbc.writeMem(0x747c, { 0x44 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2946, gbc.sp());
        EXPECT(0x747d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 02C4
        gbc.setState(0xdfb9, 0x5935, 0x5220, 0x9daf, 0xf354, 0x9a31, 0x1, 0x1);
        gbc.writeMem(0xdfb9, { 0x44 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5935, gbc.sp());
        EXPECT(0xdfba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xdfb9));
        // 44 02C5
        gbc.setState(0x9df2, 0x71bc, 0xbd00, 0x6e5, 0x8215, 0x6753, 0x0, 0x0);
        gbc.writeMem(0x9df2, { 0x44 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x71bc, gbc.sp());
        EXPECT(0x9df3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x9df2));
        // 44 02C6
        gbc.setState(0x16d4, 0x193a, 0xfa70, 0x4f9d, 0x4a9e, 0xd3f1, 0x0, 0x0);
        gbc.writeMem(0x16d4, { 0x44 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x193a, gbc.sp());
        EXPECT(0x16d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 02C7
        gbc.setState(0xc5dd, 0x465a, 0xa700, 0x63c2, 0x56b4, 0xe022, 0x1, 0x1);
        gbc.writeMem(0xc5dd, { 0x44 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x465a, gbc.sp());
        EXPECT(0xc5de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xc5dd));
        // 44 02C8
        gbc.setState(0xc4e7, 0x7324, 0x6df0, 0x17b9, 0xb4ad, 0x52d, 0x1, 0x0);
        gbc.writeMem(0xc4e7, { 0x44 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7324, gbc.sp());
        EXPECT(0xc4e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xc4e7));
        // 44 02C9
        gbc.setState(0x3afe, 0xe134, 0xfbd0, 0x1b0a, 0xe048, 0xf9fb, 0x0, 0x1);
        gbc.writeMem(0x3afe, { 0x44 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe134, gbc.sp());
        EXPECT(0x3aff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 02CA
        gbc.setState(0x796, 0xb4b2, 0x8470, 0xff8b, 0x26c0, 0x1b55, 0x1, 0x1);
        gbc.writeMem(0x796, { 0x44 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xb4b2, gbc.sp());
        EXPECT(0x797, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 02CB
        gbc.setState(0xe855, 0x244f, 0x8570, 0xcca2, 0xddef, 0xba82, 0x0, 0x1);
        gbc.writeMem(0xe855, { 0x44 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x244f, gbc.sp());
        EXPECT(0xe856, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xe855));
        // 44 02CC
        gbc.setState(0x9ed4, 0x6d6c, 0xe970, 0xbf23, 0x99b8, 0x7cd5, 0x1, 0x0);
        gbc.writeMem(0x9ed4, { 0x44 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x6d6c, gbc.sp());
        EXPECT(0x9ed5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x9ed4));
        // 44 02CD
        gbc.setState(0xd37c, 0x848d, 0xd540, 0xf35c, 0xef57, 0xd7c8, 0x0, 0x1);
        gbc.writeMem(0xd37c, { 0x44 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x848d, gbc.sp());
        EXPECT(0xd37d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xd37c));
        // 44 02CE
        gbc.setState(0xa6ed, 0x9308, 0x46c0, 0x89f7, 0x63a0, 0xa157, 0x1, 0x0);
        gbc.writeMem(0xa6ed, { 0x44 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9308, gbc.sp());
        EXPECT(0xa6ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa6ed));
        // 44 02CF
        gbc.setState(0x6c72, 0xecb3, 0x1c60, 0x8041, 0x4d57, 0x1f4c, 0x0, 0x1);
        gbc.writeMem(0x6c72, { 0x44 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xecb3, gbc.sp());
        EXPECT(0x6c73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 02D1
        gbc.setState(0x2d71, 0x745c, 0xf360, 0xd063, 0xbc02, 0x74cf, 0x0, 0x1);
        gbc.writeMem(0x2d71, { 0x44 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x745c, gbc.sp());
        EXPECT(0x2d72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 02D2
        gbc.setState(0xd211, 0x31b1, 0xf380, 0xbea, 0x7d5c, 0x8b31, 0x1, 0x1);
        gbc.writeMem(0xd211, { 0x44 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x31b1, gbc.sp());
        EXPECT(0xd212, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xd211));
        // 44 02D3
        gbc.setState(0xe21b, 0x89de, 0xa500, 0xbb98, 0x6d2d, 0x5620, 0x1, 0x1);
        gbc.writeMem(0xe21b, { 0x44 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x89de, gbc.sp());
        EXPECT(0xe21c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xe21b));
        // 44 02D4
        gbc.setState(0x9da1, 0x5e28, 0xe020, 0x6438, 0x7d51, 0xc05a, 0x1, 0x1);
        gbc.writeMem(0x9da1, { 0x44 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x5e28, gbc.sp());
        EXPECT(0x9da2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x9da1));
        // 44 02D5
        gbc.setState(0x1ec3, 0xaa34, 0xeec0, 0x63e3, 0xff94, 0x93b2, 0x0, 0x1);
        gbc.writeMem(0x1ec3, { 0x44 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xaa34, gbc.sp());
        EXPECT(0x1ec4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 02D6
        gbc.setState(0xcf1c, 0x3f81, 0x5530, 0x4e03, 0x2c4a, 0x90a4, 0x1, 0x0);
        gbc.writeMem(0xcf1c, { 0x44 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x3f81, gbc.sp());
        EXPECT(0xcf1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xcf1c));
        // 44 02D7
        gbc.setState(0x5b1d, 0x4369, 0x1c20, 0x8ca2, 0x34e5, 0x8e12, 0x1, 0x1);
        gbc.writeMem(0x5b1d, { 0x44 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x4369, gbc.sp());
        EXPECT(0x5b1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 02D8
        gbc.setState(0x6fd4, 0xb86a, 0x8850, 0x5035, 0x6645, 0x6c84, 0x0, 0x0);
        gbc.writeMem(0x6fd4, { 0x44 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb86a, gbc.sp());
        EXPECT(0x6fd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 02D9
        gbc.setState(0xb482, 0x1957, 0x6540, 0x340b, 0x667d, 0xffd7, 0x1, 0x0);
        gbc.writeMem(0xb482, { 0x44 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x1957, gbc.sp());
        EXPECT(0xb483, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xb482));
        // 44 02DA
        gbc.setState(0x2948, 0x1fc0, 0x7b60, 0x7c3d, 0x6c2e, 0x1907, 0x1, 0x1);
        gbc.writeMem(0x2948, { 0x44 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x1fc0, gbc.sp());
        EXPECT(0x2949, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 02DB
        gbc.setState(0x6308, 0x436, 0x6f40, 0xde8f, 0x79a6, 0x560c, 0x0, 0x1);
        gbc.writeMem(0x6308, { 0x44 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x436, gbc.sp());
        EXPECT(0x6309, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 02DC
        gbc.setState(0x17fb, 0xf7ac, 0x1340, 0x32a7, 0x6ec9, 0x51b8, 0x1, 0x1);
        gbc.writeMem(0x17fb, { 0x44 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xf7ac, gbc.sp());
        EXPECT(0x17fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 02DD
        gbc.setState(0x9f32, 0x1c0, 0xf750, 0x5f0a, 0x136a, 0x64c5, 0x1, 0x0);
        gbc.writeMem(0x9f32, { 0x44 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x1c0, gbc.sp());
        EXPECT(0x9f33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x9f32));
        // 44 02DE
        gbc.setState(0x2c62, 0xd93, 0x59c0, 0x214a, 0x3d4f, 0x62d5, 0x1, 0x1);
        gbc.writeMem(0x2c62, { 0x44 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xd93, gbc.sp());
        EXPECT(0x2c63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 02DF
        gbc.setState(0xde5c, 0xd070, 0x740, 0x5f73, 0x3a92, 0xbe51, 0x0, 0x0);
        gbc.writeMem(0xde5c, { 0x44 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd070, gbc.sp());
        EXPECT(0xde5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xde5c));
        // 44 02E0
        gbc.setState(0xa19e, 0x8325, 0x30b0, 0x44d4, 0x3e83, 0xc3cb, 0x0, 0x0);
        gbc.writeMem(0xa19e, { 0x44 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x8325, gbc.sp());
        EXPECT(0xa19f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa19e));
        // 44 02E1
        gbc.setState(0x7f00, 0xb265, 0x3e20, 0x3562, 0xb9f8, 0x1583, 0x0, 0x1);
        gbc.writeMem(0x7f00, { 0x44 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xb265, gbc.sp());
        EXPECT(0x7f01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 02E2
        gbc.setState(0x8c63, 0x5f00, 0x6a90, 0xd0d6, 0xd577, 0xd9db, 0x1, 0x1);
        gbc.writeMem(0x8c63, { 0x44 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x5f00, gbc.sp());
        EXPECT(0x8c64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x8c63));
        // 44 02E3
        gbc.setState(0x4e83, 0xd054, 0x7ca0, 0xd2e8, 0x9eee, 0x9b50, 0x0, 0x1);
        gbc.writeMem(0x4e83, { 0x44 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xd054, gbc.sp());
        EXPECT(0x4e84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 02E4
        gbc.setState(0xe56c, 0x5d07, 0x1620, 0x7c61, 0x88c2, 0xb5b2, 0x0, 0x0);
        gbc.writeMem(0xe56c, { 0x44 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x5d07, gbc.sp());
        EXPECT(0xe56d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xe56c));
        // 44 02E5
        gbc.setState(0x7a5, 0xb460, 0xd640, 0x36f4, 0x42dc, 0x3f12, 0x0, 0x1);
        gbc.writeMem(0x7a5, { 0x44 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xb460, gbc.sp());
        EXPECT(0x7a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 02E6
        gbc.setState(0x592b, 0x35ad, 0x3820, 0xf8e0, 0xacef, 0xc7e4, 0x0, 0x1);
        gbc.writeMem(0x592b, { 0x44 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x35ad, gbc.sp());
        EXPECT(0x592c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 02E7
        gbc.setState(0x8910, 0x1cec, 0x5c90, 0xd776, 0xac22, 0xc415, 0x1, 0x0);
        gbc.writeMem(0x8910, { 0x44 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1cec, gbc.sp());
        EXPECT(0x8911, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x8910));
        // 44 02E8
        gbc.setState(0x9d20, 0x98c7, 0x4c40, 0xe0e9, 0xc1cb, 0x2552, 0x0, 0x0);
        gbc.writeMem(0x9d20, { 0x44 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x98c7, gbc.sp());
        EXPECT(0x9d21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x9d20));
        // 44 02E9
        gbc.setState(0xaf6, 0x5609, 0x830, 0xc853, 0xdf96, 0x9234, 0x0, 0x0);
        gbc.writeMem(0xaf6, { 0x44 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x5609, gbc.sp());
        EXPECT(0xaf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 02EA
        gbc.setState(0x5895, 0xf23c, 0x1490, 0x3beb, 0xc544, 0x3437, 0x1, 0x1);
        gbc.writeMem(0x5895, { 0x44 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xf23c, gbc.sp());
        EXPECT(0x5896, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 02EB
        gbc.setState(0x30c6, 0xca97, 0xa6c0, 0xee92, 0x4886, 0x292a, 0x1, 0x1);
        gbc.writeMem(0x30c6, { 0x44 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xca97, gbc.sp());
        EXPECT(0x30c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 02EC
        gbc.setState(0xac9a, 0xfc5f, 0x9850, 0x43a3, 0xa8f0, 0xe7f9, 0x0, 0x1);
        gbc.writeMem(0xac9a, { 0x44 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xfc5f, gbc.sp());
        EXPECT(0xac9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xac9a));
        // 44 02ED
        gbc.setState(0x38a1, 0x7817, 0xc180, 0x9a85, 0x3387, 0x21bf, 0x0, 0x0);
        gbc.writeMem(0x38a1, { 0x44 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x7817, gbc.sp());
        EXPECT(0x38a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 02EF
        gbc.setState(0x7b12, 0x6594, 0x21c0, 0xff6d, 0x62d7, 0x4189, 0x1, 0x0);
        gbc.writeMem(0x7b12, { 0x44 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x6594, gbc.sp());
        EXPECT(0x7b13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 02F0
        gbc.setState(0x7f2f, 0x8534, 0xf4e0, 0x6b06, 0x6a70, 0x6650, 0x1, 0x0);
        gbc.writeMem(0x7f2f, { 0x44 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x8534, gbc.sp());
        EXPECT(0x7f30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 02F1
        gbc.setState(0x5680, 0xd2ea, 0x8c60, 0xab1a, 0x23fc, 0x19b6, 0x1, 0x1);
        gbc.writeMem(0x5680, { 0x44 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xd2ea, gbc.sp());
        EXPECT(0x5681, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 02F2
        gbc.setState(0xd40, 0xae66, 0x68c0, 0x3ba5, 0x3bcc, 0xcd72, 0x1, 0x1);
        gbc.writeMem(0xd40, { 0x44 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xae66, gbc.sp());
        EXPECT(0xd41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 02F3
        gbc.setState(0x4800, 0xa813, 0xe800, 0x10f0, 0x2f4b, 0xb18a, 0x1, 0x0);
        gbc.writeMem(0x4800, { 0x44 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa813, gbc.sp());
        EXPECT(0x4801, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 02F4
        gbc.setState(0x4cbb, 0x5be7, 0x2900, 0x4068, 0xf070, 0x8d5d, 0x1, 0x0);
        gbc.writeMem(0x4cbb, { 0x44 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x5be7, gbc.sp());
        EXPECT(0x4cbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 02F5
        gbc.setState(0xde5d, 0xa760, 0xebc0, 0x7934, 0xf2c9, 0x797d, 0x1, 0x0);
        gbc.writeMem(0xde5d, { 0x44 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xa760, gbc.sp());
        EXPECT(0xde5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xde5d));
        // 44 02F6
        gbc.setState(0xe994, 0xc906, 0xcf0, 0xde5, 0x8f28, 0xafeb, 0x0, 0x1);
        gbc.writeMem(0xe994, { 0x44 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xc906, gbc.sp());
        EXPECT(0xe995, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xe994));
        // 44 02F7
        gbc.setState(0xa243, 0xa897, 0xc550, 0x7c92, 0x42be, 0xb4d2, 0x0, 0x0);
        gbc.writeMem(0xa243, { 0x44 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa897, gbc.sp());
        EXPECT(0xa244, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa243));
        // 44 02F8
        gbc.setState(0x5ed7, 0x5f0a, 0x5260, 0xccf, 0x5ff8, 0xa7c3, 0x1, 0x0);
        gbc.writeMem(0x5ed7, { 0x44 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x5f0a, gbc.sp());
        EXPECT(0x5ed8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 02F9
        gbc.setState(0x6914, 0x7da7, 0x67c0, 0xe83a, 0xe45d, 0x50a9, 0x1, 0x0);
        gbc.writeMem(0x6914, { 0x44 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x7da7, gbc.sp());
        EXPECT(0x6915, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 02FA
        gbc.setState(0x736f, 0xbf94, 0xed30, 0x591, 0xea, 0xacc7, 0x1, 0x1);
        gbc.writeMem(0x736f, { 0x44 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xbf94, gbc.sp());
        EXPECT(0x7370, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 02FB
        gbc.setState(0x7564, 0x5bfd, 0x5d70, 0xc3e3, 0xbe1b, 0x1fa4, 0x1, 0x1);
        gbc.writeMem(0x7564, { 0x44 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x5bfd, gbc.sp());
        EXPECT(0x7565, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 02FC
        gbc.setState(0x13d7, 0xb301, 0x76f0, 0x32e0, 0xd272, 0x7dc6, 0x0, 0x1);
        gbc.writeMem(0x13d7, { 0x44 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb301, gbc.sp());
        EXPECT(0x13d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 02FD
        gbc.setState(0x47f0, 0x856f, 0x4860, 0x87a5, 0xc8b2, 0xad7f, 0x1, 0x0);
        gbc.writeMem(0x47f0, { 0x44 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x856f, gbc.sp());
        EXPECT(0x47f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 02FE
        gbc.setState(0x3ef7, 0x56ed, 0x8880, 0x2bf4, 0x57be, 0xb97e, 0x0, 0x0);
        gbc.writeMem(0x3ef7, { 0x44 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x56ed, gbc.sp());
        EXPECT(0x3ef8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 02FF
        gbc.setState(0x2f67, 0x978, 0x2610, 0xf883, 0x7248, 0x751b, 0x0, 0x0);
        gbc.writeMem(0x2f67, { 0x44 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x978, gbc.sp());
        EXPECT(0x2f68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0301
        gbc.setState(0xdb54, 0xaeba, 0x9680, 0x78c6, 0xc325, 0x3090, 0x0, 0x0);
        gbc.writeMem(0xdb54, { 0x44 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xaeba, gbc.sp());
        EXPECT(0xdb55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xdb54));
        // 44 0302
        gbc.setState(0x301b, 0xb7a2, 0x1f00, 0xc61, 0x4503, 0xc6f2, 0x0, 0x1);
        gbc.writeMem(0x301b, { 0x44 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb7a2, gbc.sp());
        EXPECT(0x301c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0303
        gbc.setState(0x4ed7, 0x49cd, 0xeae0, 0xc055, 0xb76d, 0x28ed, 0x1, 0x1);
        gbc.writeMem(0x4ed7, { 0x44 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x49cd, gbc.sp());
        EXPECT(0x4ed8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0304
        gbc.setState(0xb5a5, 0x7efd, 0x2fe0, 0xefd0, 0x757a, 0xe54b, 0x1, 0x1);
        gbc.writeMem(0xb5a5, { 0x44 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x7efd, gbc.sp());
        EXPECT(0xb5a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xb5a5));
        // 44 0305
        gbc.setState(0x8333, 0x9058, 0xef70, 0xf152, 0x8ab6, 0xb659, 0x1, 0x0);
        gbc.writeMem(0x8333, { 0x44 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9058, gbc.sp());
        EXPECT(0x8334, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x8333));
        // 44 0306
        gbc.setState(0x135a, 0xb255, 0x1b80, 0x642a, 0x5857, 0x9ea5, 0x0, 0x1);
        gbc.writeMem(0x135a, { 0x44 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xb255, gbc.sp());
        EXPECT(0x135b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0307
        gbc.setState(0x41f2, 0x9004, 0xb140, 0x77ae, 0x347, 0x7ba2, 0x0, 0x0);
        gbc.writeMem(0x41f2, { 0x44 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x9004, gbc.sp());
        EXPECT(0x41f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0308
        gbc.setState(0xb725, 0xd0f3, 0xf1b0, 0x414b, 0x1ccb, 0x6a8e, 0x0, 0x0);
        gbc.writeMem(0xb725, { 0x44 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xd0f3, gbc.sp());
        EXPECT(0xb726, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xb725));
        // 44 0309
        gbc.setState(0x61d4, 0x3401, 0xa770, 0x321c, 0x3458, 0xf895, 0x0, 0x0);
        gbc.writeMem(0x61d4, { 0x44 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x3401, gbc.sp());
        EXPECT(0x61d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 030A
        gbc.setState(0xb44e, 0xf902, 0x4c00, 0xbf28, 0xbb15, 0x50d6, 0x1, 0x1);
        gbc.writeMem(0xb44e, { 0x44 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xf902, gbc.sp());
        EXPECT(0xb44f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xb44e));
        // 44 030B
        gbc.setState(0xcae5, 0x96c0, 0x2a00, 0xc722, 0x400d, 0xa465, 0x1, 0x0);
        gbc.writeMem(0xcae5, { 0x44 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x96c0, gbc.sp());
        EXPECT(0xcae6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xcae5));
        // 44 030C
        gbc.setState(0x508e, 0x6761, 0xcb20, 0x6386, 0xf98, 0x1bdb, 0x1, 0x1);
        gbc.writeMem(0x508e, { 0x44 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x6761, gbc.sp());
        EXPECT(0x508f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 030D
        gbc.setState(0x413, 0xae57, 0xea20, 0x7f23, 0xf957, 0xc651, 0x0, 0x0);
        gbc.writeMem(0x413, { 0x44 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xae57, gbc.sp());
        EXPECT(0x414, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 030E
        gbc.setState(0x7a9c, 0x953f, 0x9100, 0xa0c8, 0xb547, 0x1b27, 0x1, 0x0);
        gbc.writeMem(0x7a9c, { 0x44 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x953f, gbc.sp());
        EXPECT(0x7a9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 030F
        gbc.setState(0xae0e, 0xe097, 0x21e0, 0x56d2, 0xf026, 0xbdb8, 0x0, 0x1);
        gbc.writeMem(0xae0e, { 0x44 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe097, gbc.sp());
        EXPECT(0xae0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xae0e));
        // 44 0310
        gbc.setState(0x39fc, 0xb6a0, 0xc600, 0xdd68, 0xfedd, 0x3415, 0x1, 0x0);
        gbc.writeMem(0x39fc, { 0x44 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb6a0, gbc.sp());
        EXPECT(0x39fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0311
        gbc.setState(0xef46, 0xd948, 0x1df0, 0x6213, 0xcfc8, 0xa210, 0x0, 0x1);
        gbc.writeMem(0xef46, { 0x44 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xd948, gbc.sp());
        EXPECT(0xef47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xef46));
        // 44 0312
        gbc.setState(0xc831, 0xef71, 0x8660, 0x20d3, 0x41ed, 0xdf1f, 0x1, 0x0);
        gbc.writeMem(0xc831, { 0x44 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xef71, gbc.sp());
        EXPECT(0xc832, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xc831));
        // 44 0313
        gbc.setState(0xc44f, 0xc064, 0xef20, 0x1b19, 0x1d83, 0x5790, 0x1, 0x0);
        gbc.writeMem(0xc44f, { 0x44 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc064, gbc.sp());
        EXPECT(0xc450, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xc44f));
        // 44 0314
        gbc.setState(0x5bed, 0x7e5, 0x39f0, 0x3296, 0xb4f2, 0x8c5f, 0x0, 0x0);
        gbc.writeMem(0x5bed, { 0x44 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x7e5, gbc.sp());
        EXPECT(0x5bee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0315
        gbc.setState(0xa04e, 0xa41f, 0xefb0, 0x996b, 0xbb0c, 0x81eb, 0x0, 0x1);
        gbc.writeMem(0xa04e, { 0x44 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xa41f, gbc.sp());
        EXPECT(0xa04f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa04e));
        // 44 0316
        gbc.setState(0x99ed, 0x55f6, 0x1610, 0x75af, 0x4d4f, 0xf2c6, 0x1, 0x0);
        gbc.writeMem(0x99ed, { 0x44 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x55f6, gbc.sp());
        EXPECT(0x99ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x99ed));
        // 44 0317
        gbc.setState(0x87a6, 0x5da2, 0x5200, 0x801, 0x3bb, 0xce29, 0x0, 0x0);
        gbc.writeMem(0x87a6, { 0x44 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x5da2, gbc.sp());
        EXPECT(0x87a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x87a6));
        // 44 0319
        gbc.setState(0x39b3, 0xb285, 0xe390, 0x5e32, 0x163a, 0x48c9, 0x0, 0x0);
        gbc.writeMem(0x39b3, { 0x44 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xb285, gbc.sp());
        EXPECT(0x39b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 031A
        gbc.setState(0xb79, 0xc90b, 0xafd0, 0x1535, 0xc1d0, 0x2a8b, 0x0, 0x0);
        gbc.writeMem(0xb79, { 0x44 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xc90b, gbc.sp());
        EXPECT(0xb7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 031B
        gbc.setState(0x49e, 0x2848, 0x9920, 0x6d07, 0x6783, 0xb17d, 0x1, 0x1);
        gbc.writeMem(0x49e, { 0x44 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x2848, gbc.sp());
        EXPECT(0x49f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 031C
        gbc.setState(0x71a7, 0x4668, 0xeb90, 0x41c5, 0x77f7, 0x3cd2, 0x0, 0x1);
        gbc.writeMem(0x71a7, { 0x44 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x4668, gbc.sp());
        EXPECT(0x71a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 031D
        gbc.setState(0x93d1, 0x6864, 0x15a0, 0x7501, 0x93bd, 0x3f06, 0x1, 0x1);
        gbc.writeMem(0x93d1, { 0x44 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6864, gbc.sp());
        EXPECT(0x93d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x93d1));
        // 44 031E
        gbc.setState(0x46b9, 0xa6ed, 0x7770, 0xf998, 0x505a, 0x8667, 0x0, 0x0);
        gbc.writeMem(0x46b9, { 0x44 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xa6ed, gbc.sp());
        EXPECT(0x46ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 031F
        gbc.setState(0x9a49, 0x34eb, 0x24a0, 0x9cf9, 0x2276, 0xb06, 0x1, 0x0);
        gbc.writeMem(0x9a49, { 0x44 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x34eb, gbc.sp());
        EXPECT(0x9a4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x9a49));
        // 44 0320
        gbc.setState(0x17b3, 0x17d5, 0x8a60, 0x6b52, 0xf7fc, 0x9eab, 0x0, 0x1);
        gbc.writeMem(0x17b3, { 0x44 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x17d5, gbc.sp());
        EXPECT(0x17b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0321
        gbc.setState(0x5bb, 0xb064, 0x7970, 0x118f, 0x52e6, 0x69e6, 0x1, 0x1);
        gbc.writeMem(0x5bb, { 0x44 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb064, gbc.sp());
        EXPECT(0x5bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0322
        gbc.setState(0xa9ee, 0x654d, 0x9070, 0x7a97, 0x5582, 0x158f, 0x1, 0x0);
        gbc.writeMem(0xa9ee, { 0x44 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x654d, gbc.sp());
        EXPECT(0xa9ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa9ee));
        // 44 0323
        gbc.setState(0xcb9e, 0xefd2, 0xde50, 0x6746, 0x9793, 0x26c0, 0x0, 0x1);
        gbc.writeMem(0xcb9e, { 0x44 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xefd2, gbc.sp());
        EXPECT(0xcb9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xcb9e));
        // 44 0324
        gbc.setState(0x608b, 0xef98, 0xc20, 0xcc5b, 0xa2f6, 0x554d, 0x1, 0x0);
        gbc.writeMem(0x608b, { 0x44 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xef98, gbc.sp());
        EXPECT(0x608c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0325
        gbc.setState(0x87d4, 0x4977, 0xb990, 0x5c05, 0xc13e, 0x33dc, 0x0, 0x0);
        gbc.writeMem(0x87d4, { 0x44 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x4977, gbc.sp());
        EXPECT(0x87d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x87d4));
        // 44 0326
        gbc.setState(0x1e64, 0x28c5, 0x29a0, 0x561c, 0xbd7e, 0xefc2, 0x1, 0x0);
        gbc.writeMem(0x1e64, { 0x44 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x28c5, gbc.sp());
        EXPECT(0x1e65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0327
        gbc.setState(0xa1b8, 0x2383, 0x9e30, 0xffa1, 0x5691, 0x2ff7, 0x0, 0x0);
        gbc.writeMem(0xa1b8, { 0x44 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x2383, gbc.sp());
        EXPECT(0xa1b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa1b8));
        // 44 0328
        gbc.setState(0xc32b, 0x956c, 0x57d0, 0xc366, 0xc134, 0xf8ae, 0x1, 0x0);
        gbc.writeMem(0xc32b, { 0x44 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x956c, gbc.sp());
        EXPECT(0xc32c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xc32b));
        // 44 0329
        gbc.setState(0xa877, 0xda1b, 0xbf20, 0xf230, 0xeb47, 0x8da3, 0x0, 0x0);
        gbc.writeMem(0xa877, { 0x44 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xda1b, gbc.sp());
        EXPECT(0xa878, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa877));
        // 44 032B
        gbc.setState(0xff, 0x4248, 0x2d90, 0x8792, 0x901, 0xc183, 0x0, 0x0);
        gbc.writeMem(0xff, { 0x44 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x4248, gbc.sp());
        EXPECT(0x100, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 032C
        gbc.setState(0xae1e, 0x4998, 0x4aa0, 0x62b9, 0xe3e7, 0x6634, 0x1, 0x0);
        gbc.writeMem(0xae1e, { 0x44 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4998, gbc.sp());
        EXPECT(0xae1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xae1e));
        // 44 032D
        gbc.setState(0x95ab, 0xa261, 0x75a0, 0x1fd8, 0xcc3b, 0xa989, 0x0, 0x1);
        gbc.writeMem(0x95ab, { 0x44 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xa261, gbc.sp());
        EXPECT(0x95ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x95ab));
        // 44 032E
        gbc.setState(0x8137, 0xd2a, 0xd980, 0x96dd, 0x7d31, 0xf93d, 0x0, 0x1);
        gbc.writeMem(0x8137, { 0x44 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd2a, gbc.sp());
        EXPECT(0x8138, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x8137));
        // 44 032F
        gbc.setState(0xbb74, 0x654f, 0xf580, 0x4fe4, 0x5d19, 0x321a, 0x0, 0x1);
        gbc.writeMem(0xbb74, { 0x44 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x654f, gbc.sp());
        EXPECT(0xbb75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xbb74));
        // 44 0330
        gbc.setState(0x252b, 0x8a5f, 0x5c30, 0x94eb, 0xb50f, 0x2540, 0x0, 0x1);
        gbc.writeMem(0x252b, { 0x44 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8a5f, gbc.sp());
        EXPECT(0x252c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0331
        gbc.setState(0x3586, 0x5ee, 0x4aa0, 0xc11b, 0x46f6, 0x4348, 0x1, 0x0);
        gbc.writeMem(0x3586, { 0x44 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x5ee, gbc.sp());
        EXPECT(0x3587, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0332
        gbc.setState(0xb132, 0x82e9, 0x6f50, 0xe98, 0x371c, 0x3802, 0x1, 0x1);
        gbc.writeMem(0xb132, { 0x44 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x82e9, gbc.sp());
        EXPECT(0xb133, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xb132));
        // 44 0333
        gbc.setState(0x317a, 0xb9c5, 0xf090, 0xc11, 0xd884, 0x6144, 0x0, 0x0);
        gbc.writeMem(0x317a, { 0x44 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xb9c5, gbc.sp());
        EXPECT(0x317b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0334
        gbc.setState(0x4ed2, 0x88cf, 0x75a0, 0xbc66, 0xc551, 0x881b, 0x0, 0x1);
        gbc.writeMem(0x4ed2, { 0x44 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x88cf, gbc.sp());
        EXPECT(0x4ed3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0335
        gbc.setState(0xb2f1, 0x76f1, 0xfa50, 0xad5f, 0x9543, 0x1700, 0x1, 0x0);
        gbc.writeMem(0xb2f1, { 0x44 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x76f1, gbc.sp());
        EXPECT(0xb2f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xb2f1));
        // 44 0336
        gbc.setState(0x8c42, 0x6af0, 0x5f00, 0xff0b, 0xdcb8, 0x66d4, 0x1, 0x0);
        gbc.writeMem(0x8c42, { 0x44 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x6af0, gbc.sp());
        EXPECT(0x8c43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x8c42));
        // 44 0337
        gbc.setState(0x4455, 0xbe48, 0xead0, 0x7591, 0xe29, 0x1a99, 0x0, 0x0);
        gbc.writeMem(0x4455, { 0x44 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xbe48, gbc.sp());
        EXPECT(0x4456, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0338
        gbc.setState(0xb031, 0xe5b8, 0x7520, 0xa6d8, 0x14b3, 0x5e75, 0x1, 0x0);
        gbc.writeMem(0xb031, { 0x44 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xe5b8, gbc.sp());
        EXPECT(0xb032, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xb031));
        // 44 0339
        gbc.setState(0x275, 0xbba5, 0xc870, 0x62fa, 0xf6e6, 0x378b, 0x1, 0x1);
        gbc.writeMem(0x275, { 0x44 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xbba5, gbc.sp());
        EXPECT(0x276, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 033A
        gbc.setState(0x9b61, 0xc16e, 0x5a80, 0xc478, 0x41cf, 0x8a6b, 0x0, 0x0);
        gbc.writeMem(0x9b61, { 0x44 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xc16e, gbc.sp());
        EXPECT(0x9b62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x9b61));
        // 44 033B
        gbc.setState(0xbec1, 0x9d9, 0xe8a0, 0x823c, 0x3739, 0x81db, 0x1, 0x1);
        gbc.writeMem(0xbec1, { 0x44 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x9d9, gbc.sp());
        EXPECT(0xbec2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xbec1));
        // 44 033C
        gbc.setState(0xd74f, 0x241b, 0x4e0, 0x741, 0x6718, 0xf5ee, 0x0, 0x0);
        gbc.writeMem(0xd74f, { 0x44 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x241b, gbc.sp());
        EXPECT(0xd750, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xd74f));
        // 44 033D
        gbc.setState(0xbd36, 0x98ff, 0x8e40, 0xf840, 0xf0f4, 0xae1a, 0x0, 0x1);
        gbc.writeMem(0xbd36, { 0x44 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x98ff, gbc.sp());
        EXPECT(0xbd37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xbd36));
        // 44 033E
        gbc.setState(0x2159, 0xbc3e, 0x80e0, 0x9315, 0x3430, 0xeea7, 0x1, 0x1);
        gbc.writeMem(0x2159, { 0x44 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xbc3e, gbc.sp());
        EXPECT(0x215a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 033F
        gbc.setState(0x2575, 0xa9dc, 0x4060, 0x5ba9, 0x105f, 0xfe5d, 0x0, 0x0);
        gbc.writeMem(0x2575, { 0x44 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xa9dc, gbc.sp());
        EXPECT(0x2576, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0340
        gbc.setState(0xca59, 0x885f, 0xfb60, 0xa459, 0x984a, 0x8202, 0x0, 0x1);
        gbc.writeMem(0xca59, { 0x44 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x885f, gbc.sp());
        EXPECT(0xca5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xca59));
        // 44 0341
        gbc.setState(0xd476, 0xd65b, 0x8bb0, 0x4cb, 0xbc74, 0x1b21, 0x1, 0x0);
        gbc.writeMem(0xd476, { 0x44 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xd65b, gbc.sp());
        EXPECT(0xd477, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xd476));
        // 44 0342
        gbc.setState(0x8818, 0xb6d4, 0xef0, 0x67c9, 0x4f75, 0x2739, 0x1, 0x0);
        gbc.writeMem(0x8818, { 0x44 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xb6d4, gbc.sp());
        EXPECT(0x8819, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x8818));
        // 44 0343
        gbc.setState(0x66c1, 0xb153, 0xb310, 0xde61, 0xb6f7, 0xff43, 0x1, 0x1);
        gbc.writeMem(0x66c1, { 0x44 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb153, gbc.sp());
        EXPECT(0x66c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0344
        gbc.setState(0x2313, 0xa315, 0x67c0, 0xd020, 0x1210, 0xfd86, 0x0, 0x0);
        gbc.writeMem(0x2313, { 0x44 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xa315, gbc.sp());
        EXPECT(0x2314, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0345
        gbc.setState(0x48af, 0xaf1b, 0x7080, 0xf6bb, 0x19a, 0xe6c3, 0x1, 0x0);
        gbc.writeMem(0x48af, { 0x44 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xaf1b, gbc.sp());
        EXPECT(0x48b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0346
        gbc.setState(0xb9e5, 0x454f, 0xf050, 0x94a9, 0xfe26, 0x1da7, 0x1, 0x0);
        gbc.writeMem(0xb9e5, { 0x44 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x454f, gbc.sp());
        EXPECT(0xb9e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xb9e5));
        // 44 0347
        gbc.setState(0x603c, 0x4f33, 0x9490, 0x2416, 0xbc4d, 0x8923, 0x1, 0x0);
        gbc.writeMem(0x603c, { 0x44 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x4f33, gbc.sp());
        EXPECT(0x603d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0348
        gbc.setState(0x2bdd, 0x1fd2, 0x24e0, 0x7c36, 0xcd59, 0x486d, 0x1, 0x0);
        gbc.writeMem(0x2bdd, { 0x44 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x1fd2, gbc.sp());
        EXPECT(0x2bde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0349
        gbc.setState(0x22ac, 0x27a8, 0xb6f0, 0x2123, 0x7498, 0x3ced, 0x1, 0x1);
        gbc.writeMem(0x22ac, { 0x44 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x27a8, gbc.sp());
        EXPECT(0x22ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 034A
        gbc.setState(0xa282, 0x857c, 0xca00, 0x2bc5, 0x48c7, 0xdcb8, 0x1, 0x1);
        gbc.writeMem(0xa282, { 0x44 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x857c, gbc.sp());
        EXPECT(0xa283, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa282));
        // 44 034B
        gbc.setState(0x3e63, 0x56b9, 0x8720, 0xbf93, 0x789b, 0x4c53, 0x1, 0x1);
        gbc.writeMem(0x3e63, { 0x44 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x56b9, gbc.sp());
        EXPECT(0x3e64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 034C
        gbc.setState(0x8bd7, 0x72c2, 0x98a0, 0xc3a5, 0x99f, 0x6d0f, 0x1, 0x1);
        gbc.writeMem(0x8bd7, { 0x44 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x72c2, gbc.sp());
        EXPECT(0x8bd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x8bd7));
        // 44 034D
        gbc.setState(0xd63c, 0x96d6, 0x29d0, 0x425b, 0x4b2a, 0x4bfb, 0x0, 0x1);
        gbc.writeMem(0xd63c, { 0x44 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x96d6, gbc.sp());
        EXPECT(0xd63d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xd63c));
        // 44 034E
        gbc.setState(0x6b9d, 0x48f, 0x7cf0, 0xde50, 0x1e07, 0x9384, 0x0, 0x0);
        gbc.writeMem(0x6b9d, { 0x44 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x48f, gbc.sp());
        EXPECT(0x6b9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 034F
        gbc.setState(0xafc9, 0x6368, 0x570, 0x7d9d, 0x65ff, 0xed7f, 0x0, 0x1);
        gbc.writeMem(0xafc9, { 0x44 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x6368, gbc.sp());
        EXPECT(0xafca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xafc9));
        // 44 0350
        gbc.setState(0x752a, 0x241e, 0x3710, 0x5d9, 0xd335, 0xcba6, 0x0, 0x0);
        gbc.writeMem(0x752a, { 0x44 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x241e, gbc.sp());
        EXPECT(0x752b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0351
        gbc.setState(0xb325, 0x2e63, 0x1990, 0xbb94, 0x74a4, 0xb30b, 0x0, 0x0);
        gbc.writeMem(0xb325, { 0x44 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2e63, gbc.sp());
        EXPECT(0xb326, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xb325));
        // 44 0352
        gbc.setState(0x3e88, 0x39a2, 0xad70, 0x2106, 0xd684, 0x109b, 0x1, 0x0);
        gbc.writeMem(0x3e88, { 0x44 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x39a2, gbc.sp());
        EXPECT(0x3e89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0353
        gbc.setState(0x9fef, 0xf6a5, 0x5790, 0x247d, 0x4d71, 0xdbf, 0x1, 0x0);
        gbc.writeMem(0x9fef, { 0x44 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xf6a5, gbc.sp());
        EXPECT(0x9ff0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x9fef));
        // 44 0354
        gbc.setState(0xd17e, 0x5ca3, 0x87c0, 0xacda, 0x71c4, 0xc95d, 0x1, 0x1);
        gbc.writeMem(0xd17e, { 0x44 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x5ca3, gbc.sp());
        EXPECT(0xd17f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xd17e));
        // 44 0355
        gbc.setState(0x649e, 0x97f3, 0x2260, 0x6c56, 0x1108, 0x7a50, 0x1, 0x1);
        gbc.writeMem(0x649e, { 0x44 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x97f3, gbc.sp());
        EXPECT(0x649f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0356
        gbc.setState(0x2644, 0x6168, 0x87d0, 0xfd39, 0xacc3, 0xdb30, 0x1, 0x1);
        gbc.writeMem(0x2644, { 0x44 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x6168, gbc.sp());
        EXPECT(0x2645, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0357
        gbc.setState(0xa9ff, 0xa3ec, 0xe6d0, 0xa891, 0x36c4, 0xb21c, 0x1, 0x1);
        gbc.writeMem(0xa9ff, { 0x44 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa3ec, gbc.sp());
        EXPECT(0xaa00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa9ff));
        // 44 0358
        gbc.setState(0x4c21, 0xfde9, 0x94a0, 0xbed7, 0x557f, 0x6d03, 0x0, 0x1);
        gbc.writeMem(0x4c21, { 0x44 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xfde9, gbc.sp());
        EXPECT(0x4c22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0359
        gbc.setState(0xca17, 0x8802, 0x38a0, 0x8b1d, 0xbbc8, 0x93b1, 0x1, 0x1);
        gbc.writeMem(0xca17, { 0x44 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8802, gbc.sp());
        EXPECT(0xca18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xca17));
        // 44 035A
        gbc.setState(0x6c76, 0xd6a0, 0xb040, 0x60f1, 0x35b3, 0xc876, 0x0, 0x0);
        gbc.writeMem(0x6c76, { 0x44 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xd6a0, gbc.sp());
        EXPECT(0x6c77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 035B
        gbc.setState(0x1661, 0xba91, 0x1590, 0xac57, 0x5696, 0x6dfb, 0x0, 0x0);
        gbc.writeMem(0x1661, { 0x44 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xba91, gbc.sp());
        EXPECT(0x1662, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 035C
        gbc.setState(0x979a, 0x7726, 0xd7d0, 0x4278, 0x2a95, 0xc07a, 0x0, 0x1);
        gbc.writeMem(0x979a, { 0x44 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x7726, gbc.sp());
        EXPECT(0x979b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x979a));
        // 44 035D
        gbc.setState(0x37d2, 0x448f, 0x53f0, 0x1638, 0xaf5d, 0xd993, 0x1, 0x1);
        gbc.writeMem(0x37d2, { 0x44 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x448f, gbc.sp());
        EXPECT(0x37d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 035E
        gbc.setState(0x987d, 0x530a, 0x51a0, 0x41a2, 0xf5d0, 0x6bdb, 0x0, 0x1);
        gbc.writeMem(0x987d, { 0x44 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x530a, gbc.sp());
        EXPECT(0x987e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x987d));
        // 44 035F
        gbc.setState(0xa485, 0xc3a1, 0xf830, 0x8ab1, 0xd6d, 0xa199, 0x0, 0x1);
        gbc.writeMem(0xa485, { 0x44 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xc3a1, gbc.sp());
        EXPECT(0xa486, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa485));
        // 44 0360
        gbc.setState(0x69d1, 0x473a, 0x4c70, 0x7cdc, 0x8d1c, 0x50d2, 0x1, 0x1);
        gbc.writeMem(0x69d1, { 0x44 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x473a, gbc.sp());
        EXPECT(0x69d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0361
        gbc.setState(0x8b0c, 0x8e1c, 0x4c20, 0xbad6, 0x26a4, 0xfe9f, 0x0, 0x0);
        gbc.writeMem(0x8b0c, { 0x44 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x8e1c, gbc.sp());
        EXPECT(0x8b0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x8b0c));
        // 44 0362
        gbc.setState(0xbf23, 0x6863, 0x5290, 0x3a76, 0x9080, 0x876b, 0x1, 0x1);
        gbc.writeMem(0xbf23, { 0x44 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x6863, gbc.sp());
        EXPECT(0xbf24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xbf23));
        // 44 0363
        gbc.setState(0xe3a5, 0x6615, 0x8330, 0xffbe, 0x74f5, 0x49cc, 0x1, 0x1);
        gbc.writeMem(0xe3a5, { 0x44 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x6615, gbc.sp());
        EXPECT(0xe3a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xe3a5));
        // 44 0364
        gbc.setState(0x9280, 0xc4f5, 0xaa90, 0xeab4, 0x54cd, 0x7546, 0x1, 0x1);
        gbc.writeMem(0x9280, { 0x44 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xc4f5, gbc.sp());
        EXPECT(0x9281, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x9280));
        // 44 0365
        gbc.setState(0x4371, 0xc42c, 0xe1c0, 0x7ded, 0xe22f, 0x2e90, 0x0, 0x0);
        gbc.writeMem(0x4371, { 0x44 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc42c, gbc.sp());
        EXPECT(0x4372, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0367
        gbc.setState(0x324, 0xc104, 0x7270, 0x1c2f, 0xd8dc, 0x59e2, 0x1, 0x1);
        gbc.writeMem(0x324, { 0x44 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xc104, gbc.sp());
        EXPECT(0x325, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0368
        gbc.setState(0x560c, 0x5978, 0xcb60, 0xcab2, 0x238, 0x6a5e, 0x0, 0x0);
        gbc.writeMem(0x560c, { 0x44 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x5978, gbc.sp());
        EXPECT(0x560d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 036A
        gbc.setState(0x46f1, 0xb5c8, 0xa4c0, 0x91ae, 0x92ba, 0xd50b, 0x1, 0x0);
        gbc.writeMem(0x46f1, { 0x44 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xb5c8, gbc.sp());
        EXPECT(0x46f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 036B
        gbc.setState(0x7fbf, 0xa3c2, 0x3720, 0x6329, 0xc95c, 0x69ee, 0x0, 0x0);
        gbc.writeMem(0x7fbf, { 0x44 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xa3c2, gbc.sp());
        EXPECT(0x7fc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 036C
        gbc.setState(0xa265, 0x7b27, 0xe020, 0xf822, 0x112b, 0xfe86, 0x1, 0x0);
        gbc.writeMem(0xa265, { 0x44 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7b27, gbc.sp());
        EXPECT(0xa266, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa265));
        // 44 036D
        gbc.setState(0x5975, 0xb08e, 0x7fb0, 0x96c6, 0xae50, 0x5ece, 0x0, 0x0);
        gbc.writeMem(0x5975, { 0x44 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb08e, gbc.sp());
        EXPECT(0x5976, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 036E
        gbc.setState(0x6016, 0x10a6, 0xb340, 0x648d, 0x774f, 0xe2f1, 0x1, 0x0);
        gbc.writeMem(0x6016, { 0x44 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x10a6, gbc.sp());
        EXPECT(0x6017, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0370
        gbc.setState(0x9dbe, 0x1f35, 0x8280, 0x900d, 0x2ded, 0x1010, 0x0, 0x1);
        gbc.writeMem(0x9dbe, { 0x44 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1f35, gbc.sp());
        EXPECT(0x9dbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x9dbe));
        // 44 0371
        gbc.setState(0x9dd6, 0xa271, 0x25e0, 0x6710, 0x6ada, 0x621b, 0x0, 0x0);
        gbc.writeMem(0x9dd6, { 0x44 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xa271, gbc.sp());
        EXPECT(0x9dd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x9dd6));
        // 44 0372
        gbc.setState(0xb7ee, 0xcdea, 0xe290, 0xa561, 0x97ab, 0x3c60, 0x1, 0x1);
        gbc.writeMem(0xb7ee, { 0x44 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xcdea, gbc.sp());
        EXPECT(0xb7ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xb7ee));
        // 44 0373
        gbc.setState(0x32c4, 0x7ffe, 0xb2e0, 0x3230, 0x8c31, 0xb0a2, 0x0, 0x1);
        gbc.writeMem(0x32c4, { 0x44 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x7ffe, gbc.sp());
        EXPECT(0x32c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0374
        gbc.setState(0x43d1, 0xde8a, 0xfc40, 0xf004, 0x4c07, 0x52e1, 0x1, 0x1);
        gbc.writeMem(0x43d1, { 0x44 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xde8a, gbc.sp());
        EXPECT(0x43d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0375
        gbc.setState(0xe5ff, 0x1d74, 0xf880, 0x8c65, 0x9bae, 0xc2bd, 0x1, 0x0);
        gbc.writeMem(0xe5ff, { 0x44 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x1d74, gbc.sp());
        EXPECT(0xe600, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xe5ff));
        // 44 0376
        gbc.setState(0xe56b, 0xc82e, 0x5320, 0x9b99, 0xf2a5, 0x5060, 0x1, 0x0);
        gbc.writeMem(0xe56b, { 0x44 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xc82e, gbc.sp());
        EXPECT(0xe56c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xe56b));
        // 44 0377
        gbc.setState(0xc466, 0xf35f, 0x8fd0, 0xa02d, 0xc7eb, 0x3dc5, 0x1, 0x0);
        gbc.writeMem(0xc466, { 0x44 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf35f, gbc.sp());
        EXPECT(0xc467, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xc466));
        // 44 0379
        gbc.setState(0x511d, 0x505b, 0x4410, 0x1a79, 0x26f2, 0x8485, 0x0, 0x0);
        gbc.writeMem(0x511d, { 0x44 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x505b, gbc.sp());
        EXPECT(0x511e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 037A
        gbc.setState(0xa73b, 0x9b39, 0x13b0, 0x45a2, 0x1cfa, 0x6310, 0x0, 0x0);
        gbc.writeMem(0xa73b, { 0x44 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x9b39, gbc.sp());
        EXPECT(0xa73c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa73b));
        // 44 037B
        gbc.setState(0x8776, 0x1175, 0x1f60, 0xdefc, 0x6d97, 0x8c10, 0x1, 0x0);
        gbc.writeMem(0x8776, { 0x44 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1175, gbc.sp());
        EXPECT(0x8777, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x8776));
        // 44 037C
        gbc.setState(0xb1a3, 0x883a, 0x4d30, 0x4039, 0x13b5, 0xa258, 0x0, 0x0);
        gbc.writeMem(0xb1a3, { 0x44 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x883a, gbc.sp());
        EXPECT(0xb1a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xb1a3));
        // 44 037D
        gbc.setState(0x9709, 0x2e42, 0x3040, 0x63b2, 0x7514, 0xa56e, 0x1, 0x0);
        gbc.writeMem(0x9709, { 0x44 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x2e42, gbc.sp());
        EXPECT(0x970a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x9709));
        // 44 037E
        gbc.setState(0x737, 0x75da, 0x4060, 0x40ab, 0x26d7, 0x1903, 0x0, 0x0);
        gbc.writeMem(0x737, { 0x44 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x75da, gbc.sp());
        EXPECT(0x738, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 037F
        gbc.setState(0x19f, 0xca67, 0xb360, 0x25f6, 0xcd02, 0xb424, 0x0, 0x0);
        gbc.writeMem(0x19f, { 0x44 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xca67, gbc.sp());
        EXPECT(0x1a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0380
        gbc.setState(0xcdab, 0x82d6, 0x12e0, 0x760, 0x1963, 0x4b05, 0x0, 0x0);
        gbc.writeMem(0xcdab, { 0x44 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x82d6, gbc.sp());
        EXPECT(0xcdac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xcdab));
        // 44 0381
        gbc.setState(0xce0e, 0x45a7, 0xef00, 0xfdbe, 0x7c2f, 0x95d7, 0x0, 0x1);
        gbc.writeMem(0xce0e, { 0x44 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x45a7, gbc.sp());
        EXPECT(0xce0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xce0e));
        // 44 0383
        gbc.setState(0xc18a, 0x40ab, 0xc020, 0x7219, 0xd9e5, 0xfc5e, 0x1, 0x1);
        gbc.writeMem(0xc18a, { 0x44 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x40ab, gbc.sp());
        EXPECT(0xc18b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xc18a));
        // 44 0384
        gbc.setState(0x63c2, 0x155, 0x2620, 0xe688, 0xf5f6, 0x15bd, 0x0, 0x0);
        gbc.writeMem(0x63c2, { 0x44 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x155, gbc.sp());
        EXPECT(0x63c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0385
        gbc.setState(0x5b8c, 0xb31e, 0x8240, 0x4451, 0x5f51, 0x2d4f, 0x0, 0x0);
        gbc.writeMem(0x5b8c, { 0x44 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xb31e, gbc.sp());
        EXPECT(0x5b8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0386
        gbc.setState(0xd7a3, 0xfc9e, 0x1cd0, 0xbc72, 0xee8b, 0x5ec3, 0x1, 0x0);
        gbc.writeMem(0xd7a3, { 0x44 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xfc9e, gbc.sp());
        EXPECT(0xd7a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xd7a3));
        // 44 0387
        gbc.setState(0xa1f0, 0x740, 0xb510, 0x7241, 0xd732, 0x514, 0x1, 0x1);
        gbc.writeMem(0xa1f0, { 0x44 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x740, gbc.sp());
        EXPECT(0xa1f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa1f0));
        // 44 0388
        gbc.setState(0x1f2, 0xeb67, 0x33e0, 0x869b, 0x527c, 0x4169, 0x1, 0x0);
        gbc.writeMem(0x1f2, { 0x44 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xeb67, gbc.sp());
        EXPECT(0x1f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0389
        gbc.setState(0x5783, 0x6422, 0x5940, 0x2080, 0x1d54, 0xf2a6, 0x1, 0x1);
        gbc.writeMem(0x5783, { 0x44 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x6422, gbc.sp());
        EXPECT(0x5784, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 038A
        gbc.setState(0x2dc7, 0x160c, 0xc760, 0xd5b1, 0x6211, 0x54, 0x0, 0x0);
        gbc.writeMem(0x2dc7, { 0x44 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x160c, gbc.sp());
        EXPECT(0x2dc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 038C
        gbc.setState(0x7beb, 0x1a56, 0xee30, 0x98c1, 0xb55d, 0x13ce, 0x0, 0x0);
        gbc.writeMem(0x7beb, { 0x44 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x1a56, gbc.sp());
        EXPECT(0x7bec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 038D
        gbc.setState(0x19b1, 0xa60c, 0x6c90, 0xd478, 0x784, 0x5b9, 0x1, 0x1);
        gbc.writeMem(0x19b1, { 0x44 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa60c, gbc.sp());
        EXPECT(0x19b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 038E
        gbc.setState(0x210e, 0xe2e0, 0xd6b0, 0x4b99, 0x9e11, 0x6b65, 0x1, 0x1);
        gbc.writeMem(0x210e, { 0x44 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xe2e0, gbc.sp());
        EXPECT(0x210f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 038F
        gbc.setState(0x2b0f, 0xbe81, 0x3260, 0xc17b, 0xcbb, 0x73bd, 0x1, 0x1);
        gbc.writeMem(0x2b0f, { 0x44 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xbe81, gbc.sp());
        EXPECT(0x2b10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0390
        gbc.setState(0x6121, 0xbfd9, 0xbf50, 0xcf39, 0xfbca, 0x586a, 0x1, 0x1);
        gbc.writeMem(0x6121, { 0x44 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xbfd9, gbc.sp());
        EXPECT(0x6122, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0391
        gbc.setState(0x92c2, 0x7f2, 0x6770, 0x7d5, 0x537a, 0x363a, 0x1, 0x0);
        gbc.writeMem(0x92c2, { 0x44 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x7f2, gbc.sp());
        EXPECT(0x92c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x92c2));
        // 44 0392
        gbc.setState(0xcaf4, 0x7af, 0x1070, 0x2986, 0xbaba, 0xb002, 0x0, 0x0);
        gbc.writeMem(0xcaf4, { 0x44 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7af, gbc.sp());
        EXPECT(0xcaf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xcaf4));
        // 44 0393
        gbc.setState(0x6227, 0xd389, 0x4350, 0x7378, 0xba0b, 0x2e63, 0x0, 0x0);
        gbc.writeMem(0x6227, { 0x44 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xd389, gbc.sp());
        EXPECT(0x6228, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0394
        gbc.setState(0x45ae, 0x7740, 0x1e20, 0x4494, 0xc57c, 0x1572, 0x1, 0x1);
        gbc.writeMem(0x45ae, { 0x44 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x7740, gbc.sp());
        EXPECT(0x45af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 0395
        gbc.setState(0x3953, 0x6df1, 0x9eb0, 0xc743, 0x530e, 0xd9cc, 0x0, 0x1);
        gbc.writeMem(0x3953, { 0x44 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x6df1, gbc.sp());
        EXPECT(0x3954, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0396
        gbc.setState(0x1b21, 0x2d2e, 0xca30, 0x146c, 0x57f6, 0x2217, 0x1, 0x1);
        gbc.writeMem(0x1b21, { 0x44 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2d2e, gbc.sp());
        EXPECT(0x1b22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 0397
        gbc.setState(0xd1f2, 0x6508, 0x4ab0, 0x7ba7, 0x2c2b, 0x1066, 0x0, 0x0);
        gbc.writeMem(0xd1f2, { 0x44 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6508, gbc.sp());
        EXPECT(0xd1f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xd1f2));
        // 44 0398
        gbc.setState(0xc363, 0xb2de, 0x9020, 0xb409, 0x3ae7, 0x568b, 0x0, 0x0);
        gbc.writeMem(0xc363, { 0x44 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xb2de, gbc.sp());
        EXPECT(0xc364, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xc363));
        // 44 039A
        gbc.setState(0x2cbf, 0x2d76, 0xd2e0, 0x232b, 0xf442, 0xe05d, 0x1, 0x1);
        gbc.writeMem(0x2cbf, { 0x44 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x2d76, gbc.sp());
        EXPECT(0x2cc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 039B
        gbc.setState(0x382a, 0x9c52, 0x8eb0, 0xd987, 0x3642, 0x9d7a, 0x1, 0x1);
        gbc.writeMem(0x382a, { 0x44 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9c52, gbc.sp());
        EXPECT(0x382b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 039C
        gbc.setState(0xc21e, 0x26e1, 0xf370, 0x1acb, 0x5afb, 0x6c0, 0x1, 0x0);
        gbc.writeMem(0xc21e, { 0x44 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x26e1, gbc.sp());
        EXPECT(0xc21f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xc21e));
        // 44 039D
        gbc.setState(0x5c1b, 0xe062, 0xffb0, 0x8757, 0x745e, 0xe337, 0x1, 0x0);
        gbc.writeMem(0x5c1b, { 0x44 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe062, gbc.sp());
        EXPECT(0x5c1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 039E
        gbc.setState(0xdcf6, 0x5bcb, 0xfba0, 0xa686, 0x3b57, 0xf1b7, 0x1, 0x1);
        gbc.writeMem(0xdcf6, { 0x44 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x5bcb, gbc.sp());
        EXPECT(0xdcf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xdcf6));
        // 44 039F
        gbc.setState(0xb2f7, 0x6650, 0x6880, 0x9a16, 0xbcab, 0x2a17, 0x0, 0x0);
        gbc.writeMem(0xb2f7, { 0x44 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x6650, gbc.sp());
        EXPECT(0xb2f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xb2f7));
        // 44 03A0
        gbc.setState(0x9c91, 0xacd, 0x280, 0x58b9, 0x269c, 0x94b4, 0x1, 0x0);
        gbc.writeMem(0x9c91, { 0x44 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xacd, gbc.sp());
        EXPECT(0x9c92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x9c91));
        // 44 03A1
        gbc.setState(0x12e, 0x5653, 0x23a0, 0x62d, 0xa3b1, 0x939e, 0x1, 0x0);
        gbc.writeMem(0x12e, { 0x44 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x5653, gbc.sp());
        EXPECT(0x12f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 03A2
        gbc.setState(0x2f2c, 0x59b0, 0xc770, 0xaa95, 0xbf46, 0x7c1c, 0x0, 0x1);
        gbc.writeMem(0x2f2c, { 0x44 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x59b0, gbc.sp());
        EXPECT(0x2f2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 03A3
        gbc.setState(0xe03a, 0xac30, 0x5eb0, 0xbcf3, 0xb67f, 0x224, 0x0, 0x0);
        gbc.writeMem(0xe03a, { 0x44 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xac30, gbc.sp());
        EXPECT(0xe03b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xe03a));
        // 44 03A4
        gbc.setState(0x280e, 0xbb53, 0x2160, 0xfc38, 0xf91e, 0xc222, 0x0, 0x1);
        gbc.writeMem(0x280e, { 0x44 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xbb53, gbc.sp());
        EXPECT(0x280f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 03A6
        gbc.setState(0x5c00, 0xf214, 0xff80, 0xbc0, 0x5377, 0x8394, 0x1, 0x1);
        gbc.writeMem(0x5c00, { 0x44 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xf214, gbc.sp());
        EXPECT(0x5c01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 03A7
        gbc.setState(0xa91d, 0x6c1c, 0x3ff0, 0x2f4a, 0x874f, 0xb37b, 0x0, 0x1);
        gbc.writeMem(0xa91d, { 0x44 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x6c1c, gbc.sp());
        EXPECT(0xa91e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa91d));
        // 44 03A8
        gbc.setState(0x6b7, 0xe037, 0x98e0, 0x665e, 0x37d2, 0x2b5a, 0x0, 0x1);
        gbc.writeMem(0x6b7, { 0x44 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xe037, gbc.sp());
        EXPECT(0x6b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 03A9
        gbc.setState(0x7f27, 0xc229, 0xc5a0, 0x1027, 0x596a, 0xaf70, 0x0, 0x0);
        gbc.writeMem(0x7f27, { 0x44 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xc229, gbc.sp());
        EXPECT(0x7f28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 03AA
        gbc.setState(0xa682, 0xeb01, 0x8e80, 0x897a, 0xf25a, 0xa96, 0x0, 0x1);
        gbc.writeMem(0xa682, { 0x44 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xeb01, gbc.sp());
        EXPECT(0xa683, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa682));
        // 44 03AB
        gbc.setState(0x2c4c, 0x6b9, 0x2650, 0xf4d, 0x74e7, 0x4, 0x1, 0x1);
        gbc.writeMem(0x2c4c, { 0x44 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x6b9, gbc.sp());
        EXPECT(0x2c4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 03AC
        gbc.setState(0xe9c4, 0xbc5c, 0x53d0, 0x4449, 0x5, 0x5144, 0x0, 0x1);
        gbc.writeMem(0xe9c4, { 0x44 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xbc5c, gbc.sp());
        EXPECT(0xe9c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xe9c4));
        // 44 03AD
        gbc.setState(0x2109, 0xc6e6, 0x2710, 0xd805, 0xc168, 0xcd80, 0x0, 0x0);
        gbc.writeMem(0x2109, { 0x44 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xc6e6, gbc.sp());
        EXPECT(0x210a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 03AE
        gbc.setState(0x1c3f, 0x6638, 0x7940, 0x5ee0, 0x11e5, 0x9c4, 0x0, 0x1);
        gbc.writeMem(0x1c3f, { 0x44 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x6638, gbc.sp());
        EXPECT(0x1c40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 03AF
        gbc.setState(0x5663, 0xa19d, 0x32c0, 0xb55a, 0xd605, 0x51a4, 0x0, 0x1);
        gbc.writeMem(0x5663, { 0x44 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xa19d, gbc.sp());
        EXPECT(0x5664, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 03B0
        gbc.setState(0x2693, 0x53d9, 0x1e00, 0xb864, 0xee02, 0xaf5b, 0x0, 0x0);
        gbc.writeMem(0x2693, { 0x44 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x53d9, gbc.sp());
        EXPECT(0x2694, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 03B1
        gbc.setState(0x2b14, 0x86e4, 0x6b80, 0x23fa, 0xbc70, 0x8f5b, 0x0, 0x0);
        gbc.writeMem(0x2b14, { 0x44 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x86e4, gbc.sp());
        EXPECT(0x2b15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 03B2
        gbc.setState(0xb4ee, 0x6b09, 0x8050, 0x46f2, 0xb005, 0xe542, 0x1, 0x1);
        gbc.writeMem(0xb4ee, { 0x44 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x6b09, gbc.sp());
        EXPECT(0xb4ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xb4ee));
        // 44 03B3
        gbc.setState(0xb4e6, 0xae8c, 0x3fe0, 0x68ea, 0x9826, 0x9fb3, 0x1, 0x1);
        gbc.writeMem(0xb4e6, { 0x44 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xae8c, gbc.sp());
        EXPECT(0xb4e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xb4e6));
        // 44 03B4
        gbc.setState(0x1ea6, 0xea4b, 0xc050, 0xd8c7, 0xe5e3, 0x99ee, 0x0, 0x1);
        gbc.writeMem(0x1ea6, { 0x44 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xea4b, gbc.sp());
        EXPECT(0x1ea7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 03B5
        gbc.setState(0x2c83, 0xd91d, 0x89c0, 0xe51a, 0x915c, 0x91a1, 0x1, 0x1);
        gbc.writeMem(0x2c83, { 0x44 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xd91d, gbc.sp());
        EXPECT(0x2c84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 03B6
        gbc.setState(0x16b1, 0x762b, 0x19e0, 0x9cb3, 0x424c, 0xe8ec, 0x0, 0x0);
        gbc.writeMem(0x16b1, { 0x44 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x762b, gbc.sp());
        EXPECT(0x16b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 03B7
        gbc.setState(0xefa8, 0x1aa8, 0x9700, 0xc186, 0x4823, 0x3050, 0x0, 0x0);
        gbc.writeMem(0xefa8, { 0x44 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x1aa8, gbc.sp());
        EXPECT(0xefa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xefa8));
        // 44 03B8
        gbc.setState(0xbd78, 0x6e2e, 0x79a0, 0xb2f0, 0x5599, 0x1b39, 0x0, 0x1);
        gbc.writeMem(0xbd78, { 0x44 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x6e2e, gbc.sp());
        EXPECT(0xbd79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xbd78));
        // 44 03B9
        gbc.setState(0xd00c, 0x9b94, 0x1fe0, 0xd9f0, 0x9924, 0x9c04, 0x0, 0x0);
        gbc.writeMem(0xd00c, { 0x44 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x9b94, gbc.sp());
        EXPECT(0xd00d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xd00c));
        // 44 03BA
        gbc.setState(0x6abf, 0xa90a, 0xcca0, 0x9acd, 0x2076, 0xdeef, 0x1, 0x0);
        gbc.writeMem(0x6abf, { 0x44 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xa90a, gbc.sp());
        EXPECT(0x6ac0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 03BB
        gbc.setState(0x12fc, 0x7071, 0xe290, 0xa5c5, 0x3ed9, 0xb5d9, 0x0, 0x1);
        gbc.writeMem(0x12fc, { 0x44 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x7071, gbc.sp());
        EXPECT(0x12fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 03BC
        gbc.setState(0x8fac, 0x8923, 0x3f80, 0x7abe, 0xaf10, 0x4777, 0x0, 0x1);
        gbc.writeMem(0x8fac, { 0x44 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x8923, gbc.sp());
        EXPECT(0x8fad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x8fac));
        // 44 03BD
        gbc.setState(0xc712, 0x5e28, 0x9740, 0x40b4, 0x2011, 0x9edb, 0x0, 0x0);
        gbc.writeMem(0xc712, { 0x44 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x5e28, gbc.sp());
        EXPECT(0xc713, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xc712));
        // 44 03BE
        gbc.setState(0xcfd5, 0xb971, 0x31c0, 0xfcc2, 0x4dbb, 0x2e85, 0x1, 0x0);
        gbc.writeMem(0xcfd5, { 0x44 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb971, gbc.sp());
        EXPECT(0xcfd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xcfd5));
        // 44 03BF
        gbc.setState(0xb902, 0x7877, 0x7380, 0xd65, 0xb576, 0xd089, 0x1, 0x0);
        gbc.writeMem(0xb902, { 0x44 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x7877, gbc.sp());
        EXPECT(0xb903, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xb902));
        // 44 03C0
        gbc.setState(0xb58f, 0xe163, 0x2460, 0x6986, 0x492a, 0x8717, 0x1, 0x0);
        gbc.writeMem(0xb58f, { 0x44 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xe163, gbc.sp());
        EXPECT(0xb590, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xb58f));
        // 44 03C1
        gbc.setState(0x9ae, 0x16a1, 0xe880, 0xe19e, 0x250f, 0x12e1, 0x1, 0x0);
        gbc.writeMem(0x9ae, { 0x44 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x16a1, gbc.sp());
        EXPECT(0x9af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 03C2
        gbc.setState(0xd975, 0x737c, 0xd710, 0x35a2, 0x8e0f, 0xfe98, 0x0, 0x0);
        gbc.writeMem(0xd975, { 0x44 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x737c, gbc.sp());
        EXPECT(0xd976, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xd975));
        // 44 03C3
        gbc.setState(0x70f4, 0x7e76, 0xee00, 0xdfef, 0xa758, 0x5ef5, 0x0, 0x0);
        gbc.writeMem(0x70f4, { 0x44 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x7e76, gbc.sp());
        EXPECT(0x70f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 03C4
        gbc.setState(0x2202, 0xb567, 0x4580, 0x2607, 0xcd81, 0x4301, 0x0, 0x1);
        gbc.writeMem(0x2202, { 0x44 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xb567, gbc.sp());
        EXPECT(0x2203, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 03C5
        gbc.setState(0x2996, 0xd861, 0x2aa0, 0x286a, 0x3a47, 0xc234, 0x0, 0x0);
        gbc.writeMem(0x2996, { 0x44 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xd861, gbc.sp());
        EXPECT(0x2997, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 03C6
        gbc.setState(0xc9c9, 0x795b, 0x4370, 0x67f8, 0xd016, 0xb235, 0x0, 0x0);
        gbc.writeMem(0xc9c9, { 0x44 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x795b, gbc.sp());
        EXPECT(0xc9ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xc9c9));
        // 44 03C7
        gbc.setState(0x2614, 0x960e, 0x7e30, 0x5658, 0x323d, 0x701f, 0x0, 0x1);
        gbc.writeMem(0x2614, { 0x44 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x960e, gbc.sp());
        EXPECT(0x2615, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 03C8
        gbc.setState(0x8f26, 0x11b9, 0xc260, 0x3581, 0x812e, 0x8c44, 0x0, 0x0);
        gbc.writeMem(0x8f26, { 0x44 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x11b9, gbc.sp());
        EXPECT(0x8f27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x8f26));
        // 44 03C9
        gbc.setState(0xce3b, 0x4f7d, 0x90c0, 0xde88, 0x2dd1, 0x5977, 0x0, 0x0);
        gbc.writeMem(0xce3b, { 0x44 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x4f7d, gbc.sp());
        EXPECT(0xce3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xce3b));
        // 44 03CA
        gbc.setState(0x5c36, 0x2891, 0x8370, 0xf2ac, 0x7dc0, 0x279c, 0x0, 0x0);
        gbc.writeMem(0x5c36, { 0x44 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x2891, gbc.sp());
        EXPECT(0x5c37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 03CB
        gbc.setState(0xb65c, 0xcf33, 0x8b90, 0x2e69, 0xd508, 0x55e6, 0x0, 0x0);
        gbc.writeMem(0xb65c, { 0x44 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xcf33, gbc.sp());
        EXPECT(0xb65d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xb65c));
        // 44 03CC
        gbc.setState(0x197e, 0xa648, 0x9480, 0x6990, 0xaadf, 0x5650, 0x1, 0x0);
        gbc.writeMem(0x197e, { 0x44 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa648, gbc.sp());
        EXPECT(0x197f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 03CD
        gbc.setState(0x1c3b, 0xd486, 0xf5c0, 0xbb5b, 0x5fcf, 0x23b7, 0x1, 0x1);
        gbc.writeMem(0x1c3b, { 0x44 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xd486, gbc.sp());
        EXPECT(0x1c3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 03CE
        gbc.setState(0x938a, 0xeeed, 0xb760, 0xa86b, 0xa9e, 0x3959, 0x0, 0x0);
        gbc.writeMem(0x938a, { 0x44 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xeeed, gbc.sp());
        EXPECT(0x938b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x938a));
        // 44 03CF
        gbc.setState(0x323e, 0x9cbb, 0xf000, 0x9d9b, 0xd04c, 0xaba9, 0x1, 0x1);
        gbc.writeMem(0x323e, { 0x44 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x9cbb, gbc.sp());
        EXPECT(0x323f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 03D0
        gbc.setState(0xc5ea, 0x4df4, 0x72e0, 0xabdb, 0xc160, 0x42a8, 0x1, 0x1);
        gbc.writeMem(0xc5ea, { 0x44 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x4df4, gbc.sp());
        EXPECT(0xc5eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xc5ea));
        // 44 03D1
        gbc.setState(0x9194, 0xf0be, 0x1f80, 0x7565, 0xf323, 0x370e, 0x0, 0x0);
        gbc.writeMem(0x9194, { 0x44 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xf0be, gbc.sp());
        EXPECT(0x9195, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x9194));
        // 44 03D2
        gbc.setState(0x6c07, 0x6200, 0x9550, 0x1919, 0xf67b, 0x53d8, 0x1, 0x0);
        gbc.writeMem(0x6c07, { 0x44 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x6200, gbc.sp());
        EXPECT(0x6c08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 03D3
        gbc.setState(0x63bd, 0x916c, 0x7390, 0x8e21, 0x7d86, 0x9499, 0x0, 0x1);
        gbc.writeMem(0x63bd, { 0x44 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x916c, gbc.sp());
        EXPECT(0x63be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 03D4
        gbc.setState(0x41f0, 0x5638, 0x66a0, 0x7b45, 0xac9c, 0x5ae2, 0x0, 0x0);
        gbc.writeMem(0x41f0, { 0x44 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x5638, gbc.sp());
        EXPECT(0x41f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 03D5
        gbc.setState(0xc6d3, 0xd555, 0x450, 0xd3bd, 0xa708, 0x8d2d, 0x0, 0x0);
        gbc.writeMem(0xc6d3, { 0x44 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xd555, gbc.sp());
        EXPECT(0xc6d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xc6d3));
        // 44 03D6
        gbc.setState(0xc276, 0x115f, 0xc1f0, 0xe588, 0xeaeb, 0x2d86, 0x0, 0x0);
        gbc.writeMem(0xc276, { 0x44 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x115f, gbc.sp());
        EXPECT(0xc277, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xc276));
        // 44 03D8
        gbc.setState(0xe32c, 0x339, 0xa7b0, 0xd2ed, 0x417a, 0xa497, 0x1, 0x0);
        gbc.writeMem(0xe32c, { 0x44 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x339, gbc.sp());
        EXPECT(0xe32d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xe32c));
        // 44 03D9
        gbc.setState(0x61d4, 0x7697, 0xc4f0, 0x9d17, 0xa810, 0x4839, 0x1, 0x1);
        gbc.writeMem(0x61d4, { 0x44 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7697, gbc.sp());
        EXPECT(0x61d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 03DA
        gbc.setState(0x273f, 0x8faf, 0x5530, 0xd5a, 0x635, 0xf0c8, 0x1, 0x1);
        gbc.writeMem(0x273f, { 0x44 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x8faf, gbc.sp());
        EXPECT(0x2740, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 03DB
        gbc.setState(0xd937, 0x3754, 0x560, 0x912e, 0xad9d, 0x6342, 0x1, 0x1);
        gbc.writeMem(0xd937, { 0x44 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3754, gbc.sp());
        EXPECT(0xd938, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xd937));
        // 44 03DD
        gbc.setState(0x4b1f, 0xe416, 0xe20, 0x672c, 0x5a30, 0xf3fb, 0x0, 0x1);
        gbc.writeMem(0x4b1f, { 0x44 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe416, gbc.sp());
        EXPECT(0x4b20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 03DE
        gbc.setState(0x60ee, 0x334, 0xa400, 0xf87f, 0x3cda, 0x2d20, 0x0, 0x0);
        gbc.writeMem(0x60ee, { 0x44 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x334, gbc.sp());
        EXPECT(0x60ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 03DF
        gbc.setState(0x619e, 0x8382, 0xb960, 0xa7f6, 0xb487, 0xc64f, 0x1, 0x1);
        gbc.writeMem(0x619e, { 0x44 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x8382, gbc.sp());
        EXPECT(0x619f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 03E0
        gbc.setState(0xc2de, 0xbc8d, 0xcfd0, 0x3b4d, 0x41bf, 0x6479, 0x1, 0x1);
        gbc.writeMem(0xc2de, { 0x44 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xbc8d, gbc.sp());
        EXPECT(0xc2df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xc2de));
        // 44 03E1
        gbc.setState(0xc67, 0xde92, 0x2600, 0x6288, 0xee70, 0xc049, 0x0, 0x0);
        gbc.writeMem(0xc67, { 0x44 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xde92, gbc.sp());
        EXPECT(0xc68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 44 03E2
        gbc.setState(0xea4c, 0x9e2f, 0x64c0, 0xe3c6, 0x75fd, 0x711e, 0x1, 0x0);
        gbc.writeMem(0xea4c, { 0x44 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x9e2f, gbc.sp());
        EXPECT(0xea4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xea4c));
        // 44 03E3
        gbc.setState(0x8ec0, 0xb05b, 0x5a30, 0x1ea0, 0x157c, 0xa561, 0x1, 0x1);
        gbc.writeMem(0x8ec0, { 0x44 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xb05b, gbc.sp());
        EXPECT(0x8ec1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x8ec0));
        // 44 03E4
        gbc.setState(0x37b4, 0x4221, 0xf3f0, 0xb19d, 0x334, 0xdc70, 0x1, 0x1);
        gbc.writeMem(0x37b4, { 0x44 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x4221, gbc.sp());
        EXPECT(0x37b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 44 03E5
        gbc.setState(0xdec1, 0x78c6, 0x5bb0, 0xd89f, 0x3a82, 0xfcd3, 0x0, 0x1);
        gbc.writeMem(0xdec1, { 0x44 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x78c6, gbc.sp());
        EXPECT(0xdec2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xdec1));
        // 44 03E6
        gbc.setState(0xc100, 0x324b, 0x7c40, 0xe219, 0xa618, 0xbd14, 0x1, 0x0);
        gbc.writeMem(0xc100, { 0x44 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x324b, gbc.sp());
        EXPECT(0xc101, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xc100));
        // 44 03E7
        gbc.setState(0x1611, 0x9c13, 0xb780, 0x322, 0xcb68, 0x4374, 0x1, 0x0);
        gbc.writeMem(0x1611, { 0x44 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x9c13, gbc.sp());
        EXPECT(0x1612, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
