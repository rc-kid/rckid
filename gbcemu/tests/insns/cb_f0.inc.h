    TEST(gbcemu, opcode_cb_f0) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB F0 0000
        gbc.setState(0x3d12, 0x8701, 0xb170, 0xa232, 0x4b2f, 0xdae6, 0x0, 0x1);
        gbc.writeMem(0x3d12, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x8701);
        EXPECT(gbc.pc(), 0x3d14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0001
        gbc.setState(0x4af8, 0x73d8, 0xc0, 0xcce2, 0xbaaa, 0x2460, 0x1, 0x0);
        gbc.writeMem(0x4af8, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x73d8);
        EXPECT(gbc.pc(), 0x4afa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0002
        gbc.setState(0x1e88, 0xc237, 0x1f50, 0x1586, 0xb28, 0xea90, 0x0, 0x1);
        gbc.writeMem(0x1e88, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xc237);
        EXPECT(gbc.pc(), 0x1e8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0003
        gbc.setState(0x83b5, 0xa889, 0xd2a0, 0xb6ef, 0x2d1, 0x8d1a, 0x0, 0x1);
        gbc.writeMem(0x83b5, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xa889);
        EXPECT(gbc.pc(), 0x83b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83b5), 0xcb);
        EXPECT(gbc.readMem(0x83b6), 0xf0);
        // CB F0 0004
        gbc.setState(0x1fb8, 0xbf87, 0x8d80, 0xa8e0, 0x6657, 0x328, 0x0, 0x1);
        gbc.writeMem(0x1fb8, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xbf87);
        EXPECT(gbc.pc(), 0x1fba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0006
        gbc.setState(0xdc2e, 0xd894, 0xbdb0, 0x798, 0x9e5b, 0xe00a, 0x1, 0x1);
        gbc.writeMem(0xdc2e, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xd894);
        EXPECT(gbc.pc(), 0xdc30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc2e), 0xcb);
        EXPECT(gbc.readMem(0xdc2f), 0xf0);
        // CB F0 0007
        gbc.setState(0x22c2, 0x8fb3, 0xc7e0, 0x7968, 0xdee2, 0x5fb1, 0x0, 0x0);
        gbc.writeMem(0x22c2, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x8fb3);
        EXPECT(gbc.pc(), 0x22c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0008
        gbc.setState(0x50b, 0xacc3, 0x67c0, 0x4426, 0xcf90, 0xb55c, 0x1, 0x0);
        gbc.writeMem(0x50b, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xacc3);
        EXPECT(gbc.pc(), 0x50d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0009
        gbc.setState(0x5168, 0x23f0, 0x1340, 0x15b3, 0xad02, 0xcd5a, 0x1, 0x1);
        gbc.writeMem(0x5168, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x23f0);
        EXPECT(gbc.pc(), 0x516a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 000A
        gbc.setState(0x4fa8, 0xb43a, 0x4fe0, 0x2580, 0xa302, 0x5e66, 0x0, 0x0);
        gbc.writeMem(0x4fa8, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xb43a);
        EXPECT(gbc.pc(), 0x4faa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 000B
        gbc.setState(0x8974, 0x5b4f, 0x8770, 0x4142, 0x4773, 0xc145, 0x0, 0x1);
        gbc.writeMem(0x8974, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x5b4f);
        EXPECT(gbc.pc(), 0x8976);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8974), 0xcb);
        EXPECT(gbc.readMem(0x8975), 0xf0);
        // CB F0 000C
        gbc.setState(0x2078, 0x402f, 0x3d00, 0xff9f, 0xe22a, 0x2c60, 0x1, 0x1);
        gbc.writeMem(0x2078, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x402f);
        EXPECT(gbc.pc(), 0x207a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 000D
        gbc.setState(0xcedc, 0x36a2, 0x5a00, 0xead3, 0x2711, 0xda4c, 0x1, 0x0);
        gbc.writeMem(0xcedc, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x36a2);
        EXPECT(gbc.pc(), 0xcede);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcedc), 0xcb);
        EXPECT(gbc.readMem(0xcedd), 0xf0);
        // CB F0 000E
        gbc.setState(0x207b, 0x15d7, 0x7090, 0x1b05, 0x2aaa, 0xf928, 0x1, 0x0);
        gbc.writeMem(0x207b, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x15d7);
        EXPECT(gbc.pc(), 0x207d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 000F
        gbc.setState(0x3631, 0xa09f, 0xebb0, 0x7854, 0x9f49, 0x401e, 0x0, 0x0);
        gbc.writeMem(0x3631, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xa09f);
        EXPECT(gbc.pc(), 0x3633);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0010
        gbc.setState(0xe783, 0xce4a, 0x6f90, 0xc02f, 0x9f89, 0xbe7f, 0x1, 0x0);
        gbc.writeMem(0xe783, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xce4a);
        EXPECT(gbc.pc(), 0xe785);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe783), 0xcb);
        EXPECT(gbc.readMem(0xe784), 0xf0);
        // CB F0 0011
        gbc.setState(0x2a36, 0xa556, 0xbbd0, 0xcbef, 0x4dec, 0x852f, 0x1, 0x0);
        gbc.writeMem(0x2a36, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xa556);
        EXPECT(gbc.pc(), 0x2a38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0012
        gbc.setState(0x4a68, 0xed8c, 0x6c90, 0x75f, 0x102e, 0xe039, 0x0, 0x1);
        gbc.writeMem(0x4a68, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xed8c);
        EXPECT(gbc.pc(), 0x4a6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0013
        gbc.setState(0x3db0, 0xb050, 0x1a90, 0x3c8d, 0xa643, 0x6ffe, 0x0, 0x0);
        gbc.writeMem(0x3db0, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xb050);
        EXPECT(gbc.pc(), 0x3db2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0014
        gbc.setState(0xdb8c, 0x74cb, 0x5de0, 0x9c15, 0xb839, 0x63e9, 0x1, 0x1);
        gbc.writeMem(0xdb8c, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x74cb);
        EXPECT(gbc.pc(), 0xdb8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb8c), 0xcb);
        EXPECT(gbc.readMem(0xdb8d), 0xf0);
        // CB F0 0015
        gbc.setState(0x3fff, 0x51c4, 0xb510, 0x7f0f, 0x7045, 0xf67f, 0x0, 0x0);
        gbc.writeMem(0x3fff, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x51c4);
        EXPECT(gbc.pc(), 0x4001);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0016
        gbc.setState(0xb49, 0x5e6b, 0xdbc0, 0xd1ee, 0xf6be, 0x62d, 0x0, 0x1);
        gbc.writeMem(0xb49, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x5e6b);
        EXPECT(gbc.pc(), 0xb4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0017
        gbc.setState(0x77f6, 0x28b6, 0x4640, 0x316e, 0xa5c3, 0xe80b, 0x1, 0x1);
        gbc.writeMem(0x77f6, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x28b6);
        EXPECT(gbc.pc(), 0x77f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0018
        gbc.setState(0x2714, 0xf2e0, 0xf50, 0x4a98, 0xd306, 0x9242, 0x1, 0x0);
        gbc.writeMem(0x2714, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xf2e0);
        EXPECT(gbc.pc(), 0x2716);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 001A
        gbc.setState(0x7cbd, 0x2f99, 0x7290, 0xd09e, 0x3098, 0x7c6d, 0x0, 0x0);
        gbc.writeMem(0x7cbd, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x2f99);
        EXPECT(gbc.pc(), 0x7cbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 001B
        gbc.setState(0xe592, 0x1525, 0xc670, 0xefab, 0xe8f1, 0x977c, 0x0, 0x1);
        gbc.writeMem(0xe592, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x1525);
        EXPECT(gbc.pc(), 0xe594);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe592), 0xcb);
        EXPECT(gbc.readMem(0xe593), 0xf0);
        // CB F0 001C
        gbc.setState(0x43ef, 0xef54, 0x5350, 0x4206, 0x6afe, 0x2361, 0x0, 0x0);
        gbc.writeMem(0x43ef, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xef54);
        EXPECT(gbc.pc(), 0x43f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 001D
        gbc.setState(0xbd79, 0x8da3, 0x48b0, 0x2ce1, 0x6ee4, 0x8544, 0x1, 0x0);
        gbc.writeMem(0xbd79, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x8da3);
        EXPECT(gbc.pc(), 0xbd7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd79), 0xcb);
        EXPECT(gbc.readMem(0xbd7a), 0xf0);
        // CB F0 001E
        gbc.setState(0xbd7d, 0x1b27, 0x9420, 0x1f69, 0x99b2, 0x13a0, 0x0, 0x0);
        gbc.writeMem(0xbd7d, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x1b27);
        EXPECT(gbc.pc(), 0xbd7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd7d), 0xcb);
        EXPECT(gbc.readMem(0xbd7e), 0xf0);
        // CB F0 001F
        gbc.setState(0xb012, 0xaa3c, 0x6a30, 0x941, 0x4f3f, 0xc04f, 0x0, 0x1);
        gbc.writeMem(0xb012, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xaa3c);
        EXPECT(gbc.pc(), 0xb014);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb012), 0xcb);
        EXPECT(gbc.readMem(0xb013), 0xf0);
        // CB F0 0020
        gbc.setState(0xe593, 0x6149, 0xd460, 0x479f, 0x1e38, 0x603e, 0x1, 0x1);
        gbc.writeMem(0xe593, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x6149);
        EXPECT(gbc.pc(), 0xe595);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe593), 0xcb);
        EXPECT(gbc.readMem(0xe594), 0xf0);
        // CB F0 0021
        gbc.setState(0x7b0e, 0xa438, 0xbc50, 0x5173, 0xb8fa, 0x9158, 0x0, 0x1);
        gbc.writeMem(0x7b0e, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xa438);
        EXPECT(gbc.pc(), 0x7b10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0022
        gbc.setState(0x756f, 0x4ae7, 0xfb00, 0xdd09, 0xfcd5, 0x7b75, 0x1, 0x0);
        gbc.writeMem(0x756f, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x4ae7);
        EXPECT(gbc.pc(), 0x7571);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0023
        gbc.setState(0xa555, 0x9444, 0xb4c0, 0x9800, 0xe695, 0x898a, 0x0, 0x1);
        gbc.writeMem(0xa555, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x9444);
        EXPECT(gbc.pc(), 0xa557);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa555), 0xcb);
        EXPECT(gbc.readMem(0xa556), 0xf0);
        // CB F0 0024
        gbc.setState(0xd23e, 0xace3, 0xc210, 0x9911, 0xf5d0, 0x52d0, 0x0, 0x1);
        gbc.writeMem(0xd23e, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xace3);
        EXPECT(gbc.pc(), 0xd240);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd23e), 0xcb);
        EXPECT(gbc.readMem(0xd23f), 0xf0);
        // CB F0 0026
        gbc.setState(0x77ca, 0xeaac, 0xa490, 0x4282, 0x256c, 0xae55, 0x0, 0x1);
        gbc.writeMem(0x77ca, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xeaac);
        EXPECT(gbc.pc(), 0x77cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0027
        gbc.setState(0x7da0, 0xf884, 0x34c0, 0x7402, 0x582b, 0x45a9, 0x0, 0x0);
        gbc.writeMem(0x7da0, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xf884);
        EXPECT(gbc.pc(), 0x7da2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0028
        gbc.setState(0x2c78, 0xaabe, 0x1290, 0xc998, 0x807f, 0xbc4e, 0x0, 0x0);
        gbc.writeMem(0x2c78, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xaabe);
        EXPECT(gbc.pc(), 0x2c7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0029
        gbc.setState(0x7c8f, 0x7544, 0x3680, 0x13bf, 0x3545, 0x501e, 0x1, 0x1);
        gbc.writeMem(0x7c8f, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x7544);
        EXPECT(gbc.pc(), 0x7c91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 002A
        gbc.setState(0xe6be, 0x7242, 0x57a0, 0xce62, 0x77f8, 0x780a, 0x0, 0x1);
        gbc.writeMem(0xe6be, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x7242);
        EXPECT(gbc.pc(), 0xe6c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6be), 0xcb);
        EXPECT(gbc.readMem(0xe6bf), 0xf0);
        // CB F0 002B
        gbc.setState(0x660, 0xc892, 0x48e0, 0x280e, 0x5a1e, 0x26bd, 0x1, 0x1);
        gbc.writeMem(0x660, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xc892);
        EXPECT(gbc.pc(), 0x662);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 002C
        gbc.setState(0x8731, 0xc9d4, 0x700, 0xe067, 0x5daa, 0xc3dc, 0x0, 0x0);
        gbc.writeMem(0x8731, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xc9d4);
        EXPECT(gbc.pc(), 0x8733);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8731), 0xcb);
        EXPECT(gbc.readMem(0x8732), 0xf0);
        // CB F0 002D
        gbc.setState(0x6978, 0xbc6e, 0x1d40, 0xcced, 0xdddb, 0xea13, 0x0, 0x1);
        gbc.writeMem(0x6978, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xbc6e);
        EXPECT(gbc.pc(), 0x697a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0030
        gbc.setState(0x11ff, 0xf21d, 0x8e40, 0x414f, 0x9faf, 0x3edf, 0x0, 0x0);
        gbc.writeMem(0x11ff, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xf21d);
        EXPECT(gbc.pc(), 0x1201);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0031
        gbc.setState(0xb93f, 0xbaab, 0xd470, 0x42a5, 0x3624, 0xd97c, 0x0, 0x0);
        gbc.writeMem(0xb93f, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xbaab);
        EXPECT(gbc.pc(), 0xb941);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb93f), 0xcb);
        EXPECT(gbc.readMem(0xb940), 0xf0);
        // CB F0 0032
        gbc.setState(0x9a21, 0xff0, 0x66c0, 0x491d, 0x40e, 0xfbef, 0x0, 0x1);
        gbc.writeMem(0x9a21, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xff0);
        EXPECT(gbc.pc(), 0x9a23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a21), 0xcb);
        EXPECT(gbc.readMem(0x9a22), 0xf0);
        // CB F0 0033
        gbc.setState(0xc8, 0x2de1, 0x64e0, 0x5b50, 0xed81, 0xbc7d, 0x0, 0x0);
        gbc.writeMem(0xc8, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x2de1);
        EXPECT(gbc.pc(), 0xca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0034
        gbc.setState(0x9dcf, 0x8aaf, 0xc930, 0x6662, 0xbe10, 0x3b67, 0x1, 0x1);
        gbc.writeMem(0x9dcf, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x8aaf);
        EXPECT(gbc.pc(), 0x9dd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dcf), 0xcb);
        EXPECT(gbc.readMem(0x9dd0), 0xf0);
        // CB F0 0035
        gbc.setState(0x2107, 0x839d, 0xbfe0, 0x8d65, 0xc66e, 0x9ff, 0x1, 0x0);
        gbc.writeMem(0x2107, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x839d);
        EXPECT(gbc.pc(), 0x2109);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0036
        gbc.setState(0x1427, 0x8fd1, 0x8670, 0xb1c2, 0x9fa7, 0xdb61, 0x0, 0x0);
        gbc.writeMem(0x1427, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x8fd1);
        EXPECT(gbc.pc(), 0x1429);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0037
        gbc.setState(0x13a7, 0x1bc8, 0x2dd0, 0xef92, 0x645a, 0xff70, 0x0, 0x1);
        gbc.writeMem(0x13a7, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x1bc8);
        EXPECT(gbc.pc(), 0x13a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0038
        gbc.setState(0x123b, 0xae27, 0x5f40, 0xbb8d, 0x32ea, 0xa6e9, 0x1, 0x1);
        gbc.writeMem(0x123b, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xae27);
        EXPECT(gbc.pc(), 0x123d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0039
        gbc.setState(0xedb5, 0xbb45, 0xe590, 0x8090, 0xf082, 0xc9d2, 0x1, 0x0);
        gbc.writeMem(0xedb5, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xbb45);
        EXPECT(gbc.pc(), 0xedb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedb5), 0xcb);
        EXPECT(gbc.readMem(0xedb6), 0xf0);
        // CB F0 003A
        gbc.setState(0xb328, 0xfef7, 0x6790, 0x1c24, 0x2139, 0xca7b, 0x1, 0x1);
        gbc.writeMem(0xb328, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xfef7);
        EXPECT(gbc.pc(), 0xb32a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb328), 0xcb);
        EXPECT(gbc.readMem(0xb329), 0xf0);
        // CB F0 003B
        gbc.setState(0xd7fe, 0xb65e, 0xeac0, 0xea87, 0xf5dd, 0x4ccc, 0x0, 0x0);
        gbc.writeMem(0xd7fe, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xb65e);
        EXPECT(gbc.pc(), 0xd800);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7fe), 0xcb);
        EXPECT(gbc.readMem(0xd7ff), 0xf0);
        // CB F0 003C
        gbc.setState(0x8d77, 0x1c2d, 0x9c50, 0x99e3, 0x8596, 0x269, 0x1, 0x0);
        gbc.writeMem(0x8d77, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x1c2d);
        EXPECT(gbc.pc(), 0x8d79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d77), 0xcb);
        EXPECT(gbc.readMem(0x8d78), 0xf0);
        // CB F0 003D
        gbc.setState(0xd5fe, 0x2254, 0xc690, 0xada1, 0x6d44, 0xe272, 0x0, 0x0);
        gbc.writeMem(0xd5fe, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x2254);
        EXPECT(gbc.pc(), 0xd600);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5fe), 0xcb);
        EXPECT(gbc.readMem(0xd5ff), 0xf0);
        // CB F0 003E
        gbc.setState(0x8787, 0x6f22, 0xb7b0, 0xd853, 0x18e4, 0xe2cb, 0x1, 0x0);
        gbc.writeMem(0x8787, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x6f22);
        EXPECT(gbc.pc(), 0x8789);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8787), 0xcb);
        EXPECT(gbc.readMem(0x8788), 0xf0);
        // CB F0 003F
        gbc.setState(0x5b29, 0xc05f, 0xb7b0, 0x48f, 0x6353, 0xe43d, 0x1, 0x1);
        gbc.writeMem(0x5b29, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xc05f);
        EXPECT(gbc.pc(), 0x5b2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0040
        gbc.setState(0x7191, 0x8ac8, 0x2bd0, 0xb9de, 0x5374, 0xa0f7, 0x1, 0x1);
        gbc.writeMem(0x7191, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x8ac8);
        EXPECT(gbc.pc(), 0x7193);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0041
        gbc.setState(0x77cd, 0xcf62, 0xe520, 0xa9c0, 0xfa94, 0x8979, 0x1, 0x1);
        gbc.writeMem(0x77cd, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xcf62);
        EXPECT(gbc.pc(), 0x77cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0042
        gbc.setState(0x44, 0x3460, 0xc030, 0x4543, 0x46dd, 0x5126, 0x1, 0x0);
        gbc.writeMem(0x44, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x3460);
        EXPECT(gbc.pc(), 0x46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0043
        gbc.setState(0x3d18, 0xb2fb, 0x50, 0x3054, 0x2d5a, 0xc2c6, 0x1, 0x0);
        gbc.writeMem(0x3d18, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xb2fb);
        EXPECT(gbc.pc(), 0x3d1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0045
        gbc.setState(0x2611, 0x4252, 0x8c40, 0xbb2c, 0xd3a6, 0xbf71, 0x1, 0x0);
        gbc.writeMem(0x2611, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x4252);
        EXPECT(gbc.pc(), 0x2613);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0046
        gbc.setState(0x8353, 0x27a4, 0x4230, 0x8ed6, 0xa959, 0x525d, 0x0, 0x1);
        gbc.writeMem(0x8353, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x27a4);
        EXPECT(gbc.pc(), 0x8355);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8353), 0xcb);
        EXPECT(gbc.readMem(0x8354), 0xf0);
        // CB F0 0047
        gbc.setState(0x4b69, 0xf2d9, 0xacf0, 0xe96d, 0x1923, 0x8f4, 0x0, 0x1);
        gbc.writeMem(0x4b69, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xf2d9);
        EXPECT(gbc.pc(), 0x4b6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0048
        gbc.setState(0xae28, 0xbc88, 0x8540, 0x8344, 0xf936, 0x91a7, 0x1, 0x1);
        gbc.writeMem(0xae28, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xbc88);
        EXPECT(gbc.pc(), 0xae2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae28), 0xcb);
        EXPECT(gbc.readMem(0xae29), 0xf0);
        // CB F0 0049
        gbc.setState(0x4277, 0xc6ae, 0x7050, 0xc7b2, 0x2f57, 0x62d3, 0x0, 0x1);
        gbc.writeMem(0x4277, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xc6ae);
        EXPECT(gbc.pc(), 0x4279);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 004A
        gbc.setState(0x5396, 0xd775, 0xf930, 0x9e7e, 0x5928, 0x9cc9, 0x1, 0x1);
        gbc.writeMem(0x5396, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xd775);
        EXPECT(gbc.pc(), 0x5398);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 004B
        gbc.setState(0x3b9d, 0x3d92, 0xe120, 0x453b, 0x7259, 0x9c68, 0x1, 0x0);
        gbc.writeMem(0x3b9d, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x3d92);
        EXPECT(gbc.pc(), 0x3b9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 004D
        gbc.setState(0x8fbd, 0xa76c, 0x6e40, 0x9f4f, 0x824, 0x6a62, 0x1, 0x1);
        gbc.writeMem(0x8fbd, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xa76c);
        EXPECT(gbc.pc(), 0x8fbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fbd), 0xcb);
        EXPECT(gbc.readMem(0x8fbe), 0xf0);
        // CB F0 004E
        gbc.setState(0x260f, 0x1551, 0xb7a0, 0xc31b, 0x22c5, 0x9af8, 0x1, 0x0);
        gbc.writeMem(0x260f, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x1551);
        EXPECT(gbc.pc(), 0x2611);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 004F
        gbc.setState(0x455a, 0xfa39, 0x7f50, 0x96ad, 0x6e72, 0x3783, 0x1, 0x1);
        gbc.writeMem(0x455a, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xfa39);
        EXPECT(gbc.pc(), 0x455c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0050
        gbc.setState(0xbab9, 0x48be, 0xfa10, 0xfb0d, 0xc75b, 0xe3cb, 0x1, 0x0);
        gbc.writeMem(0xbab9, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x48be);
        EXPECT(gbc.pc(), 0xbabb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbab9), 0xcb);
        EXPECT(gbc.readMem(0xbaba), 0xf0);
        // CB F0 0051
        gbc.setState(0x6001, 0xf3bf, 0x6c20, 0xedc5, 0x1a32, 0xb857, 0x0, 0x0);
        gbc.writeMem(0x6001, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xf3bf);
        EXPECT(gbc.pc(), 0x6003);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0052
        gbc.setState(0x73ba, 0x7c88, 0x31d0, 0xcc24, 0x9502, 0x291e, 0x1, 0x0);
        gbc.writeMem(0x73ba, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x7c88);
        EXPECT(gbc.pc(), 0x73bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0054
        gbc.setState(0x9fb7, 0xe109, 0x4f10, 0xd3c6, 0xace1, 0xcee3, 0x1, 0x0);
        gbc.writeMem(0x9fb7, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xe109);
        EXPECT(gbc.pc(), 0x9fb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fb7), 0xcb);
        EXPECT(gbc.readMem(0x9fb8), 0xf0);
        // CB F0 0055
        gbc.setState(0xa878, 0x9cc7, 0x6390, 0x901c, 0x2005, 0x654c, 0x0, 0x1);
        gbc.writeMem(0xa878, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x9cc7);
        EXPECT(gbc.pc(), 0xa87a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa878), 0xcb);
        EXPECT(gbc.readMem(0xa879), 0xf0);
        // CB F0 0056
        gbc.setState(0x10ef, 0x4f4f, 0xe400, 0x9f1d, 0x392d, 0xe743, 0x0, 0x0);
        gbc.writeMem(0x10ef, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x4f4f);
        EXPECT(gbc.pc(), 0x10f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0057
        gbc.setState(0x5d25, 0x9d10, 0xbb10, 0xdc85, 0xc01e, 0x4ce8, 0x1, 0x1);
        gbc.writeMem(0x5d25, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x9d10);
        EXPECT(gbc.pc(), 0x5d27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0058
        gbc.setState(0x16a6, 0x5574, 0xb100, 0x65ca, 0x5769, 0xac74, 0x1, 0x0);
        gbc.writeMem(0x16a6, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x5574);
        EXPECT(gbc.pc(), 0x16a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0059
        gbc.setState(0xc44b, 0x96df, 0x4510, 0x49b2, 0x71c9, 0xe7ce, 0x1, 0x0);
        gbc.writeMem(0xc44b, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x96df);
        EXPECT(gbc.pc(), 0xc44d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc44b), 0xcb);
        EXPECT(gbc.readMem(0xc44c), 0xf0);
        // CB F0 005A
        gbc.setState(0x9bf0, 0x2d11, 0x7b30, 0x6794, 0x3163, 0x8663, 0x0, 0x1);
        gbc.writeMem(0x9bf0, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x2d11);
        EXPECT(gbc.pc(), 0x9bf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bf0), 0xcb);
        EXPECT(gbc.readMem(0x9bf1), 0xf0);
        // CB F0 005B
        gbc.setState(0x883e, 0xba7a, 0xfd30, 0xb785, 0x1034, 0x596, 0x0, 0x0);
        gbc.writeMem(0x883e, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xba7a);
        EXPECT(gbc.pc(), 0x8840);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x883e), 0xcb);
        EXPECT(gbc.readMem(0x883f), 0xf0);
        // CB F0 005C
        gbc.setState(0x97e3, 0xdec5, 0x23e0, 0x9c80, 0xbcb, 0xd89, 0x0, 0x0);
        gbc.writeMem(0x97e3, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xdec5);
        EXPECT(gbc.pc(), 0x97e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97e3), 0xcb);
        EXPECT(gbc.readMem(0x97e4), 0xf0);
        // CB F0 005D
        gbc.setState(0x7667, 0x2852, 0x2790, 0x8d16, 0x3a16, 0x1019, 0x0, 0x1);
        gbc.writeMem(0x7667, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x2852);
        EXPECT(gbc.pc(), 0x7669);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 005E
        gbc.setState(0x1a06, 0x3f0f, 0xa340, 0xb95, 0xf38a, 0x57c3, 0x0, 0x0);
        gbc.writeMem(0x1a06, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x3f0f);
        EXPECT(gbc.pc(), 0x1a08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 005F
        gbc.setState(0xc15b, 0xfeb9, 0x6ac0, 0xfa2d, 0xf563, 0x1748, 0x0, 0x0);
        gbc.writeMem(0xc15b, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xfeb9);
        EXPECT(gbc.pc(), 0xc15d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc15b), 0xcb);
        EXPECT(gbc.readMem(0xc15c), 0xf0);
        // CB F0 0060
        gbc.setState(0xe91c, 0x2b1, 0x7e60, 0x221b, 0xa007, 0x6ab6, 0x0, 0x1);
        gbc.writeMem(0xe91c, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x2b1);
        EXPECT(gbc.pc(), 0xe91e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe91c), 0xcb);
        EXPECT(gbc.readMem(0xe91d), 0xf0);
        // CB F0 0061
        gbc.setState(0x2d5d, 0xd04, 0x7d0, 0x83f6, 0xd693, 0x9e6e, 0x1, 0x1);
        gbc.writeMem(0x2d5d, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xd04);
        EXPECT(gbc.pc(), 0x2d5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0063
        gbc.setState(0xc26a, 0x7872, 0x39a0, 0xbe0d, 0x7d8, 0xb7c2, 0x1, 0x0);
        gbc.writeMem(0xc26a, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x7872);
        EXPECT(gbc.pc(), 0xc26c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc26a), 0xcb);
        EXPECT(gbc.readMem(0xc26b), 0xf0);
        // CB F0 0064
        gbc.setState(0x5d1f, 0x2b7c, 0x5e90, 0x58c7, 0x247c, 0x5ae7, 0x1, 0x1);
        gbc.writeMem(0x5d1f, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x2b7c);
        EXPECT(gbc.pc(), 0x5d21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0065
        gbc.setState(0x9602, 0xf5af, 0x490, 0x706a, 0x88a7, 0x1d72, 0x0, 0x1);
        gbc.writeMem(0x9602, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xf5af);
        EXPECT(gbc.pc(), 0x9604);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9602), 0xcb);
        EXPECT(gbc.readMem(0x9603), 0xf0);
        // CB F0 0066
        gbc.setState(0x1d00, 0xf8d1, 0x41a0, 0xe562, 0x60c1, 0x1560, 0x0, 0x1);
        gbc.writeMem(0x1d00, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xf8d1);
        EXPECT(gbc.pc(), 0x1d02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0067
        gbc.setState(0xa16e, 0x2212, 0xb690, 0x7d9c, 0x9638, 0x816b, 0x1, 0x0);
        gbc.writeMem(0xa16e, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x2212);
        EXPECT(gbc.pc(), 0xa170);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa16e), 0xcb);
        EXPECT(gbc.readMem(0xa16f), 0xf0);
        // CB F0 0068
        gbc.setState(0x5d05, 0xc09c, 0x9390, 0x32bc, 0x7df2, 0xff94, 0x1, 0x1);
        gbc.writeMem(0x5d05, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xc09c);
        EXPECT(gbc.pc(), 0x5d07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0069
        gbc.setState(0x4b30, 0xb0cc, 0x22e0, 0xb6ef, 0xc629, 0x6238, 0x1, 0x1);
        gbc.writeMem(0x4b30, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xb0cc);
        EXPECT(gbc.pc(), 0x4b32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 006A
        gbc.setState(0xe527, 0x77ab, 0x270, 0xbb7, 0xc1a4, 0x1be8, 0x1, 0x0);
        gbc.writeMem(0xe527, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x77ab);
        EXPECT(gbc.pc(), 0xe529);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe527), 0xcb);
        EXPECT(gbc.readMem(0xe528), 0xf0);
        // CB F0 006B
        gbc.setState(0xe9b, 0x9ee9, 0x1690, 0x4bfc, 0xe861, 0xcaa6, 0x1, 0x1);
        gbc.writeMem(0xe9b, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x9ee9);
        EXPECT(gbc.pc(), 0xe9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 006D
        gbc.setState(0x2cc2, 0xaabb, 0x1e10, 0xc272, 0xc46e, 0x6109, 0x1, 0x1);
        gbc.writeMem(0x2cc2, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xaabb);
        EXPECT(gbc.pc(), 0x2cc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 006E
        gbc.setState(0x9afb, 0x4599, 0x3aa0, 0x33fb, 0x77e, 0xf0f8, 0x1, 0x0);
        gbc.writeMem(0x9afb, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x4599);
        EXPECT(gbc.pc(), 0x9afd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9afb), 0xcb);
        EXPECT(gbc.readMem(0x9afc), 0xf0);
        // CB F0 006F
        gbc.setState(0xe0da, 0x1d76, 0x11d0, 0x63fb, 0x112a, 0xbe38, 0x0, 0x1);
        gbc.writeMem(0xe0da, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x1d76);
        EXPECT(gbc.pc(), 0xe0dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0da), 0xcb);
        EXPECT(gbc.readMem(0xe0db), 0xf0);
        // CB F0 0070
        gbc.setState(0x1419, 0x8694, 0xae40, 0x3c6b, 0x801, 0xcde4, 0x1, 0x1);
        gbc.writeMem(0x1419, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x8694);
        EXPECT(gbc.pc(), 0x141b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0071
        gbc.setState(0xd012, 0x5309, 0x4a80, 0xd1a0, 0x7b72, 0x437, 0x1, 0x1);
        gbc.writeMem(0xd012, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x5309);
        EXPECT(gbc.pc(), 0xd014);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd012), 0xcb);
        EXPECT(gbc.readMem(0xd013), 0xf0);
        // CB F0 0072
        gbc.setState(0x292b, 0xcae1, 0xe9c0, 0xaaa6, 0x5599, 0xd21e, 0x1, 0x0);
        gbc.writeMem(0x292b, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xcae1);
        EXPECT(gbc.pc(), 0x292d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0073
        gbc.setState(0x3cbc, 0x7831, 0x6780, 0xf1a7, 0xab64, 0xfd1c, 0x0, 0x1);
        gbc.writeMem(0x3cbc, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x7831);
        EXPECT(gbc.pc(), 0x3cbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0074
        gbc.setState(0xca13, 0x5919, 0x91f0, 0xf1d5, 0x77da, 0xbf15, 0x0, 0x0);
        gbc.writeMem(0xca13, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x5919);
        EXPECT(gbc.pc(), 0xca15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca13), 0xcb);
        EXPECT(gbc.readMem(0xca14), 0xf0);
        // CB F0 0075
        gbc.setState(0xd2f9, 0x881b, 0xf0b0, 0x6f8a, 0xb3bd, 0xb446, 0x0, 0x0);
        gbc.writeMem(0xd2f9, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x881b);
        EXPECT(gbc.pc(), 0xd2fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2f9), 0xcb);
        EXPECT(gbc.readMem(0xd2fa), 0xf0);
        // CB F0 0076
        gbc.setState(0xbce3, 0x5057, 0xd4f0, 0xb1f5, 0x1454, 0x5d77, 0x0, 0x1);
        gbc.writeMem(0xbce3, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x5057);
        EXPECT(gbc.pc(), 0xbce5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbce3), 0xcb);
        EXPECT(gbc.readMem(0xbce4), 0xf0);
        // CB F0 0077
        gbc.setState(0x4de1, 0x51ae, 0xcc90, 0xdec9, 0x98c8, 0x10ad, 0x1, 0x0);
        gbc.writeMem(0x4de1, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x51ae);
        EXPECT(gbc.pc(), 0x4de3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0078
        gbc.setState(0x6299, 0xe74f, 0x9210, 0x1342, 0x2125, 0xe071, 0x0, 0x1);
        gbc.writeMem(0x6299, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xe74f);
        EXPECT(gbc.pc(), 0x629b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0079
        gbc.setState(0x12e, 0xdf5c, 0x8620, 0xfa9, 0x1727, 0xa32f, 0x1, 0x1);
        gbc.writeMem(0x12e, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xdf5c);
        EXPECT(gbc.pc(), 0x130);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 007A
        gbc.setState(0x539f, 0x2f68, 0x23c0, 0xa27a, 0x9725, 0xd958, 0x0, 0x0);
        gbc.writeMem(0x539f, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x2f68);
        EXPECT(gbc.pc(), 0x53a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 007B
        gbc.setState(0x2b65, 0x1bd8, 0xd940, 0x7b99, 0xd72d, 0x56d5, 0x1, 0x0);
        gbc.writeMem(0x2b65, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x1bd8);
        EXPECT(gbc.pc(), 0x2b67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 007C
        gbc.setState(0xaa41, 0xb8d7, 0x55e0, 0x8a6f, 0x2043, 0xb58e, 0x0, 0x1);
        gbc.writeMem(0xaa41, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xb8d7);
        EXPECT(gbc.pc(), 0xaa43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa41), 0xcb);
        EXPECT(gbc.readMem(0xaa42), 0xf0);
        // CB F0 007D
        gbc.setState(0x9f1f, 0x68f6, 0x3850, 0x8ee0, 0x8256, 0x305b, 0x0, 0x1);
        gbc.writeMem(0x9f1f, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x68f6);
        EXPECT(gbc.pc(), 0x9f21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f1f), 0xcb);
        EXPECT(gbc.readMem(0x9f20), 0xf0);
        // CB F0 007E
        gbc.setState(0xced5, 0xe1c, 0x5690, 0xe2cf, 0x4f9f, 0x799a, 0x1, 0x0);
        gbc.writeMem(0xced5, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xe1c);
        EXPECT(gbc.pc(), 0xced7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xced5), 0xcb);
        EXPECT(gbc.readMem(0xced6), 0xf0);
        // CB F0 007F
        gbc.setState(0x8892, 0xbdb9, 0x90f0, 0xfd0f, 0x62f1, 0x6944, 0x1, 0x1);
        gbc.writeMem(0x8892, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xbdb9);
        EXPECT(gbc.pc(), 0x8894);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8892), 0xcb);
        EXPECT(gbc.readMem(0x8893), 0xf0);
        // CB F0 0080
        gbc.setState(0x3a5e, 0xba80, 0xb1b0, 0x779c, 0x637e, 0xc6b3, 0x0, 0x1);
        gbc.writeMem(0x3a5e, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xba80);
        EXPECT(gbc.pc(), 0x3a60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0081
        gbc.setState(0x183f, 0x8f86, 0x9aa0, 0x69fd, 0x8e84, 0x9b63, 0x0, 0x1);
        gbc.writeMem(0x183f, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x8f86);
        EXPECT(gbc.pc(), 0x1841);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0082
        gbc.setState(0x6ca1, 0x67b2, 0x84b0, 0x40c9, 0xba23, 0x5ccc, 0x0, 0x0);
        gbc.writeMem(0x6ca1, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x67b2);
        EXPECT(gbc.pc(), 0x6ca3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0083
        gbc.setState(0x5292, 0xe4cb, 0xe3c0, 0xa8ad, 0xcf3a, 0x2969, 0x1, 0x1);
        gbc.writeMem(0x5292, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xe4cb);
        EXPECT(gbc.pc(), 0x5294);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0084
        gbc.setState(0x8a4f, 0xa45, 0xb380, 0xa90c, 0xe9dc, 0xfaf2, 0x0, 0x0);
        gbc.writeMem(0x8a4f, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xa45);
        EXPECT(gbc.pc(), 0x8a51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a4f), 0xcb);
        EXPECT(gbc.readMem(0x8a50), 0xf0);
        // CB F0 0085
        gbc.setState(0xe7f7, 0xc435, 0x3240, 0xfcb, 0x4cd6, 0x1530, 0x0, 0x1);
        gbc.writeMem(0xe7f7, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xc435);
        EXPECT(gbc.pc(), 0xe7f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7f7), 0xcb);
        EXPECT(gbc.readMem(0xe7f8), 0xf0);
        // CB F0 0086
        gbc.setState(0x3bc, 0xc45, 0x9c10, 0xa492, 0x729d, 0x4487, 0x0, 0x0);
        gbc.writeMem(0x3bc, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xc45);
        EXPECT(gbc.pc(), 0x3be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0087
        gbc.setState(0x479a, 0xefd8, 0xdc40, 0xc18b, 0xfdab, 0x3dd0, 0x0, 0x1);
        gbc.writeMem(0x479a, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xefd8);
        EXPECT(gbc.pc(), 0x479c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0088
        gbc.setState(0x46ac, 0x221b, 0xf730, 0xd15f, 0x7ae4, 0x6064, 0x1, 0x1);
        gbc.writeMem(0x46ac, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x221b);
        EXPECT(gbc.pc(), 0x46ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0089
        gbc.setState(0x4b58, 0xe970, 0xe230, 0x822d, 0x4dd8, 0x2fda, 0x1, 0x0);
        gbc.writeMem(0x4b58, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xe970);
        EXPECT(gbc.pc(), 0x4b5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 008A
        gbc.setState(0xe970, 0x8271, 0x78a0, 0x3c25, 0x7ef6, 0x200a, 0x1, 0x1);
        gbc.writeMem(0xe970, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x8271);
        EXPECT(gbc.pc(), 0xe972);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe970), 0xcb);
        EXPECT(gbc.readMem(0xe971), 0xf0);
        // CB F0 008B
        gbc.setState(0x2807, 0xc1e1, 0x4500, 0x3302, 0x680b, 0xbba8, 0x0, 0x1);
        gbc.writeMem(0x2807, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xc1e1);
        EXPECT(gbc.pc(), 0x2809);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 008C
        gbc.setState(0x54d1, 0x42a3, 0xc00, 0x31bf, 0xc0e9, 0x8470, 0x1, 0x1);
        gbc.writeMem(0x54d1, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x42a3);
        EXPECT(gbc.pc(), 0x54d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 008E
        gbc.setState(0xdb1a, 0x85f, 0xa290, 0x3328, 0x6383, 0x765e, 0x1, 0x0);
        gbc.writeMem(0xdb1a, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x85f);
        EXPECT(gbc.pc(), 0xdb1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb1a), 0xcb);
        EXPECT(gbc.readMem(0xdb1b), 0xf0);
        // CB F0 008F
        gbc.setState(0x413c, 0x2060, 0xfdd0, 0xdd37, 0xcae0, 0xdc77, 0x0, 0x0);
        gbc.writeMem(0x413c, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x2060);
        EXPECT(gbc.pc(), 0x413e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0090
        gbc.setState(0x84e2, 0x536, 0x8130, 0xd15b, 0x392d, 0xdfac, 0x0, 0x0);
        gbc.writeMem(0x84e2, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x536);
        EXPECT(gbc.pc(), 0x84e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84e2), 0xcb);
        EXPECT(gbc.readMem(0x84e3), 0xf0);
        // CB F0 0092
        gbc.setState(0xd687, 0xb5b8, 0x3c60, 0xa6d2, 0xecc6, 0x799e, 0x1, 0x0);
        gbc.writeMem(0xd687, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xb5b8);
        EXPECT(gbc.pc(), 0xd689);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd687), 0xcb);
        EXPECT(gbc.readMem(0xd688), 0xf0);
        // CB F0 0093
        gbc.setState(0xea1e, 0x230a, 0xc70, 0x91a9, 0x776e, 0xfaf9, 0x0, 0x0);
        gbc.writeMem(0xea1e, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x230a);
        EXPECT(gbc.pc(), 0xea20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea1e), 0xcb);
        EXPECT(gbc.readMem(0xea1f), 0xf0);
        // CB F0 0094
        gbc.setState(0xde78, 0xb657, 0x80c0, 0xab99, 0x882b, 0xd192, 0x0, 0x0);
        gbc.writeMem(0xde78, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xb657);
        EXPECT(gbc.pc(), 0xde7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde78), 0xcb);
        EXPECT(gbc.readMem(0xde79), 0xf0);
        // CB F0 0095
        gbc.setState(0x38d0, 0x164c, 0xd340, 0x4b6e, 0x4c18, 0x5b15, 0x0, 0x1);
        gbc.writeMem(0x38d0, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x164c);
        EXPECT(gbc.pc(), 0x38d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0096
        gbc.setState(0xde01, 0xcd2f, 0x7010, 0xb8b3, 0xfc10, 0xa915, 0x1, 0x1);
        gbc.writeMem(0xde01, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xcd2f);
        EXPECT(gbc.pc(), 0xde03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde01), 0xcb);
        EXPECT(gbc.readMem(0xde02), 0xf0);
        // CB F0 0097
        gbc.setState(0xe01d, 0x9249, 0x7930, 0x2635, 0xdacf, 0xe056, 0x1, 0x1);
        gbc.writeMem(0xe01d, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x9249);
        EXPECT(gbc.pc(), 0xe01f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe01d), 0xcb);
        EXPECT(gbc.readMem(0xe01e), 0xf0);
        // CB F0 0098
        gbc.setState(0xdf3f, 0xb163, 0x310, 0xa70, 0x69f4, 0x2c22, 0x0, 0x1);
        gbc.writeMem(0xdf3f, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xb163);
        EXPECT(gbc.pc(), 0xdf41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf3f), 0xcb);
        EXPECT(gbc.readMem(0xdf40), 0xf0);
        // CB F0 0099
        gbc.setState(0xbde0, 0xe1bc, 0xbb50, 0x721e, 0x9706, 0x8c45, 0x1, 0x1);
        gbc.writeMem(0xbde0, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xe1bc);
        EXPECT(gbc.pc(), 0xbde2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbde0), 0xcb);
        EXPECT(gbc.readMem(0xbde1), 0xf0);
        // CB F0 009A
        gbc.setState(0x4b83, 0x196b, 0x6a0, 0xef9d, 0x1129, 0x4a8, 0x0, 0x0);
        gbc.writeMem(0x4b83, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x196b);
        EXPECT(gbc.pc(), 0x4b85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 009B
        gbc.setState(0xcdcb, 0xc2cb, 0xd120, 0x2043, 0xdcc1, 0xc683, 0x0, 0x1);
        gbc.writeMem(0xcdcb, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xc2cb);
        EXPECT(gbc.pc(), 0xcdcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdcb), 0xcb);
        EXPECT(gbc.readMem(0xcdcc), 0xf0);
        // CB F0 009C
        gbc.setState(0xac86, 0x79b7, 0x38b0, 0x1576, 0xfe62, 0xa740, 0x0, 0x0);
        gbc.writeMem(0xac86, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x79b7);
        EXPECT(gbc.pc(), 0xac88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac86), 0xcb);
        EXPECT(gbc.readMem(0xac87), 0xf0);
        // CB F0 009D
        gbc.setState(0x9441, 0xce02, 0x93f0, 0x1fad, 0xb4fe, 0xfc05, 0x1, 0x0);
        gbc.writeMem(0x9441, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xce02);
        EXPECT(gbc.pc(), 0x9443);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9441), 0xcb);
        EXPECT(gbc.readMem(0x9442), 0xf0);
        // CB F0 009E
        gbc.setState(0x12cb, 0x6ae9, 0x4b20, 0x1d09, 0xdb80, 0xe912, 0x1, 0x1);
        gbc.writeMem(0x12cb, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x6ae9);
        EXPECT(gbc.pc(), 0x12cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 009F
        gbc.setState(0x41c4, 0x6207, 0x9180, 0x786e, 0xab54, 0x406b, 0x1, 0x0);
        gbc.writeMem(0x41c4, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x6207);
        EXPECT(gbc.pc(), 0x41c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 00A0
        gbc.setState(0xc67b, 0x2f91, 0x5dd0, 0x28cb, 0x69a1, 0xc1c3, 0x1, 0x0);
        gbc.writeMem(0xc67b, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x2f91);
        EXPECT(gbc.pc(), 0xc67d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc67b), 0xcb);
        EXPECT(gbc.readMem(0xc67c), 0xf0);
        // CB F0 00A1
        gbc.setState(0xcf01, 0x3ef7, 0xa6a0, 0xbd06, 0xdc0, 0x723e, 0x0, 0x1);
        gbc.writeMem(0xcf01, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x3ef7);
        EXPECT(gbc.pc(), 0xcf03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf01), 0xcb);
        EXPECT(gbc.readMem(0xcf02), 0xf0);
        // CB F0 00A2
        gbc.setState(0x1f75, 0x3d76, 0xd6a0, 0x3915, 0x4a1d, 0x1964, 0x1, 0x1);
        gbc.writeMem(0x1f75, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x3d76);
        EXPECT(gbc.pc(), 0x1f77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 00A3
        gbc.setState(0x14a, 0xac83, 0x4bd0, 0xcdc8, 0x7c53, 0x3d58, 0x1, 0x1);
        gbc.writeMem(0x14a, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xac83);
        EXPECT(gbc.pc(), 0x14c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 00A4
        gbc.setState(0xca6e, 0x90c, 0x9cd0, 0xd4d7, 0xd32f, 0x7792, 0x0, 0x1);
        gbc.writeMem(0xca6e, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x90c);
        EXPECT(gbc.pc(), 0xca70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca6e), 0xcb);
        EXPECT(gbc.readMem(0xca6f), 0xf0);
        // CB F0 00A6
        gbc.setState(0x4a53, 0xb5cf, 0x6bf0, 0x3f81, 0x2afe, 0xa538, 0x0, 0x0);
        gbc.writeMem(0x4a53, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xb5cf);
        EXPECT(gbc.pc(), 0x4a55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 00A7
        gbc.setState(0xcaba, 0xca36, 0xa760, 0x935d, 0xd7bb, 0x2c56, 0x0, 0x0);
        gbc.writeMem(0xcaba, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xca36);
        EXPECT(gbc.pc(), 0xcabc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcaba), 0xcb);
        EXPECT(gbc.readMem(0xcabb), 0xf0);
        // CB F0 00A8
        gbc.setState(0x7f4f, 0x33e2, 0x4670, 0x8d47, 0x29e6, 0x3495, 0x0, 0x0);
        gbc.writeMem(0x7f4f, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x33e2);
        EXPECT(gbc.pc(), 0x7f51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 00A9
        gbc.setState(0x2917, 0x1933, 0xa500, 0xc7c5, 0xc7a4, 0x6423, 0x1, 0x1);
        gbc.writeMem(0x2917, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x1933);
        EXPECT(gbc.pc(), 0x2919);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 00AB
        gbc.setState(0xb0c6, 0xd0c5, 0x8990, 0x6e4a, 0x31e4, 0xdba0, 0x1, 0x1);
        gbc.writeMem(0xb0c6, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xd0c5);
        EXPECT(gbc.pc(), 0xb0c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0c6), 0xcb);
        EXPECT(gbc.readMem(0xb0c7), 0xf0);
        // CB F0 00AC
        gbc.setState(0xd7af, 0xdd52, 0x73d0, 0xe872, 0x7b5b, 0x6c4f, 0x0, 0x0);
        gbc.writeMem(0xd7af, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xdd52);
        EXPECT(gbc.pc(), 0xd7b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7af), 0xcb);
        EXPECT(gbc.readMem(0xd7b0), 0xf0);
        // CB F0 00AD
        gbc.setState(0x2375, 0xe11, 0x23e0, 0x137a, 0x52ee, 0xdea9, 0x1, 0x1);
        gbc.writeMem(0x2375, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xe11);
        EXPECT(gbc.pc(), 0x2377);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 00AE
        gbc.setState(0x1702, 0xd57f, 0x7f90, 0xfefc, 0xed5e, 0xd66f, 0x0, 0x1);
        gbc.writeMem(0x1702, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xd57f);
        EXPECT(gbc.pc(), 0x1704);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 00AF
        gbc.setState(0x5bc7, 0xe756, 0x8d30, 0x89ef, 0x954d, 0xe03, 0x0, 0x1);
        gbc.writeMem(0x5bc7, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xe756);
        EXPECT(gbc.pc(), 0x5bc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 00B0
        gbc.setState(0x5331, 0xae8c, 0xda70, 0xa25a, 0xa0a, 0xce4c, 0x1, 0x1);
        gbc.writeMem(0x5331, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xae8c);
        EXPECT(gbc.pc(), 0x5333);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 00B1
        gbc.setState(0x75c4, 0xdbfd, 0xf360, 0xd93f, 0xd8a8, 0xf1b6, 0x0, 0x1);
        gbc.writeMem(0x75c4, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xdbfd);
        EXPECT(gbc.pc(), 0x75c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 00B2
        gbc.setState(0xa079, 0x82b7, 0x81a0, 0x630f, 0x2699, 0x329, 0x1, 0x1);
        gbc.writeMem(0xa079, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x82b7);
        EXPECT(gbc.pc(), 0xa07b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa079), 0xcb);
        EXPECT(gbc.readMem(0xa07a), 0xf0);
        // CB F0 00B3
        gbc.setState(0x4488, 0x83da, 0xdc90, 0x91d6, 0x25e6, 0xc0af, 0x1, 0x1);
        gbc.writeMem(0x4488, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x83da);
        EXPECT(gbc.pc(), 0x448a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 00B4
        gbc.setState(0xa4bf, 0x70f7, 0x5d50, 0x84d2, 0xa5a0, 0x9185, 0x1, 0x1);
        gbc.writeMem(0xa4bf, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x70f7);
        EXPECT(gbc.pc(), 0xa4c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4bf), 0xcb);
        EXPECT(gbc.readMem(0xa4c0), 0xf0);
        // CB F0 00B5
        gbc.setState(0x9ca8, 0x63b7, 0xe040, 0x7f9e, 0x5ef4, 0x7f2e, 0x1, 0x1);
        gbc.writeMem(0x9ca8, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x63b7);
        EXPECT(gbc.pc(), 0x9caa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ca8), 0xcb);
        EXPECT(gbc.readMem(0x9ca9), 0xf0);
        // CB F0 00B6
        gbc.setState(0x131c, 0x4116, 0x59e0, 0x9493, 0x5290, 0x9fa9, 0x0, 0x1);
        gbc.writeMem(0x131c, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x4116);
        EXPECT(gbc.pc(), 0x131e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 00B7
        gbc.setState(0x5537, 0xc2ab, 0x5e10, 0xc080, 0x5585, 0x8c54, 0x0, 0x0);
        gbc.writeMem(0x5537, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xc2ab);
        EXPECT(gbc.pc(), 0x5539);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 00B8
        gbc.setState(0x2bca, 0xe018, 0xcdc0, 0xaf19, 0xac99, 0x7cd6, 0x0, 0x0);
        gbc.writeMem(0x2bca, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xe018);
        EXPECT(gbc.pc(), 0x2bcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 00BA
        gbc.setState(0x5a1a, 0xb0e0, 0x4e50, 0x4eb7, 0xe38a, 0x301d, 0x0, 0x0);
        gbc.writeMem(0x5a1a, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xb0e0);
        EXPECT(gbc.pc(), 0x5a1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 00BB
        gbc.setState(0x251b, 0x7503, 0x5cc0, 0xa34e, 0x20b6, 0xcaee, 0x0, 0x0);
        gbc.writeMem(0x251b, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x7503);
        EXPECT(gbc.pc(), 0x251d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 00BC
        gbc.setState(0xef58, 0xb985, 0x95b0, 0x3e1d, 0x6ca3, 0x2285, 0x1, 0x1);
        gbc.writeMem(0xef58, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xb985);
        EXPECT(gbc.pc(), 0xef5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef58), 0xcb);
        EXPECT(gbc.readMem(0xef59), 0xf0);
        // CB F0 00BD
        gbc.setState(0x1a67, 0x911a, 0x8530, 0x354f, 0x61cc, 0x155d, 0x1, 0x1);
        gbc.writeMem(0x1a67, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x911a);
        EXPECT(gbc.pc(), 0x1a69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 00BE
        gbc.setState(0xc423, 0x5f93, 0x41b0, 0x5a1f, 0x84db, 0x829c, 0x1, 0x0);
        gbc.writeMem(0xc423, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x5f93);
        EXPECT(gbc.pc(), 0xc425);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc423), 0xcb);
        EXPECT(gbc.readMem(0xc424), 0xf0);
        // CB F0 00BF
        gbc.setState(0x4d8e, 0x3f6e, 0xc430, 0x5807, 0x26fc, 0x7dcd, 0x1, 0x0);
        gbc.writeMem(0x4d8e, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x3f6e);
        EXPECT(gbc.pc(), 0x4d90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 00C0
        gbc.setState(0xa313, 0x5650, 0x1d80, 0xe6fb, 0xb07, 0x9062, 0x0, 0x0);
        gbc.writeMem(0xa313, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x5650);
        EXPECT(gbc.pc(), 0xa315);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa313), 0xcb);
        EXPECT(gbc.readMem(0xa314), 0xf0);
        // CB F0 00C1
        gbc.setState(0x999e, 0xd8f0, 0xe730, 0x3b52, 0xec8f, 0xeccc, 0x1, 0x0);
        gbc.writeMem(0x999e, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xd8f0);
        EXPECT(gbc.pc(), 0x99a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x999e), 0xcb);
        EXPECT(gbc.readMem(0x999f), 0xf0);
        // CB F0 00C2
        gbc.setState(0x2afd, 0x7113, 0x6ed0, 0x4843, 0xc9e6, 0x2799, 0x0, 0x0);
        gbc.writeMem(0x2afd, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x7113);
        EXPECT(gbc.pc(), 0x2aff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 00C3
        gbc.setState(0xa4e9, 0x6e9a, 0x6cf0, 0x534a, 0xe1c6, 0x15a6, 0x1, 0x1);
        gbc.writeMem(0xa4e9, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x6e9a);
        EXPECT(gbc.pc(), 0xa4eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4e9), 0xcb);
        EXPECT(gbc.readMem(0xa4ea), 0xf0);
        // CB F0 00C4
        gbc.setState(0xebdd, 0xd0f, 0x3fd0, 0xe5cc, 0xf425, 0xfca6, 0x0, 0x1);
        gbc.writeMem(0xebdd, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xd0f);
        EXPECT(gbc.pc(), 0xebdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebdd), 0xcb);
        EXPECT(gbc.readMem(0xebde), 0xf0);
        // CB F0 00C5
        gbc.setState(0xd431, 0x3e9a, 0xef60, 0x2510, 0xb23f, 0x165, 0x0, 0x0);
        gbc.writeMem(0xd431, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x3e9a);
        EXPECT(gbc.pc(), 0xd433);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd431), 0xcb);
        EXPECT(gbc.readMem(0xd432), 0xf0);
        // CB F0 00C6
        gbc.setState(0xefdd, 0x1a37, 0xbc50, 0x1206, 0xfb17, 0x726c, 0x0, 0x1);
        gbc.writeMem(0xefdd, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x1a37);
        EXPECT(gbc.pc(), 0xefdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefdd), 0xcb);
        EXPECT(gbc.readMem(0xefde), 0xf0);
        // CB F0 00C7
        gbc.setState(0xb674, 0xb3cf, 0x2980, 0x658b, 0xa40b, 0x39c3, 0x1, 0x0);
        gbc.writeMem(0xb674, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xb3cf);
        EXPECT(gbc.pc(), 0xb676);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb674), 0xcb);
        EXPECT(gbc.readMem(0xb675), 0xf0);
        // CB F0 00C8
        gbc.setState(0xd4c3, 0xcd56, 0x7d60, 0xde8, 0xac72, 0x7cf7, 0x0, 0x1);
        gbc.writeMem(0xd4c3, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xcd56);
        EXPECT(gbc.pc(), 0xd4c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4c3), 0xcb);
        EXPECT(gbc.readMem(0xd4c4), 0xf0);
        // CB F0 00CA
        gbc.setState(0xc6dd, 0x1150, 0x6d20, 0xa1d1, 0x3f47, 0xfd12, 0x1, 0x0);
        gbc.writeMem(0xc6dd, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x1150);
        EXPECT(gbc.pc(), 0xc6df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6dd), 0xcb);
        EXPECT(gbc.readMem(0xc6de), 0xf0);
        // CB F0 00CB
        gbc.setState(0xd614, 0xb3d5, 0xbb00, 0x9297, 0x63d2, 0x6063, 0x1, 0x0);
        gbc.writeMem(0xd614, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xb3d5);
        EXPECT(gbc.pc(), 0xd616);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd614), 0xcb);
        EXPECT(gbc.readMem(0xd615), 0xf0);
        // CB F0 00CD
        gbc.setState(0xe7f0, 0xcccc, 0x4010, 0x3661, 0x519a, 0xfbe3, 0x0, 0x0);
        gbc.writeMem(0xe7f0, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xcccc);
        EXPECT(gbc.pc(), 0xe7f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7f0), 0xcb);
        EXPECT(gbc.readMem(0xe7f1), 0xf0);
        // CB F0 00CE
        gbc.setState(0xc982, 0x1b4f, 0xc710, 0xdacd, 0x634c, 0x68ea, 0x0, 0x1);
        gbc.writeMem(0xc982, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x1b4f);
        EXPECT(gbc.pc(), 0xc984);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc982), 0xcb);
        EXPECT(gbc.readMem(0xc983), 0xf0);
        // CB F0 00CF
        gbc.setState(0xaf0e, 0xc796, 0x1dd0, 0x83fd, 0x20b3, 0x7f87, 0x0, 0x0);
        gbc.writeMem(0xaf0e, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xc796);
        EXPECT(gbc.pc(), 0xaf10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf0e), 0xcb);
        EXPECT(gbc.readMem(0xaf0f), 0xf0);
        // CB F0 00D0
        gbc.setState(0x4131, 0xe5b9, 0xb150, 0xda0e, 0x7a22, 0xa7d0, 0x1, 0x0);
        gbc.writeMem(0x4131, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xe5b9);
        EXPECT(gbc.pc(), 0x4133);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 00D1
        gbc.setState(0xce65, 0x4bc1, 0x3430, 0x631, 0xe4e7, 0xf93d, 0x1, 0x0);
        gbc.writeMem(0xce65, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x4bc1);
        EXPECT(gbc.pc(), 0xce67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce65), 0xcb);
        EXPECT(gbc.readMem(0xce66), 0xf0);
        // CB F0 00D2
        gbc.setState(0xd692, 0xfe19, 0x92d0, 0x3fd0, 0xecee, 0xf4c, 0x1, 0x1);
        gbc.writeMem(0xd692, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xfe19);
        EXPECT(gbc.pc(), 0xd694);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd692), 0xcb);
        EXPECT(gbc.readMem(0xd693), 0xf0);
        // CB F0 00D3
        gbc.setState(0x4a36, 0xfb3a, 0xf490, 0xf5f9, 0xf439, 0x6899, 0x1, 0x1);
        gbc.writeMem(0x4a36, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xfb3a);
        EXPECT(gbc.pc(), 0x4a38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 00D5
        gbc.setState(0x2e2a, 0xb766, 0x4a30, 0xc1db, 0xbd91, 0xda98, 0x1, 0x1);
        gbc.writeMem(0x2e2a, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xb766);
        EXPECT(gbc.pc(), 0x2e2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 00D7
        gbc.setState(0x4701, 0xf249, 0x1b60, 0xccf1, 0xdbdd, 0xb0aa, 0x1, 0x1);
        gbc.writeMem(0x4701, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xf249);
        EXPECT(gbc.pc(), 0x4703);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 00D8
        gbc.setState(0xdf74, 0x4c72, 0x23a0, 0x2f71, 0x3d5f, 0x640d, 0x1, 0x1);
        gbc.writeMem(0xdf74, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x4c72);
        EXPECT(gbc.pc(), 0xdf76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf74), 0xcb);
        EXPECT(gbc.readMem(0xdf75), 0xf0);
        // CB F0 00D9
        gbc.setState(0x142f, 0xb7c7, 0x96d0, 0xe5f, 0xa565, 0x38e5, 0x0, 0x1);
        gbc.writeMem(0x142f, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xb7c7);
        EXPECT(gbc.pc(), 0x1431);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 00DA
        gbc.setState(0xb81e, 0x126a, 0xbb80, 0xd024, 0xbb41, 0xcd56, 0x0, 0x0);
        gbc.writeMem(0xb81e, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x126a);
        EXPECT(gbc.pc(), 0xb820);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb81e), 0xcb);
        EXPECT(gbc.readMem(0xb81f), 0xf0);
        // CB F0 00DB
        gbc.setState(0xce94, 0x9417, 0xd090, 0x6829, 0x6770, 0xb6f1, 0x1, 0x1);
        gbc.writeMem(0xce94, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x9417);
        EXPECT(gbc.pc(), 0xce96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce94), 0xcb);
        EXPECT(gbc.readMem(0xce95), 0xf0);
        // CB F0 00DC
        gbc.setState(0x9721, 0x2e3a, 0xfbb0, 0x6a8f, 0xb69b, 0x971, 0x0, 0x1);
        gbc.writeMem(0x9721, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x2e3a);
        EXPECT(gbc.pc(), 0x9723);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9721), 0xcb);
        EXPECT(gbc.readMem(0x9722), 0xf0);
        // CB F0 00DD
        gbc.setState(0x15aa, 0x956c, 0x9800, 0xb5bd, 0xc129, 0x5218, 0x1, 0x1);
        gbc.writeMem(0x15aa, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x956c);
        EXPECT(gbc.pc(), 0x15ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 00DE
        gbc.setState(0x934e, 0x4782, 0xcf70, 0xcbe9, 0x2f2e, 0x6e83, 0x1, 0x0);
        gbc.writeMem(0x934e, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x4782);
        EXPECT(gbc.pc(), 0x9350);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x934e), 0xcb);
        EXPECT(gbc.readMem(0x934f), 0xf0);
        // CB F0 00DF
        gbc.setState(0x2a3e, 0x28a8, 0x74d0, 0xb912, 0x66a8, 0x385a, 0x1, 0x0);
        gbc.writeMem(0x2a3e, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x28a8);
        EXPECT(gbc.pc(), 0x2a40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 00E0
        gbc.setState(0xacf4, 0xfcd1, 0x4ed0, 0xc440, 0x9577, 0x8b64, 0x1, 0x1);
        gbc.writeMem(0xacf4, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xfcd1);
        EXPECT(gbc.pc(), 0xacf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacf4), 0xcb);
        EXPECT(gbc.readMem(0xacf5), 0xf0);
        // CB F0 00E1
        gbc.setState(0x7ffc, 0x3ac3, 0x9020, 0xe59d, 0xc771, 0x8364, 0x0, 0x1);
        gbc.writeMem(0x7ffc, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x3ac3);
        EXPECT(gbc.pc(), 0x7ffe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 00E2
        gbc.setState(0x28c3, 0x2e65, 0xe340, 0x714d, 0x74a7, 0xab70, 0x1, 0x0);
        gbc.writeMem(0x28c3, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x2e65);
        EXPECT(gbc.pc(), 0x28c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 00E3
        gbc.setState(0x53bf, 0x880e, 0x6b30, 0xdc7c, 0x311d, 0x7869, 0x1, 0x1);
        gbc.writeMem(0x53bf, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x880e);
        EXPECT(gbc.pc(), 0x53c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 00E4
        gbc.setState(0x146d, 0xd750, 0x72b0, 0x99db, 0xef64, 0x706f, 0x1, 0x1);
        gbc.writeMem(0x146d, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xd750);
        EXPECT(gbc.pc(), 0x146f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 00E5
        gbc.setState(0xe90d, 0xc963, 0x5960, 0x9155, 0x3638, 0xc252, 0x1, 0x1);
        gbc.writeMem(0xe90d, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xc963);
        EXPECT(gbc.pc(), 0xe90f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe90d), 0xcb);
        EXPECT(gbc.readMem(0xe90e), 0xf0);
        // CB F0 00E6
        gbc.setState(0x918, 0xa0ea, 0x2c50, 0xb752, 0xccdc, 0x710, 0x1, 0x0);
        gbc.writeMem(0x918, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xa0ea);
        EXPECT(gbc.pc(), 0x91a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 00E7
        gbc.setState(0xe26e, 0x50c6, 0xb4f0, 0xa194, 0xf359, 0x2f2c, 0x0, 0x0);
        gbc.writeMem(0xe26e, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x50c6);
        EXPECT(gbc.pc(), 0xe270);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe26e), 0xcb);
        EXPECT(gbc.readMem(0xe26f), 0xf0);
        // CB F0 00E8
        gbc.setState(0x7a99, 0xa38, 0xb0a0, 0xccdd, 0x13c7, 0x6b13, 0x0, 0x0);
        gbc.writeMem(0x7a99, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xa38);
        EXPECT(gbc.pc(), 0x7a9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 00E9
        gbc.setState(0xd60b, 0x1c6d, 0x7800, 0xcfb6, 0xedf5, 0x5168, 0x1, 0x0);
        gbc.writeMem(0xd60b, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x1c6d);
        EXPECT(gbc.pc(), 0xd60d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd60b), 0xcb);
        EXPECT(gbc.readMem(0xd60c), 0xf0);
        // CB F0 00EA
        gbc.setState(0x3635, 0x586, 0xc60, 0x2528, 0x348d, 0x4191, 0x0, 0x0);
        gbc.writeMem(0x3635, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x586);
        EXPECT(gbc.pc(), 0x3637);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 00EB
        gbc.setState(0xdf2f, 0xc8da, 0xa630, 0x4db1, 0x5715, 0xdd1c, 0x0, 0x1);
        gbc.writeMem(0xdf2f, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xc8da);
        EXPECT(gbc.pc(), 0xdf31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf2f), 0xcb);
        EXPECT(gbc.readMem(0xdf30), 0xf0);
        // CB F0 00EC
        gbc.setState(0x362e, 0xad29, 0x380, 0x891c, 0xb9df, 0x8509, 0x0, 0x0);
        gbc.writeMem(0x362e, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xad29);
        EXPECT(gbc.pc(), 0x3630);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 00ED
        gbc.setState(0x745f, 0x36ce, 0x4ee0, 0xad1e, 0x19bf, 0x69e2, 0x1, 0x0);
        gbc.writeMem(0x745f, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x36ce);
        EXPECT(gbc.pc(), 0x7461);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 00EF
        gbc.setState(0x3f51, 0xe85d, 0xa350, 0x5676, 0x1f1a, 0x9e0f, 0x1, 0x1);
        gbc.writeMem(0x3f51, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xe85d);
        EXPECT(gbc.pc(), 0x3f53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 00F0
        gbc.setState(0x4308, 0xb281, 0x7c00, 0x5ff3, 0xb549, 0x105d, 0x1, 0x1);
        gbc.writeMem(0x4308, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xb281);
        EXPECT(gbc.pc(), 0x430a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 00F1
        gbc.setState(0xce38, 0x9266, 0xff20, 0x2429, 0xe349, 0x4bd8, 0x0, 0x1);
        gbc.writeMem(0xce38, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x9266);
        EXPECT(gbc.pc(), 0xce3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce38), 0xcb);
        EXPECT(gbc.readMem(0xce39), 0xf0);
        // CB F0 00F2
        gbc.setState(0x99ca, 0x370f, 0x7360, 0xb42a, 0x4bf2, 0x4803, 0x0, 0x1);
        gbc.writeMem(0x99ca, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x370f);
        EXPECT(gbc.pc(), 0x99cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99ca), 0xcb);
        EXPECT(gbc.readMem(0x99cb), 0xf0);
        // CB F0 00F3
        gbc.setState(0x1f26, 0x7a54, 0xf490, 0xfdba, 0x7498, 0x3580, 0x0, 0x0);
        gbc.writeMem(0x1f26, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x7a54);
        EXPECT(gbc.pc(), 0x1f28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 00F4
        gbc.setState(0x8dab, 0x84b0, 0x2390, 0x1d47, 0xcc7, 0x7be3, 0x1, 0x1);
        gbc.writeMem(0x8dab, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x84b0);
        EXPECT(gbc.pc(), 0x8dad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dab), 0xcb);
        EXPECT(gbc.readMem(0x8dac), 0xf0);
        // CB F0 00F5
        gbc.setState(0xbd51, 0x8d1d, 0xc340, 0x7249, 0x62ed, 0x385b, 0x0, 0x1);
        gbc.writeMem(0xbd51, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x8d1d);
        EXPECT(gbc.pc(), 0xbd53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd51), 0xcb);
        EXPECT(gbc.readMem(0xbd52), 0xf0);
        // CB F0 00F6
        gbc.setState(0x5b7c, 0x9eea, 0xf620, 0xca93, 0xea95, 0xe287, 0x1, 0x1);
        gbc.writeMem(0x5b7c, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x9eea);
        EXPECT(gbc.pc(), 0x5b7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 00F7
        gbc.setState(0xb651, 0xec2c, 0x1c90, 0x1d59, 0xd37, 0x658a, 0x0, 0x0);
        gbc.writeMem(0xb651, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xec2c);
        EXPECT(gbc.pc(), 0xb653);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb651), 0xcb);
        EXPECT(gbc.readMem(0xb652), 0xf0);
        // CB F0 00F8
        gbc.setState(0x4498, 0xcca9, 0x6f20, 0x6178, 0xeb96, 0xb9af, 0x0, 0x0);
        gbc.writeMem(0x4498, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xcca9);
        EXPECT(gbc.pc(), 0x449a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 00F9
        gbc.setState(0x6666, 0xb89f, 0xf480, 0x3580, 0x3b55, 0x14d8, 0x1, 0x1);
        gbc.writeMem(0x6666, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xb89f);
        EXPECT(gbc.pc(), 0x6668);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 00FA
        gbc.setState(0xdd57, 0x3722, 0x6780, 0x796, 0x4e57, 0x57e7, 0x0, 0x1);
        gbc.writeMem(0xdd57, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x3722);
        EXPECT(gbc.pc(), 0xdd59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd57), 0xcb);
        EXPECT(gbc.readMem(0xdd58), 0xf0);
        // CB F0 00FB
        gbc.setState(0xc5d0, 0x771, 0xce70, 0x2121, 0x5542, 0xc97c, 0x0, 0x0);
        gbc.writeMem(0xc5d0, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x771);
        EXPECT(gbc.pc(), 0xc5d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5d0), 0xcb);
        EXPECT(gbc.readMem(0xc5d1), 0xf0);
        // CB F0 00FC
        gbc.setState(0x32bc, 0xb83b, 0x4440, 0xacfd, 0x4ca9, 0x1f1, 0x1, 0x0);
        gbc.writeMem(0x32bc, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xb83b);
        EXPECT(gbc.pc(), 0x32be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 00FD
        gbc.setState(0xbca4, 0x41c6, 0xf080, 0xcfad, 0xdfa4, 0x871e, 0x1, 0x0);
        gbc.writeMem(0xbca4, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x41c6);
        EXPECT(gbc.pc(), 0xbca6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbca4), 0xcb);
        EXPECT(gbc.readMem(0xbca5), 0xf0);
        // CB F0 00FE
        gbc.setState(0xe0a6, 0xcf39, 0x2e0, 0x8955, 0xabb7, 0x5674, 0x0, 0x1);
        gbc.writeMem(0xe0a6, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xcf39);
        EXPECT(gbc.pc(), 0xe0a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0a6), 0xcb);
        EXPECT(gbc.readMem(0xe0a7), 0xf0);
        // CB F0 00FF
        gbc.setState(0x9913, 0xcf02, 0x1a80, 0xc537, 0x3004, 0x1248, 0x0, 0x1);
        gbc.writeMem(0x9913, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xcf02);
        EXPECT(gbc.pc(), 0x9915);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9913), 0xcb);
        EXPECT(gbc.readMem(0x9914), 0xf0);
        // CB F0 0100
        gbc.setState(0xe8ab, 0x2aee, 0xfd00, 0x9a77, 0x8d94, 0xc004, 0x0, 0x0);
        gbc.writeMem(0xe8ab, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x2aee);
        EXPECT(gbc.pc(), 0xe8ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8ab), 0xcb);
        EXPECT(gbc.readMem(0xe8ac), 0xf0);
        // CB F0 0102
        gbc.setState(0x55e1, 0xfeab, 0xf10, 0xa22a, 0xed19, 0x2748, 0x0, 0x1);
        gbc.writeMem(0x55e1, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xfeab);
        EXPECT(gbc.pc(), 0x55e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0103
        gbc.setState(0x8800, 0x5227, 0xf5d0, 0xc155, 0x6c93, 0x8f9a, 0x1, 0x0);
        gbc.writeMem(0x8800, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x5227);
        EXPECT(gbc.pc(), 0x8802);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8800), 0xcb);
        EXPECT(gbc.readMem(0x8801), 0xf0);
        // CB F0 0104
        gbc.setState(0x55eb, 0xdf0d, 0x66d0, 0xe358, 0x2841, 0x4a9c, 0x0, 0x0);
        gbc.writeMem(0x55eb, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xdf0d);
        EXPECT(gbc.pc(), 0x55ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0105
        gbc.setState(0xea0, 0xfb66, 0xc740, 0x93a4, 0x52b6, 0x1d05, 0x1, 0x0);
        gbc.writeMem(0xea0, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xfb66);
        EXPECT(gbc.pc(), 0xea2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0106
        gbc.setState(0xe49f, 0x63c0, 0x77a0, 0x677b, 0x69ec, 0x380c, 0x0, 0x1);
        gbc.writeMem(0xe49f, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x63c0);
        EXPECT(gbc.pc(), 0xe4a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe49f), 0xcb);
        EXPECT(gbc.readMem(0xe4a0), 0xf0);
        // CB F0 0107
        gbc.setState(0x612d, 0x5154, 0x5ae0, 0xe51e, 0x216e, 0xf769, 0x0, 0x1);
        gbc.writeMem(0x612d, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x5154);
        EXPECT(gbc.pc(), 0x612f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0108
        gbc.setState(0x7e16, 0x903f, 0x5a90, 0xf49e, 0x543a, 0x2a5e, 0x0, 0x0);
        gbc.writeMem(0x7e16, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x903f);
        EXPECT(gbc.pc(), 0x7e18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0109
        gbc.setState(0x54e9, 0x196d, 0xdf60, 0xf492, 0xca94, 0x120a, 0x0, 0x0);
        gbc.writeMem(0x54e9, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x196d);
        EXPECT(gbc.pc(), 0x54eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 010A
        gbc.setState(0xb7f4, 0x5f7f, 0xd590, 0x55, 0x761e, 0x15c9, 0x1, 0x0);
        gbc.writeMem(0xb7f4, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x5f7f);
        EXPECT(gbc.pc(), 0xb7f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7f4), 0xcb);
        EXPECT(gbc.readMem(0xb7f5), 0xf0);
        // CB F0 010C
        gbc.setState(0xe61f, 0xe1ee, 0x55f0, 0xcd37, 0xeb01, 0xb8c5, 0x0, 0x0);
        gbc.writeMem(0xe61f, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xe1ee);
        EXPECT(gbc.pc(), 0xe621);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe61f), 0xcb);
        EXPECT(gbc.readMem(0xe620), 0xf0);
        // CB F0 010D
        gbc.setState(0x16f5, 0xf308, 0xd260, 0x45ff, 0x3fc0, 0xf54b, 0x1, 0x0);
        gbc.writeMem(0x16f5, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xf308);
        EXPECT(gbc.pc(), 0x16f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 010F
        gbc.setState(0x1ccc, 0x1636, 0x7da0, 0x6964, 0x994e, 0x8072, 0x1, 0x1);
        gbc.writeMem(0x1ccc, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x1636);
        EXPECT(gbc.pc(), 0x1cce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0110
        gbc.setState(0x88c3, 0xd1dc, 0x27b0, 0x6d59, 0x4021, 0x700, 0x0, 0x1);
        gbc.writeMem(0x88c3, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xd1dc);
        EXPECT(gbc.pc(), 0x88c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88c3), 0xcb);
        EXPECT(gbc.readMem(0x88c4), 0xf0);
        // CB F0 0111
        gbc.setState(0x55c4, 0xd2d5, 0x5030, 0x233b, 0xdf1e, 0x87f8, 0x1, 0x0);
        gbc.writeMem(0x55c4, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xd2d5);
        EXPECT(gbc.pc(), 0x55c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0113
        gbc.setState(0x6278, 0x26f6, 0x80e0, 0x6230, 0x44ca, 0xad7, 0x1, 0x0);
        gbc.writeMem(0x6278, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x26f6);
        EXPECT(gbc.pc(), 0x627a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0114
        gbc.setState(0x979a, 0xd91d, 0x93f0, 0x214c, 0xaa8e, 0x2ba5, 0x0, 0x1);
        gbc.writeMem(0x979a, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xd91d);
        EXPECT(gbc.pc(), 0x979c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x979a), 0xcb);
        EXPECT(gbc.readMem(0x979b), 0xf0);
        // CB F0 0115
        gbc.setState(0x64ca, 0x3062, 0xa580, 0x9ec5, 0x1c9d, 0xd1bc, 0x1, 0x0);
        gbc.writeMem(0x64ca, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x3062);
        EXPECT(gbc.pc(), 0x64cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0116
        gbc.setState(0xb322, 0x6716, 0xe910, 0xef13, 0x32e1, 0x4e9f, 0x1, 0x1);
        gbc.writeMem(0xb322, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x6716);
        EXPECT(gbc.pc(), 0xb324);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb322), 0xcb);
        EXPECT(gbc.readMem(0xb323), 0xf0);
        // CB F0 0117
        gbc.setState(0x7e96, 0xcd04, 0x4b80, 0xbd84, 0xb924, 0xcddf, 0x0, 0x0);
        gbc.writeMem(0x7e96, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xcd04);
        EXPECT(gbc.pc(), 0x7e98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0118
        gbc.setState(0x7192, 0xbc0b, 0x7310, 0x6ded, 0x4c40, 0x9078, 0x1, 0x0);
        gbc.writeMem(0x7192, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xbc0b);
        EXPECT(gbc.pc(), 0x7194);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0119
        gbc.setState(0x7377, 0xf120, 0x1300, 0x733, 0x6c45, 0xbe8b, 0x1, 0x1);
        gbc.writeMem(0x7377, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xf120);
        EXPECT(gbc.pc(), 0x7379);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 011A
        gbc.setState(0x770, 0xe510, 0xa630, 0x38ab, 0x7006, 0xc03f, 0x0, 0x0);
        gbc.writeMem(0x770, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xe510);
        EXPECT(gbc.pc(), 0x772);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 011B
        gbc.setState(0x3aa7, 0x625, 0xf700, 0xb159, 0xe81e, 0xde37, 0x1, 0x1);
        gbc.writeMem(0x3aa7, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x625);
        EXPECT(gbc.pc(), 0x3aa9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 011C
        gbc.setState(0x70ff, 0x31ae, 0x95a0, 0xc56f, 0x86e1, 0xed07, 0x1, 0x0);
        gbc.writeMem(0x70ff, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x31ae);
        EXPECT(gbc.pc(), 0x7101);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 011D
        gbc.setState(0x71b9, 0x53e5, 0xd170, 0x345, 0x719c, 0x868c, 0x0, 0x0);
        gbc.writeMem(0x71b9, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x53e5);
        EXPECT(gbc.pc(), 0x71bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 011E
        gbc.setState(0x9930, 0xd757, 0x63c0, 0x21a9, 0x5709, 0xbe7c, 0x1, 0x1);
        gbc.writeMem(0x9930, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xd757);
        EXPECT(gbc.pc(), 0x9932);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9930), 0xcb);
        EXPECT(gbc.readMem(0x9931), 0xf0);
        // CB F0 011F
        gbc.setState(0x1b6d, 0x901, 0x3d20, 0xd636, 0xa915, 0x8365, 0x0, 0x0);
        gbc.writeMem(0x1b6d, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x901);
        EXPECT(gbc.pc(), 0x1b6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0120
        gbc.setState(0x9f85, 0x39f2, 0x4eb0, 0x902e, 0x6f79, 0xbd04, 0x1, 0x0);
        gbc.writeMem(0x9f85, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x39f2);
        EXPECT(gbc.pc(), 0x9f87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f85), 0xcb);
        EXPECT(gbc.readMem(0x9f86), 0xf0);
        // CB F0 0121
        gbc.setState(0x2fef, 0x7cd2, 0xcb90, 0x7803, 0x930b, 0x624c, 0x0, 0x1);
        gbc.writeMem(0x2fef, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x7cd2);
        EXPECT(gbc.pc(), 0x2ff1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0122
        gbc.setState(0x5656, 0xf813, 0x5b10, 0x2fa5, 0x24ee, 0x3809, 0x0, 0x0);
        gbc.writeMem(0x5656, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xf813);
        EXPECT(gbc.pc(), 0x5658);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0123
        gbc.setState(0x88c7, 0xfc14, 0x7030, 0x2026, 0xb55a, 0xbc96, 0x0, 0x1);
        gbc.writeMem(0x88c7, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xfc14);
        EXPECT(gbc.pc(), 0x88c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88c7), 0xcb);
        EXPECT(gbc.readMem(0x88c8), 0xf0);
        // CB F0 0124
        gbc.setState(0x621b, 0x8e87, 0xc830, 0x1e2a, 0xb01b, 0xa84c, 0x0, 0x1);
        gbc.writeMem(0x621b, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x8e87);
        EXPECT(gbc.pc(), 0x621d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0125
        gbc.setState(0xbc10, 0xcd35, 0x45a0, 0x7325, 0xe2e6, 0x587a, 0x1, 0x0);
        gbc.writeMem(0xbc10, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xcd35);
        EXPECT(gbc.pc(), 0xbc12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc10), 0xcb);
        EXPECT(gbc.readMem(0xbc11), 0xf0);
        // CB F0 0126
        gbc.setState(0x1ab7, 0x7b3, 0xf310, 0x572f, 0x7a93, 0x6e34, 0x1, 0x1);
        gbc.writeMem(0x1ab7, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x7b3);
        EXPECT(gbc.pc(), 0x1ab9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0127
        gbc.setState(0xe8aa, 0x5ba4, 0x8b60, 0x5840, 0x444c, 0xeb0e, 0x1, 0x0);
        gbc.writeMem(0xe8aa, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x5ba4);
        EXPECT(gbc.pc(), 0xe8ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8aa), 0xcb);
        EXPECT(gbc.readMem(0xe8ab), 0xf0);
        // CB F0 0129
        gbc.setState(0xcd90, 0x6244, 0xb380, 0xe780, 0xc09, 0x1f01, 0x0, 0x0);
        gbc.writeMem(0xcd90, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x6244);
        EXPECT(gbc.pc(), 0xcd92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd90), 0xcb);
        EXPECT(gbc.readMem(0xcd91), 0xf0);
        // CB F0 012A
        gbc.setState(0x64bf, 0xdf9a, 0x1b70, 0x6ccc, 0xe464, 0xa3b4, 0x0, 0x0);
        gbc.writeMem(0x64bf, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xdf9a);
        EXPECT(gbc.pc(), 0x64c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 012C
        gbc.setState(0x3486, 0x8b42, 0xed0, 0xd52d, 0x470b, 0x32b0, 0x0, 0x0);
        gbc.writeMem(0x3486, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x8b42);
        EXPECT(gbc.pc(), 0x3488);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 012D
        gbc.setState(0xfda, 0xadc4, 0xf410, 0x6f4e, 0x96c0, 0x7be1, 0x0, 0x0);
        gbc.writeMem(0xfda, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xadc4);
        EXPECT(gbc.pc(), 0xfdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 012E
        gbc.setState(0x1377, 0x39be, 0x4960, 0x396a, 0xaae, 0xf486, 0x0, 0x0);
        gbc.writeMem(0x1377, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x39be);
        EXPECT(gbc.pc(), 0x1379);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 012F
        gbc.setState(0xef54, 0x400, 0xbd0, 0x3e3, 0x1a08, 0x8e68, 0x0, 0x1);
        gbc.writeMem(0xef54, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x400);
        EXPECT(gbc.pc(), 0xef56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef54), 0xcb);
        EXPECT(gbc.readMem(0xef55), 0xf0);
        // CB F0 0130
        gbc.setState(0x8e5b, 0xb011, 0xed30, 0x59c2, 0x9e6e, 0xce31, 0x0, 0x1);
        gbc.writeMem(0x8e5b, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xb011);
        EXPECT(gbc.pc(), 0x8e5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e5b), 0xcb);
        EXPECT(gbc.readMem(0x8e5c), 0xf0);
        // CB F0 0131
        gbc.setState(0x818b, 0xe64c, 0xcb50, 0xcdec, 0x285b, 0xc194, 0x1, 0x0);
        gbc.writeMem(0x818b, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xe64c);
        EXPECT(gbc.pc(), 0x818d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x818b), 0xcb);
        EXPECT(gbc.readMem(0x818c), 0xf0);
        // CB F0 0132
        gbc.setState(0x5225, 0x193e, 0x3550, 0x5b3c, 0x305d, 0x3181, 0x0, 0x1);
        gbc.writeMem(0x5225, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x193e);
        EXPECT(gbc.pc(), 0x5227);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0133
        gbc.setState(0x9245, 0x4663, 0x9160, 0xbcb5, 0x58ee, 0xcc5d, 0x0, 0x1);
        gbc.writeMem(0x9245, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x4663);
        EXPECT(gbc.pc(), 0x9247);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9245), 0xcb);
        EXPECT(gbc.readMem(0x9246), 0xf0);
        // CB F0 0134
        gbc.setState(0x2efe, 0xadc4, 0x2590, 0xe3d7, 0x5218, 0xc489, 0x1, 0x0);
        gbc.writeMem(0x2efe, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xadc4);
        EXPECT(gbc.pc(), 0x2f00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0135
        gbc.setState(0x3694, 0x7b60, 0x9eb0, 0xc307, 0x1fe, 0x4626, 0x0, 0x1);
        gbc.writeMem(0x3694, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x7b60);
        EXPECT(gbc.pc(), 0x3696);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0136
        gbc.setState(0x9a86, 0xd9a5, 0xb3d0, 0x1236, 0xed8b, 0x1797, 0x0, 0x1);
        gbc.writeMem(0x9a86, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xd9a5);
        EXPECT(gbc.pc(), 0x9a88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a86), 0xcb);
        EXPECT(gbc.readMem(0x9a87), 0xf0);
        // CB F0 0137
        gbc.setState(0x5f6e, 0x740e, 0xdcd0, 0x3323, 0x7fb3, 0x3420, 0x1, 0x0);
        gbc.writeMem(0x5f6e, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x740e);
        EXPECT(gbc.pc(), 0x5f70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0138
        gbc.setState(0x4186, 0x5d07, 0xd450, 0xe15, 0xe0e2, 0xbfbd, 0x0, 0x1);
        gbc.writeMem(0x4186, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x5d07);
        EXPECT(gbc.pc(), 0x4188);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0139
        gbc.setState(0x232, 0x8cf3, 0x3ad0, 0xe0e1, 0x17b3, 0xff85, 0x1, 0x1);
        gbc.writeMem(0x232, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x8cf3);
        EXPECT(gbc.pc(), 0x234);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 013A
        gbc.setState(0x2e5b, 0xc62, 0xf260, 0x90c7, 0x38ea, 0x16d4, 0x0, 0x1);
        gbc.writeMem(0x2e5b, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xc62);
        EXPECT(gbc.pc(), 0x2e5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 013B
        gbc.setState(0x21c0, 0xbacd, 0xc180, 0x44a6, 0x36fa, 0x4c54, 0x0, 0x1);
        gbc.writeMem(0x21c0, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xbacd);
        EXPECT(gbc.pc(), 0x21c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 013C
        gbc.setState(0xd94c, 0xfcc5, 0x4900, 0x3d97, 0x5a83, 0xab7e, 0x0, 0x1);
        gbc.writeMem(0xd94c, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xfcc5);
        EXPECT(gbc.pc(), 0xd94e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd94c), 0xcb);
        EXPECT(gbc.readMem(0xd94d), 0xf0);
        // CB F0 013D
        gbc.setState(0x7352, 0xc37e, 0xf8f0, 0x9a20, 0x21bd, 0xafa8, 0x0, 0x1);
        gbc.writeMem(0x7352, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xc37e);
        EXPECT(gbc.pc(), 0x7354);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 013E
        gbc.setState(0xd14e, 0x77c5, 0x150, 0xdaec, 0xb21f, 0xd0e8, 0x1, 0x1);
        gbc.writeMem(0xd14e, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x77c5);
        EXPECT(gbc.pc(), 0xd150);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd14e), 0xcb);
        EXPECT(gbc.readMem(0xd14f), 0xf0);
        // CB F0 013F
        gbc.setState(0x656c, 0x7b0c, 0x92d0, 0xb1f6, 0x2bca, 0xe5bf, 0x1, 0x0);
        gbc.writeMem(0x656c, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x7b0c);
        EXPECT(gbc.pc(), 0x656e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0141
        gbc.setState(0x9a54, 0x30b5, 0x44d0, 0x13fc, 0x836f, 0x24f7, 0x0, 0x1);
        gbc.writeMem(0x9a54, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x30b5);
        EXPECT(gbc.pc(), 0x9a56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a54), 0xcb);
        EXPECT(gbc.readMem(0x9a55), 0xf0);
        // CB F0 0142
        gbc.setState(0xee48, 0x2162, 0x3b00, 0x5697, 0xe1fe, 0x64a8, 0x0, 0x1);
        gbc.writeMem(0xee48, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x2162);
        EXPECT(gbc.pc(), 0xee4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee48), 0xcb);
        EXPECT(gbc.readMem(0xee49), 0xf0);
        // CB F0 0143
        gbc.setState(0xcc0a, 0x2014, 0xc3b0, 0xadd4, 0x527d, 0xd9a, 0x0, 0x1);
        gbc.writeMem(0xcc0a, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x2014);
        EXPECT(gbc.pc(), 0xcc0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc0a), 0xcb);
        EXPECT(gbc.readMem(0xcc0b), 0xf0);
        // CB F0 0144
        gbc.setState(0xd535, 0xeb52, 0x1b40, 0x4db3, 0xc055, 0x5f07, 0x1, 0x0);
        gbc.writeMem(0xd535, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xeb52);
        EXPECT(gbc.pc(), 0xd537);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd535), 0xcb);
        EXPECT(gbc.readMem(0xd536), 0xf0);
        // CB F0 0145
        gbc.setState(0xd50d, 0x5128, 0xdf30, 0xe132, 0xa795, 0x3ca, 0x1, 0x0);
        gbc.writeMem(0xd50d, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x5128);
        EXPECT(gbc.pc(), 0xd50f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd50d), 0xcb);
        EXPECT(gbc.readMem(0xd50e), 0xf0);
        // CB F0 0146
        gbc.setState(0xa899, 0xd6a3, 0x4290, 0x5e20, 0xb15a, 0x13ca, 0x0, 0x0);
        gbc.writeMem(0xa899, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xd6a3);
        EXPECT(gbc.pc(), 0xa89b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa899), 0xcb);
        EXPECT(gbc.readMem(0xa89a), 0xf0);
        // CB F0 0147
        gbc.setState(0x21da, 0xc3df, 0x4a40, 0x38a4, 0x6e30, 0x9944, 0x1, 0x0);
        gbc.writeMem(0x21da, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xc3df);
        EXPECT(gbc.pc(), 0x21dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0148
        gbc.setState(0x2518, 0x1d61, 0x1c0, 0x8665, 0x527c, 0x6804, 0x1, 0x1);
        gbc.writeMem(0x2518, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x1d61);
        EXPECT(gbc.pc(), 0x251a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0149
        gbc.setState(0x70dd, 0x17a, 0xe8d0, 0x65b7, 0xdf56, 0xc079, 0x1, 0x0);
        gbc.writeMem(0x70dd, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x17a);
        EXPECT(gbc.pc(), 0x70df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 014A
        gbc.setState(0xa41e, 0xdd8c, 0xa630, 0xcf85, 0x22ac, 0x8f4, 0x0, 0x0);
        gbc.writeMem(0xa41e, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xdd8c);
        EXPECT(gbc.pc(), 0xa420);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa41e), 0xcb);
        EXPECT(gbc.readMem(0xa41f), 0xf0);
        // CB F0 014B
        gbc.setState(0x84d7, 0x770e, 0x1750, 0x3ad5, 0x5abb, 0xb3de, 0x1, 0x0);
        gbc.writeMem(0x84d7, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x770e);
        EXPECT(gbc.pc(), 0x84d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84d7), 0xcb);
        EXPECT(gbc.readMem(0x84d8), 0xf0);
        // CB F0 014C
        gbc.setState(0x9fc2, 0x6774, 0xb8f0, 0x81ec, 0x92e7, 0x9096, 0x0, 0x0);
        gbc.writeMem(0x9fc2, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x6774);
        EXPECT(gbc.pc(), 0x9fc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fc2), 0xcb);
        EXPECT(gbc.readMem(0x9fc3), 0xf0);
        // CB F0 014D
        gbc.setState(0x1a9e, 0x3d2c, 0x2190, 0x9615, 0x2857, 0x682c, 0x0, 0x1);
        gbc.writeMem(0x1a9e, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x3d2c);
        EXPECT(gbc.pc(), 0x1aa0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 014E
        gbc.setState(0x2e4d, 0xa34a, 0xaa70, 0x30f3, 0x7bac, 0xaa, 0x1, 0x1);
        gbc.writeMem(0x2e4d, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xa34a);
        EXPECT(gbc.pc(), 0x2e4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 014F
        gbc.setState(0xd87, 0x337b, 0xf9e0, 0xa7cf, 0xa083, 0xe464, 0x1, 0x0);
        gbc.writeMem(0xd87, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x337b);
        EXPECT(gbc.pc(), 0xd89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0150
        gbc.setState(0xcb82, 0x5b2d, 0x21b0, 0xf7a4, 0x59e6, 0x4dff, 0x1, 0x0);
        gbc.writeMem(0xcb82, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x5b2d);
        EXPECT(gbc.pc(), 0xcb84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb82), 0xcb);
        EXPECT(gbc.readMem(0xcb83), 0xf0);
        // CB F0 0151
        gbc.setState(0x7668, 0x5b0b, 0x480, 0xea49, 0xd0c8, 0x7caf, 0x0, 0x0);
        gbc.writeMem(0x7668, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x5b0b);
        EXPECT(gbc.pc(), 0x766a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0152
        gbc.setState(0xc65c, 0x547d, 0xe00, 0x1d5f, 0xb6b2, 0x1bdf, 0x1, 0x0);
        gbc.writeMem(0xc65c, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x547d);
        EXPECT(gbc.pc(), 0xc65e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc65c), 0xcb);
        EXPECT(gbc.readMem(0xc65d), 0xf0);
        // CB F0 0153
        gbc.setState(0x7663, 0xa2b2, 0xfa30, 0xc0f9, 0xdb57, 0x714e, 0x0, 0x0);
        gbc.writeMem(0x7663, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xa2b2);
        EXPECT(gbc.pc(), 0x7665);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0154
        gbc.setState(0x9bee, 0x86e3, 0x42c0, 0xfcf6, 0x5b62, 0x5530, 0x0, 0x1);
        gbc.writeMem(0x9bee, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x86e3);
        EXPECT(gbc.pc(), 0x9bf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bee), 0xcb);
        EXPECT(gbc.readMem(0x9bef), 0xf0);
        // CB F0 0155
        gbc.setState(0xba4c, 0x1d78, 0x4490, 0xda38, 0x5581, 0x841c, 0x0, 0x0);
        gbc.writeMem(0xba4c, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x1d78);
        EXPECT(gbc.pc(), 0xba4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba4c), 0xcb);
        EXPECT(gbc.readMem(0xba4d), 0xf0);
        // CB F0 0156
        gbc.setState(0x135, 0xa7dc, 0xe620, 0x6e0f, 0xd4c, 0x3973, 0x0, 0x0);
        gbc.writeMem(0x135, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xa7dc);
        EXPECT(gbc.pc(), 0x137);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0157
        gbc.setState(0x45b3, 0xbaa3, 0x35f0, 0x3e58, 0xf3f9, 0x6834, 0x1, 0x0);
        gbc.writeMem(0x45b3, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xbaa3);
        EXPECT(gbc.pc(), 0x45b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0158
        gbc.setState(0x3284, 0x8042, 0x4910, 0x8a63, 0x384, 0xd0ef, 0x1, 0x0);
        gbc.writeMem(0x3284, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x8042);
        EXPECT(gbc.pc(), 0x3286);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0159
        gbc.setState(0x86d9, 0x5a95, 0xe70, 0x4012, 0x1fda, 0xcfa3, 0x0, 0x1);
        gbc.writeMem(0x86d9, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x5a95);
        EXPECT(gbc.pc(), 0x86db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86d9), 0xcb);
        EXPECT(gbc.readMem(0x86da), 0xf0);
        // CB F0 015A
        gbc.setState(0xe346, 0x4d0b, 0x9670, 0x9ae5, 0xc300, 0x36d2, 0x0, 0x1);
        gbc.writeMem(0xe346, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x4d0b);
        EXPECT(gbc.pc(), 0xe348);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe346), 0xcb);
        EXPECT(gbc.readMem(0xe347), 0xf0);
        // CB F0 015B
        gbc.setState(0x1af9, 0x6f8e, 0x4a0, 0x7e19, 0xa6f1, 0x6799, 0x0, 0x0);
        gbc.writeMem(0x1af9, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x6f8e);
        EXPECT(gbc.pc(), 0x1afb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 015C
        gbc.setState(0xd68c, 0x35f8, 0x4280, 0x2, 0x5597, 0xf567, 0x0, 0x1);
        gbc.writeMem(0xd68c, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x35f8);
        EXPECT(gbc.pc(), 0xd68e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd68c), 0xcb);
        EXPECT(gbc.readMem(0xd68d), 0xf0);
        // CB F0 015D
        gbc.setState(0xd3fc, 0x483f, 0x36b0, 0x8157, 0xa279, 0x82a8, 0x1, 0x1);
        gbc.writeMem(0xd3fc, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x483f);
        EXPECT(gbc.pc(), 0xd3fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3fc), 0xcb);
        EXPECT(gbc.readMem(0xd3fd), 0xf0);
        // CB F0 015F
        gbc.setState(0xa2ed, 0x9fc0, 0x68c0, 0x851b, 0xab41, 0x87d3, 0x0, 0x1);
        gbc.writeMem(0xa2ed, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x9fc0);
        EXPECT(gbc.pc(), 0xa2ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2ed), 0xcb);
        EXPECT(gbc.readMem(0xa2ee), 0xf0);
        // CB F0 0160
        gbc.setState(0x70db, 0x29f3, 0x6010, 0x9576, 0x5dbe, 0x4c88, 0x0, 0x0);
        gbc.writeMem(0x70db, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x29f3);
        EXPECT(gbc.pc(), 0x70dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0161
        gbc.setState(0x2c83, 0x1192, 0xf730, 0xa9bc, 0x945, 0x3b17, 0x1, 0x1);
        gbc.writeMem(0x2c83, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x1192);
        EXPECT(gbc.pc(), 0x2c85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0162
        gbc.setState(0x4174, 0x1ed4, 0xe2d0, 0x2bd7, 0x5da9, 0x3442, 0x0, 0x0);
        gbc.writeMem(0x4174, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x1ed4);
        EXPECT(gbc.pc(), 0x4176);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0163
        gbc.setState(0x830a, 0x8cac, 0x5580, 0x9798, 0x792f, 0xba2e, 0x1, 0x0);
        gbc.writeMem(0x830a, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x8cac);
        EXPECT(gbc.pc(), 0x830c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x830a), 0xcb);
        EXPECT(gbc.readMem(0x830b), 0xf0);
        // CB F0 0164
        gbc.setState(0xb1ae, 0xd2e4, 0xf650, 0x163, 0x29ec, 0x9721, 0x0, 0x1);
        gbc.writeMem(0xb1ae, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xd2e4);
        EXPECT(gbc.pc(), 0xb1b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1ae), 0xcb);
        EXPECT(gbc.readMem(0xb1af), 0xf0);
        // CB F0 0165
        gbc.setState(0x7fdf, 0x3804, 0xaf40, 0x44b7, 0xbe31, 0xadd2, 0x0, 0x0);
        gbc.writeMem(0x7fdf, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x3804);
        EXPECT(gbc.pc(), 0x7fe1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0166
        gbc.setState(0x9c2c, 0x20a6, 0xcec0, 0xb9b2, 0x5f9a, 0xb7b7, 0x1, 0x0);
        gbc.writeMem(0x9c2c, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x20a6);
        EXPECT(gbc.pc(), 0x9c2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c2c), 0xcb);
        EXPECT(gbc.readMem(0x9c2d), 0xf0);
        // CB F0 0167
        gbc.setState(0x36a5, 0xb9be, 0x4800, 0xc0d9, 0xc0b1, 0x62d5, 0x1, 0x1);
        gbc.writeMem(0x36a5, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xb9be);
        EXPECT(gbc.pc(), 0x36a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0169
        gbc.setState(0x24cf, 0xdacf, 0xb3d0, 0x9822, 0x3105, 0xbc45, 0x1, 0x0);
        gbc.writeMem(0x24cf, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xdacf);
        EXPECT(gbc.pc(), 0x24d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 016A
        gbc.setState(0x58bd, 0x6073, 0xb8f0, 0x165e, 0xe43e, 0x2022, 0x1, 0x0);
        gbc.writeMem(0x58bd, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x6073);
        EXPECT(gbc.pc(), 0x58bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 016B
        gbc.setState(0xe916, 0xaf39, 0x72c0, 0x6f26, 0xdc5e, 0xb6ea, 0x1, 0x0);
        gbc.writeMem(0xe916, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xaf39);
        EXPECT(gbc.pc(), 0xe918);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe916), 0xcb);
        EXPECT(gbc.readMem(0xe917), 0xf0);
        // CB F0 016C
        gbc.setState(0x619, 0x6a6, 0x3560, 0x9d7d, 0xc3a5, 0x2be0, 0x1, 0x1);
        gbc.writeMem(0x619, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x6a6);
        EXPECT(gbc.pc(), 0x61b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 016D
        gbc.setState(0x1383, 0x938d, 0x8850, 0x4ebb, 0x265f, 0xd861, 0x0, 0x1);
        gbc.writeMem(0x1383, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x938d);
        EXPECT(gbc.pc(), 0x1385);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 016E
        gbc.setState(0x1373, 0xfa4a, 0xa590, 0x38fa, 0x39db, 0x3d12, 0x1, 0x0);
        gbc.writeMem(0x1373, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xfa4a);
        EXPECT(gbc.pc(), 0x1375);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 016F
        gbc.setState(0xeb79, 0xb750, 0xbf00, 0x760a, 0xaed0, 0x9795, 0x0, 0x1);
        gbc.writeMem(0xeb79, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xb750);
        EXPECT(gbc.pc(), 0xeb7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb79), 0xcb);
        EXPECT(gbc.readMem(0xeb7a), 0xf0);
        // CB F0 0170
        gbc.setState(0x928f, 0x96cd, 0xa480, 0x92e0, 0x206f, 0x7141, 0x1, 0x0);
        gbc.writeMem(0x928f, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x96cd);
        EXPECT(gbc.pc(), 0x9291);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x928f), 0xcb);
        EXPECT(gbc.readMem(0x9290), 0xf0);
        // CB F0 0171
        gbc.setState(0x17c3, 0x99e0, 0x7200, 0xace5, 0x39bf, 0xcae0, 0x1, 0x1);
        gbc.writeMem(0x17c3, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x99e0);
        EXPECT(gbc.pc(), 0x17c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0172
        gbc.setState(0xe440, 0x93dc, 0x73a0, 0x6903, 0xf159, 0x2acc, 0x0, 0x0);
        gbc.writeMem(0xe440, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x93dc);
        EXPECT(gbc.pc(), 0xe442);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe440), 0xcb);
        EXPECT(gbc.readMem(0xe441), 0xf0);
        // CB F0 0173
        gbc.setState(0xea0, 0x3a1e, 0x7410, 0x4d24, 0x82b5, 0xb329, 0x1, 0x0);
        gbc.writeMem(0xea0, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x3a1e);
        EXPECT(gbc.pc(), 0xea2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0174
        gbc.setState(0x3c20, 0x6479, 0xe350, 0x85c6, 0x36b6, 0x52c1, 0x1, 0x1);
        gbc.writeMem(0x3c20, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x6479);
        EXPECT(gbc.pc(), 0x3c22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0175
        gbc.setState(0xdbfa, 0xa83d, 0xcda0, 0x3450, 0xa1bd, 0xd636, 0x1, 0x1);
        gbc.writeMem(0xdbfa, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xa83d);
        EXPECT(gbc.pc(), 0xdbfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbfa), 0xcb);
        EXPECT(gbc.readMem(0xdbfb), 0xf0);
        // CB F0 0176
        gbc.setState(0x5f42, 0x5531, 0xaa20, 0x3258, 0x4cce, 0x7c71, 0x0, 0x1);
        gbc.writeMem(0x5f42, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x5531);
        EXPECT(gbc.pc(), 0x5f44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0177
        gbc.setState(0x7ac7, 0x2eb, 0xc780, 0x6895, 0xd01b, 0x6699, 0x1, 0x1);
        gbc.writeMem(0x7ac7, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x2eb);
        EXPECT(gbc.pc(), 0x7ac9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0178
        gbc.setState(0xc7b9, 0x90c7, 0xbad0, 0x1275, 0xb309, 0x41e4, 0x0, 0x1);
        gbc.writeMem(0xc7b9, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x90c7);
        EXPECT(gbc.pc(), 0xc7bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7b9), 0xcb);
        EXPECT(gbc.readMem(0xc7ba), 0xf0);
        // CB F0 017A
        gbc.setState(0x5e1e, 0xdc6c, 0xf310, 0xc4d6, 0xe17b, 0x1171, 0x1, 0x0);
        gbc.writeMem(0x5e1e, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xdc6c);
        EXPECT(gbc.pc(), 0x5e20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 017B
        gbc.setState(0x11d7, 0x5cf6, 0x45b0, 0x8ee, 0x85dd, 0x2c96, 0x0, 0x1);
        gbc.writeMem(0x11d7, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x5cf6);
        EXPECT(gbc.pc(), 0x11d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 017C
        gbc.setState(0xcb28, 0x4c6b, 0xbd90, 0xde7b, 0x104c, 0xa28a, 0x0, 0x1);
        gbc.writeMem(0xcb28, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x4c6b);
        EXPECT(gbc.pc(), 0xcb2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb28), 0xcb);
        EXPECT(gbc.readMem(0xcb29), 0xf0);
        // CB F0 017D
        gbc.setState(0xe698, 0x51d5, 0x2cd0, 0xfe1d, 0x279e, 0x5502, 0x1, 0x0);
        gbc.writeMem(0xe698, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x51d5);
        EXPECT(gbc.pc(), 0xe69a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe698), 0xcb);
        EXPECT(gbc.readMem(0xe699), 0xf0);
        // CB F0 017E
        gbc.setState(0x4446, 0x1bec, 0xced0, 0x55c5, 0x3202, 0xabf9, 0x1, 0x0);
        gbc.writeMem(0x4446, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x1bec);
        EXPECT(gbc.pc(), 0x4448);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0180
        gbc.setState(0x745f, 0xd73e, 0xf9d0, 0x5ba5, 0x103e, 0xdb75, 0x0, 0x0);
        gbc.writeMem(0x745f, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xd73e);
        EXPECT(gbc.pc(), 0x7461);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0181
        gbc.setState(0x7d98, 0xc261, 0x4cd0, 0x9e7f, 0x16, 0xb752, 0x0, 0x0);
        gbc.writeMem(0x7d98, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xc261);
        EXPECT(gbc.pc(), 0x7d9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0183
        gbc.setState(0x65bf, 0x3085, 0xdcc0, 0xd780, 0xd128, 0x3367, 0x0, 0x0);
        gbc.writeMem(0x65bf, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x3085);
        EXPECT(gbc.pc(), 0x65c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0185
        gbc.setState(0x3e69, 0x7277, 0x2ec0, 0x8e07, 0x3477, 0x8cdb, 0x0, 0x1);
        gbc.writeMem(0x3e69, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x7277);
        EXPECT(gbc.pc(), 0x3e6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0186
        gbc.setState(0xa606, 0x86d1, 0xda0, 0x1ee1, 0x3854, 0x3294, 0x0, 0x0);
        gbc.writeMem(0xa606, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x86d1);
        EXPECT(gbc.pc(), 0xa608);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa606), 0xcb);
        EXPECT(gbc.readMem(0xa607), 0xf0);
        // CB F0 0187
        gbc.setState(0xdae5, 0xc82f, 0xde50, 0x4130, 0xc373, 0xd809, 0x0, 0x0);
        gbc.writeMem(0xdae5, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xc82f);
        EXPECT(gbc.pc(), 0xdae7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdae5), 0xcb);
        EXPECT(gbc.readMem(0xdae6), 0xf0);
        // CB F0 0188
        gbc.setState(0x42e1, 0x2277, 0x7610, 0x60dd, 0x530d, 0x7198, 0x0, 0x0);
        gbc.writeMem(0x42e1, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x2277);
        EXPECT(gbc.pc(), 0x42e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0189
        gbc.setState(0xc98b, 0x3a78, 0x4350, 0x4036, 0x2812, 0xa7cc, 0x0, 0x1);
        gbc.writeMem(0xc98b, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x3a78);
        EXPECT(gbc.pc(), 0xc98d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc98b), 0xcb);
        EXPECT(gbc.readMem(0xc98c), 0xf0);
        // CB F0 018A
        gbc.setState(0x43ea, 0x3745, 0x85e0, 0xf2e4, 0x2418, 0xa5cf, 0x1, 0x0);
        gbc.writeMem(0x43ea, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x3745);
        EXPECT(gbc.pc(), 0x43ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 018B
        gbc.setState(0x4d95, 0xbe05, 0x89d0, 0x4e1d, 0xfe8b, 0xce7a, 0x1, 0x1);
        gbc.writeMem(0x4d95, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xbe05);
        EXPECT(gbc.pc(), 0x4d97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 018C
        gbc.setState(0x7036, 0x5092, 0x6f20, 0x858a, 0x51af, 0xf918, 0x0, 0x1);
        gbc.writeMem(0x7036, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x5092);
        EXPECT(gbc.pc(), 0x7038);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 018E
        gbc.setState(0x96db, 0x543b, 0x9700, 0x27cd, 0x1d39, 0x1aae, 0x1, 0x1);
        gbc.writeMem(0x96db, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x543b);
        EXPECT(gbc.pc(), 0x96dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96db), 0xcb);
        EXPECT(gbc.readMem(0x96dc), 0xf0);
        // CB F0 018F
        gbc.setState(0x30b7, 0x822c, 0x4b0, 0x7d98, 0x81c, 0xd8ca, 0x0, 0x1);
        gbc.writeMem(0x30b7, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x822c);
        EXPECT(gbc.pc(), 0x30b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0190
        gbc.setState(0x658b, 0xd8ba, 0x86a0, 0x1865, 0xb1ed, 0x883, 0x1, 0x1);
        gbc.writeMem(0x658b, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xd8ba);
        EXPECT(gbc.pc(), 0x658d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0191
        gbc.setState(0x94a7, 0xefb6, 0x81d0, 0xed25, 0xe2e4, 0xb70c, 0x0, 0x0);
        gbc.writeMem(0x94a7, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xefb6);
        EXPECT(gbc.pc(), 0x94a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94a7), 0xcb);
        EXPECT(gbc.readMem(0x94a8), 0xf0);
        // CB F0 0192
        gbc.setState(0x9fbf, 0x36ee, 0x3490, 0x43d1, 0xc23e, 0x3309, 0x1, 0x1);
        gbc.writeMem(0x9fbf, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x36ee);
        EXPECT(gbc.pc(), 0x9fc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fbf), 0xcb);
        EXPECT(gbc.readMem(0x9fc0), 0xf0);
        // CB F0 0193
        gbc.setState(0x2dd5, 0xfb71, 0x7810, 0xbc09, 0x67d6, 0xb332, 0x0, 0x0);
        gbc.writeMem(0x2dd5, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xfb71);
        EXPECT(gbc.pc(), 0x2dd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0194
        gbc.setState(0x19ef, 0x702c, 0xdaa0, 0x9491, 0x95e, 0xd145, 0x1, 0x1);
        gbc.writeMem(0x19ef, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x702c);
        EXPECT(gbc.pc(), 0x19f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0195
        gbc.setState(0x3b4d, 0x71b6, 0xcb30, 0x4403, 0x7601, 0xdc9b, 0x0, 0x1);
        gbc.writeMem(0x3b4d, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x71b6);
        EXPECT(gbc.pc(), 0x3b4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0196
        gbc.setState(0xb7a9, 0xc885, 0x22f0, 0x2ac2, 0x342d, 0xfb4a, 0x1, 0x1);
        gbc.writeMem(0xb7a9, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xc885);
        EXPECT(gbc.pc(), 0xb7ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7a9), 0xcb);
        EXPECT(gbc.readMem(0xb7aa), 0xf0);
        // CB F0 0197
        gbc.setState(0x6b0e, 0xf3db, 0x5790, 0xcf04, 0x187a, 0x6669, 0x0, 0x1);
        gbc.writeMem(0x6b0e, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xf3db);
        EXPECT(gbc.pc(), 0x6b10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0198
        gbc.setState(0x96b2, 0xf19f, 0x9ce0, 0x3c82, 0xbbb5, 0xc86, 0x1, 0x1);
        gbc.writeMem(0x96b2, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xf19f);
        EXPECT(gbc.pc(), 0x96b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96b2), 0xcb);
        EXPECT(gbc.readMem(0x96b3), 0xf0);
        // CB F0 0199
        gbc.setState(0x139e, 0xb064, 0x5840, 0xb641, 0xe6c4, 0x265d, 0x1, 0x1);
        gbc.writeMem(0x139e, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xb064);
        EXPECT(gbc.pc(), 0x13a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 019A
        gbc.setState(0x41fc, 0xa553, 0xc980, 0xb60c, 0xcd01, 0xed27, 0x1, 0x0);
        gbc.writeMem(0x41fc, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xa553);
        EXPECT(gbc.pc(), 0x41fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 019B
        gbc.setState(0x3aa7, 0x95f8, 0xeba0, 0x9a4b, 0x4d7, 0x3840, 0x0, 0x1);
        gbc.writeMem(0x3aa7, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x95f8);
        EXPECT(gbc.pc(), 0x3aa9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 019C
        gbc.setState(0xabff, 0x7577, 0xdf50, 0xed9a, 0x60d7, 0xe887, 0x0, 0x0);
        gbc.writeMem(0xabff, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x7577);
        EXPECT(gbc.pc(), 0xac01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabff), 0xcb);
        EXPECT(gbc.readMem(0xac00), 0xf0);
        // CB F0 019D
        gbc.setState(0x7c4d, 0xaf4f, 0xb6e0, 0x7b33, 0x6c88, 0x6d4a, 0x0, 0x1);
        gbc.writeMem(0x7c4d, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xaf4f);
        EXPECT(gbc.pc(), 0x7c4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 019E
        gbc.setState(0x17f7, 0xc6c7, 0xea60, 0xa958, 0x2535, 0x4ea5, 0x0, 0x0);
        gbc.writeMem(0x17f7, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xc6c7);
        EXPECT(gbc.pc(), 0x17f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 019F
        gbc.setState(0x11ce, 0xa7e9, 0xb0b0, 0xb3cc, 0x7a08, 0xd500, 0x1, 0x0);
        gbc.writeMem(0x11ce, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xa7e9);
        EXPECT(gbc.pc(), 0x11d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 01A0
        gbc.setState(0xd04e, 0xd4a, 0x1f70, 0x445c, 0x3596, 0x9f39, 0x0, 0x0);
        gbc.writeMem(0xd04e, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xd4a);
        EXPECT(gbc.pc(), 0xd050);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd04e), 0xcb);
        EXPECT(gbc.readMem(0xd04f), 0xf0);
        // CB F0 01A1
        gbc.setState(0x1d6c, 0xa4ae, 0x3330, 0x5072, 0xf961, 0x98e2, 0x1, 0x1);
        gbc.writeMem(0x1d6c, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xa4ae);
        EXPECT(gbc.pc(), 0x1d6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 01A2
        gbc.setState(0x8738, 0x6393, 0xcc00, 0xf29a, 0xdd10, 0x394, 0x1, 0x1);
        gbc.writeMem(0x8738, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x6393);
        EXPECT(gbc.pc(), 0x873a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8738), 0xcb);
        EXPECT(gbc.readMem(0x8739), 0xf0);
        // CB F0 01A3
        gbc.setState(0x2fec, 0x123f, 0x88b0, 0x7c3c, 0xd036, 0x124f, 0x1, 0x0);
        gbc.writeMem(0x2fec, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x123f);
        EXPECT(gbc.pc(), 0x2fee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 01A4
        gbc.setState(0xa5d6, 0xb0f0, 0xc390, 0x6e9b, 0xbf36, 0x554e, 0x0, 0x1);
        gbc.writeMem(0xa5d6, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xb0f0);
        EXPECT(gbc.pc(), 0xa5d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5d6), 0xcb);
        EXPECT(gbc.readMem(0xa5d7), 0xf0);
        // CB F0 01A5
        gbc.setState(0xaf35, 0x5449, 0x7610, 0x52bc, 0xbb52, 0x6385, 0x1, 0x0);
        gbc.writeMem(0xaf35, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x5449);
        EXPECT(gbc.pc(), 0xaf37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf35), 0xcb);
        EXPECT(gbc.readMem(0xaf36), 0xf0);
        // CB F0 01A6
        gbc.setState(0x6575, 0xe907, 0xd380, 0xb9f2, 0x8bfe, 0x99b6, 0x1, 0x1);
        gbc.writeMem(0x6575, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xe907);
        EXPECT(gbc.pc(), 0x6577);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 01A7
        gbc.setState(0xcf1f, 0x54c4, 0x9a30, 0x2543, 0xe9a1, 0x9645, 0x1, 0x1);
        gbc.writeMem(0xcf1f, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x54c4);
        EXPECT(gbc.pc(), 0xcf21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf1f), 0xcb);
        EXPECT(gbc.readMem(0xcf20), 0xf0);
        // CB F0 01A8
        gbc.setState(0xe265, 0xeff6, 0x1640, 0x5571, 0xd4ce, 0xdd33, 0x1, 0x0);
        gbc.writeMem(0xe265, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xeff6);
        EXPECT(gbc.pc(), 0xe267);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe265), 0xcb);
        EXPECT(gbc.readMem(0xe266), 0xf0);
        // CB F0 01A9
        gbc.setState(0x54c6, 0x5f8b, 0x2930, 0x779c, 0xb196, 0xa149, 0x1, 0x0);
        gbc.writeMem(0x54c6, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x5f8b);
        EXPECT(gbc.pc(), 0x54c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 01AA
        gbc.setState(0xd54, 0xc373, 0xaf0, 0x7bb4, 0xb11d, 0xd3b2, 0x1, 0x1);
        gbc.writeMem(0xd54, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xc373);
        EXPECT(gbc.pc(), 0xd56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 01AC
        gbc.setState(0x31df, 0x9fa1, 0xc620, 0x4cee, 0x437e, 0x4895, 0x0, 0x0);
        gbc.writeMem(0x31df, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x9fa1);
        EXPECT(gbc.pc(), 0x31e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 01AD
        gbc.setState(0xdd58, 0x4597, 0x73f0, 0x62da, 0x5d11, 0x763, 0x0, 0x1);
        gbc.writeMem(0xdd58, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x4597);
        EXPECT(gbc.pc(), 0xdd5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd58), 0xcb);
        EXPECT(gbc.readMem(0xdd59), 0xf0);
        // CB F0 01AE
        gbc.setState(0xaeb4, 0xb764, 0x67b0, 0xe359, 0xcab3, 0x3fce, 0x1, 0x1);
        gbc.writeMem(0xaeb4, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xb764);
        EXPECT(gbc.pc(), 0xaeb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaeb4), 0xcb);
        EXPECT(gbc.readMem(0xaeb5), 0xf0);
        // CB F0 01AF
        gbc.setState(0xc37b, 0xfe37, 0xb0a0, 0xb78b, 0x1a09, 0x5c71, 0x1, 0x1);
        gbc.writeMem(0xc37b, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xfe37);
        EXPECT(gbc.pc(), 0xc37d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc37b), 0xcb);
        EXPECT(gbc.readMem(0xc37c), 0xf0);
        // CB F0 01B0
        gbc.setState(0x13f8, 0x7338, 0x12e0, 0x7d75, 0x3926, 0xc8b9, 0x1, 0x1);
        gbc.writeMem(0x13f8, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x7338);
        EXPECT(gbc.pc(), 0x13fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 01B1
        gbc.setState(0xc1f, 0x572f, 0xff00, 0xd3f0, 0x8ad3, 0x8ab6, 0x0, 0x1);
        gbc.writeMem(0xc1f, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x572f);
        EXPECT(gbc.pc(), 0xc21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 01B2
        gbc.setState(0xd80d, 0xe22b, 0xc2f0, 0x3f3d, 0x892b, 0x19a3, 0x0, 0x0);
        gbc.writeMem(0xd80d, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xe22b);
        EXPECT(gbc.pc(), 0xd80f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd80d), 0xcb);
        EXPECT(gbc.readMem(0xd80e), 0xf0);
        // CB F0 01B3
        gbc.setState(0xcf77, 0xe9e8, 0x72b0, 0x664a, 0x4dc0, 0xdd18, 0x1, 0x0);
        gbc.writeMem(0xcf77, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xe9e8);
        EXPECT(gbc.pc(), 0xcf79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf77), 0xcb);
        EXPECT(gbc.readMem(0xcf78), 0xf0);
        // CB F0 01B4
        gbc.setState(0xb7a7, 0xb094, 0xb6a0, 0xd82, 0x693a, 0x9dfe, 0x1, 0x1);
        gbc.writeMem(0xb7a7, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xb094);
        EXPECT(gbc.pc(), 0xb7a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7a7), 0xcb);
        EXPECT(gbc.readMem(0xb7a8), 0xf0);
        // CB F0 01B5
        gbc.setState(0xe764, 0xa900, 0x6050, 0xf2ce, 0xe055, 0x72f6, 0x0, 0x1);
        gbc.writeMem(0xe764, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xa900);
        EXPECT(gbc.pc(), 0xe766);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe764), 0xcb);
        EXPECT(gbc.readMem(0xe765), 0xf0);
        // CB F0 01B6
        gbc.setState(0x4c90, 0x2eec, 0x4380, 0xa3fa, 0x5161, 0xa78f, 0x1, 0x1);
        gbc.writeMem(0x4c90, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x2eec);
        EXPECT(gbc.pc(), 0x4c92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 01B7
        gbc.setState(0x28f, 0x7dee, 0x6060, 0xebd6, 0x5275, 0xf2f, 0x0, 0x1);
        gbc.writeMem(0x28f, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x7dee);
        EXPECT(gbc.pc(), 0x291);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 01B8
        gbc.setState(0x28ed, 0xc15, 0x4a80, 0x3d9d, 0xc638, 0x87d1, 0x0, 0x0);
        gbc.writeMem(0x28ed, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xc15);
        EXPECT(gbc.pc(), 0x28ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 01B9
        gbc.setState(0xc88d, 0x3be4, 0x71c0, 0x6efc, 0xf55, 0x9bbf, 0x0, 0x1);
        gbc.writeMem(0xc88d, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x3be4);
        EXPECT(gbc.pc(), 0xc88f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc88d), 0xcb);
        EXPECT(gbc.readMem(0xc88e), 0xf0);
        // CB F0 01BA
        gbc.setState(0xb62d, 0xdd36, 0xf950, 0x9962, 0xd014, 0x96f3, 0x0, 0x1);
        gbc.writeMem(0xb62d, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xdd36);
        EXPECT(gbc.pc(), 0xb62f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb62d), 0xcb);
        EXPECT(gbc.readMem(0xb62e), 0xf0);
        // CB F0 01BB
        gbc.setState(0x9517, 0x499b, 0xfd50, 0x3366, 0xc886, 0xd964, 0x0, 0x0);
        gbc.writeMem(0x9517, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x499b);
        EXPECT(gbc.pc(), 0x9519);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9517), 0xcb);
        EXPECT(gbc.readMem(0x9518), 0xf0);
        // CB F0 01BC
        gbc.setState(0xad76, 0xc996, 0xe7a0, 0xe46b, 0x592f, 0x4407, 0x1, 0x1);
        gbc.writeMem(0xad76, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xc996);
        EXPECT(gbc.pc(), 0xad78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad76), 0xcb);
        EXPECT(gbc.readMem(0xad77), 0xf0);
        // CB F0 01BD
        gbc.setState(0x16ca, 0x4154, 0x2820, 0x7039, 0xa9a3, 0xc69c, 0x1, 0x1);
        gbc.writeMem(0x16ca, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x4154);
        EXPECT(gbc.pc(), 0x16cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 01BE
        gbc.setState(0xb012, 0xc81a, 0x15c0, 0xe6fd, 0xf7a9, 0x8cf4, 0x0, 0x1);
        gbc.writeMem(0xb012, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xc81a);
        EXPECT(gbc.pc(), 0xb014);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb012), 0xcb);
        EXPECT(gbc.readMem(0xb013), 0xf0);
        // CB F0 01BF
        gbc.setState(0x3ca1, 0xe4e7, 0xee0, 0x6cb, 0xaf25, 0xf93a, 0x0, 0x0);
        gbc.writeMem(0x3ca1, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xe4e7);
        EXPECT(gbc.pc(), 0x3ca3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 01C0
        gbc.setState(0xcd64, 0xfa6e, 0xa1b0, 0xe08a, 0x6dec, 0x58e1, 0x1, 0x0);
        gbc.writeMem(0xcd64, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xfa6e);
        EXPECT(gbc.pc(), 0xcd66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd64), 0xcb);
        EXPECT(gbc.readMem(0xcd65), 0xf0);
        // CB F0 01C1
        gbc.setState(0x12e0, 0x476e, 0xba0, 0xdd63, 0x17a8, 0xd8e3, 0x0, 0x0);
        gbc.writeMem(0x12e0, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x476e);
        EXPECT(gbc.pc(), 0x12e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 01C2
        gbc.setState(0x73f1, 0x7d72, 0x6910, 0x5ed, 0x12aa, 0x4a12, 0x0, 0x1);
        gbc.writeMem(0x73f1, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x7d72);
        EXPECT(gbc.pc(), 0x73f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 01C3
        gbc.setState(0x754c, 0x7678, 0xe4d0, 0x99d5, 0xbacc, 0x59ff, 0x0, 0x1);
        gbc.writeMem(0x754c, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x7678);
        EXPECT(gbc.pc(), 0x754e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 01C4
        gbc.setState(0xdbb3, 0x953f, 0x1ff0, 0x98b0, 0xe9b9, 0xe433, 0x1, 0x1);
        gbc.writeMem(0xdbb3, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x953f);
        EXPECT(gbc.pc(), 0xdbb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbb3), 0xcb);
        EXPECT(gbc.readMem(0xdbb4), 0xf0);
        // CB F0 01C5
        gbc.setState(0x7f5b, 0x96ab, 0x2670, 0xc181, 0x3da2, 0xa02d, 0x1, 0x0);
        gbc.writeMem(0x7f5b, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x96ab);
        EXPECT(gbc.pc(), 0x7f5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 01C6
        gbc.setState(0x7746, 0x4466, 0x5000, 0x8181, 0x358c, 0x8657, 0x0, 0x0);
        gbc.writeMem(0x7746, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x4466);
        EXPECT(gbc.pc(), 0x7748);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 01C7
        gbc.setState(0xcd01, 0x3881, 0xbe80, 0xd363, 0x4835, 0x4585, 0x1, 0x0);
        gbc.writeMem(0xcd01, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x3881);
        EXPECT(gbc.pc(), 0xcd03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd01), 0xcb);
        EXPECT(gbc.readMem(0xcd02), 0xf0);
        // CB F0 01C8
        gbc.setState(0x7b73, 0x3acf, 0xf820, 0xd99, 0xd2fc, 0x31d7, 0x1, 0x0);
        gbc.writeMem(0x7b73, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x3acf);
        EXPECT(gbc.pc(), 0x7b75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 01C9
        gbc.setState(0x2e3f, 0x9c75, 0x2250, 0x11ca, 0x76a2, 0x9ce8, 0x1, 0x1);
        gbc.writeMem(0x2e3f, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x9c75);
        EXPECT(gbc.pc(), 0x2e41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 01CA
        gbc.setState(0x42b5, 0x25ec, 0xc480, 0x45b, 0x93ef, 0xf7a0, 0x1, 0x1);
        gbc.writeMem(0x42b5, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x25ec);
        EXPECT(gbc.pc(), 0x42b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 01CB
        gbc.setState(0x3334, 0xacaf, 0xaa40, 0xc714, 0xdf9, 0x64c3, 0x1, 0x1);
        gbc.writeMem(0x3334, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xacaf);
        EXPECT(gbc.pc(), 0x3336);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 01CC
        gbc.setState(0x286b, 0x8141, 0xdd60, 0x7045, 0x50f4, 0x6ef2, 0x0, 0x1);
        gbc.writeMem(0x286b, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x8141);
        EXPECT(gbc.pc(), 0x286d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 01CD
        gbc.setState(0xad4c, 0xa590, 0x9ef0, 0x1011, 0xddba, 0xbf20, 0x0, 0x0);
        gbc.writeMem(0xad4c, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xa590);
        EXPECT(gbc.pc(), 0xad4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad4c), 0xcb);
        EXPECT(gbc.readMem(0xad4d), 0xf0);
        // CB F0 01CF
        gbc.setState(0xa4c9, 0x1746, 0x1650, 0x2eb7, 0x9b7c, 0x37bf, 0x0, 0x0);
        gbc.writeMem(0xa4c9, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x1746);
        EXPECT(gbc.pc(), 0xa4cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4c9), 0xcb);
        EXPECT(gbc.readMem(0xa4ca), 0xf0);
        // CB F0 01D0
        gbc.setState(0xb8ca, 0xdfe5, 0xa140, 0x1192, 0xf526, 0xa3dd, 0x1, 0x0);
        gbc.writeMem(0xb8ca, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xdfe5);
        EXPECT(gbc.pc(), 0xb8cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8ca), 0xcb);
        EXPECT(gbc.readMem(0xb8cb), 0xf0);
        // CB F0 01D1
        gbc.setState(0x758b, 0xc511, 0xfe70, 0x74bc, 0x18ec, 0xb7f6, 0x1, 0x1);
        gbc.writeMem(0x758b, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xc511);
        EXPECT(gbc.pc(), 0x758d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 01D2
        gbc.setState(0xbb80, 0x6336, 0x9830, 0x2899, 0xa368, 0x33eb, 0x1, 0x1);
        gbc.writeMem(0xbb80, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x6336);
        EXPECT(gbc.pc(), 0xbb82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb80), 0xcb);
        EXPECT(gbc.readMem(0xbb81), 0xf0);
        // CB F0 01D3
        gbc.setState(0x9bb4, 0xb20, 0x2940, 0xa2df, 0x2d66, 0xaa4c, 0x1, 0x1);
        gbc.writeMem(0x9bb4, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xb20);
        EXPECT(gbc.pc(), 0x9bb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bb4), 0xcb);
        EXPECT(gbc.readMem(0x9bb5), 0xf0);
        // CB F0 01D4
        gbc.setState(0x7dab, 0xce87, 0x6500, 0x953d, 0x267b, 0x8800, 0x0, 0x0);
        gbc.writeMem(0x7dab, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xce87);
        EXPECT(gbc.pc(), 0x7dad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 01D5
        gbc.setState(0x336a, 0x4aef, 0x9a00, 0x662d, 0x2118, 0xa52b, 0x0, 0x1);
        gbc.writeMem(0x336a, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x4aef);
        EXPECT(gbc.pc(), 0x336c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 01D6
        gbc.setState(0xcde2, 0x4af7, 0x6da0, 0x7e78, 0x5460, 0xf5d5, 0x1, 0x1);
        gbc.writeMem(0xcde2, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x4af7);
        EXPECT(gbc.pc(), 0xcde4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcde2), 0xcb);
        EXPECT(gbc.readMem(0xcde3), 0xf0);
        // CB F0 01D7
        gbc.setState(0xd14d, 0x786e, 0x1290, 0xf289, 0xc12d, 0x679a, 0x1, 0x0);
        gbc.writeMem(0xd14d, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x786e);
        EXPECT(gbc.pc(), 0xd14f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd14d), 0xcb);
        EXPECT(gbc.readMem(0xd14e), 0xf0);
        // CB F0 01D8
        gbc.setState(0x95cf, 0x5bf6, 0xbee0, 0x6c6b, 0x2acc, 0x37f7, 0x0, 0x1);
        gbc.writeMem(0x95cf, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x5bf6);
        EXPECT(gbc.pc(), 0x95d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95cf), 0xcb);
        EXPECT(gbc.readMem(0x95d0), 0xf0);
        // CB F0 01D9
        gbc.setState(0x816, 0x3fbf, 0x84a0, 0x4c46, 0xe828, 0xf6f4, 0x0, 0x1);
        gbc.writeMem(0x816, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x3fbf);
        EXPECT(gbc.pc(), 0x818);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 01DA
        gbc.setState(0x5338, 0xa59e, 0xe5a0, 0xccea, 0x2a2a, 0xd979, 0x1, 0x0);
        gbc.writeMem(0x5338, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xa59e);
        EXPECT(gbc.pc(), 0x533a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 01DB
        gbc.setState(0xe5c7, 0x76b0, 0x1d00, 0xe42b, 0xeab3, 0xe96, 0x1, 0x0);
        gbc.writeMem(0xe5c7, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x76b0);
        EXPECT(gbc.pc(), 0xe5c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5c7), 0xcb);
        EXPECT(gbc.readMem(0xe5c8), 0xf0);
        // CB F0 01DC
        gbc.setState(0x3f8, 0xe526, 0x48a0, 0xd009, 0x66f7, 0xdaab, 0x0, 0x1);
        gbc.writeMem(0x3f8, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xe526);
        EXPECT(gbc.pc(), 0x3fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 01DD
        gbc.setState(0xa81b, 0xbf7e, 0x26e0, 0x6283, 0xb6fd, 0x2c94, 0x1, 0x0);
        gbc.writeMem(0xa81b, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xbf7e);
        EXPECT(gbc.pc(), 0xa81d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa81b), 0xcb);
        EXPECT(gbc.readMem(0xa81c), 0xf0);
        // CB F0 01DE
        gbc.setState(0xd39b, 0x8212, 0x7980, 0x63b6, 0x6df2, 0x90f6, 0x1, 0x1);
        gbc.writeMem(0xd39b, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x8212);
        EXPECT(gbc.pc(), 0xd39d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd39b), 0xcb);
        EXPECT(gbc.readMem(0xd39c), 0xf0);
        // CB F0 01DF
        gbc.setState(0x1dba, 0x93d7, 0x60b0, 0x7082, 0x2940, 0x67f7, 0x0, 0x1);
        gbc.writeMem(0x1dba, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x93d7);
        EXPECT(gbc.pc(), 0x1dbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 01E0
        gbc.setState(0x9caa, 0x3124, 0xc3c0, 0x6d54, 0xd702, 0x23de, 0x0, 0x0);
        gbc.writeMem(0x9caa, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x3124);
        EXPECT(gbc.pc(), 0x9cac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9caa), 0xcb);
        EXPECT(gbc.readMem(0x9cab), 0xf0);
        // CB F0 01E1
        gbc.setState(0x9bc2, 0x21d0, 0xab0, 0x57a4, 0x2c63, 0x5fd0, 0x0, 0x0);
        gbc.writeMem(0x9bc2, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x21d0);
        EXPECT(gbc.pc(), 0x9bc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bc2), 0xcb);
        EXPECT(gbc.readMem(0x9bc3), 0xf0);
        // CB F0 01E2
        gbc.setState(0x6fdf, 0xecbf, 0x3770, 0x7411, 0x11c1, 0x125a, 0x1, 0x1);
        gbc.writeMem(0x6fdf, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xecbf);
        EXPECT(gbc.pc(), 0x6fe1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 01E3
        gbc.setState(0x4778, 0xd9e6, 0x1040, 0xc244, 0xbc71, 0x714f, 0x0, 0x0);
        gbc.writeMem(0x4778, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xd9e6);
        EXPECT(gbc.pc(), 0x477a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 01E4
        gbc.setState(0x5f0f, 0x3c41, 0xa820, 0x755e, 0x312e, 0xb85b, 0x0, 0x1);
        gbc.writeMem(0x5f0f, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x3c41);
        EXPECT(gbc.pc(), 0x5f11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 01E5
        gbc.setState(0x462c, 0x4c96, 0x9c20, 0xf332, 0x7bd6, 0x487d, 0x0, 0x1);
        gbc.writeMem(0x462c, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x4c96);
        EXPECT(gbc.pc(), 0x462e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 01E7
        gbc.setState(0x7257, 0xba0d, 0xe020, 0xe2ba, 0xfdc4, 0xa0af, 0x1, 0x0);
        gbc.writeMem(0x7257, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xba0d);
        EXPECT(gbc.pc(), 0x7259);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 01E8
        gbc.setState(0x76c2, 0x831f, 0x38b0, 0xe06d, 0x6cbc, 0x402e, 0x1, 0x1);
        gbc.writeMem(0x76c2, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x831f);
        EXPECT(gbc.pc(), 0x76c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 01E9
        gbc.setState(0x3068, 0xcfad, 0x2860, 0xd83f, 0xe42c, 0x48aa, 0x0, 0x0);
        gbc.writeMem(0x3068, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xcfad);
        EXPECT(gbc.pc(), 0x306a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 01EA
        gbc.setState(0xf6f, 0xaf37, 0x8ea0, 0x4fee, 0x16f7, 0xae17, 0x1, 0x1);
        gbc.writeMem(0xf6f, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xaf37);
        EXPECT(gbc.pc(), 0xf71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 01EB
        gbc.setState(0xbab0, 0x7e50, 0x9130, 0xe315, 0x2438, 0xddab, 0x1, 0x0);
        gbc.writeMem(0xbab0, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x7e50);
        EXPECT(gbc.pc(), 0xbab2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbab0), 0xcb);
        EXPECT(gbc.readMem(0xbab1), 0xf0);
        // CB F0 01EC
        gbc.setState(0x6569, 0xd62d, 0xe1a0, 0x4f40, 0x1ec, 0x9222, 0x1, 0x1);
        gbc.writeMem(0x6569, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xd62d);
        EXPECT(gbc.pc(), 0x656b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 01ED
        gbc.setState(0x5b0f, 0x28c8, 0x54b0, 0x69a5, 0x6a38, 0x8347, 0x1, 0x0);
        gbc.writeMem(0x5b0f, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x28c8);
        EXPECT(gbc.pc(), 0x5b11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 01EE
        gbc.setState(0x6d2a, 0xc8c4, 0xe6d0, 0x8562, 0x6eaa, 0x5e51, 0x0, 0x1);
        gbc.writeMem(0x6d2a, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xc8c4);
        EXPECT(gbc.pc(), 0x6d2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 01EF
        gbc.setState(0x7ad5, 0x5b8b, 0x40f0, 0x6063, 0xca5a, 0xf9a4, 0x0, 0x1);
        gbc.writeMem(0x7ad5, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x5b8b);
        EXPECT(gbc.pc(), 0x7ad7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 01F0
        gbc.setState(0x6007, 0x352c, 0xfd60, 0x854, 0x1bd2, 0xa123, 0x0, 0x0);
        gbc.writeMem(0x6007, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x352c);
        EXPECT(gbc.pc(), 0x6009);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 01F1
        gbc.setState(0x8fd, 0xaf21, 0x5900, 0xc48d, 0x2e51, 0xb3e, 0x0, 0x0);
        gbc.writeMem(0x8fd, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xaf21);
        EXPECT(gbc.pc(), 0x8ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 01F2
        gbc.setState(0xbc90, 0xc1e1, 0xf1b0, 0xb2ca, 0xb7ab, 0xf9c, 0x1, 0x1);
        gbc.writeMem(0xbc90, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xc1e1);
        EXPECT(gbc.pc(), 0xbc92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc90), 0xcb);
        EXPECT(gbc.readMem(0xbc91), 0xf0);
        // CB F0 01F3
        gbc.setState(0xb37c, 0xc268, 0x680, 0x170d, 0x1515, 0x69cf, 0x1, 0x1);
        gbc.writeMem(0xb37c, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xc268);
        EXPECT(gbc.pc(), 0xb37e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb37c), 0xcb);
        EXPECT(gbc.readMem(0xb37d), 0xf0);
        // CB F0 01F4
        gbc.setState(0xecbf, 0xfac3, 0x3610, 0x49a0, 0xf6b4, 0x6680, 0x1, 0x1);
        gbc.writeMem(0xecbf, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xfac3);
        EXPECT(gbc.pc(), 0xecc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecbf), 0xcb);
        EXPECT(gbc.readMem(0xecc0), 0xf0);
        // CB F0 01F6
        gbc.setState(0xa8a5, 0xe71, 0xb780, 0x46a8, 0xbcbc, 0xd803, 0x1, 0x0);
        gbc.writeMem(0xa8a5, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xe71);
        EXPECT(gbc.pc(), 0xa8a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8a5), 0xcb);
        EXPECT(gbc.readMem(0xa8a6), 0xf0);
        // CB F0 01F7
        gbc.setState(0x4279, 0x5b1e, 0xcb40, 0xf1e0, 0x77bd, 0x4c6d, 0x1, 0x1);
        gbc.writeMem(0x4279, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x5b1e);
        EXPECT(gbc.pc(), 0x427b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 01F8
        gbc.setState(0xe2d7, 0xfbe7, 0x23f0, 0xc968, 0x1589, 0x30e4, 0x0, 0x0);
        gbc.writeMem(0xe2d7, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xfbe7);
        EXPECT(gbc.pc(), 0xe2d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2d7), 0xcb);
        EXPECT(gbc.readMem(0xe2d8), 0xf0);
        // CB F0 01F9
        gbc.setState(0x77e2, 0x5952, 0x90f0, 0x3a57, 0x37dc, 0x906e, 0x0, 0x0);
        gbc.writeMem(0x77e2, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x5952);
        EXPECT(gbc.pc(), 0x77e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 01FA
        gbc.setState(0x330e, 0x2c23, 0x3450, 0x150f, 0xa04e, 0xa671, 0x0, 0x1);
        gbc.writeMem(0x330e, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x2c23);
        EXPECT(gbc.pc(), 0x3310);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 01FB
        gbc.setState(0x836b, 0xbe4d, 0xb9d0, 0x4174, 0x4440, 0x8fbc, 0x1, 0x1);
        gbc.writeMem(0x836b, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xbe4d);
        EXPECT(gbc.pc(), 0x836d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x836b), 0xcb);
        EXPECT(gbc.readMem(0x836c), 0xf0);
        // CB F0 01FC
        gbc.setState(0x2490, 0xb29f, 0xced0, 0x1d17, 0xdbf2, 0x2e00, 0x0, 0x1);
        gbc.writeMem(0x2490, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xb29f);
        EXPECT(gbc.pc(), 0x2492);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 01FD
        gbc.setState(0x5bb1, 0x8645, 0x9270, 0x61ed, 0x8881, 0xd805, 0x0, 0x0);
        gbc.writeMem(0x5bb1, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x8645);
        EXPECT(gbc.pc(), 0x5bb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 01FE
        gbc.setState(0x527, 0x1001, 0x4bd0, 0x24c7, 0xdb7f, 0xc165, 0x1, 0x0);
        gbc.writeMem(0x527, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x1001);
        EXPECT(gbc.pc(), 0x529);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 01FF
        gbc.setState(0xca79, 0x89ba, 0x2fc0, 0x3c59, 0x9656, 0xe6f2, 0x0, 0x1);
        gbc.writeMem(0xca79, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x89ba);
        EXPECT(gbc.pc(), 0xca7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca79), 0xcb);
        EXPECT(gbc.readMem(0xca7a), 0xf0);
        // CB F0 0200
        gbc.setState(0xdd75, 0x48cc, 0x3490, 0x5b20, 0xb7f3, 0xd8ef, 0x1, 0x0);
        gbc.writeMem(0xdd75, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x48cc);
        EXPECT(gbc.pc(), 0xdd77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd75), 0xcb);
        EXPECT(gbc.readMem(0xdd76), 0xf0);
        // CB F0 0201
        gbc.setState(0x51c1, 0x6135, 0xb280, 0x4bab, 0x268e, 0xf114, 0x1, 0x1);
        gbc.writeMem(0x51c1, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x6135);
        EXPECT(gbc.pc(), 0x51c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0202
        gbc.setState(0xbcf9, 0x38fc, 0x4470, 0xf6a4, 0x8c1c, 0x2007, 0x0, 0x0);
        gbc.writeMem(0xbcf9, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x38fc);
        EXPECT(gbc.pc(), 0xbcfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcf9), 0xcb);
        EXPECT(gbc.readMem(0xbcfa), 0xf0);
        // CB F0 0203
        gbc.setState(0x1b2f, 0x4dc2, 0xe700, 0xfe6f, 0x941c, 0x3920, 0x1, 0x0);
        gbc.writeMem(0x1b2f, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x4dc2);
        EXPECT(gbc.pc(), 0x1b31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0204
        gbc.setState(0xad0c, 0x559e, 0xc7a0, 0xe1bb, 0x1fe0, 0x7cbe, 0x1, 0x1);
        gbc.writeMem(0xad0c, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x559e);
        EXPECT(gbc.pc(), 0xad0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad0c), 0xcb);
        EXPECT(gbc.readMem(0xad0d), 0xf0);
        // CB F0 0205
        gbc.setState(0x701c, 0xe32b, 0xf420, 0x71, 0x2499, 0xe1a, 0x0, 0x1);
        gbc.writeMem(0x701c, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xe32b);
        EXPECT(gbc.pc(), 0x701e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0206
        gbc.setState(0x1f29, 0xf3a7, 0xff30, 0x4f2c, 0x1103, 0x7f6e, 0x0, 0x0);
        gbc.writeMem(0x1f29, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xf3a7);
        EXPECT(gbc.pc(), 0x1f2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0207
        gbc.setState(0x1b25, 0x3729, 0xc520, 0xd89a, 0x9f38, 0x6c04, 0x1, 0x0);
        gbc.writeMem(0x1b25, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x3729);
        EXPECT(gbc.pc(), 0x1b27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0208
        gbc.setState(0xbe8, 0x7377, 0x7aa0, 0x2656, 0xc22, 0x6543, 0x0, 0x0);
        gbc.writeMem(0xbe8, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x7377);
        EXPECT(gbc.pc(), 0xbea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0209
        gbc.setState(0xc6ff, 0x962d, 0x89b0, 0x514, 0xcfbc, 0xd2dd, 0x0, 0x1);
        gbc.writeMem(0xc6ff, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x962d);
        EXPECT(gbc.pc(), 0xc701);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6ff), 0xcb);
        EXPECT(gbc.readMem(0xc700), 0xf0);
        // CB F0 020A
        gbc.setState(0x6c3c, 0x5771, 0x7ef0, 0xa5ac, 0xeab5, 0xaadb, 0x1, 0x0);
        gbc.writeMem(0x6c3c, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x5771);
        EXPECT(gbc.pc(), 0x6c3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 020C
        gbc.setState(0xc9eb, 0x1ad8, 0x8b60, 0x163c, 0xd612, 0xfc57, 0x0, 0x0);
        gbc.writeMem(0xc9eb, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x1ad8);
        EXPECT(gbc.pc(), 0xc9ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9eb), 0xcb);
        EXPECT(gbc.readMem(0xc9ec), 0xf0);
        // CB F0 020D
        gbc.setState(0x9b43, 0x812d, 0x8730, 0x8c7e, 0x396e, 0xba2b, 0x1, 0x1);
        gbc.writeMem(0x9b43, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x812d);
        EXPECT(gbc.pc(), 0x9b45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b43), 0xcb);
        EXPECT(gbc.readMem(0x9b44), 0xf0);
        // CB F0 020E
        gbc.setState(0x9778, 0x437f, 0x8e20, 0xd0d8, 0xfc53, 0x8fec, 0x1, 0x1);
        gbc.writeMem(0x9778, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x437f);
        EXPECT(gbc.pc(), 0x977a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9778), 0xcb);
        EXPECT(gbc.readMem(0x9779), 0xf0);
        // CB F0 020F
        gbc.setState(0x4a0e, 0xf0d1, 0xe790, 0xaed0, 0x5ad6, 0x9f69, 0x1, 0x0);
        gbc.writeMem(0x4a0e, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xf0d1);
        EXPECT(gbc.pc(), 0x4a10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0210
        gbc.setState(0xcc6c, 0x674a, 0xc870, 0x2e5, 0xfd2d, 0x9353, 0x1, 0x1);
        gbc.writeMem(0xcc6c, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x674a);
        EXPECT(gbc.pc(), 0xcc6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc6c), 0xcb);
        EXPECT(gbc.readMem(0xcc6d), 0xf0);
        // CB F0 0211
        gbc.setState(0x1d3d, 0x9759, 0x7e20, 0xe0, 0x427d, 0x75f3, 0x0, 0x1);
        gbc.writeMem(0x1d3d, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x9759);
        EXPECT(gbc.pc(), 0x1d3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0212
        gbc.setState(0x7372, 0xdbac, 0x6850, 0x3965, 0x275f, 0x3cb9, 0x0, 0x0);
        gbc.writeMem(0x7372, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xdbac);
        EXPECT(gbc.pc(), 0x7374);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0213
        gbc.setState(0x14be, 0xcbd5, 0x1f60, 0xe8e4, 0x12b3, 0xc50a, 0x0, 0x0);
        gbc.writeMem(0x14be, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xcbd5);
        EXPECT(gbc.pc(), 0x14c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0214
        gbc.setState(0xb6b, 0x87e3, 0x5400, 0x9411, 0xe2f8, 0xdc10, 0x0, 0x1);
        gbc.writeMem(0xb6b, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x87e3);
        EXPECT(gbc.pc(), 0xb6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0215
        gbc.setState(0x859f, 0x4374, 0x9100, 0xce42, 0xcf33, 0x4321, 0x0, 0x1);
        gbc.writeMem(0x859f, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x4374);
        EXPECT(gbc.pc(), 0x85a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x859f), 0xcb);
        EXPECT(gbc.readMem(0x85a0), 0xf0);
        // CB F0 0217
        gbc.setState(0x72d6, 0xd3dc, 0xe820, 0xdf5b, 0x4ff8, 0x7bc9, 0x1, 0x1);
        gbc.writeMem(0x72d6, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xd3dc);
        EXPECT(gbc.pc(), 0x72d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0218
        gbc.setState(0xc381, 0x3cc3, 0xf370, 0xaeb2, 0x3154, 0xc20, 0x0, 0x1);
        gbc.writeMem(0xc381, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x3cc3);
        EXPECT(gbc.pc(), 0xc383);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc381), 0xcb);
        EXPECT(gbc.readMem(0xc382), 0xf0);
        // CB F0 0219
        gbc.setState(0x7917, 0xde1, 0xa9b0, 0x8d8d, 0x222a, 0xadb9, 0x1, 0x1);
        gbc.writeMem(0x7917, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xde1);
        EXPECT(gbc.pc(), 0x7919);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 021A
        gbc.setState(0x4a4a, 0x7b77, 0xef0, 0x6c5e, 0x231a, 0xf1d8, 0x0, 0x0);
        gbc.writeMem(0x4a4a, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x7b77);
        EXPECT(gbc.pc(), 0x4a4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 021B
        gbc.setState(0xe905, 0x1dda, 0x3aa0, 0x3984, 0x7b24, 0x5c81, 0x0, 0x0);
        gbc.writeMem(0xe905, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x1dda);
        EXPECT(gbc.pc(), 0xe907);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe905), 0xcb);
        EXPECT(gbc.readMem(0xe906), 0xf0);
        // CB F0 021C
        gbc.setState(0x326d, 0x444f, 0x9df0, 0x7542, 0x6cad, 0xc0f8, 0x1, 0x0);
        gbc.writeMem(0x326d, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x444f);
        EXPECT(gbc.pc(), 0x326f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 021D
        gbc.setState(0xe44d, 0x5159, 0x6060, 0x1ff1, 0x6da4, 0xea32, 0x1, 0x0);
        gbc.writeMem(0xe44d, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x5159);
        EXPECT(gbc.pc(), 0xe44f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe44d), 0xcb);
        EXPECT(gbc.readMem(0xe44e), 0xf0);
        // CB F0 021E
        gbc.setState(0x9956, 0xd6a1, 0xf120, 0x560f, 0xcf48, 0x72c3, 0x1, 0x0);
        gbc.writeMem(0x9956, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xd6a1);
        EXPECT(gbc.pc(), 0x9958);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9956), 0xcb);
        EXPECT(gbc.readMem(0x9957), 0xf0);
        // CB F0 021F
        gbc.setState(0x3051, 0x7642, 0xf4a0, 0xaa84, 0x882c, 0xa207, 0x1, 0x1);
        gbc.writeMem(0x3051, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x7642);
        EXPECT(gbc.pc(), 0x3053);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0220
        gbc.setState(0xabfe, 0xe395, 0x4960, 0xe503, 0x228f, 0x28a4, 0x1, 0x1);
        gbc.writeMem(0xabfe, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xe395);
        EXPECT(gbc.pc(), 0xac00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabfe), 0xcb);
        EXPECT(gbc.readMem(0xabff), 0xf0);
        // CB F0 0221
        gbc.setState(0x408a, 0x9a1d, 0x8190, 0xeea4, 0x2942, 0x317d, 0x0, 0x0);
        gbc.writeMem(0x408a, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x9a1d);
        EXPECT(gbc.pc(), 0x408c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0222
        gbc.setState(0xbdba, 0x873d, 0xc9c0, 0x2d3, 0x202f, 0x163a, 0x1, 0x0);
        gbc.writeMem(0xbdba, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x873d);
        EXPECT(gbc.pc(), 0xbdbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdba), 0xcb);
        EXPECT(gbc.readMem(0xbdbb), 0xf0);
        // CB F0 0223
        gbc.setState(0x764f, 0xb54e, 0x3a70, 0x2e25, 0x3ee4, 0x5b16, 0x1, 0x0);
        gbc.writeMem(0x764f, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xb54e);
        EXPECT(gbc.pc(), 0x7651);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0224
        gbc.setState(0x4606, 0x3b62, 0x9140, 0x7c62, 0x12bc, 0x40ac, 0x1, 0x0);
        gbc.writeMem(0x4606, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x3b62);
        EXPECT(gbc.pc(), 0x4608);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0225
        gbc.setState(0x8d48, 0xe973, 0x35e0, 0xc907, 0x4a94, 0x92dd, 0x0, 0x1);
        gbc.writeMem(0x8d48, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xe973);
        EXPECT(gbc.pc(), 0x8d4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d48), 0xcb);
        EXPECT(gbc.readMem(0x8d49), 0xf0);
        // CB F0 0226
        gbc.setState(0x2ed1, 0xba31, 0x8fe0, 0x814c, 0xe0da, 0x51e8, 0x1, 0x1);
        gbc.writeMem(0x2ed1, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xba31);
        EXPECT(gbc.pc(), 0x2ed3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0227
        gbc.setState(0x4638, 0x4643, 0xac40, 0xff65, 0xfac0, 0x4818, 0x0, 0x1);
        gbc.writeMem(0x4638, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x4643);
        EXPECT(gbc.pc(), 0x463a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0228
        gbc.setState(0x3f22, 0xe60d, 0xe2e0, 0x812f, 0xe213, 0x4da7, 0x1, 0x0);
        gbc.writeMem(0x3f22, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xe60d);
        EXPECT(gbc.pc(), 0x3f24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0229
        gbc.setState(0x2e87, 0x8225, 0x82f0, 0xd207, 0x547e, 0x13c6, 0x0, 0x1);
        gbc.writeMem(0x2e87, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x8225);
        EXPECT(gbc.pc(), 0x2e89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 022A
        gbc.setState(0x53fd, 0x98c6, 0x1b80, 0xadea, 0xc83a, 0xe3ce, 0x0, 0x0);
        gbc.writeMem(0x53fd, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x98c6);
        EXPECT(gbc.pc(), 0x53ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 022B
        gbc.setState(0x18cc, 0x29f4, 0x30, 0xac36, 0x5e38, 0x6a34, 0x0, 0x0);
        gbc.writeMem(0x18cc, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x29f4);
        EXPECT(gbc.pc(), 0x18ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 022C
        gbc.setState(0x3f2a, 0x76f6, 0xbca0, 0x3728, 0xe87, 0xd836, 0x0, 0x1);
        gbc.writeMem(0x3f2a, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x76f6);
        EXPECT(gbc.pc(), 0x3f2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 022D
        gbc.setState(0x225d, 0xcdb4, 0x4130, 0x3360, 0x6301, 0x3e17, 0x1, 0x0);
        gbc.writeMem(0x225d, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xcdb4);
        EXPECT(gbc.pc(), 0x225f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 022E
        gbc.setState(0x8443, 0x4a88, 0xb300, 0xb271, 0x285e, 0x1562, 0x1, 0x0);
        gbc.writeMem(0x8443, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x4a88);
        EXPECT(gbc.pc(), 0x8445);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8443), 0xcb);
        EXPECT(gbc.readMem(0x8444), 0xf0);
        // CB F0 022F
        gbc.setState(0x149c, 0x2421, 0xfaf0, 0x1fad, 0xd7a4, 0x3492, 0x1, 0x1);
        gbc.writeMem(0x149c, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x2421);
        EXPECT(gbc.pc(), 0x149e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0230
        gbc.setState(0x21bd, 0x9e13, 0xd6f0, 0x437b, 0x751f, 0xc48b, 0x0, 0x0);
        gbc.writeMem(0x21bd, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x9e13);
        EXPECT(gbc.pc(), 0x21bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0231
        gbc.setState(0x6efe, 0xa376, 0x5b80, 0x9ac1, 0x6bf6, 0x541e, 0x1, 0x0);
        gbc.writeMem(0x6efe, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xa376);
        EXPECT(gbc.pc(), 0x6f00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0232
        gbc.setState(0x59f7, 0x652c, 0x6720, 0x8802, 0xda23, 0xd9f3, 0x1, 0x0);
        gbc.writeMem(0x59f7, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x652c);
        EXPECT(gbc.pc(), 0x59f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0233
        gbc.setState(0x3de6, 0x804, 0x5060, 0x9945, 0x249a, 0x4643, 0x1, 0x0);
        gbc.writeMem(0x3de6, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x804);
        EXPECT(gbc.pc(), 0x3de8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0234
        gbc.setState(0x932f, 0x32e2, 0x7da0, 0xa043, 0x41f4, 0x912, 0x1, 0x1);
        gbc.writeMem(0x932f, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x32e2);
        EXPECT(gbc.pc(), 0x9331);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x932f), 0xcb);
        EXPECT(gbc.readMem(0x9330), 0xf0);
        // CB F0 0235
        gbc.setState(0xdfa9, 0xecb1, 0xa240, 0x77f4, 0xb99, 0x6aca, 0x0, 0x1);
        gbc.writeMem(0xdfa9, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xecb1);
        EXPECT(gbc.pc(), 0xdfab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfa9), 0xcb);
        EXPECT(gbc.readMem(0xdfaa), 0xf0);
        // CB F0 0236
        gbc.setState(0xca3e, 0x15e3, 0xb830, 0x6c50, 0x6471, 0x78d2, 0x1, 0x1);
        gbc.writeMem(0xca3e, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x15e3);
        EXPECT(gbc.pc(), 0xca40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca3e), 0xcb);
        EXPECT(gbc.readMem(0xca3f), 0xf0);
        // CB F0 0237
        gbc.setState(0x78bc, 0xcf1a, 0x4a30, 0x509f, 0xee3, 0x43e0, 0x1, 0x1);
        gbc.writeMem(0x78bc, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xcf1a);
        EXPECT(gbc.pc(), 0x78be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0238
        gbc.setState(0x966, 0x6e6e, 0xed70, 0x779b, 0xbb63, 0x9b4d, 0x0, 0x1);
        gbc.writeMem(0x966, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x6e6e);
        EXPECT(gbc.pc(), 0x968);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 023A
        gbc.setState(0xe3fa, 0xc9d5, 0xfd40, 0x813, 0x70f8, 0x55a5, 0x0, 0x1);
        gbc.writeMem(0xe3fa, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xc9d5);
        EXPECT(gbc.pc(), 0xe3fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3fa), 0xcb);
        EXPECT(gbc.readMem(0xe3fb), 0xf0);
        // CB F0 023B
        gbc.setState(0xcb7a, 0x9b42, 0xa830, 0x6574, 0xe7f6, 0x6cbb, 0x1, 0x0);
        gbc.writeMem(0xcb7a, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x9b42);
        EXPECT(gbc.pc(), 0xcb7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb7a), 0xcb);
        EXPECT(gbc.readMem(0xcb7b), 0xf0);
        // CB F0 023C
        gbc.setState(0xa975, 0x1453, 0xea0, 0x483a, 0x7fcd, 0x4840, 0x1, 0x0);
        gbc.writeMem(0xa975, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x1453);
        EXPECT(gbc.pc(), 0xa977);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa975), 0xcb);
        EXPECT(gbc.readMem(0xa976), 0xf0);
        // CB F0 023D
        gbc.setState(0x61fc, 0x8602, 0x9e80, 0x87c9, 0xdb3f, 0xada4, 0x1, 0x1);
        gbc.writeMem(0x61fc, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x8602);
        EXPECT(gbc.pc(), 0x61fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 023E
        gbc.setState(0xecea, 0xbb76, 0x5dd0, 0xa556, 0x5e2b, 0x8fd3, 0x1, 0x0);
        gbc.writeMem(0xecea, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xbb76);
        EXPECT(gbc.pc(), 0xecec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecea), 0xcb);
        EXPECT(gbc.readMem(0xeceb), 0xf0);
        // CB F0 023F
        gbc.setState(0x3fb6, 0x6d6e, 0x6fe0, 0x5ee0, 0xf2ee, 0x92a3, 0x1, 0x1);
        gbc.writeMem(0x3fb6, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x6d6e);
        EXPECT(gbc.pc(), 0x3fb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0240
        gbc.setState(0xd7a1, 0xe767, 0x18e0, 0xd38d, 0x72b6, 0x3870, 0x0, 0x1);
        gbc.writeMem(0xd7a1, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xe767);
        EXPECT(gbc.pc(), 0xd7a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7a1), 0xcb);
        EXPECT(gbc.readMem(0xd7a2), 0xf0);
        // CB F0 0241
        gbc.setState(0x2d38, 0x5ec1, 0xa9e0, 0x7ccb, 0x8aa3, 0xe99b, 0x0, 0x0);
        gbc.writeMem(0x2d38, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x5ec1);
        EXPECT(gbc.pc(), 0x2d3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0242
        gbc.setState(0x3ae6, 0x4c05, 0x2840, 0xb2a8, 0x76dd, 0xfce0, 0x0, 0x0);
        gbc.writeMem(0x3ae6, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x4c05);
        EXPECT(gbc.pc(), 0x3ae8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0243
        gbc.setState(0x64f, 0xc197, 0xd5f0, 0xb8d6, 0x2f01, 0x78dd, 0x0, 0x0);
        gbc.writeMem(0x64f, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xc197);
        EXPECT(gbc.pc(), 0x651);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0245
        gbc.setState(0x4aa3, 0x6e63, 0x8140, 0xb911, 0xabb4, 0x764c, 0x1, 0x0);
        gbc.writeMem(0x4aa3, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x6e63);
        EXPECT(gbc.pc(), 0x4aa5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0246
        gbc.setState(0x4b3b, 0x566c, 0x9f40, 0xec0, 0xd273, 0x835c, 0x1, 0x0);
        gbc.writeMem(0x4b3b, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x566c);
        EXPECT(gbc.pc(), 0x4b3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0247
        gbc.setState(0x7848, 0x953b, 0xbc90, 0x13a4, 0xac89, 0x33da, 0x0, 0x0);
        gbc.writeMem(0x7848, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x953b);
        EXPECT(gbc.pc(), 0x784a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0248
        gbc.setState(0x1569, 0xe7ea, 0xedf0, 0xadf1, 0x2f6d, 0xa790, 0x1, 0x0);
        gbc.writeMem(0x1569, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xe7ea);
        EXPECT(gbc.pc(), 0x156b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0249
        gbc.setState(0x4abb, 0x14d6, 0xfb40, 0x85e4, 0x869d, 0xd837, 0x1, 0x1);
        gbc.writeMem(0x4abb, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x14d6);
        EXPECT(gbc.pc(), 0x4abd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 024A
        gbc.setState(0x299a, 0xc615, 0x3340, 0x3058, 0x3282, 0xfe32, 0x1, 0x0);
        gbc.writeMem(0x299a, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xc615);
        EXPECT(gbc.pc(), 0x299c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 024B
        gbc.setState(0xedaf, 0x9ece, 0xdb0, 0x6365, 0xa9bb, 0x13af, 0x0, 0x0);
        gbc.writeMem(0xedaf, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x9ece);
        EXPECT(gbc.pc(), 0xedb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedaf), 0xcb);
        EXPECT(gbc.readMem(0xedb0), 0xf0);
        // CB F0 024C
        gbc.setState(0xbaae, 0x15d4, 0xfcd0, 0xf56a, 0x4f85, 0x249d, 0x1, 0x1);
        gbc.writeMem(0xbaae, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x15d4);
        EXPECT(gbc.pc(), 0xbab0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbaae), 0xcb);
        EXPECT(gbc.readMem(0xbaaf), 0xf0);
        // CB F0 024D
        gbc.setState(0xceec, 0x9568, 0x2bb0, 0xbeb3, 0x2130, 0x2b8f, 0x1, 0x0);
        gbc.writeMem(0xceec, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x9568);
        EXPECT(gbc.pc(), 0xceee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xceec), 0xcb);
        EXPECT(gbc.readMem(0xceed), 0xf0);
        // CB F0 024F
        gbc.setState(0xe88f, 0x4ade, 0xd50, 0x487, 0xd1db, 0x8cdf, 0x1, 0x1);
        gbc.writeMem(0xe88f, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x4ade);
        EXPECT(gbc.pc(), 0xe891);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe88f), 0xcb);
        EXPECT(gbc.readMem(0xe890), 0xf0);
        // CB F0 0250
        gbc.setState(0x144f, 0x6cda, 0xd820, 0xc483, 0xf64f, 0xb522, 0x1, 0x0);
        gbc.writeMem(0x144f, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x6cda);
        EXPECT(gbc.pc(), 0x1451);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0251
        gbc.setState(0x3f40, 0x3adc, 0xf320, 0x581a, 0x7239, 0x7256, 0x0, 0x1);
        gbc.writeMem(0x3f40, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x3adc);
        EXPECT(gbc.pc(), 0x3f42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0252
        gbc.setState(0x368c, 0x30d6, 0xfa0, 0x2ac7, 0x3e49, 0xce7, 0x1, 0x0);
        gbc.writeMem(0x368c, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x30d6);
        EXPECT(gbc.pc(), 0x368e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0253
        gbc.setState(0xacb5, 0x8ac4, 0x8550, 0x64d8, 0xc88b, 0x69c7, 0x0, 0x0);
        gbc.writeMem(0xacb5, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x8ac4);
        EXPECT(gbc.pc(), 0xacb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacb5), 0xcb);
        EXPECT(gbc.readMem(0xacb6), 0xf0);
        // CB F0 0254
        gbc.setState(0xd8c4, 0x9bab, 0x83e0, 0x4201, 0x4fd0, 0x4366, 0x0, 0x1);
        gbc.writeMem(0xd8c4, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x9bab);
        EXPECT(gbc.pc(), 0xd8c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8c4), 0xcb);
        EXPECT(gbc.readMem(0xd8c5), 0xf0);
        // CB F0 0255
        gbc.setState(0x1eb2, 0x39f3, 0x97a0, 0x573c, 0x1ea, 0x7b68, 0x1, 0x1);
        gbc.writeMem(0x1eb2, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x39f3);
        EXPECT(gbc.pc(), 0x1eb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0256
        gbc.setState(0x57c3, 0x53f, 0xf0f0, 0xc3d8, 0x910e, 0xb61e, 0x0, 0x0);
        gbc.writeMem(0x57c3, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x53f);
        EXPECT(gbc.pc(), 0x57c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0257
        gbc.setState(0xb92f, 0x99a, 0x3d70, 0x8059, 0x69eb, 0x3f16, 0x0, 0x0);
        gbc.writeMem(0xb92f, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x99a);
        EXPECT(gbc.pc(), 0xb931);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb92f), 0xcb);
        EXPECT(gbc.readMem(0xb930), 0xf0);
        // CB F0 0258
        gbc.setState(0x2e50, 0xb943, 0x9d60, 0x1bd3, 0x5f27, 0xe769, 0x1, 0x0);
        gbc.writeMem(0x2e50, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xb943);
        EXPECT(gbc.pc(), 0x2e52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0259
        gbc.setState(0x6e61, 0xb54, 0xc840, 0x9f48, 0x3647, 0x72f0, 0x0, 0x1);
        gbc.writeMem(0x6e61, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xb54);
        EXPECT(gbc.pc(), 0x6e63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 025A
        gbc.setState(0xe8e6, 0xb2aa, 0xa7e0, 0x4564, 0xd805, 0xcb60, 0x1, 0x0);
        gbc.writeMem(0xe8e6, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xb2aa);
        EXPECT(gbc.pc(), 0xe8e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8e6), 0xcb);
        EXPECT(gbc.readMem(0xe8e7), 0xf0);
        // CB F0 025B
        gbc.setState(0x727f, 0x6803, 0xa3a0, 0x90ae, 0xbfd4, 0x693c, 0x0, 0x1);
        gbc.writeMem(0x727f, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x6803);
        EXPECT(gbc.pc(), 0x7281);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 025C
        gbc.setState(0x1a1a, 0x22cf, 0x11f0, 0xb15e, 0x5af1, 0x83db, 0x0, 0x1);
        gbc.writeMem(0x1a1a, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x22cf);
        EXPECT(gbc.pc(), 0x1a1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 025D
        gbc.setState(0x2fd9, 0xc1a8, 0xd620, 0xb005, 0x6e8b, 0xd3ec, 0x0, 0x1);
        gbc.writeMem(0x2fd9, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xc1a8);
        EXPECT(gbc.pc(), 0x2fdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 025E
        gbc.setState(0xee81, 0x7032, 0xb830, 0x7288, 0xb6e8, 0xff50, 0x0, 0x1);
        gbc.writeMem(0xee81, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x7032);
        EXPECT(gbc.pc(), 0xee83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee81), 0xcb);
        EXPECT(gbc.readMem(0xee82), 0xf0);
        // CB F0 025F
        gbc.setState(0x8222, 0x84a0, 0xff60, 0x8dd9, 0x3d5f, 0xd04a, 0x1, 0x1);
        gbc.writeMem(0x8222, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x84a0);
        EXPECT(gbc.pc(), 0x8224);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8222), 0xcb);
        EXPECT(gbc.readMem(0x8223), 0xf0);
        // CB F0 0260
        gbc.setState(0x196, 0x1f21, 0xe010, 0xb12b, 0x85b6, 0x5310, 0x1, 0x0);
        gbc.writeMem(0x196, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x1f21);
        EXPECT(gbc.pc(), 0x198);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0261
        gbc.setState(0x706d, 0xd154, 0x86d0, 0x14d, 0x9d0a, 0xd1ac, 0x1, 0x0);
        gbc.writeMem(0x706d, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xd154);
        EXPECT(gbc.pc(), 0x706f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0262
        gbc.setState(0xe78d, 0x43ff, 0xa00, 0x97eb, 0xcce7, 0x4f6c, 0x0, 0x0);
        gbc.writeMem(0xe78d, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x43ff);
        EXPECT(gbc.pc(), 0xe78f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe78d), 0xcb);
        EXPECT(gbc.readMem(0xe78e), 0xf0);
        // CB F0 0264
        gbc.setState(0xb52, 0xaca1, 0x4990, 0x343b, 0x96e3, 0x6f7e, 0x0, 0x0);
        gbc.writeMem(0xb52, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xaca1);
        EXPECT(gbc.pc(), 0xb54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0265
        gbc.setState(0x2e5a, 0xd0af, 0x7830, 0xa5af, 0x2812, 0x8783, 0x1, 0x0);
        gbc.writeMem(0x2e5a, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xd0af);
        EXPECT(gbc.pc(), 0x2e5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0266
        gbc.setState(0xfd6, 0x480, 0x8080, 0xed0d, 0xdd1c, 0x6373, 0x1, 0x0);
        gbc.writeMem(0xfd6, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x480);
        EXPECT(gbc.pc(), 0xfd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0267
        gbc.setState(0x622e, 0x7195, 0x1680, 0x1f3e, 0x5764, 0x288c, 0x1, 0x1);
        gbc.writeMem(0x622e, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x7195);
        EXPECT(gbc.pc(), 0x6230);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0268
        gbc.setState(0xdd4, 0xe280, 0x7e60, 0x6095, 0xde83, 0x6f56, 0x0, 0x1);
        gbc.writeMem(0xdd4, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xe280);
        EXPECT(gbc.pc(), 0xdd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0269
        gbc.setState(0x6f82, 0x4787, 0x4450, 0x562, 0x9c6b, 0x82b6, 0x0, 0x0);
        gbc.writeMem(0x6f82, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x4787);
        EXPECT(gbc.pc(), 0x6f84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 026A
        gbc.setState(0x8219, 0x6bfb, 0x4ee0, 0x206f, 0x2fa5, 0x71fd, 0x1, 0x0);
        gbc.writeMem(0x8219, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x6bfb);
        EXPECT(gbc.pc(), 0x821b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8219), 0xcb);
        EXPECT(gbc.readMem(0x821a), 0xf0);
        // CB F0 026B
        gbc.setState(0x4fa2, 0x7538, 0xfbd0, 0xef84, 0x90a0, 0x4a31, 0x0, 0x0);
        gbc.writeMem(0x4fa2, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x7538);
        EXPECT(gbc.pc(), 0x4fa4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 026C
        gbc.setState(0xda06, 0x173, 0x5dd0, 0x5ff0, 0x2bb5, 0xb139, 0x0, 0x1);
        gbc.writeMem(0xda06, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x173);
        EXPECT(gbc.pc(), 0xda08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda06), 0xcb);
        EXPECT(gbc.readMem(0xda07), 0xf0);
        // CB F0 026D
        gbc.setState(0xecbd, 0x7ec0, 0x56f0, 0x8ff6, 0xb0c8, 0xc54c, 0x0, 0x0);
        gbc.writeMem(0xecbd, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x7ec0);
        EXPECT(gbc.pc(), 0xecbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecbd), 0xcb);
        EXPECT(gbc.readMem(0xecbe), 0xf0);
        // CB F0 026E
        gbc.setState(0x6258, 0xfcb3, 0xfff0, 0x2340, 0xd13, 0x3e55, 0x1, 0x0);
        gbc.writeMem(0x6258, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xfcb3);
        EXPECT(gbc.pc(), 0x625a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 026F
        gbc.setState(0x571f, 0xea4e, 0xc8a0, 0xf78e, 0xdb49, 0x609e, 0x0, 0x0);
        gbc.writeMem(0x571f, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xea4e);
        EXPECT(gbc.pc(), 0x5721);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0270
        gbc.setState(0x3975, 0xc392, 0xccc0, 0x2272, 0x9d45, 0xbb9b, 0x1, 0x1);
        gbc.writeMem(0x3975, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xc392);
        EXPECT(gbc.pc(), 0x3977);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0271
        gbc.setState(0x7cc9, 0xc965, 0x82b0, 0x983a, 0x90b9, 0x2afd, 0x0, 0x0);
        gbc.writeMem(0x7cc9, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xc965);
        EXPECT(gbc.pc(), 0x7ccb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0272
        gbc.setState(0x71c8, 0x48c4, 0x7b00, 0x1388, 0xfa26, 0x410, 0x0, 0x1);
        gbc.writeMem(0x71c8, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x48c4);
        EXPECT(gbc.pc(), 0x71ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0273
        gbc.setState(0xe642, 0xa967, 0xa820, 0x229e, 0xf329, 0x7fd7, 0x0, 0x1);
        gbc.writeMem(0xe642, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xa967);
        EXPECT(gbc.pc(), 0xe644);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe642), 0xcb);
        EXPECT(gbc.readMem(0xe643), 0xf0);
        // CB F0 0274
        gbc.setState(0x257, 0x9d13, 0xad40, 0x7b24, 0x3ba5, 0x426, 0x1, 0x1);
        gbc.writeMem(0x257, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x9d13);
        EXPECT(gbc.pc(), 0x259);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0275
        gbc.setState(0xa4fc, 0x6c86, 0xe560, 0xa32c, 0x7cfb, 0x5f03, 0x1, 0x1);
        gbc.writeMem(0xa4fc, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x6c86);
        EXPECT(gbc.pc(), 0xa4fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4fc), 0xcb);
        EXPECT(gbc.readMem(0xa4fd), 0xf0);
        // CB F0 0276
        gbc.setState(0x1d4f, 0x50ea, 0x1940, 0x9b7b, 0x87cf, 0xe64e, 0x1, 0x0);
        gbc.writeMem(0x1d4f, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x50ea);
        EXPECT(gbc.pc(), 0x1d51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0277
        gbc.setState(0xc8dd, 0x6ac6, 0x1ff0, 0xb13e, 0xfbbe, 0xda66, 0x1, 0x0);
        gbc.writeMem(0xc8dd, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x6ac6);
        EXPECT(gbc.pc(), 0xc8df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8dd), 0xcb);
        EXPECT(gbc.readMem(0xc8de), 0xf0);
        // CB F0 0278
        gbc.setState(0x9e06, 0xdcfe, 0x1960, 0x8457, 0xfa32, 0xd58e, 0x1, 0x0);
        gbc.writeMem(0x9e06, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xdcfe);
        EXPECT(gbc.pc(), 0x9e08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e06), 0xcb);
        EXPECT(gbc.readMem(0x9e07), 0xf0);
        // CB F0 0279
        gbc.setState(0x71bc, 0x39d8, 0xf5c0, 0xd6f7, 0xf0b8, 0xce69, 0x0, 0x1);
        gbc.writeMem(0x71bc, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x39d8);
        EXPECT(gbc.pc(), 0x71be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 027B
        gbc.setState(0x779f, 0x415f, 0x6300, 0x4cf1, 0xa03d, 0x3b13, 0x1, 0x1);
        gbc.writeMem(0x779f, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x415f);
        EXPECT(gbc.pc(), 0x77a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 027C
        gbc.setState(0x8eff, 0x44a1, 0x34f0, 0x7633, 0x19b1, 0xd41f, 0x1, 0x0);
        gbc.writeMem(0x8eff, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x44a1);
        EXPECT(gbc.pc(), 0x8f01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8eff), 0xcb);
        EXPECT(gbc.readMem(0x8f00), 0xf0);
        // CB F0 027D
        gbc.setState(0x16e5, 0x6435, 0xd270, 0x18e6, 0x7316, 0xbce2, 0x0, 0x0);
        gbc.writeMem(0x16e5, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x6435);
        EXPECT(gbc.pc(), 0x16e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 027E
        gbc.setState(0x1611, 0x2675, 0xb2e0, 0xfdea, 0xa2f9, 0xbc1a, 0x1, 0x1);
        gbc.writeMem(0x1611, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x2675);
        EXPECT(gbc.pc(), 0x1613);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 027F
        gbc.setState(0x5f1b, 0x3549, 0xf9e0, 0xab3d, 0xc735, 0xbff9, 0x0, 0x1);
        gbc.writeMem(0x5f1b, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x3549);
        EXPECT(gbc.pc(), 0x5f1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0280
        gbc.setState(0xe71e, 0xbcd, 0xbf60, 0xca2d, 0xd146, 0xeb9c, 0x1, 0x1);
        gbc.writeMem(0xe71e, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xbcd);
        EXPECT(gbc.pc(), 0xe720);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe71e), 0xcb);
        EXPECT(gbc.readMem(0xe71f), 0xf0);
        // CB F0 0281
        gbc.setState(0xe2b8, 0xea31, 0x1990, 0x4c8c, 0x217b, 0x353e, 0x1, 0x1);
        gbc.writeMem(0xe2b8, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xea31);
        EXPECT(gbc.pc(), 0xe2ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2b8), 0xcb);
        EXPECT(gbc.readMem(0xe2b9), 0xf0);
        // CB F0 0282
        gbc.setState(0xee39, 0xbd7f, 0x9d50, 0x2e1d, 0x2024, 0x9ed3, 0x0, 0x0);
        gbc.writeMem(0xee39, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xbd7f);
        EXPECT(gbc.pc(), 0xee3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee39), 0xcb);
        EXPECT(gbc.readMem(0xee3a), 0xf0);
        // CB F0 0283
        gbc.setState(0xb481, 0xb652, 0xc5a0, 0xaa85, 0xf5f5, 0xbabe, 0x0, 0x1);
        gbc.writeMem(0xb481, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xb652);
        EXPECT(gbc.pc(), 0xb483);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb481), 0xcb);
        EXPECT(gbc.readMem(0xb482), 0xf0);
        // CB F0 0284
        gbc.setState(0x91f7, 0xac5f, 0xaf90, 0xc8c9, 0xcfff, 0xbb6, 0x0, 0x0);
        gbc.writeMem(0x91f7, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xac5f);
        EXPECT(gbc.pc(), 0x91f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91f7), 0xcb);
        EXPECT(gbc.readMem(0x91f8), 0xf0);
        // CB F0 0285
        gbc.setState(0x1143, 0xf96d, 0x8280, 0x1e48, 0x20d2, 0x3ce2, 0x0, 0x0);
        gbc.writeMem(0x1143, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xf96d);
        EXPECT(gbc.pc(), 0x1145);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0286
        gbc.setState(0x588, 0xbdc6, 0xcae0, 0xc2a3, 0x1a13, 0xbd86, 0x1, 0x0);
        gbc.writeMem(0x588, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xbdc6);
        EXPECT(gbc.pc(), 0x58a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0287
        gbc.setState(0x57a0, 0xf184, 0xbb30, 0xbb7d, 0xdefa, 0x5f88, 0x1, 0x1);
        gbc.writeMem(0x57a0, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xf184);
        EXPECT(gbc.pc(), 0x57a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0288
        gbc.setState(0xe1eb, 0x9348, 0xf8c0, 0xb71a, 0x6075, 0xa7f1, 0x1, 0x1);
        gbc.writeMem(0xe1eb, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x9348);
        EXPECT(gbc.pc(), 0xe1ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1eb), 0xcb);
        EXPECT(gbc.readMem(0xe1ec), 0xf0);
        // CB F0 0289
        gbc.setState(0xdfd4, 0x2bcf, 0x48a0, 0x36e8, 0x8237, 0xf430, 0x0, 0x0);
        gbc.writeMem(0xdfd4, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x2bcf);
        EXPECT(gbc.pc(), 0xdfd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfd4), 0xcb);
        EXPECT(gbc.readMem(0xdfd5), 0xf0);
        // CB F0 028A
        gbc.setState(0x5e23, 0xb8b8, 0x3cf0, 0xb29, 0xc4ca, 0x525d, 0x1, 0x1);
        gbc.writeMem(0x5e23, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xb8b8);
        EXPECT(gbc.pc(), 0x5e25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 028B
        gbc.setState(0xc8af, 0xff25, 0x62a0, 0x384, 0x5742, 0x48de, 0x0, 0x1);
        gbc.writeMem(0xc8af, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xff25);
        EXPECT(gbc.pc(), 0xc8b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8af), 0xcb);
        EXPECT(gbc.readMem(0xc8b0), 0xf0);
        // CB F0 028C
        gbc.setState(0x2768, 0xa53d, 0x8570, 0x20f6, 0xc40a, 0xebea, 0x0, 0x1);
        gbc.writeMem(0x2768, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xa53d);
        EXPECT(gbc.pc(), 0x276a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 028D
        gbc.setState(0x9ec2, 0x93e5, 0x4c90, 0x3d59, 0x38db, 0xd669, 0x0, 0x1);
        gbc.writeMem(0x9ec2, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x93e5);
        EXPECT(gbc.pc(), 0x9ec4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ec2), 0xcb);
        EXPECT(gbc.readMem(0x9ec3), 0xf0);
        // CB F0 028E
        gbc.setState(0x4dee, 0x9fef, 0x3ed0, 0x424c, 0xc5de, 0x65d0, 0x1, 0x1);
        gbc.writeMem(0x4dee, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x9fef);
        EXPECT(gbc.pc(), 0x4df0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 028F
        gbc.setState(0xa43c, 0x520b, 0x8600, 0x381c, 0xb173, 0x3aa5, 0x1, 0x0);
        gbc.writeMem(0xa43c, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x520b);
        EXPECT(gbc.pc(), 0xa43e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa43c), 0xcb);
        EXPECT(gbc.readMem(0xa43d), 0xf0);
        // CB F0 0290
        gbc.setState(0xcd65, 0xce6d, 0x41a0, 0x3495, 0x14b5, 0xdc30, 0x1, 0x1);
        gbc.writeMem(0xcd65, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xce6d);
        EXPECT(gbc.pc(), 0xcd67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd65), 0xcb);
        EXPECT(gbc.readMem(0xcd66), 0xf0);
        // CB F0 0291
        gbc.setState(0x68e, 0xf2f9, 0xdb90, 0xcee, 0xf3f5, 0x2657, 0x0, 0x0);
        gbc.writeMem(0x68e, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xf2f9);
        EXPECT(gbc.pc(), 0x690);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0292
        gbc.setState(0xc7bd, 0x93dc, 0x3080, 0xafab, 0xc3f5, 0x851c, 0x0, 0x0);
        gbc.writeMem(0xc7bd, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x93dc);
        EXPECT(gbc.pc(), 0xc7bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7bd), 0xcb);
        EXPECT(gbc.readMem(0xc7be), 0xf0);
        // CB F0 0293
        gbc.setState(0x4db3, 0x9ec1, 0x3580, 0xa87e, 0x596d, 0x721c, 0x0, 0x1);
        gbc.writeMem(0x4db3, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x9ec1);
        EXPECT(gbc.pc(), 0x4db5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0294
        gbc.setState(0xdc6b, 0x18e1, 0x9b90, 0x78a3, 0x4d41, 0x44ad, 0x1, 0x1);
        gbc.writeMem(0xdc6b, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x18e1);
        EXPECT(gbc.pc(), 0xdc6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc6b), 0xcb);
        EXPECT(gbc.readMem(0xdc6c), 0xf0);
        // CB F0 0295
        gbc.setState(0x8221, 0x11a8, 0x7650, 0xc273, 0xfe4a, 0xf768, 0x1, 0x0);
        gbc.writeMem(0x8221, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x11a8);
        EXPECT(gbc.pc(), 0x8223);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8221), 0xcb);
        EXPECT(gbc.readMem(0x8222), 0xf0);
        // CB F0 0296
        gbc.setState(0x2c4b, 0x6838, 0x99b0, 0xea5c, 0xc973, 0x7517, 0x1, 0x1);
        gbc.writeMem(0x2c4b, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x6838);
        EXPECT(gbc.pc(), 0x2c4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0297
        gbc.setState(0x8432, 0x2ae1, 0x3100, 0xe88c, 0xac1a, 0x52ca, 0x0, 0x1);
        gbc.writeMem(0x8432, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x2ae1);
        EXPECT(gbc.pc(), 0x8434);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8432), 0xcb);
        EXPECT(gbc.readMem(0x8433), 0xf0);
        // CB F0 0298
        gbc.setState(0x66c1, 0xc814, 0xede0, 0xddd1, 0xf02, 0x7ba5, 0x1, 0x1);
        gbc.writeMem(0x66c1, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xc814);
        EXPECT(gbc.pc(), 0x66c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0299
        gbc.setState(0xeb83, 0x8d68, 0x4740, 0xb539, 0xf62e, 0xbf1a, 0x1, 0x0);
        gbc.writeMem(0xeb83, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x8d68);
        EXPECT(gbc.pc(), 0xeb85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb83), 0xcb);
        EXPECT(gbc.readMem(0xeb84), 0xf0);
        // CB F0 029A
        gbc.setState(0x39f6, 0xc73, 0x9630, 0x3807, 0x9e21, 0xe88d, 0x1, 0x0);
        gbc.writeMem(0x39f6, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xc73);
        EXPECT(gbc.pc(), 0x39f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 029B
        gbc.setState(0xa378, 0xe8c1, 0xa1f0, 0xf318, 0x6000, 0xfd31, 0x0, 0x1);
        gbc.writeMem(0xa378, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xe8c1);
        EXPECT(gbc.pc(), 0xa37a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa378), 0xcb);
        EXPECT(gbc.readMem(0xa379), 0xf0);
        // CB F0 029C
        gbc.setState(0x6ee2, 0xe504, 0x6250, 0x4e0b, 0x24ce, 0xebfb, 0x0, 0x0);
        gbc.writeMem(0x6ee2, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xe504);
        EXPECT(gbc.pc(), 0x6ee4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 029D
        gbc.setState(0x4374, 0x12ea, 0x7ba0, 0x87b4, 0xd362, 0xe74f, 0x1, 0x1);
        gbc.writeMem(0x4374, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x12ea);
        EXPECT(gbc.pc(), 0x4376);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 029E
        gbc.setState(0x9b6d, 0x77e3, 0x3790, 0x1799, 0x4a5b, 0x570a, 0x1, 0x0);
        gbc.writeMem(0x9b6d, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x77e3);
        EXPECT(gbc.pc(), 0x9b6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b6d), 0xcb);
        EXPECT(gbc.readMem(0x9b6e), 0xf0);
        // CB F0 029F
        gbc.setState(0xb8b2, 0x554b, 0x69e0, 0xce7c, 0xd4ad, 0x584a, 0x0, 0x0);
        gbc.writeMem(0xb8b2, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x554b);
        EXPECT(gbc.pc(), 0xb8b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8b2), 0xcb);
        EXPECT(gbc.readMem(0xb8b3), 0xf0);
        // CB F0 02A0
        gbc.setState(0x8c8, 0x4321, 0x5ea0, 0x48aa, 0xe4bd, 0x2ccd, 0x1, 0x1);
        gbc.writeMem(0x8c8, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x4321);
        EXPECT(gbc.pc(), 0x8ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 02A1
        gbc.setState(0x1b24, 0xa297, 0x2c30, 0x31ca, 0xbaf1, 0x6717, 0x1, 0x0);
        gbc.writeMem(0x1b24, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xa297);
        EXPECT(gbc.pc(), 0x1b26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 02A2
        gbc.setState(0x787f, 0x974f, 0xc760, 0x73e7, 0x7f44, 0xd344, 0x1, 0x0);
        gbc.writeMem(0x787f, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x974f);
        EXPECT(gbc.pc(), 0x7881);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 02A3
        gbc.setState(0x4611, 0x75c1, 0x33d0, 0xcead, 0x5528, 0xd945, 0x1, 0x0);
        gbc.writeMem(0x4611, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x75c1);
        EXPECT(gbc.pc(), 0x4613);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 02A4
        gbc.setState(0x99aa, 0x34c6, 0x1c80, 0x8bd6, 0xdb57, 0x9fc2, 0x0, 0x0);
        gbc.writeMem(0x99aa, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x34c6);
        EXPECT(gbc.pc(), 0x99ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99aa), 0xcb);
        EXPECT(gbc.readMem(0x99ab), 0xf0);
        // CB F0 02A5
        gbc.setState(0xa95d, 0x13a2, 0x3480, 0xdc11, 0xfbe7, 0x7ab6, 0x0, 0x0);
        gbc.writeMem(0xa95d, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x13a2);
        EXPECT(gbc.pc(), 0xa95f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa95d), 0xcb);
        EXPECT(gbc.readMem(0xa95e), 0xf0);
        // CB F0 02A6
        gbc.setState(0x9833, 0x9bc9, 0xa200, 0xc1c1, 0x5471, 0xa2e9, 0x0, 0x0);
        gbc.writeMem(0x9833, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x9bc9);
        EXPECT(gbc.pc(), 0x9835);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9833), 0xcb);
        EXPECT(gbc.readMem(0x9834), 0xf0);
        // CB F0 02A8
        gbc.setState(0xb4d9, 0x1c03, 0x6290, 0x3f3e, 0x6db9, 0xdfb, 0x1, 0x0);
        gbc.writeMem(0xb4d9, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x1c03);
        EXPECT(gbc.pc(), 0xb4db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4d9), 0xcb);
        EXPECT(gbc.readMem(0xb4da), 0xf0);
        // CB F0 02A9
        gbc.setState(0xbc29, 0xd446, 0x8730, 0x6411, 0x864, 0xc2bd, 0x1, 0x0);
        gbc.writeMem(0xbc29, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xd446);
        EXPECT(gbc.pc(), 0xbc2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc29), 0xcb);
        EXPECT(gbc.readMem(0xbc2a), 0xf0);
        // CB F0 02AA
        gbc.setState(0xc715, 0x843e, 0xcdd0, 0x71c1, 0xa622, 0xc91c, 0x0, 0x0);
        gbc.writeMem(0xc715, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x843e);
        EXPECT(gbc.pc(), 0xc717);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc715), 0xcb);
        EXPECT(gbc.readMem(0xc716), 0xf0);
        // CB F0 02AB
        gbc.setState(0xc2b4, 0xb12b, 0x7710, 0xfb5b, 0xfe99, 0x63e8, 0x0, 0x0);
        gbc.writeMem(0xc2b4, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xb12b);
        EXPECT(gbc.pc(), 0xc2b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2b4), 0xcb);
        EXPECT(gbc.readMem(0xc2b5), 0xf0);
        // CB F0 02AC
        gbc.setState(0x507b, 0xa64e, 0x74e0, 0xaff8, 0xd5fe, 0x9e07, 0x1, 0x0);
        gbc.writeMem(0x507b, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xa64e);
        EXPECT(gbc.pc(), 0x507d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 02AF
        gbc.setState(0x6092, 0x4108, 0xb610, 0x39bd, 0xedae, 0xd2d3, 0x0, 0x0);
        gbc.writeMem(0x6092, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x4108);
        EXPECT(gbc.pc(), 0x6094);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 02B1
        gbc.setState(0x890d, 0xc58c, 0xd0e0, 0x180e, 0x82de, 0x58, 0x1, 0x0);
        gbc.writeMem(0x890d, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xc58c);
        EXPECT(gbc.pc(), 0x890f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x890d), 0xcb);
        EXPECT(gbc.readMem(0x890e), 0xf0);
        // CB F0 02B2
        gbc.setState(0x1b6e, 0x720c, 0xc310, 0xc199, 0xe4e1, 0x93fc, 0x1, 0x1);
        gbc.writeMem(0x1b6e, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x720c);
        EXPECT(gbc.pc(), 0x1b70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 02B3
        gbc.setState(0x200b, 0xccc0, 0xb100, 0x8fbd, 0x6521, 0xa386, 0x0, 0x0);
        gbc.writeMem(0x200b, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xccc0);
        EXPECT(gbc.pc(), 0x200d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 02B4
        gbc.setState(0xab5a, 0x17b6, 0xba60, 0xe961, 0x34c, 0x5b74, 0x0, 0x0);
        gbc.writeMem(0xab5a, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x17b6);
        EXPECT(gbc.pc(), 0xab5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab5a), 0xcb);
        EXPECT(gbc.readMem(0xab5b), 0xf0);
        // CB F0 02B5
        gbc.setState(0x346c, 0x8f1d, 0xe060, 0xa034, 0x10af, 0xad60, 0x0, 0x1);
        gbc.writeMem(0x346c, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x8f1d);
        EXPECT(gbc.pc(), 0x346e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 02B6
        gbc.setState(0xc011, 0xb65d, 0x1b10, 0x6ba5, 0x6832, 0x1bab, 0x0, 0x0);
        gbc.writeMem(0xc011, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xb65d);
        EXPECT(gbc.pc(), 0xc013);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc011), 0xcb);
        EXPECT(gbc.readMem(0xc012), 0xf0);
        // CB F0 02B7
        gbc.setState(0x4ed6, 0xfbd9, 0xbb60, 0x62e2, 0x91a5, 0xe1c3, 0x1, 0x1);
        gbc.writeMem(0x4ed6, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xfbd9);
        EXPECT(gbc.pc(), 0x4ed8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 02B8
        gbc.setState(0x6045, 0xb727, 0x190, 0x6038, 0xbd64, 0x3f9c, 0x1, 0x0);
        gbc.writeMem(0x6045, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xb727);
        EXPECT(gbc.pc(), 0x6047);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 02B9
        gbc.setState(0xefb4, 0xe8fc, 0x8b50, 0xc978, 0xa4e1, 0xfcaa, 0x0, 0x1);
        gbc.writeMem(0xefb4, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xe8fc);
        EXPECT(gbc.pc(), 0xefb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefb4), 0xcb);
        EXPECT(gbc.readMem(0xefb5), 0xf0);
        // CB F0 02BA
        gbc.setState(0x546, 0x14d3, 0xa630, 0xcaca, 0x5ab8, 0x3280, 0x1, 0x0);
        gbc.writeMem(0x546, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x14d3);
        EXPECT(gbc.pc(), 0x548);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 02BB
        gbc.setState(0x96a6, 0x5a70, 0xb0c0, 0xe709, 0x211a, 0x4ea6, 0x1, 0x0);
        gbc.writeMem(0x96a6, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x5a70);
        EXPECT(gbc.pc(), 0x96a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96a6), 0xcb);
        EXPECT(gbc.readMem(0x96a7), 0xf0);
        // CB F0 02BC
        gbc.setState(0x27af, 0x9615, 0x58a0, 0x50ac, 0x10d1, 0xe645, 0x0, 0x0);
        gbc.writeMem(0x27af, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x9615);
        EXPECT(gbc.pc(), 0x27b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 02BD
        gbc.setState(0x4dac, 0xa371, 0x38b0, 0x790e, 0xcf4a, 0xd7f0, 0x0, 0x1);
        gbc.writeMem(0x4dac, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xa371);
        EXPECT(gbc.pc(), 0x4dae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 02BE
        gbc.setState(0x2490, 0xc5e9, 0x87c0, 0x7a18, 0xdcb0, 0x693d, 0x0, 0x1);
        gbc.writeMem(0x2490, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xc5e9);
        EXPECT(gbc.pc(), 0x2492);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 02BF
        gbc.setState(0xa6, 0x3c7a, 0x7450, 0xb616, 0xd0f1, 0x7f8e, 0x1, 0x1);
        gbc.writeMem(0xa6, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x3c7a);
        EXPECT(gbc.pc(), 0xa8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 02C0
        gbc.setState(0xd417, 0xb2cf, 0x88b0, 0xffb0, 0x3813, 0xf88, 0x0, 0x0);
        gbc.writeMem(0xd417, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xb2cf);
        EXPECT(gbc.pc(), 0xd419);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd417), 0xcb);
        EXPECT(gbc.readMem(0xd418), 0xf0);
        // CB F0 02C1
        gbc.setState(0x54bd, 0xa87c, 0xdcb0, 0xb2c1, 0xe40b, 0x9d7e, 0x1, 0x1);
        gbc.writeMem(0x54bd, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xa87c);
        EXPECT(gbc.pc(), 0x54bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 02C2
        gbc.setState(0x7fd0, 0xdb16, 0x2800, 0x9d67, 0x213f, 0x8c7e, 0x1, 0x1);
        gbc.writeMem(0x7fd0, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xdb16);
        EXPECT(gbc.pc(), 0x7fd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 02C3
        gbc.setState(0x124d, 0xbfd8, 0xf20, 0xe90, 0xc14a, 0xddf7, 0x1, 0x1);
        gbc.writeMem(0x124d, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xbfd8);
        EXPECT(gbc.pc(), 0x124f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 02C4
        gbc.setState(0xcb10, 0x7920, 0xd6e0, 0xcc21, 0x471f, 0x8ab4, 0x0, 0x1);
        gbc.writeMem(0xcb10, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x7920);
        EXPECT(gbc.pc(), 0xcb12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb10), 0xcb);
        EXPECT(gbc.readMem(0xcb11), 0xf0);
        // CB F0 02C5
        gbc.setState(0xe0f5, 0xa9de, 0x12f0, 0xb758, 0x7a3e, 0x9688, 0x1, 0x1);
        gbc.writeMem(0xe0f5, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xa9de);
        EXPECT(gbc.pc(), 0xe0f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0f5), 0xcb);
        EXPECT(gbc.readMem(0xe0f6), 0xf0);
        // CB F0 02C6
        gbc.setState(0x904e, 0x8087, 0xb5b0, 0x338, 0x8e93, 0xfed2, 0x1, 0x0);
        gbc.writeMem(0x904e, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x8087);
        EXPECT(gbc.pc(), 0x9050);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x904e), 0xcb);
        EXPECT(gbc.readMem(0x904f), 0xf0);
        // CB F0 02C7
        gbc.setState(0x4289, 0x1090, 0x6530, 0x87d2, 0x22ef, 0x3495, 0x1, 0x1);
        gbc.writeMem(0x4289, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x1090);
        EXPECT(gbc.pc(), 0x428b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 02C8
        gbc.setState(0x8660, 0x5109, 0x71e0, 0x5473, 0xf3c7, 0xd47c, 0x1, 0x0);
        gbc.writeMem(0x8660, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x5109);
        EXPECT(gbc.pc(), 0x8662);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8660), 0xcb);
        EXPECT(gbc.readMem(0x8661), 0xf0);
        // CB F0 02C9
        gbc.setState(0x9e4b, 0xbf67, 0xfd10, 0xb411, 0x91e6, 0xd9, 0x0, 0x0);
        gbc.writeMem(0x9e4b, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xbf67);
        EXPECT(gbc.pc(), 0x9e4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e4b), 0xcb);
        EXPECT(gbc.readMem(0x9e4c), 0xf0);
        // CB F0 02CA
        gbc.setState(0x3a9b, 0x7242, 0x8f90, 0x3f18, 0x81cb, 0x5b68, 0x1, 0x0);
        gbc.writeMem(0x3a9b, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x7242);
        EXPECT(gbc.pc(), 0x3a9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 02CB
        gbc.setState(0x5f44, 0x7704, 0xb260, 0xdeea, 0xcad9, 0xf08e, 0x1, 0x1);
        gbc.writeMem(0x5f44, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x7704);
        EXPECT(gbc.pc(), 0x5f46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 02CC
        gbc.setState(0x9b56, 0x6e, 0xce20, 0x2653, 0x12b0, 0xde85, 0x0, 0x1);
        gbc.writeMem(0x9b56, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x6e);
        EXPECT(gbc.pc(), 0x9b58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b56), 0xcb);
        EXPECT(gbc.readMem(0x9b57), 0xf0);
        // CB F0 02CD
        gbc.setState(0xc883, 0x5fb6, 0x8ca0, 0xd6dd, 0x963, 0x6b61, 0x0, 0x1);
        gbc.writeMem(0xc883, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x5fb6);
        EXPECT(gbc.pc(), 0xc885);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc883), 0xcb);
        EXPECT(gbc.readMem(0xc884), 0xf0);
        // CB F0 02CF
        gbc.setState(0xa8ca, 0x8fda, 0xac70, 0xe3cf, 0xa206, 0x8f7c, 0x0, 0x1);
        gbc.writeMem(0xa8ca, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x8fda);
        EXPECT(gbc.pc(), 0xa8cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8ca), 0xcb);
        EXPECT(gbc.readMem(0xa8cb), 0xf0);
        // CB F0 02D0
        gbc.setState(0x74a9, 0x7825, 0x3a90, 0xfd71, 0xd4fb, 0xe48f, 0x0, 0x0);
        gbc.writeMem(0x74a9, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x7825);
        EXPECT(gbc.pc(), 0x74ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 02D1
        gbc.setState(0x4a62, 0xa8c, 0x34b0, 0xd76d, 0x7b96, 0x5976, 0x0, 0x1);
        gbc.writeMem(0x4a62, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xa8c);
        EXPECT(gbc.pc(), 0x4a64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 02D2
        gbc.setState(0x3248, 0xefbf, 0xbd0, 0xa90d, 0xb7b8, 0x824a, 0x0, 0x0);
        gbc.writeMem(0x3248, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xefbf);
        EXPECT(gbc.pc(), 0x324a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 02D3
        gbc.setState(0x6c6, 0xe9c8, 0x3700, 0xa8f5, 0x36bb, 0xc87c, 0x0, 0x1);
        gbc.writeMem(0x6c6, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xe9c8);
        EXPECT(gbc.pc(), 0x6c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 02D4
        gbc.setState(0x41ab, 0x8717, 0x78c0, 0x3cef, 0x3795, 0xcaab, 0x1, 0x0);
        gbc.writeMem(0x41ab, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x8717);
        EXPECT(gbc.pc(), 0x41ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 02D5
        gbc.setState(0xa790, 0x77d6, 0x33f0, 0xf4b3, 0x21a6, 0xe892, 0x0, 0x1);
        gbc.writeMem(0xa790, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x77d6);
        EXPECT(gbc.pc(), 0xa792);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa790), 0xcb);
        EXPECT(gbc.readMem(0xa791), 0xf0);
        // CB F0 02D6
        gbc.setState(0xbc6a, 0x816, 0xb210, 0x6bdf, 0x8729, 0xedac, 0x1, 0x1);
        gbc.writeMem(0xbc6a, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x816);
        EXPECT(gbc.pc(), 0xbc6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc6a), 0xcb);
        EXPECT(gbc.readMem(0xbc6b), 0xf0);
        // CB F0 02D7
        gbc.setState(0xc981, 0x5ddd, 0x85f0, 0x924d, 0x89f3, 0xdfd, 0x1, 0x0);
        gbc.writeMem(0xc981, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x5ddd);
        EXPECT(gbc.pc(), 0xc983);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc981), 0xcb);
        EXPECT(gbc.readMem(0xc982), 0xf0);
        // CB F0 02D8
        gbc.setState(0x26ad, 0x8f7f, 0x41a0, 0x714, 0x4efe, 0x7abb, 0x0, 0x0);
        gbc.writeMem(0x26ad, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x8f7f);
        EXPECT(gbc.pc(), 0x26af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 02D9
        gbc.setState(0xe577, 0xcdbc, 0xc550, 0x3d9a, 0xd5c7, 0x2c73, 0x0, 0x1);
        gbc.writeMem(0xe577, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xcdbc);
        EXPECT(gbc.pc(), 0xe579);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe577), 0xcb);
        EXPECT(gbc.readMem(0xe578), 0xf0);
        // CB F0 02DA
        gbc.setState(0x47c, 0xadb3, 0xa3e0, 0x2586, 0x4bed, 0x5663, 0x0, 0x0);
        gbc.writeMem(0x47c, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xadb3);
        EXPECT(gbc.pc(), 0x47e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 02DB
        gbc.setState(0x7225, 0xcdd4, 0x2320, 0x9519, 0x94b5, 0x3f8, 0x0, 0x0);
        gbc.writeMem(0x7225, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xcdd4);
        EXPECT(gbc.pc(), 0x7227);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 02DC
        gbc.setState(0xb6d5, 0x2fc5, 0x3e60, 0x6dbb, 0xf7c9, 0xf0bc, 0x0, 0x1);
        gbc.writeMem(0xb6d5, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x2fc5);
        EXPECT(gbc.pc(), 0xb6d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6d5), 0xcb);
        EXPECT(gbc.readMem(0xb6d6), 0xf0);
        // CB F0 02DD
        gbc.setState(0xcca5, 0x7ad3, 0x3490, 0x71d0, 0xfefa, 0xd69, 0x1, 0x1);
        gbc.writeMem(0xcca5, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x7ad3);
        EXPECT(gbc.pc(), 0xcca7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcca5), 0xcb);
        EXPECT(gbc.readMem(0xcca6), 0xf0);
        // CB F0 02DE
        gbc.setState(0x4d96, 0xbee4, 0x4f40, 0xefff, 0xc766, 0xd589, 0x1, 0x0);
        gbc.writeMem(0x4d96, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xbee4);
        EXPECT(gbc.pc(), 0x4d98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 02DF
        gbc.setState(0x7589, 0x94c6, 0x6250, 0xf491, 0x4360, 0xc611, 0x1, 0x0);
        gbc.writeMem(0x7589, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x94c6);
        EXPECT(gbc.pc(), 0x758b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 02E0
        gbc.setState(0x9e88, 0x9184, 0x1a40, 0xd8f0, 0xbf17, 0x87af, 0x0, 0x0);
        gbc.writeMem(0x9e88, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x9184);
        EXPECT(gbc.pc(), 0x9e8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e88), 0xcb);
        EXPECT(gbc.readMem(0x9e89), 0xf0);
        // CB F0 02E1
        gbc.setState(0xcf1c, 0x5389, 0x2c70, 0x8030, 0x8e16, 0x8cc0, 0x0, 0x0);
        gbc.writeMem(0xcf1c, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x5389);
        EXPECT(gbc.pc(), 0xcf1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf1c), 0xcb);
        EXPECT(gbc.readMem(0xcf1d), 0xf0);
        // CB F0 02E2
        gbc.setState(0x1cbf, 0xcd51, 0xc60, 0xf346, 0x9d83, 0x5398, 0x1, 0x1);
        gbc.writeMem(0x1cbf, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xcd51);
        EXPECT(gbc.pc(), 0x1cc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 02E3
        gbc.setState(0x68a1, 0x34ff, 0x4840, 0x1ba2, 0x9324, 0xa1f3, 0x1, 0x0);
        gbc.writeMem(0x68a1, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x34ff);
        EXPECT(gbc.pc(), 0x68a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 02E4
        gbc.setState(0x2e69, 0x1fbc, 0xfca0, 0x1181, 0x5024, 0x581c, 0x1, 0x0);
        gbc.writeMem(0x2e69, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x1fbc);
        EXPECT(gbc.pc(), 0x2e6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 02E5
        gbc.setState(0x1620, 0xc398, 0xc460, 0xecaf, 0x36d5, 0xea77, 0x1, 0x1);
        gbc.writeMem(0x1620, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xc398);
        EXPECT(gbc.pc(), 0x1622);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 02E6
        gbc.setState(0xc793, 0x4507, 0x8fc0, 0x9762, 0xca84, 0xcb86, 0x0, 0x1);
        gbc.writeMem(0xc793, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x4507);
        EXPECT(gbc.pc(), 0xc795);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc793), 0xcb);
        EXPECT(gbc.readMem(0xc794), 0xf0);
        // CB F0 02E7
        gbc.setState(0x29d8, 0xa16e, 0x1650, 0x18bd, 0x1635, 0xc0d2, 0x1, 0x1);
        gbc.writeMem(0x29d8, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xa16e);
        EXPECT(gbc.pc(), 0x29da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 02E8
        gbc.setState(0x2266, 0xe528, 0xc6a0, 0x66ee, 0x1d05, 0xf7d8, 0x1, 0x0);
        gbc.writeMem(0x2266, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xe528);
        EXPECT(gbc.pc(), 0x2268);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 02E9
        gbc.setState(0x8c0e, 0x6067, 0x8900, 0xed30, 0x5dce, 0x914d, 0x1, 0x0);
        gbc.writeMem(0x8c0e, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x6067);
        EXPECT(gbc.pc(), 0x8c10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c0e), 0xcb);
        EXPECT(gbc.readMem(0x8c0f), 0xf0);
        // CB F0 02EA
        gbc.setState(0x64c5, 0x934, 0xbbd0, 0x84ac, 0x19d0, 0xbb54, 0x1, 0x1);
        gbc.writeMem(0x64c5, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x934);
        EXPECT(gbc.pc(), 0x64c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 02EB
        gbc.setState(0xb2de, 0x74d5, 0xe310, 0x70f6, 0xe1d1, 0xaa1a, 0x0, 0x1);
        gbc.writeMem(0xb2de, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x74d5);
        EXPECT(gbc.pc(), 0xb2e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2de), 0xcb);
        EXPECT(gbc.readMem(0xb2df), 0xf0);
        // CB F0 02EC
        gbc.setState(0x75b5, 0x5ad2, 0xff40, 0xca1a, 0xc10e, 0xc0f1, 0x1, 0x1);
        gbc.writeMem(0x75b5, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x5ad2);
        EXPECT(gbc.pc(), 0x75b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 02ED
        gbc.setState(0x13c7, 0x24b3, 0x3d80, 0xfddf, 0xacc8, 0x8286, 0x0, 0x1);
        gbc.writeMem(0x13c7, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x24b3);
        EXPECT(gbc.pc(), 0x13c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 02EE
        gbc.setState(0x20dc, 0xdda4, 0xa390, 0x4c8, 0x5ce, 0x3772, 0x0, 0x1);
        gbc.writeMem(0x20dc, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xdda4);
        EXPECT(gbc.pc(), 0x20de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 02F0
        gbc.setState(0xa4a2, 0xee66, 0xf770, 0xff99, 0x4ca8, 0x3fbd, 0x0, 0x1);
        gbc.writeMem(0xa4a2, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xee66);
        EXPECT(gbc.pc(), 0xa4a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4a2), 0xcb);
        EXPECT(gbc.readMem(0xa4a3), 0xf0);
        // CB F0 02F1
        gbc.setState(0xffc, 0x7a74, 0x8b40, 0x9a0e, 0xb269, 0x5a5, 0x0, 0x0);
        gbc.writeMem(0xffc, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x7a74);
        EXPECT(gbc.pc(), 0xffe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 02F2
        gbc.setState(0xc1ac, 0x2179, 0xa710, 0x7b5c, 0xc17f, 0x96c4, 0x0, 0x0);
        gbc.writeMem(0xc1ac, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x2179);
        EXPECT(gbc.pc(), 0xc1ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1ac), 0xcb);
        EXPECT(gbc.readMem(0xc1ad), 0xf0);
        // CB F0 02F3
        gbc.setState(0xc079, 0x2247, 0xbfc0, 0x4296, 0x3b68, 0x4f9b, 0x1, 0x0);
        gbc.writeMem(0xc079, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x2247);
        EXPECT(gbc.pc(), 0xc07b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc079), 0xcb);
        EXPECT(gbc.readMem(0xc07a), 0xf0);
        // CB F0 02F4
        gbc.setState(0x480b, 0xe870, 0x3070, 0x6ad3, 0xdf40, 0x907e, 0x1, 0x0);
        gbc.writeMem(0x480b, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xe870);
        EXPECT(gbc.pc(), 0x480d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 02F5
        gbc.setState(0x7be0, 0xdc2c, 0xb320, 0xd7b5, 0xc794, 0xb4b1, 0x0, 0x0);
        gbc.writeMem(0x7be0, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xdc2c);
        EXPECT(gbc.pc(), 0x7be2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 02F6
        gbc.setState(0x6aad, 0xe75d, 0x3540, 0x1883, 0x5dfa, 0x81a9, 0x1, 0x1);
        gbc.writeMem(0x6aad, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xe75d);
        EXPECT(gbc.pc(), 0x6aaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 02F7
        gbc.setState(0x15dc, 0x4fdf, 0xa7e0, 0xb9d0, 0x5d37, 0x966, 0x0, 0x1);
        gbc.writeMem(0x15dc, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x4fdf);
        EXPECT(gbc.pc(), 0x15de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 02F8
        gbc.setState(0xca1e, 0x5a38, 0xc3f0, 0x41b4, 0xe977, 0xe48e, 0x0, 0x0);
        gbc.writeMem(0xca1e, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x5a38);
        EXPECT(gbc.pc(), 0xca20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca1e), 0xcb);
        EXPECT(gbc.readMem(0xca1f), 0xf0);
        // CB F0 02F9
        gbc.setState(0xe7da, 0x8623, 0xbea0, 0x5609, 0xb15f, 0xf213, 0x0, 0x1);
        gbc.writeMem(0xe7da, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x8623);
        EXPECT(gbc.pc(), 0xe7dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7da), 0xcb);
        EXPECT(gbc.readMem(0xe7db), 0xf0);
        // CB F0 02FA
        gbc.setState(0xbb3d, 0xc4b7, 0x4600, 0x9d93, 0x155d, 0x1857, 0x1, 0x0);
        gbc.writeMem(0xbb3d, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xc4b7);
        EXPECT(gbc.pc(), 0xbb3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb3d), 0xcb);
        EXPECT(gbc.readMem(0xbb3e), 0xf0);
        // CB F0 02FB
        gbc.setState(0x9f95, 0xc7b7, 0xc100, 0x399b, 0x4ab5, 0x71a1, 0x1, 0x1);
        gbc.writeMem(0x9f95, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xc7b7);
        EXPECT(gbc.pc(), 0x9f97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f95), 0xcb);
        EXPECT(gbc.readMem(0x9f96), 0xf0);
        // CB F0 02FC
        gbc.setState(0xb9ac, 0xdbee, 0xa290, 0x4831, 0x6589, 0x45fe, 0x0, 0x1);
        gbc.writeMem(0xb9ac, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xdbee);
        EXPECT(gbc.pc(), 0xb9ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9ac), 0xcb);
        EXPECT(gbc.readMem(0xb9ad), 0xf0);
        // CB F0 02FD
        gbc.setState(0xbf3a, 0x64c1, 0x660, 0x8eba, 0x3707, 0xc848, 0x0, 0x1);
        gbc.writeMem(0xbf3a, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x64c1);
        EXPECT(gbc.pc(), 0xbf3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf3a), 0xcb);
        EXPECT(gbc.readMem(0xbf3b), 0xf0);
        // CB F0 02FE
        gbc.setState(0x5876, 0xc35d, 0x9510, 0xcf10, 0x88e9, 0xea, 0x1, 0x0);
        gbc.writeMem(0x5876, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xc35d);
        EXPECT(gbc.pc(), 0x5878);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 02FF
        gbc.setState(0x2802, 0x5d15, 0x40f0, 0xa6ce, 0xae1f, 0xf849, 0x0, 0x1);
        gbc.writeMem(0x2802, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x5d15);
        EXPECT(gbc.pc(), 0x2804);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0300
        gbc.setState(0x1334, 0x1d2a, 0x4b90, 0xf8c2, 0x4426, 0x1f12, 0x1, 0x0);
        gbc.writeMem(0x1334, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x1d2a);
        EXPECT(gbc.pc(), 0x1336);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0301
        gbc.setState(0x5456, 0x1805, 0xc490, 0x622f, 0xc90b, 0xde11, 0x1, 0x1);
        gbc.writeMem(0x5456, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x1805);
        EXPECT(gbc.pc(), 0x5458);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0302
        gbc.setState(0x929a, 0xef2, 0x52c0, 0x261a, 0x54c0, 0x76f1, 0x0, 0x1);
        gbc.writeMem(0x929a, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xef2);
        EXPECT(gbc.pc(), 0x929c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x929a), 0xcb);
        EXPECT(gbc.readMem(0x929b), 0xf0);
        // CB F0 0303
        gbc.setState(0x173c, 0x9a8d, 0x8ce0, 0x810f, 0x8d3d, 0x86c9, 0x0, 0x0);
        gbc.writeMem(0x173c, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x9a8d);
        EXPECT(gbc.pc(), 0x173e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0304
        gbc.setState(0xed2e, 0x520, 0x2890, 0xc799, 0x8c65, 0x4dd6, 0x0, 0x1);
        gbc.writeMem(0xed2e, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x520);
        EXPECT(gbc.pc(), 0xed30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed2e), 0xcb);
        EXPECT(gbc.readMem(0xed2f), 0xf0);
        // CB F0 0305
        gbc.setState(0xa5f2, 0xbf93, 0x6e10, 0x8a3, 0xd336, 0x5cab, 0x0, 0x1);
        gbc.writeMem(0xa5f2, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xbf93);
        EXPECT(gbc.pc(), 0xa5f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5f2), 0xcb);
        EXPECT(gbc.readMem(0xa5f3), 0xf0);
        // CB F0 0306
        gbc.setState(0x5865, 0xc4f0, 0xe2b0, 0x815, 0x9803, 0x8581, 0x1, 0x1);
        gbc.writeMem(0x5865, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xc4f0);
        EXPECT(gbc.pc(), 0x5867);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0307
        gbc.setState(0x5b4a, 0xccce, 0x8160, 0xe48b, 0xe070, 0xa9cf, 0x0, 0x0);
        gbc.writeMem(0x5b4a, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xccce);
        EXPECT(gbc.pc(), 0x5b4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0308
        gbc.setState(0xc92c, 0x3b3, 0x7490, 0xf9d0, 0x1ce8, 0x359b, 0x1, 0x0);
        gbc.writeMem(0xc92c, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x3b3);
        EXPECT(gbc.pc(), 0xc92e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc92c), 0xcb);
        EXPECT(gbc.readMem(0xc92d), 0xf0);
        // CB F0 0309
        gbc.setState(0xe454, 0xe5dd, 0x6780, 0x87aa, 0x2736, 0xba59, 0x0, 0x1);
        gbc.writeMem(0xe454, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xe5dd);
        EXPECT(gbc.pc(), 0xe456);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe454), 0xcb);
        EXPECT(gbc.readMem(0xe455), 0xf0);
        // CB F0 030A
        gbc.setState(0xc498, 0xe26e, 0x1c60, 0x3b18, 0x3184, 0x9dbc, 0x1, 0x1);
        gbc.writeMem(0xc498, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xe26e);
        EXPECT(gbc.pc(), 0xc49a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc498), 0xcb);
        EXPECT(gbc.readMem(0xc499), 0xf0);
        // CB F0 030B
        gbc.setState(0x2d51, 0x2f57, 0xf6c0, 0xb017, 0xea65, 0x7155, 0x1, 0x1);
        gbc.writeMem(0x2d51, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x2f57);
        EXPECT(gbc.pc(), 0x2d53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 030C
        gbc.setState(0x9ae1, 0x2406, 0xc950, 0x41f9, 0x37f3, 0x507b, 0x1, 0x0);
        gbc.writeMem(0x9ae1, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x2406);
        EXPECT(gbc.pc(), 0x9ae3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ae1), 0xcb);
        EXPECT(gbc.readMem(0x9ae2), 0xf0);
        // CB F0 030D
        gbc.setState(0xd902, 0x64b, 0x9830, 0xfd99, 0x8f54, 0xb744, 0x1, 0x1);
        gbc.writeMem(0xd902, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x64b);
        EXPECT(gbc.pc(), 0xd904);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd902), 0xcb);
        EXPECT(gbc.readMem(0xd903), 0xf0);
        // CB F0 030E
        gbc.setState(0xc3e3, 0x89e, 0x9890, 0xe181, 0xc25, 0x35f0, 0x0, 0x1);
        gbc.writeMem(0xc3e3, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x89e);
        EXPECT(gbc.pc(), 0xc3e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3e3), 0xcb);
        EXPECT(gbc.readMem(0xc3e4), 0xf0);
        // CB F0 030F
        gbc.setState(0xef67, 0xd5e3, 0xf980, 0x57f0, 0x98, 0x8c82, 0x1, 0x1);
        gbc.writeMem(0xef67, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xd5e3);
        EXPECT(gbc.pc(), 0xef69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef67), 0xcb);
        EXPECT(gbc.readMem(0xef68), 0xf0);
        // CB F0 0311
        gbc.setState(0x301c, 0xe6ea, 0xe2e0, 0x5d84, 0x7a2, 0x2e60, 0x1, 0x1);
        gbc.writeMem(0x301c, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xe6ea);
        EXPECT(gbc.pc(), 0x301e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0312
        gbc.setState(0xa89, 0xfeed, 0x7ce0, 0xfce, 0x86f, 0x721, 0x1, 0x0);
        gbc.writeMem(0xa89, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xfeed);
        EXPECT(gbc.pc(), 0xa8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0313
        gbc.setState(0x529f, 0x8dc7, 0xbcd0, 0x5262, 0xda29, 0x2919, 0x0, 0x1);
        gbc.writeMem(0x529f, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x8dc7);
        EXPECT(gbc.pc(), 0x52a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0314
        gbc.setState(0x279d, 0xbd16, 0x5e00, 0xe437, 0xc701, 0xc1d5, 0x1, 0x0);
        gbc.writeMem(0x279d, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xbd16);
        EXPECT(gbc.pc(), 0x279f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0315
        gbc.setState(0xede0, 0xbb54, 0xe810, 0x9e60, 0xbe39, 0xa1c1, 0x1, 0x0);
        gbc.writeMem(0xede0, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xbb54);
        EXPECT(gbc.pc(), 0xede2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xede0), 0xcb);
        EXPECT(gbc.readMem(0xede1), 0xf0);
        // CB F0 0316
        gbc.setState(0xc3a, 0x9149, 0x200, 0xd2d7, 0x182, 0x57e1, 0x1, 0x0);
        gbc.writeMem(0xc3a, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x9149);
        EXPECT(gbc.pc(), 0xc3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0317
        gbc.setState(0xe282, 0x2138, 0x3f50, 0x168d, 0xa8d6, 0xfcab, 0x0, 0x0);
        gbc.writeMem(0xe282, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x2138);
        EXPECT(gbc.pc(), 0xe284);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe282), 0xcb);
        EXPECT(gbc.readMem(0xe283), 0xf0);
        // CB F0 0318
        gbc.setState(0xbde8, 0x3de, 0xaad0, 0x5c90, 0xca7a, 0x2f57, 0x0, 0x0);
        gbc.writeMem(0xbde8, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x3de);
        EXPECT(gbc.pc(), 0xbdea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbde8), 0xcb);
        EXPECT(gbc.readMem(0xbde9), 0xf0);
        // CB F0 0319
        gbc.setState(0x29b, 0x2585, 0x5790, 0x4f0, 0xd0b2, 0xbb4d, 0x1, 0x0);
        gbc.writeMem(0x29b, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x2585);
        EXPECT(gbc.pc(), 0x29d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 031A
        gbc.setState(0x147b, 0xba65, 0x5b0, 0xc830, 0x51c2, 0x2a7e, 0x0, 0x0);
        gbc.writeMem(0x147b, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xba65);
        EXPECT(gbc.pc(), 0x147d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 031B
        gbc.setState(0x549, 0x995c, 0x9870, 0x20da, 0x522a, 0x88a4, 0x1, 0x0);
        gbc.writeMem(0x549, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x995c);
        EXPECT(gbc.pc(), 0x54b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 031C
        gbc.setState(0xa6ab, 0x58b8, 0x5b40, 0xe748, 0xe95c, 0x2ac, 0x0, 0x0);
        gbc.writeMem(0xa6ab, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x58b8);
        EXPECT(gbc.pc(), 0xa6ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6ab), 0xcb);
        EXPECT(gbc.readMem(0xa6ac), 0xf0);
        // CB F0 031D
        gbc.setState(0x7be4, 0x4e9c, 0xd580, 0x4e04, 0x3679, 0x65d6, 0x0, 0x1);
        gbc.writeMem(0x7be4, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x4e9c);
        EXPECT(gbc.pc(), 0x7be6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 031E
        gbc.setState(0xb8f4, 0xc675, 0x69f0, 0x701e, 0xb848, 0xe244, 0x1, 0x0);
        gbc.writeMem(0xb8f4, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xc675);
        EXPECT(gbc.pc(), 0xb8f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8f4), 0xcb);
        EXPECT(gbc.readMem(0xb8f5), 0xf0);
        // CB F0 031F
        gbc.setState(0x4aa4, 0xa9d6, 0x11e0, 0x56d4, 0xd395, 0xea49, 0x0, 0x1);
        gbc.writeMem(0x4aa4, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xa9d6);
        EXPECT(gbc.pc(), 0x4aa6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0320
        gbc.setState(0x4b9a, 0x439b, 0xb00, 0x451, 0x15e9, 0x23cd, 0x0, 0x1);
        gbc.writeMem(0x4b9a, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x439b);
        EXPECT(gbc.pc(), 0x4b9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0321
        gbc.setState(0xa428, 0xd85e, 0x2620, 0x92f, 0xdf6c, 0x4dd7, 0x1, 0x0);
        gbc.writeMem(0xa428, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xd85e);
        EXPECT(gbc.pc(), 0xa42a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa428), 0xcb);
        EXPECT(gbc.readMem(0xa429), 0xf0);
        // CB F0 0322
        gbc.setState(0x7782, 0x3cbd, 0x43d0, 0xdbb6, 0xc08d, 0xc913, 0x0, 0x1);
        gbc.writeMem(0x7782, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x3cbd);
        EXPECT(gbc.pc(), 0x7784);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0323
        gbc.setState(0xc80c, 0xfc06, 0x430, 0x8b03, 0xf6c7, 0xcda0, 0x0, 0x1);
        gbc.writeMem(0xc80c, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xfc06);
        EXPECT(gbc.pc(), 0xc80e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc80c), 0xcb);
        EXPECT(gbc.readMem(0xc80d), 0xf0);
        // CB F0 0324
        gbc.setState(0x77f2, 0x93b, 0xd330, 0xac5d, 0xcdf, 0xc4a8, 0x0, 0x0);
        gbc.writeMem(0x77f2, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x93b);
        EXPECT(gbc.pc(), 0x77f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0325
        gbc.setState(0x4453, 0xab75, 0x1d50, 0xf9a, 0x1585, 0xf699, 0x1, 0x0);
        gbc.writeMem(0x4453, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xab75);
        EXPECT(gbc.pc(), 0x4455);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0326
        gbc.setState(0x7c52, 0xf413, 0x5f00, 0x8a4f, 0x3672, 0x63c8, 0x0, 0x1);
        gbc.writeMem(0x7c52, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xf413);
        EXPECT(gbc.pc(), 0x7c54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0327
        gbc.setState(0xd27e, 0x2e6b, 0x6860, 0x102b, 0x9307, 0x7269, 0x1, 0x0);
        gbc.writeMem(0xd27e, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x2e6b);
        EXPECT(gbc.pc(), 0xd280);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd27e), 0xcb);
        EXPECT(gbc.readMem(0xd27f), 0xf0);
        // CB F0 0328
        gbc.setState(0xa208, 0x6e91, 0xedb0, 0x4109, 0xef01, 0x89a9, 0x1, 0x0);
        gbc.writeMem(0xa208, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x6e91);
        EXPECT(gbc.pc(), 0xa20a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa208), 0xcb);
        EXPECT(gbc.readMem(0xa209), 0xf0);
        // CB F0 0329
        gbc.setState(0x7f2c, 0xcf3d, 0xaee0, 0xeb0, 0x330e, 0x7c11, 0x1, 0x1);
        gbc.writeMem(0x7f2c, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xcf3d);
        EXPECT(gbc.pc(), 0x7f2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 032A
        gbc.setState(0x8ecb, 0x3a2f, 0x18d0, 0x4e5c, 0xce31, 0xcbcd, 0x1, 0x0);
        gbc.writeMem(0x8ecb, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x3a2f);
        EXPECT(gbc.pc(), 0x8ecd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ecb), 0xcb);
        EXPECT(gbc.readMem(0x8ecc), 0xf0);
        // CB F0 032B
        gbc.setState(0xa5ce, 0xde1f, 0x74c0, 0x4e31, 0x3a8e, 0x7e45, 0x1, 0x0);
        gbc.writeMem(0xa5ce, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xde1f);
        EXPECT(gbc.pc(), 0xa5d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5ce), 0xcb);
        EXPECT(gbc.readMem(0xa5cf), 0xf0);
        // CB F0 032C
        gbc.setState(0xe8d0, 0x3813, 0x9d70, 0xed25, 0x4e0f, 0x755d, 0x1, 0x1);
        gbc.writeMem(0xe8d0, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x3813);
        EXPECT(gbc.pc(), 0xe8d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8d0), 0xcb);
        EXPECT(gbc.readMem(0xe8d1), 0xf0);
        // CB F0 032D
        gbc.setState(0x127e, 0xb594, 0xbb20, 0xf22c, 0x8ab, 0xcee4, 0x0, 0x0);
        gbc.writeMem(0x127e, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xb594);
        EXPECT(gbc.pc(), 0x1280);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 032E
        gbc.setState(0xcffa, 0x3619, 0xf5b0, 0xb745, 0xe43c, 0xf6b2, 0x1, 0x0);
        gbc.writeMem(0xcffa, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x3619);
        EXPECT(gbc.pc(), 0xcffc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcffa), 0xcb);
        EXPECT(gbc.readMem(0xcffb), 0xf0);
        // CB F0 032F
        gbc.setState(0xa688, 0x7080, 0x4f00, 0x994f, 0x44f3, 0x7ccb, 0x1, 0x1);
        gbc.writeMem(0xa688, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x7080);
        EXPECT(gbc.pc(), 0xa68a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa688), 0xcb);
        EXPECT(gbc.readMem(0xa689), 0xf0);
        // CB F0 0330
        gbc.setState(0xd549, 0x49a2, 0xd2d0, 0x1a16, 0xd9e7, 0xbeb4, 0x1, 0x1);
        gbc.writeMem(0xd549, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x49a2);
        EXPECT(gbc.pc(), 0xd54b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd549), 0xcb);
        EXPECT(gbc.readMem(0xd54a), 0xf0);
        // CB F0 0331
        gbc.setState(0xca5a, 0xe5cb, 0x2ff0, 0x9a5c, 0x488b, 0x7d68, 0x0, 0x0);
        gbc.writeMem(0xca5a, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xe5cb);
        EXPECT(gbc.pc(), 0xca5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca5a), 0xcb);
        EXPECT(gbc.readMem(0xca5b), 0xf0);
        // CB F0 0332
        gbc.setState(0xe207, 0x10fd, 0xe350, 0x8ad7, 0xedee, 0x20b5, 0x1, 0x1);
        gbc.writeMem(0xe207, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x10fd);
        EXPECT(gbc.pc(), 0xe209);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe207), 0xcb);
        EXPECT(gbc.readMem(0xe208), 0xf0);
        // CB F0 0333
        gbc.setState(0x9fa4, 0xe46c, 0x4cc0, 0xeb10, 0x5f9d, 0xf054, 0x0, 0x0);
        gbc.writeMem(0x9fa4, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xe46c);
        EXPECT(gbc.pc(), 0x9fa6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fa4), 0xcb);
        EXPECT(gbc.readMem(0x9fa5), 0xf0);
        // CB F0 0334
        gbc.setState(0x3047, 0x321, 0xc110, 0xe948, 0x8063, 0xee85, 0x0, 0x0);
        gbc.writeMem(0x3047, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x321);
        EXPECT(gbc.pc(), 0x3049);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0335
        gbc.setState(0x7dc2, 0xc618, 0x6d20, 0x8578, 0x8534, 0x6df, 0x1, 0x1);
        gbc.writeMem(0x7dc2, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xc618);
        EXPECT(gbc.pc(), 0x7dc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0336
        gbc.setState(0x60c4, 0x2661, 0x7460, 0xa373, 0x1f0a, 0x7b15, 0x1, 0x1);
        gbc.writeMem(0x60c4, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x2661);
        EXPECT(gbc.pc(), 0x60c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0337
        gbc.setState(0xbeb4, 0x46cb, 0xc210, 0x47c7, 0x1d2b, 0x9387, 0x1, 0x0);
        gbc.writeMem(0xbeb4, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x46cb);
        EXPECT(gbc.pc(), 0xbeb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbeb4), 0xcb);
        EXPECT(gbc.readMem(0xbeb5), 0xf0);
        // CB F0 0338
        gbc.setState(0xc394, 0x521a, 0xf3d0, 0x9e2, 0xa150, 0x6274, 0x0, 0x0);
        gbc.writeMem(0xc394, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x521a);
        EXPECT(gbc.pc(), 0xc396);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc394), 0xcb);
        EXPECT(gbc.readMem(0xc395), 0xf0);
        // CB F0 0339
        gbc.setState(0x3059, 0x57a3, 0xe650, 0x15dc, 0xf1c1, 0xfd8b, 0x1, 0x0);
        gbc.writeMem(0x3059, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x57a3);
        EXPECT(gbc.pc(), 0x305b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 033A
        gbc.setState(0xa0bf, 0x9e5f, 0x3c90, 0x5e64, 0x3337, 0xb70, 0x1, 0x1);
        gbc.writeMem(0xa0bf, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x9e5f);
        EXPECT(gbc.pc(), 0xa0c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0bf), 0xcb);
        EXPECT(gbc.readMem(0xa0c0), 0xf0);
        // CB F0 033B
        gbc.setState(0x128f, 0x13ab, 0xc9f0, 0x6d10, 0xd031, 0xd44c, 0x1, 0x0);
        gbc.writeMem(0x128f, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x13ab);
        EXPECT(gbc.pc(), 0x1291);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 033C
        gbc.setState(0x9171, 0x7e54, 0xf440, 0xf139, 0x2c51, 0xa3b2, 0x0, 0x1);
        gbc.writeMem(0x9171, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x7e54);
        EXPECT(gbc.pc(), 0x9173);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9171), 0xcb);
        EXPECT(gbc.readMem(0x9172), 0xf0);
        // CB F0 033D
        gbc.setState(0x7bca, 0xe503, 0x6c30, 0x539a, 0x3201, 0x527b, 0x0, 0x0);
        gbc.writeMem(0x7bca, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xe503);
        EXPECT(gbc.pc(), 0x7bcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 033E
        gbc.setState(0x83f0, 0x9d7d, 0x5d00, 0xb2b3, 0xd357, 0x3e48, 0x0, 0x0);
        gbc.writeMem(0x83f0, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x9d7d);
        EXPECT(gbc.pc(), 0x83f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83f0), 0xcb);
        EXPECT(gbc.readMem(0x83f1), 0xf0);
        // CB F0 033F
        gbc.setState(0x12b1, 0x1e77, 0x1e70, 0x55b4, 0x52c6, 0x7b50, 0x1, 0x0);
        gbc.writeMem(0x12b1, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x1e77);
        EXPECT(gbc.pc(), 0x12b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0340
        gbc.setState(0x7f8c, 0x5347, 0xb180, 0x1061, 0xb79e, 0x729b, 0x1, 0x1);
        gbc.writeMem(0x7f8c, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x5347);
        EXPECT(gbc.pc(), 0x7f8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0341
        gbc.setState(0x36d3, 0xcdd4, 0x7d30, 0xcb51, 0xcb19, 0xcd1e, 0x0, 0x1);
        gbc.writeMem(0x36d3, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xcdd4);
        EXPECT(gbc.pc(), 0x36d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0342
        gbc.setState(0xd29c, 0xaab, 0x5560, 0x5b89, 0xf058, 0x96fb, 0x1, 0x0);
        gbc.writeMem(0xd29c, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xaab);
        EXPECT(gbc.pc(), 0xd29e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd29c), 0xcb);
        EXPECT(gbc.readMem(0xd29d), 0xf0);
        // CB F0 0343
        gbc.setState(0x62c4, 0xc4a2, 0x4cd0, 0xcf2d, 0xce31, 0xfea2, 0x1, 0x1);
        gbc.writeMem(0x62c4, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xc4a2);
        EXPECT(gbc.pc(), 0x62c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0344
        gbc.setState(0x90a7, 0x5b32, 0x2350, 0xb4f, 0xc310, 0x5918, 0x1, 0x0);
        gbc.writeMem(0x90a7, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x5b32);
        EXPECT(gbc.pc(), 0x90a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90a7), 0xcb);
        EXPECT(gbc.readMem(0x90a8), 0xf0);
        // CB F0 0345
        gbc.setState(0x95b, 0xb43f, 0x1e20, 0x8f2a, 0xd7fd, 0xc4cc, 0x0, 0x1);
        gbc.writeMem(0x95b, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xb43f);
        EXPECT(gbc.pc(), 0x95d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0346
        gbc.setState(0x9765, 0xcff3, 0xee60, 0x85cb, 0x2f72, 0x853, 0x1, 0x1);
        gbc.writeMem(0x9765, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xcff3);
        EXPECT(gbc.pc(), 0x9767);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9765), 0xcb);
        EXPECT(gbc.readMem(0x9766), 0xf0);
        // CB F0 0347
        gbc.setState(0x9fd1, 0x286a, 0x90e0, 0x30f7, 0xb637, 0x21e2, 0x1, 0x0);
        gbc.writeMem(0x9fd1, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x286a);
        EXPECT(gbc.pc(), 0x9fd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fd1), 0xcb);
        EXPECT(gbc.readMem(0x9fd2), 0xf0);
        // CB F0 0348
        gbc.setState(0x14aa, 0xb69d, 0x2170, 0xf714, 0x2bd4, 0x955, 0x0, 0x0);
        gbc.writeMem(0x14aa, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xb69d);
        EXPECT(gbc.pc(), 0x14ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0349
        gbc.setState(0x8e11, 0xe706, 0x92b0, 0x8fc3, 0x26cb, 0xb178, 0x1, 0x0);
        gbc.writeMem(0x8e11, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xe706);
        EXPECT(gbc.pc(), 0x8e13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e11), 0xcb);
        EXPECT(gbc.readMem(0x8e12), 0xf0);
        // CB F0 034A
        gbc.setState(0x5228, 0x35e0, 0x9470, 0x2354, 0x3cf9, 0x2e2e, 0x1, 0x1);
        gbc.writeMem(0x5228, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x35e0);
        EXPECT(gbc.pc(), 0x522a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 034B
        gbc.setState(0x442a, 0x1c3a, 0x480, 0x1e66, 0xb84c, 0x1c52, 0x1, 0x1);
        gbc.writeMem(0x442a, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x1c3a);
        EXPECT(gbc.pc(), 0x442c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 034C
        gbc.setState(0xbd5f, 0x4156, 0xedb0, 0x6ab4, 0x5fcf, 0x65ea, 0x1, 0x0);
        gbc.writeMem(0xbd5f, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x4156);
        EXPECT(gbc.pc(), 0xbd61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd5f), 0xcb);
        EXPECT(gbc.readMem(0xbd60), 0xf0);
        // CB F0 034D
        gbc.setState(0xc8da, 0xaf60, 0x9300, 0x6275, 0xfc30, 0x47d4, 0x0, 0x0);
        gbc.writeMem(0xc8da, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xaf60);
        EXPECT(gbc.pc(), 0xc8dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8da), 0xcb);
        EXPECT(gbc.readMem(0xc8db), 0xf0);
        // CB F0 034E
        gbc.setState(0x8059, 0xb9c2, 0x8ea0, 0x6619, 0x7894, 0x12bd, 0x0, 0x0);
        gbc.writeMem(0x8059, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xb9c2);
        EXPECT(gbc.pc(), 0x805b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8059), 0xcb);
        EXPECT(gbc.readMem(0x805a), 0xf0);
        // CB F0 034F
        gbc.setState(0xd5b8, 0x466, 0x2260, 0x6e46, 0x7bd3, 0x4939, 0x0, 0x0);
        gbc.writeMem(0xd5b8, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x466);
        EXPECT(gbc.pc(), 0xd5ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5b8), 0xcb);
        EXPECT(gbc.readMem(0xd5b9), 0xf0);
        // CB F0 0350
        gbc.setState(0x8f21, 0x1e03, 0x460, 0xa6ba, 0x8f2, 0x878c, 0x1, 0x1);
        gbc.writeMem(0x8f21, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x1e03);
        EXPECT(gbc.pc(), 0x8f23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f21), 0xcb);
        EXPECT(gbc.readMem(0x8f22), 0xf0);
        // CB F0 0351
        gbc.setState(0x356a, 0xe2c0, 0x2cf0, 0x3d5b, 0xfb5, 0xe596, 0x1, 0x1);
        gbc.writeMem(0x356a, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xe2c0);
        EXPECT(gbc.pc(), 0x356c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0352
        gbc.setState(0x92ab, 0xf203, 0xcec0, 0x2131, 0xb49d, 0xa82e, 0x0, 0x0);
        gbc.writeMem(0x92ab, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xf203);
        EXPECT(gbc.pc(), 0x92ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92ab), 0xcb);
        EXPECT(gbc.readMem(0x92ac), 0xf0);
        // CB F0 0353
        gbc.setState(0xbaf4, 0x4fc1, 0x400, 0xe46c, 0x4092, 0x5d79, 0x0, 0x1);
        gbc.writeMem(0xbaf4, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x4fc1);
        EXPECT(gbc.pc(), 0xbaf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbaf4), 0xcb);
        EXPECT(gbc.readMem(0xbaf5), 0xf0);
        // CB F0 0354
        gbc.setState(0xb65a, 0x95df, 0x9c10, 0xe1b7, 0xa78c, 0xb471, 0x1, 0x0);
        gbc.writeMem(0xb65a, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x95df);
        EXPECT(gbc.pc(), 0xb65c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb65a), 0xcb);
        EXPECT(gbc.readMem(0xb65b), 0xf0);
        // CB F0 0355
        gbc.setState(0xec5e, 0x3327, 0x27b0, 0x6bcd, 0x10a5, 0x2124, 0x1, 0x1);
        gbc.writeMem(0xec5e, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x3327);
        EXPECT(gbc.pc(), 0xec60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec5e), 0xcb);
        EXPECT(gbc.readMem(0xec5f), 0xf0);
        // CB F0 0356
        gbc.setState(0x65cc, 0xf58c, 0x45e0, 0x1732, 0x3144, 0x9c3e, 0x1, 0x0);
        gbc.writeMem(0x65cc, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xf58c);
        EXPECT(gbc.pc(), 0x65ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0357
        gbc.setState(0xd900, 0x71ec, 0xbb30, 0x4bee, 0xb872, 0x9108, 0x1, 0x0);
        gbc.writeMem(0xd900, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x71ec);
        EXPECT(gbc.pc(), 0xd902);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd900), 0xcb);
        EXPECT(gbc.readMem(0xd901), 0xf0);
        // CB F0 0358
        gbc.setState(0xbc0c, 0xcdcc, 0x9b70, 0x764e, 0x70ce, 0xebad, 0x1, 0x0);
        gbc.writeMem(0xbc0c, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xcdcc);
        EXPECT(gbc.pc(), 0xbc0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc0c), 0xcb);
        EXPECT(gbc.readMem(0xbc0d), 0xf0);
        // CB F0 0359
        gbc.setState(0x4861, 0x7ada, 0x6670, 0x1b54, 0xa259, 0xccbb, 0x0, 0x1);
        gbc.writeMem(0x4861, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x7ada);
        EXPECT(gbc.pc(), 0x4863);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 035A
        gbc.setState(0xa524, 0x3849, 0x1a70, 0xe820, 0xf1d4, 0x94ea, 0x1, 0x1);
        gbc.writeMem(0xa524, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x3849);
        EXPECT(gbc.pc(), 0xa526);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa524), 0xcb);
        EXPECT(gbc.readMem(0xa525), 0xf0);
        // CB F0 035B
        gbc.setState(0xd713, 0x269a, 0x93e0, 0x7d74, 0x3fe, 0xed6d, 0x1, 0x1);
        gbc.writeMem(0xd713, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x269a);
        EXPECT(gbc.pc(), 0xd715);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd713), 0xcb);
        EXPECT(gbc.readMem(0xd714), 0xf0);
        // CB F0 035C
        gbc.setState(0xc865, 0x150d, 0xa3b0, 0x8d67, 0xb66c, 0x8a89, 0x0, 0x0);
        gbc.writeMem(0xc865, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x150d);
        EXPECT(gbc.pc(), 0xc867);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc865), 0xcb);
        EXPECT(gbc.readMem(0xc866), 0xf0);
        // CB F0 035D
        gbc.setState(0x8c02, 0x2c75, 0x6340, 0x5b79, 0x797, 0x6517, 0x1, 0x1);
        gbc.writeMem(0x8c02, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x2c75);
        EXPECT(gbc.pc(), 0x8c04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c02), 0xcb);
        EXPECT(gbc.readMem(0x8c03), 0xf0);
        // CB F0 035F
        gbc.setState(0xd8af, 0xf7e3, 0x1c30, 0x83b2, 0xd649, 0x98da, 0x1, 0x0);
        gbc.writeMem(0xd8af, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xf7e3);
        EXPECT(gbc.pc(), 0xd8b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8af), 0xcb);
        EXPECT(gbc.readMem(0xd8b0), 0xf0);
        // CB F0 0361
        gbc.setState(0x4c44, 0xf5d1, 0xe20, 0xc8b, 0xa182, 0x5db8, 0x1, 0x1);
        gbc.writeMem(0x4c44, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xf5d1);
        EXPECT(gbc.pc(), 0x4c46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0362
        gbc.setState(0x353a, 0xad06, 0x3050, 0x913f, 0x4d21, 0xdfb5, 0x1, 0x0);
        gbc.writeMem(0x353a, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xad06);
        EXPECT(gbc.pc(), 0x353c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0363
        gbc.setState(0x2e4d, 0x19f3, 0xf50, 0x21d8, 0xd6b0, 0xc768, 0x1, 0x1);
        gbc.writeMem(0x2e4d, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x19f3);
        EXPECT(gbc.pc(), 0x2e4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0364
        gbc.setState(0x8c45, 0xfff0, 0x50d0, 0x355c, 0xcee1, 0xcb7, 0x0, 0x0);
        gbc.writeMem(0x8c45, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xfff0);
        EXPECT(gbc.pc(), 0x8c47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c45), 0xcb);
        EXPECT(gbc.readMem(0x8c46), 0xf0);
        // CB F0 0365
        gbc.setState(0x1fb4, 0x9f2a, 0xd200, 0x5b79, 0xa434, 0xa177, 0x0, 0x1);
        gbc.writeMem(0x1fb4, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x9f2a);
        EXPECT(gbc.pc(), 0x1fb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0366
        gbc.setState(0x32b1, 0x1f27, 0x5220, 0xa4ce, 0xf2ba, 0x5c6f, 0x0, 0x0);
        gbc.writeMem(0x32b1, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x1f27);
        EXPECT(gbc.pc(), 0x32b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0367
        gbc.setState(0x1ed2, 0xe913, 0x4560, 0xb219, 0x4e5, 0x45d7, 0x1, 0x1);
        gbc.writeMem(0x1ed2, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xe913);
        EXPECT(gbc.pc(), 0x1ed4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0368
        gbc.setState(0x7282, 0xc51, 0x1460, 0x940e, 0x9d4d, 0x8a61, 0x1, 0x1);
        gbc.writeMem(0x7282, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xc51);
        EXPECT(gbc.pc(), 0x7284);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0369
        gbc.setState(0x3cb7, 0x914c, 0xf280, 0x84ad, 0x7bc2, 0x133c, 0x0, 0x0);
        gbc.writeMem(0x3cb7, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x914c);
        EXPECT(gbc.pc(), 0x3cb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 036A
        gbc.setState(0x465a, 0xb225, 0x55f0, 0xe677, 0x2b6c, 0x7fad, 0x1, 0x0);
        gbc.writeMem(0x465a, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xb225);
        EXPECT(gbc.pc(), 0x465c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 036B
        gbc.setState(0x42d5, 0xf6d8, 0xbd0, 0xaaa4, 0x86a6, 0xe1af, 0x0, 0x1);
        gbc.writeMem(0x42d5, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xf6d8);
        EXPECT(gbc.pc(), 0x42d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 036D
        gbc.setState(0x7c86, 0xdc7e, 0xf160, 0x504e, 0xef1c, 0x5f76, 0x1, 0x1);
        gbc.writeMem(0x7c86, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xdc7e);
        EXPECT(gbc.pc(), 0x7c88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 036E
        gbc.setState(0x2079, 0xd940, 0x8620, 0x3fa5, 0xac56, 0xbba6, 0x0, 0x1);
        gbc.writeMem(0x2079, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xd940);
        EXPECT(gbc.pc(), 0x207b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 036F
        gbc.setState(0xd381, 0xd4de, 0x5b90, 0x1f5d, 0xaf7e, 0xf700, 0x1, 0x1);
        gbc.writeMem(0xd381, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xd4de);
        EXPECT(gbc.pc(), 0xd383);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd381), 0xcb);
        EXPECT(gbc.readMem(0xd382), 0xf0);
        // CB F0 0370
        gbc.setState(0xb9de, 0x7859, 0x5000, 0xddc7, 0x5709, 0x2a8d, 0x1, 0x0);
        gbc.writeMem(0xb9de, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x7859);
        EXPECT(gbc.pc(), 0xb9e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9de), 0xcb);
        EXPECT(gbc.readMem(0xb9df), 0xf0);
        // CB F0 0371
        gbc.setState(0xb855, 0xb4a3, 0xb400, 0xe82c, 0xe534, 0xed4f, 0x1, 0x1);
        gbc.writeMem(0xb855, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xb4a3);
        EXPECT(gbc.pc(), 0xb857);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb855), 0xcb);
        EXPECT(gbc.readMem(0xb856), 0xf0);
        // CB F0 0372
        gbc.setState(0x9427, 0xfbaf, 0x7db0, 0x65aa, 0x26fe, 0xac87, 0x0, 0x0);
        gbc.writeMem(0x9427, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xfbaf);
        EXPECT(gbc.pc(), 0x9429);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9427), 0xcb);
        EXPECT(gbc.readMem(0x9428), 0xf0);
        // CB F0 0373
        gbc.setState(0x7a8f, 0x57f4, 0x2090, 0xd672, 0x3f70, 0xb0ec, 0x1, 0x1);
        gbc.writeMem(0x7a8f, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x57f4);
        EXPECT(gbc.pc(), 0x7a91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0374
        gbc.setState(0x72d2, 0x24ea, 0x24c0, 0x739a, 0xd83f, 0xbe9c, 0x0, 0x1);
        gbc.writeMem(0x72d2, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x24ea);
        EXPECT(gbc.pc(), 0x72d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0375
        gbc.setState(0x854, 0xc310, 0xedc0, 0xf4c0, 0xed6c, 0xab28, 0x1, 0x0);
        gbc.writeMem(0x854, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xc310);
        EXPECT(gbc.pc(), 0x856);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0377
        gbc.setState(0x7147, 0x52d0, 0x3d80, 0x4de3, 0xbad9, 0xe74b, 0x1, 0x0);
        gbc.writeMem(0x7147, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x52d0);
        EXPECT(gbc.pc(), 0x7149);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0378
        gbc.setState(0x6167, 0xc519, 0x4d20, 0xd4a3, 0xea40, 0xa5a, 0x1, 0x0);
        gbc.writeMem(0x6167, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xc519);
        EXPECT(gbc.pc(), 0x6169);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0379
        gbc.setState(0x61b9, 0x65f8, 0x25b0, 0x76d5, 0x5169, 0x3549, 0x0, 0x1);
        gbc.writeMem(0x61b9, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x65f8);
        EXPECT(gbc.pc(), 0x61bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 037A
        gbc.setState(0x3257, 0x6f4f, 0xf2a0, 0xe0c8, 0x8ef, 0xb23a, 0x0, 0x1);
        gbc.writeMem(0x3257, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x6f4f);
        EXPECT(gbc.pc(), 0x3259);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 037B
        gbc.setState(0x590d, 0x46be, 0x2b10, 0x42a5, 0x452f, 0xb2ca, 0x0, 0x0);
        gbc.writeMem(0x590d, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x46be);
        EXPECT(gbc.pc(), 0x590f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 037C
        gbc.setState(0x1e5f, 0xadc7, 0x6910, 0x2179, 0xa421, 0x4f3a, 0x1, 0x1);
        gbc.writeMem(0x1e5f, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xadc7);
        EXPECT(gbc.pc(), 0x1e61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 037E
        gbc.setState(0xb00e, 0x7fbd, 0x5af0, 0x4209, 0xefcc, 0x33, 0x0, 0x0);
        gbc.writeMem(0xb00e, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x7fbd);
        EXPECT(gbc.pc(), 0xb010);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb00e), 0xcb);
        EXPECT(gbc.readMem(0xb00f), 0xf0);
        // CB F0 037F
        gbc.setState(0xa93e, 0xfd02, 0xb100, 0xd13d, 0xc0a1, 0xaf75, 0x0, 0x1);
        gbc.writeMem(0xa93e, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xfd02);
        EXPECT(gbc.pc(), 0xa940);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa93e), 0xcb);
        EXPECT(gbc.readMem(0xa93f), 0xf0);
        // CB F0 0380
        gbc.setState(0x85ea, 0x9be4, 0x1d80, 0x64ce, 0x4546, 0x9bd3, 0x0, 0x1);
        gbc.writeMem(0x85ea, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x9be4);
        EXPECT(gbc.pc(), 0x85ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85ea), 0xcb);
        EXPECT(gbc.readMem(0x85eb), 0xf0);
        // CB F0 0381
        gbc.setState(0xb8f0, 0x6921, 0xe580, 0x1c63, 0xeb87, 0x4766, 0x1, 0x1);
        gbc.writeMem(0xb8f0, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x6921);
        EXPECT(gbc.pc(), 0xb8f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8f0), 0xcb);
        EXPECT(gbc.readMem(0xb8f1), 0xf0);
        // CB F0 0382
        gbc.setState(0x7497, 0x21b1, 0x21e0, 0x2316, 0xa9da, 0x86b0, 0x1, 0x0);
        gbc.writeMem(0x7497, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x21b1);
        EXPECT(gbc.pc(), 0x7499);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0383
        gbc.setState(0x6e55, 0x76d8, 0xe780, 0x5a74, 0xd520, 0x51c1, 0x0, 0x0);
        gbc.writeMem(0x6e55, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x76d8);
        EXPECT(gbc.pc(), 0x6e57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0384
        gbc.setState(0x292e, 0x33f8, 0x6030, 0x67c0, 0xf4a9, 0x85ae, 0x1, 0x0);
        gbc.writeMem(0x292e, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x33f8);
        EXPECT(gbc.pc(), 0x2930);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0385
        gbc.setState(0xb63, 0x83e1, 0xd190, 0x7c7c, 0x34d0, 0x5d2b, 0x1, 0x0);
        gbc.writeMem(0xb63, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x83e1);
        EXPECT(gbc.pc(), 0xb65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0387
        gbc.setState(0x39a6, 0xd1e7, 0xf330, 0x9b74, 0xdb17, 0x2043, 0x1, 0x1);
        gbc.writeMem(0x39a6, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xd1e7);
        EXPECT(gbc.pc(), 0x39a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0388
        gbc.setState(0x6ce4, 0xef82, 0xb1c0, 0x1728, 0x37c7, 0xd14, 0x1, 0x0);
        gbc.writeMem(0x6ce4, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xef82);
        EXPECT(gbc.pc(), 0x6ce6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0389
        gbc.setState(0xa8ae, 0x8918, 0xf5d0, 0x886b, 0x4fe4, 0xe9ef, 0x1, 0x1);
        gbc.writeMem(0xa8ae, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x8918);
        EXPECT(gbc.pc(), 0xa8b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8ae), 0xcb);
        EXPECT(gbc.readMem(0xa8af), 0xf0);
        // CB F0 038A
        gbc.setState(0x474a, 0xfd83, 0xb330, 0xb359, 0x86e1, 0x9e94, 0x0, 0x1);
        gbc.writeMem(0x474a, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xfd83);
        EXPECT(gbc.pc(), 0x474c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 038B
        gbc.setState(0xb530, 0xd6fe, 0x3130, 0x4112, 0xc418, 0x382a, 0x0, 0x0);
        gbc.writeMem(0xb530, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xd6fe);
        EXPECT(gbc.pc(), 0xb532);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb530), 0xcb);
        EXPECT(gbc.readMem(0xb531), 0xf0);
        // CB F0 038C
        gbc.setState(0x71af, 0x826b, 0x70b0, 0x21aa, 0xc16f, 0xd853, 0x0, 0x1);
        gbc.writeMem(0x71af, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x826b);
        EXPECT(gbc.pc(), 0x71b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 038D
        gbc.setState(0x7f0c, 0xc161, 0x39a0, 0xc0c4, 0x1739, 0xbb12, 0x1, 0x0);
        gbc.writeMem(0x7f0c, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xc161);
        EXPECT(gbc.pc(), 0x7f0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 038E
        gbc.setState(0x7602, 0x88ca, 0xd600, 0xef36, 0x197b, 0xe9fc, 0x1, 0x1);
        gbc.writeMem(0x7602, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x88ca);
        EXPECT(gbc.pc(), 0x7604);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 038F
        gbc.setState(0x5f5e, 0x393f, 0x91f0, 0x25a7, 0xc02d, 0x4363, 0x0, 0x0);
        gbc.writeMem(0x5f5e, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x393f);
        EXPECT(gbc.pc(), 0x5f60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0390
        gbc.setState(0xed59, 0xcf40, 0x7830, 0x542, 0xcc64, 0xb0c0, 0x0, 0x0);
        gbc.writeMem(0xed59, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xcf40);
        EXPECT(gbc.pc(), 0xed5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed59), 0xcb);
        EXPECT(gbc.readMem(0xed5a), 0xf0);
        // CB F0 0391
        gbc.setState(0x4668, 0x76f1, 0xedd0, 0x5345, 0xc387, 0x7932, 0x1, 0x0);
        gbc.writeMem(0x4668, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x76f1);
        EXPECT(gbc.pc(), 0x466a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0392
        gbc.setState(0x51bc, 0x609, 0x83a0, 0x6725, 0x521, 0xc9ba, 0x0, 0x1);
        gbc.writeMem(0x51bc, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x609);
        EXPECT(gbc.pc(), 0x51be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0393
        gbc.setState(0x6275, 0xce7b, 0x3580, 0xc4d5, 0xbff3, 0x2eb8, 0x0, 0x0);
        gbc.writeMem(0x6275, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xce7b);
        EXPECT(gbc.pc(), 0x6277);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 0395
        gbc.setState(0xb572, 0x7523, 0x77c0, 0x9611, 0xcf7a, 0x6ca8, 0x1, 0x1);
        gbc.writeMem(0xb572, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x7523);
        EXPECT(gbc.pc(), 0xb574);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb572), 0xcb);
        EXPECT(gbc.readMem(0xb573), 0xf0);
        // CB F0 0396
        gbc.setState(0x2f09, 0x5e4b, 0xe110, 0x7005, 0xc20d, 0x1ee5, 0x1, 0x0);
        gbc.writeMem(0x2f09, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x5e4b);
        EXPECT(gbc.pc(), 0x2f0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 0397
        gbc.setState(0xdbc6, 0x225c, 0x2660, 0xe1d2, 0x3992, 0x3e4a, 0x0, 0x1);
        gbc.writeMem(0xdbc6, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x225c);
        EXPECT(gbc.pc(), 0xdbc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbc6), 0xcb);
        EXPECT(gbc.readMem(0xdbc7), 0xf0);
        // CB F0 0398
        gbc.setState(0xb633, 0xe628, 0x1fa0, 0xe356, 0x42ac, 0x32f9, 0x0, 0x1);
        gbc.writeMem(0xb633, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xe628);
        EXPECT(gbc.pc(), 0xb635);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb633), 0xcb);
        EXPECT(gbc.readMem(0xb634), 0xf0);
        // CB F0 0399
        gbc.setState(0x26c3, 0xb586, 0x8240, 0x19dc, 0x57ba, 0x6b73, 0x0, 0x0);
        gbc.writeMem(0x26c3, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xb586);
        EXPECT(gbc.pc(), 0x26c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 039A
        gbc.setState(0xe1f7, 0x6217, 0x6870, 0xd2c0, 0xb375, 0xfe2e, 0x1, 0x0);
        gbc.writeMem(0xe1f7, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x6217);
        EXPECT(gbc.pc(), 0xe1f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1f7), 0xcb);
        EXPECT(gbc.readMem(0xe1f8), 0xf0);
        // CB F0 039B
        gbc.setState(0x7c1c, 0xde1, 0xf960, 0x8b8f, 0x4033, 0x594, 0x1, 0x0);
        gbc.writeMem(0x7c1c, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xde1);
        EXPECT(gbc.pc(), 0x7c1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 039C
        gbc.setState(0xdf18, 0x406b, 0xbb0, 0x9874, 0xcae7, 0x7353, 0x1, 0x0);
        gbc.writeMem(0xdf18, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x406b);
        EXPECT(gbc.pc(), 0xdf1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf18), 0xcb);
        EXPECT(gbc.readMem(0xdf19), 0xf0);
        // CB F0 039D
        gbc.setState(0x2afa, 0x97be, 0xac90, 0x33a9, 0x8369, 0x16e8, 0x0, 0x1);
        gbc.writeMem(0x2afa, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x97be);
        EXPECT(gbc.pc(), 0x2afc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 039E
        gbc.setState(0x5415, 0x6dbc, 0xda00, 0xbdb6, 0x47, 0x3ae9, 0x0, 0x1);
        gbc.writeMem(0x5415, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x6dbc);
        EXPECT(gbc.pc(), 0x5417);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 039F
        gbc.setState(0x20ca, 0xb98d, 0xc550, 0xc437, 0xa064, 0x7e3f, 0x1, 0x0);
        gbc.writeMem(0x20ca, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xb98d);
        EXPECT(gbc.pc(), 0x20cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 03A0
        gbc.setState(0x4af3, 0x1ee6, 0x3b10, 0xca94, 0x6137, 0xd650, 0x0, 0x1);
        gbc.writeMem(0x4af3, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x1ee6);
        EXPECT(gbc.pc(), 0x4af5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 03A1
        gbc.setState(0x5bf5, 0x8d8e, 0x91d0, 0xe5e3, 0x6709, 0x9183, 0x1, 0x0);
        gbc.writeMem(0x5bf5, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x8d8e);
        EXPECT(gbc.pc(), 0x5bf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 03A2
        gbc.setState(0x9eb1, 0xd072, 0x4be0, 0x6163, 0x51b, 0x7079, 0x0, 0x0);
        gbc.writeMem(0x9eb1, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xd072);
        EXPECT(gbc.pc(), 0x9eb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9eb1), 0xcb);
        EXPECT(gbc.readMem(0x9eb2), 0xf0);
        // CB F0 03A3
        gbc.setState(0xce75, 0x7203, 0xdc50, 0x423f, 0x3251, 0xcd9a, 0x1, 0x0);
        gbc.writeMem(0xce75, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x7203);
        EXPECT(gbc.pc(), 0xce77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce75), 0xcb);
        EXPECT(gbc.readMem(0xce76), 0xf0);
        // CB F0 03A4
        gbc.setState(0xe130, 0x7946, 0x240, 0xf0ba, 0x7018, 0xdc9c, 0x1, 0x0);
        gbc.writeMem(0xe130, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x7946);
        EXPECT(gbc.pc(), 0xe132);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe130), 0xcb);
        EXPECT(gbc.readMem(0xe131), 0xf0);
        // CB F0 03A5
        gbc.setState(0x6ec2, 0x773a, 0xd0f0, 0xfae1, 0x2266, 0x64d2, 0x0, 0x0);
        gbc.writeMem(0x6ec2, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x773a);
        EXPECT(gbc.pc(), 0x6ec4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 03A6
        gbc.setState(0x5c4c, 0x6aed, 0xbd10, 0xd409, 0xcaa4, 0xb885, 0x0, 0x1);
        gbc.writeMem(0x5c4c, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x6aed);
        EXPECT(gbc.pc(), 0x5c4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 03A7
        gbc.setState(0xeb7b, 0xd927, 0xdd40, 0x48a4, 0xd73c, 0x1f2d, 0x0, 0x1);
        gbc.writeMem(0xeb7b, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xd927);
        EXPECT(gbc.pc(), 0xeb7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb7b), 0xcb);
        EXPECT(gbc.readMem(0xeb7c), 0xf0);
        // CB F0 03A8
        gbc.setState(0x40f2, 0x773e, 0xc250, 0x6541, 0x8e42, 0x19c3, 0x1, 0x1);
        gbc.writeMem(0x40f2, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x773e);
        EXPECT(gbc.pc(), 0x40f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 03AA
        gbc.setState(0xc84, 0x2102, 0xdae0, 0x19fb, 0xd1fe, 0x98db, 0x0, 0x0);
        gbc.writeMem(0xc84, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x2102);
        EXPECT(gbc.pc(), 0xc86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 03AB
        gbc.setState(0x381f, 0x357d, 0xa1f0, 0xfac6, 0xd42a, 0xe6dc, 0x0, 0x1);
        gbc.writeMem(0x381f, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x357d);
        EXPECT(gbc.pc(), 0x3821);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 03AD
        gbc.setState(0xdc49, 0xccc7, 0xd8b0, 0xdcdd, 0xd9d3, 0xd78f, 0x0, 0x1);
        gbc.writeMem(0xdc49, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xccc7);
        EXPECT(gbc.pc(), 0xdc4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc49), 0xcb);
        EXPECT(gbc.readMem(0xdc4a), 0xf0);
        // CB F0 03AE
        gbc.setState(0x83d0, 0xf269, 0x7fa0, 0x26c3, 0xf31, 0x9cc, 0x0, 0x1);
        gbc.writeMem(0x83d0, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xf269);
        EXPECT(gbc.pc(), 0x83d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83d0), 0xcb);
        EXPECT(gbc.readMem(0x83d1), 0xf0);
        // CB F0 03AF
        gbc.setState(0x4beb, 0x6b22, 0x5870, 0x70f7, 0xd12d, 0xa0be, 0x1, 0x0);
        gbc.writeMem(0x4beb, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x6b22);
        EXPECT(gbc.pc(), 0x4bed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 03B0
        gbc.setState(0x8dcf, 0x9717, 0xdde0, 0x7535, 0x64d5, 0x5350, 0x1, 0x1);
        gbc.writeMem(0x8dcf, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x9717);
        EXPECT(gbc.pc(), 0x8dd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dcf), 0xcb);
        EXPECT(gbc.readMem(0x8dd0), 0xf0);
        // CB F0 03B1
        gbc.setState(0xb3de, 0xcb8a, 0x6520, 0x34d9, 0x6834, 0x479, 0x0, 0x0);
        gbc.writeMem(0xb3de, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xcb8a);
        EXPECT(gbc.pc(), 0xb3e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3de), 0xcb);
        EXPECT(gbc.readMem(0xb3df), 0xf0);
        // CB F0 03B2
        gbc.setState(0xaba8, 0xdffd, 0xe190, 0x12af, 0xe941, 0xc85c, 0x1, 0x0);
        gbc.writeMem(0xaba8, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xdffd);
        EXPECT(gbc.pc(), 0xabaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaba8), 0xcb);
        EXPECT(gbc.readMem(0xaba9), 0xf0);
        // CB F0 03B3
        gbc.setState(0xc668, 0x7f1c, 0x9fd0, 0xcbe1, 0x8aa7, 0xe510, 0x1, 0x0);
        gbc.writeMem(0xc668, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x7f1c);
        EXPECT(gbc.pc(), 0xc66a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc668), 0xcb);
        EXPECT(gbc.readMem(0xc669), 0xf0);
        // CB F0 03B4
        gbc.setState(0x1242, 0x1b88, 0x5050, 0x7f1b, 0xc418, 0xa8d8, 0x1, 0x0);
        gbc.writeMem(0x1242, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x1b88);
        EXPECT(gbc.pc(), 0x1244);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 03B5
        gbc.setState(0x9df9, 0x103e, 0xdca0, 0x4cb1, 0x8060, 0xf1e6, 0x1, 0x0);
        gbc.writeMem(0x9df9, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x103e);
        EXPECT(gbc.pc(), 0x9dfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9df9), 0xcb);
        EXPECT(gbc.readMem(0x9dfa), 0xf0);
        // CB F0 03B8
        gbc.setState(0xf47, 0x667b, 0x3790, 0x808e, 0xe1a0, 0x982f, 0x1, 0x1);
        gbc.writeMem(0xf47, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x667b);
        EXPECT(gbc.pc(), 0xf49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 03B9
        gbc.setState(0x4a91, 0x955d, 0x2880, 0xeea2, 0x3405, 0x3a5d, 0x0, 0x0);
        gbc.writeMem(0x4a91, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x955d);
        EXPECT(gbc.pc(), 0x4a93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 03BA
        gbc.setState(0xe50c, 0x7ff7, 0x55f0, 0x386d, 0x8c15, 0x854f, 0x0, 0x0);
        gbc.writeMem(0xe50c, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x7ff7);
        EXPECT(gbc.pc(), 0xe50e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe50c), 0xcb);
        EXPECT(gbc.readMem(0xe50d), 0xf0);
        // CB F0 03BB
        gbc.setState(0x778e, 0xa2b4, 0xec90, 0x4f57, 0x4a23, 0x3fa, 0x0, 0x0);
        gbc.writeMem(0x778e, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xa2b4);
        EXPECT(gbc.pc(), 0x7790);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 03BC
        gbc.setState(0x6808, 0x2a22, 0xcea0, 0x31b2, 0x2e31, 0x27a3, 0x0, 0x1);
        gbc.writeMem(0x6808, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x2a22);
        EXPECT(gbc.pc(), 0x680a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 03BD
        gbc.setState(0x78ae, 0xdfdb, 0xb160, 0xe13f, 0xd0ca, 0x5276, 0x0, 0x0);
        gbc.writeMem(0x78ae, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xdfdb);
        EXPECT(gbc.pc(), 0x78b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 03BE
        gbc.setState(0x817, 0xeb50, 0xa00, 0xf3a8, 0x191a, 0xcf31, 0x1, 0x0);
        gbc.writeMem(0x817, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xeb50);
        EXPECT(gbc.pc(), 0x819);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 03BF
        gbc.setState(0xc8a8, 0x4425, 0x1a30, 0x89a7, 0x326c, 0xfc67, 0x1, 0x1);
        gbc.writeMem(0xc8a8, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x4425);
        EXPECT(gbc.pc(), 0xc8aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8a8), 0xcb);
        EXPECT(gbc.readMem(0xc8a9), 0xf0);
        // CB F0 03C0
        gbc.setState(0xdbca, 0xc3b3, 0x1a60, 0xe2b7, 0x969b, 0x1cf1, 0x0, 0x0);
        gbc.writeMem(0xdbca, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xc3b3);
        EXPECT(gbc.pc(), 0xdbcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbca), 0xcb);
        EXPECT(gbc.readMem(0xdbcb), 0xf0);
        // CB F0 03C2
        gbc.setState(0xec1a, 0xce21, 0xfd80, 0xe940, 0x1e11, 0xfd32, 0x0, 0x1);
        gbc.writeMem(0xec1a, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xce21);
        EXPECT(gbc.pc(), 0xec1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec1a), 0xcb);
        EXPECT(gbc.readMem(0xec1b), 0xf0);
        // CB F0 03C3
        gbc.setState(0xda7d, 0x4efb, 0x7810, 0x9144, 0x30fb, 0x3ad8, 0x0, 0x1);
        gbc.writeMem(0xda7d, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x4efb);
        EXPECT(gbc.pc(), 0xda7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda7d), 0xcb);
        EXPECT(gbc.readMem(0xda7e), 0xf0);
        // CB F0 03C4
        gbc.setState(0x9c3d, 0x4ea, 0xfb30, 0x65d5, 0x343e, 0xb6d9, 0x1, 0x0);
        gbc.writeMem(0x9c3d, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x4ea);
        EXPECT(gbc.pc(), 0x9c3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c3d), 0xcb);
        EXPECT(gbc.readMem(0x9c3e), 0xf0);
        // CB F0 03C5
        gbc.setState(0x283d, 0x45eb, 0x45b0, 0x5700, 0xd01d, 0xadec, 0x0, 0x1);
        gbc.writeMem(0x283d, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x45eb);
        EXPECT(gbc.pc(), 0x283f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 03C6
        gbc.setState(0x30d4, 0x34a2, 0x9ff0, 0x1e61, 0x2c07, 0x610e, 0x0, 0x1);
        gbc.writeMem(0x30d4, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x34a2);
        EXPECT(gbc.pc(), 0x30d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 03C7
        gbc.setState(0x50a4, 0x3906, 0x62b0, 0xe1f5, 0x2998, 0x39f7, 0x0, 0x0);
        gbc.writeMem(0x50a4, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x3906);
        EXPECT(gbc.pc(), 0x50a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 03C8
        gbc.setState(0xa337, 0xa13d, 0x7640, 0x6ed1, 0x232f, 0xc3f5, 0x1, 0x1);
        gbc.writeMem(0xa337, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xa13d);
        EXPECT(gbc.pc(), 0xa339);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa337), 0xcb);
        EXPECT(gbc.readMem(0xa338), 0xf0);
        // CB F0 03C9
        gbc.setState(0x42aa, 0x377, 0xbca0, 0xae34, 0xe85d, 0xeb18, 0x1, 0x1);
        gbc.writeMem(0x42aa, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x377);
        EXPECT(gbc.pc(), 0x42ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 03CA
        gbc.setState(0xab92, 0xc38d, 0xe660, 0x1cf3, 0xbaf9, 0x35ee, 0x1, 0x0);
        gbc.writeMem(0xab92, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xc38d);
        EXPECT(gbc.pc(), 0xab94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab92), 0xcb);
        EXPECT(gbc.readMem(0xab93), 0xf0);
        // CB F0 03CB
        gbc.setState(0x27a9, 0xd906, 0x9220, 0xbf5, 0x16a, 0xacd0, 0x1, 0x1);
        gbc.writeMem(0x27a9, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xd906);
        EXPECT(gbc.pc(), 0x27ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 03CC
        gbc.setState(0x62bc, 0xbc4c, 0xf3f0, 0xada7, 0x7d03, 0xfe20, 0x0, 0x0);
        gbc.writeMem(0x62bc, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xbc4c);
        EXPECT(gbc.pc(), 0x62be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 03CD
        gbc.setState(0xdb09, 0x34ee, 0x7b70, 0xe956, 0x5893, 0x9519, 0x1, 0x0);
        gbc.writeMem(0xdb09, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x34ee);
        EXPECT(gbc.pc(), 0xdb0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb09), 0xcb);
        EXPECT(gbc.readMem(0xdb0a), 0xf0);
        // CB F0 03CE
        gbc.setState(0xe18f, 0xe8ed, 0x2250, 0xfba1, 0x4728, 0xd169, 0x0, 0x0);
        gbc.writeMem(0xe18f, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xe8ed);
        EXPECT(gbc.pc(), 0xe191);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe18f), 0xcb);
        EXPECT(gbc.readMem(0xe190), 0xf0);
        // CB F0 03CF
        gbc.setState(0x4b4d, 0x9a95, 0x9e70, 0x60b, 0x633f, 0x5442, 0x1, 0x1);
        gbc.writeMem(0x4b4d, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x9a95);
        EXPECT(gbc.pc(), 0x4b4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 03D1
        gbc.setState(0x164f, 0x38f3, 0x58b0, 0x2ce1, 0x9a45, 0xa3fb, 0x1, 0x1);
        gbc.writeMem(0x164f, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x38f3);
        EXPECT(gbc.pc(), 0x1651);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 03D2
        gbc.setState(0xcd45, 0xe4e1, 0xb7d0, 0x8151, 0xfa33, 0xd148, 0x0, 0x1);
        gbc.writeMem(0xcd45, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xe4e1);
        EXPECT(gbc.pc(), 0xcd47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd45), 0xcb);
        EXPECT(gbc.readMem(0xcd46), 0xf0);
        // CB F0 03D4
        gbc.setState(0x3b7, 0x22fa, 0xa790, 0x4abd, 0xcec0, 0x55f1, 0x1, 0x1);
        gbc.writeMem(0x3b7, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x22fa);
        EXPECT(gbc.pc(), 0x3b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 03D5
        gbc.setState(0xb59f, 0xe37e, 0x6d0, 0xb810, 0xc72f, 0x630a, 0x1, 0x1);
        gbc.writeMem(0xb59f, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xe37e);
        EXPECT(gbc.pc(), 0xb5a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb59f), 0xcb);
        EXPECT(gbc.readMem(0xb5a0), 0xf0);
        // CB F0 03D6
        gbc.setState(0x7121, 0xce6a, 0x4150, 0x9cc5, 0xdf2a, 0xe46a, 0x0, 0x1);
        gbc.writeMem(0x7121, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xce6a);
        EXPECT(gbc.pc(), 0x7123);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 03D7
        gbc.setState(0x16a, 0x984d, 0x7640, 0x33e1, 0x2dcb, 0x89cb, 0x1, 0x0);
        gbc.writeMem(0x16a, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x984d);
        EXPECT(gbc.pc(), 0x16c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB F0 03D8
        gbc.setState(0x65a7, 0x8e7f, 0x4ad0, 0x213f, 0x32f8, 0x86ba, 0x0, 0x1);
        gbc.writeMem(0x65a7, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x8e7f);
        EXPECT(gbc.pc(), 0x65a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 03D9
        gbc.setState(0xb8d0, 0x4544, 0x6c30, 0xb5fe, 0xff44, 0xb75e, 0x0, 0x1);
        gbc.writeMem(0xb8d0, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x4544);
        EXPECT(gbc.pc(), 0xb8d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8d0), 0xcb);
        EXPECT(gbc.readMem(0xb8d1), 0xf0);
        // CB F0 03DA
        gbc.setState(0xbf8, 0xa1fe, 0xf6d0, 0xcf38, 0x4bed, 0x8c03, 0x1, 0x0);
        gbc.writeMem(0xbf8, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xa1fe);
        EXPECT(gbc.pc(), 0xbfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 03DB
        gbc.setState(0xbbc4, 0x7793, 0x9b40, 0x785, 0xe18c, 0x5b52, 0x0, 0x0);
        gbc.writeMem(0xbbc4, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x7793);
        EXPECT(gbc.pc(), 0xbbc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbc4), 0xcb);
        EXPECT(gbc.readMem(0xbbc5), 0xf0);
        // CB F0 03DC
        gbc.setState(0x9ab6, 0x7a9, 0x60f0, 0x8aac, 0x35dd, 0x15ae, 0x0, 0x1);
        gbc.writeMem(0x9ab6, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x7a9);
        EXPECT(gbc.pc(), 0x9ab8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ab6), 0xcb);
        EXPECT(gbc.readMem(0x9ab7), 0xf0);
        // CB F0 03DD
        gbc.setState(0x640c, 0xf18e, 0x2160, 0xdcc1, 0x57d2, 0x8d63, 0x0, 0x0);
        gbc.writeMem(0x640c, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xf18e);
        EXPECT(gbc.pc(), 0x640e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB F0 03DE
        gbc.setState(0xe2f8, 0x742e, 0xeb70, 0x1f97, 0xe97a, 0x5673, 0x1, 0x1);
        gbc.writeMem(0xe2f8, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x742e);
        EXPECT(gbc.pc(), 0xe2fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2f8), 0xcb);
        EXPECT(gbc.readMem(0xe2f9), 0xf0);
        // CB F0 03E0
        gbc.setState(0xef69, 0xc08b, 0x94b0, 0x3530, 0x227b, 0xee65, 0x1, 0x1);
        gbc.writeMem(0xef69, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xc08b);
        EXPECT(gbc.pc(), 0xef6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef69), 0xcb);
        EXPECT(gbc.readMem(0xef6a), 0xf0);
        // CB F0 03E1
        gbc.setState(0xb205, 0x62e5, 0x1710, 0xee39, 0x4f37, 0x8555, 0x1, 0x0);
        gbc.writeMem(0xb205, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x62e5);
        EXPECT(gbc.pc(), 0xb207);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb205), 0xcb);
        EXPECT(gbc.readMem(0xb206), 0xf0);
        // CB F0 03E2
        gbc.setState(0x1f5f, 0x3d7e, 0x57d0, 0xa691, 0x34e2, 0x9dc1, 0x1, 0x0);
        gbc.writeMem(0x1f5f, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x3d7e);
        EXPECT(gbc.pc(), 0x1f61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB F0 03E3
        gbc.setState(0x2dbb, 0x514a, 0x4d70, 0x2fd6, 0xef22, 0x8d32, 0x0, 0x1);
        gbc.writeMem(0x2dbb, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x514a);
        EXPECT(gbc.pc(), 0x2dbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB F0 03E4
        gbc.setState(0x9245, 0x6cbc, 0x4e00, 0x7335, 0xf8a3, 0x76e4, 0x0, 0x1);
        gbc.writeMem(0x9245, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x6cbc);
        EXPECT(gbc.pc(), 0x9247);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9245), 0xcb);
        EXPECT(gbc.readMem(0x9246), 0xf0);
        // CB F0 03E5
        gbc.setState(0xa18a, 0xd981, 0x4980, 0xe60d, 0x95a4, 0xe5a5, 0x0, 0x1);
        gbc.writeMem(0xa18a, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xd981);
        EXPECT(gbc.pc(), 0xa18c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa18a), 0xcb);
        EXPECT(gbc.readMem(0xa18b), 0xf0);
        // CB F0 03E7
        gbc.setState(0x9b3d, 0xfd89, 0xd460, 0x4959, 0xe4eb, 0x73be, 0x0, 0x1);
        gbc.writeMem(0x9b3d, { 0xcb, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xfd89);
        EXPECT(gbc.pc(), 0x9b3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b3d), 0xcb);
        EXPECT(gbc.readMem(0x9b3e), 0xf0);
    }
