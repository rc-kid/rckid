    TEST(gbcemu, opcode_cb_c9) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB C9 0000
        gbc.setState(0x10ef, 0x47e2, 0x7a60, 0x8208, 0xfe6e, 0x476f, 0x0, 0x1);
        gbc.writeMem(0x10ef, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x47e2, gbc.sp());
        EXPECT(0x10f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0001
        gbc.setState(0x567a, 0x61fb, 0x5f80, 0xe140, 0x2e3c, 0x15cf, 0x0, 0x0);
        gbc.writeMem(0x567a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x61fb, gbc.sp());
        EXPECT(0x567c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0002
        gbc.setState(0x2b5b, 0x2f93, 0x34f0, 0x4f28, 0xf3b9, 0x2a5a, 0x0, 0x0);
        gbc.writeMem(0x2b5b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x2f93, gbc.sp());
        EXPECT(0x2b5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0003
        gbc.setState(0x2706, 0xc1a0, 0xb7d0, 0xa507, 0x7088, 0x8ee9, 0x0, 0x0);
        gbc.writeMem(0x2706, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xc1a0, gbc.sp());
        EXPECT(0x2708, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0004
        gbc.setState(0xa9cf, 0xb38a, 0x5420, 0x5fd9, 0x7977, 0xe559, 0x1, 0x1);
        gbc.writeMem(0xa9cf, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xb38a, gbc.sp());
        EXPECT(0xa9d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9cf));
        EXPECT(0xc9, gbc.readMem(0xa9d0));
        // CB C9 0005
        gbc.setState(0x909d, 0x180f, 0x9370, 0xca37, 0xf571, 0x803, 0x0, 0x0);
        gbc.writeMem(0x909d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x180f, gbc.sp());
        EXPECT(0x909f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x909d));
        EXPECT(0xc9, gbc.readMem(0x909e));
        // CB C9 0006
        gbc.setState(0x3973, 0x850f, 0xab10, 0x5110, 0x9e21, 0x57b1, 0x1, 0x0);
        gbc.writeMem(0x3973, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x850f, gbc.sp());
        EXPECT(0x3975, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0007
        gbc.setState(0xd9dd, 0x26e1, 0x3d00, 0xf7fb, 0x3d4b, 0xb495, 0x0, 0x1);
        gbc.writeMem(0xd9dd, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x26e1, gbc.sp());
        EXPECT(0xd9df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9dd));
        EXPECT(0xc9, gbc.readMem(0xd9de));
        // CB C9 0008
        gbc.setState(0xe47b, 0x7e57, 0xc330, 0x2216, 0xe375, 0xd334, 0x0, 0x0);
        gbc.writeMem(0xe47b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x7e57, gbc.sp());
        EXPECT(0xe47d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe47b));
        EXPECT(0xc9, gbc.readMem(0xe47c));
        // CB C9 0009
        gbc.setState(0xe4db, 0x13b, 0xb00, 0x8328, 0x61e2, 0x4fd4, 0x1, 0x1);
        gbc.writeMem(0xe4db, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x13b, gbc.sp());
        EXPECT(0xe4dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4db));
        EXPECT(0xc9, gbc.readMem(0xe4dc));
        // CB C9 000A
        gbc.setState(0x9116, 0xe5e3, 0x6bc0, 0x7009, 0x7196, 0xe33f, 0x0, 0x1);
        gbc.writeMem(0x9116, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe5e3, gbc.sp());
        EXPECT(0x9118, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9116));
        EXPECT(0xc9, gbc.readMem(0x9117));
        // CB C9 000C
        gbc.setState(0x475f, 0x76eb, 0x3530, 0x6ae0, 0xc233, 0x8fac, 0x1, 0x1);
        gbc.writeMem(0x475f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x76eb, gbc.sp());
        EXPECT(0x4761, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 000D
        gbc.setState(0x781, 0x3997, 0x8c70, 0x62a2, 0x2e22, 0x4e7f, 0x1, 0x1);
        gbc.writeMem(0x781, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x3997, gbc.sp());
        EXPECT(0x783, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 000E
        gbc.setState(0x7047, 0xeb62, 0x530, 0xb128, 0x34fd, 0x4308, 0x0, 0x0);
        gbc.writeMem(0x7047, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xeb62, gbc.sp());
        EXPECT(0x7049, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 000F
        gbc.setState(0x419d, 0xec59, 0x1800, 0xbece, 0x4ec3, 0x484a, 0x0, 0x0);
        gbc.writeMem(0x419d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xec59, gbc.sp());
        EXPECT(0x419f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0010
        gbc.setState(0x9f91, 0x2b4b, 0x1430, 0x1291, 0x179, 0xf3f1, 0x0, 0x1);
        gbc.writeMem(0x9f91, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x2b4b, gbc.sp());
        EXPECT(0x9f93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f91));
        EXPECT(0xc9, gbc.readMem(0x9f92));
        // CB C9 0011
        gbc.setState(0x53e2, 0xc818, 0x79c0, 0xdcbd, 0x1669, 0xa9f1, 0x0, 0x1);
        gbc.writeMem(0x53e2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xc818, gbc.sp());
        EXPECT(0x53e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0012
        gbc.setState(0xef94, 0xd647, 0x39d0, 0x2d7, 0xa819, 0xd6fc, 0x0, 0x1);
        gbc.writeMem(0xef94, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd647, gbc.sp());
        EXPECT(0xef96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef94));
        EXPECT(0xc9, gbc.readMem(0xef95));
        // CB C9 0013
        gbc.setState(0xd3b1, 0x5bfe, 0xda50, 0x4eb3, 0x9bb0, 0xedcf, 0x1, 0x0);
        gbc.writeMem(0xd3b1, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x5bfe, gbc.sp());
        EXPECT(0xd3b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3b1));
        EXPECT(0xc9, gbc.readMem(0xd3b2));
        // CB C9 0014
        gbc.setState(0xd683, 0x743c, 0xb110, 0x3c65, 0x29a3, 0xfbb0, 0x1, 0x0);
        gbc.writeMem(0xd683, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x743c, gbc.sp());
        EXPECT(0xd685, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd683));
        EXPECT(0xc9, gbc.readMem(0xd684));
        // CB C9 0015
        gbc.setState(0x9741, 0x9c48, 0xcf20, 0x8d12, 0x7a09, 0xbf40, 0x0, 0x0);
        gbc.writeMem(0x9741, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x9c48, gbc.sp());
        EXPECT(0x9743, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9741));
        EXPECT(0xc9, gbc.readMem(0x9742));
        // CB C9 0016
        gbc.setState(0x1f68, 0x205f, 0xa3e0, 0xfe83, 0x5376, 0xa0af, 0x0, 0x1);
        gbc.writeMem(0x1f68, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x205f, gbc.sp());
        EXPECT(0x1f6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0017
        gbc.setState(0xd54, 0xe187, 0x72a0, 0x8aad, 0x57ca, 0x9e32, 0x0, 0x1);
        gbc.writeMem(0xd54, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xe187, gbc.sp());
        EXPECT(0xd56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0018
        gbc.setState(0x4e03, 0xd8c6, 0xdf20, 0x8e2, 0x578c, 0x4c87, 0x1, 0x1);
        gbc.writeMem(0x4e03, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xd8c6, gbc.sp());
        EXPECT(0x4e05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0019
        gbc.setState(0x13b0, 0xfb5a, 0xf5f0, 0xa7c5, 0xbb7, 0x7fdd, 0x0, 0x1);
        gbc.writeMem(0x13b0, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xfb5a, gbc.sp());
        EXPECT(0x13b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 001A
        gbc.setState(0xda3, 0x1e6d, 0xe8d0, 0x8d9f, 0xd367, 0xbdca, 0x1, 0x1);
        gbc.writeMem(0xda3, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x1e6d, gbc.sp());
        EXPECT(0xda5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 001B
        gbc.setState(0x98d4, 0x47c8, 0x4920, 0xd5fb, 0x834b, 0x11b7, 0x1, 0x0);
        gbc.writeMem(0x98d4, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x47c8, gbc.sp());
        EXPECT(0x98d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98d4));
        EXPECT(0xc9, gbc.readMem(0x98d5));
        // CB C9 001C
        gbc.setState(0x1604, 0x90b4, 0xcdb0, 0x6e7d, 0x261d, 0x910b, 0x1, 0x0);
        gbc.writeMem(0x1604, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x90b4, gbc.sp());
        EXPECT(0x1606, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 001D
        gbc.setState(0x44dd, 0x54ef, 0x16b0, 0xe28, 0xd601, 0xe971, 0x0, 0x1);
        gbc.writeMem(0x44dd, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x54ef, gbc.sp());
        EXPECT(0x44df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 001E
        gbc.setState(0xeb74, 0x28fe, 0x45a0, 0xfdce, 0x6731, 0x9520, 0x1, 0x1);
        gbc.writeMem(0xeb74, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x28fe, gbc.sp());
        EXPECT(0xeb76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb74));
        EXPECT(0xc9, gbc.readMem(0xeb75));
        // CB C9 001F
        gbc.setState(0x50da, 0x89a4, 0x8250, 0x15b1, 0x3338, 0x7278, 0x0, 0x0);
        gbc.writeMem(0x50da, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x89a4, gbc.sp());
        EXPECT(0x50dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0021
        gbc.setState(0x4751, 0x35de, 0x8fb0, 0x606c, 0x7b92, 0x2379, 0x0, 0x1);
        gbc.writeMem(0x4751, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x35de, gbc.sp());
        EXPECT(0x4753, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0022
        gbc.setState(0x1dc5, 0x4c6, 0xfa60, 0xf880, 0x5587, 0x8b2e, 0x1, 0x0);
        gbc.writeMem(0x1dc5, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x4c6, gbc.sp());
        EXPECT(0x1dc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0023
        gbc.setState(0xc794, 0xa19f, 0xbe70, 0xfa5f, 0x961b, 0xe7ab, 0x1, 0x0);
        gbc.writeMem(0xc794, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xa19f, gbc.sp());
        EXPECT(0xc796, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc794));
        EXPECT(0xc9, gbc.readMem(0xc795));
        // CB C9 0024
        gbc.setState(0x9b78, 0x623a, 0x540, 0xf10c, 0x6702, 0x1714, 0x0, 0x1);
        gbc.writeMem(0x9b78, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x623a, gbc.sp());
        EXPECT(0x9b7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b78));
        EXPECT(0xc9, gbc.readMem(0x9b79));
        // CB C9 0025
        gbc.setState(0xbf4f, 0xd85a, 0x58c0, 0x9686, 0x698f, 0x8ae2, 0x0, 0x0);
        gbc.writeMem(0xbf4f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xd85a, gbc.sp());
        EXPECT(0xbf51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf4f));
        EXPECT(0xc9, gbc.readMem(0xbf50));
        // CB C9 0026
        gbc.setState(0x700, 0xd429, 0x9db0, 0x6a8d, 0x1da8, 0xce02, 0x1, 0x1);
        gbc.writeMem(0x700, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xd429, gbc.sp());
        EXPECT(0x702, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0027
        gbc.setState(0xb7f0, 0x2ba8, 0x8250, 0x4808, 0x3bf4, 0xa805, 0x1, 0x0);
        gbc.writeMem(0xb7f0, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x2ba8, gbc.sp());
        EXPECT(0xb7f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7f0));
        EXPECT(0xc9, gbc.readMem(0xb7f1));
        // CB C9 0028
        gbc.setState(0x6db4, 0x244b, 0x7740, 0x1fc0, 0x33c9, 0xc8a2, 0x1, 0x0);
        gbc.writeMem(0x6db4, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x244b, gbc.sp());
        EXPECT(0x6db6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0029
        gbc.setState(0x11c5, 0x6602, 0xa290, 0x6acf, 0x63ec, 0x8ee3, 0x0, 0x1);
        gbc.writeMem(0x11c5, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x6602, gbc.sp());
        EXPECT(0x11c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 002A
        gbc.setState(0x1c4, 0xd384, 0x80f0, 0x2a36, 0xd37b, 0x5347, 0x0, 0x0);
        gbc.writeMem(0x1c4, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd384, gbc.sp());
        EXPECT(0x1c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 002B
        gbc.setState(0x2a3e, 0x3316, 0xac10, 0xd5d, 0x4a9d, 0xb1cb, 0x0, 0x1);
        gbc.writeMem(0x2a3e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x3316, gbc.sp());
        EXPECT(0x2a40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 002C
        gbc.setState(0x25ea, 0x1c6e, 0xd650, 0xb24e, 0xfbd9, 0xb3ca, 0x0, 0x1);
        gbc.writeMem(0x25ea, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x1c6e, gbc.sp());
        EXPECT(0x25ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 002D
        gbc.setState(0x57f9, 0xa26, 0x3f20, 0xba0a, 0x9f2e, 0xff28, 0x1, 0x1);
        gbc.writeMem(0x57f9, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xa26, gbc.sp());
        EXPECT(0x57fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 002E
        gbc.setState(0x8d17, 0xe746, 0xfa80, 0x516e, 0x3df5, 0x302a, 0x0, 0x1);
        gbc.writeMem(0x8d17, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xe746, gbc.sp());
        EXPECT(0x8d19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d17));
        EXPECT(0xc9, gbc.readMem(0x8d18));
        // CB C9 002F
        gbc.setState(0x1f21, 0x59c, 0x79d0, 0x9f14, 0xdf9d, 0xc133, 0x0, 0x1);
        gbc.writeMem(0x1f21, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x59c, gbc.sp());
        EXPECT(0x1f23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0030
        gbc.setState(0xec4c, 0xdbff, 0xaca0, 0xaf3c, 0xa76e, 0x4f81, 0x1, 0x0);
        gbc.writeMem(0xec4c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xdbff, gbc.sp());
        EXPECT(0xec4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec4c));
        EXPECT(0xc9, gbc.readMem(0xec4d));
        // CB C9 0031
        gbc.setState(0xa812, 0x3f6d, 0xf770, 0x7fe1, 0xeea3, 0xc591, 0x0, 0x0);
        gbc.writeMem(0xa812, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x3f6d, gbc.sp());
        EXPECT(0xa814, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa812));
        EXPECT(0xc9, gbc.readMem(0xa813));
        // CB C9 0032
        gbc.setState(0x2c1a, 0x54f5, 0x5cc0, 0xd6f, 0x9fbd, 0x4124, 0x1, 0x1);
        gbc.writeMem(0x2c1a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x54f5, gbc.sp());
        EXPECT(0x2c1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0033
        gbc.setState(0x4856, 0x1c98, 0x72e0, 0x2170, 0x84b6, 0x4020, 0x1, 0x1);
        gbc.writeMem(0x4856, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x1c98, gbc.sp());
        EXPECT(0x4858, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0034
        gbc.setState(0xa6a2, 0x5064, 0xb870, 0xc27f, 0xb53b, 0xf4ec, 0x1, 0x1);
        gbc.writeMem(0xa6a2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x5064, gbc.sp());
        EXPECT(0xa6a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6a2));
        EXPECT(0xc9, gbc.readMem(0xa6a3));
        // CB C9 0035
        gbc.setState(0xb6b2, 0x3fdc, 0x94f0, 0x75a, 0x500d, 0xe13a, 0x0, 0x1);
        gbc.writeMem(0xb6b2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x3fdc, gbc.sp());
        EXPECT(0xb6b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6b2));
        EXPECT(0xc9, gbc.readMem(0xb6b3));
        // CB C9 0036
        gbc.setState(0x32e9, 0x9f8a, 0xfff0, 0xbcc, 0xc34c, 0x6ae5, 0x1, 0x0);
        gbc.writeMem(0x32e9, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9f8a, gbc.sp());
        EXPECT(0x32eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0038
        gbc.setState(0xc0de, 0xfef6, 0xdb40, 0xf4ca, 0xbf50, 0xc4a9, 0x0, 0x0);
        gbc.writeMem(0xc0de, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xfef6, gbc.sp());
        EXPECT(0xc0e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0de));
        EXPECT(0xc9, gbc.readMem(0xc0df));
        // CB C9 0039
        gbc.setState(0xab2b, 0xf928, 0xc5d0, 0x464f, 0xff91, 0x350a, 0x0, 0x0);
        gbc.writeMem(0xab2b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xf928, gbc.sp());
        EXPECT(0xab2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab2b));
        EXPECT(0xc9, gbc.readMem(0xab2c));
        // CB C9 003A
        gbc.setState(0x98bc, 0x579d, 0xe210, 0xfb03, 0x1363, 0x46b9, 0x1, 0x0);
        gbc.writeMem(0x98bc, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x579d, gbc.sp());
        EXPECT(0x98be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98bc));
        EXPECT(0xc9, gbc.readMem(0x98bd));
        // CB C9 003B
        gbc.setState(0x9892, 0xaeb4, 0x2620, 0x5794, 0xd746, 0xd2c8, 0x0, 0x0);
        gbc.writeMem(0x9892, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xaeb4, gbc.sp());
        EXPECT(0x9894, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9892));
        EXPECT(0xc9, gbc.readMem(0x9893));
        // CB C9 003C
        gbc.setState(0x3eeb, 0xabfb, 0xb4a0, 0x75d8, 0x72f5, 0x8623, 0x0, 0x0);
        gbc.writeMem(0x3eeb, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xabfb, gbc.sp());
        EXPECT(0x3eed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 003D
        gbc.setState(0x10ae, 0xa6e, 0x670, 0xeae9, 0x5562, 0xe9c2, 0x0, 0x1);
        gbc.writeMem(0x10ae, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa6e, gbc.sp());
        EXPECT(0x10b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 003E
        gbc.setState(0xe9eb, 0x399c, 0x4ed0, 0x2062, 0x44df, 0xe3e6, 0x1, 0x0);
        gbc.writeMem(0xe9eb, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x399c, gbc.sp());
        EXPECT(0xe9ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9eb));
        EXPECT(0xc9, gbc.readMem(0xe9ec));
        // CB C9 003F
        gbc.setState(0xd25d, 0x627d, 0xc1d0, 0xebc8, 0x3c2f, 0x2e1, 0x0, 0x0);
        gbc.writeMem(0xd25d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x627d, gbc.sp());
        EXPECT(0xd25f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd25d));
        EXPECT(0xc9, gbc.readMem(0xd25e));
        // CB C9 0040
        gbc.setState(0x2f0e, 0x3960, 0x4b60, 0xb455, 0xd0cb, 0x5143, 0x1, 0x1);
        gbc.writeMem(0x2f0e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3960, gbc.sp());
        EXPECT(0x2f10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0041
        gbc.setState(0x2141, 0x9804, 0xc3a0, 0x2f91, 0xd7ce, 0x92a4, 0x1, 0x0);
        gbc.writeMem(0x2141, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x9804, gbc.sp());
        EXPECT(0x2143, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0042
        gbc.setState(0x7d8a, 0xe1a8, 0x4620, 0x719c, 0x7048, 0x3a06, 0x0, 0x0);
        gbc.writeMem(0x7d8a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xe1a8, gbc.sp());
        EXPECT(0x7d8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0044
        gbc.setState(0x2a54, 0x91f2, 0xd810, 0x3aa3, 0xa0, 0x3daa, 0x0, 0x1);
        gbc.writeMem(0x2a54, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x91f2, gbc.sp());
        EXPECT(0x2a56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0045
        gbc.setState(0x7479, 0xe9d, 0x6010, 0x631b, 0x4861, 0x414b, 0x0, 0x1);
        gbc.writeMem(0x7479, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xe9d, gbc.sp());
        EXPECT(0x747b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0046
        gbc.setState(0xefeb, 0x3539, 0xe90, 0x2d93, 0xfdf5, 0xddb0, 0x0, 0x0);
        gbc.writeMem(0xefeb, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3539, gbc.sp());
        EXPECT(0xefed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefeb));
        EXPECT(0xc9, gbc.readMem(0xefec));
        // CB C9 0047
        gbc.setState(0xe322, 0x24f9, 0x2280, 0x1c19, 0x9caa, 0x3ac6, 0x1, 0x0);
        gbc.writeMem(0xe322, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x24f9, gbc.sp());
        EXPECT(0xe324, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe322));
        EXPECT(0xc9, gbc.readMem(0xe323));
        // CB C9 0048
        gbc.setState(0x8ebe, 0x7cce, 0x5100, 0xb945, 0x7d0c, 0x3f32, 0x1, 0x1);
        gbc.writeMem(0x8ebe, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7cce, gbc.sp());
        EXPECT(0x8ec0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ebe));
        EXPECT(0xc9, gbc.readMem(0x8ebf));
        // CB C9 0049
        gbc.setState(0x478b, 0xd636, 0xefc0, 0x49f4, 0x8627, 0xa20c, 0x0, 0x1);
        gbc.writeMem(0x478b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xd636, gbc.sp());
        EXPECT(0x478d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 004A
        gbc.setState(0x7f19, 0x60a3, 0x50f0, 0x774c, 0x1b90, 0x7108, 0x1, 0x1);
        gbc.writeMem(0x7f19, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x60a3, gbc.sp());
        EXPECT(0x7f1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 004B
        gbc.setState(0xe96a, 0xc543, 0x6d80, 0xd1c7, 0x9bac, 0xc0f6, 0x1, 0x0);
        gbc.writeMem(0xe96a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xc543, gbc.sp());
        EXPECT(0xe96c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe96a));
        EXPECT(0xc9, gbc.readMem(0xe96b));
        // CB C9 004C
        gbc.setState(0x7060, 0xcc53, 0xea20, 0x6bcf, 0xf7ac, 0xb2a6, 0x0, 0x1);
        gbc.writeMem(0x7060, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xcc53, gbc.sp());
        EXPECT(0x7062, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 004D
        gbc.setState(0x7766, 0x11cb, 0xb680, 0x1216, 0x91fb, 0xd8b2, 0x1, 0x0);
        gbc.writeMem(0x7766, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x11cb, gbc.sp());
        EXPECT(0x7768, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 004E
        gbc.setState(0x941e, 0xcd27, 0xfb40, 0xe0d6, 0x7eb2, 0x6db8, 0x1, 0x1);
        gbc.writeMem(0x941e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xcd27, gbc.sp());
        EXPECT(0x9420, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x941e));
        EXPECT(0xc9, gbc.readMem(0x941f));
        // CB C9 004F
        gbc.setState(0xdaef, 0xbefb, 0x17a0, 0xb024, 0xf188, 0xc0dd, 0x1, 0x1);
        gbc.writeMem(0xdaef, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xbefb, gbc.sp());
        EXPECT(0xdaf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaef));
        EXPECT(0xc9, gbc.readMem(0xdaf0));
        // CB C9 0050
        gbc.setState(0x2f73, 0x37db, 0x3b0, 0x4ad7, 0xd5ad, 0x522, 0x1, 0x1);
        gbc.writeMem(0x2f73, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x37db, gbc.sp());
        EXPECT(0x2f75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0051
        gbc.setState(0x8a3d, 0xe61e, 0xae50, 0xea25, 0xdb4e, 0xbe7c, 0x0, 0x0);
        gbc.writeMem(0x8a3d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe61e, gbc.sp());
        EXPECT(0x8a3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a3d));
        EXPECT(0xc9, gbc.readMem(0x8a3e));
        // CB C9 0052
        gbc.setState(0x610b, 0x750, 0xf950, 0x9040, 0xf29d, 0x66eb, 0x0, 0x0);
        gbc.writeMem(0x610b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x750, gbc.sp());
        EXPECT(0x610d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0053
        gbc.setState(0xe122, 0xd8da, 0x3cf0, 0x93b0, 0xfe07, 0xbc21, 0x1, 0x1);
        gbc.writeMem(0xe122, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xd8da, gbc.sp());
        EXPECT(0xe124, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe122));
        EXPECT(0xc9, gbc.readMem(0xe123));
        // CB C9 0054
        gbc.setState(0xbd4a, 0x2605, 0xab40, 0x2201, 0x4385, 0x7d6d, 0x0, 0x0);
        gbc.writeMem(0xbd4a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x2605, gbc.sp());
        EXPECT(0xbd4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd4a));
        EXPECT(0xc9, gbc.readMem(0xbd4b));
        // CB C9 0055
        gbc.setState(0x594d, 0x355f, 0xd9f0, 0xf921, 0x3b8, 0x2d31, 0x1, 0x0);
        gbc.writeMem(0x594d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x355f, gbc.sp());
        EXPECT(0x594f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0056
        gbc.setState(0x9ecf, 0x13ad, 0x8b40, 0xe226, 0x9b18, 0xaeb8, 0x1, 0x0);
        gbc.writeMem(0x9ecf, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x13ad, gbc.sp());
        EXPECT(0x9ed1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ecf));
        EXPECT(0xc9, gbc.readMem(0x9ed0));
        // CB C9 0057
        gbc.setState(0x5e2, 0x9551, 0xf0e0, 0xdd88, 0x4fe4, 0x4d6f, 0x0, 0x1);
        gbc.writeMem(0x5e2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9551, gbc.sp());
        EXPECT(0x5e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0058
        gbc.setState(0xe155, 0x3e5, 0x650, 0x2e36, 0xeee, 0x1daa, 0x1, 0x0);
        gbc.writeMem(0xe155, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x3e5, gbc.sp());
        EXPECT(0xe157, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe155));
        EXPECT(0xc9, gbc.readMem(0xe156));
        // CB C9 0059
        gbc.setState(0x80d0, 0xeb6a, 0xd8b0, 0x449, 0xe778, 0x807e, 0x1, 0x1);
        gbc.writeMem(0x80d0, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xeb6a, gbc.sp());
        EXPECT(0x80d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80d0));
        EXPECT(0xc9, gbc.readMem(0x80d1));
        // CB C9 005A
        gbc.setState(0xcb8a, 0x3f81, 0x7290, 0x4db2, 0xc8ce, 0xecfe, 0x1, 0x1);
        gbc.writeMem(0xcb8a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x3f81, gbc.sp());
        EXPECT(0xcb8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb8a));
        EXPECT(0xc9, gbc.readMem(0xcb8b));
        // CB C9 005B
        gbc.setState(0xe6c8, 0xe81e, 0xbf50, 0xbba4, 0x85ef, 0x9d09, 0x1, 0x1);
        gbc.writeMem(0xe6c8, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xe81e, gbc.sp());
        EXPECT(0xe6ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6c8));
        EXPECT(0xc9, gbc.readMem(0xe6c9));
        // CB C9 005C
        gbc.setState(0x324, 0xc22b, 0x3180, 0x460b, 0x14ed, 0xc48c, 0x1, 0x1);
        gbc.writeMem(0x324, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xc22b, gbc.sp());
        EXPECT(0x326, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 005D
        gbc.setState(0x4599, 0x3105, 0x1fb0, 0xd9b0, 0xb03e, 0x37b2, 0x1, 0x1);
        gbc.writeMem(0x4599, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x3105, gbc.sp());
        EXPECT(0x459b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 005E
        gbc.setState(0x886c, 0xfc90, 0xa250, 0xa7c8, 0x2bc2, 0x63ff, 0x0, 0x1);
        gbc.writeMem(0x886c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xfc90, gbc.sp());
        EXPECT(0x886e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x886c));
        EXPECT(0xc9, gbc.readMem(0x886d));
        // CB C9 005F
        gbc.setState(0x6544, 0x2113, 0xa630, 0xb5da, 0xc09d, 0xfbda, 0x0, 0x1);
        gbc.writeMem(0x6544, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x2113, gbc.sp());
        EXPECT(0x6546, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0060
        gbc.setState(0xee32, 0x8f0d, 0x78a0, 0xb86f, 0xe866, 0x56e0, 0x1, 0x1);
        gbc.writeMem(0xee32, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x8f0d, gbc.sp());
        EXPECT(0xee34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee32));
        EXPECT(0xc9, gbc.readMem(0xee33));
        // CB C9 0061
        gbc.setState(0x7fa1, 0xc244, 0x2c10, 0x873b, 0xe6, 0xa90e, 0x1, 0x1);
        gbc.writeMem(0x7fa1, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xc244, gbc.sp());
        EXPECT(0x7fa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0062
        gbc.setState(0xcdd8, 0xeec3, 0xef60, 0xb2d7, 0xd4fa, 0xcd31, 0x0, 0x0);
        gbc.writeMem(0xcdd8, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xeec3, gbc.sp());
        EXPECT(0xcdda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdd8));
        EXPECT(0xc9, gbc.readMem(0xcdd9));
        // CB C9 0063
        gbc.setState(0xa3c2, 0x70d2, 0x26a0, 0x9703, 0x8664, 0xd9ad, 0x0, 0x1);
        gbc.writeMem(0xa3c2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x70d2, gbc.sp());
        EXPECT(0xa3c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3c2));
        EXPECT(0xc9, gbc.readMem(0xa3c3));
        // CB C9 0064
        gbc.setState(0x3905, 0xb50a, 0x6670, 0x807d, 0xbf72, 0xc9cc, 0x0, 0x1);
        gbc.writeMem(0x3905, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xb50a, gbc.sp());
        EXPECT(0x3907, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0065
        gbc.setState(0xba9, 0x6b62, 0x1c70, 0x4a7b, 0x18c5, 0xfa73, 0x0, 0x1);
        gbc.writeMem(0xba9, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x6b62, gbc.sp());
        EXPECT(0xbab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0066
        gbc.setState(0x6bc2, 0xb34e, 0xd670, 0x1702, 0x8712, 0x357b, 0x0, 0x1);
        gbc.writeMem(0x6bc2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xb34e, gbc.sp());
        EXPECT(0x6bc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0067
        gbc.setState(0x163a, 0x9d9f, 0x3c90, 0xb76c, 0xed63, 0x7a21, 0x1, 0x1);
        gbc.writeMem(0x163a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x9d9f, gbc.sp());
        EXPECT(0x163c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0068
        gbc.setState(0x5a7f, 0xe5d7, 0x4060, 0xf3ae, 0x7e5d, 0x28fb, 0x1, 0x1);
        gbc.writeMem(0x5a7f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe5d7, gbc.sp());
        EXPECT(0x5a81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0069
        gbc.setState(0x19a, 0x120d, 0xc800, 0x82e2, 0xd2b2, 0x7082, 0x1, 0x0);
        gbc.writeMem(0x19a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x120d, gbc.sp());
        EXPECT(0x19c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 006A
        gbc.setState(0x3553, 0xd152, 0x3ef0, 0x5b67, 0x5adb, 0x9fcb, 0x1, 0x0);
        gbc.writeMem(0x3553, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xd152, gbc.sp());
        EXPECT(0x3555, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 006B
        gbc.setState(0x587d, 0xe9d6, 0x9c60, 0xc4c7, 0xcdf1, 0xe270, 0x1, 0x1);
        gbc.writeMem(0x587d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe9d6, gbc.sp());
        EXPECT(0x587f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 006C
        gbc.setState(0xe09c, 0x5771, 0xb3f0, 0x8bf, 0xb4c, 0xe250, 0x1, 0x1);
        gbc.writeMem(0xe09c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5771, gbc.sp());
        EXPECT(0xe09e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe09c));
        EXPECT(0xc9, gbc.readMem(0xe09d));
        // CB C9 006D
        gbc.setState(0x9157, 0x5efa, 0xdc60, 0xade5, 0xfc7d, 0x3ee4, 0x1, 0x0);
        gbc.writeMem(0x9157, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x5efa, gbc.sp());
        EXPECT(0x9159, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9157));
        EXPECT(0xc9, gbc.readMem(0x9158));
        // CB C9 006E
        gbc.setState(0x892a, 0xe0ea, 0x310, 0x6f2a, 0x6ac1, 0xb464, 0x1, 0x1);
        gbc.writeMem(0x892a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xe0ea, gbc.sp());
        EXPECT(0x892c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x892a));
        EXPECT(0xc9, gbc.readMem(0x892b));
        // CB C9 006F
        gbc.setState(0x9263, 0x4c43, 0xa480, 0xd7cb, 0x5a75, 0xe0ac, 0x0, 0x1);
        gbc.writeMem(0x9263, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x4c43, gbc.sp());
        EXPECT(0x9265, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9263));
        EXPECT(0xc9, gbc.readMem(0x9264));
        // CB C9 0070
        gbc.setState(0x73bb, 0xa734, 0xb0c0, 0x4471, 0xae39, 0x9de0, 0x0, 0x0);
        gbc.writeMem(0x73bb, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xa734, gbc.sp());
        EXPECT(0x73bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0071
        gbc.setState(0x3116, 0x5f08, 0x7390, 0xae78, 0x1c97, 0xddb5, 0x1, 0x1);
        gbc.writeMem(0x3116, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x5f08, gbc.sp());
        EXPECT(0x3118, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0072
        gbc.setState(0x34d5, 0xb943, 0x4140, 0xdc09, 0xbdd4, 0xd9cf, 0x1, 0x0);
        gbc.writeMem(0x34d5, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb943, gbc.sp());
        EXPECT(0x34d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0074
        gbc.setState(0xefb7, 0x22f, 0x3710, 0xc2af, 0x211f, 0xbb68, 0x1, 0x1);
        gbc.writeMem(0xefb7, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x22f, gbc.sp());
        EXPECT(0xefb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefb7));
        EXPECT(0xc9, gbc.readMem(0xefb8));
        // CB C9 0075
        gbc.setState(0x9861, 0xb272, 0xe5c0, 0x9062, 0x44e, 0xe3d7, 0x1, 0x1);
        gbc.writeMem(0x9861, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xb272, gbc.sp());
        EXPECT(0x9863, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9861));
        EXPECT(0xc9, gbc.readMem(0x9862));
        // CB C9 0076
        gbc.setState(0x3807, 0xb656, 0xfe0, 0xa30f, 0x8489, 0x6fc9, 0x0, 0x1);
        gbc.writeMem(0x3807, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xb656, gbc.sp());
        EXPECT(0x3809, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0077
        gbc.setState(0xd3fc, 0x4696, 0x7500, 0xa64d, 0xc167, 0x782c, 0x0, 0x0);
        gbc.writeMem(0xd3fc, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4696, gbc.sp());
        EXPECT(0xd3fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3fc));
        EXPECT(0xc9, gbc.readMem(0xd3fd));
        // CB C9 0078
        gbc.setState(0xe9c4, 0x5d95, 0xb350, 0x4707, 0x84d1, 0xbad3, 0x1, 0x0);
        gbc.writeMem(0xe9c4, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x5d95, gbc.sp());
        EXPECT(0xe9c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9c4));
        EXPECT(0xc9, gbc.readMem(0xe9c5));
        // CB C9 0079
        gbc.setState(0x706e, 0x9ffb, 0xf780, 0x7634, 0x7f7a, 0x7bae, 0x0, 0x1);
        gbc.writeMem(0x706e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x9ffb, gbc.sp());
        EXPECT(0x7070, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 007A
        gbc.setState(0xdd47, 0xfaf8, 0x8de0, 0x1a9, 0x3fa9, 0xaa00, 0x1, 0x1);
        gbc.writeMem(0xdd47, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xfaf8, gbc.sp());
        EXPECT(0xdd49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd47));
        EXPECT(0xc9, gbc.readMem(0xdd48));
        // CB C9 007B
        gbc.setState(0xd471, 0x99d6, 0x9670, 0x3816, 0xe660, 0x6fe9, 0x1, 0x1);
        gbc.writeMem(0xd471, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x99d6, gbc.sp());
        EXPECT(0xd473, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd471));
        EXPECT(0xc9, gbc.readMem(0xd472));
        // CB C9 007C
        gbc.setState(0x4e91, 0xd808, 0xbac0, 0xb3b9, 0x2d73, 0x3103, 0x0, 0x0);
        gbc.writeMem(0x4e91, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xd808, gbc.sp());
        EXPECT(0x4e93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 007D
        gbc.setState(0xc22f, 0x3404, 0xde10, 0x2f7f, 0x7b75, 0x1f, 0x0, 0x0);
        gbc.writeMem(0xc22f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3404, gbc.sp());
        EXPECT(0xc231, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc22f));
        EXPECT(0xc9, gbc.readMem(0xc230));
        // CB C9 007E
        gbc.setState(0x8a7e, 0x5205, 0x190, 0x8a8b, 0x2eb5, 0x75b9, 0x0, 0x0);
        gbc.writeMem(0x8a7e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x5205, gbc.sp());
        EXPECT(0x8a80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a7e));
        EXPECT(0xc9, gbc.readMem(0x8a7f));
        // CB C9 007F
        gbc.setState(0x8188, 0x8534, 0xc7b0, 0xb697, 0xb9e, 0x6b7f, 0x0, 0x1);
        gbc.writeMem(0x8188, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x8534, gbc.sp());
        EXPECT(0x818a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8188));
        EXPECT(0xc9, gbc.readMem(0x8189));
        // CB C9 0080
        gbc.setState(0xe752, 0x8eb0, 0x5c80, 0xbdcc, 0x6612, 0x6c27, 0x1, 0x0);
        gbc.writeMem(0xe752, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8eb0, gbc.sp());
        EXPECT(0xe754, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe752));
        EXPECT(0xc9, gbc.readMem(0xe753));
        // CB C9 0081
        gbc.setState(0x7f3, 0x63ed, 0x7170, 0x701a, 0x391c, 0xf999, 0x1, 0x0);
        gbc.writeMem(0x7f3, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x63ed, gbc.sp());
        EXPECT(0x7f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0082
        gbc.setState(0x6c47, 0x25ff, 0x4dc0, 0xe7c2, 0xaa35, 0x3601, 0x0, 0x1);
        gbc.writeMem(0x6c47, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x25ff, gbc.sp());
        EXPECT(0x6c49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0083
        gbc.setState(0xec, 0x9630, 0x5490, 0x240, 0x2f5e, 0x995f, 0x1, 0x0);
        gbc.writeMem(0xec, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x9630, gbc.sp());
        EXPECT(0xee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0084
        gbc.setState(0x2d94, 0xe54, 0x3620, 0x11c8, 0x65a2, 0x408a, 0x0, 0x1);
        gbc.writeMem(0x2d94, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xe54, gbc.sp());
        EXPECT(0x2d96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0085
        gbc.setState(0xc55a, 0x62ca, 0xe2b0, 0xdf71, 0xe253, 0xe99f, 0x1, 0x0);
        gbc.writeMem(0xc55a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x62ca, gbc.sp());
        EXPECT(0xc55c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc55a));
        EXPECT(0xc9, gbc.readMem(0xc55b));
        // CB C9 0086
        gbc.setState(0x905c, 0x21c6, 0x6010, 0xf75d, 0x310d, 0xd67b, 0x0, 0x1);
        gbc.writeMem(0x905c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x21c6, gbc.sp());
        EXPECT(0x905e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x905c));
        EXPECT(0xc9, gbc.readMem(0x905d));
        // CB C9 0087
        gbc.setState(0x693, 0xd3b8, 0x5500, 0xe54f, 0xbda8, 0x5b2, 0x1, 0x1);
        gbc.writeMem(0x693, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xd3b8, gbc.sp());
        EXPECT(0x695, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0088
        gbc.setState(0x44a0, 0xc6a9, 0x8150, 0x226f, 0x7d2d, 0x1b0f, 0x0, 0x1);
        gbc.writeMem(0x44a0, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xc6a9, gbc.sp());
        EXPECT(0x44a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0089
        gbc.setState(0x95d2, 0x584f, 0xe4e0, 0x802a, 0xc811, 0x7a1a, 0x0, 0x0);
        gbc.writeMem(0x95d2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x584f, gbc.sp());
        EXPECT(0x95d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95d2));
        EXPECT(0xc9, gbc.readMem(0x95d3));
        // CB C9 008A
        gbc.setState(0x1047, 0xe115, 0x4b40, 0x8f19, 0x3b77, 0xf127, 0x0, 0x1);
        gbc.writeMem(0x1047, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xe115, gbc.sp());
        EXPECT(0x1049, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 008B
        gbc.setState(0x29c0, 0x7560, 0xbbd0, 0x5ccf, 0x1434, 0xf571, 0x1, 0x1);
        gbc.writeMem(0x29c0, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7560, gbc.sp());
        EXPECT(0x29c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 008C
        gbc.setState(0xc546, 0xf094, 0xa830, 0xac16, 0xdec1, 0x53f7, 0x0, 0x1);
        gbc.writeMem(0xc546, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xf094, gbc.sp());
        EXPECT(0xc548, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc546));
        EXPECT(0xc9, gbc.readMem(0xc547));
        // CB C9 008D
        gbc.setState(0x14d1, 0xf4e6, 0xb340, 0x3636, 0x6b09, 0xf14c, 0x0, 0x1);
        gbc.writeMem(0x14d1, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xf4e6, gbc.sp());
        EXPECT(0x14d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 008E
        gbc.setState(0x116c, 0x1d8f, 0xe380, 0xfa8d, 0x5d73, 0x86f4, 0x1, 0x0);
        gbc.writeMem(0x116c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x1d8f, gbc.sp());
        EXPECT(0x116e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 008F
        gbc.setState(0xaf00, 0xbed9, 0x8e00, 0xc7d6, 0x4049, 0x46be, 0x1, 0x1);
        gbc.writeMem(0xaf00, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xbed9, gbc.sp());
        EXPECT(0xaf02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf00));
        EXPECT(0xc9, gbc.readMem(0xaf01));
        // CB C9 0090
        gbc.setState(0x2ae4, 0x5ca2, 0x1b00, 0x610b, 0x262, 0xfc2d, 0x1, 0x0);
        gbc.writeMem(0x2ae4, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x5ca2, gbc.sp());
        EXPECT(0x2ae6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0091
        gbc.setState(0x300c, 0xeb8e, 0x7fd0, 0xe41c, 0xae53, 0xcce1, 0x1, 0x1);
        gbc.writeMem(0x300c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xeb8e, gbc.sp());
        EXPECT(0x300e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0092
        gbc.setState(0xcac7, 0x8ec7, 0xe330, 0xf091, 0xffca, 0x276c, 0x0, 0x0);
        gbc.writeMem(0xcac7, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x8ec7, gbc.sp());
        EXPECT(0xcac9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcac7));
        EXPECT(0xc9, gbc.readMem(0xcac8));
        // CB C9 0093
        gbc.setState(0xe5b1, 0x87e4, 0x23a0, 0xd2bf, 0xa9e, 0x4942, 0x0, 0x0);
        gbc.writeMem(0xe5b1, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x87e4, gbc.sp());
        EXPECT(0xe5b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5b1));
        EXPECT(0xc9, gbc.readMem(0xe5b2));
        // CB C9 0094
        gbc.setState(0x8fc3, 0xed90, 0x63b0, 0x834b, 0x7010, 0x21b2, 0x0, 0x1);
        gbc.writeMem(0x8fc3, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xed90, gbc.sp());
        EXPECT(0x8fc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fc3));
        EXPECT(0xc9, gbc.readMem(0x8fc4));
        // CB C9 0096
        gbc.setState(0x7273, 0x92a0, 0xc240, 0x62d9, 0x2cbb, 0xa796, 0x1, 0x0);
        gbc.writeMem(0x7273, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x92a0, gbc.sp());
        EXPECT(0x7275, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0097
        gbc.setState(0xcb39, 0xf382, 0xdf50, 0x7006, 0xb7f1, 0x793c, 0x0, 0x0);
        gbc.writeMem(0xcb39, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf382, gbc.sp());
        EXPECT(0xcb3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb39));
        EXPECT(0xc9, gbc.readMem(0xcb3a));
        // CB C9 0098
        gbc.setState(0x612e, 0xe48, 0x6590, 0xcee8, 0x2b80, 0xe9a, 0x0, 0x0);
        gbc.writeMem(0x612e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xe48, gbc.sp());
        EXPECT(0x6130, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0099
        gbc.setState(0xae5b, 0xafa5, 0x2cc0, 0x2404, 0x3512, 0x8dba, 0x0, 0x0);
        gbc.writeMem(0xae5b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xafa5, gbc.sp());
        EXPECT(0xae5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae5b));
        EXPECT(0xc9, gbc.readMem(0xae5c));
        // CB C9 009A
        gbc.setState(0xcb11, 0x2b18, 0x1010, 0x9391, 0x26dc, 0x482, 0x1, 0x0);
        gbc.writeMem(0xcb11, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x2b18, gbc.sp());
        EXPECT(0xcb13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb11));
        EXPECT(0xc9, gbc.readMem(0xcb12));
        // CB C9 009B
        gbc.setState(0x8a82, 0x6661, 0x3fc0, 0x34cd, 0x84b5, 0x59d5, 0x1, 0x1);
        gbc.writeMem(0x8a82, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x6661, gbc.sp());
        EXPECT(0x8a84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a82));
        EXPECT(0xc9, gbc.readMem(0x8a83));
        // CB C9 009C
        gbc.setState(0x470d, 0xa840, 0x1920, 0x67cf, 0x77c5, 0x86e5, 0x0, 0x0);
        gbc.writeMem(0x470d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xa840, gbc.sp());
        EXPECT(0x470f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 009D
        gbc.setState(0x889a, 0xf3c4, 0xde60, 0xc19b, 0xf188, 0xb273, 0x1, 0x0);
        gbc.writeMem(0x889a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xf3c4, gbc.sp());
        EXPECT(0x889c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x889a));
        EXPECT(0xc9, gbc.readMem(0x889b));
        // CB C9 009E
        gbc.setState(0x6a26, 0x4004, 0x7c40, 0x84a5, 0xc039, 0xa8fc, 0x1, 0x0);
        gbc.writeMem(0x6a26, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4004, gbc.sp());
        EXPECT(0x6a28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 009F
        gbc.setState(0xdf1f, 0x6fdf, 0xac40, 0xcd70, 0x506c, 0x5152, 0x1, 0x1);
        gbc.writeMem(0xdf1f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x6fdf, gbc.sp());
        EXPECT(0xdf21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf1f));
        EXPECT(0xc9, gbc.readMem(0xdf20));
        // CB C9 00A0
        gbc.setState(0xdb14, 0xf4, 0xb8e0, 0xbc2f, 0xc2e7, 0x725f, 0x0, 0x1);
        gbc.writeMem(0xdb14, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf4, gbc.sp());
        EXPECT(0xdb16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb14));
        EXPECT(0xc9, gbc.readMem(0xdb15));
        // CB C9 00A1
        gbc.setState(0x8201, 0x2821, 0x1ca0, 0x5520, 0xc0f5, 0x5e83, 0x1, 0x1);
        gbc.writeMem(0x8201, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x2821, gbc.sp());
        EXPECT(0x8203, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8201));
        EXPECT(0xc9, gbc.readMem(0x8202));
        // CB C9 00A2
        gbc.setState(0xae55, 0x25f8, 0x8ac0, 0xc4fe, 0x8f1f, 0x871a, 0x1, 0x1);
        gbc.writeMem(0xae55, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x25f8, gbc.sp());
        EXPECT(0xae57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae55));
        EXPECT(0xc9, gbc.readMem(0xae56));
        // CB C9 00A3
        gbc.setState(0xa7da, 0xba47, 0x5840, 0xd4d7, 0x6acc, 0x3e6a, 0x0, 0x1);
        gbc.writeMem(0xa7da, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xba47, gbc.sp());
        EXPECT(0xa7dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7da));
        EXPECT(0xc9, gbc.readMem(0xa7db));
        // CB C9 00A4
        gbc.setState(0x8989, 0x125d, 0xcc10, 0x2b56, 0x7395, 0xb7fa, 0x1, 0x1);
        gbc.writeMem(0x8989, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x125d, gbc.sp());
        EXPECT(0x898b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8989));
        EXPECT(0xc9, gbc.readMem(0x898a));
        // CB C9 00A5
        gbc.setState(0xe8bf, 0xddd9, 0xbfd0, 0x99f7, 0xf704, 0xa14c, 0x1, 0x1);
        gbc.writeMem(0xe8bf, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xddd9, gbc.sp());
        EXPECT(0xe8c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8bf));
        EXPECT(0xc9, gbc.readMem(0xe8c0));
        // CB C9 00A6
        gbc.setState(0x2997, 0xeebb, 0x8880, 0xb57f, 0xbc40, 0x56ec, 0x0, 0x0);
        gbc.writeMem(0x2997, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xeebb, gbc.sp());
        EXPECT(0x2999, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 00A7
        gbc.setState(0xe3f5, 0x5989, 0xcaa0, 0xc728, 0xabad, 0x97ea, 0x1, 0x1);
        gbc.writeMem(0xe3f5, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x5989, gbc.sp());
        EXPECT(0xe3f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3f5));
        EXPECT(0xc9, gbc.readMem(0xe3f6));
        // CB C9 00A8
        gbc.setState(0x856c, 0x7da8, 0x3e60, 0x5479, 0xc504, 0xc2fa, 0x0, 0x0);
        gbc.writeMem(0x856c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x7da8, gbc.sp());
        EXPECT(0x856e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x856c));
        EXPECT(0xc9, gbc.readMem(0x856d));
        // CB C9 00A9
        gbc.setState(0x85db, 0x6e03, 0x59d0, 0x333d, 0xbb35, 0xbf7a, 0x0, 0x0);
        gbc.writeMem(0x85db, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x6e03, gbc.sp());
        EXPECT(0x85dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85db));
        EXPECT(0xc9, gbc.readMem(0x85dc));
        // CB C9 00AA
        gbc.setState(0x798d, 0x1d50, 0x8150, 0xfce4, 0x59fd, 0xfea2, 0x1, 0x1);
        gbc.writeMem(0x798d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x1d50, gbc.sp());
        EXPECT(0x798f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 00AB
        gbc.setState(0xdc75, 0x649b, 0x7a30, 0x98ad, 0xe18c, 0x7f41, 0x0, 0x1);
        gbc.writeMem(0xdc75, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x649b, gbc.sp());
        EXPECT(0xdc77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc75));
        EXPECT(0xc9, gbc.readMem(0xdc76));
        // CB C9 00AC
        gbc.setState(0xa2d0, 0x8ad9, 0x45d0, 0x222e, 0x836, 0x2cc7, 0x1, 0x0);
        gbc.writeMem(0xa2d0, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x8ad9, gbc.sp());
        EXPECT(0xa2d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2d0));
        EXPECT(0xc9, gbc.readMem(0xa2d1));
        // CB C9 00AE
        gbc.setState(0xd7b6, 0x7c98, 0x1540, 0x5aa6, 0xdbb3, 0x7e97, 0x1, 0x0);
        gbc.writeMem(0xd7b6, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x7c98, gbc.sp());
        EXPECT(0xd7b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7b6));
        EXPECT(0xc9, gbc.readMem(0xd7b7));
        // CB C9 00AF
        gbc.setState(0x2fd5, 0xc5bb, 0x2030, 0x143d, 0x32ae, 0xb2af, 0x1, 0x0);
        gbc.writeMem(0x2fd5, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xc5bb, gbc.sp());
        EXPECT(0x2fd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 00B0
        gbc.setState(0x30a9, 0xa181, 0xc5c0, 0x700e, 0xad8b, 0x5c4e, 0x0, 0x1);
        gbc.writeMem(0x30a9, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xa181, gbc.sp());
        EXPECT(0x30ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 00B1
        gbc.setState(0x6a1, 0x81b9, 0x28b0, 0x95ee, 0xf5a6, 0xf941, 0x1, 0x0);
        gbc.writeMem(0x6a1, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x81b9, gbc.sp());
        EXPECT(0x6a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 00B2
        gbc.setState(0xb6f2, 0x1fe8, 0x4680, 0x3867, 0x5e09, 0x3dc7, 0x0, 0x0);
        gbc.writeMem(0xb6f2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x1fe8, gbc.sp());
        EXPECT(0xb6f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6f2));
        EXPECT(0xc9, gbc.readMem(0xb6f3));
        // CB C9 00B3
        gbc.setState(0x8b2, 0xe260, 0x9470, 0x257c, 0x3729, 0x5679, 0x0, 0x0);
        gbc.writeMem(0x8b2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xe260, gbc.sp());
        EXPECT(0x8b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 00B4
        gbc.setState(0x9b32, 0x1d1c, 0xa220, 0x5ca8, 0xfcd3, 0xc99, 0x0, 0x0);
        gbc.writeMem(0x9b32, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x1d1c, gbc.sp());
        EXPECT(0x9b34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b32));
        EXPECT(0xc9, gbc.readMem(0x9b33));
        // CB C9 00B5
        gbc.setState(0x1abf, 0xcae8, 0xacd0, 0xc8cc, 0x8e58, 0x248d, 0x1, 0x1);
        gbc.writeMem(0x1abf, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xcae8, gbc.sp());
        EXPECT(0x1ac1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 00B6
        gbc.setState(0x48c0, 0x1d39, 0xc470, 0x518, 0x180a, 0xe481, 0x1, 0x0);
        gbc.writeMem(0x48c0, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x1d39, gbc.sp());
        EXPECT(0x48c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 00B7
        gbc.setState(0x11f7, 0x6576, 0xbae0, 0x9d7a, 0xcb73, 0xf946, 0x1, 0x0);
        gbc.writeMem(0x11f7, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x6576, gbc.sp());
        EXPECT(0x11f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 00B8
        gbc.setState(0x356e, 0x7859, 0xea0, 0xbf6d, 0x71aa, 0xac9d, 0x1, 0x0);
        gbc.writeMem(0x356e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x7859, gbc.sp());
        EXPECT(0x3570, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 00B9
        gbc.setState(0x4029, 0x7488, 0x18d0, 0xcb7a, 0x7b57, 0x873, 0x0, 0x0);
        gbc.writeMem(0x4029, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x7488, gbc.sp());
        EXPECT(0x402b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 00BA
        gbc.setState(0x822a, 0xe7c4, 0xaee0, 0x8b22, 0xf028, 0xcdd4, 0x0, 0x1);
        gbc.writeMem(0x822a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe7c4, gbc.sp());
        EXPECT(0x822c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x822a));
        EXPECT(0xc9, gbc.readMem(0x822b));
        // CB C9 00BB
        gbc.setState(0xd395, 0x9ab, 0xfc0, 0xd246, 0x2a5a, 0xc9df, 0x1, 0x0);
        gbc.writeMem(0xd395, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x9ab, gbc.sp());
        EXPECT(0xd397, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd395));
        EXPECT(0xc9, gbc.readMem(0xd396));
        // CB C9 00BC
        gbc.setState(0xa5cc, 0x82b0, 0x33c0, 0x24be, 0xaf7a, 0xf954, 0x1, 0x0);
        gbc.writeMem(0xa5cc, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x82b0, gbc.sp());
        EXPECT(0xa5ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5cc));
        EXPECT(0xc9, gbc.readMem(0xa5cd));
        // CB C9 00BD
        gbc.setState(0x6914, 0xb791, 0x80a0, 0x99ea, 0xf2af, 0x1754, 0x1, 0x1);
        gbc.writeMem(0x6914, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xb791, gbc.sp());
        EXPECT(0x6916, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 00BE
        gbc.setState(0x3956, 0xec31, 0x22d0, 0xfb4, 0xf87a, 0x8a02, 0x0, 0x0);
        gbc.writeMem(0x3956, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xec31, gbc.sp());
        EXPECT(0x3958, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 00BF
        gbc.setState(0xafcf, 0x6988, 0x8b80, 0x5653, 0x9cf7, 0x884, 0x1, 0x1);
        gbc.writeMem(0xafcf, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6988, gbc.sp());
        EXPECT(0xafd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafcf));
        EXPECT(0xc9, gbc.readMem(0xafd0));
        // CB C9 00C0
        gbc.setState(0x4336, 0x177b, 0x4da0, 0x4b48, 0x59bb, 0x31e0, 0x1, 0x1);
        gbc.writeMem(0x4336, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x177b, gbc.sp());
        EXPECT(0x4338, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 00C1
        gbc.setState(0x4283, 0x2b96, 0xbb0, 0x98f8, 0xf9f3, 0x2ac6, 0x1, 0x1);
        gbc.writeMem(0x4283, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x2b96, gbc.sp());
        EXPECT(0x4285, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 00C2
        gbc.setState(0x91d2, 0x5104, 0xf3f0, 0x31ad, 0x549e, 0x5c5c, 0x1, 0x0);
        gbc.writeMem(0x91d2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5104, gbc.sp());
        EXPECT(0x91d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91d2));
        EXPECT(0xc9, gbc.readMem(0x91d3));
        // CB C9 00C3
        gbc.setState(0x590e, 0x4b57, 0xdb50, 0x49aa, 0xca7e, 0x2f0b, 0x0, 0x1);
        gbc.writeMem(0x590e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4b57, gbc.sp());
        EXPECT(0x5910, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 00C4
        gbc.setState(0xd702, 0x8604, 0x6b30, 0xd42f, 0x896a, 0x7289, 0x0, 0x1);
        gbc.writeMem(0xd702, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8604, gbc.sp());
        EXPECT(0xd704, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd702));
        EXPECT(0xc9, gbc.readMem(0xd703));
        // CB C9 00C5
        gbc.setState(0xbdac, 0x28e2, 0x7c00, 0xc7ee, 0xb8dc, 0xd876, 0x1, 0x0);
        gbc.writeMem(0xbdac, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x28e2, gbc.sp());
        EXPECT(0xbdae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdac));
        EXPECT(0xc9, gbc.readMem(0xbdad));
        // CB C9 00C6
        gbc.setState(0x232b, 0x57ee, 0xc300, 0xc2c8, 0x7e0b, 0x2cf0, 0x1, 0x0);
        gbc.writeMem(0x232b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x57ee, gbc.sp());
        EXPECT(0x232d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 00C7
        gbc.setState(0x613e, 0x2d6d, 0x9cb0, 0x2311, 0x2c77, 0x74e4, 0x0, 0x1);
        gbc.writeMem(0x613e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2d6d, gbc.sp());
        EXPECT(0x6140, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 00C8
        gbc.setState(0x3151, 0x950e, 0x630, 0xf221, 0xc9a6, 0x894f, 0x0, 0x0);
        gbc.writeMem(0x3151, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x950e, gbc.sp());
        EXPECT(0x3153, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 00CA
        gbc.setState(0x3f47, 0x9b9b, 0x2f50, 0x8748, 0x578d, 0x4bb2, 0x1, 0x0);
        gbc.writeMem(0x3f47, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x9b9b, gbc.sp());
        EXPECT(0x3f49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 00CB
        gbc.setState(0x2583, 0x5607, 0x45d0, 0x928f, 0x169, 0xd9e, 0x0, 0x1);
        gbc.writeMem(0x2583, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x5607, gbc.sp());
        EXPECT(0x2585, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 00CC
        gbc.setState(0x7863, 0xfc1, 0xc700, 0x5179, 0x9e6f, 0x7eaf, 0x1, 0x1);
        gbc.writeMem(0x7863, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xfc1, gbc.sp());
        EXPECT(0x7865, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 00CD
        gbc.setState(0x7d4a, 0xf12, 0xb9d0, 0xba81, 0xa448, 0x2f26, 0x1, 0x1);
        gbc.writeMem(0x7d4a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf12, gbc.sp());
        EXPECT(0x7d4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 00CE
        gbc.setState(0xc080, 0xe26d, 0xf4c0, 0xdab, 0x6d4a, 0x4ae, 0x1, 0x1);
        gbc.writeMem(0xc080, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe26d, gbc.sp());
        EXPECT(0xc082, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc080));
        EXPECT(0xc9, gbc.readMem(0xc081));
        // CB C9 00CF
        gbc.setState(0xb53e, 0xd678, 0x30, 0x399f, 0x7a40, 0x2867, 0x0, 0x0);
        gbc.writeMem(0xb53e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd678, gbc.sp());
        EXPECT(0xb540, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb53e));
        EXPECT(0xc9, gbc.readMem(0xb53f));
        // CB C9 00D0
        gbc.setState(0x5c00, 0x704c, 0x4850, 0x6e18, 0x9df0, 0xab16, 0x1, 0x1);
        gbc.writeMem(0x5c00, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x704c, gbc.sp());
        EXPECT(0x5c02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 00D1
        gbc.setState(0x3091, 0x9cb9, 0x6f20, 0xfe4e, 0x5b11, 0xd327, 0x0, 0x1);
        gbc.writeMem(0x3091, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9cb9, gbc.sp());
        EXPECT(0x3093, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 00D2
        gbc.setState(0xab02, 0x355f, 0x460, 0xb305, 0xda7b, 0x3a2e, 0x0, 0x0);
        gbc.writeMem(0xab02, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x355f, gbc.sp());
        EXPECT(0xab04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab02));
        EXPECT(0xc9, gbc.readMem(0xab03));
        // CB C9 00D3
        gbc.setState(0xbb8d, 0x3c0d, 0x7d80, 0xbe7f, 0x1e25, 0xdd4c, 0x1, 0x0);
        gbc.writeMem(0xbb8d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x3c0d, gbc.sp());
        EXPECT(0xbb8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb8d));
        EXPECT(0xc9, gbc.readMem(0xbb8e));
        // CB C9 00D4
        gbc.setState(0xa31d, 0x5dab, 0x90a0, 0xf157, 0x51b9, 0x129a, 0x1, 0x0);
        gbc.writeMem(0xa31d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5dab, gbc.sp());
        EXPECT(0xa31f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa31d));
        EXPECT(0xc9, gbc.readMem(0xa31e));
        // CB C9 00D5
        gbc.setState(0xd1f4, 0x7377, 0x8ee0, 0x17bf, 0x969a, 0x8afb, 0x1, 0x0);
        gbc.writeMem(0xd1f4, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x7377, gbc.sp());
        EXPECT(0xd1f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1f4));
        EXPECT(0xc9, gbc.readMem(0xd1f5));
        // CB C9 00D6
        gbc.setState(0x7d09, 0x792b, 0x7ab0, 0xbfe5, 0xfbd2, 0x4602, 0x0, 0x1);
        gbc.writeMem(0x7d09, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x792b, gbc.sp());
        EXPECT(0x7d0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 00D7
        gbc.setState(0xeec3, 0xed61, 0x190, 0xffba, 0x46b4, 0x2d45, 0x1, 0x1);
        gbc.writeMem(0xeec3, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xed61, gbc.sp());
        EXPECT(0xeec5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeec3));
        EXPECT(0xc9, gbc.readMem(0xeec4));
        // CB C9 00D8
        gbc.setState(0xc076, 0x6828, 0x55e0, 0x9530, 0xdd61, 0x1ca0, 0x0, 0x1);
        gbc.writeMem(0xc076, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6828, gbc.sp());
        EXPECT(0xc078, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc076));
        EXPECT(0xc9, gbc.readMem(0xc077));
        // CB C9 00D9
        gbc.setState(0x6e8c, 0x51fd, 0x56b0, 0xce28, 0x800e, 0xfb70, 0x0, 0x1);
        gbc.writeMem(0x6e8c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x51fd, gbc.sp());
        EXPECT(0x6e8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 00DA
        gbc.setState(0x8530, 0xf184, 0x1870, 0x57b3, 0xd9f1, 0xa69c, 0x1, 0x1);
        gbc.writeMem(0x8530, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xf184, gbc.sp());
        EXPECT(0x8532, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8530));
        EXPECT(0xc9, gbc.readMem(0x8531));
        // CB C9 00DB
        gbc.setState(0xbe5a, 0x8daa, 0xa8a0, 0xb952, 0xd40f, 0x94b3, 0x1, 0x0);
        gbc.writeMem(0xbe5a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x8daa, gbc.sp());
        EXPECT(0xbe5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe5a));
        EXPECT(0xc9, gbc.readMem(0xbe5b));
        // CB C9 00DC
        gbc.setState(0x5951, 0x5651, 0xe4d0, 0x2145, 0xc8ad, 0x69e0, 0x1, 0x1);
        gbc.writeMem(0x5951, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x5651, gbc.sp());
        EXPECT(0x5953, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 00DD
        gbc.setState(0x1048, 0xbd7f, 0x4f80, 0xd125, 0x9c69, 0x9f1f, 0x1, 0x0);
        gbc.writeMem(0x1048, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xbd7f, gbc.sp());
        EXPECT(0x104a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 00DE
        gbc.setState(0x9fab, 0xdf8c, 0x4840, 0xf5b0, 0x8080, 0xa3b1, 0x0, 0x0);
        gbc.writeMem(0x9fab, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xdf8c, gbc.sp());
        EXPECT(0x9fad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fab));
        EXPECT(0xc9, gbc.readMem(0x9fac));
        // CB C9 00DF
        gbc.setState(0x2ff7, 0x902c, 0xd0b0, 0x8da2, 0xa247, 0xf5d3, 0x1, 0x0);
        gbc.writeMem(0x2ff7, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x902c, gbc.sp());
        EXPECT(0x2ff9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 00E0
        gbc.setState(0x4d46, 0xc67, 0x84a0, 0x1d69, 0x3d14, 0xf78b, 0x1, 0x1);
        gbc.writeMem(0x4d46, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xc67, gbc.sp());
        EXPECT(0x4d48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 00E1
        gbc.setState(0x8e83, 0x277c, 0x99d0, 0xaead, 0x15cc, 0x497, 0x0, 0x0);
        gbc.writeMem(0x8e83, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x277c, gbc.sp());
        EXPECT(0x8e85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e83));
        EXPECT(0xc9, gbc.readMem(0x8e84));
        // CB C9 00E2
        gbc.setState(0x9621, 0xf1f7, 0x5da0, 0x54ed, 0x6e03, 0x1334, 0x1, 0x0);
        gbc.writeMem(0x9621, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xf1f7, gbc.sp());
        EXPECT(0x9623, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9621));
        EXPECT(0xc9, gbc.readMem(0x9622));
        // CB C9 00E4
        gbc.setState(0x75e0, 0xd0c3, 0xe0a0, 0xa915, 0x7cbe, 0xf67e, 0x0, 0x1);
        gbc.writeMem(0x75e0, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xd0c3, gbc.sp());
        EXPECT(0x75e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 00E5
        gbc.setState(0x4a5, 0x5b4f, 0x20f0, 0x21a, 0x4f93, 0xf784, 0x1, 0x0);
        gbc.writeMem(0x4a5, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x5b4f, gbc.sp());
        EXPECT(0x4a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 00E6
        gbc.setState(0xebdd, 0x580c, 0x9b10, 0xdea8, 0xda49, 0x5f18, 0x0, 0x0);
        gbc.writeMem(0xebdd, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x580c, gbc.sp());
        EXPECT(0xebdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebdd));
        EXPECT(0xc9, gbc.readMem(0xebde));
        // CB C9 00E7
        gbc.setState(0x4637, 0xa51b, 0x7570, 0xfffb, 0x4f88, 0x736, 0x1, 0x1);
        gbc.writeMem(0x4637, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xa51b, gbc.sp());
        EXPECT(0x4639, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 00E8
        gbc.setState(0x37db, 0xf05e, 0x5a20, 0xaf36, 0xdd1a, 0x5e02, 0x0, 0x0);
        gbc.writeMem(0x37db, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xf05e, gbc.sp());
        EXPECT(0x37dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 00E9
        gbc.setState(0x26a0, 0x3914, 0x51c0, 0x8046, 0xf39, 0xb61d, 0x0, 0x0);
        gbc.writeMem(0x26a0, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x3914, gbc.sp());
        EXPECT(0x26a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 00EA
        gbc.setState(0xb383, 0xbb0b, 0xd670, 0xc08f, 0x54d, 0xb9c1, 0x1, 0x1);
        gbc.writeMem(0xb383, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xbb0b, gbc.sp());
        EXPECT(0xb385, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb383));
        EXPECT(0xc9, gbc.readMem(0xb384));
        // CB C9 00EB
        gbc.setState(0x5c20, 0x87b5, 0x7990, 0xb4b1, 0x8990, 0x5fd1, 0x0, 0x0);
        gbc.writeMem(0x5c20, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x87b5, gbc.sp());
        EXPECT(0x5c22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 00EC
        gbc.setState(0xdf5d, 0x2fa2, 0x2c10, 0x229d, 0xad88, 0xf6ae, 0x1, 0x0);
        gbc.writeMem(0xdf5d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x2fa2, gbc.sp());
        EXPECT(0xdf5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf5d));
        EXPECT(0xc9, gbc.readMem(0xdf5e));
        // CB C9 00ED
        gbc.setState(0x36c0, 0x274c, 0xe6b0, 0x36e0, 0x7d8a, 0xff39, 0x1, 0x1);
        gbc.writeMem(0x36c0, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x274c, gbc.sp());
        EXPECT(0x36c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 00EE
        gbc.setState(0x37be, 0x157c, 0xaf50, 0xe1b0, 0x4b90, 0xda83, 0x0, 0x0);
        gbc.writeMem(0x37be, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x157c, gbc.sp());
        EXPECT(0x37c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 00EF
        gbc.setState(0x4c1a, 0xf93f, 0xe940, 0x194c, 0x40c5, 0x7dab, 0x1, 0x1);
        gbc.writeMem(0x4c1a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf93f, gbc.sp());
        EXPECT(0x4c1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 00F0
        gbc.setState(0xe5d5, 0x27fb, 0x2910, 0x6dba, 0x4519, 0xe292, 0x1, 0x0);
        gbc.writeMem(0xe5d5, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x27fb, gbc.sp());
        EXPECT(0xe5d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5d5));
        EXPECT(0xc9, gbc.readMem(0xe5d6));
        // CB C9 00F1
        gbc.setState(0xb9d5, 0xc5f, 0x2490, 0x6012, 0x9b01, 0x84c1, 0x1, 0x0);
        gbc.writeMem(0xb9d5, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xc5f, gbc.sp());
        EXPECT(0xb9d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9d5));
        EXPECT(0xc9, gbc.readMem(0xb9d6));
        // CB C9 00F2
        gbc.setState(0x3253, 0x3100, 0xabc0, 0xd267, 0x1e0, 0x9735, 0x0, 0x0);
        gbc.writeMem(0x3253, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x3100, gbc.sp());
        EXPECT(0x3255, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 00F3
        gbc.setState(0x51b7, 0xcdb, 0xd970, 0xddea, 0x4867, 0xbbfe, 0x0, 0x1);
        gbc.writeMem(0x51b7, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xcdb, gbc.sp());
        EXPECT(0x51b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 00F4
        gbc.setState(0xae3f, 0x65fd, 0x2d10, 0x195e, 0xdc6b, 0x1c6e, 0x0, 0x1);
        gbc.writeMem(0xae3f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x65fd, gbc.sp());
        EXPECT(0xae41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae3f));
        EXPECT(0xc9, gbc.readMem(0xae40));
        // CB C9 00F5
        gbc.setState(0xb270, 0x68e0, 0x4020, 0xddb7, 0x9fbe, 0xcb17, 0x1, 0x0);
        gbc.writeMem(0xb270, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x68e0, gbc.sp());
        EXPECT(0xb272, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb270));
        EXPECT(0xc9, gbc.readMem(0xb271));
        // CB C9 00F6
        gbc.setState(0x11bb, 0xee06, 0x9fa0, 0x39b1, 0x4777, 0x16b6, 0x0, 0x1);
        gbc.writeMem(0x11bb, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xee06, gbc.sp());
        EXPECT(0x11bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 00F7
        gbc.setState(0x1c4d, 0xe010, 0x33b0, 0xc536, 0x2e32, 0x3421, 0x0, 0x1);
        gbc.writeMem(0x1c4d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe010, gbc.sp());
        EXPECT(0x1c4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 00F8
        gbc.setState(0x2439, 0x31b9, 0x9780, 0x3751, 0x9602, 0xa952, 0x0, 0x0);
        gbc.writeMem(0x2439, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x31b9, gbc.sp());
        EXPECT(0x243b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 00F9
        gbc.setState(0x5bfc, 0xb4b9, 0x6570, 0x6c70, 0x2c13, 0xba29, 0x1, 0x0);
        gbc.writeMem(0x5bfc, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xb4b9, gbc.sp());
        EXPECT(0x5bfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 00FA
        gbc.setState(0x880c, 0x14e, 0xbe80, 0x8169, 0x1bf7, 0xa801, 0x0, 0x0);
        gbc.writeMem(0x880c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x14e, gbc.sp());
        EXPECT(0x880e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x880c));
        EXPECT(0xc9, gbc.readMem(0x880d));
        // CB C9 00FC
        gbc.setState(0x567d, 0x85de, 0xd00, 0xefee, 0xc04d, 0x96ca, 0x0, 0x0);
        gbc.writeMem(0x567d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x85de, gbc.sp());
        EXPECT(0x567f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 00FD
        gbc.setState(0xcee8, 0x35c7, 0x14c0, 0xda52, 0x2d76, 0xc0de, 0x1, 0x1);
        gbc.writeMem(0xcee8, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x35c7, gbc.sp());
        EXPECT(0xceea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcee8));
        EXPECT(0xc9, gbc.readMem(0xcee9));
        // CB C9 00FE
        gbc.setState(0xcecf, 0x37dc, 0xc570, 0xdc9c, 0x4b47, 0x32b3, 0x1, 0x1);
        gbc.writeMem(0xcecf, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x37dc, gbc.sp());
        EXPECT(0xced1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcecf));
        EXPECT(0xc9, gbc.readMem(0xced0));
        // CB C9 00FF
        gbc.setState(0xb6a2, 0x4517, 0xa210, 0xf40e, 0xc6cd, 0x6b3a, 0x0, 0x1);
        gbc.writeMem(0xb6a2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4517, gbc.sp());
        EXPECT(0xb6a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6a2));
        EXPECT(0xc9, gbc.readMem(0xb6a3));
        // CB C9 0100
        gbc.setState(0x8e8f, 0xec2d, 0x4f0, 0x3805, 0x9c28, 0xcaf4, 0x0, 0x1);
        gbc.writeMem(0x8e8f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xec2d, gbc.sp());
        EXPECT(0x8e91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e8f));
        EXPECT(0xc9, gbc.readMem(0x8e90));
        // CB C9 0101
        gbc.setState(0x987, 0x7b2c, 0xe830, 0x4473, 0x7460, 0x5b2b, 0x1, 0x1);
        gbc.writeMem(0x987, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x7b2c, gbc.sp());
        EXPECT(0x989, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0102
        gbc.setState(0x702a, 0x74ff, 0x840, 0x71ed, 0xe095, 0xc34f, 0x1, 0x1);
        gbc.writeMem(0x702a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x74ff, gbc.sp());
        EXPECT(0x702c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0103
        gbc.setState(0x52de, 0x4f37, 0x8cd0, 0x484f, 0x3b75, 0x3108, 0x1, 0x0);
        gbc.writeMem(0x52de, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x4f37, gbc.sp());
        EXPECT(0x52e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0104
        gbc.setState(0x4d7a, 0x930d, 0x6680, 0xb476, 0x2050, 0xecdd, 0x1, 0x1);
        gbc.writeMem(0x4d7a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x930d, gbc.sp());
        EXPECT(0x4d7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0105
        gbc.setState(0x81f6, 0xaea7, 0x8040, 0x6a64, 0x90a0, 0xb68b, 0x0, 0x1);
        gbc.writeMem(0x81f6, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xaea7, gbc.sp());
        EXPECT(0x81f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81f6));
        EXPECT(0xc9, gbc.readMem(0x81f7));
        // CB C9 0106
        gbc.setState(0x9cb7, 0xc678, 0xb970, 0x14a1, 0x8e2, 0x9ebf, 0x0, 0x1);
        gbc.writeMem(0x9cb7, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xc678, gbc.sp());
        EXPECT(0x9cb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cb7));
        EXPECT(0xc9, gbc.readMem(0x9cb8));
        // CB C9 0107
        gbc.setState(0x73f9, 0x70e, 0x4910, 0x9ffe, 0x42bb, 0x78ea, 0x1, 0x1);
        gbc.writeMem(0x73f9, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x70e, gbc.sp());
        EXPECT(0x73fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0108
        gbc.setState(0xa02c, 0x1d92, 0xc850, 0x12fa, 0xae06, 0xb8d2, 0x1, 0x0);
        gbc.writeMem(0xa02c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x1d92, gbc.sp());
        EXPECT(0xa02e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa02c));
        EXPECT(0xc9, gbc.readMem(0xa02d));
        // CB C9 0109
        gbc.setState(0xdaba, 0x55c2, 0x850, 0x2604, 0x1f05, 0xaccb, 0x1, 0x0);
        gbc.writeMem(0xdaba, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x55c2, gbc.sp());
        EXPECT(0xdabc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaba));
        EXPECT(0xc9, gbc.readMem(0xdabb));
        // CB C9 010A
        gbc.setState(0xeb55, 0x74d2, 0xe300, 0xd4aa, 0x77c4, 0xa455, 0x1, 0x0);
        gbc.writeMem(0xeb55, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x74d2, gbc.sp());
        EXPECT(0xeb57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb55));
        EXPECT(0xc9, gbc.readMem(0xeb56));
        // CB C9 010B
        gbc.setState(0xae26, 0x67a7, 0xa3b0, 0x1298, 0xe3ca, 0x3b54, 0x0, 0x1);
        gbc.writeMem(0xae26, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x67a7, gbc.sp());
        EXPECT(0xae28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae26));
        EXPECT(0xc9, gbc.readMem(0xae27));
        // CB C9 010C
        gbc.setState(0x2b0f, 0x1a37, 0xd140, 0x4bf0, 0x5afb, 0xf4cd, 0x1, 0x0);
        gbc.writeMem(0x2b0f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x1a37, gbc.sp());
        EXPECT(0x2b11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 010D
        gbc.setState(0x66e5, 0x7579, 0xf0, 0x386b, 0x7dc6, 0x264a, 0x0, 0x1);
        gbc.writeMem(0x66e5, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x7579, gbc.sp());
        EXPECT(0x66e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 010E
        gbc.setState(0xcb51, 0x18ea, 0x6b60, 0x28ca, 0x84d4, 0xa619, 0x0, 0x0);
        gbc.writeMem(0xcb51, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x18ea, gbc.sp());
        EXPECT(0xcb53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb51));
        EXPECT(0xc9, gbc.readMem(0xcb52));
        // CB C9 010F
        gbc.setState(0xadd4, 0x9f6f, 0x2680, 0xc769, 0x3684, 0x8e5c, 0x1, 0x0);
        gbc.writeMem(0xadd4, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x9f6f, gbc.sp());
        EXPECT(0xadd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadd4));
        EXPECT(0xc9, gbc.readMem(0xadd5));
        // CB C9 0110
        gbc.setState(0x33e4, 0x85fb, 0x7e80, 0x22af, 0x6561, 0xcd48, 0x1, 0x1);
        gbc.writeMem(0x33e4, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x85fb, gbc.sp());
        EXPECT(0x33e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0111
        gbc.setState(0x6fe1, 0xe3c, 0x7060, 0x30bb, 0x6b4c, 0x6e43, 0x0, 0x1);
        gbc.writeMem(0x6fe1, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe3c, gbc.sp());
        EXPECT(0x6fe3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0112
        gbc.setState(0xb306, 0x4d14, 0xe640, 0xabca, 0x65cd, 0x73b9, 0x1, 0x1);
        gbc.writeMem(0xb306, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x4d14, gbc.sp());
        EXPECT(0xb308, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb306));
        EXPECT(0xc9, gbc.readMem(0xb307));
        // CB C9 0113
        gbc.setState(0x2edc, 0xe4ec, 0xbc60, 0x6231, 0x9fca, 0x24e9, 0x1, 0x0);
        gbc.writeMem(0x2edc, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xe4ec, gbc.sp());
        EXPECT(0x2ede, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0114
        gbc.setState(0xce3b, 0xc8ac, 0xe760, 0x58b6, 0xf59a, 0x3dc4, 0x0, 0x1);
        gbc.writeMem(0xce3b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xc8ac, gbc.sp());
        EXPECT(0xce3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce3b));
        EXPECT(0xc9, gbc.readMem(0xce3c));
        // CB C9 0115
        gbc.setState(0xe718, 0xacab, 0xc660, 0xb79c, 0xc983, 0x6ccb, 0x1, 0x0);
        gbc.writeMem(0xe718, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xacab, gbc.sp());
        EXPECT(0xe71a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe718));
        EXPECT(0xc9, gbc.readMem(0xe719));
        // CB C9 0116
        gbc.setState(0x130d, 0x6dbd, 0xb2f0, 0xc391, 0x4220, 0x8476, 0x1, 0x0);
        gbc.writeMem(0x130d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6dbd, gbc.sp());
        EXPECT(0x130f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0117
        gbc.setState(0x59df, 0xc82c, 0x5930, 0x7880, 0x8e91, 0xde8b, 0x0, 0x0);
        gbc.writeMem(0x59df, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xc82c, gbc.sp());
        EXPECT(0x59e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0118
        gbc.setState(0x9cfc, 0xeda7, 0x1080, 0x3ab9, 0x4db6, 0x58d3, 0x0, 0x0);
        gbc.writeMem(0x9cfc, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xeda7, gbc.sp());
        EXPECT(0x9cfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cfc));
        EXPECT(0xc9, gbc.readMem(0x9cfd));
        // CB C9 0119
        gbc.setState(0x4d3c, 0xdae9, 0x20e0, 0x2738, 0x3384, 0x6395, 0x1, 0x1);
        gbc.writeMem(0x4d3c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xdae9, gbc.sp());
        EXPECT(0x4d3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 011A
        gbc.setState(0x9d4b, 0xf36f, 0x4a80, 0x8864, 0xeb8d, 0x8e46, 0x0, 0x0);
        gbc.writeMem(0x9d4b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xf36f, gbc.sp());
        EXPECT(0x9d4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d4b));
        EXPECT(0xc9, gbc.readMem(0x9d4c));
        // CB C9 011B
        gbc.setState(0x1b5b, 0x14d7, 0x9ae0, 0x45b2, 0x22e0, 0x82bc, 0x0, 0x0);
        gbc.writeMem(0x1b5b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x14d7, gbc.sp());
        EXPECT(0x1b5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 011C
        gbc.setState(0x38a4, 0xd0e6, 0x7990, 0x1059, 0x7a20, 0xe2a, 0x0, 0x0);
        gbc.writeMem(0x38a4, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xd0e6, gbc.sp());
        EXPECT(0x38a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 011D
        gbc.setState(0x694c, 0xcde0, 0x2540, 0xc92, 0xdfb0, 0x14df, 0x1, 0x1);
        gbc.writeMem(0x694c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xcde0, gbc.sp());
        EXPECT(0x694e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 011E
        gbc.setState(0xb67, 0x154f, 0xaaa0, 0xf224, 0xd368, 0x68a0, 0x0, 0x0);
        gbc.writeMem(0xb67, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x154f, gbc.sp());
        EXPECT(0xb69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 011F
        gbc.setState(0x691, 0xbedb, 0xf850, 0x9977, 0x154f, 0xca48, 0x1, 0x1);
        gbc.writeMem(0x691, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xbedb, gbc.sp());
        EXPECT(0x693, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0120
        gbc.setState(0x56b3, 0x86f5, 0xb960, 0x8b51, 0xce68, 0xdff4, 0x0, 0x1);
        gbc.writeMem(0x56b3, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x86f5, gbc.sp());
        EXPECT(0x56b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0121
        gbc.setState(0xe115, 0xb2de, 0xbf20, 0xc1da, 0xa583, 0xe1f5, 0x1, 0x1);
        gbc.writeMem(0xe115, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xb2de, gbc.sp());
        EXPECT(0xe117, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe115));
        EXPECT(0xc9, gbc.readMem(0xe116));
        // CB C9 0122
        gbc.setState(0xe8be, 0xdd0f, 0xb10, 0xb01a, 0xff47, 0xb024, 0x0, 0x0);
        gbc.writeMem(0xe8be, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xdd0f, gbc.sp());
        EXPECT(0xe8c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8be));
        EXPECT(0xc9, gbc.readMem(0xe8bf));
        // CB C9 0123
        gbc.setState(0xd981, 0x7484, 0x5e30, 0xeeb9, 0x7b1f, 0x98af, 0x0, 0x1);
        gbc.writeMem(0xd981, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x7484, gbc.sp());
        EXPECT(0xd983, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd981));
        EXPECT(0xc9, gbc.readMem(0xd982));
        // CB C9 0124
        gbc.setState(0x2730, 0xff49, 0xd220, 0x87b6, 0x51a1, 0xaedf, 0x1, 0x0);
        gbc.writeMem(0x2730, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xff49, gbc.sp());
        EXPECT(0x2732, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0125
        gbc.setState(0xdc3f, 0x91e2, 0x81f0, 0x6162, 0x35f3, 0x2f92, 0x0, 0x1);
        gbc.writeMem(0xdc3f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x91e2, gbc.sp());
        EXPECT(0xdc41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc3f));
        EXPECT(0xc9, gbc.readMem(0xdc40));
        // CB C9 0126
        gbc.setState(0xb6f7, 0xc26a, 0xa030, 0xd5f5, 0xafda, 0xf461, 0x1, 0x1);
        gbc.writeMem(0xb6f7, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xc26a, gbc.sp());
        EXPECT(0xb6f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6f7));
        EXPECT(0xc9, gbc.readMem(0xb6f8));
        // CB C9 0127
        gbc.setState(0xcd3a, 0x3967, 0x5300, 0xeafd, 0xfb81, 0x8716, 0x1, 0x0);
        gbc.writeMem(0xcd3a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x3967, gbc.sp());
        EXPECT(0xcd3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd3a));
        EXPECT(0xc9, gbc.readMem(0xcd3b));
        // CB C9 0128
        gbc.setState(0xcb9b, 0x950a, 0xc2c0, 0x7caf, 0xf296, 0x4ab5, 0x0, 0x0);
        gbc.writeMem(0xcb9b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x950a, gbc.sp());
        EXPECT(0xcb9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb9b));
        EXPECT(0xc9, gbc.readMem(0xcb9c));
        // CB C9 0129
        gbc.setState(0x2ac0, 0xffbb, 0xd830, 0x63e7, 0xe4f3, 0xede6, 0x0, 0x0);
        gbc.writeMem(0x2ac0, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xffbb, gbc.sp());
        EXPECT(0x2ac2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 012A
        gbc.setState(0x2e00, 0x6c9f, 0xfd60, 0x1e0a, 0xaf05, 0x8ef, 0x1, 0x0);
        gbc.writeMem(0x2e00, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x6c9f, gbc.sp());
        EXPECT(0x2e02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 012C
        gbc.setState(0xbe65, 0x1f0c, 0xe150, 0xe3bc, 0x3935, 0xb8e6, 0x1, 0x0);
        gbc.writeMem(0xbe65, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x1f0c, gbc.sp());
        EXPECT(0xbe67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe65));
        EXPECT(0xc9, gbc.readMem(0xbe66));
        // CB C9 012E
        gbc.setState(0x627a, 0x6d7b, 0xf250, 0xad49, 0x65a7, 0x88f4, 0x1, 0x1);
        gbc.writeMem(0x627a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x6d7b, gbc.sp());
        EXPECT(0x627c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 012F
        gbc.setState(0xd900, 0x561, 0x1450, 0xd759, 0x4580, 0x66f5, 0x1, 0x1);
        gbc.writeMem(0xd900, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x561, gbc.sp());
        EXPECT(0xd902, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd900));
        EXPECT(0xc9, gbc.readMem(0xd901));
        // CB C9 0130
        gbc.setState(0xae6b, 0x9dea, 0xac20, 0x588e, 0x7ce4, 0x7407, 0x0, 0x1);
        gbc.writeMem(0xae6b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9dea, gbc.sp());
        EXPECT(0xae6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae6b));
        EXPECT(0xc9, gbc.readMem(0xae6c));
        // CB C9 0131
        gbc.setState(0x3a83, 0x70b0, 0xead0, 0x59c7, 0x9294, 0xc198, 0x1, 0x1);
        gbc.writeMem(0x3a83, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x70b0, gbc.sp());
        EXPECT(0x3a85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0132
        gbc.setState(0x4dbc, 0x576c, 0x710, 0x5ee8, 0xd3ac, 0x56, 0x1, 0x0);
        gbc.writeMem(0x4dbc, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x576c, gbc.sp());
        EXPECT(0x4dbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0133
        gbc.setState(0x304f, 0xef80, 0x8da0, 0xcbc5, 0xfb7a, 0x3209, 0x0, 0x0);
        gbc.writeMem(0x304f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xef80, gbc.sp());
        EXPECT(0x3051, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0134
        gbc.setState(0xde26, 0x6c0e, 0x7c90, 0xee28, 0x53cf, 0x6eab, 0x0, 0x1);
        gbc.writeMem(0xde26, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x6c0e, gbc.sp());
        EXPECT(0xde28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde26));
        EXPECT(0xc9, gbc.readMem(0xde27));
        // CB C9 0135
        gbc.setState(0xde13, 0x170a, 0xe550, 0xdf72, 0x8ce1, 0x10b7, 0x1, 0x0);
        gbc.writeMem(0xde13, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x170a, gbc.sp());
        EXPECT(0xde15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde13));
        EXPECT(0xc9, gbc.readMem(0xde14));
        // CB C9 0136
        gbc.setState(0x4d40, 0x8344, 0x6660, 0x94d0, 0x9e64, 0xce0d, 0x1, 0x1);
        gbc.writeMem(0x4d40, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8344, gbc.sp());
        EXPECT(0x4d42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0137
        gbc.setState(0x64fc, 0xb748, 0x830, 0x4a43, 0x42b7, 0x5b02, 0x1, 0x1);
        gbc.writeMem(0x64fc, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xb748, gbc.sp());
        EXPECT(0x64fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0138
        gbc.setState(0x6306, 0x8a94, 0x8cc0, 0x246a, 0xfa22, 0x7ac9, 0x0, 0x1);
        gbc.writeMem(0x6306, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x8a94, gbc.sp());
        EXPECT(0x6308, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0139
        gbc.setState(0xc494, 0x6cae, 0xf080, 0xfc0f, 0x76bf, 0x6f5a, 0x0, 0x0);
        gbc.writeMem(0xc494, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x6cae, gbc.sp());
        EXPECT(0xc496, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc494));
        EXPECT(0xc9, gbc.readMem(0xc495));
        // CB C9 013A
        gbc.setState(0x3467, 0xc5bd, 0xba40, 0xb88, 0xbcc4, 0xeb77, 0x0, 0x1);
        gbc.writeMem(0x3467, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc5bd, gbc.sp());
        EXPECT(0x3469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 013B
        gbc.setState(0x6da2, 0x2c91, 0xb10, 0xfe5e, 0x4cdd, 0xebc0, 0x1, 0x1);
        gbc.writeMem(0x6da2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2c91, gbc.sp());
        EXPECT(0x6da4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 013C
        gbc.setState(0x3d05, 0x67e5, 0x5710, 0xa0ce, 0xc919, 0xf59, 0x0, 0x1);
        gbc.writeMem(0x3d05, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x67e5, gbc.sp());
        EXPECT(0x3d07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 013D
        gbc.setState(0x9f5a, 0x9446, 0x4b00, 0xaa94, 0x9da5, 0xed6, 0x1, 0x0);
        gbc.writeMem(0x9f5a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x9446, gbc.sp());
        EXPECT(0x9f5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f5a));
        EXPECT(0xc9, gbc.readMem(0x9f5b));
        // CB C9 013E
        gbc.setState(0x8ff6, 0x22c8, 0x4170, 0x3988, 0xdb6c, 0xbd53, 0x0, 0x1);
        gbc.writeMem(0x8ff6, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x22c8, gbc.sp());
        EXPECT(0x8ff8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ff6));
        EXPECT(0xc9, gbc.readMem(0x8ff7));
        // CB C9 013F
        gbc.setState(0x1c45, 0x2864, 0x3a30, 0xb7a7, 0xdf81, 0xd05f, 0x1, 0x0);
        gbc.writeMem(0x1c45, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x2864, gbc.sp());
        EXPECT(0x1c47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0140
        gbc.setState(0x4444, 0x4d1b, 0xcc50, 0x5b30, 0x57cf, 0xb2a2, 0x1, 0x0);
        gbc.writeMem(0x4444, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x4d1b, gbc.sp());
        EXPECT(0x4446, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0141
        gbc.setState(0x2f47, 0x6614, 0x9f20, 0x3bfc, 0x1e12, 0xd452, 0x1, 0x0);
        gbc.writeMem(0x2f47, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x6614, gbc.sp());
        EXPECT(0x2f49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0142
        gbc.setState(0xb600, 0x1d19, 0x3e00, 0xda5b, 0xeff0, 0x54ea, 0x0, 0x1);
        gbc.writeMem(0xb600, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x1d19, gbc.sp());
        EXPECT(0xb602, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb600));
        EXPECT(0xc9, gbc.readMem(0xb601));
        // CB C9 0143
        gbc.setState(0xdcd6, 0x517f, 0x56f0, 0xe7a7, 0x2c2e, 0x40b7, 0x1, 0x1);
        gbc.writeMem(0xdcd6, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x517f, gbc.sp());
        EXPECT(0xdcd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcd6));
        EXPECT(0xc9, gbc.readMem(0xdcd7));
        // CB C9 0144
        gbc.setState(0xd22c, 0xe2a, 0xad80, 0x6c65, 0x9568, 0x897a, 0x0, 0x1);
        gbc.writeMem(0xd22c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe2a, gbc.sp());
        EXPECT(0xd22e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd22c));
        EXPECT(0xc9, gbc.readMem(0xd22d));
        // CB C9 0145
        gbc.setState(0x19e3, 0x3b59, 0xde00, 0xad36, 0xcd2d, 0xc89, 0x1, 0x0);
        gbc.writeMem(0x19e3, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3b59, gbc.sp());
        EXPECT(0x19e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0146
        gbc.setState(0x8f2f, 0xf06, 0x3740, 0x5a86, 0x7570, 0xf7d5, 0x0, 0x0);
        gbc.writeMem(0x8f2f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xf06, gbc.sp());
        EXPECT(0x8f31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f2f));
        EXPECT(0xc9, gbc.readMem(0x8f30));
        // CB C9 0147
        gbc.setState(0xa89, 0x4a36, 0xf570, 0xc214, 0x1d31, 0x68cf, 0x1, 0x1);
        gbc.writeMem(0xa89, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x4a36, gbc.sp());
        EXPECT(0xa8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0148
        gbc.setState(0x714e, 0xe84d, 0xbcd0, 0xee56, 0xfc54, 0x86a1, 0x1, 0x1);
        gbc.writeMem(0x714e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe84d, gbc.sp());
        EXPECT(0x7150, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0149
        gbc.setState(0xd8c9, 0x3d4a, 0x1eb0, 0x73e3, 0xc510, 0xf2d6, 0x0, 0x0);
        gbc.writeMem(0xd8c9, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x3d4a, gbc.sp());
        EXPECT(0xd8cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8c9));
        EXPECT(0xc9, gbc.readMem(0xd8ca));
        // CB C9 014A
        gbc.setState(0x1da1, 0xc1e0, 0x3f10, 0x5fd2, 0xb42a, 0x50e4, 0x0, 0x1);
        gbc.writeMem(0x1da1, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xc1e0, gbc.sp());
        EXPECT(0x1da3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 014B
        gbc.setState(0xd69f, 0x6df1, 0x5d40, 0xfbad, 0x7ad3, 0x2818, 0x0, 0x0);
        gbc.writeMem(0xd69f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6df1, gbc.sp());
        EXPECT(0xd6a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd69f));
        EXPECT(0xc9, gbc.readMem(0xd6a0));
        // CB C9 014C
        gbc.setState(0x97b6, 0x417c, 0x6f40, 0x24cd, 0x8f81, 0xd37b, 0x1, 0x0);
        gbc.writeMem(0x97b6, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x417c, gbc.sp());
        EXPECT(0x97b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97b6));
        EXPECT(0xc9, gbc.readMem(0x97b7));
        // CB C9 014D
        gbc.setState(0xdb46, 0x3640, 0xa150, 0x72c5, 0xc6f0, 0xa73b, 0x0, 0x1);
        gbc.writeMem(0xdb46, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3640, gbc.sp());
        EXPECT(0xdb48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb46));
        EXPECT(0xc9, gbc.readMem(0xdb47));
        // CB C9 014E
        gbc.setState(0xa366, 0x4bfd, 0x5800, 0x881e, 0xcae7, 0x9f84, 0x1, 0x1);
        gbc.writeMem(0xa366, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x4bfd, gbc.sp());
        EXPECT(0xa368, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa366));
        EXPECT(0xc9, gbc.readMem(0xa367));
        // CB C9 014F
        gbc.setState(0xc718, 0xf15b, 0xa650, 0x4ead, 0x8ce4, 0x579d, 0x1, 0x1);
        gbc.writeMem(0xc718, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xf15b, gbc.sp());
        EXPECT(0xc71a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc718));
        EXPECT(0xc9, gbc.readMem(0xc719));
        // CB C9 0150
        gbc.setState(0xcfef, 0x5923, 0x5280, 0x3daa, 0xe4f3, 0x97f1, 0x1, 0x1);
        gbc.writeMem(0xcfef, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x5923, gbc.sp());
        EXPECT(0xcff1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfef));
        EXPECT(0xc9, gbc.readMem(0xcff0));
        // CB C9 0152
        gbc.setState(0x2d33, 0x9e82, 0xfa50, 0x7bd2, 0x9ab0, 0x4ef2, 0x0, 0x0);
        gbc.writeMem(0x2d33, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9e82, gbc.sp());
        EXPECT(0x2d35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0153
        gbc.setState(0x82af, 0xd461, 0xb5a0, 0xa5b5, 0x62bd, 0xcaf1, 0x0, 0x1);
        gbc.writeMem(0x82af, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xd461, gbc.sp());
        EXPECT(0x82b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82af));
        EXPECT(0xc9, gbc.readMem(0x82b0));
        // CB C9 0154
        gbc.setState(0x72ce, 0x35f3, 0x48f0, 0x56d, 0x4c9c, 0xe1e9, 0x0, 0x1);
        gbc.writeMem(0x72ce, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x35f3, gbc.sp());
        EXPECT(0x72d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0155
        gbc.setState(0x596d, 0x95f4, 0x8910, 0x13b2, 0x66db, 0x4448, 0x1, 0x1);
        gbc.writeMem(0x596d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x95f4, gbc.sp());
        EXPECT(0x596f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0156
        gbc.setState(0xce1f, 0x245f, 0xdc20, 0xb3af, 0x79c7, 0xd466, 0x0, 0x0);
        gbc.writeMem(0xce1f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x245f, gbc.sp());
        EXPECT(0xce21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce1f));
        EXPECT(0xc9, gbc.readMem(0xce20));
        // CB C9 0157
        gbc.setState(0x9b8d, 0x3bfe, 0xf6a0, 0xab4, 0xac3b, 0xa276, 0x1, 0x0);
        gbc.writeMem(0x9b8d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x3bfe, gbc.sp());
        EXPECT(0x9b8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b8d));
        EXPECT(0xc9, gbc.readMem(0x9b8e));
        // CB C9 0158
        gbc.setState(0x95b9, 0xfc11, 0x91b0, 0x40e, 0x45c6, 0x53cf, 0x0, 0x0);
        gbc.writeMem(0x95b9, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xfc11, gbc.sp());
        EXPECT(0x95bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95b9));
        EXPECT(0xc9, gbc.readMem(0x95ba));
        // CB C9 0159
        gbc.setState(0x6911, 0xdd6b, 0x62b0, 0xc271, 0x167, 0x4015, 0x1, 0x1);
        gbc.writeMem(0x6911, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xdd6b, gbc.sp());
        EXPECT(0x6913, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 015B
        gbc.setState(0x9bb0, 0xaba3, 0x1f0, 0x75f8, 0x2d2a, 0xa8c8, 0x0, 0x1);
        gbc.writeMem(0x9bb0, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xaba3, gbc.sp());
        EXPECT(0x9bb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bb0));
        EXPECT(0xc9, gbc.readMem(0x9bb1));
        // CB C9 015C
        gbc.setState(0x5539, 0x29d5, 0x7080, 0xf903, 0x4fac, 0x296b, 0x0, 0x0);
        gbc.writeMem(0x5539, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x29d5, gbc.sp());
        EXPECT(0x553b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 015E
        gbc.setState(0x3f68, 0xd9d5, 0xd770, 0x9913, 0x21eb, 0x825f, 0x0, 0x1);
        gbc.writeMem(0x3f68, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xd9d5, gbc.sp());
        EXPECT(0x3f6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 015F
        gbc.setState(0x5b63, 0xa6f9, 0x4f20, 0x2396, 0x2472, 0x1570, 0x0, 0x1);
        gbc.writeMem(0x5b63, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xa6f9, gbc.sp());
        EXPECT(0x5b65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0160
        gbc.setState(0xd992, 0x69d6, 0x860, 0x2747, 0xf708, 0xc9de, 0x0, 0x0);
        gbc.writeMem(0xd992, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x69d6, gbc.sp());
        EXPECT(0xd994, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd992));
        EXPECT(0xc9, gbc.readMem(0xd993));
        // CB C9 0161
        gbc.setState(0x4a45, 0x704a, 0x3660, 0x74cd, 0xacef, 0xb191, 0x1, 0x0);
        gbc.writeMem(0x4a45, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x704a, gbc.sp());
        EXPECT(0x4a47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0162
        gbc.setState(0xd411, 0x9389, 0xc20, 0xab8f, 0xcf68, 0x2d4e, 0x0, 0x1);
        gbc.writeMem(0xd411, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x9389, gbc.sp());
        EXPECT(0xd413, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd411));
        EXPECT(0xc9, gbc.readMem(0xd412));
        // CB C9 0163
        gbc.setState(0xe2d9, 0x2f00, 0x6aa0, 0x18ce, 0xcf97, 0xd9f3, 0x1, 0x1);
        gbc.writeMem(0xe2d9, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x2f00, gbc.sp());
        EXPECT(0xe2db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2d9));
        EXPECT(0xc9, gbc.readMem(0xe2da));
        // CB C9 0164
        gbc.setState(0x943a, 0x3bb4, 0xd4a0, 0x2b4d, 0x3bd0, 0x5fde, 0x1, 0x1);
        gbc.writeMem(0x943a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x3bb4, gbc.sp());
        EXPECT(0x943c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x943a));
        EXPECT(0xc9, gbc.readMem(0x943b));
        // CB C9 0165
        gbc.setState(0xd7ec, 0x3049, 0xe4c0, 0x69b2, 0x1928, 0x7477, 0x0, 0x1);
        gbc.writeMem(0xd7ec, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x3049, gbc.sp());
        EXPECT(0xd7ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7ec));
        EXPECT(0xc9, gbc.readMem(0xd7ed));
        // CB C9 0167
        gbc.setState(0xa7a8, 0x80c1, 0x6510, 0x6dd2, 0xb6db, 0xd5f8, 0x0, 0x0);
        gbc.writeMem(0xa7a8, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x80c1, gbc.sp());
        EXPECT(0xa7aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7a8));
        EXPECT(0xc9, gbc.readMem(0xa7a9));
        // CB C9 0168
        gbc.setState(0x8594, 0x65de, 0xce50, 0x4d51, 0x353c, 0x5d0d, 0x0, 0x0);
        gbc.writeMem(0x8594, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x65de, gbc.sp());
        EXPECT(0x8596, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8594));
        EXPECT(0xc9, gbc.readMem(0x8595));
        // CB C9 0169
        gbc.setState(0x5882, 0x14d2, 0x6a20, 0x9377, 0xcdd2, 0xc70a, 0x0, 0x0);
        gbc.writeMem(0x5882, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x14d2, gbc.sp());
        EXPECT(0x5884, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 016A
        gbc.setState(0x4619, 0xada3, 0xe110, 0xc9d4, 0x2238, 0xcacd, 0x0, 0x1);
        gbc.writeMem(0x4619, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xada3, gbc.sp());
        EXPECT(0x461b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 016B
        gbc.setState(0x8128, 0xbf7d, 0xb2b0, 0xc318, 0x9a97, 0x2ffa, 0x1, 0x1);
        gbc.writeMem(0x8128, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xbf7d, gbc.sp());
        EXPECT(0x812a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8128));
        EXPECT(0xc9, gbc.readMem(0x8129));
        // CB C9 016C
        gbc.setState(0x6e25, 0xee4d, 0xf290, 0x1bfd, 0x87eb, 0x1557, 0x1, 0x0);
        gbc.writeMem(0x6e25, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xee4d, gbc.sp());
        EXPECT(0x6e27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 016D
        gbc.setState(0x3f71, 0xe41f, 0x7900, 0xa074, 0x7848, 0x89d8, 0x0, 0x0);
        gbc.writeMem(0x3f71, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xe41f, gbc.sp());
        EXPECT(0x3f73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 016E
        gbc.setState(0x7fb2, 0xbb7d, 0xb5b0, 0x2b3f, 0x2d8d, 0x50e4, 0x1, 0x0);
        gbc.writeMem(0x7fb2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xbb7d, gbc.sp());
        EXPECT(0x7fb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 016F
        gbc.setState(0x4d31, 0xb6a0, 0xe3a0, 0x863e, 0x8905, 0x7314, 0x1, 0x1);
        gbc.writeMem(0x4d31, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb6a0, gbc.sp());
        EXPECT(0x4d33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0170
        gbc.setState(0xa2d7, 0x98a3, 0x5710, 0xc72f, 0x2a69, 0xc9a9, 0x0, 0x1);
        gbc.writeMem(0xa2d7, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x98a3, gbc.sp());
        EXPECT(0xa2d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2d7));
        EXPECT(0xc9, gbc.readMem(0xa2d8));
        // CB C9 0171
        gbc.setState(0xa59c, 0xb73e, 0xffd0, 0x2d9, 0x75ff, 0x978e, 0x1, 0x0);
        gbc.writeMem(0xa59c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xb73e, gbc.sp());
        EXPECT(0xa59e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa59c));
        EXPECT(0xc9, gbc.readMem(0xa59d));
        // CB C9 0172
        gbc.setState(0x1208, 0x2180, 0x7470, 0x1d2a, 0xc4b7, 0x61d0, 0x0, 0x1);
        gbc.writeMem(0x1208, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x2180, gbc.sp());
        EXPECT(0x120a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0173
        gbc.setState(0xbb4d, 0xf8d8, 0xff00, 0x58ed, 0x3352, 0x9eff, 0x1, 0x0);
        gbc.writeMem(0xbb4d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xf8d8, gbc.sp());
        EXPECT(0xbb4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb4d));
        EXPECT(0xc9, gbc.readMem(0xbb4e));
        // CB C9 0175
        gbc.setState(0x44e4, 0x33a7, 0xbbd0, 0x8566, 0x32b8, 0xeb81, 0x1, 0x1);
        gbc.writeMem(0x44e4, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x33a7, gbc.sp());
        EXPECT(0x44e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0176
        gbc.setState(0xa152, 0x1ee, 0xd580, 0xa8e, 0xc3a0, 0xc8d1, 0x0, 0x0);
        gbc.writeMem(0xa152, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x1ee, gbc.sp());
        EXPECT(0xa154, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa152));
        EXPECT(0xc9, gbc.readMem(0xa153));
        // CB C9 0177
        gbc.setState(0xccf4, 0x2211, 0xdf0, 0x7b64, 0x4501, 0x1996, 0x0, 0x0);
        gbc.writeMem(0xccf4, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2211, gbc.sp());
        EXPECT(0xccf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccf4));
        EXPECT(0xc9, gbc.readMem(0xccf5));
        // CB C9 0178
        gbc.setState(0xc14e, 0x821, 0x92a0, 0x9a21, 0xb151, 0xbdcd, 0x0, 0x0);
        gbc.writeMem(0xc14e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x821, gbc.sp());
        EXPECT(0xc150, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc14e));
        EXPECT(0xc9, gbc.readMem(0xc14f));
        // CB C9 0179
        gbc.setState(0x9642, 0x8079, 0xd670, 0x56de, 0xe548, 0x4b9, 0x1, 0x0);
        gbc.writeMem(0x9642, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8079, gbc.sp());
        EXPECT(0x9644, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9642));
        EXPECT(0xc9, gbc.readMem(0x9643));
        // CB C9 017A
        gbc.setState(0x76d4, 0x5726, 0x9fb0, 0x43a4, 0x6b7d, 0x9c7d, 0x1, 0x1);
        gbc.writeMem(0x76d4, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x5726, gbc.sp());
        EXPECT(0x76d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 017B
        gbc.setState(0x5dda, 0x31ae, 0xde40, 0x38a1, 0xd9f3, 0x9105, 0x1, 0x0);
        gbc.writeMem(0x5dda, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x31ae, gbc.sp());
        EXPECT(0x5ddc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 017C
        gbc.setState(0xbc7e, 0x34f0, 0x6a60, 0x13d1, 0x9c07, 0xc48a, 0x1, 0x0);
        gbc.writeMem(0xbc7e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x34f0, gbc.sp());
        EXPECT(0xbc80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc7e));
        EXPECT(0xc9, gbc.readMem(0xbc7f));
        // CB C9 017D
        gbc.setState(0xca17, 0x4d35, 0xc980, 0x4e60, 0x55fe, 0x838e, 0x0, 0x0);
        gbc.writeMem(0xca17, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4d35, gbc.sp());
        EXPECT(0xca19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca17));
        EXPECT(0xc9, gbc.readMem(0xca18));
        // CB C9 017E
        gbc.setState(0x6d2f, 0x2ea8, 0xb1b0, 0x8c47, 0x5c5f, 0x1a24, 0x1, 0x1);
        gbc.writeMem(0x6d2f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x2ea8, gbc.sp());
        EXPECT(0x6d31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 017F
        gbc.setState(0x6926, 0x9876, 0x3020, 0xbd61, 0x7bf7, 0x4efa, 0x0, 0x0);
        gbc.writeMem(0x6926, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x9876, gbc.sp());
        EXPECT(0x6928, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0181
        gbc.setState(0x2e2e, 0xab1a, 0x5030, 0x1dce, 0xd886, 0xcd, 0x0, 0x0);
        gbc.writeMem(0x2e2e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xab1a, gbc.sp());
        EXPECT(0x2e30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0182
        gbc.setState(0x86d6, 0xa584, 0xc60, 0x644, 0xef9e, 0x63ea, 0x0, 0x0);
        gbc.writeMem(0x86d6, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xa584, gbc.sp());
        EXPECT(0x86d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86d6));
        EXPECT(0xc9, gbc.readMem(0x86d7));
        // CB C9 0183
        gbc.setState(0xd2ec, 0x6f11, 0xd4b0, 0x579c, 0xd754, 0xbfa6, 0x1, 0x1);
        gbc.writeMem(0xd2ec, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x6f11, gbc.sp());
        EXPECT(0xd2ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2ec));
        EXPECT(0xc9, gbc.readMem(0xd2ed));
        // CB C9 0184
        gbc.setState(0xc5a4, 0x8495, 0x4de0, 0x2387, 0xb86, 0x4b2c, 0x0, 0x0);
        gbc.writeMem(0xc5a4, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x8495, gbc.sp());
        EXPECT(0xc5a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5a4));
        EXPECT(0xc9, gbc.readMem(0xc5a5));
        // CB C9 0185
        gbc.setState(0xa81f, 0xfae5, 0x3f50, 0x9aa5, 0x3cab, 0x1631, 0x0, 0x0);
        gbc.writeMem(0xa81f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xfae5, gbc.sp());
        EXPECT(0xa821, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa81f));
        EXPECT(0xc9, gbc.readMem(0xa820));
        // CB C9 0186
        gbc.setState(0xd3c1, 0x90b5, 0xa450, 0x38ea, 0x4a7, 0x7bd, 0x1, 0x1);
        gbc.writeMem(0xd3c1, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x90b5, gbc.sp());
        EXPECT(0xd3c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3c1));
        EXPECT(0xc9, gbc.readMem(0xd3c2));
        // CB C9 0187
        gbc.setState(0xa954, 0x2ff6, 0xbea0, 0x3152, 0xefc0, 0x77f6, 0x1, 0x0);
        gbc.writeMem(0xa954, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x2ff6, gbc.sp());
        EXPECT(0xa956, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa954));
        EXPECT(0xc9, gbc.readMem(0xa955));
        // CB C9 0188
        gbc.setState(0x808f, 0x3d00, 0x3190, 0x4e31, 0xfd9, 0x48ab, 0x1, 0x0);
        gbc.writeMem(0x808f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x3d00, gbc.sp());
        EXPECT(0x8091, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x808f));
        EXPECT(0xc9, gbc.readMem(0x8090));
        // CB C9 0189
        gbc.setState(0xd3c3, 0xd76d, 0x8f60, 0xe105, 0x1e47, 0x621e, 0x1, 0x1);
        gbc.writeMem(0xd3c3, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xd76d, gbc.sp());
        EXPECT(0xd3c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3c3));
        EXPECT(0xc9, gbc.readMem(0xd3c4));
        // CB C9 018A
        gbc.setState(0xa2a4, 0x5a72, 0xddd0, 0x49df, 0x61e8, 0x264a, 0x0, 0x0);
        gbc.writeMem(0xa2a4, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x5a72, gbc.sp());
        EXPECT(0xa2a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2a4));
        EXPECT(0xc9, gbc.readMem(0xa2a5));
        // CB C9 018B
        gbc.setState(0xc29c, 0x40b9, 0xf3d0, 0xf9c, 0xa362, 0x778d, 0x1, 0x1);
        gbc.writeMem(0xc29c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x40b9, gbc.sp());
        EXPECT(0xc29e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc29c));
        EXPECT(0xc9, gbc.readMem(0xc29d));
        // CB C9 018C
        gbc.setState(0xdf62, 0x3254, 0xb90, 0x8a6, 0x3c, 0xbe7f, 0x1, 0x1);
        gbc.writeMem(0xdf62, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x3254, gbc.sp());
        EXPECT(0xdf64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf62));
        EXPECT(0xc9, gbc.readMem(0xdf63));
        // CB C9 018D
        gbc.setState(0x153b, 0x2d5c, 0x30f0, 0x6ef6, 0x7983, 0x152e, 0x0, 0x1);
        gbc.writeMem(0x153b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x2d5c, gbc.sp());
        EXPECT(0x153d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 018E
        gbc.setState(0x682d, 0x3230, 0xf7d0, 0x2cd4, 0xe8cd, 0xdb83, 0x0, 0x1);
        gbc.writeMem(0x682d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x3230, gbc.sp());
        EXPECT(0x682f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 018F
        gbc.setState(0x2e4b, 0x594d, 0x5cd0, 0xcf, 0xb4fc, 0xcbd0, 0x1, 0x0);
        gbc.writeMem(0x2e4b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x594d, gbc.sp());
        EXPECT(0x2e4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0190
        gbc.setState(0x8e83, 0x910a, 0xca70, 0xef48, 0x93, 0xe04a, 0x1, 0x1);
        gbc.writeMem(0x8e83, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x910a, gbc.sp());
        EXPECT(0x8e85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e83));
        EXPECT(0xc9, gbc.readMem(0x8e84));
        // CB C9 0191
        gbc.setState(0xba0e, 0xd243, 0x6d30, 0x8223, 0xf5b2, 0x4b6d, 0x1, 0x0);
        gbc.writeMem(0xba0e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xd243, gbc.sp());
        EXPECT(0xba10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba0e));
        EXPECT(0xc9, gbc.readMem(0xba0f));
        // CB C9 0192
        gbc.setState(0x8e7, 0xc992, 0x93a0, 0x84ef, 0xfda5, 0x2a8b, 0x1, 0x1);
        gbc.writeMem(0x8e7, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xc992, gbc.sp());
        EXPECT(0x8e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0193
        gbc.setState(0xd033, 0x342d, 0xe0a0, 0x7e8e, 0xc7d9, 0xe4d1, 0x0, 0x1);
        gbc.writeMem(0xd033, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x342d, gbc.sp());
        EXPECT(0xd035, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd033));
        EXPECT(0xc9, gbc.readMem(0xd034));
        // CB C9 0194
        gbc.setState(0xd6fa, 0x9f71, 0x690, 0x7b9, 0x6a99, 0x62cd, 0x1, 0x1);
        gbc.writeMem(0xd6fa, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x9f71, gbc.sp());
        EXPECT(0xd6fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6fa));
        EXPECT(0xc9, gbc.readMem(0xd6fb));
        // CB C9 0195
        gbc.setState(0x8845, 0xfa9e, 0xf000, 0x8472, 0xcdf0, 0x5606, 0x0, 0x1);
        gbc.writeMem(0x8845, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xfa9e, gbc.sp());
        EXPECT(0x8847, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8845));
        EXPECT(0xc9, gbc.readMem(0x8846));
        // CB C9 0196
        gbc.setState(0x1314, 0x5dc8, 0x8680, 0x5887, 0xab1b, 0xcaee, 0x0, 0x0);
        gbc.writeMem(0x1314, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x5dc8, gbc.sp());
        EXPECT(0x1316, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0197
        gbc.setState(0xdf2f, 0xd39a, 0xd1a0, 0xd864, 0x190c, 0x9f52, 0x0, 0x0);
        gbc.writeMem(0xdf2f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd39a, gbc.sp());
        EXPECT(0xdf31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf2f));
        EXPECT(0xc9, gbc.readMem(0xdf30));
        // CB C9 0198
        gbc.setState(0xb0f9, 0xca90, 0xd170, 0xb3a4, 0x488f, 0xd818, 0x0, 0x0);
        gbc.writeMem(0xb0f9, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xca90, gbc.sp());
        EXPECT(0xb0fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0f9));
        EXPECT(0xc9, gbc.readMem(0xb0fa));
        // CB C9 0199
        gbc.setState(0xcd07, 0x50f6, 0x1d70, 0xfd8, 0x8bc9, 0x631f, 0x1, 0x0);
        gbc.writeMem(0xcd07, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x50f6, gbc.sp());
        EXPECT(0xcd09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd07));
        EXPECT(0xc9, gbc.readMem(0xcd08));
        // CB C9 019A
        gbc.setState(0x8ca3, 0xb8c, 0x3ab0, 0x7167, 0x7843, 0x169f, 0x1, 0x1);
        gbc.writeMem(0x8ca3, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xb8c, gbc.sp());
        EXPECT(0x8ca5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ca3));
        EXPECT(0xc9, gbc.readMem(0x8ca4));
        // CB C9 019B
        gbc.setState(0x6397, 0x98f1, 0x1b30, 0xb806, 0xc90c, 0x78ee, 0x0, 0x0);
        gbc.writeMem(0x6397, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x98f1, gbc.sp());
        EXPECT(0x6399, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 019C
        gbc.setState(0x6e38, 0xee1c, 0x3c0, 0xe5a8, 0x40a7, 0x78d6, 0x0, 0x0);
        gbc.writeMem(0x6e38, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xee1c, gbc.sp());
        EXPECT(0x6e3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 019D
        gbc.setState(0x8873, 0x8368, 0xac30, 0x9aa1, 0x8bd1, 0x35dd, 0x1, 0x0);
        gbc.writeMem(0x8873, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8368, gbc.sp());
        EXPECT(0x8875, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8873));
        EXPECT(0xc9, gbc.readMem(0x8874));
        // CB C9 019E
        gbc.setState(0x4ca9, 0xa967, 0xb030, 0x9a6, 0xd62d, 0x4da6, 0x1, 0x0);
        gbc.writeMem(0x4ca9, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa967, gbc.sp());
        EXPECT(0x4cab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 019F
        gbc.setState(0xe435, 0xaa5c, 0x1e40, 0xe748, 0xbfb4, 0x37a2, 0x1, 0x1);
        gbc.writeMem(0xe435, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xaa5c, gbc.sp());
        EXPECT(0xe437, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe435));
        EXPECT(0xc9, gbc.readMem(0xe436));
        // CB C9 01A0
        gbc.setState(0x3e83, 0x7d6d, 0x80, 0xc861, 0xb2a0, 0xf8ce, 0x1, 0x1);
        gbc.writeMem(0x3e83, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x7d6d, gbc.sp());
        EXPECT(0x3e85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 01A1
        gbc.setState(0x2f03, 0xbf56, 0x1750, 0x4af5, 0x3050, 0x5dee, 0x0, 0x1);
        gbc.writeMem(0x2f03, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xbf56, gbc.sp());
        EXPECT(0x2f05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 01A2
        gbc.setState(0x2bae, 0xc4ce, 0x7b10, 0x4c0a, 0x382c, 0x5e84, 0x0, 0x0);
        gbc.writeMem(0x2bae, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xc4ce, gbc.sp());
        EXPECT(0x2bb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 01A3
        gbc.setState(0xde6d, 0xb5db, 0xdde0, 0x6899, 0xcf20, 0x54f, 0x0, 0x1);
        gbc.writeMem(0xde6d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xb5db, gbc.sp());
        EXPECT(0xde6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde6d));
        EXPECT(0xc9, gbc.readMem(0xde6e));
        // CB C9 01A4
        gbc.setState(0x49ab, 0xb47a, 0x6590, 0xc068, 0x34e2, 0x1de1, 0x0, 0x1);
        gbc.writeMem(0x49ab, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb47a, gbc.sp());
        EXPECT(0x49ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 01A5
        gbc.setState(0x5d53, 0x4117, 0xa240, 0xdad7, 0x13be, 0xcdba, 0x1, 0x1);
        gbc.writeMem(0x5d53, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x4117, gbc.sp());
        EXPECT(0x5d55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 01A6
        gbc.setState(0xd479, 0x9a76, 0x4ff0, 0x877d, 0xa455, 0xca9a, 0x1, 0x1);
        gbc.writeMem(0xd479, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9a76, gbc.sp());
        EXPECT(0xd47b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd479));
        EXPECT(0xc9, gbc.readMem(0xd47a));
        // CB C9 01A7
        gbc.setState(0xeea1, 0x8a78, 0x7e70, 0xa298, 0xa364, 0x73ff, 0x1, 0x0);
        gbc.writeMem(0xeea1, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x8a78, gbc.sp());
        EXPECT(0xeea3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeea1));
        EXPECT(0xc9, gbc.readMem(0xeea2));
        // CB C9 01A8
        gbc.setState(0xcfc7, 0xb5b8, 0x9890, 0x6b9, 0x4726, 0x9334, 0x0, 0x1);
        gbc.writeMem(0xcfc7, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xb5b8, gbc.sp());
        EXPECT(0xcfc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfc7));
        EXPECT(0xc9, gbc.readMem(0xcfc8));
        // CB C9 01A9
        gbc.setState(0x9ed8, 0x3629, 0x4500, 0xe5d, 0x29d9, 0xf9aa, 0x0, 0x0);
        gbc.writeMem(0x9ed8, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x3629, gbc.sp());
        EXPECT(0x9eda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ed8));
        EXPECT(0xc9, gbc.readMem(0x9ed9));
        // CB C9 01AA
        gbc.setState(0xe180, 0x1122, 0x3f20, 0x35f0, 0x1851, 0x770a, 0x1, 0x0);
        gbc.writeMem(0xe180, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x1122, gbc.sp());
        EXPECT(0xe182, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe180));
        EXPECT(0xc9, gbc.readMem(0xe181));
        // CB C9 01AC
        gbc.setState(0x9e62, 0x1894, 0xaf90, 0x863a, 0x672, 0x21fc, 0x1, 0x1);
        gbc.writeMem(0x9e62, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x1894, gbc.sp());
        EXPECT(0x9e64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e62));
        EXPECT(0xc9, gbc.readMem(0x9e63));
        // CB C9 01AD
        gbc.setState(0xc0a1, 0x4595, 0xb320, 0x8e05, 0xb363, 0xb8f7, 0x1, 0x1);
        gbc.writeMem(0xc0a1, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x4595, gbc.sp());
        EXPECT(0xc0a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0a1));
        EXPECT(0xc9, gbc.readMem(0xc0a2));
        // CB C9 01AE
        gbc.setState(0xa335, 0x5949, 0x59f0, 0xb608, 0xe642, 0x956, 0x1, 0x0);
        gbc.writeMem(0xa335, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x5949, gbc.sp());
        EXPECT(0xa337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa335));
        EXPECT(0xc9, gbc.readMem(0xa336));
        // CB C9 01AF
        gbc.setState(0xb505, 0x58ca, 0x230, 0x224f, 0x8f7a, 0x280e, 0x1, 0x1);
        gbc.writeMem(0xb505, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x58ca, gbc.sp());
        EXPECT(0xb507, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb505));
        EXPECT(0xc9, gbc.readMem(0xb506));
        // CB C9 01B0
        gbc.setState(0x1c5b, 0x4737, 0x2da0, 0x669f, 0xee69, 0x8934, 0x1, 0x0);
        gbc.writeMem(0x1c5b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4737, gbc.sp());
        EXPECT(0x1c5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 01B2
        gbc.setState(0x1534, 0x6d2a, 0xa640, 0xe34c, 0x2fe5, 0x7c6d, 0x0, 0x0);
        gbc.writeMem(0x1534, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x6d2a, gbc.sp());
        EXPECT(0x1536, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 01B3
        gbc.setState(0x2254, 0xe9fb, 0x5330, 0x881d, 0xc7ea, 0x621b, 0x0, 0x0);
        gbc.writeMem(0x2254, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe9fb, gbc.sp());
        EXPECT(0x2256, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 01B4
        gbc.setState(0xb440, 0xd1b6, 0xdb60, 0x2b23, 0xa11d, 0xbbee, 0x0, 0x1);
        gbc.writeMem(0xb440, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd1b6, gbc.sp());
        EXPECT(0xb442, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb440));
        EXPECT(0xc9, gbc.readMem(0xb441));
        // CB C9 01B5
        gbc.setState(0xa9e, 0x7d6, 0x1d30, 0xf09, 0xe342, 0xf936, 0x0, 0x0);
        gbc.writeMem(0xa9e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x7d6, gbc.sp());
        EXPECT(0xaa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 01B6
        gbc.setState(0x8081, 0xe99e, 0xc4b0, 0x258, 0x17ea, 0x1a46, 0x0, 0x1);
        gbc.writeMem(0x8081, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xe99e, gbc.sp());
        EXPECT(0x8083, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8081));
        EXPECT(0xc9, gbc.readMem(0x8082));
        // CB C9 01B7
        gbc.setState(0xe64b, 0x28dc, 0x4ae0, 0x2cff, 0x131b, 0x1700, 0x0, 0x1);
        gbc.writeMem(0xe64b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x28dc, gbc.sp());
        EXPECT(0xe64d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe64b));
        EXPECT(0xc9, gbc.readMem(0xe64c));
        // CB C9 01B8
        gbc.setState(0x52f9, 0x39cf, 0x9c0, 0x9c82, 0xecac, 0x5808, 0x1, 0x1);
        gbc.writeMem(0x52f9, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x39cf, gbc.sp());
        EXPECT(0x52fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 01BA
        gbc.setState(0xadf2, 0xacf1, 0x3ca0, 0xc7f2, 0xd7b, 0x6145, 0x1, 0x0);
        gbc.writeMem(0xadf2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xacf1, gbc.sp());
        EXPECT(0xadf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadf2));
        EXPECT(0xc9, gbc.readMem(0xadf3));
        // CB C9 01BB
        gbc.setState(0x4eda, 0xad0f, 0xb3f0, 0xbb9b, 0xdd3c, 0x8d79, 0x0, 0x1);
        gbc.writeMem(0x4eda, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xad0f, gbc.sp());
        EXPECT(0x4edc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 01BC
        gbc.setState(0x8adf, 0x174a, 0xc120, 0x66fe, 0xc19d, 0x9854, 0x1, 0x0);
        gbc.writeMem(0x8adf, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x174a, gbc.sp());
        EXPECT(0x8ae1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8adf));
        EXPECT(0xc9, gbc.readMem(0x8ae0));
        // CB C9 01BD
        gbc.setState(0xdc05, 0xc095, 0x70a0, 0x1287, 0x40b1, 0x7c8, 0x1, 0x0);
        gbc.writeMem(0xdc05, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xc095, gbc.sp());
        EXPECT(0xdc07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc05));
        EXPECT(0xc9, gbc.readMem(0xdc06));
        // CB C9 01BE
        gbc.setState(0xe796, 0x5f56, 0x8cd0, 0xc9e0, 0xcb82, 0x4c42, 0x0, 0x1);
        gbc.writeMem(0xe796, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x5f56, gbc.sp());
        EXPECT(0xe798, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe796));
        EXPECT(0xc9, gbc.readMem(0xe797));
        // CB C9 01BF
        gbc.setState(0x4971, 0x93b9, 0xc380, 0x6cc1, 0x79d5, 0x338e, 0x0, 0x0);
        gbc.writeMem(0x4971, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x93b9, gbc.sp());
        EXPECT(0x4973, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 01C0
        gbc.setState(0x8042, 0x6456, 0x9d40, 0xc75c, 0x1330, 0x82ec, 0x0, 0x1);
        gbc.writeMem(0x8042, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x6456, gbc.sp());
        EXPECT(0x8044, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8042));
        EXPECT(0xc9, gbc.readMem(0x8043));
        // CB C9 01C1
        gbc.setState(0xd949, 0x8b4a, 0x50a0, 0xf7ec, 0x47f0, 0xdf8d, 0x0, 0x0);
        gbc.writeMem(0xd949, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x8b4a, gbc.sp());
        EXPECT(0xd94b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd949));
        EXPECT(0xc9, gbc.readMem(0xd94a));
        // CB C9 01C2
        gbc.setState(0xbaf8, 0x75c7, 0xdad0, 0x1da7, 0x99bc, 0x8a4e, 0x1, 0x1);
        gbc.writeMem(0xbaf8, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x75c7, gbc.sp());
        EXPECT(0xbafa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaf8));
        EXPECT(0xc9, gbc.readMem(0xbaf9));
        // CB C9 01C4
        gbc.setState(0xe333, 0x8a4a, 0xf240, 0x211d, 0x4c8d, 0x2114, 0x0, 0x1);
        gbc.writeMem(0xe333, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x8a4a, gbc.sp());
        EXPECT(0xe335, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe333));
        EXPECT(0xc9, gbc.readMem(0xe334));
        // CB C9 01C5
        gbc.setState(0x5f34, 0xb2df, 0x4070, 0x99d1, 0x1f9f, 0xaaa2, 0x0, 0x1);
        gbc.writeMem(0x5f34, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xb2df, gbc.sp());
        EXPECT(0x5f36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 01C6
        gbc.setState(0xbd25, 0x8221, 0xbc90, 0x87a9, 0xccaa, 0xb957, 0x0, 0x1);
        gbc.writeMem(0xbd25, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x8221, gbc.sp());
        EXPECT(0xbd27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd25));
        EXPECT(0xc9, gbc.readMem(0xbd26));
        // CB C9 01C7
        gbc.setState(0x79e4, 0x4d0, 0x5940, 0x5c81, 0x7419, 0xbe1c, 0x0, 0x0);
        gbc.writeMem(0x79e4, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x4d0, gbc.sp());
        EXPECT(0x79e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 01C8
        gbc.setState(0x2c57, 0xe0fe, 0xcf50, 0xca11, 0x3de3, 0x729b, 0x1, 0x0);
        gbc.writeMem(0x2c57, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe0fe, gbc.sp());
        EXPECT(0x2c59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 01C9
        gbc.setState(0x3296, 0x1835, 0x2860, 0x22bb, 0x5860, 0x5209, 0x1, 0x0);
        gbc.writeMem(0x3296, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x1835, gbc.sp());
        EXPECT(0x3298, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 01CA
        gbc.setState(0xaa1e, 0x717b, 0xd400, 0xaf39, 0x63c6, 0xea7b, 0x1, 0x1);
        gbc.writeMem(0xaa1e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x717b, gbc.sp());
        EXPECT(0xaa20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa1e));
        EXPECT(0xc9, gbc.readMem(0xaa1f));
        // CB C9 01CB
        gbc.setState(0x7710, 0x64f9, 0x6bd0, 0xded, 0xe203, 0x33e6, 0x1, 0x0);
        gbc.writeMem(0x7710, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x64f9, gbc.sp());
        EXPECT(0x7712, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 01CC
        gbc.setState(0x8949, 0xc72b, 0xbcc0, 0x62c5, 0x3a75, 0x5558, 0x1, 0x1);
        gbc.writeMem(0x8949, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc72b, gbc.sp());
        EXPECT(0x894b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8949));
        EXPECT(0xc9, gbc.readMem(0x894a));
        // CB C9 01CD
        gbc.setState(0x4c1e, 0x2187, 0x5c60, 0xb62b, 0x8620, 0x2e9c, 0x1, 0x0);
        gbc.writeMem(0x4c1e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x2187, gbc.sp());
        EXPECT(0x4c20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 01CE
        gbc.setState(0xb5e1, 0xffcf, 0xfe00, 0xf263, 0x1739, 0x3d6a, 0x0, 0x1);
        gbc.writeMem(0xb5e1, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xffcf, gbc.sp());
        EXPECT(0xb5e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5e1));
        EXPECT(0xc9, gbc.readMem(0xb5e2));
        // CB C9 01CF
        gbc.setState(0x103b, 0x9128, 0x3a70, 0x58d0, 0x5d48, 0xf8e3, 0x1, 0x1);
        gbc.writeMem(0x103b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x9128, gbc.sp());
        EXPECT(0x103d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 01D0
        gbc.setState(0x3500, 0x9123, 0x3a0, 0x10ec, 0xd98c, 0x1ae0, 0x1, 0x0);
        gbc.writeMem(0x3500, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9123, gbc.sp());
        EXPECT(0x3502, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 01D1
        gbc.setState(0xbbf5, 0x65e7, 0xc620, 0x2fd2, 0x69a4, 0xcc, 0x0, 0x0);
        gbc.writeMem(0xbbf5, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x65e7, gbc.sp());
        EXPECT(0xbbf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbf5));
        EXPECT(0xc9, gbc.readMem(0xbbf6));
        // CB C9 01D2
        gbc.setState(0x1a3b, 0x4a0a, 0x7750, 0x78f, 0x117a, 0x8889, 0x0, 0x0);
        gbc.writeMem(0x1a3b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x4a0a, gbc.sp());
        EXPECT(0x1a3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 01D3
        gbc.setState(0x2f70, 0x26b4, 0x8840, 0xcf98, 0x62cc, 0xa3d3, 0x1, 0x0);
        gbc.writeMem(0x2f70, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x26b4, gbc.sp());
        EXPECT(0x2f72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 01D4
        gbc.setState(0x22df, 0xde48, 0x330, 0xbf3d, 0x2810, 0x3e5c, 0x1, 0x1);
        gbc.writeMem(0x22df, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xde48, gbc.sp());
        EXPECT(0x22e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 01D5
        gbc.setState(0x123f, 0x6296, 0xcd90, 0xaf5, 0x6f48, 0xc92d, 0x1, 0x0);
        gbc.writeMem(0x123f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x6296, gbc.sp());
        EXPECT(0x1241, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 01D6
        gbc.setState(0xbb1d, 0x72ce, 0x6ac0, 0xf21d, 0xa1ff, 0xc894, 0x1, 0x0);
        gbc.writeMem(0xbb1d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x72ce, gbc.sp());
        EXPECT(0xbb1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb1d));
        EXPECT(0xc9, gbc.readMem(0xbb1e));
        // CB C9 01D7
        gbc.setState(0x6c3c, 0x4072, 0x5080, 0x8153, 0xb48c, 0x457, 0x0, 0x0);
        gbc.writeMem(0x6c3c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x4072, gbc.sp());
        EXPECT(0x6c3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 01D8
        gbc.setState(0x343b, 0xadd9, 0x4b0, 0xdcb4, 0x9ad0, 0xefc8, 0x1, 0x1);
        gbc.writeMem(0x343b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xadd9, gbc.sp());
        EXPECT(0x343d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 01D9
        gbc.setState(0x4308, 0xd7b2, 0x4350, 0xd2b7, 0x1d92, 0x9393, 0x1, 0x1);
        gbc.writeMem(0x4308, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd7b2, gbc.sp());
        EXPECT(0x430a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 01DA
        gbc.setState(0x7d4f, 0x2abb, 0x8760, 0x5094, 0x29be, 0x9ba6, 0x1, 0x0);
        gbc.writeMem(0x7d4f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x2abb, gbc.sp());
        EXPECT(0x7d51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 01DB
        gbc.setState(0x7c0c, 0x964, 0x4fd0, 0x1df7, 0x1c84, 0xfddf, 0x1, 0x0);
        gbc.writeMem(0x7c0c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x964, gbc.sp());
        EXPECT(0x7c0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 01DC
        gbc.setState(0x84c6, 0x98d7, 0x6960, 0xe608, 0x39e6, 0xf0c5, 0x1, 0x0);
        gbc.writeMem(0x84c6, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x98d7, gbc.sp());
        EXPECT(0x84c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84c6));
        EXPECT(0xc9, gbc.readMem(0x84c7));
        // CB C9 01DD
        gbc.setState(0xb61f, 0xe7dd, 0x7110, 0xbaac, 0x5edb, 0x6d51, 0x1, 0x1);
        gbc.writeMem(0xb61f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe7dd, gbc.sp());
        EXPECT(0xb621, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb61f));
        EXPECT(0xc9, gbc.readMem(0xb620));
        // CB C9 01DE
        gbc.setState(0x10b3, 0x626e, 0xa170, 0xeca9, 0xbfda, 0xc612, 0x1, 0x1);
        gbc.writeMem(0x10b3, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x626e, gbc.sp());
        EXPECT(0x10b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 01DF
        gbc.setState(0xe412, 0xf5, 0x5220, 0x6783, 0xd64e, 0x9309, 0x1, 0x1);
        gbc.writeMem(0xe412, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf5, gbc.sp());
        EXPECT(0xe414, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe412));
        EXPECT(0xc9, gbc.readMem(0xe413));
        // CB C9 01E0
        gbc.setState(0x949a, 0x156c, 0xd560, 0xd11c, 0x8c51, 0x892e, 0x0, 0x0);
        gbc.writeMem(0x949a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x156c, gbc.sp());
        EXPECT(0x949c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x949a));
        EXPECT(0xc9, gbc.readMem(0x949b));
        // CB C9 01E1
        gbc.setState(0x2bcb, 0xa91f, 0xb110, 0x3847, 0xc8d, 0x8c89, 0x1, 0x0);
        gbc.writeMem(0x2bcb, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xa91f, gbc.sp());
        EXPECT(0x2bcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 01E2
        gbc.setState(0xad2c, 0xf4b8, 0xdc40, 0xfd93, 0x84c2, 0x77c5, 0x1, 0x0);
        gbc.writeMem(0xad2c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf4b8, gbc.sp());
        EXPECT(0xad2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad2c));
        EXPECT(0xc9, gbc.readMem(0xad2d));
        // CB C9 01E3
        gbc.setState(0x4693, 0x5f39, 0x2890, 0x6a31, 0x1587, 0xb63, 0x0, 0x1);
        gbc.writeMem(0x4693, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x5f39, gbc.sp());
        EXPECT(0x4695, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 01E4
        gbc.setState(0xe4c1, 0x374a, 0x5a90, 0xe047, 0xe99e, 0xc8ca, 0x0, 0x0);
        gbc.writeMem(0xe4c1, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x374a, gbc.sp());
        EXPECT(0xe4c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4c1));
        EXPECT(0xc9, gbc.readMem(0xe4c2));
        // CB C9 01E5
        gbc.setState(0xdbc5, 0xe0cc, 0xfb0, 0x8ddd, 0x6931, 0x9821, 0x1, 0x1);
        gbc.writeMem(0xdbc5, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe0cc, gbc.sp());
        EXPECT(0xdbc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbc5));
        EXPECT(0xc9, gbc.readMem(0xdbc6));
        // CB C9 01E6
        gbc.setState(0x2b2f, 0xd914, 0xcab0, 0xb3af, 0x4951, 0xb564, 0x0, 0x0);
        gbc.writeMem(0x2b2f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd914, gbc.sp());
        EXPECT(0x2b31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 01E7
        gbc.setState(0xb646, 0x2c94, 0x49b0, 0x8bdf, 0x6168, 0x72d4, 0x0, 0x1);
        gbc.writeMem(0xb646, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x2c94, gbc.sp());
        EXPECT(0xb648, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb646));
        EXPECT(0xc9, gbc.readMem(0xb647));
        // CB C9 01E8
        gbc.setState(0x69aa, 0xc91e, 0x6dd0, 0x1fe, 0x5d96, 0x89d3, 0x1, 0x1);
        gbc.writeMem(0x69aa, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xc91e, gbc.sp());
        EXPECT(0x69ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 01E9
        gbc.setState(0x618e, 0x324, 0x4110, 0x942a, 0x2b73, 0x51e9, 0x0, 0x0);
        gbc.writeMem(0x618e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x324, gbc.sp());
        EXPECT(0x6190, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 01EA
        gbc.setState(0x74e4, 0xda27, 0xfd60, 0xb9b3, 0x2ee3, 0x3e21, 0x0, 0x0);
        gbc.writeMem(0x74e4, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xda27, gbc.sp());
        EXPECT(0x74e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 01EB
        gbc.setState(0x989b, 0x23da, 0xc540, 0x861d, 0xf64e, 0x40d6, 0x1, 0x0);
        gbc.writeMem(0x989b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x23da, gbc.sp());
        EXPECT(0x989d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x989b));
        EXPECT(0xc9, gbc.readMem(0x989c));
        // CB C9 01EC
        gbc.setState(0x3f6c, 0xd248, 0x9f10, 0x17bd, 0x62ba, 0x5047, 0x1, 0x0);
        gbc.writeMem(0x3f6c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd248, gbc.sp());
        EXPECT(0x3f6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 01ED
        gbc.setState(0xcef2, 0x94c5, 0x9f80, 0x3a3c, 0x732e, 0x5f3e, 0x1, 0x1);
        gbc.writeMem(0xcef2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x94c5, gbc.sp());
        EXPECT(0xcef4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcef2));
        EXPECT(0xc9, gbc.readMem(0xcef3));
        // CB C9 01EE
        gbc.setState(0x5fbc, 0x9320, 0xa590, 0xe01e, 0xbcc0, 0x60, 0x1, 0x0);
        gbc.writeMem(0x5fbc, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x9320, gbc.sp());
        EXPECT(0x5fbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 01F1
        gbc.setState(0xd754, 0x81db, 0xec0, 0x3ea9, 0x73ca, 0xf0a2, 0x0, 0x0);
        gbc.writeMem(0xd754, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x81db, gbc.sp());
        EXPECT(0xd756, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd754));
        EXPECT(0xc9, gbc.readMem(0xd755));
        // CB C9 01F2
        gbc.setState(0xc128, 0x147e, 0x5c80, 0x1cb8, 0x53d7, 0x36ed, 0x0, 0x1);
        gbc.writeMem(0xc128, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x147e, gbc.sp());
        EXPECT(0xc12a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc128));
        EXPECT(0xc9, gbc.readMem(0xc129));
        // CB C9 01F3
        gbc.setState(0xae62, 0xb6cd, 0xec80, 0x8f21, 0x6968, 0xa22c, 0x1, 0x1);
        gbc.writeMem(0xae62, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xb6cd, gbc.sp());
        EXPECT(0xae64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae62));
        EXPECT(0xc9, gbc.readMem(0xae63));
        // CB C9 01F5
        gbc.setState(0x1646, 0x5d08, 0x4b80, 0x7f02, 0x3091, 0x7251, 0x0, 0x1);
        gbc.writeMem(0x1646, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5d08, gbc.sp());
        EXPECT(0x1648, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 01F6
        gbc.setState(0x9d62, 0x3fa7, 0x6750, 0x16fe, 0xb1fd, 0xba05, 0x0, 0x1);
        gbc.writeMem(0x9d62, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x3fa7, gbc.sp());
        EXPECT(0x9d64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d62));
        EXPECT(0xc9, gbc.readMem(0x9d63));
        // CB C9 01F7
        gbc.setState(0x1ba7, 0xf877, 0x6250, 0x9deb, 0xf83d, 0xd991, 0x1, 0x1);
        gbc.writeMem(0x1ba7, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xf877, gbc.sp());
        EXPECT(0x1ba9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 01F8
        gbc.setState(0x406a, 0x8c49, 0xfb30, 0x3d9a, 0x3517, 0x87ca, 0x1, 0x1);
        gbc.writeMem(0x406a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8c49, gbc.sp());
        EXPECT(0x406c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 01F9
        gbc.setState(0xe53f, 0x90a7, 0x5440, 0x4e84, 0x69ee, 0x544e, 0x0, 0x1);
        gbc.writeMem(0xe53f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x90a7, gbc.sp());
        EXPECT(0xe541, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe53f));
        EXPECT(0xc9, gbc.readMem(0xe540));
        // CB C9 01FA
        gbc.setState(0x99c0, 0x514b, 0x7830, 0x5ed9, 0xefdf, 0x9ac6, 0x1, 0x1);
        gbc.writeMem(0x99c0, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x514b, gbc.sp());
        EXPECT(0x99c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99c0));
        EXPECT(0xc9, gbc.readMem(0x99c1));
        // CB C9 01FB
        gbc.setState(0x9ad1, 0x471c, 0xce80, 0x4172, 0xc349, 0x867c, 0x1, 0x0);
        gbc.writeMem(0x9ad1, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x471c, gbc.sp());
        EXPECT(0x9ad3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ad1));
        EXPECT(0xc9, gbc.readMem(0x9ad2));
        // CB C9 01FC
        gbc.setState(0x2b50, 0xb929, 0x2270, 0xe17e, 0xac90, 0x5414, 0x1, 0x1);
        gbc.writeMem(0x2b50, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb929, gbc.sp());
        EXPECT(0x2b52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 01FD
        gbc.setState(0x790, 0x50f8, 0x55d0, 0xa23c, 0x467b, 0x9762, 0x0, 0x1);
        gbc.writeMem(0x790, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x50f8, gbc.sp());
        EXPECT(0x792, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 01FE
        gbc.setState(0xfcb, 0xea9e, 0x83d0, 0x69f3, 0xc09b, 0x58f3, 0x0, 0x0);
        gbc.writeMem(0xfcb, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xea9e, gbc.sp());
        EXPECT(0xfcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 01FF
        gbc.setState(0xa4ac, 0xf9c9, 0xfbc0, 0xf7e6, 0x1929, 0xe07e, 0x1, 0x1);
        gbc.writeMem(0xa4ac, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xf9c9, gbc.sp());
        EXPECT(0xa4ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4ac));
        EXPECT(0xc9, gbc.readMem(0xa4ad));
        // CB C9 0200
        gbc.setState(0x7bfc, 0xc33e, 0xbfd0, 0xa393, 0xdda7, 0x6e07, 0x1, 0x1);
        gbc.writeMem(0x7bfc, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xc33e, gbc.sp());
        EXPECT(0x7bfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0201
        gbc.setState(0x5e4a, 0x6dc8, 0xe1a0, 0xe9c3, 0xc6a6, 0x4bd1, 0x0, 0x1);
        gbc.writeMem(0x5e4a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x6dc8, gbc.sp());
        EXPECT(0x5e4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0202
        gbc.setState(0xedb6, 0x370b, 0xfae0, 0x798b, 0xd800, 0x23a1, 0x1, 0x1);
        gbc.writeMem(0xedb6, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x370b, gbc.sp());
        EXPECT(0xedb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedb6));
        EXPECT(0xc9, gbc.readMem(0xedb7));
        // CB C9 0204
        gbc.setState(0xa9bd, 0x553e, 0x5900, 0x8af9, 0xdac5, 0xe665, 0x0, 0x0);
        gbc.writeMem(0xa9bd, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x553e, gbc.sp());
        EXPECT(0xa9bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9bd));
        EXPECT(0xc9, gbc.readMem(0xa9be));
        // CB C9 0205
        gbc.setState(0x640b, 0x38e2, 0x1250, 0x6df3, 0xa29d, 0xea80, 0x1, 0x0);
        gbc.writeMem(0x640b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x38e2, gbc.sp());
        EXPECT(0x640d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0206
        gbc.setState(0xa33a, 0x45c0, 0xccd0, 0xb401, 0xc64d, 0xabbe, 0x1, 0x1);
        gbc.writeMem(0xa33a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x45c0, gbc.sp());
        EXPECT(0xa33c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa33a));
        EXPECT(0xc9, gbc.readMem(0xa33b));
        // CB C9 0207
        gbc.setState(0x350c, 0xc7b9, 0x28a0, 0xb1e1, 0xcb92, 0x5af, 0x1, 0x1);
        gbc.writeMem(0x350c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xc7b9, gbc.sp());
        EXPECT(0x350e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0209
        gbc.setState(0x3577, 0xbe62, 0xc0e0, 0x988a, 0x3130, 0x1705, 0x1, 0x0);
        gbc.writeMem(0x3577, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xbe62, gbc.sp());
        EXPECT(0x3579, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 020A
        gbc.setState(0xda08, 0x9999, 0xdc40, 0xf904, 0xfa5a, 0x1263, 0x1, 0x0);
        gbc.writeMem(0xda08, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x9999, gbc.sp());
        EXPECT(0xda0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda08));
        EXPECT(0xc9, gbc.readMem(0xda09));
        // CB C9 020B
        gbc.setState(0xd1a0, 0x305b, 0x7cf0, 0xd1ed, 0xf457, 0xedde, 0x0, 0x1);
        gbc.writeMem(0xd1a0, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x305b, gbc.sp());
        EXPECT(0xd1a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1a0));
        EXPECT(0xc9, gbc.readMem(0xd1a1));
        // CB C9 020C
        gbc.setState(0x1ada, 0x10af, 0x6750, 0xdfd, 0xc9f0, 0x9ec1, 0x0, 0x0);
        gbc.writeMem(0x1ada, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x10af, gbc.sp());
        EXPECT(0x1adc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 020D
        gbc.setState(0x8327, 0x5568, 0x2d00, 0x8eb4, 0x2009, 0xe5d8, 0x0, 0x1);
        gbc.writeMem(0x8327, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5568, gbc.sp());
        EXPECT(0x8329, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8327));
        EXPECT(0xc9, gbc.readMem(0x8328));
        // CB C9 020E
        gbc.setState(0x26b8, 0xa689, 0xd8c0, 0xbfe3, 0x5512, 0xe8f8, 0x1, 0x0);
        gbc.writeMem(0x26b8, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xa689, gbc.sp());
        EXPECT(0x26ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 020F
        gbc.setState(0xa84d, 0x6fd2, 0x2580, 0xfd19, 0xe6ed, 0x3a02, 0x1, 0x0);
        gbc.writeMem(0xa84d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x6fd2, gbc.sp());
        EXPECT(0xa84f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa84d));
        EXPECT(0xc9, gbc.readMem(0xa84e));
        // CB C9 0210
        gbc.setState(0xa388, 0xf455, 0x2380, 0x6393, 0x315, 0x808c, 0x1, 0x1);
        gbc.writeMem(0xa388, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xf455, gbc.sp());
        EXPECT(0xa38a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa388));
        EXPECT(0xc9, gbc.readMem(0xa389));
        // CB C9 0211
        gbc.setState(0x7ce3, 0x6c6e, 0x87e0, 0x6225, 0x7ed6, 0xbdbf, 0x0, 0x0);
        gbc.writeMem(0x7ce3, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x6c6e, gbc.sp());
        EXPECT(0x7ce5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0212
        gbc.setState(0x37ec, 0xa83c, 0xe850, 0xa956, 0x1392, 0x8936, 0x0, 0x1);
        gbc.writeMem(0x37ec, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xa83c, gbc.sp());
        EXPECT(0x37ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0213
        gbc.setState(0x333e, 0x6731, 0x3ec0, 0x2180, 0x2123, 0x9f32, 0x1, 0x0);
        gbc.writeMem(0x333e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x6731, gbc.sp());
        EXPECT(0x3340, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0214
        gbc.setState(0x2fda, 0x9bad, 0x25a0, 0x68d2, 0x9d0b, 0x9408, 0x0, 0x0);
        gbc.writeMem(0x2fda, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x9bad, gbc.sp());
        EXPECT(0x2fdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0215
        gbc.setState(0x80cc, 0xf9b3, 0x2970, 0x144e, 0xc57c, 0x56df, 0x1, 0x1);
        gbc.writeMem(0x80cc, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf9b3, gbc.sp());
        EXPECT(0x80ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80cc));
        EXPECT(0xc9, gbc.readMem(0x80cd));
        // CB C9 0216
        gbc.setState(0x151f, 0x5ddb, 0x9b50, 0xd550, 0xc8e9, 0xaa76, 0x0, 0x0);
        gbc.writeMem(0x151f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x5ddb, gbc.sp());
        EXPECT(0x1521, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0217
        gbc.setState(0x4488, 0x8f94, 0xf340, 0x2480, 0x5052, 0x19a5, 0x1, 0x0);
        gbc.writeMem(0x4488, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8f94, gbc.sp());
        EXPECT(0x448a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0218
        gbc.setState(0x581f, 0xb0d5, 0x3900, 0x29f4, 0x45c8, 0xc8e1, 0x1, 0x1);
        gbc.writeMem(0x581f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb0d5, gbc.sp());
        EXPECT(0x5821, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0219
        gbc.setState(0xb4f2, 0xcbb, 0xc8c0, 0x8da0, 0xfe24, 0xecc6, 0x0, 0x1);
        gbc.writeMem(0xb4f2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xcbb, gbc.sp());
        EXPECT(0xb4f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4f2));
        EXPECT(0xc9, gbc.readMem(0xb4f3));
        // CB C9 021A
        gbc.setState(0x57a8, 0xba8e, 0x6ba0, 0xf154, 0x1a78, 0x6149, 0x1, 0x1);
        gbc.writeMem(0x57a8, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xba8e, gbc.sp());
        EXPECT(0x57aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 021B
        gbc.setState(0x38d1, 0xcc5d, 0xb5f0, 0x778, 0xc490, 0x7c4d, 0x0, 0x1);
        gbc.writeMem(0x38d1, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xcc5d, gbc.sp());
        EXPECT(0x38d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 021C
        gbc.setState(0xb991, 0xaef0, 0x460, 0x32c0, 0x2118, 0xbcec, 0x1, 0x0);
        gbc.writeMem(0xb991, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xaef0, gbc.sp());
        EXPECT(0xb993, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb991));
        EXPECT(0xc9, gbc.readMem(0xb992));
        // CB C9 021D
        gbc.setState(0x65f0, 0xc066, 0xa620, 0xa33a, 0xc3d, 0xbf65, 0x1, 0x1);
        gbc.writeMem(0x65f0, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc066, gbc.sp());
        EXPECT(0x65f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 021E
        gbc.setState(0xdfdb, 0x63cb, 0x9ee0, 0x5f24, 0xf46d, 0x802, 0x0, 0x0);
        gbc.writeMem(0xdfdb, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x63cb, gbc.sp());
        EXPECT(0xdfdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfdb));
        EXPECT(0xc9, gbc.readMem(0xdfdc));
        // CB C9 021F
        gbc.setState(0xc603, 0xfac1, 0x800, 0x1570, 0x24de, 0x802b, 0x1, 0x0);
        gbc.writeMem(0xc603, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xfac1, gbc.sp());
        EXPECT(0xc605, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc603));
        EXPECT(0xc9, gbc.readMem(0xc604));
        // CB C9 0220
        gbc.setState(0x5e05, 0x524b, 0x7b10, 0xc0f0, 0xb147, 0x1430, 0x0, 0x1);
        gbc.writeMem(0x5e05, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x524b, gbc.sp());
        EXPECT(0x5e07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0221
        gbc.setState(0x3f52, 0x6bb4, 0x9b20, 0x67d5, 0x39fb, 0x2920, 0x1, 0x1);
        gbc.writeMem(0x3f52, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x6bb4, gbc.sp());
        EXPECT(0x3f54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0222
        gbc.setState(0xa49, 0xb5a, 0x7820, 0x9b2, 0x7b16, 0x7235, 0x1, 0x1);
        gbc.writeMem(0xa49, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xb5a, gbc.sp());
        EXPECT(0xa4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0223
        gbc.setState(0x7dbb, 0x7b12, 0x9400, 0x1fb5, 0xd5ae, 0x11e2, 0x1, 0x0);
        gbc.writeMem(0x7dbb, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7b12, gbc.sp());
        EXPECT(0x7dbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0224
        gbc.setState(0xda69, 0x3b18, 0x6c60, 0x6021, 0xb22b, 0xb3d8, 0x0, 0x0);
        gbc.writeMem(0xda69, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x3b18, gbc.sp());
        EXPECT(0xda6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda69));
        EXPECT(0xc9, gbc.readMem(0xda6a));
        // CB C9 0225
        gbc.setState(0x3b6e, 0x7ef6, 0x75e0, 0x8e2b, 0x1257, 0x214d, 0x1, 0x0);
        gbc.writeMem(0x3b6e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x7ef6, gbc.sp());
        EXPECT(0x3b70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0226
        gbc.setState(0x14cc, 0xe926, 0x41d0, 0x8f08, 0xe8f6, 0xa360, 0x0, 0x1);
        gbc.writeMem(0x14cc, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xe926, gbc.sp());
        EXPECT(0x14ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0227
        gbc.setState(0x9c4, 0xec91, 0x2fc0, 0x2439, 0x4f94, 0xd74b, 0x0, 0x0);
        gbc.writeMem(0x9c4, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xec91, gbc.sp());
        EXPECT(0x9c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0228
        gbc.setState(0x939, 0x41e6, 0x24b0, 0xa17a, 0xd88, 0x654f, 0x1, 0x0);
        gbc.writeMem(0x939, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x41e6, gbc.sp());
        EXPECT(0x93b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0229
        gbc.setState(0x103, 0x573a, 0x7740, 0xf0e0, 0x799d, 0x7020, 0x1, 0x1);
        gbc.writeMem(0x103, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x573a, gbc.sp());
        EXPECT(0x105, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 022A
        gbc.setState(0x4c49, 0x3e47, 0xc810, 0x2d5, 0x8137, 0x49c3, 0x1, 0x1);
        gbc.writeMem(0x4c49, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3e47, gbc.sp());
        EXPECT(0x4c4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 022B
        gbc.setState(0xe87d, 0x4b37, 0x5bf0, 0x8019, 0xd52c, 0xa4a9, 0x1, 0x0);
        gbc.writeMem(0xe87d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x4b37, gbc.sp());
        EXPECT(0xe87f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe87d));
        EXPECT(0xc9, gbc.readMem(0xe87e));
        // CB C9 022C
        gbc.setState(0x8185, 0xee02, 0x8850, 0x28d8, 0x87b6, 0xd526, 0x0, 0x1);
        gbc.writeMem(0x8185, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xee02, gbc.sp());
        EXPECT(0x8187, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8185));
        EXPECT(0xc9, gbc.readMem(0x8186));
        // CB C9 022D
        gbc.setState(0xc418, 0x3120, 0x5410, 0xea32, 0x11ae, 0xb820, 0x1, 0x0);
        gbc.writeMem(0xc418, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x3120, gbc.sp());
        EXPECT(0xc41a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc418));
        EXPECT(0xc9, gbc.readMem(0xc419));
        // CB C9 022E
        gbc.setState(0x90a2, 0x6900, 0xc570, 0xf0a0, 0x8a52, 0x12ad, 0x1, 0x1);
        gbc.writeMem(0x90a2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x6900, gbc.sp());
        EXPECT(0x90a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90a2));
        EXPECT(0xc9, gbc.readMem(0x90a3));
        // CB C9 022F
        gbc.setState(0xa518, 0xa193, 0xfa20, 0x24f9, 0x4f8f, 0xa258, 0x0, 0x1);
        gbc.writeMem(0xa518, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xa193, gbc.sp());
        EXPECT(0xa51a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa518));
        EXPECT(0xc9, gbc.readMem(0xa519));
        // CB C9 0230
        gbc.setState(0x4627, 0x32f6, 0x1520, 0xa205, 0xf9ad, 0xa47c, 0x0, 0x1);
        gbc.writeMem(0x4627, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x32f6, gbc.sp());
        EXPECT(0x4629, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0231
        gbc.setState(0x9693, 0xec8, 0xc570, 0xfc05, 0x5204, 0xcf7, 0x0, 0x1);
        gbc.writeMem(0x9693, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xec8, gbc.sp());
        EXPECT(0x9695, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9693));
        EXPECT(0xc9, gbc.readMem(0x9694));
        // CB C9 0232
        gbc.setState(0x7ec6, 0xc6e5, 0xed80, 0x7d01, 0x274f, 0x4f78, 0x1, 0x1);
        gbc.writeMem(0x7ec6, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xc6e5, gbc.sp());
        EXPECT(0x7ec8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0233
        gbc.setState(0x24d8, 0x1b91, 0x4c10, 0x37bb, 0x9a35, 0xa78e, 0x1, 0x0);
        gbc.writeMem(0x24d8, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x1b91, gbc.sp());
        EXPECT(0x24da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0234
        gbc.setState(0x9281, 0xb2e3, 0x32a0, 0xdf95, 0x2647, 0x72dd, 0x0, 0x0);
        gbc.writeMem(0x9281, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb2e3, gbc.sp());
        EXPECT(0x9283, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9281));
        EXPECT(0xc9, gbc.readMem(0x9282));
        // CB C9 0235
        gbc.setState(0x4e4c, 0x1516, 0x10e0, 0xd195, 0x92c, 0x1091, 0x1, 0x0);
        gbc.writeMem(0x4e4c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x1516, gbc.sp());
        EXPECT(0x4e4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0236
        gbc.setState(0x2ccd, 0x352c, 0xbe0, 0x375a, 0x425e, 0x4e82, 0x0, 0x0);
        gbc.writeMem(0x2ccd, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x352c, gbc.sp());
        EXPECT(0x2ccf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0237
        gbc.setState(0x7d4f, 0x5b3f, 0x5e20, 0x3626, 0x9aa9, 0x5e9, 0x1, 0x0);
        gbc.writeMem(0x7d4f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x5b3f, gbc.sp());
        EXPECT(0x7d51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0238
        gbc.setState(0x846d, 0x29ce, 0xd650, 0x77ad, 0x2441, 0x9254, 0x0, 0x1);
        gbc.writeMem(0x846d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x29ce, gbc.sp());
        EXPECT(0x846f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x846d));
        EXPECT(0xc9, gbc.readMem(0x846e));
        // CB C9 0239
        gbc.setState(0x9875, 0x3bff, 0xc2f0, 0xdf66, 0xe97f, 0xb7c7, 0x0, 0x1);
        gbc.writeMem(0x9875, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3bff, gbc.sp());
        EXPECT(0x9877, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9875));
        EXPECT(0xc9, gbc.readMem(0x9876));
        // CB C9 023A
        gbc.setState(0x66cc, 0xc171, 0x1ce0, 0x61aa, 0x4257, 0x479, 0x0, 0x0);
        gbc.writeMem(0x66cc, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xc171, gbc.sp());
        EXPECT(0x66ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 023C
        gbc.setState(0xfb4, 0x6462, 0x8bc0, 0xdde4, 0x632a, 0x631a, 0x1, 0x1);
        gbc.writeMem(0xfb4, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x6462, gbc.sp());
        EXPECT(0xfb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 023D
        gbc.setState(0x4644, 0xda72, 0x4760, 0xa6f9, 0xcca7, 0xafc6, 0x1, 0x1);
        gbc.writeMem(0x4644, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xda72, gbc.sp());
        EXPECT(0x4646, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 023E
        gbc.setState(0xdd, 0x788e, 0xf130, 0x61a6, 0xad1b, 0x692b, 0x1, 0x0);
        gbc.writeMem(0xdd, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x788e, gbc.sp());
        EXPECT(0xdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 023F
        gbc.setState(0x561, 0xf086, 0x31a0, 0x2ded, 0x16e7, 0x58f9, 0x0, 0x0);
        gbc.writeMem(0x561, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xf086, gbc.sp());
        EXPECT(0x563, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0240
        gbc.setState(0x8eef, 0xb783, 0x3c90, 0x982d, 0x670c, 0x2926, 0x0, 0x1);
        gbc.writeMem(0x8eef, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb783, gbc.sp());
        EXPECT(0x8ef1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eef));
        EXPECT(0xc9, gbc.readMem(0x8ef0));
        // CB C9 0241
        gbc.setState(0x4d74, 0xe73c, 0x3970, 0x8eae, 0x4f2a, 0x4c4c, 0x0, 0x1);
        gbc.writeMem(0x4d74, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe73c, gbc.sp());
        EXPECT(0x4d76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0242
        gbc.setState(0x8e4b, 0xa520, 0x84f0, 0x7965, 0x5586, 0x93c0, 0x0, 0x1);
        gbc.writeMem(0x8e4b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa520, gbc.sp());
        EXPECT(0x8e4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e4b));
        EXPECT(0xc9, gbc.readMem(0x8e4c));
        // CB C9 0244
        gbc.setState(0x6d74, 0xe757, 0xd880, 0x1992, 0xf50e, 0x4acf, 0x1, 0x0);
        gbc.writeMem(0x6d74, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xe757, gbc.sp());
        EXPECT(0x6d76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0245
        gbc.setState(0x89be, 0x17ed, 0xa230, 0x4993, 0xb26e, 0x7d23, 0x0, 0x1);
        gbc.writeMem(0x89be, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x17ed, gbc.sp());
        EXPECT(0x89c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89be));
        EXPECT(0xc9, gbc.readMem(0x89bf));
        // CB C9 0246
        gbc.setState(0x2e76, 0xbdf4, 0x50a0, 0xe0d5, 0x26be, 0x20c2, 0x1, 0x1);
        gbc.writeMem(0x2e76, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xbdf4, gbc.sp());
        EXPECT(0x2e78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0247
        gbc.setState(0x5e57, 0x2d02, 0xdd40, 0x4e7d, 0x72e9, 0xecc0, 0x1, 0x0);
        gbc.writeMem(0x5e57, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2d02, gbc.sp());
        EXPECT(0x5e59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0248
        gbc.setState(0xa469, 0xd29d, 0x5440, 0x6293, 0xe5d, 0xda52, 0x0, 0x1);
        gbc.writeMem(0xa469, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd29d, gbc.sp());
        EXPECT(0xa46b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa469));
        EXPECT(0xc9, gbc.readMem(0xa46a));
        // CB C9 0249
        gbc.setState(0xebb6, 0xc3e9, 0x9950, 0x7a5c, 0x9896, 0xd886, 0x1, 0x1);
        gbc.writeMem(0xebb6, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc3e9, gbc.sp());
        EXPECT(0xebb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebb6));
        EXPECT(0xc9, gbc.readMem(0xebb7));
        // CB C9 024A
        gbc.setState(0x6e5, 0xd927, 0xa0c0, 0xe28c, 0x6392, 0x26a9, 0x0, 0x0);
        gbc.writeMem(0x6e5, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xd927, gbc.sp());
        EXPECT(0x6e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 024B
        gbc.setState(0x6d7, 0x4e00, 0x7690, 0x5915, 0x2a2c, 0xefd, 0x1, 0x1);
        gbc.writeMem(0x6d7, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x4e00, gbc.sp());
        EXPECT(0x6d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 024C
        gbc.setState(0x7d74, 0x5783, 0xe620, 0x835e, 0xb6d4, 0xd0c, 0x1, 0x1);
        gbc.writeMem(0x7d74, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x5783, gbc.sp());
        EXPECT(0x7d76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 024D
        gbc.setState(0xc0a7, 0xfc26, 0xc10, 0x39cb, 0x98f6, 0xe281, 0x0, 0x1);
        gbc.writeMem(0xc0a7, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xfc26, gbc.sp());
        EXPECT(0xc0a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0a7));
        EXPECT(0xc9, gbc.readMem(0xc0a8));
        // CB C9 024E
        gbc.setState(0xb2aa, 0x43ce, 0x7860, 0x274f, 0x6bf5, 0x227a, 0x0, 0x1);
        gbc.writeMem(0xb2aa, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x43ce, gbc.sp());
        EXPECT(0xb2ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2aa));
        EXPECT(0xc9, gbc.readMem(0xb2ab));
        // CB C9 024F
        gbc.setState(0xbd8d, 0xb914, 0x1560, 0x3077, 0x918a, 0x7315, 0x1, 0x0);
        gbc.writeMem(0xbd8d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb914, gbc.sp());
        EXPECT(0xbd8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd8d));
        EXPECT(0xc9, gbc.readMem(0xbd8e));
        // CB C9 0250
        gbc.setState(0x1952, 0xc435, 0x1c00, 0xe442, 0xfd96, 0x67f4, 0x0, 0x0);
        gbc.writeMem(0x1952, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc435, gbc.sp());
        EXPECT(0x1954, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0251
        gbc.setState(0xa798, 0x9c6b, 0xa390, 0x1615, 0xe395, 0xc981, 0x0, 0x0);
        gbc.writeMem(0xa798, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x9c6b, gbc.sp());
        EXPECT(0xa79a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa798));
        EXPECT(0xc9, gbc.readMem(0xa799));
        // CB C9 0252
        gbc.setState(0x5579, 0x9c9e, 0x8940, 0x6533, 0xa5c7, 0x3b15, 0x1, 0x1);
        gbc.writeMem(0x5579, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x9c9e, gbc.sp());
        EXPECT(0x557b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0253
        gbc.setState(0xe931, 0xaca6, 0x5300, 0x6ed2, 0xe8f6, 0xcd37, 0x0, 0x1);
        gbc.writeMem(0xe931, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xaca6, gbc.sp());
        EXPECT(0xe933, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe931));
        EXPECT(0xc9, gbc.readMem(0xe932));
        // CB C9 0255
        gbc.setState(0xd9ae, 0xeed8, 0x9a40, 0x1635, 0x6743, 0x6b75, 0x1, 0x0);
        gbc.writeMem(0xd9ae, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xeed8, gbc.sp());
        EXPECT(0xd9b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9ae));
        EXPECT(0xc9, gbc.readMem(0xd9af));
        // CB C9 0256
        gbc.setState(0x9506, 0x7db9, 0x4ef0, 0xa58f, 0x638d, 0x3506, 0x0, 0x1);
        gbc.writeMem(0x9506, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x7db9, gbc.sp());
        EXPECT(0x9508, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9506));
        EXPECT(0xc9, gbc.readMem(0x9507));
        // CB C9 0258
        gbc.setState(0xdf21, 0xfa99, 0x9bb0, 0xfb26, 0x1772, 0x891f, 0x0, 0x1);
        gbc.writeMem(0xdf21, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xfa99, gbc.sp());
        EXPECT(0xdf23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf21));
        EXPECT(0xc9, gbc.readMem(0xdf22));
        // CB C9 0259
        gbc.setState(0x6dc2, 0xb1dd, 0x6880, 0xd0d8, 0x856c, 0xc216, 0x1, 0x0);
        gbc.writeMem(0x6dc2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xb1dd, gbc.sp());
        EXPECT(0x6dc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 025B
        gbc.setState(0xc32e, 0x20e8, 0x3b00, 0xe4b0, 0x279f, 0x3088, 0x0, 0x0);
        gbc.writeMem(0xc32e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x20e8, gbc.sp());
        EXPECT(0xc330, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc32e));
        EXPECT(0xc9, gbc.readMem(0xc32f));
        // CB C9 025C
        gbc.setState(0x1d52, 0x442c, 0x2430, 0x2ae6, 0xc693, 0x4132, 0x0, 0x0);
        gbc.writeMem(0x1d52, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x442c, gbc.sp());
        EXPECT(0x1d54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 025D
        gbc.setState(0xc0a7, 0x126d, 0xa800, 0x65eb, 0x6897, 0xfa8e, 0x1, 0x0);
        gbc.writeMem(0xc0a7, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x126d, gbc.sp());
        EXPECT(0xc0a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0a7));
        EXPECT(0xc9, gbc.readMem(0xc0a8));
        // CB C9 025E
        gbc.setState(0xdfef, 0x79f3, 0xd790, 0xce13, 0x4a27, 0x454a, 0x0, 0x1);
        gbc.writeMem(0xdfef, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x79f3, gbc.sp());
        EXPECT(0xdff1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfef));
        EXPECT(0xc9, gbc.readMem(0xdff0));
        // CB C9 025F
        gbc.setState(0x79c9, 0x5dc9, 0x4f30, 0x6209, 0xda3f, 0xba25, 0x0, 0x1);
        gbc.writeMem(0x79c9, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5dc9, gbc.sp());
        EXPECT(0x79cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0260
        gbc.setState(0xa34b, 0xaffc, 0x7340, 0x608f, 0x583d, 0xbc2e, 0x0, 0x0);
        gbc.writeMem(0xa34b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xaffc, gbc.sp());
        EXPECT(0xa34d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa34b));
        EXPECT(0xc9, gbc.readMem(0xa34c));
        // CB C9 0261
        gbc.setState(0xa37f, 0x5f30, 0xfe90, 0xa969, 0xc51e, 0xb195, 0x0, 0x0);
        gbc.writeMem(0xa37f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x5f30, gbc.sp());
        EXPECT(0xa381, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa37f));
        EXPECT(0xc9, gbc.readMem(0xa380));
        // CB C9 0262
        gbc.setState(0x948c, 0x4514, 0xcbd0, 0x4134, 0xf243, 0xa8e3, 0x1, 0x1);
        gbc.writeMem(0x948c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4514, gbc.sp());
        EXPECT(0x948e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x948c));
        EXPECT(0xc9, gbc.readMem(0x948d));
        // CB C9 0263
        gbc.setState(0x7167, 0x5629, 0xc880, 0x8770, 0x86be, 0xa1f6, 0x1, 0x1);
        gbc.writeMem(0x7167, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x5629, gbc.sp());
        EXPECT(0x7169, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0264
        gbc.setState(0x4956, 0xac28, 0x130, 0x80d5, 0x4ac8, 0x5535, 0x1, 0x0);
        gbc.writeMem(0x4956, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xac28, gbc.sp());
        EXPECT(0x4958, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0265
        gbc.setState(0x937b, 0xe48c, 0x1b50, 0x94be, 0xefda, 0xe764, 0x1, 0x0);
        gbc.writeMem(0x937b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xe48c, gbc.sp());
        EXPECT(0x937d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x937b));
        EXPECT(0xc9, gbc.readMem(0x937c));
        // CB C9 0266
        gbc.setState(0x305f, 0xf8d9, 0xf8e0, 0x5654, 0x6edb, 0x8e26, 0x0, 0x0);
        gbc.writeMem(0x305f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf8d9, gbc.sp());
        EXPECT(0x3061, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0267
        gbc.setState(0x421a, 0xfe23, 0xaf70, 0xebd9, 0xcfd3, 0xda6b, 0x1, 0x0);
        gbc.writeMem(0x421a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xfe23, gbc.sp());
        EXPECT(0x421c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0268
        gbc.setState(0x23eb, 0x1ff9, 0x81e0, 0x1902, 0x63d8, 0x900b, 0x0, 0x0);
        gbc.writeMem(0x23eb, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x1ff9, gbc.sp());
        EXPECT(0x23ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0269
        gbc.setState(0xc72d, 0xbac0, 0x5830, 0xa8fc, 0xaf16, 0x58d4, 0x1, 0x1);
        gbc.writeMem(0xc72d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xbac0, gbc.sp());
        EXPECT(0xc72f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc72d));
        EXPECT(0xc9, gbc.readMem(0xc72e));
        // CB C9 026A
        gbc.setState(0x9e06, 0xd428, 0xdc70, 0x9e92, 0x3b7c, 0xda8e, 0x0, 0x0);
        gbc.writeMem(0x9e06, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xd428, gbc.sp());
        EXPECT(0x9e08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e06));
        EXPECT(0xc9, gbc.readMem(0x9e07));
        // CB C9 026C
        gbc.setState(0xaa68, 0x1b18, 0x2210, 0x5ca8, 0x4d26, 0x3fb1, 0x1, 0x1);
        gbc.writeMem(0xaa68, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x1b18, gbc.sp());
        EXPECT(0xaa6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa68));
        EXPECT(0xc9, gbc.readMem(0xaa69));
        // CB C9 026D
        gbc.setState(0x7a65, 0xda6a, 0x3970, 0x318f, 0x7acb, 0xbf00, 0x0, 0x1);
        gbc.writeMem(0x7a65, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xda6a, gbc.sp());
        EXPECT(0x7a67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 026E
        gbc.setState(0x53ac, 0x879b, 0xc1c0, 0x933d, 0x7044, 0x8da0, 0x1, 0x0);
        gbc.writeMem(0x53ac, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x879b, gbc.sp());
        EXPECT(0x53ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 026F
        gbc.setState(0xd2b, 0x5791, 0x6b00, 0xe8c2, 0xf1f7, 0x51ac, 0x1, 0x0);
        gbc.writeMem(0xd2b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x5791, gbc.sp());
        EXPECT(0xd2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0270
        gbc.setState(0xa80d, 0xc887, 0x8a90, 0x303, 0x546e, 0x8c87, 0x0, 0x1);
        gbc.writeMem(0xa80d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xc887, gbc.sp());
        EXPECT(0xa80f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa80d));
        EXPECT(0xc9, gbc.readMem(0xa80e));
        // CB C9 0271
        gbc.setState(0x3bb6, 0xb693, 0xcac0, 0x71ef, 0x7fc0, 0xdd93, 0x0, 0x0);
        gbc.writeMem(0x3bb6, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb693, gbc.sp());
        EXPECT(0x3bb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0272
        gbc.setState(0x3541, 0xde88, 0x1240, 0xbc22, 0x16d3, 0x452f, 0x0, 0x0);
        gbc.writeMem(0x3541, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xde88, gbc.sp());
        EXPECT(0x3543, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0274
        gbc.setState(0x241c, 0x5873, 0x15a0, 0x1e02, 0x7260, 0xc6e5, 0x1, 0x1);
        gbc.writeMem(0x241c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x5873, gbc.sp());
        EXPECT(0x241e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0275
        gbc.setState(0xe4bc, 0xcb4b, 0x8890, 0xd303, 0x9d46, 0x625e, 0x0, 0x0);
        gbc.writeMem(0xe4bc, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xcb4b, gbc.sp());
        EXPECT(0xe4be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4bc));
        EXPECT(0xc9, gbc.readMem(0xe4bd));
        // CB C9 0276
        gbc.setState(0x52ff, 0x3cf7, 0x8620, 0x9d3e, 0x3422, 0x9f17, 0x1, 0x0);
        gbc.writeMem(0x52ff, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3cf7, gbc.sp());
        EXPECT(0x5301, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0277
        gbc.setState(0x2cda, 0xdbce, 0x8c10, 0x8cf6, 0x5b1d, 0xe07a, 0x1, 0x1);
        gbc.writeMem(0x2cda, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xdbce, gbc.sp());
        EXPECT(0x2cdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0278
        gbc.setState(0x46e5, 0x89e2, 0xb6c0, 0x780a, 0xd12, 0x9910, 0x1, 0x1);
        gbc.writeMem(0x46e5, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x89e2, gbc.sp());
        EXPECT(0x46e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0279
        gbc.setState(0xddff, 0x8222, 0x8600, 0xf0db, 0xdbd0, 0xe867, 0x0, 0x1);
        gbc.writeMem(0xddff, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x8222, gbc.sp());
        EXPECT(0xde01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddff));
        EXPECT(0xc9, gbc.readMem(0xde00));
        // CB C9 027A
        gbc.setState(0x79b1, 0x60e5, 0xd20, 0xd291, 0x3499, 0x6fb9, 0x1, 0x1);
        gbc.writeMem(0x79b1, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x60e5, gbc.sp());
        EXPECT(0x79b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 027B
        gbc.setState(0xeaa8, 0xb93, 0x1810, 0x422c, 0x98df, 0x2a5f, 0x0, 0x1);
        gbc.writeMem(0xeaa8, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb93, gbc.sp());
        EXPECT(0xeaaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaa8));
        EXPECT(0xc9, gbc.readMem(0xeaa9));
        // CB C9 027C
        gbc.setState(0x2d3e, 0xa4ab, 0x86c0, 0xa4bf, 0x6304, 0x374, 0x1, 0x0);
        gbc.writeMem(0x2d3e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xa4ab, gbc.sp());
        EXPECT(0x2d40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 027D
        gbc.setState(0xd3e0, 0x8be2, 0x4610, 0xdfea, 0x9105, 0xfa90, 0x1, 0x0);
        gbc.writeMem(0xd3e0, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x8be2, gbc.sp());
        EXPECT(0xd3e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3e0));
        EXPECT(0xc9, gbc.readMem(0xd3e1));
        // CB C9 027F
        gbc.setState(0x4247, 0x2f8a, 0xc990, 0xce53, 0x8247, 0x88aa, 0x1, 0x0);
        gbc.writeMem(0x4247, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x2f8a, gbc.sp());
        EXPECT(0x4249, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0280
        gbc.setState(0xa76d, 0x78fc, 0x16b0, 0x1e6e, 0xa286, 0x89f1, 0x0, 0x0);
        gbc.writeMem(0xa76d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x78fc, gbc.sp());
        EXPECT(0xa76f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa76d));
        EXPECT(0xc9, gbc.readMem(0xa76e));
        // CB C9 0281
        gbc.setState(0x6905, 0x84ac, 0xc850, 0x3281, 0x7da6, 0xbe3c, 0x0, 0x0);
        gbc.writeMem(0x6905, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x84ac, gbc.sp());
        EXPECT(0x6907, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0282
        gbc.setState(0x326d, 0xd93e, 0xde0, 0xf13c, 0xc72, 0xebf7, 0x1, 0x1);
        gbc.writeMem(0x326d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xd93e, gbc.sp());
        EXPECT(0x326f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0283
        gbc.setState(0x77e9, 0xbe11, 0x25a0, 0x9029, 0xe40f, 0x4f3e, 0x0, 0x0);
        gbc.writeMem(0x77e9, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xbe11, gbc.sp());
        EXPECT(0x77eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0284
        gbc.setState(0xb59a, 0xe850, 0xef90, 0xd277, 0xe42e, 0xd428, 0x0, 0x0);
        gbc.writeMem(0xb59a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xe850, gbc.sp());
        EXPECT(0xb59c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb59a));
        EXPECT(0xc9, gbc.readMem(0xb59b));
        // CB C9 0285
        gbc.setState(0xc303, 0x713e, 0x35d0, 0xfb49, 0x6766, 0x42d5, 0x0, 0x0);
        gbc.writeMem(0xc303, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x713e, gbc.sp());
        EXPECT(0xc305, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc303));
        EXPECT(0xc9, gbc.readMem(0xc304));
        // CB C9 0286
        gbc.setState(0x1735, 0xa7a, 0xe6f0, 0xc376, 0x5451, 0x1fff, 0x0, 0x1);
        gbc.writeMem(0x1735, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa7a, gbc.sp());
        EXPECT(0x1737, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0287
        gbc.setState(0xcaea, 0x2e00, 0x24c0, 0x6b82, 0xaa65, 0x3371, 0x0, 0x1);
        gbc.writeMem(0xcaea, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x2e00, gbc.sp());
        EXPECT(0xcaec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaea));
        EXPECT(0xc9, gbc.readMem(0xcaeb));
        // CB C9 0288
        gbc.setState(0x6e51, 0xc021, 0xc490, 0x6a03, 0x7c53, 0x910f, 0x1, 0x1);
        gbc.writeMem(0x6e51, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xc021, gbc.sp());
        EXPECT(0x6e53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0289
        gbc.setState(0x382d, 0xa147, 0x9330, 0x3554, 0x39a1, 0xa1d8, 0x1, 0x1);
        gbc.writeMem(0x382d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xa147, gbc.sp());
        EXPECT(0x382f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 028A
        gbc.setState(0xbac3, 0x7fc, 0x3d90, 0xf6d0, 0x24b7, 0x588e, 0x1, 0x0);
        gbc.writeMem(0xbac3, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x7fc, gbc.sp());
        EXPECT(0xbac5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbac3));
        EXPECT(0xc9, gbc.readMem(0xbac4));
        // CB C9 028B
        gbc.setState(0x5e0, 0x103b, 0x1450, 0x1f37, 0x8312, 0xf286, 0x1, 0x0);
        gbc.writeMem(0x5e0, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x103b, gbc.sp());
        EXPECT(0x5e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 028D
        gbc.setState(0xca83, 0x3826, 0xb640, 0xd376, 0xf054, 0x79b6, 0x1, 0x0);
        gbc.writeMem(0xca83, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x3826, gbc.sp());
        EXPECT(0xca85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca83));
        EXPECT(0xc9, gbc.readMem(0xca84));
        // CB C9 028E
        gbc.setState(0x422, 0x8fc4, 0xa980, 0x8eef, 0x397f, 0x4174, 0x1, 0x1);
        gbc.writeMem(0x422, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x8fc4, gbc.sp());
        EXPECT(0x424, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 028F
        gbc.setState(0x3030, 0xad64, 0x37a0, 0xf29b, 0x7933, 0x5ae3, 0x0, 0x1);
        gbc.writeMem(0x3030, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xad64, gbc.sp());
        EXPECT(0x3032, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0290
        gbc.setState(0x511f, 0x484a, 0xb840, 0xdb8, 0x650e, 0x8f39, 0x0, 0x1);
        gbc.writeMem(0x511f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x484a, gbc.sp());
        EXPECT(0x5121, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0291
        gbc.setState(0x4e3, 0xd455, 0x48e0, 0x6a07, 0x674a, 0x1483, 0x1, 0x1);
        gbc.writeMem(0x4e3, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xd455, gbc.sp());
        EXPECT(0x4e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0292
        gbc.setState(0xef7f, 0x1e95, 0xb210, 0xa9f2, 0x438a, 0x4147, 0x0, 0x1);
        gbc.writeMem(0xef7f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1e95, gbc.sp());
        EXPECT(0xef81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef7f));
        EXPECT(0xc9, gbc.readMem(0xef80));
        // CB C9 0293
        gbc.setState(0xc78c, 0x3723, 0x60, 0x535d, 0x772e, 0xaf3e, 0x1, 0x1);
        gbc.writeMem(0xc78c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x3723, gbc.sp());
        EXPECT(0xc78e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc78c));
        EXPECT(0xc9, gbc.readMem(0xc78d));
        // CB C9 0294
        gbc.setState(0x42a7, 0xcdd5, 0xcd20, 0x3ace, 0xa565, 0x1df1, 0x1, 0x0);
        gbc.writeMem(0x42a7, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xcdd5, gbc.sp());
        EXPECT(0x42a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0295
        gbc.setState(0x9bed, 0xc03e, 0x80d0, 0xce27, 0xb832, 0xc7f, 0x1, 0x1);
        gbc.writeMem(0x9bed, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc03e, gbc.sp());
        EXPECT(0x9bef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bed));
        EXPECT(0xc9, gbc.readMem(0x9bee));
        // CB C9 0296
        gbc.setState(0x1046, 0xfefb, 0x51f0, 0xb545, 0x7ce7, 0x43c8, 0x0, 0x0);
        gbc.writeMem(0x1046, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xfefb, gbc.sp());
        EXPECT(0x1048, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0297
        gbc.setState(0x7ece, 0x3353, 0x4fe0, 0xb498, 0x2457, 0x828, 0x0, 0x0);
        gbc.writeMem(0x7ece, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3353, gbc.sp());
        EXPECT(0x7ed0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0299
        gbc.setState(0xefb5, 0x8352, 0xc910, 0x7451, 0x4c14, 0x8f27, 0x0, 0x1);
        gbc.writeMem(0xefb5, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8352, gbc.sp());
        EXPECT(0xefb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefb5));
        EXPECT(0xc9, gbc.readMem(0xefb6));
        // CB C9 029A
        gbc.setState(0xa24d, 0x8267, 0x87c0, 0x50c7, 0xcade, 0xa287, 0x0, 0x1);
        gbc.writeMem(0xa24d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x8267, gbc.sp());
        EXPECT(0xa24f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa24d));
        EXPECT(0xc9, gbc.readMem(0xa24e));
        // CB C9 029B
        gbc.setState(0x6c0a, 0xb6e6, 0xb960, 0x6483, 0xaf99, 0xd0c3, 0x0, 0x0);
        gbc.writeMem(0x6c0a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xb6e6, gbc.sp());
        EXPECT(0x6c0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 029C
        gbc.setState(0x3db8, 0xe47f, 0x8e10, 0x440e, 0xb000, 0xbd85, 0x0, 0x1);
        gbc.writeMem(0x3db8, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xe47f, gbc.sp());
        EXPECT(0x3dba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 029D
        gbc.setState(0xa712, 0xab6a, 0x2110, 0x92e8, 0x8a66, 0xf943, 0x1, 0x1);
        gbc.writeMem(0xa712, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xab6a, gbc.sp());
        EXPECT(0xa714, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa712));
        EXPECT(0xc9, gbc.readMem(0xa713));
        // CB C9 029E
        gbc.setState(0x83fb, 0xecbc, 0x1f40, 0xa81a, 0x4b3f, 0x1381, 0x1, 0x1);
        gbc.writeMem(0x83fb, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xecbc, gbc.sp());
        EXPECT(0x83fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83fb));
        EXPECT(0xc9, gbc.readMem(0x83fc));
        // CB C9 029F
        gbc.setState(0x1cf, 0xfae9, 0xae60, 0xf116, 0x316a, 0xe45, 0x1, 0x1);
        gbc.writeMem(0x1cf, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xfae9, gbc.sp());
        EXPECT(0x1d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 02A0
        gbc.setState(0xb0d4, 0x3ae1, 0x9f80, 0xbdb1, 0x1e37, 0x17d6, 0x0, 0x0);
        gbc.writeMem(0xb0d4, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x3ae1, gbc.sp());
        EXPECT(0xb0d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0d4));
        EXPECT(0xc9, gbc.readMem(0xb0d5));
        // CB C9 02A1
        gbc.setState(0x7ff1, 0x95c6, 0xa1a0, 0xd0d5, 0x9794, 0x2e47, 0x0, 0x0);
        gbc.writeMem(0x7ff1, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x95c6, gbc.sp());
        EXPECT(0x7ff3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 02A2
        gbc.setState(0x1e7f, 0x9fdd, 0x2520, 0x7634, 0xa7ed, 0x5ae1, 0x0, 0x0);
        gbc.writeMem(0x1e7f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x9fdd, gbc.sp());
        EXPECT(0x1e81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 02A3
        gbc.setState(0xaae2, 0x7193, 0x3820, 0xd052, 0x490f, 0xcc48, 0x1, 0x0);
        gbc.writeMem(0xaae2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x7193, gbc.sp());
        EXPECT(0xaae4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaae2));
        EXPECT(0xc9, gbc.readMem(0xaae3));
        // CB C9 02A4
        gbc.setState(0x5540, 0x220, 0xf470, 0x1cec, 0xaf78, 0x62d1, 0x1, 0x1);
        gbc.writeMem(0x5540, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x220, gbc.sp());
        EXPECT(0x5542, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 02A5
        gbc.setState(0xbe69, 0x7a0, 0x2980, 0x53bd, 0xd3e7, 0x382a, 0x1, 0x1);
        gbc.writeMem(0xbe69, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x7a0, gbc.sp());
        EXPECT(0xbe6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe69));
        EXPECT(0xc9, gbc.readMem(0xbe6a));
        // CB C9 02A6
        gbc.setState(0x1582, 0x1894, 0x9a20, 0xf156, 0x2428, 0xbe72, 0x1, 0x0);
        gbc.writeMem(0x1582, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x1894, gbc.sp());
        EXPECT(0x1584, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 02A7
        gbc.setState(0x3a05, 0xb45b, 0xaee0, 0x553a, 0x21cf, 0x6d8e, 0x1, 0x0);
        gbc.writeMem(0x3a05, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xb45b, gbc.sp());
        EXPECT(0x3a07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 02A8
        gbc.setState(0x28bb, 0x4003, 0xf850, 0x44cc, 0x2194, 0xd344, 0x1, 0x0);
        gbc.writeMem(0x28bb, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x4003, gbc.sp());
        EXPECT(0x28bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 02A9
        gbc.setState(0xe176, 0x7c6b, 0xb730, 0xde30, 0xa70a, 0xed5b, 0x0, 0x1);
        gbc.writeMem(0xe176, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7c6b, gbc.sp());
        EXPECT(0xe178, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe176));
        EXPECT(0xc9, gbc.readMem(0xe177));
        // CB C9 02AA
        gbc.setState(0x9469, 0xda3b, 0x1480, 0x557b, 0x2fe2, 0x1706, 0x1, 0x1);
        gbc.writeMem(0x9469, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xda3b, gbc.sp());
        EXPECT(0x946b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9469));
        EXPECT(0xc9, gbc.readMem(0x946a));
        // CB C9 02AB
        gbc.setState(0x87d7, 0xce0d, 0xed60, 0x9a8f, 0x5f1e, 0x81b4, 0x1, 0x1);
        gbc.writeMem(0x87d7, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xce0d, gbc.sp());
        EXPECT(0x87d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87d7));
        EXPECT(0xc9, gbc.readMem(0x87d8));
        // CB C9 02AC
        gbc.setState(0x9cb, 0x7975, 0x49a0, 0x289e, 0x10cb, 0xa773, 0x1, 0x0);
        gbc.writeMem(0x9cb, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x7975, gbc.sp());
        EXPECT(0x9cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 02AD
        gbc.setState(0x4054, 0xc3bb, 0x5090, 0x54dd, 0xdf83, 0x566d, 0x0, 0x0);
        gbc.writeMem(0x4054, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xc3bb, gbc.sp());
        EXPECT(0x4056, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 02AE
        gbc.setState(0x391a, 0xe7, 0x69e0, 0x1fcb, 0x18df, 0x1c2d, 0x0, 0x0);
        gbc.writeMem(0x391a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe7, gbc.sp());
        EXPECT(0x391c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 02AF
        gbc.setState(0x477b, 0xc1cf, 0xae20, 0x8027, 0xd664, 0xfbf7, 0x0, 0x1);
        gbc.writeMem(0x477b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xc1cf, gbc.sp());
        EXPECT(0x477d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 02B0
        gbc.setState(0xbbc7, 0xe809, 0x1470, 0xa577, 0xb5d0, 0x9279, 0x1, 0x0);
        gbc.writeMem(0xbbc7, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xe809, gbc.sp());
        EXPECT(0xbbc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbc7));
        EXPECT(0xc9, gbc.readMem(0xbbc8));
        // CB C9 02B2
        gbc.setState(0xc3b7, 0xb4a2, 0x9ef0, 0xc40d, 0xb62c, 0x2e65, 0x0, 0x1);
        gbc.writeMem(0xc3b7, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb4a2, gbc.sp());
        EXPECT(0xc3b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3b7));
        EXPECT(0xc9, gbc.readMem(0xc3b8));
        // CB C9 02B3
        gbc.setState(0x96b2, 0x89a3, 0xb8d0, 0x9907, 0x55c2, 0x1e07, 0x0, 0x0);
        gbc.writeMem(0x96b2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x89a3, gbc.sp());
        EXPECT(0x96b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96b2));
        EXPECT(0xc9, gbc.readMem(0x96b3));
        // CB C9 02B4
        gbc.setState(0xef42, 0x83d5, 0x8d20, 0xe42a, 0x7400, 0x606a, 0x0, 0x0);
        gbc.writeMem(0xef42, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x83d5, gbc.sp());
        EXPECT(0xef44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef42));
        EXPECT(0xc9, gbc.readMem(0xef43));
        // CB C9 02B5
        gbc.setState(0x619a, 0xdf6f, 0xf020, 0xe6db, 0x71a6, 0x5d56, 0x0, 0x0);
        gbc.writeMem(0x619a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xdf6f, gbc.sp());
        EXPECT(0x619c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 02B6
        gbc.setState(0x79cb, 0xd330, 0x5890, 0x94d2, 0x6571, 0x9268, 0x0, 0x1);
        gbc.writeMem(0x79cb, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xd330, gbc.sp());
        EXPECT(0x79cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 02B7
        gbc.setState(0x89d8, 0x27db, 0x1820, 0xb321, 0xb1b4, 0x8df, 0x0, 0x1);
        gbc.writeMem(0x89d8, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x27db, gbc.sp());
        EXPECT(0x89da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89d8));
        EXPECT(0xc9, gbc.readMem(0x89d9));
        // CB C9 02B8
        gbc.setState(0x8a8a, 0xd7db, 0x7fe0, 0x4999, 0x2a42, 0xfb0, 0x0, 0x1);
        gbc.writeMem(0x8a8a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xd7db, gbc.sp());
        EXPECT(0x8a8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a8a));
        EXPECT(0xc9, gbc.readMem(0x8a8b));
        // CB C9 02B9
        gbc.setState(0x277d, 0x9284, 0xaff0, 0xd673, 0xbb63, 0xd361, 0x1, 0x0);
        gbc.writeMem(0x277d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x9284, gbc.sp());
        EXPECT(0x277f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 02BA
        gbc.setState(0xae85, 0x9b78, 0xc850, 0xe35b, 0x4a49, 0x2291, 0x0, 0x0);
        gbc.writeMem(0xae85, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x9b78, gbc.sp());
        EXPECT(0xae87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae85));
        EXPECT(0xc9, gbc.readMem(0xae86));
        // CB C9 02BB
        gbc.setState(0x636a, 0x486c, 0x1ab0, 0x120f, 0xd8bc, 0x1394, 0x0, 0x1);
        gbc.writeMem(0x636a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x486c, gbc.sp());
        EXPECT(0x636c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 02BC
        gbc.setState(0x32d, 0xa430, 0xb040, 0xefb3, 0x1003, 0x865d, 0x1, 0x1);
        gbc.writeMem(0x32d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xa430, gbc.sp());
        EXPECT(0x32f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 02BE
        gbc.setState(0x6e9f, 0x9e88, 0x2d90, 0x61f6, 0xdfcf, 0x994e, 0x0, 0x0);
        gbc.writeMem(0x6e9f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x9e88, gbc.sp());
        EXPECT(0x6ea1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 02BF
        gbc.setState(0x2e8f, 0x7603, 0xa0b0, 0x95be, 0x2e33, 0xcefe, 0x0, 0x1);
        gbc.writeMem(0x2e8f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x7603, gbc.sp());
        EXPECT(0x2e91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 02C0
        gbc.setState(0x5fbf, 0x2d14, 0xd460, 0xd430, 0x226f, 0x837b, 0x0, 0x1);
        gbc.writeMem(0x5fbf, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x2d14, gbc.sp());
        EXPECT(0x5fc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 02C1
        gbc.setState(0x84bb, 0x23, 0x3590, 0xf5c0, 0x2090, 0xc77f, 0x1, 0x1);
        gbc.writeMem(0x84bb, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x23, gbc.sp());
        EXPECT(0x84bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84bb));
        EXPECT(0xc9, gbc.readMem(0x84bc));
        // CB C9 02C2
        gbc.setState(0x5576, 0xa494, 0x58b0, 0x5b3f, 0xef79, 0x9e76, 0x1, 0x0);
        gbc.writeMem(0x5576, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xa494, gbc.sp());
        EXPECT(0x5578, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 02C3
        gbc.setState(0xab72, 0x3297, 0x3f90, 0x80a4, 0x6a0e, 0xb887, 0x0, 0x0);
        gbc.writeMem(0xab72, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x3297, gbc.sp());
        EXPECT(0xab74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab72));
        EXPECT(0xc9, gbc.readMem(0xab73));
        // CB C9 02C4
        gbc.setState(0xbbce, 0xf501, 0xc700, 0x7436, 0x3199, 0x3474, 0x1, 0x1);
        gbc.writeMem(0xbbce, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf501, gbc.sp());
        EXPECT(0xbbd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbce));
        EXPECT(0xc9, gbc.readMem(0xbbcf));
        // CB C9 02C5
        gbc.setState(0x6342, 0x34a0, 0x9db0, 0x3692, 0xe65a, 0xc3dc, 0x1, 0x0);
        gbc.writeMem(0x6342, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x34a0, gbc.sp());
        EXPECT(0x6344, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 02C6
        gbc.setState(0xb513, 0x1bc6, 0xf3b0, 0x944a, 0xb30b, 0xcf2d, 0x1, 0x0);
        gbc.writeMem(0xb513, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x1bc6, gbc.sp());
        EXPECT(0xb515, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb513));
        EXPECT(0xc9, gbc.readMem(0xb514));
        // CB C9 02C7
        gbc.setState(0x4db5, 0xfb82, 0x6400, 0x10f2, 0x7e44, 0x9e5d, 0x1, 0x0);
        gbc.writeMem(0x4db5, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xfb82, gbc.sp());
        EXPECT(0x4db7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 02C8
        gbc.setState(0x2eef, 0x2830, 0xe50, 0xbbbf, 0x8a89, 0xf14f, 0x0, 0x1);
        gbc.writeMem(0x2eef, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x2830, gbc.sp());
        EXPECT(0x2ef1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 02C9
        gbc.setState(0xdf67, 0x6467, 0x4a80, 0xf525, 0xcc58, 0xaefd, 0x1, 0x0);
        gbc.writeMem(0xdf67, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x6467, gbc.sp());
        EXPECT(0xdf69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf67));
        EXPECT(0xc9, gbc.readMem(0xdf68));
        // CB C9 02CA
        gbc.setState(0xaaf0, 0x9589, 0x8c80, 0x22b3, 0x993c, 0x362d, 0x0, 0x0);
        gbc.writeMem(0xaaf0, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9589, gbc.sp());
        EXPECT(0xaaf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaf0));
        EXPECT(0xc9, gbc.readMem(0xaaf1));
        // CB C9 02CB
        gbc.setState(0xd9ff, 0x7f96, 0xc370, 0xf5dd, 0xb3be, 0x2e86, 0x0, 0x0);
        gbc.writeMem(0xd9ff, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7f96, gbc.sp());
        EXPECT(0xda01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9ff));
        EXPECT(0xc9, gbc.readMem(0xda00));
        // CB C9 02CC
        gbc.setState(0x9b94, 0x15f7, 0x3990, 0x8fd9, 0x9ffc, 0xe7df, 0x1, 0x1);
        gbc.writeMem(0x9b94, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x15f7, gbc.sp());
        EXPECT(0x9b96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b94));
        EXPECT(0xc9, gbc.readMem(0x9b95));
        // CB C9 02CD
        gbc.setState(0x108d, 0x8551, 0x8790, 0x2bc8, 0x475f, 0xfeb8, 0x0, 0x0);
        gbc.writeMem(0x108d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x8551, gbc.sp());
        EXPECT(0x108f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 02CE
        gbc.setState(0x4374, 0xcb64, 0x77e0, 0x3d86, 0x4b50, 0xbf43, 0x0, 0x1);
        gbc.writeMem(0x4374, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xcb64, gbc.sp());
        EXPECT(0x4376, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 02CF
        gbc.setState(0xec32, 0x501, 0x9850, 0xf48, 0x27d, 0x7dac, 0x1, 0x1);
        gbc.writeMem(0xec32, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x501, gbc.sp());
        EXPECT(0xec34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec32));
        EXPECT(0xc9, gbc.readMem(0xec33));
        // CB C9 02D0
        gbc.setState(0x8f80, 0xc41d, 0x9860, 0xb791, 0x2ff7, 0x3a8, 0x0, 0x0);
        gbc.writeMem(0x8f80, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xc41d, gbc.sp());
        EXPECT(0x8f82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f80));
        EXPECT(0xc9, gbc.readMem(0x8f81));
        // CB C9 02D1
        gbc.setState(0xb01e, 0x5232, 0xdb50, 0x4e61, 0x4cc5, 0xe36, 0x1, 0x0);
        gbc.writeMem(0xb01e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x5232, gbc.sp());
        EXPECT(0xb020, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb01e));
        EXPECT(0xc9, gbc.readMem(0xb01f));
        // CB C9 02D2
        gbc.setState(0x11b4, 0x9626, 0x3870, 0xc6b0, 0x1b6f, 0x5106, 0x0, 0x0);
        gbc.writeMem(0x11b4, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9626, gbc.sp());
        EXPECT(0x11b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 02D3
        gbc.setState(0xa9c1, 0x1d80, 0x2210, 0xb3ac, 0x360a, 0x530f, 0x1, 0x0);
        gbc.writeMem(0xa9c1, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x1d80, gbc.sp());
        EXPECT(0xa9c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9c1));
        EXPECT(0xc9, gbc.readMem(0xa9c2));
        // CB C9 02D4
        gbc.setState(0x9233, 0xa830, 0x78c0, 0x7f0c, 0xd4c0, 0x1262, 0x1, 0x1);
        gbc.writeMem(0x9233, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xa830, gbc.sp());
        EXPECT(0x9235, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9233));
        EXPECT(0xc9, gbc.readMem(0x9234));
        // CB C9 02D5
        gbc.setState(0x2255, 0x397b, 0x1ba0, 0xa2a0, 0xc022, 0x6961, 0x0, 0x1);
        gbc.writeMem(0x2255, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x397b, gbc.sp());
        EXPECT(0x2257, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 02D7
        gbc.setState(0x3631, 0xf54, 0x5230, 0xf7a5, 0x91b9, 0x3474, 0x0, 0x1);
        gbc.writeMem(0x3631, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf54, gbc.sp());
        EXPECT(0x3633, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 02D8
        gbc.setState(0xebd4, 0x9d89, 0xb50, 0x92b5, 0x56e, 0x819e, 0x1, 0x0);
        gbc.writeMem(0xebd4, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x9d89, gbc.sp());
        EXPECT(0xebd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebd4));
        EXPECT(0xc9, gbc.readMem(0xebd5));
        // CB C9 02D9
        gbc.setState(0xe88a, 0x784b, 0x2440, 0xdbe9, 0x3b4, 0x95f5, 0x0, 0x0);
        gbc.writeMem(0xe88a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x784b, gbc.sp());
        EXPECT(0xe88c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe88a));
        EXPECT(0xc9, gbc.readMem(0xe88b));
        // CB C9 02DA
        gbc.setState(0x9d78, 0x9236, 0x37c0, 0x6940, 0x93a9, 0xd73a, 0x1, 0x0);
        gbc.writeMem(0x9d78, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x9236, gbc.sp());
        EXPECT(0x9d7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d78));
        EXPECT(0xc9, gbc.readMem(0x9d79));
        // CB C9 02DB
        gbc.setState(0x7e49, 0x677, 0x6f50, 0xbb03, 0xd3f9, 0x3567, 0x1, 0x0);
        gbc.writeMem(0x7e49, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x677, gbc.sp());
        EXPECT(0x7e4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 02DC
        gbc.setState(0x253e, 0xbe24, 0xd360, 0x2acb, 0xf50c, 0x1376, 0x1, 0x1);
        gbc.writeMem(0x253e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xbe24, gbc.sp());
        EXPECT(0x2540, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 02DD
        gbc.setState(0xed1a, 0x9f8c, 0x7b60, 0x9f41, 0x8c9c, 0xa776, 0x1, 0x1);
        gbc.writeMem(0xed1a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x9f8c, gbc.sp());
        EXPECT(0xed1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed1a));
        EXPECT(0xc9, gbc.readMem(0xed1b));
        // CB C9 02DE
        gbc.setState(0x48b1, 0xbc90, 0x1630, 0x4ef6, 0x79b2, 0x72df, 0x0, 0x1);
        gbc.writeMem(0x48b1, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xbc90, gbc.sp());
        EXPECT(0x48b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 02DF
        gbc.setState(0x447b, 0x79f4, 0xd150, 0x7598, 0x90f4, 0xb825, 0x1, 0x1);
        gbc.writeMem(0x447b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x79f4, gbc.sp());
        EXPECT(0x447d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 02E0
        gbc.setState(0x5d9d, 0x33d6, 0xcc30, 0x2117, 0x8d2d, 0xf71e, 0x0, 0x1);
        gbc.writeMem(0x5d9d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x33d6, gbc.sp());
        EXPECT(0x5d9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 02E1
        gbc.setState(0xbe88, 0xf40f, 0x8f60, 0x3e7e, 0x238, 0xc80e, 0x1, 0x1);
        gbc.writeMem(0xbe88, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xf40f, gbc.sp());
        EXPECT(0xbe8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe88));
        EXPECT(0xc9, gbc.readMem(0xbe89));
        // CB C9 02E2
        gbc.setState(0x97d5, 0x3942, 0xf080, 0xc507, 0xdfbb, 0x6ef5, 0x1, 0x1);
        gbc.writeMem(0x97d5, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x3942, gbc.sp());
        EXPECT(0x97d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97d5));
        EXPECT(0xc9, gbc.readMem(0x97d6));
        // CB C9 02E3
        gbc.setState(0x1b32, 0x420e, 0xbaa0, 0xf95e, 0xc611, 0xfff4, 0x0, 0x0);
        gbc.writeMem(0x1b32, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x420e, gbc.sp());
        EXPECT(0x1b34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 02E4
        gbc.setState(0x204e, 0x2272, 0x9900, 0x9366, 0xc112, 0x2540, 0x0, 0x0);
        gbc.writeMem(0x204e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2272, gbc.sp());
        EXPECT(0x2050, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 02E5
        gbc.setState(0xc9cd, 0x4f13, 0xc5e0, 0x8a44, 0x8935, 0xbfc, 0x0, 0x1);
        gbc.writeMem(0xc9cd, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4f13, gbc.sp());
        EXPECT(0xc9cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9cd));
        EXPECT(0xc9, gbc.readMem(0xc9ce));
        // CB C9 02E6
        gbc.setState(0xa388, 0x482c, 0x1fe0, 0x764c, 0xc423, 0x85c9, 0x1, 0x0);
        gbc.writeMem(0xa388, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x482c, gbc.sp());
        EXPECT(0xa38a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa388));
        EXPECT(0xc9, gbc.readMem(0xa389));
        // CB C9 02E7
        gbc.setState(0x9059, 0xea44, 0x6dd0, 0xae9b, 0x3c99, 0x11c4, 0x0, 0x0);
        gbc.writeMem(0x9059, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xea44, gbc.sp());
        EXPECT(0x905b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9059));
        EXPECT(0xc9, gbc.readMem(0x905a));
        // CB C9 02E9
        gbc.setState(0x4c3f, 0x2de3, 0xf6c0, 0x292c, 0xa9f4, 0xfeb5, 0x1, 0x1);
        gbc.writeMem(0x4c3f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2de3, gbc.sp());
        EXPECT(0x4c41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 02EB
        gbc.setState(0x7c87, 0xdaec, 0xb6e0, 0xeeb0, 0xb0d4, 0x798b, 0x0, 0x1);
        gbc.writeMem(0x7c87, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xdaec, gbc.sp());
        EXPECT(0x7c89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 02EC
        gbc.setState(0x5200, 0x98d0, 0x2820, 0x84ee, 0x5f62, 0x8e5c, 0x1, 0x1);
        gbc.writeMem(0x5200, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x98d0, gbc.sp());
        EXPECT(0x5202, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 02ED
        gbc.setState(0xaedf, 0xc6ce, 0x4980, 0x4fe5, 0x26b0, 0x3fa6, 0x1, 0x1);
        gbc.writeMem(0xaedf, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xc6ce, gbc.sp());
        EXPECT(0xaee1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaedf));
        EXPECT(0xc9, gbc.readMem(0xaee0));
        // CB C9 02EE
        gbc.setState(0xc627, 0xcdda, 0xca50, 0xb98b, 0x4372, 0xe519, 0x0, 0x0);
        gbc.writeMem(0xc627, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xcdda, gbc.sp());
        EXPECT(0xc629, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc627));
        EXPECT(0xc9, gbc.readMem(0xc628));
        // CB C9 02F0
        gbc.setState(0x6543, 0x7cd0, 0x460, 0x419c, 0x316b, 0xe921, 0x1, 0x1);
        gbc.writeMem(0x6543, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x7cd0, gbc.sp());
        EXPECT(0x6545, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 02F1
        gbc.setState(0x7c82, 0xe032, 0xa340, 0xed55, 0x1cde, 0x847d, 0x0, 0x0);
        gbc.writeMem(0x7c82, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xe032, gbc.sp());
        EXPECT(0x7c84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 02F2
        gbc.setState(0x259e, 0x5852, 0xa440, 0xb5cf, 0xf55b, 0xd53c, 0x1, 0x1);
        gbc.writeMem(0x259e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x5852, gbc.sp());
        EXPECT(0x25a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 02F3
        gbc.setState(0x901f, 0x790c, 0x20e0, 0x106b, 0x248c, 0xec46, 0x0, 0x0);
        gbc.writeMem(0x901f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x790c, gbc.sp());
        EXPECT(0x9021, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x901f));
        EXPECT(0xc9, gbc.readMem(0x9020));
        // CB C9 02F4
        gbc.setState(0xb037, 0xea32, 0x10b0, 0x1e43, 0xabd7, 0xd555, 0x0, 0x1);
        gbc.writeMem(0xb037, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xea32, gbc.sp());
        EXPECT(0xb039, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb037));
        EXPECT(0xc9, gbc.readMem(0xb038));
        // CB C9 02F5
        gbc.setState(0xcf6c, 0x6f09, 0x5b90, 0x97fd, 0xb47, 0xecaf, 0x0, 0x0);
        gbc.writeMem(0xcf6c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x6f09, gbc.sp());
        EXPECT(0xcf6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf6c));
        EXPECT(0xc9, gbc.readMem(0xcf6d));
        // CB C9 02F6
        gbc.setState(0xe075, 0x4ac2, 0x9cb0, 0x93f3, 0x90f6, 0x2441, 0x0, 0x0);
        gbc.writeMem(0xe075, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x4ac2, gbc.sp());
        EXPECT(0xe077, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe075));
        EXPECT(0xc9, gbc.readMem(0xe076));
        // CB C9 02F7
        gbc.setState(0xcdf9, 0x9c2, 0x6380, 0x60fe, 0x92d0, 0x49a5, 0x1, 0x1);
        gbc.writeMem(0xcdf9, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x9c2, gbc.sp());
        EXPECT(0xcdfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdf9));
        EXPECT(0xc9, gbc.readMem(0xcdfa));
        // CB C9 02F8
        gbc.setState(0x6a8b, 0x4da3, 0x1ba0, 0x5128, 0x96c3, 0x65, 0x1, 0x1);
        gbc.writeMem(0x6a8b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x4da3, gbc.sp());
        EXPECT(0x6a8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 02F9
        gbc.setState(0xd893, 0xe4e0, 0x1100, 0xa653, 0x2b7, 0x9378, 0x0, 0x0);
        gbc.writeMem(0xd893, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe4e0, gbc.sp());
        EXPECT(0xd895, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd893));
        EXPECT(0xc9, gbc.readMem(0xd894));
        // CB C9 02FB
        gbc.setState(0xc93c, 0x7ca0, 0xf050, 0x12aa, 0x47ea, 0x1b7c, 0x0, 0x0);
        gbc.writeMem(0xc93c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x7ca0, gbc.sp());
        EXPECT(0xc93e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc93c));
        EXPECT(0xc9, gbc.readMem(0xc93d));
        // CB C9 02FC
        gbc.setState(0x24b2, 0x1613, 0x8690, 0xd304, 0x3c83, 0xc50e, 0x0, 0x1);
        gbc.writeMem(0x24b2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x1613, gbc.sp());
        EXPECT(0x24b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 02FD
        gbc.setState(0xb6c6, 0x332f, 0x99e0, 0x3117, 0x7b17, 0xa613, 0x1, 0x1);
        gbc.writeMem(0xb6c6, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x332f, gbc.sp());
        EXPECT(0xb6c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6c6));
        EXPECT(0xc9, gbc.readMem(0xb6c7));
        // CB C9 02FE
        gbc.setState(0x2487, 0xb580, 0x2d50, 0xe767, 0xf76c, 0xfe11, 0x1, 0x1);
        gbc.writeMem(0x2487, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb580, gbc.sp());
        EXPECT(0x2489, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 02FF
        gbc.setState(0xa0d8, 0x2878, 0xc9b0, 0xb55a, 0x5b4a, 0x4cb5, 0x1, 0x0);
        gbc.writeMem(0xa0d8, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2878, gbc.sp());
        EXPECT(0xa0da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0d8));
        EXPECT(0xc9, gbc.readMem(0xa0d9));
        // CB C9 0300
        gbc.setState(0x7125, 0x95cd, 0x38f0, 0xed7c, 0xa0e7, 0xe27d, 0x0, 0x1);
        gbc.writeMem(0x7125, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x95cd, gbc.sp());
        EXPECT(0x7127, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0301
        gbc.setState(0xd439, 0xc550, 0xb460, 0x4102, 0xa63b, 0xa10, 0x0, 0x1);
        gbc.writeMem(0xd439, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xc550, gbc.sp());
        EXPECT(0xd43b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd439));
        EXPECT(0xc9, gbc.readMem(0xd43a));
        // CB C9 0302
        gbc.setState(0xa11f, 0x8c6, 0x4380, 0x35d7, 0x8670, 0xcf0, 0x0, 0x1);
        gbc.writeMem(0xa11f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8c6, gbc.sp());
        EXPECT(0xa121, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa11f));
        EXPECT(0xc9, gbc.readMem(0xa120));
        // CB C9 0303
        gbc.setState(0x2eed, 0x681c, 0x1950, 0x8ec, 0x3a4e, 0xb7fb, 0x0, 0x1);
        gbc.writeMem(0x2eed, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x681c, gbc.sp());
        EXPECT(0x2eef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0304
        gbc.setState(0x5f24, 0x3d53, 0x9110, 0x3b99, 0xbe94, 0xbc43, 0x0, 0x0);
        gbc.writeMem(0x5f24, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3d53, gbc.sp());
        EXPECT(0x5f26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0305
        gbc.setState(0x7f61, 0x7439, 0x640, 0xd2e6, 0xa14f, 0x44e5, 0x1, 0x0);
        gbc.writeMem(0x7f61, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x7439, gbc.sp());
        EXPECT(0x7f63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0306
        gbc.setState(0x5f0c, 0xb6af, 0x6a60, 0x5fee, 0x258e, 0x46b2, 0x0, 0x0);
        gbc.writeMem(0x5f0c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xb6af, gbc.sp());
        EXPECT(0x5f0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0307
        gbc.setState(0x61ad, 0xb03f, 0xa400, 0xa4bc, 0xab29, 0x67e8, 0x1, 0x0);
        gbc.writeMem(0x61ad, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb03f, gbc.sp());
        EXPECT(0x61af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0308
        gbc.setState(0x3862, 0x9d6e, 0x590, 0xef28, 0x5bfe, 0xd898, 0x0, 0x0);
        gbc.writeMem(0x3862, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9d6e, gbc.sp());
        EXPECT(0x3864, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0309
        gbc.setState(0x5508, 0x95fa, 0xef20, 0xfbc4, 0xbc0d, 0xd256, 0x0, 0x0);
        gbc.writeMem(0x5508, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x95fa, gbc.sp());
        EXPECT(0x550a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 030A
        gbc.setState(0xad26, 0xd53b, 0x7210, 0xb24c, 0xa725, 0xbc20, 0x1, 0x0);
        gbc.writeMem(0xad26, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xd53b, gbc.sp());
        EXPECT(0xad28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad26));
        EXPECT(0xc9, gbc.readMem(0xad27));
        // CB C9 030B
        gbc.setState(0xa618, 0xe5fc, 0x4680, 0x2087, 0xe2fb, 0xb317, 0x1, 0x1);
        gbc.writeMem(0xa618, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xe5fc, gbc.sp());
        EXPECT(0xa61a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa618));
        EXPECT(0xc9, gbc.readMem(0xa619));
        // CB C9 030C
        gbc.setState(0xebb8, 0x3d03, 0x6b70, 0xeb1d, 0x581b, 0x3f7, 0x0, 0x0);
        gbc.writeMem(0xebb8, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x3d03, gbc.sp());
        EXPECT(0xebba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebb8));
        EXPECT(0xc9, gbc.readMem(0xebb9));
        // CB C9 030D
        gbc.setState(0x3520, 0xb6c8, 0x3fd0, 0x1861, 0x4c59, 0x3e97, 0x1, 0x1);
        gbc.writeMem(0x3520, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb6c8, gbc.sp());
        EXPECT(0x3522, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 030E
        gbc.setState(0x2b40, 0xb205, 0x5840, 0x2c4c, 0xb4d0, 0x4fe6, 0x1, 0x1);
        gbc.writeMem(0x2b40, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb205, gbc.sp());
        EXPECT(0x2b42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 030F
        gbc.setState(0xeb0c, 0x71e0, 0x8960, 0x15a, 0xf0b0, 0xd54a, 0x1, 0x0);
        gbc.writeMem(0xeb0c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x71e0, gbc.sp());
        EXPECT(0xeb0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb0c));
        EXPECT(0xc9, gbc.readMem(0xeb0d));
        // CB C9 0310
        gbc.setState(0x1a1d, 0x5647, 0x7750, 0xf42f, 0x2743, 0x2b99, 0x0, 0x0);
        gbc.writeMem(0x1a1d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x5647, gbc.sp());
        EXPECT(0x1a1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0311
        gbc.setState(0xe03c, 0xf21f, 0x6920, 0x569d, 0x62a, 0xcf86, 0x1, 0x0);
        gbc.writeMem(0xe03c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xf21f, gbc.sp());
        EXPECT(0xe03e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe03c));
        EXPECT(0xc9, gbc.readMem(0xe03d));
        // CB C9 0312
        gbc.setState(0xc8bf, 0x5cfc, 0x8cb0, 0x6984, 0x1654, 0x2d9e, 0x0, 0x0);
        gbc.writeMem(0xc8bf, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x5cfc, gbc.sp());
        EXPECT(0xc8c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8bf));
        EXPECT(0xc9, gbc.readMem(0xc8c0));
        // CB C9 0313
        gbc.setState(0xb576, 0xe553, 0xc7a0, 0x3c62, 0x6f49, 0xbc84, 0x0, 0x1);
        gbc.writeMem(0xb576, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe553, gbc.sp());
        EXPECT(0xb578, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb576));
        EXPECT(0xc9, gbc.readMem(0xb577));
        // CB C9 0314
        gbc.setState(0x164, 0xe802, 0x9850, 0xc22b, 0x29b7, 0x4bf2, 0x1, 0x0);
        gbc.writeMem(0x164, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xe802, gbc.sp());
        EXPECT(0x166, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0315
        gbc.setState(0x582c, 0x694, 0x45b0, 0x8266, 0x5c0a, 0x452, 0x0, 0x0);
        gbc.writeMem(0x582c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x694, gbc.sp());
        EXPECT(0x582e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0316
        gbc.setState(0x92c2, 0x1f10, 0x810, 0x60a7, 0x8363, 0xa7f4, 0x1, 0x1);
        gbc.writeMem(0x92c2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x1f10, gbc.sp());
        EXPECT(0x92c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92c2));
        EXPECT(0xc9, gbc.readMem(0x92c3));
        // CB C9 0317
        gbc.setState(0x91c2, 0x6aa9, 0x9570, 0x89ad, 0x6310, 0xfd6b, 0x1, 0x1);
        gbc.writeMem(0x91c2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x6aa9, gbc.sp());
        EXPECT(0x91c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91c2));
        EXPECT(0xc9, gbc.readMem(0x91c3));
        // CB C9 0318
        gbc.setState(0x7f95, 0xead6, 0x90d0, 0xf422, 0xe64f, 0x4054, 0x0, 0x1);
        gbc.writeMem(0x7f95, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xead6, gbc.sp());
        EXPECT(0x7f97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0319
        gbc.setState(0x8f8b, 0x3b8d, 0x4400, 0xc5ea, 0x2f2d, 0xc277, 0x0, 0x1);
        gbc.writeMem(0x8f8b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x3b8d, gbc.sp());
        EXPECT(0x8f8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f8b));
        EXPECT(0xc9, gbc.readMem(0x8f8c));
        // CB C9 031B
        gbc.setState(0x992d, 0xea4a, 0x11c0, 0xd93d, 0x6445, 0xe79b, 0x1, 0x0);
        gbc.writeMem(0x992d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xea4a, gbc.sp());
        EXPECT(0x992f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x992d));
        EXPECT(0xc9, gbc.readMem(0x992e));
        // CB C9 031C
        gbc.setState(0x6812, 0x699e, 0xb290, 0x7413, 0xac44, 0x44f6, 0x1, 0x0);
        gbc.writeMem(0x6812, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x699e, gbc.sp());
        EXPECT(0x6814, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 031D
        gbc.setState(0xae38, 0x9430, 0xa040, 0x58a4, 0x9ccb, 0x1b3e, 0x0, 0x1);
        gbc.writeMem(0xae38, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x9430, gbc.sp());
        EXPECT(0xae3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae38));
        EXPECT(0xc9, gbc.readMem(0xae39));
        // CB C9 031E
        gbc.setState(0x9553, 0x2d03, 0x84c0, 0x69f2, 0x752a, 0xf190, 0x1, 0x1);
        gbc.writeMem(0x9553, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x2d03, gbc.sp());
        EXPECT(0x9555, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9553));
        EXPECT(0xc9, gbc.readMem(0x9554));
        // CB C9 031F
        gbc.setState(0x46ce, 0xe76, 0x8e90, 0x7844, 0xbf2b, 0x3cf8, 0x1, 0x1);
        gbc.writeMem(0x46ce, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe76, gbc.sp());
        EXPECT(0x46d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0320
        gbc.setState(0xb1f5, 0xd51b, 0xd110, 0x6731, 0x26e, 0xbf33, 0x1, 0x0);
        gbc.writeMem(0xb1f5, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd51b, gbc.sp());
        EXPECT(0xb1f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1f5));
        EXPECT(0xc9, gbc.readMem(0xb1f6));
        // CB C9 0321
        gbc.setState(0xe307, 0x4ccc, 0xee90, 0x781, 0x45e8, 0x8bae, 0x1, 0x0);
        gbc.writeMem(0xe307, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x4ccc, gbc.sp());
        EXPECT(0xe309, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe307));
        EXPECT(0xc9, gbc.readMem(0xe308));
        // CB C9 0323
        gbc.setState(0x6421, 0x5844, 0xfcd0, 0x8865, 0x9e59, 0xdf1e, 0x1, 0x0);
        gbc.writeMem(0x6421, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x5844, gbc.sp());
        EXPECT(0x6423, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0324
        gbc.setState(0x7936, 0x4c30, 0xddb0, 0x7e72, 0x3ffe, 0xbafd, 0x0, 0x0);
        gbc.writeMem(0x7936, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x4c30, gbc.sp());
        EXPECT(0x7938, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0325
        gbc.setState(0x87ee, 0x11fc, 0xec60, 0x51cc, 0xdf4a, 0x98ad, 0x1, 0x0);
        gbc.writeMem(0x87ee, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x11fc, gbc.sp());
        EXPECT(0x87f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87ee));
        EXPECT(0xc9, gbc.readMem(0x87ef));
        // CB C9 0326
        gbc.setState(0x5810, 0xb825, 0xb000, 0xa900, 0x7be9, 0xd84f, 0x0, 0x0);
        gbc.writeMem(0x5810, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xb825, gbc.sp());
        EXPECT(0x5812, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0327
        gbc.setState(0x4513, 0xb329, 0x5f60, 0xbbca, 0x4b9b, 0x8be3, 0x1, 0x0);
        gbc.writeMem(0x4513, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xb329, gbc.sp());
        EXPECT(0x4515, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0328
        gbc.setState(0xf2e, 0xabbc, 0x81d0, 0xf81a, 0x351b, 0xd03f, 0x1, 0x0);
        gbc.writeMem(0xf2e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xabbc, gbc.sp());
        EXPECT(0xf30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0329
        gbc.setState(0xb152, 0xe38e, 0x61b0, 0xdb07, 0x2f6a, 0xb535, 0x0, 0x1);
        gbc.writeMem(0xb152, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe38e, gbc.sp());
        EXPECT(0xb154, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb152));
        EXPECT(0xc9, gbc.readMem(0xb153));
        // CB C9 032A
        gbc.setState(0x2a00, 0x48a1, 0x500, 0xbabe, 0x8e74, 0x426f, 0x0, 0x0);
        gbc.writeMem(0x2a00, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x48a1, gbc.sp());
        EXPECT(0x2a02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 032B
        gbc.setState(0x2eb8, 0x4887, 0x3540, 0x5044, 0xfc2e, 0x6638, 0x0, 0x1);
        gbc.writeMem(0x2eb8, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x4887, gbc.sp());
        EXPECT(0x2eba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 032C
        gbc.setState(0xd38f, 0x31b9, 0xbac0, 0x4a26, 0x2062, 0x83aa, 0x1, 0x1);
        gbc.writeMem(0xd38f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x31b9, gbc.sp());
        EXPECT(0xd391, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd38f));
        EXPECT(0xc9, gbc.readMem(0xd390));
        // CB C9 032D
        gbc.setState(0xa146, 0x143c, 0x1e0, 0x404d, 0x150e, 0xc78d, 0x1, 0x0);
        gbc.writeMem(0xa146, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x143c, gbc.sp());
        EXPECT(0xa148, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa146));
        EXPECT(0xc9, gbc.readMem(0xa147));
        // CB C9 032E
        gbc.setState(0x91d7, 0xf7a4, 0x3170, 0x20a4, 0x24b, 0x4d33, 0x0, 0x0);
        gbc.writeMem(0x91d7, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xf7a4, gbc.sp());
        EXPECT(0x91d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91d7));
        EXPECT(0xc9, gbc.readMem(0x91d8));
        // CB C9 0330
        gbc.setState(0x116a, 0xaf37, 0x7b70, 0x3a8c, 0x5f8c, 0xc496, 0x1, 0x1);
        gbc.writeMem(0x116a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xaf37, gbc.sp());
        EXPECT(0x116c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0331
        gbc.setState(0x387a, 0xa6bc, 0xe690, 0x9dff, 0x4bc8, 0xcb20, 0x0, 0x0);
        gbc.writeMem(0x387a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xa6bc, gbc.sp());
        EXPECT(0x387c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0332
        gbc.setState(0xae0f, 0x39e5, 0xfcb0, 0x6644, 0xa314, 0xd912, 0x1, 0x0);
        gbc.writeMem(0xae0f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x39e5, gbc.sp());
        EXPECT(0xae11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae0f));
        EXPECT(0xc9, gbc.readMem(0xae10));
        // CB C9 0333
        gbc.setState(0x7ac1, 0x2ea3, 0xa8f0, 0x7d83, 0x8222, 0x38b2, 0x0, 0x0);
        gbc.writeMem(0x7ac1, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x2ea3, gbc.sp());
        EXPECT(0x7ac3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0334
        gbc.setState(0x8aa5, 0x60c4, 0x8d00, 0x6854, 0xb40a, 0x97dc, 0x0, 0x1);
        gbc.writeMem(0x8aa5, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x60c4, gbc.sp());
        EXPECT(0x8aa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aa5));
        EXPECT(0xc9, gbc.readMem(0x8aa6));
        // CB C9 0335
        gbc.setState(0xed93, 0x302a, 0x960, 0xf85e, 0xfb69, 0x57b8, 0x1, 0x1);
        gbc.writeMem(0xed93, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x302a, gbc.sp());
        EXPECT(0xed95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed93));
        EXPECT(0xc9, gbc.readMem(0xed94));
        // CB C9 0336
        gbc.setState(0xb9bb, 0xc245, 0xd200, 0x25c4, 0x449d, 0xa5a, 0x0, 0x0);
        gbc.writeMem(0xb9bb, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc245, gbc.sp());
        EXPECT(0xb9bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9bb));
        EXPECT(0xc9, gbc.readMem(0xb9bc));
        // CB C9 0337
        gbc.setState(0x1c1, 0xb42, 0x42f0, 0x1853, 0xd8a6, 0x8f70, 0x1, 0x0);
        gbc.writeMem(0x1c1, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xb42, gbc.sp());
        EXPECT(0x1c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0338
        gbc.setState(0xe9fb, 0x7175, 0xac90, 0x4b00, 0x45cc, 0xecfa, 0x1, 0x0);
        gbc.writeMem(0xe9fb, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x7175, gbc.sp());
        EXPECT(0xe9fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9fb));
        EXPECT(0xc9, gbc.readMem(0xe9fc));
        // CB C9 0339
        gbc.setState(0x2e44, 0xa326, 0x54e0, 0x63f5, 0x99a2, 0x7b58, 0x0, 0x0);
        gbc.writeMem(0x2e44, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xa326, gbc.sp());
        EXPECT(0x2e46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 033A
        gbc.setState(0xd7aa, 0x4f2e, 0x48b0, 0x7338, 0x8798, 0x6d1c, 0x0, 0x0);
        gbc.writeMem(0xd7aa, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x4f2e, gbc.sp());
        EXPECT(0xd7ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7aa));
        EXPECT(0xc9, gbc.readMem(0xd7ab));
        // CB C9 033B
        gbc.setState(0x86b5, 0x2e6, 0xe220, 0x99b7, 0x6dcd, 0x86f, 0x1, 0x0);
        gbc.writeMem(0x86b5, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2e6, gbc.sp());
        EXPECT(0x86b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86b5));
        EXPECT(0xc9, gbc.readMem(0x86b6));
        // CB C9 033C
        gbc.setState(0xe0b7, 0xcad8, 0x9310, 0xdebe, 0xfe49, 0xc54c, 0x0, 0x0);
        gbc.writeMem(0xe0b7, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xcad8, gbc.sp());
        EXPECT(0xe0b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0b7));
        EXPECT(0xc9, gbc.readMem(0xe0b8));
        // CB C9 033D
        gbc.setState(0x9a06, 0x3c6c, 0x3fe0, 0x5766, 0xc244, 0x9869, 0x0, 0x1);
        gbc.writeMem(0x9a06, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x3c6c, gbc.sp());
        EXPECT(0x9a08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a06));
        EXPECT(0xc9, gbc.readMem(0x9a07));
        // CB C9 033E
        gbc.setState(0x395b, 0xf85a, 0x4000, 0x5abd, 0xce46, 0xbb77, 0x1, 0x0);
        gbc.writeMem(0x395b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xf85a, gbc.sp());
        EXPECT(0x395d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 033F
        gbc.setState(0xe417, 0x5e40, 0x6030, 0xf7ab, 0x4509, 0x4b56, 0x1, 0x1);
        gbc.writeMem(0xe417, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x5e40, gbc.sp());
        EXPECT(0xe419, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe417));
        EXPECT(0xc9, gbc.readMem(0xe418));
        // CB C9 0340
        gbc.setState(0xa751, 0xb7d9, 0x6a0, 0x9500, 0x1b3, 0x60df, 0x1, 0x0);
        gbc.writeMem(0xa751, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb7d9, gbc.sp());
        EXPECT(0xa753, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa751));
        EXPECT(0xc9, gbc.readMem(0xa752));
        // CB C9 0341
        gbc.setState(0x6d85, 0x3769, 0x40b0, 0x6424, 0x8d00, 0x886d, 0x1, 0x0);
        gbc.writeMem(0x6d85, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x3769, gbc.sp());
        EXPECT(0x6d87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0342
        gbc.setState(0xe4b5, 0x2490, 0x43a0, 0x871b, 0x7b32, 0xdb45, 0x1, 0x1);
        gbc.writeMem(0xe4b5, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x2490, gbc.sp());
        EXPECT(0xe4b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4b5));
        EXPECT(0xc9, gbc.readMem(0xe4b6));
        // CB C9 0343
        gbc.setState(0x7705, 0xcdba, 0x4680, 0x662, 0x8514, 0x3abd, 0x0, 0x0);
        gbc.writeMem(0x7705, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xcdba, gbc.sp());
        EXPECT(0x7707, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0344
        gbc.setState(0xd831, 0x26da, 0xfd90, 0x99f6, 0x469f, 0x105d, 0x0, 0x0);
        gbc.writeMem(0xd831, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x26da, gbc.sp());
        EXPECT(0xd833, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd831));
        EXPECT(0xc9, gbc.readMem(0xd832));
        // CB C9 0345
        gbc.setState(0xb345, 0xe894, 0xb820, 0x6026, 0x4d1e, 0xb93c, 0x1, 0x1);
        gbc.writeMem(0xb345, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xe894, gbc.sp());
        EXPECT(0xb347, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb345));
        EXPECT(0xc9, gbc.readMem(0xb346));
        // CB C9 0346
        gbc.setState(0x78af, 0x2545, 0x91e0, 0x657, 0xac46, 0x5890, 0x1, 0x1);
        gbc.writeMem(0x78af, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x2545, gbc.sp());
        EXPECT(0x78b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0347
        gbc.setState(0x25a9, 0xfb0d, 0xf3b0, 0x501c, 0xc377, 0xcb1a, 0x0, 0x0);
        gbc.writeMem(0x25a9, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xfb0d, gbc.sp());
        EXPECT(0x25ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0348
        gbc.setState(0x2abd, 0x888a, 0xaf60, 0x8c3, 0x6ded, 0xc332, 0x0, 0x0);
        gbc.writeMem(0x2abd, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x888a, gbc.sp());
        EXPECT(0x2abf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0349
        gbc.setState(0x1a4a, 0x267b, 0xfd80, 0x76c7, 0xc432, 0x9611, 0x0, 0x1);
        gbc.writeMem(0x1a4a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x267b, gbc.sp());
        EXPECT(0x1a4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 034A
        gbc.setState(0x781c, 0xc3ec, 0xb30, 0xe53d, 0x43a3, 0x7e66, 0x0, 0x0);
        gbc.writeMem(0x781c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xc3ec, gbc.sp());
        EXPECT(0x781e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 034C
        gbc.setState(0x247d, 0x50e0, 0x5f90, 0x8937, 0x660b, 0x17c3, 0x1, 0x0);
        gbc.writeMem(0x247d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x50e0, gbc.sp());
        EXPECT(0x247f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 034D
        gbc.setState(0x629a, 0x4565, 0xfcb0, 0x7f69, 0xc428, 0x9eb, 0x0, 0x0);
        gbc.writeMem(0x629a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x4565, gbc.sp());
        EXPECT(0x629c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 034F
        gbc.setState(0x37a5, 0x6584, 0xd140, 0x3731, 0xcbe1, 0x151e, 0x1, 0x1);
        gbc.writeMem(0x37a5, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x6584, gbc.sp());
        EXPECT(0x37a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0350
        gbc.setState(0x637, 0x381, 0x4540, 0x1f27, 0x9855, 0x259e, 0x1, 0x1);
        gbc.writeMem(0x637, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x381, gbc.sp());
        EXPECT(0x639, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0351
        gbc.setState(0x54fc, 0xc936, 0x9970, 0xd143, 0xb4ee, 0x9015, 0x1, 0x0);
        gbc.writeMem(0x54fc, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xc936, gbc.sp());
        EXPECT(0x54fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0352
        gbc.setState(0xd18, 0x8b21, 0x680, 0xda72, 0xe71, 0xbbbd, 0x1, 0x1);
        gbc.writeMem(0xd18, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x8b21, gbc.sp());
        EXPECT(0xd1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0353
        gbc.setState(0x354d, 0x4eb9, 0xd730, 0x508f, 0x99da, 0x68fb, 0x0, 0x0);
        gbc.writeMem(0x354d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x4eb9, gbc.sp());
        EXPECT(0x354f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0354
        gbc.setState(0xc603, 0xd857, 0x9170, 0xb076, 0xb2b2, 0xb901, 0x0, 0x0);
        gbc.writeMem(0xc603, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd857, gbc.sp());
        EXPECT(0xc605, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc603));
        EXPECT(0xc9, gbc.readMem(0xc604));
        // CB C9 0355
        gbc.setState(0xaa55, 0xf473, 0x3740, 0x1814, 0xf22d, 0xd2a4, 0x0, 0x0);
        gbc.writeMem(0xaa55, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf473, gbc.sp());
        EXPECT(0xaa57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa55));
        EXPECT(0xc9, gbc.readMem(0xaa56));
        // CB C9 0356
        gbc.setState(0xeeb, 0x360f, 0xab00, 0x873f, 0x58a8, 0x59ee, 0x0, 0x0);
        gbc.writeMem(0xeeb, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x360f, gbc.sp());
        EXPECT(0xeed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0357
        gbc.setState(0x3d14, 0x18eb, 0x6ae0, 0xefc6, 0x2091, 0xa6e0, 0x1, 0x1);
        gbc.writeMem(0x3d14, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x18eb, gbc.sp());
        EXPECT(0x3d16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0358
        gbc.setState(0x9957, 0x82e9, 0x8260, 0xb44a, 0x9bed, 0x54be, 0x0, 0x1);
        gbc.writeMem(0x9957, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x82e9, gbc.sp());
        EXPECT(0x9959, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9957));
        EXPECT(0xc9, gbc.readMem(0x9958));
        // CB C9 0359
        gbc.setState(0x57d0, 0x8ecb, 0x750, 0x6eb4, 0x8f3e, 0xda78, 0x1, 0x0);
        gbc.writeMem(0x57d0, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x8ecb, gbc.sp());
        EXPECT(0x57d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 035A
        gbc.setState(0xec95, 0x37f, 0xb060, 0xe110, 0x9a15, 0x5105, 0x1, 0x1);
        gbc.writeMem(0xec95, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x37f, gbc.sp());
        EXPECT(0xec97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec95));
        EXPECT(0xc9, gbc.readMem(0xec96));
        // CB C9 035B
        gbc.setState(0xa7ce, 0x7a00, 0xe1f0, 0xde3e, 0xcbf5, 0xab88, 0x1, 0x1);
        gbc.writeMem(0xa7ce, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x7a00, gbc.sp());
        EXPECT(0xa7d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7ce));
        EXPECT(0xc9, gbc.readMem(0xa7cf));
        // CB C9 035C
        gbc.setState(0x90a2, 0xe566, 0x1b50, 0xe5e7, 0xdc02, 0xf67, 0x1, 0x0);
        gbc.writeMem(0x90a2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xe566, gbc.sp());
        EXPECT(0x90a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90a2));
        EXPECT(0xc9, gbc.readMem(0x90a3));
        // CB C9 035D
        gbc.setState(0xa939, 0xff0e, 0xb6f0, 0xa548, 0xf276, 0x1b59, 0x0, 0x1);
        gbc.writeMem(0xa939, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xff0e, gbc.sp());
        EXPECT(0xa93b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa939));
        EXPECT(0xc9, gbc.readMem(0xa93a));
        // CB C9 035E
        gbc.setState(0x530c, 0x56e6, 0x9410, 0x6e99, 0xc668, 0xd294, 0x1, 0x0);
        gbc.writeMem(0x530c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x56e6, gbc.sp());
        EXPECT(0x530e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 035F
        gbc.setState(0x2a64, 0x3c45, 0x5060, 0xb1de, 0x97b7, 0x501f, 0x1, 0x1);
        gbc.writeMem(0x2a64, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3c45, gbc.sp());
        EXPECT(0x2a66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0360
        gbc.setState(0x7d2c, 0x754e, 0xc00, 0xe861, 0x77d, 0x8129, 0x1, 0x0);
        gbc.writeMem(0x7d2c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x754e, gbc.sp());
        EXPECT(0x7d2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0361
        gbc.setState(0x2500, 0x76a, 0x94f0, 0xf094, 0xe81b, 0xd220, 0x1, 0x1);
        gbc.writeMem(0x2500, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x76a, gbc.sp());
        EXPECT(0x2502, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0362
        gbc.setState(0xcb13, 0x55a, 0x3a20, 0xb842, 0x779, 0x7f61, 0x1, 0x0);
        gbc.writeMem(0xcb13, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x55a, gbc.sp());
        EXPECT(0xcb15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb13));
        EXPECT(0xc9, gbc.readMem(0xcb14));
        // CB C9 0364
        gbc.setState(0x5088, 0x1fe7, 0xb960, 0x56ec, 0x73d2, 0xb5fa, 0x0, 0x1);
        gbc.writeMem(0x5088, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x1fe7, gbc.sp());
        EXPECT(0x508a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0365
        gbc.setState(0xfb5, 0x6e4d, 0x4f20, 0xc2d4, 0x3e85, 0x7b40, 0x0, 0x0);
        gbc.writeMem(0xfb5, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x6e4d, gbc.sp());
        EXPECT(0xfb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0367
        gbc.setState(0x5ce1, 0x4aee, 0x1220, 0xbeac, 0xedb3, 0x3a6a, 0x1, 0x1);
        gbc.writeMem(0x5ce1, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4aee, gbc.sp());
        EXPECT(0x5ce3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0369
        gbc.setState(0x115c, 0x86ab, 0x9390, 0xdede, 0x9d8, 0xe02d, 0x0, 0x1);
        gbc.writeMem(0x115c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x86ab, gbc.sp());
        EXPECT(0x115e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 036A
        gbc.setState(0xaada, 0x779d, 0x540, 0x5b2e, 0x8adf, 0x7f18, 0x0, 0x0);
        gbc.writeMem(0xaada, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x779d, gbc.sp());
        EXPECT(0xaadc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaada));
        EXPECT(0xc9, gbc.readMem(0xaadb));
        // CB C9 036B
        gbc.setState(0xa8bf, 0x2260, 0x4d80, 0x6ce, 0xca1e, 0xb10e, 0x0, 0x1);
        gbc.writeMem(0xa8bf, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x2260, gbc.sp());
        EXPECT(0xa8c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8bf));
        EXPECT(0xc9, gbc.readMem(0xa8c0));
        // CB C9 036C
        gbc.setState(0x1ee6, 0x75ae, 0x8d0, 0x20fa, 0xedda, 0x161b, 0x0, 0x1);
        gbc.writeMem(0x1ee6, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x75ae, gbc.sp());
        EXPECT(0x1ee8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 036D
        gbc.setState(0xd939, 0x6025, 0x57f0, 0xdd25, 0x34c4, 0xe77a, 0x1, 0x1);
        gbc.writeMem(0xd939, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x6025, gbc.sp());
        EXPECT(0xd93b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd939));
        EXPECT(0xc9, gbc.readMem(0xd93a));
        // CB C9 036E
        gbc.setState(0xe445, 0x2404, 0xc590, 0xfab, 0x8bd6, 0xfabd, 0x1, 0x0);
        gbc.writeMem(0xe445, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x2404, gbc.sp());
        EXPECT(0xe447, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe445));
        EXPECT(0xc9, gbc.readMem(0xe446));
        // CB C9 036F
        gbc.setState(0x95fe, 0x697f, 0x29c0, 0xeb3, 0x111d, 0x6a5c, 0x1, 0x1);
        gbc.writeMem(0x95fe, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x697f, gbc.sp());
        EXPECT(0x9600, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95fe));
        EXPECT(0xc9, gbc.readMem(0x95ff));
        // CB C9 0370
        gbc.setState(0xbe4f, 0x6114, 0x250, 0x1951, 0xebf2, 0x949, 0x0, 0x0);
        gbc.writeMem(0xbe4f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x6114, gbc.sp());
        EXPECT(0xbe51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe4f));
        EXPECT(0xc9, gbc.readMem(0xbe50));
        // CB C9 0371
        gbc.setState(0x1116, 0x3c3f, 0xc340, 0x16f4, 0x41ed, 0x982a, 0x0, 0x0);
        gbc.writeMem(0x1116, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x3c3f, gbc.sp());
        EXPECT(0x1118, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0372
        gbc.setState(0xa600, 0xcea5, 0x3ef0, 0x9eb6, 0x8bba, 0xd638, 0x1, 0x0);
        gbc.writeMem(0xa600, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xcea5, gbc.sp());
        EXPECT(0xa602, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa600));
        EXPECT(0xc9, gbc.readMem(0xa601));
        // CB C9 0373
        gbc.setState(0x8e38, 0xb1d, 0x3270, 0x7789, 0x15d8, 0x8add, 0x0, 0x0);
        gbc.writeMem(0x8e38, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb1d, gbc.sp());
        EXPECT(0x8e3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e38));
        EXPECT(0xc9, gbc.readMem(0x8e39));
        // CB C9 0374
        gbc.setState(0x4dbf, 0x914a, 0x4360, 0xcea8, 0x55e1, 0x2d1d, 0x1, 0x0);
        gbc.writeMem(0x4dbf, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x914a, gbc.sp());
        EXPECT(0x4dc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0375
        gbc.setState(0xda18, 0xdb89, 0x62d0, 0x6471, 0x1c86, 0x5977, 0x1, 0x1);
        gbc.writeMem(0xda18, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xdb89, gbc.sp());
        EXPECT(0xda1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda18));
        EXPECT(0xc9, gbc.readMem(0xda19));
        // CB C9 0376
        gbc.setState(0x5980, 0x1571, 0xe770, 0x2ac, 0x429e, 0x88e7, 0x0, 0x1);
        gbc.writeMem(0x5980, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1571, gbc.sp());
        EXPECT(0x5982, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0377
        gbc.setState(0x90b4, 0xb05b, 0x1850, 0xd37e, 0x40da, 0x86a8, 0x1, 0x0);
        gbc.writeMem(0x90b4, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xb05b, gbc.sp());
        EXPECT(0x90b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90b4));
        EXPECT(0xc9, gbc.readMem(0x90b5));
        // CB C9 0378
        gbc.setState(0xd362, 0x2ce0, 0x1480, 0x3540, 0x2dbd, 0xb4ee, 0x1, 0x1);
        gbc.writeMem(0xd362, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x2ce0, gbc.sp());
        EXPECT(0xd364, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd362));
        EXPECT(0xc9, gbc.readMem(0xd363));
        // CB C9 0379
        gbc.setState(0x5719, 0x3387, 0x71a0, 0xd53b, 0x3a95, 0xb64d, 0x1, 0x1);
        gbc.writeMem(0x5719, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3387, gbc.sp());
        EXPECT(0x571b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 037A
        gbc.setState(0x1a97, 0x1822, 0xa5f0, 0xb1b6, 0x7b4e, 0xe8ba, 0x0, 0x1);
        gbc.writeMem(0x1a97, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x1822, gbc.sp());
        EXPECT(0x1a99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 037B
        gbc.setState(0x7780, 0x28a8, 0xb9b0, 0x7606, 0x3989, 0x9fa1, 0x1, 0x1);
        gbc.writeMem(0x7780, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x28a8, gbc.sp());
        EXPECT(0x7782, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 037C
        gbc.setState(0xebaf, 0xdbfe, 0xf8b0, 0xf75f, 0x21ca, 0x7ccb, 0x1, 0x0);
        gbc.writeMem(0xebaf, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xdbfe, gbc.sp());
        EXPECT(0xebb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebaf));
        EXPECT(0xc9, gbc.readMem(0xebb0));
        // CB C9 037E
        gbc.setState(0x422b, 0x131e, 0xa220, 0x156c, 0xdf7, 0x5736, 0x0, 0x1);
        gbc.writeMem(0x422b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x131e, gbc.sp());
        EXPECT(0x422d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 037F
        gbc.setState(0x53b5, 0xdd66, 0xe120, 0xe204, 0xb584, 0xd169, 0x1, 0x0);
        gbc.writeMem(0x53b5, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xdd66, gbc.sp());
        EXPECT(0x53b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0380
        gbc.setState(0x4a83, 0xffb, 0x2fe0, 0xc86f, 0x1e80, 0x1f85, 0x0, 0x1);
        gbc.writeMem(0x4a83, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xffb, gbc.sp());
        EXPECT(0x4a85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0381
        gbc.setState(0xb4, 0x48f0, 0xad50, 0x8b82, 0x5490, 0x861a, 0x0, 0x0);
        gbc.writeMem(0xb4, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x48f0, gbc.sp());
        EXPECT(0xb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0382
        gbc.setState(0xcec1, 0xae2f, 0x51e0, 0x2b52, 0xb28a, 0x647f, 0x0, 0x1);
        gbc.writeMem(0xcec1, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xae2f, gbc.sp());
        EXPECT(0xcec3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcec1));
        EXPECT(0xc9, gbc.readMem(0xcec2));
        // CB C9 0383
        gbc.setState(0x68f, 0xc514, 0x84a0, 0x3f0b, 0x2fb2, 0xfeeb, 0x1, 0x0);
        gbc.writeMem(0x68f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xc514, gbc.sp());
        EXPECT(0x691, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0384
        gbc.setState(0x499f, 0xb4e7, 0xd510, 0x92ca, 0xe491, 0x74ef, 0x0, 0x0);
        gbc.writeMem(0x499f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xb4e7, gbc.sp());
        EXPECT(0x49a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0385
        gbc.setState(0x59ea, 0xb617, 0x2200, 0x6775, 0xb1ae, 0xe13e, 0x0, 0x1);
        gbc.writeMem(0x59ea, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xb617, gbc.sp());
        EXPECT(0x59ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0386
        gbc.setState(0x18b6, 0xa698, 0x46b0, 0x6681, 0x553d, 0x3df5, 0x0, 0x0);
        gbc.writeMem(0x18b6, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa698, gbc.sp());
        EXPECT(0x18b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0387
        gbc.setState(0x10c3, 0x1040, 0xc200, 0xcc8f, 0x517a, 0x94d3, 0x0, 0x0);
        gbc.writeMem(0x10c3, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x1040, gbc.sp());
        EXPECT(0x10c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0388
        gbc.setState(0x3468, 0x4a89, 0x9f90, 0xff12, 0xcb8e, 0xa4f7, 0x1, 0x0);
        gbc.writeMem(0x3468, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x4a89, gbc.sp());
        EXPECT(0x346a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0389
        gbc.setState(0x9548, 0x7221, 0x3f80, 0xa1a7, 0xec0b, 0xd96b, 0x1, 0x1);
        gbc.writeMem(0x9548, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7221, gbc.sp());
        EXPECT(0x954a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9548));
        EXPECT(0xc9, gbc.readMem(0x9549));
        // CB C9 038A
        gbc.setState(0xd0a, 0xe971, 0x68a0, 0x55b9, 0x86fd, 0xc2f9, 0x0, 0x1);
        gbc.writeMem(0xd0a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xe971, gbc.sp());
        EXPECT(0xd0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 038B
        gbc.setState(0x30cf, 0x2301, 0x4240, 0x9bda, 0x8a53, 0xdae8, 0x0, 0x0);
        gbc.writeMem(0x30cf, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x2301, gbc.sp());
        EXPECT(0x30d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 038C
        gbc.setState(0x35c6, 0x1024, 0x6c30, 0x18cc, 0x88b2, 0xbf67, 0x1, 0x0);
        gbc.writeMem(0x35c6, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x1024, gbc.sp());
        EXPECT(0x35c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 038D
        gbc.setState(0xced8, 0x8609, 0x950, 0xbf87, 0x2ba1, 0xfe02, 0x1, 0x1);
        gbc.writeMem(0xced8, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x8609, gbc.sp());
        EXPECT(0xceda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xced8));
        EXPECT(0xc9, gbc.readMem(0xced9));
        // CB C9 038E
        gbc.setState(0xa6b6, 0xdce9, 0xc630, 0x8e2e, 0x212d, 0x31dd, 0x0, 0x0);
        gbc.writeMem(0xa6b6, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xdce9, gbc.sp());
        EXPECT(0xa6b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6b6));
        EXPECT(0xc9, gbc.readMem(0xa6b7));
        // CB C9 038F
        gbc.setState(0x9095, 0xe94, 0x210, 0x391e, 0x3576, 0x856e, 0x1, 0x0);
        gbc.writeMem(0x9095, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xe94, gbc.sp());
        EXPECT(0x9097, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9095));
        EXPECT(0xc9, gbc.readMem(0x9096));
        // CB C9 0390
        gbc.setState(0x91cb, 0xdf67, 0x1020, 0xae87, 0xe160, 0xab80, 0x1, 0x1);
        gbc.writeMem(0x91cb, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xdf67, gbc.sp());
        EXPECT(0x91cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91cb));
        EXPECT(0xc9, gbc.readMem(0x91cc));
        // CB C9 0391
        gbc.setState(0xca12, 0xac0f, 0xf810, 0xacbd, 0xfbd3, 0x95ae, 0x0, 0x1);
        gbc.writeMem(0xca12, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xac0f, gbc.sp());
        EXPECT(0xca14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca12));
        EXPECT(0xc9, gbc.readMem(0xca13));
        // CB C9 0392
        gbc.setState(0xbffd, 0x2894, 0x3ed0, 0xc6d1, 0xb996, 0x182a, 0x1, 0x0);
        gbc.writeMem(0xbffd, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x2894, gbc.sp());
        EXPECT(0xbfff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbffd));
        EXPECT(0xc9, gbc.readMem(0xbffe));
        // CB C9 0393
        gbc.setState(0xa6aa, 0xbcfa, 0xc1b0, 0x64d3, 0xd7f3, 0xf22a, 0x1, 0x1);
        gbc.writeMem(0xa6aa, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xbcfa, gbc.sp());
        EXPECT(0xa6ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6aa));
        EXPECT(0xc9, gbc.readMem(0xa6ab));
        // CB C9 0394
        gbc.setState(0x1175, 0x9d2f, 0xdb40, 0xef84, 0xa5c1, 0xf277, 0x1, 0x0);
        gbc.writeMem(0x1175, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x9d2f, gbc.sp());
        EXPECT(0x1177, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0395
        gbc.setState(0xc0db, 0x548c, 0x83c0, 0x7f71, 0xe6b4, 0xde3d, 0x0, 0x1);
        gbc.writeMem(0xc0db, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x548c, gbc.sp());
        EXPECT(0xc0dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0db));
        EXPECT(0xc9, gbc.readMem(0xc0dc));
        // CB C9 0396
        gbc.setState(0x778, 0x3cb0, 0x5910, 0x7a57, 0xc654, 0x6882, 0x0, 0x0);
        gbc.writeMem(0x778, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3cb0, gbc.sp());
        EXPECT(0x77a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0397
        gbc.setState(0x7689, 0xdfac, 0x6300, 0x7af0, 0xcb97, 0x315b, 0x0, 0x1);
        gbc.writeMem(0x7689, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xdfac, gbc.sp());
        EXPECT(0x768b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 0398
        gbc.setState(0x74f5, 0xb6e7, 0x95d0, 0x2b07, 0xd71d, 0x632d, 0x0, 0x1);
        gbc.writeMem(0x74f5, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xb6e7, gbc.sp());
        EXPECT(0x74f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 0399
        gbc.setState(0x5772, 0xcde4, 0x7830, 0xce8b, 0xc98, 0x2084, 0x0, 0x0);
        gbc.writeMem(0x5772, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xcde4, gbc.sp());
        EXPECT(0x5774, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 039A
        gbc.setState(0x1331, 0x67f4, 0xc4d0, 0x19dc, 0x96a6, 0x3d57, 0x0, 0x0);
        gbc.writeMem(0x1331, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x67f4, gbc.sp());
        EXPECT(0x1333, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 039B
        gbc.setState(0x8744, 0x1eb9, 0x7ef0, 0x34e7, 0x3718, 0xac6d, 0x1, 0x0);
        gbc.writeMem(0x8744, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x1eb9, gbc.sp());
        EXPECT(0x8746, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8744));
        EXPECT(0xc9, gbc.readMem(0x8745));
        // CB C9 039C
        gbc.setState(0x5dcc, 0x846e, 0x1430, 0xc7df, 0x3409, 0x6649, 0x0, 0x1);
        gbc.writeMem(0x5dcc, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x846e, gbc.sp());
        EXPECT(0x5dce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 039D
        gbc.setState(0x1f54, 0x19d4, 0x180, 0x308d, 0xbd67, 0x38bb, 0x1, 0x1);
        gbc.writeMem(0x1f54, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x19d4, gbc.sp());
        EXPECT(0x1f56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 039E
        gbc.setState(0x4007, 0xb1fe, 0x5d90, 0x70d3, 0x1a78, 0x911c, 0x1, 0x0);
        gbc.writeMem(0x4007, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xb1fe, gbc.sp());
        EXPECT(0x4009, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 039F
        gbc.setState(0x50b2, 0xca2b, 0xda90, 0x25d4, 0x2c85, 0x30e9, 0x0, 0x0);
        gbc.writeMem(0x50b2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xca2b, gbc.sp());
        EXPECT(0x50b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 03A0
        gbc.setState(0xaa31, 0xdd2b, 0x10e0, 0xd5c3, 0xf058, 0x38e6, 0x1, 0x0);
        gbc.writeMem(0xaa31, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xdd2b, gbc.sp());
        EXPECT(0xaa33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa31));
        EXPECT(0xc9, gbc.readMem(0xaa32));
        // CB C9 03A1
        gbc.setState(0xb218, 0x27ef, 0x9f90, 0x5b7a, 0xe124, 0x25a7, 0x0, 0x0);
        gbc.writeMem(0xb218, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x27ef, gbc.sp());
        EXPECT(0xb21a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb218));
        EXPECT(0xc9, gbc.readMem(0xb219));
        // CB C9 03A2
        gbc.setState(0xbf85, 0xb58c, 0x630, 0x3fab, 0x2a82, 0x317e, 0x1, 0x1);
        gbc.writeMem(0xbf85, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xb58c, gbc.sp());
        EXPECT(0xbf87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf85));
        EXPECT(0xc9, gbc.readMem(0xbf86));
        // CB C9 03A3
        gbc.setState(0x49b, 0xe9, 0x1650, 0x34d4, 0x8b5e, 0x4e34, 0x0, 0x0);
        gbc.writeMem(0x49b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe9, gbc.sp());
        EXPECT(0x49d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 03A4
        gbc.setState(0x33e2, 0xecb6, 0xee10, 0x191c, 0x38e4, 0x25cb, 0x1, 0x0);
        gbc.writeMem(0x33e2, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xecb6, gbc.sp());
        EXPECT(0x33e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 03A5
        gbc.setState(0xa070, 0x400f, 0x4560, 0x7a6f, 0x2292, 0x28f2, 0x0, 0x1);
        gbc.writeMem(0xa070, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x400f, gbc.sp());
        EXPECT(0xa072, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa070));
        EXPECT(0xc9, gbc.readMem(0xa071));
        // CB C9 03A7
        gbc.setState(0x1f5f, 0xb5be, 0x2830, 0xe542, 0x436f, 0x3f4a, 0x1, 0x1);
        gbc.writeMem(0x1f5f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xb5be, gbc.sp());
        EXPECT(0x1f61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 03A9
        gbc.setState(0x6aec, 0xd370, 0xfa0, 0x80a0, 0x2aac, 0x3c9c, 0x1, 0x1);
        gbc.writeMem(0x6aec, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd370, gbc.sp());
        EXPECT(0x6aee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 03AA
        gbc.setState(0x2265, 0xfd47, 0x2920, 0x4fc1, 0x646c, 0xbdec, 0x0, 0x1);
        gbc.writeMem(0x2265, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xfd47, gbc.sp());
        EXPECT(0x2267, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 03AB
        gbc.setState(0x5314, 0xe273, 0x3430, 0xcd34, 0x609d, 0xb201, 0x0, 0x1);
        gbc.writeMem(0x5314, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xe273, gbc.sp());
        EXPECT(0x5316, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 03AC
        gbc.setState(0x9c99, 0x5693, 0x62e0, 0x9424, 0x2dc4, 0x631a, 0x0, 0x1);
        gbc.writeMem(0x9c99, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x5693, gbc.sp());
        EXPECT(0x9c9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c99));
        EXPECT(0xc9, gbc.readMem(0x9c9a));
        // CB C9 03AD
        gbc.setState(0xebee, 0xc574, 0xd1c0, 0x6430, 0x88d, 0xb1d8, 0x1, 0x0);
        gbc.writeMem(0xebee, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc574, gbc.sp());
        EXPECT(0xebf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebee));
        EXPECT(0xc9, gbc.readMem(0xebef));
        // CB C9 03AF
        gbc.setState(0xb3d4, 0xb105, 0x8a00, 0x6d57, 0xc8ad, 0x2da4, 0x0, 0x1);
        gbc.writeMem(0xb3d4, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xb105, gbc.sp());
        EXPECT(0xb3d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3d4));
        EXPECT(0xc9, gbc.readMem(0xb3d5));
        // CB C9 03B0
        gbc.setState(0xad98, 0x5563, 0x8c90, 0x9ad6, 0xa7ae, 0x827b, 0x0, 0x0);
        gbc.writeMem(0xad98, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x5563, gbc.sp());
        EXPECT(0xad9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad98));
        EXPECT(0xc9, gbc.readMem(0xad99));
        // CB C9 03B3
        gbc.setState(0x1fdd, 0xcf13, 0xf0c0, 0xe7b7, 0x15f5, 0x86b0, 0x0, 0x1);
        gbc.writeMem(0x1fdd, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xcf13, gbc.sp());
        EXPECT(0x1fdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 03B4
        gbc.setState(0x3c47, 0xc41a, 0x6530, 0x17a1, 0x1841, 0x4956, 0x0, 0x1);
        gbc.writeMem(0x3c47, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xc41a, gbc.sp());
        EXPECT(0x3c49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 03B5
        gbc.setState(0x2e22, 0x9bcf, 0x7c30, 0xf98, 0xe51c, 0xb15e, 0x1, 0x1);
        gbc.writeMem(0x2e22, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9bcf, gbc.sp());
        EXPECT(0x2e24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 03B6
        gbc.setState(0x2a07, 0x62e0, 0x3dd0, 0xe8c5, 0xac66, 0x68d0, 0x1, 0x0);
        gbc.writeMem(0x2a07, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x62e0, gbc.sp());
        EXPECT(0x2a09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 03B7
        gbc.setState(0x4ee8, 0x89ee, 0xa470, 0x9f09, 0xf220, 0x96ac, 0x1, 0x1);
        gbc.writeMem(0x4ee8, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x89ee, gbc.sp());
        EXPECT(0x4eea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 03B8
        gbc.setState(0xe669, 0xa055, 0x3590, 0x1b33, 0x8b9, 0x8e6b, 0x0, 0x0);
        gbc.writeMem(0xe669, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xa055, gbc.sp());
        EXPECT(0xe66b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe669));
        EXPECT(0xc9, gbc.readMem(0xe66a));
        // CB C9 03B9
        gbc.setState(0xaaec, 0x9160, 0x4e00, 0xfe30, 0x243a, 0x1cba, 0x0, 0x0);
        gbc.writeMem(0xaaec, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x9160, gbc.sp());
        EXPECT(0xaaee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaec));
        EXPECT(0xc9, gbc.readMem(0xaaed));
        // CB C9 03BA
        gbc.setState(0x6449, 0x64f4, 0xe210, 0xcb5a, 0x4157, 0xed27, 0x0, 0x0);
        gbc.writeMem(0x6449, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x64f4, gbc.sp());
        EXPECT(0x644b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 03BC
        gbc.setState(0x743d, 0xde48, 0x5830, 0x4c3c, 0xb18c, 0xed38, 0x0, 0x1);
        gbc.writeMem(0x743d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xde48, gbc.sp());
        EXPECT(0x743f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 03BD
        gbc.setState(0x89ff, 0xcf7f, 0x2210, 0xccda, 0x5d9, 0x1097, 0x0, 0x0);
        gbc.writeMem(0x89ff, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xcf7f, gbc.sp());
        EXPECT(0x8a01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89ff));
        EXPECT(0xc9, gbc.readMem(0x8a00));
        // CB C9 03BE
        gbc.setState(0xc405, 0x9bb2, 0x88b0, 0x7d4f, 0x6c25, 0x44e4, 0x0, 0x1);
        gbc.writeMem(0xc405, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9bb2, gbc.sp());
        EXPECT(0xc407, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc405));
        EXPECT(0xc9, gbc.readMem(0xc406));
        // CB C9 03BF
        gbc.setState(0x7b27, 0x39f2, 0x2c90, 0xf4d5, 0xcf8f, 0xc5c8, 0x1, 0x0);
        gbc.writeMem(0x7b27, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x39f2, gbc.sp());
        EXPECT(0x7b29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 03C0
        gbc.setState(0x4caf, 0x6f49, 0x8320, 0xf219, 0x6eae, 0xe8b8, 0x0, 0x0);
        gbc.writeMem(0x4caf, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x6f49, gbc.sp());
        EXPECT(0x4cb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 03C1
        gbc.setState(0x2bb, 0x8dd5, 0xa10, 0xc557, 0x307, 0x7081, 0x0, 0x0);
        gbc.writeMem(0x2bb, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x8dd5, gbc.sp());
        EXPECT(0x2bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 03C2
        gbc.setState(0xd714, 0x94ef, 0xaf10, 0x21e1, 0xca51, 0x1cf0, 0x0, 0x1);
        gbc.writeMem(0xd714, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x94ef, gbc.sp());
        EXPECT(0xd716, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd714));
        EXPECT(0xc9, gbc.readMem(0xd715));
        // CB C9 03C3
        gbc.setState(0x95da, 0x26bb, 0x7810, 0x832, 0x2d5, 0x5a63, 0x0, 0x1);
        gbc.writeMem(0x95da, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x26bb, gbc.sp());
        EXPECT(0x95dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95da));
        EXPECT(0xc9, gbc.readMem(0x95db));
        // CB C9 03C4
        gbc.setState(0x3660, 0xce8e, 0x4480, 0x6d8f, 0x245c, 0x70ff, 0x0, 0x0);
        gbc.writeMem(0x3660, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xce8e, gbc.sp());
        EXPECT(0x3662, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 03C5
        gbc.setState(0x7693, 0x2457, 0xd200, 0x908b, 0x9dd1, 0x6e18, 0x0, 0x0);
        gbc.writeMem(0x7693, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x2457, gbc.sp());
        EXPECT(0x7695, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 03C6
        gbc.setState(0x9c25, 0x29e7, 0x9e30, 0xe821, 0xd328, 0x8d86, 0x0, 0x0);
        gbc.writeMem(0x9c25, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x29e7, gbc.sp());
        EXPECT(0x9c27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c25));
        EXPECT(0xc9, gbc.readMem(0x9c26));
        // CB C9 03C7
        gbc.setState(0xe51d, 0xc17e, 0x1520, 0x4164, 0x5fc2, 0xee00, 0x1, 0x1);
        gbc.writeMem(0xe51d, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc17e, gbc.sp());
        EXPECT(0xe51f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe51d));
        EXPECT(0xc9, gbc.readMem(0xe51e));
        // CB C9 03C8
        gbc.setState(0x733e, 0x7c2, 0x9840, 0x601e, 0x6184, 0x79cc, 0x1, 0x0);
        gbc.writeMem(0x733e, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x7c2, gbc.sp());
        EXPECT(0x7340, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 03C9
        gbc.setState(0x8bbd, 0x9c2a, 0xa560, 0x177, 0x9208, 0x6ac2, 0x1, 0x0);
        gbc.writeMem(0x8bbd, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9c2a, gbc.sp());
        EXPECT(0x8bbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bbd));
        EXPECT(0xc9, gbc.readMem(0x8bbe));
        // CB C9 03CA
        gbc.setState(0x6573, 0xbe94, 0x1400, 0x3074, 0x540a, 0xc2e5, 0x0, 0x0);
        gbc.writeMem(0x6573, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xbe94, gbc.sp());
        EXPECT(0x6575, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 03CB
        gbc.setState(0xbfac, 0x34ec, 0xe710, 0x25c7, 0x6f21, 0xc7bd, 0x0, 0x0);
        gbc.writeMem(0xbfac, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x34ec, gbc.sp());
        EXPECT(0xbfae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfac));
        EXPECT(0xc9, gbc.readMem(0xbfad));
        // CB C9 03CC
        gbc.setState(0xcd1f, 0x7600, 0x9e30, 0x5c59, 0xdb15, 0xc9f2, 0x0, 0x0);
        gbc.writeMem(0xcd1f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x7600, gbc.sp());
        EXPECT(0xcd21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd1f));
        EXPECT(0xc9, gbc.readMem(0xcd20));
        // CB C9 03CD
        gbc.setState(0xa332, 0x125, 0x48a0, 0x4950, 0x5035, 0xeb24, 0x1, 0x0);
        gbc.writeMem(0xa332, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x125, gbc.sp());
        EXPECT(0xa334, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa332));
        EXPECT(0xc9, gbc.readMem(0xa333));
        // CB C9 03CF
        gbc.setState(0x9ff9, 0xbdb0, 0x23e0, 0xe1b, 0x3112, 0xa428, 0x1, 0x0);
        gbc.writeMem(0x9ff9, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xbdb0, gbc.sp());
        EXPECT(0x9ffb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ff9));
        EXPECT(0xc9, gbc.readMem(0x9ffa));
        // CB C9 03D0
        gbc.setState(0x68bb, 0xbb67, 0x5360, 0x5de4, 0x5a83, 0x4d07, 0x1, 0x1);
        gbc.writeMem(0x68bb, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xbb67, gbc.sp());
        EXPECT(0x68bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 03D1
        gbc.setState(0x40df, 0x1601, 0xb930, 0x60cf, 0xc28, 0x5dbe, 0x1, 0x1);
        gbc.writeMem(0x40df, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x1601, gbc.sp());
        EXPECT(0x40e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 03D2
        gbc.setState(0x3aa8, 0xaa86, 0x7060, 0xb84, 0xbb70, 0x8387, 0x1, 0x1);
        gbc.writeMem(0x3aa8, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xaa86, gbc.sp());
        EXPECT(0x3aaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 03D3
        gbc.setState(0x5211, 0x661, 0x7bd0, 0x31a7, 0xda25, 0x1b3e, 0x1, 0x1);
        gbc.writeMem(0x5211, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x661, gbc.sp());
        EXPECT(0x5213, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 03D4
        gbc.setState(0x1798, 0xb6dd, 0x1d70, 0x9dbe, 0x8377, 0x3a2e, 0x0, 0x1);
        gbc.writeMem(0x1798, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xb6dd, gbc.sp());
        EXPECT(0x179a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 03D5
        gbc.setState(0xe010, 0x4fa1, 0xbee0, 0x99de, 0x3ac0, 0xe154, 0x1, 0x0);
        gbc.writeMem(0xe010, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x4fa1, gbc.sp());
        EXPECT(0xe012, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe010));
        EXPECT(0xc9, gbc.readMem(0xe011));
        // CB C9 03D6
        gbc.setState(0xab3c, 0xbfca, 0xb410, 0x93e8, 0xe1b1, 0x79e, 0x1, 0x0);
        gbc.writeMem(0xab3c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xbfca, gbc.sp());
        EXPECT(0xab3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab3c));
        EXPECT(0xc9, gbc.readMem(0xab3d));
        // CB C9 03D7
        gbc.setState(0x74f5, 0xdc2f, 0x78f0, 0xb562, 0x7295, 0x3a01, 0x1, 0x0);
        gbc.writeMem(0x74f5, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xdc2f, gbc.sp());
        EXPECT(0x74f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 03D8
        gbc.setState(0xdef8, 0x8509, 0xf810, 0xbd0d, 0xb44e, 0xeb63, 0x1, 0x0);
        gbc.writeMem(0xdef8, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x8509, gbc.sp());
        EXPECT(0xdefa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdef8));
        EXPECT(0xc9, gbc.readMem(0xdef9));
        // CB C9 03D9
        gbc.setState(0x4eb4, 0x7a6d, 0x98c0, 0xdb62, 0xa403, 0x6af6, 0x0, 0x1);
        gbc.writeMem(0x4eb4, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x7a6d, gbc.sp());
        EXPECT(0x4eb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 03DA
        gbc.setState(0x799f, 0x9d86, 0x9bf0, 0x3c08, 0x14d5, 0x606f, 0x0, 0x1);
        gbc.writeMem(0x799f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9d86, gbc.sp());
        EXPECT(0x79a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 03DB
        gbc.setState(0x90ec, 0x60f8, 0x7d0, 0x3e1b, 0x9cd4, 0xd486, 0x0, 0x1);
        gbc.writeMem(0x90ec, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x60f8, gbc.sp());
        EXPECT(0x90ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90ec));
        EXPECT(0xc9, gbc.readMem(0x90ed));
        // CB C9 03DC
        gbc.setState(0xc6ee, 0x4297, 0x6de0, 0x491c, 0xd1d4, 0xa051, 0x1, 0x0);
        gbc.writeMem(0xc6ee, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x4297, gbc.sp());
        EXPECT(0xc6f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6ee));
        EXPECT(0xc9, gbc.readMem(0xc6ef));
        // CB C9 03DD
        gbc.setState(0xb6c, 0xfabc, 0x310, 0x9169, 0x3a5c, 0xc841, 0x1, 0x1);
        gbc.writeMem(0xb6c, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xfabc, gbc.sp());
        EXPECT(0xb6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 03DE
        gbc.setState(0x65e0, 0x214c, 0x8500, 0x9ee2, 0x9f8f, 0xbebe, 0x1, 0x1);
        gbc.writeMem(0x65e0, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x214c, gbc.sp());
        EXPECT(0x65e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 03DF
        gbc.setState(0xc01a, 0x970f, 0xf470, 0x9ad6, 0x917a, 0xfc2, 0x1, 0x1);
        gbc.writeMem(0xc01a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x970f, gbc.sp());
        EXPECT(0xc01c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc01a));
        EXPECT(0xc9, gbc.readMem(0xc01b));
        // CB C9 03E0
        gbc.setState(0x263a, 0x4eb6, 0x9e40, 0xa428, 0x8373, 0x7f96, 0x0, 0x1);
        gbc.writeMem(0x263a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x4eb6, gbc.sp());
        EXPECT(0x263c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 03E1
        gbc.setState(0xe53a, 0xf7c2, 0x6600, 0xb89e, 0xbf2, 0x572e, 0x0, 0x0);
        gbc.writeMem(0xe53a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf7c2, gbc.sp());
        EXPECT(0xe53c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe53a));
        EXPECT(0xc9, gbc.readMem(0xe53b));
        // CB C9 03E2
        gbc.setState(0x9b19, 0x9e36, 0x6a00, 0x9c3, 0xc0b3, 0xe7b8, 0x0, 0x1);
        gbc.writeMem(0x9b19, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x9e36, gbc.sp());
        EXPECT(0x9b1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b19));
        EXPECT(0xc9, gbc.readMem(0x9b1a));
        // CB C9 03E3
        gbc.setState(0x36cd, 0xeef1, 0xff50, 0xc5b7, 0x7f53, 0xed19, 0x0, 0x1);
        gbc.writeMem(0x36cd, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xeef1, gbc.sp());
        EXPECT(0x36cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C9 03E4
        gbc.setState(0x7c1b, 0xda70, 0x8700, 0x58c0, 0x1673, 0xce41, 0x1, 0x0);
        gbc.writeMem(0x7c1b, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xda70, gbc.sp());
        EXPECT(0x7c1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 03E5
        gbc.setState(0x524a, 0xd20b, 0x52e0, 0x810f, 0xd7ef, 0x9b61, 0x1, 0x0);
        gbc.writeMem(0x524a, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd20b, gbc.sp());
        EXPECT(0x524c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C9 03E6
        gbc.setState(0x8935, 0x8627, 0x6380, 0x3040, 0xad4e, 0x800f, 0x1, 0x0);
        gbc.writeMem(0x8935, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8627, gbc.sp());
        EXPECT(0x8937, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8935));
        EXPECT(0xc9, gbc.readMem(0x8936));
        // CB C9 03E7
        gbc.setState(0x7f4f, 0xb53f, 0x70e0, 0x2436, 0x8d86, 0x99b1, 0x1, 0x0);
        gbc.writeMem(0x7f4f, { 0xcb, 0xc9 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xb53f, gbc.sp());
        EXPECT(0x7f51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
