    TEST(gbcemu, opcode_ff) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // FF 0003
        gbc.setState(0x69bd, 0xa91c, 0x2a40, 0xe9b6, 0x1726, 0xd792, 0x1, 0x1);
        gbc.writeMem(0x69bd, { 0xff });
        gbc.writeMem(0xa91a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xa91a, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xa91a));
        EXPECT(0x69, gbc.readMem(0xa91b));
        // FF 0007
        gbc.setState(0x58c7, 0xcc22, 0x9570, 0x8020, 0x76b, 0x6124, 0x1, 0x1);
        gbc.writeMem(0x58c7, { 0xff });
        gbc.writeMem(0xcc20, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xcc20, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xcc20));
        EXPECT(0x58, gbc.readMem(0xcc21));
        // FF 0008
        gbc.setState(0x538d, 0xde94, 0x4830, 0xa897, 0x7fc3, 0xf310, 0x1, 0x0);
        gbc.writeMem(0x538d, { 0xff });
        gbc.writeMem(0xde92, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xde92, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xde92));
        EXPECT(0x53, gbc.readMem(0xde93));
        // FF 0009
        gbc.setState(0x6663, 0xd530, 0x2b90, 0xdad9, 0x7df, 0x4881, 0x1, 0x0);
        gbc.writeMem(0x6663, { 0xff });
        gbc.writeMem(0xd52e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xd52e, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd52e));
        EXPECT(0x66, gbc.readMem(0xd52f));
        // FF 000B
        gbc.setState(0x2254, 0xed6a, 0xcc0, 0xbe44, 0x4a0c, 0x4b52, 0x0, 0x1);
        gbc.writeMem(0x2254, { 0xff });
        gbc.writeMem(0xed68, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xed68, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xed68));
        EXPECT(0x22, gbc.readMem(0xed69));
        // FF 0010
        gbc.setState(0x1d7e, 0xfc1f, 0x7490, 0xc5fd, 0x50e7, 0x33d8, 0x0, 0x1);
        gbc.writeMem(0x1d7e, { 0xff });
        gbc.writeMem(0xfc1d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xfc1d, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xfc1d));
        EXPECT(0x1d, gbc.readMem(0xfc1e));
        // FF 0011
        gbc.setState(0xd6c1, 0xddb0, 0x7ba0, 0xeaaa, 0xb523, 0x1d3e, 0x0, 0x1);
        gbc.writeMem(0xd6c1, { 0xff });
        gbc.writeMem(0xddae, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xddae, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xd6c1));
        EXPECT(0xc2, gbc.readMem(0xddae));
        EXPECT(0xd6, gbc.readMem(0xddaf));
        // FF 0013
        gbc.setState(0xafce, 0xd1d1, 0x8280, 0x17a4, 0xd939, 0x25af, 0x0, 0x1);
        gbc.writeMem(0xafce, { 0xff });
        gbc.writeMem(0xd1cf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xd1cf, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xafce));
        EXPECT(0xcf, gbc.readMem(0xd1cf));
        EXPECT(0xaf, gbc.readMem(0xd1d0));
        // FF 0014
        gbc.setState(0x6796, 0xe80e, 0x9670, 0xf44a, 0x4de9, 0x6bdb, 0x1, 0x1);
        gbc.writeMem(0x6796, { 0xff });
        gbc.writeMem(0xe80c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xe80c, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xe80c));
        EXPECT(0x67, gbc.readMem(0xe80d));
        // FF 0016
        gbc.setState(0x9d74, 0x809c, 0x1970, 0xf046, 0x2d42, 0xef2e, 0x0, 0x0);
        gbc.writeMem(0x809a, { 0x0, 0x0 });
        gbc.writeMem(0x9d74, { 0xff });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x809a, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x809a));
        EXPECT(0x9d, gbc.readMem(0x809b));
        EXPECT(0xff, gbc.readMem(0x9d74));
        // FF 0017
        gbc.setState(0x88d8, 0x82fb, 0x400, 0x9078, 0xfe0e, 0x2efd, 0x1, 0x1);
        gbc.writeMem(0x82f9, { 0x0, 0x0 });
        gbc.writeMem(0x88d8, { 0xff });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x82f9, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x82f9));
        EXPECT(0x88, gbc.readMem(0x82fa));
        EXPECT(0xff, gbc.readMem(0x88d8));
        // FF 001A
        gbc.setState(0x3a68, 0xe310, 0x6160, 0xe0bc, 0x35d4, 0xb0be, 0x1, 0x0);
        gbc.writeMem(0x3a68, { 0xff });
        gbc.writeMem(0xe30e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xe30e, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xe30e));
        EXPECT(0x3a, gbc.readMem(0xe30f));
        // FF 001E
        gbc.setState(0x4790, 0x800b, 0xf9f0, 0x2d1b, 0x1668, 0xe0, 0x0, 0x1);
        gbc.writeMem(0x4790, { 0xff });
        gbc.writeMem(0x8009, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x8009, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8009));
        EXPECT(0x47, gbc.readMem(0x800a));
        // FF 001F
        gbc.setState(0x5f8c, 0xcbfc, 0xec00, 0x6375, 0xd38d, 0xcb3e, 0x0, 0x1);
        gbc.writeMem(0x5f8c, { 0xff });
        gbc.writeMem(0xcbfa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xcbfa, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xcbfa));
        EXPECT(0x5f, gbc.readMem(0xcbfb));
        // FF 0021
        gbc.setState(0x6039, 0xe170, 0xfb50, 0x3922, 0xfef3, 0xaccb, 0x0, 0x0);
        gbc.writeMem(0x6039, { 0xff });
        gbc.writeMem(0xe16e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xe16e, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xe16e));
        EXPECT(0x60, gbc.readMem(0xe16f));
        // FF 0022
        gbc.setState(0xddd1, 0xaa96, 0xeaa0, 0x9853, 0x9451, 0x3600, 0x0, 0x1);
        gbc.writeMem(0xaa94, { 0x0, 0x0 });
        gbc.writeMem(0xddd1, { 0xff });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xaa94, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xaa94));
        EXPECT(0xdd, gbc.readMem(0xaa95));
        EXPECT(0xff, gbc.readMem(0xddd1));
        // FF 0026
        gbc.setState(0x4ab5, 0xa34c, 0x4a90, 0xa6dd, 0xfbc1, 0x40ca, 0x1, 0x1);
        gbc.writeMem(0x4ab5, { 0xff });
        gbc.writeMem(0xa34a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xa34a, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xa34a));
        EXPECT(0x4a, gbc.readMem(0xa34b));
        // FF 0027
        gbc.setState(0xd70f, 0xc026, 0xb710, 0xd219, 0xa84a, 0x5c08, 0x0, 0x0);
        gbc.writeMem(0xc024, { 0x0, 0x0 });
        gbc.writeMem(0xd70f, { 0xff });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xc024, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xc024));
        EXPECT(0xd7, gbc.readMem(0xc025));
        EXPECT(0xff, gbc.readMem(0xd70f));
        // FF 002B
        gbc.setState(0x22a2, 0xdde1, 0x32a0, 0xd6d5, 0x770d, 0xf3ed, 0x1, 0x1);
        gbc.writeMem(0x22a2, { 0xff });
        gbc.writeMem(0xdddf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xdddf, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xdddf));
        EXPECT(0x22, gbc.readMem(0xdde0));
        // FF 002D
        gbc.setState(0x1a8f, 0xac7c, 0xe000, 0xbcd2, 0xfdb9, 0xe5a6, 0x1, 0x1);
        gbc.writeMem(0x1a8f, { 0xff });
        gbc.writeMem(0xac7a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xac7a, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xac7a));
        EXPECT(0x1a, gbc.readMem(0xac7b));
        // FF 002F
        gbc.setState(0x2208, 0xd086, 0x120, 0x56ad, 0x4d9e, 0x28a2, 0x0, 0x0);
        gbc.writeMem(0x2208, { 0xff });
        gbc.writeMem(0xd084, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xd084, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xd084));
        EXPECT(0x22, gbc.readMem(0xd085));
        // FF 0030
        gbc.setState(0xc010, 0xcba0, 0x2640, 0xad4, 0xc0a3, 0x2eba, 0x1, 0x0);
        gbc.writeMem(0xc010, { 0xff });
        gbc.writeMem(0xcb9e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xcb9e, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xc010));
        EXPECT(0x11, gbc.readMem(0xcb9e));
        EXPECT(0xc0, gbc.readMem(0xcb9f));
        // FF 0031
        gbc.setState(0x1a33, 0xa57d, 0x1f50, 0xe542, 0xfe93, 0xc1ef, 0x0, 0x1);
        gbc.writeMem(0x1a33, { 0xff });
        gbc.writeMem(0xa57b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xa57b, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xa57b));
        EXPECT(0x1a, gbc.readMem(0xa57c));
        // FF 0033
        gbc.setState(0xd76a, 0xa36f, 0x91d0, 0x7a82, 0x32bd, 0x391, 0x1, 0x0);
        gbc.writeMem(0xa36d, { 0x0, 0x0 });
        gbc.writeMem(0xd76a, { 0xff });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xa36d, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xa36d));
        EXPECT(0xd7, gbc.readMem(0xa36e));
        EXPECT(0xff, gbc.readMem(0xd76a));
        // FF 0035
        gbc.setState(0xb1fc, 0xa2ca, 0xb2c0, 0xefc0, 0xb1f7, 0x8723, 0x1, 0x1);
        gbc.writeMem(0xa2c8, { 0x0, 0x0 });
        gbc.writeMem(0xb1fc, { 0xff });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xa2c8, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xa2c8));
        EXPECT(0xb1, gbc.readMem(0xa2c9));
        EXPECT(0xff, gbc.readMem(0xb1fc));
        // FF 0039
        gbc.setState(0x87f0, 0x8f3f, 0x2380, 0x3912, 0xfb0, 0xc8f8, 0x1, 0x0);
        gbc.writeMem(0x87f0, { 0xff });
        gbc.writeMem(0x8f3d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x8f3d, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x87f0));
        EXPECT(0xf1, gbc.readMem(0x8f3d));
        EXPECT(0x87, gbc.readMem(0x8f3e));
        // FF 003C
        gbc.setState(0xd202, 0xa3a2, 0x380, 0xb26e, 0x3537, 0xf9f2, 0x1, 0x0);
        gbc.writeMem(0xa3a0, { 0x0, 0x0 });
        gbc.writeMem(0xd202, { 0xff });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xa3a0, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xa3a0));
        EXPECT(0xd2, gbc.readMem(0xa3a1));
        EXPECT(0xff, gbc.readMem(0xd202));
        // FF 003D
        gbc.setState(0x3cf1, 0xf557, 0xc890, 0x3c02, 0x3c09, 0xe701, 0x0, 0x1);
        gbc.writeMem(0x3cf1, { 0xff });
        gbc.writeMem(0xf555, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xf555, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xf555));
        EXPECT(0x3c, gbc.readMem(0xf556));
        // FF 003E
        gbc.setState(0x948, 0x95df, 0xc900, 0x9656, 0xaf0d, 0x4e9e, 0x0, 0x0);
        gbc.writeMem(0x948, { 0xff });
        gbc.writeMem(0x95dd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x95dd, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x95dd));
        EXPECT(0x9, gbc.readMem(0x95de));
        // FF 0040
        gbc.setState(0x47b7, 0x8a61, 0x2250, 0x18b, 0x92b7, 0x2385, 0x1, 0x1);
        gbc.writeMem(0x47b7, { 0xff });
        gbc.writeMem(0x8a5f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x8a5f, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0x8a5f));
        EXPECT(0x47, gbc.readMem(0x8a60));
        // FF 0044
        gbc.setState(0x67c1, 0xe36b, 0x4980, 0x77b0, 0xb2e8, 0x196b, 0x1, 0x0);
        gbc.writeMem(0x67c1, { 0xff });
        gbc.writeMem(0xe369, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xe369, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xe369));
        EXPECT(0x67, gbc.readMem(0xe36a));
        // FF 0045
        gbc.setState(0x5c17, 0xee94, 0xb5d0, 0x5f77, 0x638b, 0x220e, 0x0, 0x0);
        gbc.writeMem(0x5c17, { 0xff });
        gbc.writeMem(0xee92, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xee92, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xee92));
        EXPECT(0x5c, gbc.readMem(0xee93));
        // FF 0046
        gbc.setState(0xd99e, 0xc172, 0x3ec0, 0x926b, 0xd9b1, 0x2d51, 0x0, 0x0);
        gbc.writeMem(0xc170, { 0x0, 0x0 });
        gbc.writeMem(0xd99e, { 0xff });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xc170, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc170));
        EXPECT(0xd9, gbc.readMem(0xc171));
        EXPECT(0xff, gbc.readMem(0xd99e));
        // FF 0047
        gbc.setState(0x78e6, 0xe129, 0xd3b0, 0xd0a3, 0xe387, 0xcd7f, 0x1, 0x1);
        gbc.writeMem(0x78e6, { 0xff });
        gbc.writeMem(0xe127, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe127, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xe127));
        EXPECT(0x78, gbc.readMem(0xe128));
        // FF 0048
        gbc.setState(0xc16e, 0xab95, 0xe6e0, 0xe7c4, 0xb605, 0xb4d8, 0x1, 0x0);
        gbc.writeMem(0xab93, { 0x0, 0x0 });
        gbc.writeMem(0xc16e, { 0xff });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xab93, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xab93));
        EXPECT(0xc1, gbc.readMem(0xab94));
        EXPECT(0xff, gbc.readMem(0xc16e));
        // FF 0049
        gbc.setState(0x9dfc, 0xacd9, 0x3bb0, 0xb102, 0x753f, 0x8384, 0x1, 0x0);
        gbc.writeMem(0x9dfc, { 0xff });
        gbc.writeMem(0xacd7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xacd7, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x9dfc));
        EXPECT(0xfd, gbc.readMem(0xacd7));
        EXPECT(0x9d, gbc.readMem(0xacd8));
        // FF 004B
        gbc.setState(0xb625, 0xe6cd, 0x6080, 0x94c4, 0x5bec, 0xd6ec, 0x0, 0x0);
        gbc.writeMem(0xb625, { 0xff });
        gbc.writeMem(0xe6cb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xe6cb, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xb625));
        EXPECT(0x26, gbc.readMem(0xe6cb));
        EXPECT(0xb6, gbc.readMem(0xe6cc));
        // FF 004C
        gbc.setState(0xb929, 0xf7e3, 0x1890, 0xe752, 0x5037, 0xbc3c, 0x0, 0x0);
        gbc.writeMem(0xb929, { 0xff });
        gbc.writeMem(0xf7e1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf7e1, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xb929));
        EXPECT(0x2a, gbc.readMem(0xf7e1));
        EXPECT(0xb9, gbc.readMem(0xf7e2));
        // FF 004D
        gbc.setState(0x82b8, 0xc23a, 0x7940, 0xd86f, 0xd435, 0xc25e, 0x0, 0x1);
        gbc.writeMem(0x82b8, { 0xff });
        gbc.writeMem(0xc238, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xc238, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x82b8));
        EXPECT(0xb9, gbc.readMem(0xc238));
        EXPECT(0x82, gbc.readMem(0xc239));
        // FF 0052
        gbc.setState(0x3794, 0xae54, 0xcc50, 0xe259, 0x241f, 0xf11a, 0x0, 0x0);
        gbc.writeMem(0x3794, { 0xff });
        gbc.writeMem(0xae52, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xae52, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xae52));
        EXPECT(0x37, gbc.readMem(0xae53));
        // FF 0054
        gbc.setState(0x1dc4, 0xb9c7, 0x93c0, 0xee85, 0x6ccf, 0xca3c, 0x1, 0x1);
        gbc.writeMem(0x1dc4, { 0xff });
        gbc.writeMem(0xb9c5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xb9c5, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xb9c5));
        EXPECT(0x1d, gbc.readMem(0xb9c6));
        // FF 0056
        gbc.setState(0x64dc, 0xbec6, 0x1b50, 0xfe47, 0x311a, 0x5e2a, 0x0, 0x1);
        gbc.writeMem(0x64dc, { 0xff });
        gbc.writeMem(0xbec4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xbec4, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xbec4));
        EXPECT(0x64, gbc.readMem(0xbec5));
        // FF 0059
        gbc.setState(0x3416, 0x8e3e, 0xf4d0, 0x654a, 0x9960, 0x95de, 0x1, 0x0);
        gbc.writeMem(0x3416, { 0xff });
        gbc.writeMem(0x8e3c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x8e3c, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0x8e3c));
        EXPECT(0x34, gbc.readMem(0x8e3d));
        // FF 005B
        gbc.setState(0x3b05, 0xd1a5, 0xc5b0, 0x26f9, 0x9a95, 0xd355, 0x1, 0x0);
        gbc.writeMem(0x3b05, { 0xff });
        gbc.writeMem(0xd1a3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xd1a3, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd1a3));
        EXPECT(0x3b, gbc.readMem(0xd1a4));
        // FF 005D
        gbc.setState(0x32e7, 0xa596, 0x1f40, 0x55ea, 0xc983, 0x88ed, 0x1, 0x1);
        gbc.writeMem(0x32e7, { 0xff });
        gbc.writeMem(0xa594, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xa594, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xa594));
        EXPECT(0x32, gbc.readMem(0xa595));
        // FF 005E
        gbc.setState(0xb8c3, 0x86cc, 0x9430, 0x99dd, 0x7b72, 0xd49a, 0x0, 0x0);
        gbc.writeMem(0x86ca, { 0x0, 0x0 });
        gbc.writeMem(0xb8c3, { 0xff });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x86ca, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0x86ca));
        EXPECT(0xb8, gbc.readMem(0x86cb));
        EXPECT(0xff, gbc.readMem(0xb8c3));
        // FF 0061
        gbc.setState(0xd0d9, 0x8af8, 0xde00, 0xb84e, 0x1410, 0xf9f7, 0x0, 0x0);
        gbc.writeMem(0x8af6, { 0x0, 0x0 });
        gbc.writeMem(0xd0d9, { 0xff });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x8af6, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x8af6));
        EXPECT(0xd0, gbc.readMem(0x8af7));
        EXPECT(0xff, gbc.readMem(0xd0d9));
        // FF 0062
        gbc.setState(0x29b1, 0x997d, 0xd530, 0x790b, 0xab8c, 0xc39a, 0x0, 0x1);
        gbc.writeMem(0x29b1, { 0xff });
        gbc.writeMem(0x997b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x997b, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x997b));
        EXPECT(0x29, gbc.readMem(0x997c));
        // FF 0064
        gbc.setState(0x8bc3, 0xac9e, 0x8d60, 0xb47c, 0x4adb, 0xb53f, 0x1, 0x1);
        gbc.writeMem(0x8bc3, { 0xff });
        gbc.writeMem(0xac9c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xac9c, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x8bc3));
        EXPECT(0xc4, gbc.readMem(0xac9c));
        EXPECT(0x8b, gbc.readMem(0xac9d));
        // FF 0068
        gbc.setState(0x9a7b, 0x842a, 0x20b0, 0x5f36, 0x69a3, 0x2019, 0x0, 0x0);
        gbc.writeMem(0x8428, { 0x0, 0x0 });
        gbc.writeMem(0x9a7b, { 0xff });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8428, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0x8428));
        EXPECT(0x9a, gbc.readMem(0x8429));
        EXPECT(0xff, gbc.readMem(0x9a7b));
        // FF 0070
        gbc.setState(0xa1dd, 0xeb73, 0x8d90, 0x8629, 0x27ce, 0x6a4c, 0x0, 0x1);
        gbc.writeMem(0xa1dd, { 0xff });
        gbc.writeMem(0xeb71, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xeb71, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xa1dd));
        EXPECT(0xde, gbc.readMem(0xeb71));
        EXPECT(0xa1, gbc.readMem(0xeb72));
        // FF 0072
        gbc.setState(0xb81c, 0xbd4d, 0xf9f0, 0x7c42, 0x86f, 0xceab, 0x0, 0x1);
        gbc.writeMem(0xb81c, { 0xff });
        gbc.writeMem(0xbd4b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xbd4b, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xb81c));
        EXPECT(0x1d, gbc.readMem(0xbd4b));
        EXPECT(0xb8, gbc.readMem(0xbd4c));
        // FF 0075
        gbc.setState(0x6a59, 0xf731, 0x310, 0x280, 0x7208, 0x9f2d, 0x0, 0x0);
        gbc.writeMem(0x6a59, { 0xff });
        gbc.writeMem(0xf72f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xf72f, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xf72f));
        EXPECT(0x6a, gbc.readMem(0xf730));
        // FF 0078
        gbc.setState(0x93f1, 0x9b66, 0x4a10, 0xe176, 0xf485, 0xa1ee, 0x0, 0x0);
        gbc.writeMem(0x93f1, { 0xff });
        gbc.writeMem(0x9b64, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x9b64, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x93f1));
        EXPECT(0xf2, gbc.readMem(0x9b64));
        EXPECT(0x93, gbc.readMem(0x9b65));
        // FF 007D
        gbc.setState(0x1d8f, 0xc1fa, 0xb8c0, 0x621a, 0x36d2, 0xd9cc, 0x1, 0x1);
        gbc.writeMem(0x1d8f, { 0xff });
        gbc.writeMem(0xc1f8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc1f8, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xc1f8));
        EXPECT(0x1d, gbc.readMem(0xc1f9));
        // FF 007E
        gbc.setState(0x39a8, 0xe9b2, 0x45c0, 0x2864, 0xb872, 0x1061, 0x0, 0x0);
        gbc.writeMem(0x39a8, { 0xff });
        gbc.writeMem(0xe9b0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe9b0, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xe9b0));
        EXPECT(0x39, gbc.readMem(0xe9b1));
        // FF 007F
        gbc.setState(0xbce8, 0xf910, 0x89a0, 0xd6f0, 0xd171, 0xbb35, 0x1, 0x0);
        gbc.writeMem(0xbce8, { 0xff });
        gbc.writeMem(0xf90e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xf90e, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xbce8));
        EXPECT(0xe9, gbc.readMem(0xf90e));
        EXPECT(0xbc, gbc.readMem(0xf90f));
        // FF 0081
        gbc.setState(0xbed2, 0xa2a5, 0x64a0, 0x6bac, 0xc797, 0xcc1c, 0x0, 0x1);
        gbc.writeMem(0xa2a3, { 0x0, 0x0 });
        gbc.writeMem(0xbed2, { 0xff });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa2a3, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xa2a3));
        EXPECT(0xbe, gbc.readMem(0xa2a4));
        EXPECT(0xff, gbc.readMem(0xbed2));
        // FF 0082
        gbc.setState(0xe3b9, 0x94ef, 0x5fa0, 0x9405, 0x6f91, 0xcc0a, 0x1, 0x0);
        gbc.writeMem(0x94ed, { 0x0, 0x0 });
        gbc.writeMem(0xe3b9, { 0xff });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x94ed, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0x94ed));
        EXPECT(0xe3, gbc.readMem(0x94ee));
        EXPECT(0xff, gbc.readMem(0xe3b9));
        // FF 0083
        gbc.setState(0x4cf, 0xa00c, 0x3e40, 0x9abe, 0xb842, 0x6aed, 0x0, 0x1);
        gbc.writeMem(0x4cf, { 0xff });
        gbc.writeMem(0xa00a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xa00a, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xa00a));
        EXPECT(0x4, gbc.readMem(0xa00b));
        // FF 0086
        gbc.setState(0xb86a, 0xe8e9, 0x23e0, 0x7fb, 0x55e7, 0x3550, 0x0, 0x1);
        gbc.writeMem(0xb86a, { 0xff });
        gbc.writeMem(0xe8e7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xe8e7, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xb86a));
        EXPECT(0x6b, gbc.readMem(0xe8e7));
        EXPECT(0xb8, gbc.readMem(0xe8e8));
        // FF 008A
        gbc.setState(0x3c10, 0xe58b, 0x67e0, 0x2d9a, 0xbe46, 0xfab6, 0x1, 0x1);
        gbc.writeMem(0x3c10, { 0xff });
        gbc.writeMem(0xe589, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xe589, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xe589));
        EXPECT(0x3c, gbc.readMem(0xe58a));
        // FF 008C
        gbc.setState(0xc63f, 0xd32b, 0x64a0, 0x3fb2, 0x69d5, 0x919e, 0x0, 0x0);
        gbc.writeMem(0xc63f, { 0xff });
        gbc.writeMem(0xd329, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xd329, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xc63f));
        EXPECT(0x40, gbc.readMem(0xd329));
        EXPECT(0xc6, gbc.readMem(0xd32a));
        // FF 008D
        gbc.setState(0xec39, 0xb99f, 0x370, 0xc1bd, 0x52ee, 0xadc2, 0x1, 0x0);
        gbc.writeMem(0xb99d, { 0x0, 0x0 });
        gbc.writeMem(0xec39, { 0xff });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xb99d, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xb99d));
        EXPECT(0xec, gbc.readMem(0xb99e));
        EXPECT(0xff, gbc.readMem(0xec39));
        // FF 008E
        gbc.setState(0xc993, 0xb43f, 0x340, 0x2f1a, 0xd13, 0xdf75, 0x1, 0x1);
        gbc.writeMem(0xb43d, { 0x0, 0x0 });
        gbc.writeMem(0xc993, { 0xff });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xb43d, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xb43d));
        EXPECT(0xc9, gbc.readMem(0xb43e));
        EXPECT(0xff, gbc.readMem(0xc993));
        // FF 008F
        gbc.setState(0x7c29, 0xc0d2, 0xab60, 0xab89, 0xa0f1, 0x39b2, 0x0, 0x0);
        gbc.writeMem(0x7c29, { 0xff });
        gbc.writeMem(0xc0d0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xc0d0, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xc0d0));
        EXPECT(0x7c, gbc.readMem(0xc0d1));
        // FF 0090
        gbc.setState(0xbeb, 0xb5dd, 0x7de0, 0xe6d7, 0xcdf, 0x643d, 0x0, 0x0);
        gbc.writeMem(0xbeb, { 0xff });
        gbc.writeMem(0xb5db, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xb5db, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xb5db));
        EXPECT(0xb, gbc.readMem(0xb5dc));
        // FF 0091
        gbc.setState(0xd79e, 0xfac3, 0x7cb0, 0xb317, 0x1b3e, 0x4a14, 0x1, 0x0);
        gbc.writeMem(0xd79e, { 0xff });
        gbc.writeMem(0xfac1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xfac1, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xd79e));
        EXPECT(0x9f, gbc.readMem(0xfac1));
        EXPECT(0xd7, gbc.readMem(0xfac2));
        // FF 0093
        gbc.setState(0x6449, 0xc9b2, 0x51f0, 0x1e90, 0xe31e, 0x425, 0x1, 0x0);
        gbc.writeMem(0x6449, { 0xff });
        gbc.writeMem(0xc9b0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc9b0, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xc9b0));
        EXPECT(0x64, gbc.readMem(0xc9b1));
        // FF 0095
        gbc.setState(0x9a70, 0x8a47, 0x9ab0, 0x2522, 0x640c, 0x5ea6, 0x1, 0x0);
        gbc.writeMem(0x8a45, { 0x0, 0x0 });
        gbc.writeMem(0x9a70, { 0xff });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x8a45, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x8a45));
        EXPECT(0x9a, gbc.readMem(0x8a46));
        EXPECT(0xff, gbc.readMem(0x9a70));
        // FF 0096
        gbc.setState(0x80cc, 0x806b, 0xe7f0, 0xec77, 0x597b, 0x9775, 0x1, 0x0);
        gbc.writeMem(0x8069, { 0x0, 0x0 });
        gbc.writeMem(0x80cc, { 0xff });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x8069, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0x8069));
        EXPECT(0x80, gbc.readMem(0x806a));
        EXPECT(0xff, gbc.readMem(0x80cc));
        // FF 0097
        gbc.setState(0x56ef, 0xe755, 0x49e0, 0x9573, 0x453, 0x67a0, 0x1, 0x0);
        gbc.writeMem(0x56ef, { 0xff });
        gbc.writeMem(0xe753, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe753, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xe753));
        EXPECT(0x56, gbc.readMem(0xe754));
        // FF 009C
        gbc.setState(0xbbbe, 0xbba0, 0x4360, 0x814c, 0x7fd2, 0x6d7a, 0x1, 0x0);
        gbc.writeMem(0xbb9e, { 0x0, 0x0 });
        gbc.writeMem(0xbbbe, { 0xff });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xbb9e, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xbb9e));
        EXPECT(0xbb, gbc.readMem(0xbb9f));
        EXPECT(0xff, gbc.readMem(0xbbbe));
        // FF 009D
        gbc.setState(0x5edf, 0xa655, 0x8300, 0x1542, 0x93e2, 0x3e4e, 0x0, 0x1);
        gbc.writeMem(0x5edf, { 0xff });
        gbc.writeMem(0xa653, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xa653, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa653));
        EXPECT(0x5e, gbc.readMem(0xa654));
        // FF 009F
        gbc.setState(0x56af, 0xa8d9, 0xeab0, 0x2381, 0x4f8e, 0x1d11, 0x1, 0x0);
        gbc.writeMem(0x56af, { 0xff });
        gbc.writeMem(0xa8d7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xa8d7, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa8d7));
        EXPECT(0x56, gbc.readMem(0xa8d8));
        // FF 00A0
        gbc.setState(0x5de7, 0x8d63, 0xf220, 0x799, 0x3676, 0x82e9, 0x0, 0x0);
        gbc.writeMem(0x5de7, { 0xff });
        gbc.writeMem(0x8d61, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x8d61, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0x8d61));
        EXPECT(0x5d, gbc.readMem(0x8d62));
        // FF 00A1
        gbc.setState(0xb5b, 0xc7ba, 0xac10, 0x54d6, 0x1931, 0x2a87, 0x0, 0x1);
        gbc.writeMem(0xb5b, { 0xff });
        gbc.writeMem(0xc7b8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xc7b8, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xc7b8));
        EXPECT(0xb, gbc.readMem(0xc7b9));
        // FF 00A4
        gbc.setState(0x24f1, 0xcdf1, 0x5dd0, 0xc2e4, 0x11bb, 0x9cb9, 0x1, 0x0);
        gbc.writeMem(0x24f1, { 0xff });
        gbc.writeMem(0xcdef, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xcdef, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xcdef));
        EXPECT(0x24, gbc.readMem(0xcdf0));
        // FF 00A5
        gbc.setState(0xae2a, 0xb8a9, 0xefc0, 0xa6ed, 0xb271, 0xdae1, 0x1, 0x1);
        gbc.writeMem(0xae2a, { 0xff });
        gbc.writeMem(0xb8a7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb8a7, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xae2a));
        EXPECT(0x2b, gbc.readMem(0xb8a7));
        EXPECT(0xae, gbc.readMem(0xb8a8));
        // FF 00A6
        gbc.setState(0xe385, 0x8c7d, 0x9d80, 0x697c, 0xd017, 0x2177, 0x0, 0x1);
        gbc.writeMem(0x8c7b, { 0x0, 0x0 });
        gbc.writeMem(0xe385, { 0xff });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x8c7b, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8c7b));
        EXPECT(0xe3, gbc.readMem(0x8c7c));
        EXPECT(0xff, gbc.readMem(0xe385));
        // FF 00A7
        gbc.setState(0x20, 0xcf9a, 0xc280, 0x936f, 0x7cd1, 0x6467, 0x0, 0x1);
        gbc.writeMem(0x20, { 0xff });
        gbc.writeMem(0xcf98, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xcf98, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xcf98));
        EXPECT(0x0, gbc.readMem(0xcf99));
        // FF 00A9
        gbc.setState(0x6b32, 0xc7be, 0xbcb0, 0x3184, 0x86e7, 0x98eb, 0x1, 0x1);
        gbc.writeMem(0x6b32, { 0xff });
        gbc.writeMem(0xc7bc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xc7bc, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xc7bc));
        EXPECT(0x6b, gbc.readMem(0xc7bd));
        // FF 00AA
        gbc.setState(0x2c7e, 0xcaf5, 0xc700, 0x7154, 0x870e, 0xc0a5, 0x0, 0x0);
        gbc.writeMem(0x2c7e, { 0xff });
        gbc.writeMem(0xcaf3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xcaf3, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xcaf3));
        EXPECT(0x2c, gbc.readMem(0xcaf4));
        // FF 00AB
        gbc.setState(0xcc56, 0xed0d, 0x95b0, 0x2a48, 0x114b, 0x299b, 0x0, 0x1);
        gbc.writeMem(0xcc56, { 0xff });
        gbc.writeMem(0xed0b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xed0b, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xcc56));
        EXPECT(0x57, gbc.readMem(0xed0b));
        EXPECT(0xcc, gbc.readMem(0xed0c));
        // FF 00AE
        gbc.setState(0x720b, 0xb270, 0x1a00, 0xe473, 0x17d8, 0xd390, 0x1, 0x0);
        gbc.writeMem(0x720b, { 0xff });
        gbc.writeMem(0xb26e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xb26e, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xb26e));
        EXPECT(0x72, gbc.readMem(0xb26f));
        // FF 00AF
        gbc.setState(0x6717, 0xb77c, 0x9ce0, 0xe7b0, 0x29ad, 0xfdb6, 0x0, 0x0);
        gbc.writeMem(0x6717, { 0xff });
        gbc.writeMem(0xb77a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xb77a, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xb77a));
        EXPECT(0x67, gbc.readMem(0xb77b));
        // FF 00B0
        gbc.setState(0x8517, 0xb3e2, 0xedb0, 0x3539, 0x38b, 0x1db9, 0x1, 0x1);
        gbc.writeMem(0x8517, { 0xff });
        gbc.writeMem(0xb3e0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xb3e0, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x8517));
        EXPECT(0x18, gbc.readMem(0xb3e0));
        EXPECT(0x85, gbc.readMem(0xb3e1));
        // FF 00B2
        gbc.setState(0x331c, 0xd4a2, 0xd860, 0x5da2, 0xc206, 0x539b, 0x0, 0x0);
        gbc.writeMem(0x331c, { 0xff });
        gbc.writeMem(0xd4a0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd4a0, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xd4a0));
        EXPECT(0x33, gbc.readMem(0xd4a1));
        // FF 00B3
        gbc.setState(0x7047, 0xf43b, 0xecd0, 0x43d5, 0xe64a, 0x1c6d, 0x0, 0x0);
        gbc.writeMem(0x7047, { 0xff });
        gbc.writeMem(0xf439, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xf439, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xf439));
        EXPECT(0x70, gbc.readMem(0xf43a));
        // FF 00B4
        gbc.setState(0x8632, 0xce4f, 0xab40, 0xc261, 0xada2, 0x2a4e, 0x1, 0x0);
        gbc.writeMem(0x8632, { 0xff });
        gbc.writeMem(0xce4d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xce4d, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x8632));
        EXPECT(0x33, gbc.readMem(0xce4d));
        EXPECT(0x86, gbc.readMem(0xce4e));
        // FF 00B5
        gbc.setState(0xac6d, 0xd212, 0xe850, 0x54cd, 0x5b0, 0xcae4, 0x0, 0x0);
        gbc.writeMem(0xac6d, { 0xff });
        gbc.writeMem(0xd210, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xd210, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xac6d));
        EXPECT(0x6e, gbc.readMem(0xd210));
        EXPECT(0xac, gbc.readMem(0xd211));
        // FF 00B6
        gbc.setState(0xee34, 0x9169, 0x1990, 0x3a4b, 0xafba, 0xdf29, 0x1, 0x0);
        gbc.writeMem(0x9167, { 0x0, 0x0 });
        gbc.writeMem(0xee34, { 0xff });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9167, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x9167));
        EXPECT(0xee, gbc.readMem(0x9168));
        EXPECT(0xff, gbc.readMem(0xee34));
        // FF 00B8
        gbc.setState(0x37fa, 0xd1dc, 0x1a40, 0x4cc3, 0x4643, 0x8953, 0x1, 0x1);
        gbc.writeMem(0x37fa, { 0xff });
        gbc.writeMem(0xd1da, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xd1da, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xd1da));
        EXPECT(0x37, gbc.readMem(0xd1db));
        // FF 00BC
        gbc.setState(0x9088, 0xf589, 0x9060, 0x2978, 0x47e8, 0x6a1e, 0x1, 0x0);
        gbc.writeMem(0x9088, { 0xff });
        gbc.writeMem(0xf587, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf587, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x9088));
        EXPECT(0x89, gbc.readMem(0xf587));
        EXPECT(0x90, gbc.readMem(0xf588));
        // FF 00BF
        gbc.setState(0x1a2c, 0xbcdc, 0x34a0, 0x30f3, 0x8e0, 0x1e20, 0x0, 0x1);
        gbc.writeMem(0x1a2c, { 0xff });
        gbc.writeMem(0xbcda, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xbcda, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xbcda));
        EXPECT(0x1a, gbc.readMem(0xbcdb));
        // FF 00C1
        gbc.setState(0x4446, 0xd04d, 0x8920, 0x1d86, 0x3914, 0xb1a9, 0x0, 0x1);
        gbc.writeMem(0x4446, { 0xff });
        gbc.writeMem(0xd04b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xd04b, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd04b));
        EXPECT(0x44, gbc.readMem(0xd04c));
        // FF 00C2
        gbc.setState(0x89e9, 0xce76, 0x3710, 0x289e, 0xa715, 0xc2d7, 0x1, 0x0);
        gbc.writeMem(0x89e9, { 0xff });
        gbc.writeMem(0xce74, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xce74, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x89e9));
        EXPECT(0xea, gbc.readMem(0xce74));
        EXPECT(0x89, gbc.readMem(0xce75));
        // FF 00C5
        gbc.setState(0x717e, 0xd8ce, 0x3d0, 0x37b7, 0x3c83, 0x6bf2, 0x1, 0x1);
        gbc.writeMem(0x717e, { 0xff });
        gbc.writeMem(0xd8cc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xd8cc, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xd8cc));
        EXPECT(0x71, gbc.readMem(0xd8cd));
        // FF 00C9
        gbc.setState(0xb0ba, 0xcea8, 0xf9e0, 0x570d, 0xbdcc, 0xaba, 0x0, 0x0);
        gbc.writeMem(0xb0ba, { 0xff });
        gbc.writeMem(0xcea6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xcea6, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xb0ba));
        EXPECT(0xbb, gbc.readMem(0xcea6));
        EXPECT(0xb0, gbc.readMem(0xcea7));
        // FF 00CB
        gbc.setState(0xe6c9, 0x8909, 0x2230, 0xf908, 0x6a68, 0x4e40, 0x1, 0x0);
        gbc.writeMem(0x8907, { 0x0, 0x0 });
        gbc.writeMem(0xe6c9, { 0xff });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8907, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0x8907));
        EXPECT(0xe6, gbc.readMem(0x8908));
        EXPECT(0xff, gbc.readMem(0xe6c9));
        // FF 00CC
        gbc.setState(0xef64, 0xdfa4, 0x1a10, 0x9b47, 0x3eff, 0xa760, 0x1, 0x1);
        gbc.writeMem(0xdfa2, { 0x0, 0x0 });
        gbc.writeMem(0xef64, { 0xff });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xdfa2, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xdfa2));
        EXPECT(0xef, gbc.readMem(0xdfa3));
        EXPECT(0xff, gbc.readMem(0xef64));
        // FF 00CE
        gbc.setState(0x3b25, 0xb8f6, 0x72d0, 0x1b85, 0xd707, 0x528, 0x1, 0x0);
        gbc.writeMem(0x3b25, { 0xff });
        gbc.writeMem(0xb8f4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xb8f4, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xb8f4));
        EXPECT(0x3b, gbc.readMem(0xb8f5));
        // FF 00D2
        gbc.setState(0x656f, 0xf5e1, 0xd0c0, 0xb63c, 0x46e6, 0x688, 0x1, 0x0);
        gbc.writeMem(0x656f, { 0xff });
        gbc.writeMem(0xf5df, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xf5df, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xf5df));
        EXPECT(0x65, gbc.readMem(0xf5e0));
        // FF 00D4
        gbc.setState(0x727e, 0x990d, 0x7630, 0x5ea1, 0xdcb6, 0xc992, 0x0, 0x1);
        gbc.writeMem(0x727e, { 0xff });
        gbc.writeMem(0x990b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x990b, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0x990b));
        EXPECT(0x72, gbc.readMem(0x990c));
        // FF 00D5
        gbc.setState(0x2dbd, 0xa33c, 0x5f50, 0xf55, 0xa3b5, 0x6c1, 0x0, 0x1);
        gbc.writeMem(0x2dbd, { 0xff });
        gbc.writeMem(0xa33a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xa33a, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xa33a));
        EXPECT(0x2d, gbc.readMem(0xa33b));
        // FF 00D8
        gbc.setState(0x715, 0xdf2d, 0x1f90, 0x54bf, 0x6865, 0x10ec, 0x0, 0x1);
        gbc.writeMem(0x715, { 0xff });
        gbc.writeMem(0xdf2b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xdf2b, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xdf2b));
        EXPECT(0x7, gbc.readMem(0xdf2c));
        // FF 00DB
        gbc.setState(0x6af8, 0xaa3e, 0xd760, 0xb13, 0x7565, 0x69c1, 0x0, 0x0);
        gbc.writeMem(0x6af8, { 0xff });
        gbc.writeMem(0xaa3c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xaa3c, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0xaa3c));
        EXPECT(0x6a, gbc.readMem(0xaa3d));
        // FF 00DF
        gbc.setState(0x7e69, 0x96b8, 0x7e40, 0x77df, 0x6e3d, 0x8571, 0x0, 0x1);
        gbc.writeMem(0x7e69, { 0xff });
        gbc.writeMem(0x96b6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x96b6, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x96b6));
        EXPECT(0x7e, gbc.readMem(0x96b7));
        // FF 00E4
        gbc.setState(0x308c, 0xec95, 0x420, 0x44, 0x8e3f, 0x4e73, 0x0, 0x1);
        gbc.writeMem(0x308c, { 0xff });
        gbc.writeMem(0xec93, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xec93, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xec93));
        EXPECT(0x30, gbc.readMem(0xec94));
        // FF 00E5
        gbc.setState(0x844e, 0xc823, 0xcc80, 0xc636, 0xe79d, 0xeb63, 0x0, 0x1);
        gbc.writeMem(0x844e, { 0xff });
        gbc.writeMem(0xc821, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc821, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x844e));
        EXPECT(0x4f, gbc.readMem(0xc821));
        EXPECT(0x84, gbc.readMem(0xc822));
        // FF 00E7
        gbc.setState(0xc8c9, 0xbba4, 0xd220, 0x839f, 0x1b5f, 0xc4a1, 0x0, 0x0);
        gbc.writeMem(0xbba2, { 0x0, 0x0 });
        gbc.writeMem(0xc8c9, { 0xff });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xbba2, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xbba2));
        EXPECT(0xc8, gbc.readMem(0xbba3));
        EXPECT(0xff, gbc.readMem(0xc8c9));
        // FF 00E8
        gbc.setState(0xc22e, 0xf9f0, 0xb190, 0x65e0, 0xc78c, 0x4f6e, 0x1, 0x0);
        gbc.writeMem(0xc22e, { 0xff });
        gbc.writeMem(0xf9ee, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xf9ee, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xc22e));
        EXPECT(0x2f, gbc.readMem(0xf9ee));
        EXPECT(0xc2, gbc.readMem(0xf9ef));
        // FF 00E9
        gbc.setState(0xaf5c, 0xb53e, 0x9bb0, 0xb8bd, 0x7c1e, 0xd213, 0x0, 0x0);
        gbc.writeMem(0xaf5c, { 0xff });
        gbc.writeMem(0xb53c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xb53c, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xaf5c));
        EXPECT(0x5d, gbc.readMem(0xb53c));
        EXPECT(0xaf, gbc.readMem(0xb53d));
        // FF 00EB
        gbc.setState(0x23e0, 0xd85c, 0x8240, 0xeb16, 0x59da, 0x50e5, 0x0, 0x1);
        gbc.writeMem(0x23e0, { 0xff });
        gbc.writeMem(0xd85a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd85a, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xd85a));
        EXPECT(0x23, gbc.readMem(0xd85b));
        // FF 00ED
        gbc.setState(0xd843, 0xfc1e, 0x6bc0, 0x4da8, 0x1a31, 0xaa24, 0x0, 0x1);
        gbc.writeMem(0xd843, { 0xff });
        gbc.writeMem(0xfc1c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xfc1c, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xd843));
        EXPECT(0x44, gbc.readMem(0xfc1c));
        EXPECT(0xd8, gbc.readMem(0xfc1d));
        // FF 00EF
        gbc.setState(0x497a, 0xb125, 0x1660, 0x4a8e, 0xeff2, 0x2274, 0x0, 0x1);
        gbc.writeMem(0x497a, { 0xff });
        gbc.writeMem(0xb123, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xb123, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xb123));
        EXPECT(0x49, gbc.readMem(0xb124));
        // FF 00F0
        gbc.setState(0xe3b4, 0xec01, 0x7490, 0xad, 0xa0fe, 0x8dbd, 0x1, 0x0);
        gbc.writeMem(0xe3b4, { 0xff });
        gbc.writeMem(0xebff, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xebff, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xe3b4));
        EXPECT(0xb5, gbc.readMem(0xebff));
        EXPECT(0xe3, gbc.readMem(0xec00));
        // FF 00F4
        gbc.setState(0x8c8f, 0xba98, 0xbec0, 0xe301, 0xd511, 0x759d, 0x1, 0x0);
        gbc.writeMem(0x8c8f, { 0xff });
        gbc.writeMem(0xba96, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xba96, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x8c8f));
        EXPECT(0x90, gbc.readMem(0xba96));
        EXPECT(0x8c, gbc.readMem(0xba97));
        // FF 00F5
        gbc.setState(0xc5e2, 0xfd29, 0xbf70, 0x3b0c, 0x408a, 0x10b4, 0x1, 0x1);
        gbc.writeMem(0xc5e2, { 0xff });
        gbc.writeMem(0xfd27, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xfd27, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xc5e2));
        EXPECT(0xe3, gbc.readMem(0xfd27));
        EXPECT(0xc5, gbc.readMem(0xfd28));
        // FF 00F8
        gbc.setState(0x5858, 0xd6dd, 0x4950, 0xb2a1, 0x554b, 0xd68c, 0x0, 0x0);
        gbc.writeMem(0x5858, { 0xff });
        gbc.writeMem(0xd6db, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xd6db, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xd6db));
        EXPECT(0x58, gbc.readMem(0xd6dc));
        // FF 00F9
        gbc.setState(0x9364, 0xe4c9, 0x5410, 0xcd0d, 0x8d6f, 0xf33a, 0x0, 0x1);
        gbc.writeMem(0x9364, { 0xff });
        gbc.writeMem(0xe4c7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xe4c7, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x9364));
        EXPECT(0x65, gbc.readMem(0xe4c7));
        EXPECT(0x93, gbc.readMem(0xe4c8));
        // FF 00FA
        gbc.setState(0x26e6, 0xdba0, 0xa560, 0x8134, 0xc90, 0xd94a, 0x0, 0x0);
        gbc.writeMem(0x26e6, { 0xff });
        gbc.writeMem(0xdb9e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xdb9e, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xdb9e));
        EXPECT(0x26, gbc.readMem(0xdb9f));
        // FF 00FB
        gbc.setState(0x90fe, 0x97aa, 0x4da0, 0x9b4b, 0x8545, 0x77ee, 0x0, 0x0);
        gbc.writeMem(0x90fe, { 0xff });
        gbc.writeMem(0x97a8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x97a8, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x90fe));
        EXPECT(0xff, gbc.readMem(0x97a8));
        EXPECT(0x90, gbc.readMem(0x97a9));
        // FF 00FC
        gbc.setState(0xbfc7, 0xbd3f, 0x7040, 0xe44, 0xd2e7, 0x55b1, 0x0, 0x0);
        gbc.writeMem(0xbd3d, { 0x0, 0x0 });
        gbc.writeMem(0xbfc7, { 0xff });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xbd3d, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xbd3d));
        EXPECT(0xbf, gbc.readMem(0xbd3e));
        EXPECT(0xff, gbc.readMem(0xbfc7));
        // FF 00FF
        gbc.setState(0x8d9b, 0xefb5, 0x7810, 0x28b3, 0xc071, 0x4570, 0x0, 0x1);
        gbc.writeMem(0x8d9b, { 0xff });
        gbc.writeMem(0xefb3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xefb3, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x8d9b));
        EXPECT(0x9c, gbc.readMem(0xefb3));
        EXPECT(0x8d, gbc.readMem(0xefb4));
        // FF 0100
        gbc.setState(0xc6c4, 0xd0dc, 0x69f0, 0xc2df, 0x11e8, 0xaa27, 0x1, 0x0);
        gbc.writeMem(0xc6c4, { 0xff });
        gbc.writeMem(0xd0da, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd0da, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xc6c4));
        EXPECT(0xc5, gbc.readMem(0xd0da));
        EXPECT(0xc6, gbc.readMem(0xd0db));
        // FF 0101
        gbc.setState(0xc49a, 0xd47d, 0xe950, 0xb9a2, 0xc13c, 0xaae0, 0x1, 0x1);
        gbc.writeMem(0xc49a, { 0xff });
        gbc.writeMem(0xd47b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd47b, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xc49a));
        EXPECT(0x9b, gbc.readMem(0xd47b));
        EXPECT(0xc4, gbc.readMem(0xd47c));
        // FF 0104
        gbc.setState(0x76de, 0x8512, 0x5c40, 0x2fd5, 0xf213, 0x1536, 0x0, 0x1);
        gbc.writeMem(0x76de, { 0xff });
        gbc.writeMem(0x8510, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x8510, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0x8510));
        EXPECT(0x76, gbc.readMem(0x8511));
        // FF 0107
        gbc.setState(0xa551, 0xd082, 0x34d0, 0xffbf, 0x5d01, 0xcddc, 0x1, 0x0);
        gbc.writeMem(0xa551, { 0xff });
        gbc.writeMem(0xd080, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xd080, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xa551));
        EXPECT(0x52, gbc.readMem(0xd080));
        EXPECT(0xa5, gbc.readMem(0xd081));
        // FF 0109
        gbc.setState(0x70cf, 0x86e5, 0xd5d0, 0x4cea, 0xfc3f, 0x3c74, 0x0, 0x1);
        gbc.writeMem(0x70cf, { 0xff });
        gbc.writeMem(0x86e3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x86e3, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x86e3));
        EXPECT(0x70, gbc.readMem(0x86e4));
        // FF 010B
        gbc.setState(0x3a19, 0x83aa, 0xf500, 0xf064, 0x6654, 0xef84, 0x1, 0x1);
        gbc.writeMem(0x3a19, { 0xff });
        gbc.writeMem(0x83a8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x83a8, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x83a8));
        EXPECT(0x3a, gbc.readMem(0x83a9));
        // FF 010C
        gbc.setState(0xa19c, 0xa3b2, 0x8650, 0x2a81, 0x232b, 0xcb9c, 0x1, 0x0);
        gbc.writeMem(0xa19c, { 0xff });
        gbc.writeMem(0xa3b0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xa3b0, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xa19c));
        EXPECT(0x9d, gbc.readMem(0xa3b0));
        EXPECT(0xa1, gbc.readMem(0xa3b1));
        // FF 010F
        gbc.setState(0x792b, 0x9243, 0xe40, 0xcc75, 0x90ba, 0x9f54, 0x0, 0x0);
        gbc.writeMem(0x792b, { 0xff });
        gbc.writeMem(0x9241, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x9241, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x9241));
        EXPECT(0x79, gbc.readMem(0x9242));
        // FF 0113
        gbc.setState(0x3f15, 0xada8, 0xc1d0, 0x8e4, 0x5af5, 0x5019, 0x0, 0x0);
        gbc.writeMem(0x3f15, { 0xff });
        gbc.writeMem(0xada6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xada6, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xada6));
        EXPECT(0x3f, gbc.readMem(0xada7));
        // FF 0114
        gbc.setState(0x1d95, 0xc24a, 0x9ed0, 0x6f3a, 0x3d87, 0xf1a1, 0x0, 0x0);
        gbc.writeMem(0x1d95, { 0xff });
        gbc.writeMem(0xc248, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xc248, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xc248));
        EXPECT(0x1d, gbc.readMem(0xc249));
        // FF 0116
        gbc.setState(0x7798, 0x8029, 0xc170, 0xc15e, 0xfbd3, 0xa1c1, 0x1, 0x1);
        gbc.writeMem(0x7798, { 0xff });
        gbc.writeMem(0x8027, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x8027, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8027));
        EXPECT(0x77, gbc.readMem(0x8028));
        // FF 0117
        gbc.setState(0xb30d, 0x8849, 0x54b0, 0xe2f1, 0x85c7, 0x996d, 0x0, 0x1);
        gbc.writeMem(0x8847, { 0x0, 0x0 });
        gbc.writeMem(0xb30d, { 0xff });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x8847, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8847));
        EXPECT(0xb3, gbc.readMem(0x8848));
        EXPECT(0xff, gbc.readMem(0xb30d));
        // FF 0119
        gbc.setState(0x326d, 0xd8bb, 0xcd00, 0x8f64, 0x2d2a, 0xbdab, 0x0, 0x0);
        gbc.writeMem(0x326d, { 0xff });
        gbc.writeMem(0xd8b9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xd8b9, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xd8b9));
        EXPECT(0x32, gbc.readMem(0xd8ba));
        // FF 011B
        gbc.setState(0x6b52, 0xd076, 0x6600, 0xd640, 0x77be, 0x8ed8, 0x1, 0x1);
        gbc.writeMem(0x6b52, { 0xff });
        gbc.writeMem(0xd074, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xd074, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xd074));
        EXPECT(0x6b, gbc.readMem(0xd075));
        // FF 011E
        gbc.setState(0xe91, 0xb32f, 0x5860, 0xac4e, 0xfc08, 0x37ab, 0x1, 0x0);
        gbc.writeMem(0xe91, { 0xff });
        gbc.writeMem(0xb32d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xb32d, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xb32d));
        EXPECT(0xe, gbc.readMem(0xb32e));
        // FF 0121
        gbc.setState(0x4b46, 0xe661, 0x6150, 0x37a0, 0x3ae8, 0x3257, 0x0, 0x1);
        gbc.writeMem(0x4b46, { 0xff });
        gbc.writeMem(0xe65f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xe65f, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe65f));
        EXPECT(0x4b, gbc.readMem(0xe660));
        // FF 0123
        gbc.setState(0x39d5, 0xac48, 0x1170, 0x1464, 0xec56, 0x446f, 0x0, 0x1);
        gbc.writeMem(0x39d5, { 0xff });
        gbc.writeMem(0xac46, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xac46, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xac46));
        EXPECT(0x39, gbc.readMem(0xac47));
        // FF 012A
        gbc.setState(0xc3ce, 0xaf07, 0xa2a0, 0x39c3, 0x539f, 0xec36, 0x1, 0x0);
        gbc.writeMem(0xaf05, { 0x0, 0x0 });
        gbc.writeMem(0xc3ce, { 0xff });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xaf05, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xaf05));
        EXPECT(0xc3, gbc.readMem(0xaf06));
        EXPECT(0xff, gbc.readMem(0xc3ce));
        // FF 012B
        gbc.setState(0x7539, 0x8d95, 0x3e0, 0xad73, 0x8cc2, 0x4c84, 0x1, 0x1);
        gbc.writeMem(0x7539, { 0xff });
        gbc.writeMem(0x8d93, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x8d93, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0x8d93));
        EXPECT(0x75, gbc.readMem(0x8d94));
        // FF 012E
        gbc.setState(0xb06b, 0xbea3, 0xaee0, 0x4d28, 0x6368, 0xac62, 0x1, 0x0);
        gbc.writeMem(0xb06b, { 0xff });
        gbc.writeMem(0xbea1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xbea1, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xb06b));
        EXPECT(0x6c, gbc.readMem(0xbea1));
        EXPECT(0xb0, gbc.readMem(0xbea2));
        // FF 0130
        gbc.setState(0xab94, 0x8435, 0xd050, 0x6403, 0x8c4f, 0x8277, 0x0, 0x0);
        gbc.writeMem(0x8433, { 0x0, 0x0 });
        gbc.writeMem(0xab94, { 0xff });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x8433, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x8433));
        EXPECT(0xab, gbc.readMem(0x8434));
        EXPECT(0xff, gbc.readMem(0xab94));
        // FF 0131
        gbc.setState(0x8c83, 0xde55, 0x97a0, 0xcada, 0xb1a6, 0x4bfb, 0x1, 0x1);
        gbc.writeMem(0x8c83, { 0xff });
        gbc.writeMem(0xde53, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xde53, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x8c83));
        EXPECT(0x84, gbc.readMem(0xde53));
        EXPECT(0x8c, gbc.readMem(0xde54));
        // FF 0132
        gbc.setState(0xd777, 0xcd0a, 0xec20, 0xe802, 0xf57a, 0x91a3, 0x1, 0x0);
        gbc.writeMem(0xcd08, { 0x0, 0x0 });
        gbc.writeMem(0xd777, { 0xff });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xcd08, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xcd08));
        EXPECT(0xd7, gbc.readMem(0xcd09));
        EXPECT(0xff, gbc.readMem(0xd777));
        // FF 0134
        gbc.setState(0xf36, 0xf510, 0x13e0, 0xe76a, 0x368f, 0x2dbe, 0x0, 0x1);
        gbc.writeMem(0xf36, { 0xff });
        gbc.writeMem(0xf50e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xf50e, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xf50e));
        EXPECT(0xf, gbc.readMem(0xf50f));
        // FF 0135
        gbc.setState(0x938a, 0xc717, 0x9be0, 0x3a2c, 0x626c, 0xd500, 0x1, 0x1);
        gbc.writeMem(0x938a, { 0xff });
        gbc.writeMem(0xc715, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc715, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x938a));
        EXPECT(0x8b, gbc.readMem(0xc715));
        EXPECT(0x93, gbc.readMem(0xc716));
        // FF 0136
        gbc.setState(0x8d50, 0xb70b, 0x5530, 0x5299, 0x15a1, 0xf5c0, 0x1, 0x1);
        gbc.writeMem(0x8d50, { 0xff });
        gbc.writeMem(0xb709, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xb709, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x8d50));
        EXPECT(0x51, gbc.readMem(0xb709));
        EXPECT(0x8d, gbc.readMem(0xb70a));
        // FF 0137
        gbc.setState(0x4b55, 0x9069, 0x9670, 0xd5c9, 0x1e91, 0x9311, 0x1, 0x0);
        gbc.writeMem(0x4b55, { 0xff });
        gbc.writeMem(0x9067, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x9067, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x9067));
        EXPECT(0x4b, gbc.readMem(0x9068));
        // FF 013A
        gbc.setState(0x6f3a, 0xa65a, 0xc7d0, 0xc45b, 0x4e5b, 0x58c2, 0x1, 0x0);
        gbc.writeMem(0x6f3a, { 0xff });
        gbc.writeMem(0xa658, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa658, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xa658));
        EXPECT(0x6f, gbc.readMem(0xa659));
        // FF 013C
        gbc.setState(0xebb9, 0xa08f, 0x8d20, 0xc83a, 0xc746, 0x784d, 0x1, 0x1);
        gbc.writeMem(0xa08d, { 0x0, 0x0 });
        gbc.writeMem(0xebb9, { 0xff });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xa08d, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xa08d));
        EXPECT(0xeb, gbc.readMem(0xa08e));
        EXPECT(0xff, gbc.readMem(0xebb9));
        // FF 013D
        gbc.setState(0xd0b4, 0xd776, 0x8d50, 0xa807, 0xd091, 0x4990, 0x1, 0x1);
        gbc.writeMem(0xd0b4, { 0xff });
        gbc.writeMem(0xd774, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xd774, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xd0b4));
        EXPECT(0xb5, gbc.readMem(0xd774));
        EXPECT(0xd0, gbc.readMem(0xd775));
        // FF 013E
        gbc.setState(0xa517, 0xb6f6, 0x7910, 0xb94f, 0x48e6, 0x727a, 0x1, 0x1);
        gbc.writeMem(0xa517, { 0xff });
        gbc.writeMem(0xb6f4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xb6f4, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xa517));
        EXPECT(0x18, gbc.readMem(0xb6f4));
        EXPECT(0xa5, gbc.readMem(0xb6f5));
        // FF 0142
        gbc.setState(0xbbca, 0xcc02, 0xed00, 0xa7d6, 0x5d88, 0x85d5, 0x1, 0x0);
        gbc.writeMem(0xbbca, { 0xff });
        gbc.writeMem(0xcc00, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xcc00, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xbbca));
        EXPECT(0xcb, gbc.readMem(0xcc00));
        EXPECT(0xbb, gbc.readMem(0xcc01));
        // FF 0144
        gbc.setState(0x3cc8, 0x861f, 0x9120, 0x5fa1, 0xb689, 0xc350, 0x0, 0x0);
        gbc.writeMem(0x3cc8, { 0xff });
        gbc.writeMem(0x861d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x861d, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x861d));
        EXPECT(0x3c, gbc.readMem(0x861e));
        // FF 0145
        gbc.setState(0x6cc7, 0xfc2e, 0x7000, 0x9167, 0x8c2d, 0x8bb1, 0x0, 0x1);
        gbc.writeMem(0x6cc7, { 0xff });
        gbc.writeMem(0xfc2c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xfc2c, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xfc2c));
        EXPECT(0x6c, gbc.readMem(0xfc2d));
        // FF 0146
        gbc.setState(0xa653, 0xfa44, 0xe660, 0xb02, 0xedaf, 0x2d1, 0x0, 0x1);
        gbc.writeMem(0xa653, { 0xff });
        gbc.writeMem(0xfa42, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xfa42, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xa653));
        EXPECT(0x54, gbc.readMem(0xfa42));
        EXPECT(0xa6, gbc.readMem(0xfa43));
        // FF 0148
        gbc.setState(0x1e01, 0xd4ca, 0x7a90, 0xa91c, 0xb576, 0x676b, 0x1, 0x1);
        gbc.writeMem(0x1e01, { 0xff });
        gbc.writeMem(0xd4c8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xd4c8, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xd4c8));
        EXPECT(0x1e, gbc.readMem(0xd4c9));
        // FF 0149
        gbc.setState(0x16f7, 0xf62e, 0xb310, 0xbd88, 0xee53, 0x97da, 0x0, 0x0);
        gbc.writeMem(0x16f7, { 0xff });
        gbc.writeMem(0xf62c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xf62c, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xf62c));
        EXPECT(0x16, gbc.readMem(0xf62d));
        // FF 014F
        gbc.setState(0xc0ca, 0xde98, 0xba30, 0xaf5b, 0x762c, 0x9852, 0x1, 0x1);
        gbc.writeMem(0xc0ca, { 0xff });
        gbc.writeMem(0xde96, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xde96, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xc0ca));
        EXPECT(0xcb, gbc.readMem(0xde96));
        EXPECT(0xc0, gbc.readMem(0xde97));
        // FF 0151
        gbc.setState(0xde83, 0x9c6c, 0x3600, 0x210, 0x85da, 0x1c46, 0x1, 0x1);
        gbc.writeMem(0x9c6a, { 0x0, 0x0 });
        gbc.writeMem(0xde83, { 0xff });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x9c6a, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0x9c6a));
        EXPECT(0xde, gbc.readMem(0x9c6b));
        EXPECT(0xff, gbc.readMem(0xde83));
        // FF 0152
        gbc.setState(0x4fe8, 0xdb24, 0x8800, 0x69ac, 0xe5c6, 0x68c7, 0x0, 0x1);
        gbc.writeMem(0x4fe8, { 0xff });
        gbc.writeMem(0xdb22, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xdb22, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xdb22));
        EXPECT(0x4f, gbc.readMem(0xdb23));
        // FF 0153
        gbc.setState(0x6223, 0xc853, 0x3540, 0xd1ce, 0x99c1, 0x9798, 0x0, 0x1);
        gbc.writeMem(0x6223, { 0xff });
        gbc.writeMem(0xc851, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc851, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xc851));
        EXPECT(0x62, gbc.readMem(0xc852));
        // FF 0155
        gbc.setState(0x1b82, 0xed95, 0x8dc0, 0x131, 0x7a07, 0xb10f, 0x0, 0x0);
        gbc.writeMem(0x1b82, { 0xff });
        gbc.writeMem(0xed93, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xed93, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xed93));
        EXPECT(0x1b, gbc.readMem(0xed94));
        // FF 0157
        gbc.setState(0xd958, 0xcea9, 0xd6e0, 0xb0ef, 0x7260, 0xef3b, 0x1, 0x0);
        gbc.writeMem(0xcea7, { 0x0, 0x0 });
        gbc.writeMem(0xd958, { 0xff });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xcea7, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xcea7));
        EXPECT(0xd9, gbc.readMem(0xcea8));
        EXPECT(0xff, gbc.readMem(0xd958));
        // FF 0158
        gbc.setState(0x528f, 0xf8cc, 0x10f0, 0xb8db, 0x7da1, 0xdf0f, 0x0, 0x0);
        gbc.writeMem(0x528f, { 0xff });
        gbc.writeMem(0xf8ca, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xf8ca, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xf8ca));
        EXPECT(0x52, gbc.readMem(0xf8cb));
        // FF 015A
        gbc.setState(0x6c03, 0xd143, 0x9c40, 0xbf2d, 0x524, 0x8dcb, 0x1, 0x0);
        gbc.writeMem(0x6c03, { 0xff });
        gbc.writeMem(0xd141, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xd141, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xd141));
        EXPECT(0x6c, gbc.readMem(0xd142));
        // FF 015B
        gbc.setState(0xc770, 0x80e0, 0xc7e0, 0x4619, 0xeb09, 0x8e89, 0x1, 0x0);
        gbc.writeMem(0x80de, { 0x0, 0x0 });
        gbc.writeMem(0xc770, { 0xff });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x80de, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x80de));
        EXPECT(0xc7, gbc.readMem(0x80df));
        EXPECT(0xff, gbc.readMem(0xc770));
        // FF 015C
        gbc.setState(0x3d17, 0x824b, 0x7cd0, 0x52c6, 0xded3, 0x69e6, 0x0, 0x1);
        gbc.writeMem(0x3d17, { 0xff });
        gbc.writeMem(0x8249, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x8249, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0x8249));
        EXPECT(0x3d, gbc.readMem(0x824a));
        // FF 0162
        gbc.setState(0x6dbc, 0xfc97, 0xe710, 0x747f, 0x2734, 0x8f02, 0x0, 0x1);
        gbc.writeMem(0x6dbc, { 0xff });
        gbc.writeMem(0xfc95, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xfc95, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xfc95));
        EXPECT(0x6d, gbc.readMem(0xfc96));
        // FF 0163
        gbc.setState(0xbde2, 0x86e2, 0x8ca0, 0x55ad, 0xc2a, 0xc25, 0x1, 0x0);
        gbc.writeMem(0x86e0, { 0x0, 0x0 });
        gbc.writeMem(0xbde2, { 0xff });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x86e0, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0x86e0));
        EXPECT(0xbd, gbc.readMem(0x86e1));
        EXPECT(0xff, gbc.readMem(0xbde2));
        // FF 0167
        gbc.setState(0xc40a, 0xb3e0, 0xe540, 0x414d, 0x3c05, 0x2b5f, 0x1, 0x1);
        gbc.writeMem(0xb3de, { 0x0, 0x0 });
        gbc.writeMem(0xc40a, { 0xff });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb3de, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb3de));
        EXPECT(0xc4, gbc.readMem(0xb3df));
        EXPECT(0xff, gbc.readMem(0xc40a));
        // FF 0168
        gbc.setState(0x3698, 0xfb73, 0x5c90, 0x39, 0xa5cc, 0xa4e2, 0x1, 0x0);
        gbc.writeMem(0x3698, { 0xff });
        gbc.writeMem(0xfb71, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xfb71, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xfb71));
        EXPECT(0x36, gbc.readMem(0xfb72));
        // FF 0169
        gbc.setState(0xc994, 0x830b, 0x5800, 0xcbf7, 0x73e3, 0xad02, 0x1, 0x0);
        gbc.writeMem(0x8309, { 0x0, 0x0 });
        gbc.writeMem(0xc994, { 0xff });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x8309, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x8309));
        EXPECT(0xc9, gbc.readMem(0x830a));
        EXPECT(0xff, gbc.readMem(0xc994));
        // FF 0171
        gbc.setState(0x1c24, 0xe8f4, 0xd70, 0x4092, 0xfdfd, 0x1325, 0x1, 0x0);
        gbc.writeMem(0x1c24, { 0xff });
        gbc.writeMem(0xe8f2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xe8f2, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xe8f2));
        EXPECT(0x1c, gbc.readMem(0xe8f3));
        // FF 0172
        gbc.setState(0xc114, 0xc817, 0xb660, 0x9f12, 0xea72, 0xedbc, 0x1, 0x0);
        gbc.writeMem(0xc114, { 0xff });
        gbc.writeMem(0xc815, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xc815, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xc114));
        EXPECT(0x15, gbc.readMem(0xc815));
        EXPECT(0xc1, gbc.readMem(0xc816));
        // FF 0175
        gbc.setState(0x7c7c, 0xa070, 0x8fc0, 0x813f, 0x9dd5, 0xad78, 0x0, 0x0);
        gbc.writeMem(0x7c7c, { 0xff });
        gbc.writeMem(0xa06e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xa06e, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xa06e));
        EXPECT(0x7c, gbc.readMem(0xa06f));
        // FF 0177
        gbc.setState(0x3b27, 0xaddf, 0x4b40, 0xdbc8, 0xc4be, 0x85ae, 0x0, 0x0);
        gbc.writeMem(0x3b27, { 0xff });
        gbc.writeMem(0xaddd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xaddd, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xaddd));
        EXPECT(0x3b, gbc.readMem(0xadde));
        // FF 017A
        gbc.setState(0x9989, 0xb91f, 0x9230, 0xbc08, 0x9953, 0x32e1, 0x0, 0x1);
        gbc.writeMem(0x9989, { 0xff });
        gbc.writeMem(0xb91d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb91d, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x9989));
        EXPECT(0x8a, gbc.readMem(0xb91d));
        EXPECT(0x99, gbc.readMem(0xb91e));
        // FF 017B
        gbc.setState(0x712, 0xaf41, 0x83b0, 0x7a4, 0x1fcc, 0xc10a, 0x1, 0x1);
        gbc.writeMem(0x712, { 0xff });
        gbc.writeMem(0xaf3f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xaf3f, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xaf3f));
        EXPECT(0x7, gbc.readMem(0xaf40));
        // FF 017C
        gbc.setState(0x8be, 0xe8e5, 0x24c0, 0x1e07, 0xa06f, 0x2a82, 0x0, 0x1);
        gbc.writeMem(0x8be, { 0xff });
        gbc.writeMem(0xe8e3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xe8e3, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xe8e3));
        EXPECT(0x8, gbc.readMem(0xe8e4));
        // FF 017F
        gbc.setState(0xba65, 0x94b4, 0xd0, 0x9e0c, 0x99a0, 0xf046, 0x1, 0x1);
        gbc.writeMem(0x94b2, { 0x0, 0x0 });
        gbc.writeMem(0xba65, { 0xff });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x94b2, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x94b2));
        EXPECT(0xba, gbc.readMem(0x94b3));
        EXPECT(0xff, gbc.readMem(0xba65));
        // FF 0180
        gbc.setState(0xebd9, 0xb3fd, 0xda00, 0xbc1a, 0xbfc7, 0xf4b9, 0x1, 0x1);
        gbc.writeMem(0xb3fb, { 0x0, 0x0 });
        gbc.writeMem(0xebd9, { 0xff });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xb3fb, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xb3fb));
        EXPECT(0xeb, gbc.readMem(0xb3fc));
        EXPECT(0xff, gbc.readMem(0xebd9));
        // FF 0181
        gbc.setState(0xd579, 0x9fd0, 0x59e0, 0xe3e8, 0x6957, 0x7423, 0x0, 0x1);
        gbc.writeMem(0x9fce, { 0x0, 0x0 });
        gbc.writeMem(0xd579, { 0xff });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x9fce, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9fce));
        EXPECT(0xd5, gbc.readMem(0x9fcf));
        EXPECT(0xff, gbc.readMem(0xd579));
        // FF 0182
        gbc.setState(0x3f06, 0xaf3b, 0xeca0, 0x1ea, 0xed40, 0x2430, 0x0, 0x1);
        gbc.writeMem(0x3f06, { 0xff });
        gbc.writeMem(0xaf39, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xaf39, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xaf39));
        EXPECT(0x3f, gbc.readMem(0xaf3a));
        // FF 0184
        gbc.setState(0x49b3, 0xaa40, 0x6c80, 0x964c, 0x7c03, 0xf602, 0x0, 0x0);
        gbc.writeMem(0x49b3, { 0xff });
        gbc.writeMem(0xaa3e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xaa3e, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xaa3e));
        EXPECT(0x49, gbc.readMem(0xaa3f));
        // FF 0188
        gbc.setState(0xd19a, 0xe6c4, 0x7260, 0x94e, 0xe655, 0xbb90, 0x0, 0x1);
        gbc.writeMem(0xd19a, { 0xff });
        gbc.writeMem(0xe6c2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xe6c2, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xd19a));
        EXPECT(0x9b, gbc.readMem(0xe6c2));
        EXPECT(0xd1, gbc.readMem(0xe6c3));
        // FF 0189
        gbc.setState(0x60ce, 0xd24f, 0x1ea0, 0x75b7, 0x8eb0, 0x7412, 0x0, 0x1);
        gbc.writeMem(0x60ce, { 0xff });
        gbc.writeMem(0xd24d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xd24d, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xd24d));
        EXPECT(0x60, gbc.readMem(0xd24e));
        // FF 018D
        gbc.setState(0xe9a1, 0xeea7, 0x1590, 0xe22, 0xc1a7, 0x5aed, 0x0, 0x0);
        gbc.writeMem(0xe9a1, { 0xff });
        gbc.writeMem(0xeea5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xeea5, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xe9a1));
        EXPECT(0xa2, gbc.readMem(0xeea5));
        EXPECT(0xe9, gbc.readMem(0xeea6));
        // FF 018E
        gbc.setState(0x776, 0xacb1, 0x5db0, 0xbd60, 0xc3f4, 0x5565, 0x0, 0x0);
        gbc.writeMem(0x776, { 0xff });
        gbc.writeMem(0xacaf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xacaf, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xacaf));
        EXPECT(0x7, gbc.readMem(0xacb0));
        // FF 018F
        gbc.setState(0x30f4, 0xdfdc, 0xc250, 0x6ff9, 0x606f, 0x56b0, 0x1, 0x0);
        gbc.writeMem(0x30f4, { 0xff });
        gbc.writeMem(0xdfda, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xdfda, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xdfda));
        EXPECT(0x30, gbc.readMem(0xdfdb));
        // FF 0190
        gbc.setState(0x4ed2, 0xc572, 0x6180, 0x5ea0, 0x45cd, 0x1132, 0x0, 0x1);
        gbc.writeMem(0x4ed2, { 0xff });
        gbc.writeMem(0xc570, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc570, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xc570));
        EXPECT(0x4e, gbc.readMem(0xc571));
        // FF 0191
        gbc.setState(0xe4c1, 0xcb83, 0x5600, 0x40dc, 0xb658, 0x8a28, 0x0, 0x0);
        gbc.writeMem(0xcb81, { 0x0, 0x0 });
        gbc.writeMem(0xe4c1, { 0xff });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xcb81, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xcb81));
        EXPECT(0xe4, gbc.readMem(0xcb82));
        EXPECT(0xff, gbc.readMem(0xe4c1));
        // FF 0192
        gbc.setState(0xefb9, 0x8da0, 0x4670, 0x37f, 0xf2f5, 0xb4c, 0x1, 0x1);
        gbc.writeMem(0x8d9e, { 0x0, 0x0 });
        gbc.writeMem(0xefb9, { 0xff });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8d9e, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0x8d9e));
        EXPECT(0xef, gbc.readMem(0x8d9f));
        EXPECT(0xff, gbc.readMem(0xefb9));
        // FF 0195
        gbc.setState(0xeeaa, 0xb02f, 0x44b0, 0xa07d, 0x8969, 0x8163, 0x0, 0x1);
        gbc.writeMem(0xb02d, { 0x0, 0x0 });
        gbc.writeMem(0xeeaa, { 0xff });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb02d, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xb02d));
        EXPECT(0xee, gbc.readMem(0xb02e));
        EXPECT(0xff, gbc.readMem(0xeeaa));
        // FF 0196
        gbc.setState(0x8b6c, 0x97dc, 0x5a50, 0x248c, 0x196f, 0x3982, 0x0, 0x1);
        gbc.writeMem(0x8b6c, { 0xff });
        gbc.writeMem(0x97da, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x97da, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x8b6c));
        EXPECT(0x6d, gbc.readMem(0x97da));
        EXPECT(0x8b, gbc.readMem(0x97db));
        // FF 0197
        gbc.setState(0x386a, 0xf083, 0x2660, 0xf0c0, 0xd538, 0x4060, 0x1, 0x0);
        gbc.writeMem(0x386a, { 0xff });
        gbc.writeMem(0xf081, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xf081, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xf081));
        EXPECT(0x38, gbc.readMem(0xf082));
        // FF 0199
        gbc.setState(0xe645, 0xa735, 0x5f70, 0x8c9, 0x6669, 0xf9cd, 0x0, 0x0);
        gbc.writeMem(0xa733, { 0x0, 0x0 });
        gbc.writeMem(0xe645, { 0xff });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xa733, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xa733));
        EXPECT(0xe6, gbc.readMem(0xa734));
        EXPECT(0xff, gbc.readMem(0xe645));
        // FF 019A
        gbc.setState(0xda03, 0xff95, 0x7d0, 0x118e, 0x1f54, 0x3092, 0x0, 0x1);
        gbc.writeMem(0xda03, { 0xff });
        gbc.writeMem(0xff93, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xff93, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xda03));
        EXPECT(0x4, gbc.readMem(0xff93));
        EXPECT(0xda, gbc.readMem(0xff94));
        // FF 019B
        gbc.setState(0x1e59, 0xd87f, 0x12c0, 0xddf0, 0x7ac4, 0x37b4, 0x1, 0x0);
        gbc.writeMem(0x1e59, { 0xff });
        gbc.writeMem(0xd87d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd87d, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xd87d));
        EXPECT(0x1e, gbc.readMem(0xd87e));
        // FF 019C
        gbc.setState(0xd08b, 0x80c8, 0x3010, 0xb985, 0x9154, 0x910a, 0x1, 0x0);
        gbc.writeMem(0x80c6, { 0x0, 0x0 });
        gbc.writeMem(0xd08b, { 0xff });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x80c6, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x80c6));
        EXPECT(0xd0, gbc.readMem(0x80c7));
        EXPECT(0xff, gbc.readMem(0xd08b));
        // FF 019D
        gbc.setState(0xb1f3, 0x8279, 0x6170, 0xed86, 0x1f4c, 0x5938, 0x1, 0x1);
        gbc.writeMem(0x8277, { 0x0, 0x0 });
        gbc.writeMem(0xb1f3, { 0xff });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x8277, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0x8277));
        EXPECT(0xb1, gbc.readMem(0x8278));
        EXPECT(0xff, gbc.readMem(0xb1f3));
        // FF 01A0
        gbc.setState(0xa65, 0xce0b, 0x6800, 0x5843, 0xf984, 0x19cc, 0x1, 0x0);
        gbc.writeMem(0xa65, { 0xff });
        gbc.writeMem(0xce09, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xce09, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xce09));
        EXPECT(0xa, gbc.readMem(0xce0a));
        // FF 01A2
        gbc.setState(0xb37b, 0xb6bc, 0x85f0, 0x1102, 0x2e6f, 0x3557, 0x1, 0x0);
        gbc.writeMem(0xb37b, { 0xff });
        gbc.writeMem(0xb6ba, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xb6ba, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xb37b));
        EXPECT(0x7c, gbc.readMem(0xb6ba));
        EXPECT(0xb3, gbc.readMem(0xb6bb));
        // FF 01A3
        gbc.setState(0x1a9d, 0xfaf3, 0x5330, 0x89cf, 0xe9a, 0x2393, 0x1, 0x1);
        gbc.writeMem(0x1a9d, { 0xff });
        gbc.writeMem(0xfaf1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xfaf1, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xfaf1));
        EXPECT(0x1a, gbc.readMem(0xfaf2));
        // FF 01A6
        gbc.setState(0xd318, 0xef6a, 0x1750, 0xe419, 0x766e, 0xc240, 0x0, 0x1);
        gbc.writeMem(0xd318, { 0xff });
        gbc.writeMem(0xef68, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xef68, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xd318));
        EXPECT(0x19, gbc.readMem(0xef68));
        EXPECT(0xd3, gbc.readMem(0xef69));
        // FF 01A7
        gbc.setState(0xb42, 0x83a6, 0xfe20, 0x6c4d, 0x8d5f, 0x2622, 0x1, 0x1);
        gbc.writeMem(0xb42, { 0xff });
        gbc.writeMem(0x83a4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x83a4, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x83a4));
        EXPECT(0xb, gbc.readMem(0x83a5));
        // FF 01AA
        gbc.setState(0xca9b, 0xdf4e, 0x6a00, 0x81bd, 0x59dc, 0xf5cc, 0x0, 0x1);
        gbc.writeMem(0xca9b, { 0xff });
        gbc.writeMem(0xdf4c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xdf4c, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xca9b));
        EXPECT(0x9c, gbc.readMem(0xdf4c));
        EXPECT(0xca, gbc.readMem(0xdf4d));
        // FF 01AE
        gbc.setState(0xa8e7, 0xf54d, 0xe760, 0x908e, 0xfd83, 0xa, 0x1, 0x0);
        gbc.writeMem(0xa8e7, { 0xff });
        gbc.writeMem(0xf54b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xf54b, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xa8e7));
        EXPECT(0xe8, gbc.readMem(0xf54b));
        EXPECT(0xa8, gbc.readMem(0xf54c));
        // FF 01B2
        gbc.setState(0x98b, 0xe129, 0x1010, 0x6eb9, 0x5c7c, 0x92ea, 0x0, 0x0);
        gbc.writeMem(0x98b, { 0xff });
        gbc.writeMem(0xe127, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xe127, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe127));
        EXPECT(0x9, gbc.readMem(0xe128));
        // FF 01B3
        gbc.setState(0x4813, 0x96f4, 0x8a70, 0xbc84, 0xff55, 0x6c9c, 0x1, 0x0);
        gbc.writeMem(0x4813, { 0xff });
        gbc.writeMem(0x96f2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x96f2, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x96f2));
        EXPECT(0x48, gbc.readMem(0x96f3));
        // FF 01B4
        gbc.setState(0xe, 0x9d15, 0xc740, 0xb51f, 0x6938, 0xb696, 0x1, 0x0);
        gbc.writeMem(0xe, { 0xff });
        gbc.writeMem(0x9d13, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x9d13, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0x9d13));
        EXPECT(0x0, gbc.readMem(0x9d14));
        // FF 01B5
        gbc.setState(0x824, 0x8005, 0xe360, 0xabd, 0x1beb, 0x15f9, 0x0, 0x0);
        gbc.writeMem(0x824, { 0xff });
        gbc.writeMem(0x8003, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8003, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x8003));
        EXPECT(0x8, gbc.readMem(0x8004));
        // FF 01B6
        gbc.setState(0x3593, 0xcacf, 0xd0e0, 0x7fb6, 0xad23, 0xdf07, 0x0, 0x0);
        gbc.writeMem(0x3593, { 0xff });
        gbc.writeMem(0xcacd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xcacd, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xcacd));
        EXPECT(0x35, gbc.readMem(0xcace));
        // FF 01B7
        gbc.setState(0x9f8e, 0xe1dd, 0x9f90, 0x2e5b, 0xbece, 0xd327, 0x1, 0x0);
        gbc.writeMem(0x9f8e, { 0xff });
        gbc.writeMem(0xe1db, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xe1db, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x9f8e));
        EXPECT(0x8f, gbc.readMem(0xe1db));
        EXPECT(0x9f, gbc.readMem(0xe1dc));
        // FF 01B8
        gbc.setState(0x5f1f, 0xfdfe, 0x5b10, 0x5cd6, 0x7e3a, 0x5d5e, 0x1, 0x1);
        gbc.writeMem(0x5f1f, { 0xff });
        gbc.writeMem(0xfdfc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xfdfc, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xfdfc));
        EXPECT(0x5f, gbc.readMem(0xfdfd));
        // FF 01BA
        gbc.setState(0xce43, 0x99a3, 0x79c0, 0xe2a5, 0xc8d1, 0x438c, 0x1, 0x0);
        gbc.writeMem(0x99a1, { 0x0, 0x0 });
        gbc.writeMem(0xce43, { 0xff });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x99a1, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x99a1));
        EXPECT(0xce, gbc.readMem(0x99a2));
        EXPECT(0xff, gbc.readMem(0xce43));
        // FF 01BE
        gbc.setState(0x7dd6, 0x8997, 0xe5e0, 0x30d9, 0x3a98, 0xfc4d, 0x1, 0x1);
        gbc.writeMem(0x7dd6, { 0xff });
        gbc.writeMem(0x8995, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x8995, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0x8995));
        EXPECT(0x7d, gbc.readMem(0x8996));
        // FF 01BF
        gbc.setState(0x98ff, 0xdcae, 0x7770, 0xce34, 0x6118, 0xe91, 0x1, 0x1);
        gbc.writeMem(0x98ff, { 0xff });
        gbc.writeMem(0xdcac, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xdcac, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x98ff));
        EXPECT(0x0, gbc.readMem(0xdcac));
        EXPECT(0x99, gbc.readMem(0xdcad));
        // FF 01C0
        gbc.setState(0x3999, 0xfe29, 0x5480, 0xbfb2, 0xd1d0, 0xe7e5, 0x1, 0x1);
        gbc.writeMem(0x3999, { 0xff });
        gbc.writeMem(0xfe27, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xfe27, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xfe27));
        EXPECT(0x39, gbc.readMem(0xfe28));
        // FF 01C6
        gbc.setState(0xede0, 0x9d64, 0x690, 0xbb44, 0xb490, 0x8d51, 0x0, 0x1);
        gbc.writeMem(0x9d62, { 0x0, 0x0 });
        gbc.writeMem(0xede0, { 0xff });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x9d62, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x9d62));
        EXPECT(0xed, gbc.readMem(0x9d63));
        EXPECT(0xff, gbc.readMem(0xede0));
        // FF 01C7
        gbc.setState(0xa11c, 0xd9de, 0x7b0, 0x5f30, 0x699c, 0x27c, 0x0, 0x0);
        gbc.writeMem(0xa11c, { 0xff });
        gbc.writeMem(0xd9dc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xd9dc, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xa11c));
        EXPECT(0x1d, gbc.readMem(0xd9dc));
        EXPECT(0xa1, gbc.readMem(0xd9dd));
        // FF 01C8
        gbc.setState(0xb59b, 0x8bba, 0x33c0, 0x4138, 0x8d3b, 0x23a0, 0x0, 0x1);
        gbc.writeMem(0x8bb8, { 0x0, 0x0 });
        gbc.writeMem(0xb59b, { 0xff });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x8bb8, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8bb8));
        EXPECT(0xb5, gbc.readMem(0x8bb9));
        EXPECT(0xff, gbc.readMem(0xb59b));
        // FF 01C9
        gbc.setState(0x3419, 0xc920, 0x6750, 0xee6c, 0xc6d5, 0x663a, 0x1, 0x0);
        gbc.writeMem(0x3419, { 0xff });
        gbc.writeMem(0xc91e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xc91e, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xc91e));
        EXPECT(0x34, gbc.readMem(0xc91f));
        // FF 01CC
        gbc.setState(0x9915, 0xa6cc, 0x5890, 0x7740, 0x9fca, 0xeff, 0x0, 0x1);
        gbc.writeMem(0x9915, { 0xff });
        gbc.writeMem(0xa6ca, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa6ca, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x9915));
        EXPECT(0x16, gbc.readMem(0xa6ca));
        EXPECT(0x99, gbc.readMem(0xa6cb));
        // FF 01CE
        gbc.setState(0xae70, 0xec56, 0xbec0, 0xb33d, 0x6113, 0xa3f0, 0x0, 0x0);
        gbc.writeMem(0xae70, { 0xff });
        gbc.writeMem(0xec54, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xec54, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xae70));
        EXPECT(0x71, gbc.readMem(0xec54));
        EXPECT(0xae, gbc.readMem(0xec55));
        // FF 01CF
        gbc.setState(0x4060, 0xc599, 0x27e0, 0xf449, 0x8a5d, 0x71f1, 0x1, 0x0);
        gbc.writeMem(0x4060, { 0xff });
        gbc.writeMem(0xc597, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xc597, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc597));
        EXPECT(0x40, gbc.readMem(0xc598));
        // FF 01D5
        gbc.setState(0x8231, 0xc848, 0x9250, 0x78ee, 0xcb44, 0xef47, 0x1, 0x1);
        gbc.writeMem(0x8231, { 0xff });
        gbc.writeMem(0xc846, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xc846, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x8231));
        EXPECT(0x32, gbc.readMem(0xc846));
        EXPECT(0x82, gbc.readMem(0xc847));
        // FF 01D6
        gbc.setState(0x8f59, 0x9487, 0xfff0, 0xbfd9, 0x6d00, 0x6c1d, 0x0, 0x0);
        gbc.writeMem(0x8f59, { 0xff });
        gbc.writeMem(0x9485, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x9485, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x8f59));
        EXPECT(0x5a, gbc.readMem(0x9485));
        EXPECT(0x8f, gbc.readMem(0x9486));
        // FF 01D8
        gbc.setState(0x6e3d, 0xa20a, 0xe8a0, 0x217e, 0xb99e, 0x2bd9, 0x0, 0x1);
        gbc.writeMem(0x6e3d, { 0xff });
        gbc.writeMem(0xa208, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xa208, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xa208));
        EXPECT(0x6e, gbc.readMem(0xa209));
        // FF 01DA
        gbc.setState(0xa19c, 0xea09, 0xd190, 0x760a, 0x9cfd, 0xc9af, 0x1, 0x0);
        gbc.writeMem(0xa19c, { 0xff });
        gbc.writeMem(0xea07, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xea07, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xa19c));
        EXPECT(0x9d, gbc.readMem(0xea07));
        EXPECT(0xa1, gbc.readMem(0xea08));
        // FF 01DF
        gbc.setState(0x8c25, 0xb852, 0x7230, 0xb0e5, 0x49e5, 0x1bdd, 0x0, 0x1);
        gbc.writeMem(0x8c25, { 0xff });
        gbc.writeMem(0xb850, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb850, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x8c25));
        EXPECT(0x26, gbc.readMem(0xb850));
        EXPECT(0x8c, gbc.readMem(0xb851));
        // FF 01E2
        gbc.setState(0xeef, 0xc826, 0x3d80, 0x6bd2, 0x8fb4, 0xd29b, 0x0, 0x0);
        gbc.writeMem(0xeef, { 0xff });
        gbc.writeMem(0xc824, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xc824, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc824));
        EXPECT(0xe, gbc.readMem(0xc825));
        // FF 01E4
        gbc.setState(0xd0c5, 0xf56c, 0xc8c0, 0x93fe, 0xdddb, 0x345e, 0x1, 0x1);
        gbc.writeMem(0xd0c5, { 0xff });
        gbc.writeMem(0xf56a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xf56a, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xd0c5));
        EXPECT(0xc6, gbc.readMem(0xf56a));
        EXPECT(0xd0, gbc.readMem(0xf56b));
        // FF 01E5
        gbc.setState(0x2e5e, 0xc276, 0x83b0, 0x4dc1, 0x35c8, 0x3b14, 0x0, 0x1);
        gbc.writeMem(0x2e5e, { 0xff });
        gbc.writeMem(0xc274, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc274, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xc274));
        EXPECT(0x2e, gbc.readMem(0xc275));
        // FF 01E6
        gbc.setState(0x78e0, 0xa995, 0x3cf0, 0xb60b, 0x14b0, 0x5d6d, 0x1, 0x1);
        gbc.writeMem(0x78e0, { 0xff });
        gbc.writeMem(0xa993, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xa993, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xa993));
        EXPECT(0x78, gbc.readMem(0xa994));
        // FF 01E8
        gbc.setState(0x8e96, 0xeedd, 0xd0f0, 0x44f3, 0xb076, 0x31f9, 0x0, 0x0);
        gbc.writeMem(0x8e96, { 0xff });
        gbc.writeMem(0xeedb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xeedb, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x8e96));
        EXPECT(0x97, gbc.readMem(0xeedb));
        EXPECT(0x8e, gbc.readMem(0xeedc));
        // FF 01EA
        gbc.setState(0x16fc, 0xd50d, 0x78c0, 0xfee0, 0x74d4, 0xc28f, 0x1, 0x1);
        gbc.writeMem(0x16fc, { 0xff });
        gbc.writeMem(0xd50b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd50b, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xd50b));
        EXPECT(0x16, gbc.readMem(0xd50c));
        // FF 01ED
        gbc.setState(0x48c, 0xe6c7, 0xab10, 0x4999, 0xae11, 0x279b, 0x1, 0x1);
        gbc.writeMem(0x48c, { 0xff });
        gbc.writeMem(0xe6c5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe6c5, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xe6c5));
        EXPECT(0x4, gbc.readMem(0xe6c6));
        // FF 01EE
        gbc.setState(0x7433, 0xcb02, 0xec50, 0x1051, 0xb3af, 0x5a79, 0x0, 0x0);
        gbc.writeMem(0x7433, { 0xff });
        gbc.writeMem(0xcb00, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xcb00, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xcb00));
        EXPECT(0x74, gbc.readMem(0xcb01));
        // FF 01EF
        gbc.setState(0xabf7, 0xca8d, 0xaf50, 0x8d6d, 0x4bf5, 0xe0, 0x1, 0x1);
        gbc.writeMem(0xabf7, { 0xff });
        gbc.writeMem(0xca8b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xca8b, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xabf7));
        EXPECT(0xf8, gbc.readMem(0xca8b));
        EXPECT(0xab, gbc.readMem(0xca8c));
        // FF 01F3
        gbc.setState(0xc6bc, 0xbcf0, 0xdcf0, 0x9dc7, 0x705f, 0x5cbb, 0x0, 0x0);
        gbc.writeMem(0xbcee, { 0x0, 0x0 });
        gbc.writeMem(0xc6bc, { 0xff });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xbcee, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xbcee));
        EXPECT(0xc6, gbc.readMem(0xbcef));
        EXPECT(0xff, gbc.readMem(0xc6bc));
        // FF 01F4
        gbc.setState(0xebc6, 0xab1f, 0xcd40, 0x6276, 0x180f, 0x9db0, 0x0, 0x0);
        gbc.writeMem(0xab1d, { 0x0, 0x0 });
        gbc.writeMem(0xebc6, { 0xff });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xab1d, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xab1d));
        EXPECT(0xeb, gbc.readMem(0xab1e));
        EXPECT(0xff, gbc.readMem(0xebc6));
        // FF 01F6
        gbc.setState(0x3cf2, 0x8b07, 0xd430, 0x7420, 0x549f, 0x1aae, 0x1, 0x0);
        gbc.writeMem(0x3cf2, { 0xff });
        gbc.writeMem(0x8b05, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x8b05, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0x8b05));
        EXPECT(0x3c, gbc.readMem(0x8b06));
        // FF 01F8
        gbc.setState(0x195f, 0x9046, 0x3a70, 0xd5b2, 0x4883, 0xbd11, 0x1, 0x0);
        gbc.writeMem(0x195f, { 0xff });
        gbc.writeMem(0x9044, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x9044, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0x9044));
        EXPECT(0x19, gbc.readMem(0x9045));
        // FF 01FB
        gbc.setState(0xb8d9, 0xc902, 0x3050, 0x686d, 0xe4da, 0xfc95, 0x1, 0x0);
        gbc.writeMem(0xb8d9, { 0xff });
        gbc.writeMem(0xc900, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xc900, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xb8d9));
        EXPECT(0xda, gbc.readMem(0xc900));
        EXPECT(0xb8, gbc.readMem(0xc901));
        // FF 01FE
        gbc.setState(0x75a4, 0xd4a2, 0xa770, 0x77d4, 0x9987, 0xbc70, 0x1, 0x1);
        gbc.writeMem(0x75a4, { 0xff });
        gbc.writeMem(0xd4a0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xd4a0, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xd4a0));
        EXPECT(0x75, gbc.readMem(0xd4a1));
        // FF 01FF
        gbc.setState(0x68b5, 0xa3f1, 0xf6c0, 0x98d0, 0xfba2, 0xd728, 0x1, 0x0);
        gbc.writeMem(0x68b5, { 0xff });
        gbc.writeMem(0xa3ef, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xa3ef, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xa3ef));
        EXPECT(0x68, gbc.readMem(0xa3f0));
        // FF 0200
        gbc.setState(0x12e0, 0xba7b, 0xc580, 0xfa09, 0x9cae, 0x959c, 0x1, 0x0);
        gbc.writeMem(0x12e0, { 0xff });
        gbc.writeMem(0xba79, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xba79, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xba79));
        EXPECT(0x12, gbc.readMem(0xba7a));
        // FF 0201
        gbc.setState(0x8671, 0x99e7, 0x7c00, 0x6376, 0xc75e, 0xd65b, 0x0, 0x1);
        gbc.writeMem(0x8671, { 0xff });
        gbc.writeMem(0x99e5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x99e5, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x8671));
        EXPECT(0x72, gbc.readMem(0x99e5));
        EXPECT(0x86, gbc.readMem(0x99e6));
        // FF 0203
        gbc.setState(0x7707, 0x96d8, 0xa730, 0xd882, 0x5827, 0x2c11, 0x0, 0x1);
        gbc.writeMem(0x7707, { 0xff });
        gbc.writeMem(0x96d6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x96d6, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0x96d6));
        EXPECT(0x77, gbc.readMem(0x96d7));
        // FF 0205
        gbc.setState(0x816, 0xdb6c, 0x6ae0, 0xe98, 0x867c, 0xf0a, 0x1, 0x1);
        gbc.writeMem(0x816, { 0xff });
        gbc.writeMem(0xdb6a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xdb6a, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xdb6a));
        EXPECT(0x8, gbc.readMem(0xdb6b));
        // FF 020B
        gbc.setState(0x9b2d, 0x9798, 0xa7a0, 0x1ed7, 0x8f25, 0xaf33, 0x0, 0x1);
        gbc.writeMem(0x9796, { 0x0, 0x0 });
        gbc.writeMem(0x9b2d, { 0xff });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x9796, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x9796));
        EXPECT(0x9b, gbc.readMem(0x9797));
        EXPECT(0xff, gbc.readMem(0x9b2d));
        // FF 020E
        gbc.setState(0x8175, 0x9ad3, 0x4200, 0xd70e, 0xdb64, 0x69de, 0x0, 0x1);
        gbc.writeMem(0x8175, { 0xff });
        gbc.writeMem(0x9ad1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x9ad1, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x8175));
        EXPECT(0x76, gbc.readMem(0x9ad1));
        EXPECT(0x81, gbc.readMem(0x9ad2));
        // FF 0212
        gbc.setState(0x8871, 0x9891, 0x11e0, 0x2d8a, 0xb330, 0xb0b0, 0x0, 0x0);
        gbc.writeMem(0x8871, { 0xff });
        gbc.writeMem(0x988f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x988f, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x8871));
        EXPECT(0x72, gbc.readMem(0x988f));
        EXPECT(0x88, gbc.readMem(0x9890));
        // FF 0213
        gbc.setState(0x5745, 0xbf8c, 0xfac0, 0xaf89, 0xe7d0, 0x86aa, 0x0, 0x0);
        gbc.writeMem(0x5745, { 0xff });
        gbc.writeMem(0xbf8a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xbf8a, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xbf8a));
        EXPECT(0x57, gbc.readMem(0xbf8b));
        // FF 0214
        gbc.setState(0xdbe5, 0xec46, 0xd9d0, 0x9677, 0x2bdb, 0x27c8, 0x0, 0x0);
        gbc.writeMem(0xdbe5, { 0xff });
        gbc.writeMem(0xec44, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xec44, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xdbe5));
        EXPECT(0xe6, gbc.readMem(0xec44));
        EXPECT(0xdb, gbc.readMem(0xec45));
        // FF 0216
        gbc.setState(0x146a, 0xb231, 0xc5c0, 0x98be, 0xd578, 0xec13, 0x1, 0x0);
        gbc.writeMem(0x146a, { 0xff });
        gbc.writeMem(0xb22f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xb22f, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xb22f));
        EXPECT(0x14, gbc.readMem(0xb230));
        // FF 0217
        gbc.setState(0xaaad, 0xc70a, 0x3f00, 0x53c6, 0xc5de, 0x2e0d, 0x0, 0x0);
        gbc.writeMem(0xaaad, { 0xff });
        gbc.writeMem(0xc708, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xc708, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xaaad));
        EXPECT(0xae, gbc.readMem(0xc708));
        EXPECT(0xaa, gbc.readMem(0xc709));
        // FF 0218
        gbc.setState(0x3ca9, 0xcf3f, 0x2770, 0x7f78, 0xeb08, 0xdb71, 0x1, 0x1);
        gbc.writeMem(0x3ca9, { 0xff });
        gbc.writeMem(0xcf3d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xcf3d, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xcf3d));
        EXPECT(0x3c, gbc.readMem(0xcf3e));
        // FF 0219
        gbc.setState(0x196d, 0xaaa6, 0x8c40, 0x67f9, 0x6427, 0x6fe9, 0x0, 0x0);
        gbc.writeMem(0x196d, { 0xff });
        gbc.writeMem(0xaaa4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xaaa4, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xaaa4));
        EXPECT(0x19, gbc.readMem(0xaaa5));
        // FF 021A
        gbc.setState(0x9e64, 0xf6db, 0xf3f0, 0x7026, 0x6c71, 0x9fe4, 0x1, 0x0);
        gbc.writeMem(0x9e64, { 0xff });
        gbc.writeMem(0xf6d9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xf6d9, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x9e64));
        EXPECT(0x65, gbc.readMem(0xf6d9));
        EXPECT(0x9e, gbc.readMem(0xf6da));
        // FF 021C
        gbc.setState(0xd6f3, 0xacbb, 0x3670, 0x4ad5, 0x3ef5, 0x6bb1, 0x0, 0x1);
        gbc.writeMem(0xacb9, { 0x0, 0x0 });
        gbc.writeMem(0xd6f3, { 0xff });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xacb9, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xacb9));
        EXPECT(0xd6, gbc.readMem(0xacba));
        EXPECT(0xff, gbc.readMem(0xd6f3));
        // FF 021D
        gbc.setState(0x327c, 0xcab4, 0x7f10, 0xa87f, 0xf039, 0xeb77, 0x1, 0x0);
        gbc.writeMem(0x327c, { 0xff });
        gbc.writeMem(0xcab2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xcab2, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xcab2));
        EXPECT(0x32, gbc.readMem(0xcab3));
        // FF 021E
        gbc.setState(0x1d5, 0x90cb, 0x5770, 0x98a7, 0x2166, 0xc9a5, 0x1, 0x1);
        gbc.writeMem(0x1d5, { 0xff });
        gbc.writeMem(0x90c9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x90c9, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x90c9));
        EXPECT(0x1, gbc.readMem(0x90ca));
        // FF 0220
        gbc.setState(0xc3bf, 0xb9fd, 0xec80, 0xd5c2, 0x1a77, 0x8921, 0x0, 0x1);
        gbc.writeMem(0xb9fb, { 0x0, 0x0 });
        gbc.writeMem(0xc3bf, { 0xff });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xb9fb, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xb9fb));
        EXPECT(0xc3, gbc.readMem(0xb9fc));
        EXPECT(0xff, gbc.readMem(0xc3bf));
        // FF 0221
        gbc.setState(0xdbed, 0x96ac, 0x4800, 0x5165, 0x4fc, 0x6205, 0x0, 0x0);
        gbc.writeMem(0x96aa, { 0x0, 0x0 });
        gbc.writeMem(0xdbed, { 0xff });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x96aa, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0x96aa));
        EXPECT(0xdb, gbc.readMem(0x96ab));
        EXPECT(0xff, gbc.readMem(0xdbed));
        // FF 0222
        gbc.setState(0x529d, 0xb9b2, 0xca80, 0x5685, 0x4c20, 0xab5c, 0x1, 0x0);
        gbc.writeMem(0x529d, { 0xff });
        gbc.writeMem(0xb9b0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xb9b0, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xb9b0));
        EXPECT(0x52, gbc.readMem(0xb9b1));
        // FF 0225
        gbc.setState(0xe805, 0x9fbf, 0xec40, 0xbf93, 0x491c, 0x4d58, 0x1, 0x0);
        gbc.writeMem(0x9fbd, { 0x0, 0x0 });
        gbc.writeMem(0xe805, { 0xff });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x9fbd, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x9fbd));
        EXPECT(0xe8, gbc.readMem(0x9fbe));
        EXPECT(0xff, gbc.readMem(0xe805));
        // FF 0227
        gbc.setState(0x3742, 0xa135, 0x62b0, 0xa994, 0x97a5, 0xffd2, 0x1, 0x1);
        gbc.writeMem(0x3742, { 0xff });
        gbc.writeMem(0xa133, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa133, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa133));
        EXPECT(0x37, gbc.readMem(0xa134));
        // FF 0228
        gbc.setState(0x3581, 0xe9b1, 0x69a0, 0x9ad, 0xe36b, 0xdf53, 0x1, 0x0);
        gbc.writeMem(0x3581, { 0xff });
        gbc.writeMem(0xe9af, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xe9af, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xe9af));
        EXPECT(0x35, gbc.readMem(0xe9b0));
        // FF 022A
        gbc.setState(0x445a, 0xa898, 0x3d50, 0xb928, 0xffa3, 0x88aa, 0x0, 0x0);
        gbc.writeMem(0x445a, { 0xff });
        gbc.writeMem(0xa896, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xa896, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xa896));
        EXPECT(0x44, gbc.readMem(0xa897));
        // FF 022E
        gbc.setState(0x8bc9, 0x8f55, 0xb280, 0x8717, 0xe953, 0xfa8d, 0x0, 0x1);
        gbc.writeMem(0x8bc9, { 0xff });
        gbc.writeMem(0x8f53, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x8f53, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x8bc9));
        EXPECT(0xca, gbc.readMem(0x8f53));
        EXPECT(0x8b, gbc.readMem(0x8f54));
        // FF 0233
        gbc.setState(0xbf6e, 0xac21, 0xaa20, 0x8576, 0x9b0a, 0x6c54, 0x1, 0x1);
        gbc.writeMem(0xac1f, { 0x0, 0x0 });
        gbc.writeMem(0xbf6e, { 0xff });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xac1f, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xac1f));
        EXPECT(0xbf, gbc.readMem(0xac20));
        EXPECT(0xff, gbc.readMem(0xbf6e));
        // FF 0234
        gbc.setState(0x44b3, 0x8b24, 0x3ba0, 0x9fea, 0x7f64, 0xaf22, 0x0, 0x1);
        gbc.writeMem(0x44b3, { 0xff });
        gbc.writeMem(0x8b22, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x8b22, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0x8b22));
        EXPECT(0x44, gbc.readMem(0x8b23));
        // FF 0235
        gbc.setState(0x86c5, 0xe7d8, 0xa7d0, 0x933, 0xdc1a, 0xfd07, 0x0, 0x1);
        gbc.writeMem(0x86c5, { 0xff });
        gbc.writeMem(0xe7d6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xe7d6, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x86c5));
        EXPECT(0xc6, gbc.readMem(0xe7d6));
        EXPECT(0x86, gbc.readMem(0xe7d7));
        // FF 0236
        gbc.setState(0x46b9, 0xe858, 0x4040, 0x7fe4, 0xcf87, 0x1b47, 0x1, 0x1);
        gbc.writeMem(0x46b9, { 0xff });
        gbc.writeMem(0xe856, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe856, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xe856));
        EXPECT(0x46, gbc.readMem(0xe857));
        // FF 0237
        gbc.setState(0x8fa6, 0xfbf9, 0xe70, 0xcd43, 0x64af, 0x8d3b, 0x1, 0x0);
        gbc.writeMem(0x8fa6, { 0xff });
        gbc.writeMem(0xfbf7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xfbf7, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x8fa6));
        EXPECT(0xa7, gbc.readMem(0xfbf7));
        EXPECT(0x8f, gbc.readMem(0xfbf8));
        // FF 023C
        gbc.setState(0x544c, 0x8fe2, 0x2bc0, 0xc2ff, 0xa2ee, 0xc4dd, 0x0, 0x1);
        gbc.writeMem(0x544c, { 0xff });
        gbc.writeMem(0x8fe0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8fe0, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x8fe0));
        EXPECT(0x54, gbc.readMem(0x8fe1));
        // FF 0240
        gbc.setState(0x12f9, 0xfe69, 0xa6f0, 0x9676, 0xaae3, 0x6188, 0x0, 0x1);
        gbc.writeMem(0x12f9, { 0xff });
        gbc.writeMem(0xfe67, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xfe67, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xfe67));
        EXPECT(0x12, gbc.readMem(0xfe68));
        // FF 0241
        gbc.setState(0x8b75, 0xeaaf, 0xb6b0, 0xf1cf, 0x96fe, 0x5361, 0x0, 0x1);
        gbc.writeMem(0x8b75, { 0xff });
        gbc.writeMem(0xeaad, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xeaad, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x8b75));
        EXPECT(0x76, gbc.readMem(0xeaad));
        EXPECT(0x8b, gbc.readMem(0xeaae));
        // FF 0248
        gbc.setState(0x1eea, 0xbfdd, 0x2f00, 0x916b, 0x6a8b, 0x5998, 0x1, 0x1);
        gbc.writeMem(0x1eea, { 0xff });
        gbc.writeMem(0xbfdb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xbfdb, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xbfdb));
        EXPECT(0x1e, gbc.readMem(0xbfdc));
        // FF 024B
        gbc.setState(0x55a0, 0xfbbd, 0x65f0, 0xbcd7, 0x9fcc, 0x9c19, 0x0, 0x0);
        gbc.writeMem(0x55a0, { 0xff });
        gbc.writeMem(0xfbbb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xfbbb, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xfbbb));
        EXPECT(0x55, gbc.readMem(0xfbbc));
        // FF 024D
        gbc.setState(0x5208, 0xc78f, 0x97e0, 0x74e2, 0x959c, 0x3fa7, 0x1, 0x0);
        gbc.writeMem(0x5208, { 0xff });
        gbc.writeMem(0xc78d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xc78d, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xc78d));
        EXPECT(0x52, gbc.readMem(0xc78e));
        // FF 024E
        gbc.setState(0xa2b, 0xa0a3, 0x13d0, 0x4132, 0xac58, 0x2b4d, 0x1, 0x1);
        gbc.writeMem(0xa2b, { 0xff });
        gbc.writeMem(0xa0a1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xa0a1, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xa0a1));
        EXPECT(0xa, gbc.readMem(0xa0a2));
        // FF 024F
        gbc.setState(0x830c, 0xc9b0, 0xe320, 0x4a9b, 0xb8f8, 0x95c0, 0x1, 0x1);
        gbc.writeMem(0x830c, { 0xff });
        gbc.writeMem(0xc9ae, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xc9ae, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x830c));
        EXPECT(0xd, gbc.readMem(0xc9ae));
        EXPECT(0x83, gbc.readMem(0xc9af));
        // FF 0252
        gbc.setState(0xd753, 0xb3eb, 0xc3f0, 0x1273, 0x26a, 0xed54, 0x0, 0x0);
        gbc.writeMem(0xb3e9, { 0x0, 0x0 });
        gbc.writeMem(0xd753, { 0xff });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xb3e9, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0xb3e9));
        EXPECT(0xd7, gbc.readMem(0xb3ea));
        EXPECT(0xff, gbc.readMem(0xd753));
        // FF 0253
        gbc.setState(0x283, 0xcc73, 0xb5f0, 0xdf01, 0xba64, 0xcdbe, 0x1, 0x1);
        gbc.writeMem(0x283, { 0xff });
        gbc.writeMem(0xcc71, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xcc71, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xcc71));
        EXPECT(0x2, gbc.readMem(0xcc72));
        // FF 0256
        gbc.setState(0xb7e7, 0x9457, 0x3640, 0x4847, 0xc0cf, 0xd782, 0x1, 0x1);
        gbc.writeMem(0x9455, { 0x0, 0x0 });
        gbc.writeMem(0xb7e7, { 0xff });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x9455, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0x9455));
        EXPECT(0xb7, gbc.readMem(0x9456));
        EXPECT(0xff, gbc.readMem(0xb7e7));
        // FF 025C
        gbc.setState(0xdc6f, 0xc707, 0x5060, 0xd209, 0xa072, 0x8149, 0x0, 0x1);
        gbc.writeMem(0xc705, { 0x0, 0x0 });
        gbc.writeMem(0xdc6f, { 0xff });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xc705, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xc705));
        EXPECT(0xdc, gbc.readMem(0xc706));
        EXPECT(0xff, gbc.readMem(0xdc6f));
        // FF 025D
        gbc.setState(0x1f7f, 0xdeda, 0x14c0, 0x7da4, 0xba3e, 0x5ecb, 0x1, 0x0);
        gbc.writeMem(0x1f7f, { 0xff });
        gbc.writeMem(0xded8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xded8, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xded8));
        EXPECT(0x1f, gbc.readMem(0xded9));
        // FF 025F
        gbc.setState(0x1cd8, 0xf0c8, 0xda0, 0xca04, 0x86a7, 0xb9e6, 0x0, 0x0);
        gbc.writeMem(0x1cd8, { 0xff });
        gbc.writeMem(0xf0c6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xf0c6, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xf0c6));
        EXPECT(0x1c, gbc.readMem(0xf0c7));
        // FF 0263
        gbc.setState(0x4e7d, 0xe5e8, 0xc8a0, 0x63f0, 0x6158, 0x27f0, 0x0, 0x0);
        gbc.writeMem(0x4e7d, { 0xff });
        gbc.writeMem(0xe5e6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe5e6, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xe5e6));
        EXPECT(0x4e, gbc.readMem(0xe5e7));
        // FF 0267
        gbc.setState(0x9aff, 0xe77e, 0x9e30, 0xfbb4, 0xcf09, 0xed4e, 0x0, 0x0);
        gbc.writeMem(0x9aff, { 0xff });
        gbc.writeMem(0xe77c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe77c, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x9aff));
        EXPECT(0x0, gbc.readMem(0xe77c));
        EXPECT(0x9b, gbc.readMem(0xe77d));
        // FF 0269
        gbc.setState(0xc302, 0xf5d4, 0x21d0, 0xb877, 0xd081, 0xa342, 0x1, 0x1);
        gbc.writeMem(0xc302, { 0xff });
        gbc.writeMem(0xf5d2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf5d2, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xc302));
        EXPECT(0x3, gbc.readMem(0xf5d2));
        EXPECT(0xc3, gbc.readMem(0xf5d3));
        // FF 026A
        gbc.setState(0xb981, 0x93d3, 0x62c0, 0xe823, 0x4197, 0xfdb7, 0x0, 0x1);
        gbc.writeMem(0x93d1, { 0x0, 0x0 });
        gbc.writeMem(0xb981, { 0xff });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x93d1, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x93d1));
        EXPECT(0xb9, gbc.readMem(0x93d2));
        EXPECT(0xff, gbc.readMem(0xb981));
        // FF 0271
        gbc.setState(0x410, 0xbfef, 0x7090, 0xd939, 0xddcd, 0x5b59, 0x1, 0x0);
        gbc.writeMem(0x410, { 0xff });
        gbc.writeMem(0xbfed, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xbfed, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xbfed));
        EXPECT(0x4, gbc.readMem(0xbfee));
        // FF 0273
        gbc.setState(0x6d72, 0x9dd3, 0x3a10, 0x1acf, 0x467e, 0xa4b7, 0x1, 0x1);
        gbc.writeMem(0x6d72, { 0xff });
        gbc.writeMem(0x9dd1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x9dd1, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x9dd1));
        EXPECT(0x6d, gbc.readMem(0x9dd2));
        // FF 0274
        gbc.setState(0x9b83, 0xda4d, 0xca30, 0x4abd, 0x8192, 0x7606, 0x1, 0x1);
        gbc.writeMem(0x9b83, { 0xff });
        gbc.writeMem(0xda4b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xda4b, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x9b83));
        EXPECT(0x84, gbc.readMem(0xda4b));
        EXPECT(0x9b, gbc.readMem(0xda4c));
        // FF 0275
        gbc.setState(0xc305, 0xa7d0, 0x8490, 0x85a3, 0xe372, 0xfec0, 0x0, 0x1);
        gbc.writeMem(0xa7ce, { 0x0, 0x0 });
        gbc.writeMem(0xc305, { 0xff });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa7ce, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa7ce));
        EXPECT(0xc3, gbc.readMem(0xa7cf));
        EXPECT(0xff, gbc.readMem(0xc305));
        // FF 0276
        gbc.setState(0x9be0, 0xc8ee, 0xd130, 0x3ec2, 0x8201, 0xd4db, 0x0, 0x0);
        gbc.writeMem(0x9be0, { 0xff });
        gbc.writeMem(0xc8ec, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xc8ec, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x9be0));
        EXPECT(0xe1, gbc.readMem(0xc8ec));
        EXPECT(0x9b, gbc.readMem(0xc8ed));
        // FF 027B
        gbc.setState(0x1ebd, 0xa1dd, 0x2360, 0x9c4c, 0x9681, 0x10bf, 0x1, 0x1);
        gbc.writeMem(0x1ebd, { 0xff });
        gbc.writeMem(0xa1db, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xa1db, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xa1db));
        EXPECT(0x1e, gbc.readMem(0xa1dc));
        // FF 027C
        gbc.setState(0x5eed, 0x9d35, 0xd9a0, 0x84ab, 0xc66a, 0x72a4, 0x0, 0x0);
        gbc.writeMem(0x5eed, { 0xff });
        gbc.writeMem(0x9d33, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x9d33, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0x9d33));
        EXPECT(0x5e, gbc.readMem(0x9d34));
        // FF 027D
        gbc.setState(0x19ce, 0xab3f, 0xc1c0, 0xfb89, 0x374f, 0xc275, 0x0, 0x0);
        gbc.writeMem(0x19ce, { 0xff });
        gbc.writeMem(0xab3d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xab3d, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xab3d));
        EXPECT(0x19, gbc.readMem(0xab3e));
        // FF 027E
        gbc.setState(0x82d3, 0xf822, 0xea10, 0x55c9, 0x87ac, 0x281d, 0x0, 0x1);
        gbc.writeMem(0x82d3, { 0xff });
        gbc.writeMem(0xf820, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf820, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x82d3));
        EXPECT(0xd4, gbc.readMem(0xf820));
        EXPECT(0x82, gbc.readMem(0xf821));
        // FF 027F
        gbc.setState(0x30eb, 0xe189, 0x93c0, 0x7c84, 0xc50d, 0x4c71, 0x0, 0x1);
        gbc.writeMem(0x30eb, { 0xff });
        gbc.writeMem(0xe187, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xe187, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xe187));
        EXPECT(0x30, gbc.readMem(0xe188));
        // FF 0280
        gbc.setState(0xae30, 0xf5c3, 0x76e0, 0x77f7, 0xbbcb, 0x4e21, 0x1, 0x0);
        gbc.writeMem(0xae30, { 0xff });
        gbc.writeMem(0xf5c1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xf5c1, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xae30));
        EXPECT(0x31, gbc.readMem(0xf5c1));
        EXPECT(0xae, gbc.readMem(0xf5c2));
        // FF 0281
        gbc.setState(0xa929, 0xf8e9, 0x9fb0, 0x825f, 0xb7b1, 0x7bba, 0x0, 0x0);
        gbc.writeMem(0xa929, { 0xff });
        gbc.writeMem(0xf8e7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xf8e7, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xa929));
        EXPECT(0x2a, gbc.readMem(0xf8e7));
        EXPECT(0xa9, gbc.readMem(0xf8e8));
        // FF 0284
        gbc.setState(0x63f8, 0x9167, 0xc240, 0x37f6, 0x4610, 0xe7f1, 0x1, 0x0);
        gbc.writeMem(0x63f8, { 0xff });
        gbc.writeMem(0x9165, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x9165, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0x9165));
        EXPECT(0x63, gbc.readMem(0x9166));
        // FF 0285
        gbc.setState(0xe080, 0xcdf8, 0xf830, 0x3f65, 0xfe6b, 0xf872, 0x1, 0x1);
        gbc.writeMem(0xcdf6, { 0x0, 0x0 });
        gbc.writeMem(0xe080, { 0xff });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xcdf6, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xcdf6));
        EXPECT(0xe0, gbc.readMem(0xcdf7));
        EXPECT(0xff, gbc.readMem(0xe080));
        // FF 0286
        gbc.setState(0x2833, 0x9ad6, 0xd0f0, 0x3636, 0x4f7e, 0xbb46, 0x0, 0x0);
        gbc.writeMem(0x2833, { 0xff });
        gbc.writeMem(0x9ad4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x9ad4, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x9ad4));
        EXPECT(0x28, gbc.readMem(0x9ad5));
        // FF 0288
        gbc.setState(0x9b36, 0x9a19, 0x56d0, 0x54d2, 0xdb76, 0xc7d2, 0x1, 0x0);
        gbc.writeMem(0x9a17, { 0x0, 0x0 });
        gbc.writeMem(0x9b36, { 0xff });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x9a17, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9a17));
        EXPECT(0x9b, gbc.readMem(0x9a18));
        EXPECT(0xff, gbc.readMem(0x9b36));
        // FF 0289
        gbc.setState(0x825d, 0xd402, 0xe670, 0xbfe3, 0xd4a, 0x59ba, 0x0, 0x1);
        gbc.writeMem(0x825d, { 0xff });
        gbc.writeMem(0xd400, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xd400, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x825d));
        EXPECT(0x5e, gbc.readMem(0xd400));
        EXPECT(0x82, gbc.readMem(0xd401));
        // FF 028A
        gbc.setState(0x6611, 0xb5cf, 0xaff0, 0xe6f8, 0xc886, 0xf948, 0x1, 0x0);
        gbc.writeMem(0x6611, { 0xff });
        gbc.writeMem(0xb5cd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xb5cd, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xb5cd));
        EXPECT(0x66, gbc.readMem(0xb5ce));
        // FF 028B
        gbc.setState(0x65a0, 0xe87b, 0xa9d0, 0x375f, 0xfb1, 0x85af, 0x0, 0x0);
        gbc.writeMem(0x65a0, { 0xff });
        gbc.writeMem(0xe879, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xe879, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xe879));
        EXPECT(0x65, gbc.readMem(0xe87a));
        // FF 028E
        gbc.setState(0xe4a9, 0xcd15, 0x6bc0, 0xa17d, 0xf646, 0x2bc6, 0x0, 0x1);
        gbc.writeMem(0xcd13, { 0x0, 0x0 });
        gbc.writeMem(0xe4a9, { 0xff });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xcd13, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xcd13));
        EXPECT(0xe4, gbc.readMem(0xcd14));
        EXPECT(0xff, gbc.readMem(0xe4a9));
        // FF 028F
        gbc.setState(0x1ae0, 0xd37e, 0x10f0, 0xfd71, 0x56, 0x166b, 0x1, 0x1);
        gbc.writeMem(0x1ae0, { 0xff });
        gbc.writeMem(0xd37c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xd37c, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xd37c));
        EXPECT(0x1a, gbc.readMem(0xd37d));
        // FF 0291
        gbc.setState(0xa5af, 0x868b, 0xea50, 0xdf38, 0xe09f, 0x3e9b, 0x1, 0x0);
        gbc.writeMem(0x8689, { 0x0, 0x0 });
        gbc.writeMem(0xa5af, { 0xff });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x8689, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x8689));
        EXPECT(0xa5, gbc.readMem(0x868a));
        EXPECT(0xff, gbc.readMem(0xa5af));
        // FF 0294
        gbc.setState(0x6983, 0xbd30, 0xe690, 0x69ec, 0xa126, 0x6a51, 0x0, 0x0);
        gbc.writeMem(0x6983, { 0xff });
        gbc.writeMem(0xbd2e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xbd2e, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xbd2e));
        EXPECT(0x69, gbc.readMem(0xbd2f));
        // FF 0296
        gbc.setState(0xb254, 0xccab, 0x7cb0, 0x47ca, 0x575d, 0x1981, 0x1, 0x0);
        gbc.writeMem(0xb254, { 0xff });
        gbc.writeMem(0xcca9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xcca9, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xb254));
        EXPECT(0x55, gbc.readMem(0xcca9));
        EXPECT(0xb2, gbc.readMem(0xccaa));
        // FF 0298
        gbc.setState(0x480f, 0xe94a, 0xb7b0, 0xfdeb, 0x5596, 0x8055, 0x0, 0x0);
        gbc.writeMem(0x480f, { 0xff });
        gbc.writeMem(0xe948, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xe948, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xe948));
        EXPECT(0x48, gbc.readMem(0xe949));
        // FF 029B
        gbc.setState(0x39cf, 0xbcbc, 0x4e10, 0xc335, 0x736f, 0xdbd4, 0x0, 0x0);
        gbc.writeMem(0x39cf, { 0xff });
        gbc.writeMem(0xbcba, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xbcba, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xbcba));
        EXPECT(0x39, gbc.readMem(0xbcbb));
        // FF 029D
        gbc.setState(0x94d4, 0xdcbf, 0xb9b0, 0xc130, 0x3336, 0xf182, 0x0, 0x1);
        gbc.writeMem(0x94d4, { 0xff });
        gbc.writeMem(0xdcbd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xdcbd, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x94d4));
        EXPECT(0xd5, gbc.readMem(0xdcbd));
        EXPECT(0x94, gbc.readMem(0xdcbe));
        // FF 02A3
        gbc.setState(0x653b, 0x95b1, 0xe290, 0x2940, 0x608d, 0x3600, 0x0, 0x1);
        gbc.writeMem(0x653b, { 0xff });
        gbc.writeMem(0x95af, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x95af, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x95af));
        EXPECT(0x65, gbc.readMem(0x95b0));
        // FF 02A5
        gbc.setState(0x3a18, 0xed9e, 0x8c10, 0xdb1, 0x55e3, 0x65af, 0x1, 0x1);
        gbc.writeMem(0x3a18, { 0xff });
        gbc.writeMem(0xed9c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xed9c, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xed9c));
        EXPECT(0x3a, gbc.readMem(0xed9d));
        // FF 02A7
        gbc.setState(0x60b7, 0xf5f1, 0x2630, 0xc0a4, 0x1a61, 0xf2f9, 0x0, 0x0);
        gbc.writeMem(0x60b7, { 0xff });
        gbc.writeMem(0xf5ef, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xf5ef, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xf5ef));
        EXPECT(0x60, gbc.readMem(0xf5f0));
        // FF 02A9
        gbc.setState(0xcf72, 0xab65, 0xd7c0, 0x4d97, 0xf86c, 0xc89d, 0x1, 0x1);
        gbc.writeMem(0xab63, { 0x0, 0x0 });
        gbc.writeMem(0xcf72, { 0xff });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xab63, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xab63));
        EXPECT(0xcf, gbc.readMem(0xab64));
        EXPECT(0xff, gbc.readMem(0xcf72));
        // FF 02AA
        gbc.setState(0xbb22, 0xee3a, 0x5230, 0x9428, 0xe1b, 0x24ba, 0x1, 0x1);
        gbc.writeMem(0xbb22, { 0xff });
        gbc.writeMem(0xee38, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xee38, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xbb22));
        EXPECT(0x23, gbc.readMem(0xee38));
        EXPECT(0xbb, gbc.readMem(0xee39));
        // FF 02AD
        gbc.setState(0x2b31, 0x8e9e, 0xb6c0, 0x442e, 0x8044, 0xb380, 0x1, 0x1);
        gbc.writeMem(0x2b31, { 0xff });
        gbc.writeMem(0x8e9c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x8e9c, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x8e9c));
        EXPECT(0x2b, gbc.readMem(0x8e9d));
        // FF 02AE
        gbc.setState(0x704d, 0xd37c, 0xac50, 0x455f, 0x9c6, 0x15e7, 0x1, 0x0);
        gbc.writeMem(0x704d, { 0xff });
        gbc.writeMem(0xd37a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd37a, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xd37a));
        EXPECT(0x70, gbc.readMem(0xd37b));
        // FF 02B0
        gbc.setState(0xc27e, 0xbade, 0xf780, 0x3019, 0xa9e9, 0xed08, 0x1, 0x0);
        gbc.writeMem(0xbadc, { 0x0, 0x0 });
        gbc.writeMem(0xc27e, { 0xff });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xbadc, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xbadc));
        EXPECT(0xc2, gbc.readMem(0xbadd));
        EXPECT(0xff, gbc.readMem(0xc27e));
        // FF 02B3
        gbc.setState(0x86d6, 0xac3e, 0xe560, 0x842d, 0xe939, 0x2f2, 0x0, 0x0);
        gbc.writeMem(0x86d6, { 0xff });
        gbc.writeMem(0xac3c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xac3c, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x86d6));
        EXPECT(0xd7, gbc.readMem(0xac3c));
        EXPECT(0x86, gbc.readMem(0xac3d));
        // FF 02B4
        gbc.setState(0x52ff, 0xcff6, 0xbab0, 0xbd01, 0x2f26, 0x3b2a, 0x0, 0x1);
        gbc.writeMem(0x52ff, { 0xff });
        gbc.writeMem(0xcff4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xcff4, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xcff4));
        EXPECT(0x53, gbc.readMem(0xcff5));
        // FF 02B5
        gbc.setState(0x18ec, 0xca18, 0xad40, 0x377c, 0xd41, 0xe98c, 0x1, 0x0);
        gbc.writeMem(0x18ec, { 0xff });
        gbc.writeMem(0xca16, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xca16, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xca16));
        EXPECT(0x18, gbc.readMem(0xca17));
        // FF 02B6
        gbc.setState(0x60af, 0x85e2, 0xb250, 0xfac9, 0x6e3a, 0xe6d5, 0x1, 0x1);
        gbc.writeMem(0x60af, { 0xff });
        gbc.writeMem(0x85e0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x85e0, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x85e0));
        EXPECT(0x60, gbc.readMem(0x85e1));
        // FF 02B8
        gbc.setState(0x72b6, 0xedbe, 0xfcd0, 0xec8b, 0x4e6a, 0xad38, 0x1, 0x1);
        gbc.writeMem(0x72b6, { 0xff });
        gbc.writeMem(0xedbc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xedbc, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xedbc));
        EXPECT(0x72, gbc.readMem(0xedbd));
        // FF 02B9
        gbc.setState(0x3a1f, 0xded9, 0x49a0, 0xd368, 0x940c, 0x26ee, 0x0, 0x1);
        gbc.writeMem(0x3a1f, { 0xff });
        gbc.writeMem(0xded7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xded7, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xded7));
        EXPECT(0x3a, gbc.readMem(0xded8));
        // FF 02BB
        gbc.setState(0x70d8, 0x9fcc, 0x8230, 0x90eb, 0x80da, 0xec3, 0x1, 0x0);
        gbc.writeMem(0x70d8, { 0xff });
        gbc.writeMem(0x9fca, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9fca, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x9fca));
        EXPECT(0x70, gbc.readMem(0x9fcb));
        // FF 02BD
        gbc.setState(0x88e6, 0xbd5b, 0x4df0, 0x8ece, 0x6e65, 0xa84a, 0x1, 0x0);
        gbc.writeMem(0x88e6, { 0xff });
        gbc.writeMem(0xbd59, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xbd59, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x88e6));
        EXPECT(0xe7, gbc.readMem(0xbd59));
        EXPECT(0x88, gbc.readMem(0xbd5a));
        // FF 02BF
        gbc.setState(0x3386, 0xe56d, 0x7f10, 0xa166, 0x4241, 0x77e, 0x1, 0x0);
        gbc.writeMem(0x3386, { 0xff });
        gbc.writeMem(0xe56b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xe56b, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xe56b));
        EXPECT(0x33, gbc.readMem(0xe56c));
        // FF 02C0
        gbc.setState(0xd779, 0xf3b0, 0x1c80, 0xa9fd, 0x9d5c, 0xe3d9, 0x0, 0x0);
        gbc.writeMem(0xd779, { 0xff });
        gbc.writeMem(0xf3ae, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xf3ae, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xd779));
        EXPECT(0x7a, gbc.readMem(0xf3ae));
        EXPECT(0xd7, gbc.readMem(0xf3af));
        // FF 02C5
        gbc.setState(0x8e90, 0xd094, 0x1410, 0x821e, 0xef87, 0x21ca, 0x1, 0x1);
        gbc.writeMem(0x8e90, { 0xff });
        gbc.writeMem(0xd092, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xd092, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x8e90));
        EXPECT(0x91, gbc.readMem(0xd092));
        EXPECT(0x8e, gbc.readMem(0xd093));
        // FF 02C6
        gbc.setState(0x425c, 0x96bf, 0xffd0, 0x6062, 0x25a3, 0x6a19, 0x1, 0x1);
        gbc.writeMem(0x425c, { 0xff });
        gbc.writeMem(0x96bd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x96bd, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x96bd));
        EXPECT(0x42, gbc.readMem(0x96be));
        // FF 02C9
        gbc.setState(0x4efc, 0xf3b8, 0x2370, 0xf356, 0x7969, 0x6abf, 0x1, 0x0);
        gbc.writeMem(0x4efc, { 0xff });
        gbc.writeMem(0xf3b6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xf3b6, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xf3b6));
        EXPECT(0x4e, gbc.readMem(0xf3b7));
        // FF 02CB
        gbc.setState(0xe9ce, 0xac75, 0xd880, 0x69df, 0x9c8b, 0xf49d, 0x0, 0x0);
        gbc.writeMem(0xac73, { 0x0, 0x0 });
        gbc.writeMem(0xe9ce, { 0xff });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xac73, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xac73));
        EXPECT(0xe9, gbc.readMem(0xac74));
        EXPECT(0xff, gbc.readMem(0xe9ce));
        // FF 02CD
        gbc.setState(0x19c, 0xd073, 0x9710, 0xb11, 0x34d8, 0x9ab6, 0x1, 0x0);
        gbc.writeMem(0x19c, { 0xff });
        gbc.writeMem(0xd071, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xd071, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd071));
        EXPECT(0x1, gbc.readMem(0xd072));
        // FF 02D0
        gbc.setState(0x766b, 0x9d89, 0x7e00, 0xfd5a, 0xeb99, 0x613b, 0x0, 0x1);
        gbc.writeMem(0x766b, { 0xff });
        gbc.writeMem(0x9d87, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x9d87, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x9d87));
        EXPECT(0x76, gbc.readMem(0x9d88));
        // FF 02D2
        gbc.setState(0xc5cf, 0x9c11, 0x2780, 0xae29, 0x829b, 0x43cc, 0x0, 0x0);
        gbc.writeMem(0x9c0f, { 0x0, 0x0 });
        gbc.writeMem(0xc5cf, { 0xff });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9c0f, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x9c0f));
        EXPECT(0xc5, gbc.readMem(0x9c10));
        EXPECT(0xff, gbc.readMem(0xc5cf));
        // FF 02D7
        gbc.setState(0xed12, 0xae43, 0xf9c0, 0xd290, 0x4632, 0x4947, 0x0, 0x1);
        gbc.writeMem(0xae41, { 0x0, 0x0 });
        gbc.writeMem(0xed12, { 0xff });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xae41, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xae41));
        EXPECT(0xed, gbc.readMem(0xae42));
        EXPECT(0xff, gbc.readMem(0xed12));
        // FF 02D9
        gbc.setState(0xb6cd, 0x980a, 0x8810, 0xa030, 0x7360, 0xface, 0x0, 0x1);
        gbc.writeMem(0x9808, { 0x0, 0x0 });
        gbc.writeMem(0xb6cd, { 0xff });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9808, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0x9808));
        EXPECT(0xb6, gbc.readMem(0x9809));
        EXPECT(0xff, gbc.readMem(0xb6cd));
        // FF 02DA
        gbc.setState(0x2854, 0xc8bf, 0xaf10, 0xdb7c, 0xee04, 0x57b0, 0x0, 0x0);
        gbc.writeMem(0x2854, { 0xff });
        gbc.writeMem(0xc8bd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xc8bd, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xc8bd));
        EXPECT(0x28, gbc.readMem(0xc8be));
        // FF 02DF
        gbc.setState(0x4e76, 0xe9fd, 0x93e0, 0x8b3e, 0xe093, 0xcad2, 0x0, 0x1);
        gbc.writeMem(0x4e76, { 0xff });
        gbc.writeMem(0xe9fb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xe9fb, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xe9fb));
        EXPECT(0x4e, gbc.readMem(0xe9fc));
        // FF 02E0
        gbc.setState(0x304, 0xba8d, 0xa0c0, 0x3e02, 0xb9c3, 0x3a56, 0x0, 0x0);
        gbc.writeMem(0x304, { 0xff });
        gbc.writeMem(0xba8b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xba8b, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xba8b));
        EXPECT(0x3, gbc.readMem(0xba8c));
        // FF 02E1
        gbc.setState(0xdaa7, 0xab4c, 0xc760, 0x1231, 0xd12b, 0x6149, 0x0, 0x0);
        gbc.writeMem(0xab4a, { 0x0, 0x0 });
        gbc.writeMem(0xdaa7, { 0xff });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xab4a, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0xab4a));
        EXPECT(0xda, gbc.readMem(0xab4b));
        EXPECT(0xff, gbc.readMem(0xdaa7));
        // FF 02E3
        gbc.setState(0xc48e, 0xcdb1, 0x9c90, 0x46b3, 0x4426, 0xff38, 0x0, 0x0);
        gbc.writeMem(0xc48e, { 0xff });
        gbc.writeMem(0xcdaf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xcdaf, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xc48e));
        EXPECT(0x8f, gbc.readMem(0xcdaf));
        EXPECT(0xc4, gbc.readMem(0xcdb0));
        // FF 02E4
        gbc.setState(0x7d5b, 0xc871, 0xc880, 0x6f11, 0x12da, 0xf96b, 0x0, 0x1);
        gbc.writeMem(0x7d5b, { 0xff });
        gbc.writeMem(0xc86f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xc86f, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xc86f));
        EXPECT(0x7d, gbc.readMem(0xc870));
        // FF 02E6
        gbc.setState(0x94f0, 0x8adb, 0x6430, 0x78e0, 0x8671, 0x5966, 0x0, 0x1);
        gbc.writeMem(0x8ad9, { 0x0, 0x0 });
        gbc.writeMem(0x94f0, { 0xff });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8ad9, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8ad9));
        EXPECT(0x94, gbc.readMem(0x8ada));
        EXPECT(0xff, gbc.readMem(0x94f0));
        // FF 02E7
        gbc.setState(0xe2bc, 0xc967, 0x3450, 0x768e, 0x4a14, 0xf62d, 0x0, 0x1);
        gbc.writeMem(0xc965, { 0x0, 0x0 });
        gbc.writeMem(0xe2bc, { 0xff });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xc965, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xc965));
        EXPECT(0xe2, gbc.readMem(0xc966));
        EXPECT(0xff, gbc.readMem(0xe2bc));
        // FF 02E9
        gbc.setState(0x5de2, 0xfd09, 0xd7c0, 0x4b53, 0x7b0c, 0x8947, 0x1, 0x1);
        gbc.writeMem(0x5de2, { 0xff });
        gbc.writeMem(0xfd07, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xfd07, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xfd07));
        EXPECT(0x5d, gbc.readMem(0xfd08));
        // FF 02EB
        gbc.setState(0x4f06, 0xc230, 0xfa80, 0x2cbd, 0xfd34, 0xdfa1, 0x0, 0x1);
        gbc.writeMem(0x4f06, { 0xff });
        gbc.writeMem(0xc22e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xc22e, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xc22e));
        EXPECT(0x4f, gbc.readMem(0xc22f));
        // FF 02EC
        gbc.setState(0x64fc, 0xc57a, 0xe470, 0x41c2, 0xccf3, 0x39eb, 0x1, 0x1);
        gbc.writeMem(0x64fc, { 0xff });
        gbc.writeMem(0xc578, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xc578, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xc578));
        EXPECT(0x64, gbc.readMem(0xc579));
        // FF 02F1
        gbc.setState(0x2843, 0xd649, 0x1ad0, 0xa075, 0x60f6, 0x11cd, 0x1, 0x1);
        gbc.writeMem(0x2843, { 0xff });
        gbc.writeMem(0xd647, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd647, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xd647));
        EXPECT(0x28, gbc.readMem(0xd648));
        // FF 02F2
        gbc.setState(0x8515, 0xf40c, 0x9420, 0x8256, 0x2abd, 0x16ea, 0x1, 0x0);
        gbc.writeMem(0x8515, { 0xff });
        gbc.writeMem(0xf40a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xf40a, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x8515));
        EXPECT(0x16, gbc.readMem(0xf40a));
        EXPECT(0x85, gbc.readMem(0xf40b));
        // FF 02F3
        gbc.setState(0xb7af, 0xfdde, 0xd0f0, 0xdaa2, 0xbe53, 0x196d, 0x0, 0x1);
        gbc.writeMem(0xb7af, { 0xff });
        gbc.writeMem(0xfddc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xfddc, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xb7af));
        EXPECT(0xb0, gbc.readMem(0xfddc));
        EXPECT(0xb7, gbc.readMem(0xfddd));
        // FF 02F6
        gbc.setState(0x942e, 0xf5ac, 0x91b0, 0x8353, 0x1b16, 0x893c, 0x0, 0x1);
        gbc.writeMem(0x942e, { 0xff });
        gbc.writeMem(0xf5aa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf5aa, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x942e));
        EXPECT(0x2f, gbc.readMem(0xf5aa));
        EXPECT(0x94, gbc.readMem(0xf5ab));
        // FF 02F7
        gbc.setState(0xd4b8, 0xa19d, 0xc6d0, 0xd4ac, 0x9ef0, 0x66ef, 0x1, 0x0);
        gbc.writeMem(0xa19b, { 0x0, 0x0 });
        gbc.writeMem(0xd4b8, { 0xff });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xa19b, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xa19b));
        EXPECT(0xd4, gbc.readMem(0xa19c));
        EXPECT(0xff, gbc.readMem(0xd4b8));
        // FF 02F8
        gbc.setState(0x7c76, 0xb31d, 0xca60, 0x3f5b, 0xacae, 0x1606, 0x0, 0x0);
        gbc.writeMem(0x7c76, { 0xff });
        gbc.writeMem(0xb31b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xb31b, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xb31b));
        EXPECT(0x7c, gbc.readMem(0xb31c));
        // FF 02FB
        gbc.setState(0x8a6, 0xc708, 0x4130, 0x9e79, 0xe787, 0x9c8e, 0x0, 0x0);
        gbc.writeMem(0x8a6, { 0xff });
        gbc.writeMem(0xc706, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc706, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc706));
        EXPECT(0x8, gbc.readMem(0xc707));
        // FF 02FE
        gbc.setState(0x729b, 0xa597, 0xf360, 0x21ce, 0x2a2b, 0x2705, 0x1, 0x1);
        gbc.writeMem(0x729b, { 0xff });
        gbc.writeMem(0xa595, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xa595, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xa595));
        EXPECT(0x72, gbc.readMem(0xa596));
        // FF 0301
        gbc.setState(0xc7b, 0xfd5f, 0x8180, 0x57ce, 0x1c52, 0xd4d2, 0x1, 0x1);
        gbc.writeMem(0xc7b, { 0xff });
        gbc.writeMem(0xfd5d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xfd5d, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xfd5d));
        EXPECT(0xc, gbc.readMem(0xfd5e));
        // FF 0302
        gbc.setState(0xebf8, 0x8539, 0x13c0, 0x574e, 0x794f, 0xa1e2, 0x1, 0x1);
        gbc.writeMem(0x8537, { 0x0, 0x0 });
        gbc.writeMem(0xebf8, { 0xff });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8537, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0x8537));
        EXPECT(0xeb, gbc.readMem(0x8538));
        EXPECT(0xff, gbc.readMem(0xebf8));
        // FF 0303
        gbc.setState(0x10b7, 0xb0e4, 0xa790, 0x551c, 0x3057, 0x960a, 0x1, 0x1);
        gbc.writeMem(0x10b7, { 0xff });
        gbc.writeMem(0xb0e2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xb0e2, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xb0e2));
        EXPECT(0x10, gbc.readMem(0xb0e3));
        // FF 0304
        gbc.setState(0xc191, 0xa926, 0xb30, 0x12bd, 0x9066, 0xf45f, 0x1, 0x0);
        gbc.writeMem(0xa924, { 0x0, 0x0 });
        gbc.writeMem(0xc191, { 0xff });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa924, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa924));
        EXPECT(0xc1, gbc.readMem(0xa925));
        EXPECT(0xff, gbc.readMem(0xc191));
        // FF 0305
        gbc.setState(0x3a28, 0x8ff1, 0xc90, 0x3405, 0x6033, 0xa9e2, 0x0, 0x1);
        gbc.writeMem(0x3a28, { 0xff });
        gbc.writeMem(0x8fef, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8fef, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x8fef));
        EXPECT(0x3a, gbc.readMem(0x8ff0));
        // FF 0306
        gbc.setState(0xcaa2, 0xfa91, 0x90b0, 0xb5de, 0xea44, 0xdc19, 0x1, 0x1);
        gbc.writeMem(0xcaa2, { 0xff });
        gbc.writeMem(0xfa8f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xfa8f, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xcaa2));
        EXPECT(0xa3, gbc.readMem(0xfa8f));
        EXPECT(0xca, gbc.readMem(0xfa90));
        // FF 0309
        gbc.setState(0x824f, 0xb2c8, 0x6260, 0xdc5b, 0xdd6, 0xd551, 0x0, 0x1);
        gbc.writeMem(0x824f, { 0xff });
        gbc.writeMem(0xb2c6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xb2c6, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x824f));
        EXPECT(0x50, gbc.readMem(0xb2c6));
        EXPECT(0x82, gbc.readMem(0xb2c7));
        // FF 030A
        gbc.setState(0x8d7, 0x8974, 0xeb10, 0xa2ca, 0xc184, 0x546d, 0x1, 0x0);
        gbc.writeMem(0x8d7, { 0xff });
        gbc.writeMem(0x8972, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x8972, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0x8972));
        EXPECT(0x8, gbc.readMem(0x8973));
        // FF 030B
        gbc.setState(0x712f, 0xbe47, 0xb4e0, 0xbf46, 0xaf6a, 0xeb21, 0x0, 0x1);
        gbc.writeMem(0x712f, { 0xff });
        gbc.writeMem(0xbe45, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xbe45, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xbe45));
        EXPECT(0x71, gbc.readMem(0xbe46));
        // FF 030D
        gbc.setState(0x8273, 0xfd8d, 0x65a0, 0x5852, 0xc005, 0x80b3, 0x1, 0x0);
        gbc.writeMem(0x8273, { 0xff });
        gbc.writeMem(0xfd8b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xfd8b, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x8273));
        EXPECT(0x74, gbc.readMem(0xfd8b));
        EXPECT(0x82, gbc.readMem(0xfd8c));
        // FF 0311
        gbc.setState(0x4560, 0xc502, 0x6330, 0xb5bc, 0x6461, 0xd440, 0x1, 0x1);
        gbc.writeMem(0x4560, { 0xff });
        gbc.writeMem(0xc500, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc500, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc500));
        EXPECT(0x45, gbc.readMem(0xc501));
        // FF 0313
        gbc.setState(0xabf8, 0xb939, 0xeed0, 0x2dbd, 0x4d33, 0x5894, 0x1, 0x0);
        gbc.writeMem(0xabf8, { 0xff });
        gbc.writeMem(0xb937, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xb937, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xabf8));
        EXPECT(0xf9, gbc.readMem(0xb937));
        EXPECT(0xab, gbc.readMem(0xb938));
        // FF 0317
        gbc.setState(0x33d4, 0x9cd1, 0xc8a0, 0x249d, 0x2579, 0xb9c9, 0x1, 0x0);
        gbc.writeMem(0x33d4, { 0xff });
        gbc.writeMem(0x9ccf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x9ccf, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x9ccf));
        EXPECT(0x33, gbc.readMem(0x9cd0));
        // FF 031A
        gbc.setState(0xa65b, 0xca63, 0xe700, 0x51de, 0xd9d6, 0xc550, 0x1, 0x0);
        gbc.writeMem(0xa65b, { 0xff });
        gbc.writeMem(0xca61, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xca61, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xa65b));
        EXPECT(0x5c, gbc.readMem(0xca61));
        EXPECT(0xa6, gbc.readMem(0xca62));
        // FF 031B
        gbc.setState(0xdb0, 0xb190, 0x67a0, 0xbef0, 0xe720, 0x2816, 0x1, 0x0);
        gbc.writeMem(0xdb0, { 0xff });
        gbc.writeMem(0xb18e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xb18e, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xb18e));
        EXPECT(0xd, gbc.readMem(0xb18f));
        // FF 031D
        gbc.setState(0xc185, 0xbea5, 0x5f50, 0x32e2, 0x4f17, 0x55f2, 0x0, 0x0);
        gbc.writeMem(0xbea3, { 0x0, 0x0 });
        gbc.writeMem(0xc185, { 0xff });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xbea3, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xbea3));
        EXPECT(0xc1, gbc.readMem(0xbea4));
        EXPECT(0xff, gbc.readMem(0xc185));
        // FF 0320
        gbc.setState(0xcb77, 0xe627, 0x7f10, 0xd96, 0xdc3, 0x45d7, 0x0, 0x0);
        gbc.writeMem(0xcb77, { 0xff });
        gbc.writeMem(0xe625, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xe625, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xcb77));
        EXPECT(0x78, gbc.readMem(0xe625));
        EXPECT(0xcb, gbc.readMem(0xe626));
        // FF 0323
        gbc.setState(0xb3fd, 0xe9f4, 0xde50, 0xd073, 0x3a09, 0x9b5d, 0x1, 0x0);
        gbc.writeMem(0xb3fd, { 0xff });
        gbc.writeMem(0xe9f2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xe9f2, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xb3fd));
        EXPECT(0xfe, gbc.readMem(0xe9f2));
        EXPECT(0xb3, gbc.readMem(0xe9f3));
        // FF 0329
        gbc.setState(0x67a4, 0xaefd, 0xe970, 0xb5f2, 0x5fc1, 0xe214, 0x1, 0x1);
        gbc.writeMem(0x67a4, { 0xff });
        gbc.writeMem(0xaefb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xaefb, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xaefb));
        EXPECT(0x67, gbc.readMem(0xaefc));
        // FF 032C
        gbc.setState(0x78a8, 0xd73f, 0x29b0, 0x1b1e, 0x572f, 0xabc6, 0x1, 0x1);
        gbc.writeMem(0x78a8, { 0xff });
        gbc.writeMem(0xd73d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xd73d, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xd73d));
        EXPECT(0x78, gbc.readMem(0xd73e));
        // FF 032F
        gbc.setState(0x86a8, 0xd791, 0x8600, 0x44e4, 0xf130, 0x233c, 0x1, 0x0);
        gbc.writeMem(0x86a8, { 0xff });
        gbc.writeMem(0xd78f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xd78f, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x86a8));
        EXPECT(0xa9, gbc.readMem(0xd78f));
        EXPECT(0x86, gbc.readMem(0xd790));
        // FF 0330
        gbc.setState(0xb099, 0xd64c, 0x3b80, 0x6d13, 0xcbe, 0x12ad, 0x1, 0x0);
        gbc.writeMem(0xb099, { 0xff });
        gbc.writeMem(0xd64a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd64a, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xb099));
        EXPECT(0x9a, gbc.readMem(0xd64a));
        EXPECT(0xb0, gbc.readMem(0xd64b));
        // FF 0331
        gbc.setState(0x8418, 0x93d6, 0xa90, 0x31e5, 0xcb85, 0x3c9b, 0x1, 0x0);
        gbc.writeMem(0x8418, { 0xff });
        gbc.writeMem(0x93d4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x93d4, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x8418));
        EXPECT(0x19, gbc.readMem(0x93d4));
        EXPECT(0x84, gbc.readMem(0x93d5));
        // FF 0335
        gbc.setState(0x2f4b, 0xfaaf, 0x4530, 0x603, 0xed21, 0xa211, 0x1, 0x0);
        gbc.writeMem(0x2f4b, { 0xff });
        gbc.writeMem(0xfaad, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xfaad, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xfaad));
        EXPECT(0x2f, gbc.readMem(0xfaae));
        // FF 0336
        gbc.setState(0x4ab6, 0xebc5, 0x2130, 0xf3e6, 0x4e84, 0xc106, 0x0, 0x1);
        gbc.writeMem(0x4ab6, { 0xff });
        gbc.writeMem(0xebc3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xebc3, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xebc3));
        EXPECT(0x4a, gbc.readMem(0xebc4));
        // FF 0337
        gbc.setState(0x6d9f, 0xa803, 0x2ca0, 0x829, 0x89b5, 0xd950, 0x0, 0x0);
        gbc.writeMem(0x6d9f, { 0xff });
        gbc.writeMem(0xa801, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa801, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa801));
        EXPECT(0x6d, gbc.readMem(0xa802));
        // FF 0338
        gbc.setState(0xe1b6, 0x821c, 0x9d00, 0x6d10, 0x697f, 0x3dcb, 0x1, 0x1);
        gbc.writeMem(0x821a, { 0x0, 0x0 });
        gbc.writeMem(0xe1b6, { 0xff });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x821a, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x821a));
        EXPECT(0xe1, gbc.readMem(0x821b));
        EXPECT(0xff, gbc.readMem(0xe1b6));
        // FF 0339
        gbc.setState(0x5e35, 0x9b02, 0xa0d0, 0x4716, 0xe0be, 0x33c7, 0x0, 0x1);
        gbc.writeMem(0x5e35, { 0xff });
        gbc.writeMem(0x9b00, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x9b00, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x9b00));
        EXPECT(0x5e, gbc.readMem(0x9b01));
        // FF 033A
        gbc.setState(0x7f79, 0xe612, 0xd950, 0x3dad, 0xd764, 0x25b3, 0x0, 0x0);
        gbc.writeMem(0x7f79, { 0xff });
        gbc.writeMem(0xe610, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe610, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xe610));
        EXPECT(0x7f, gbc.readMem(0xe611));
        // FF 033B
        gbc.setState(0x8542, 0xa075, 0x4580, 0x58e4, 0x6f69, 0xe19c, 0x0, 0x1);
        gbc.writeMem(0x8542, { 0xff });
        gbc.writeMem(0xa073, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xa073, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x8542));
        EXPECT(0x43, gbc.readMem(0xa073));
        EXPECT(0x85, gbc.readMem(0xa074));
        // FF 0341
        gbc.setState(0x87f8, 0xacd7, 0xc250, 0xf0b4, 0x3b38, 0xa32d, 0x0, 0x0);
        gbc.writeMem(0x87f8, { 0xff });
        gbc.writeMem(0xacd5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xacd5, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x87f8));
        EXPECT(0xf9, gbc.readMem(0xacd5));
        EXPECT(0x87, gbc.readMem(0xacd6));
        // FF 0342
        gbc.setState(0x37be, 0xa6ba, 0x5400, 0xaf7c, 0xf106, 0x284f, 0x0, 0x1);
        gbc.writeMem(0x37be, { 0xff });
        gbc.writeMem(0xa6b8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa6b8, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xa6b8));
        EXPECT(0x37, gbc.readMem(0xa6b9));
        // FF 0343
        gbc.setState(0x9831, 0xe9a7, 0x6780, 0xe8a9, 0xaf26, 0x50b1, 0x1, 0x0);
        gbc.writeMem(0x9831, { 0xff });
        gbc.writeMem(0xe9a5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xe9a5, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x9831));
        EXPECT(0x32, gbc.readMem(0xe9a5));
        EXPECT(0x98, gbc.readMem(0xe9a6));
        // FF 0347
        gbc.setState(0x27f8, 0x8d81, 0x7660, 0x7f54, 0x3e2e, 0xb35f, 0x0, 0x0);
        gbc.writeMem(0x27f8, { 0xff });
        gbc.writeMem(0x8d7f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x8d7f, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0x8d7f));
        EXPECT(0x27, gbc.readMem(0x8d80));
        // FF 0348
        gbc.setState(0x527a, 0x9c1f, 0xf170, 0xd4e9, 0x2a81, 0xdd34, 0x0, 0x0);
        gbc.writeMem(0x527a, { 0xff });
        gbc.writeMem(0x9c1d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x9c1d, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9c1d));
        EXPECT(0x52, gbc.readMem(0x9c1e));
        // FF 0349
        gbc.setState(0x8252, 0xaf80, 0x6080, 0x415b, 0x352d, 0x5789, 0x0, 0x0);
        gbc.writeMem(0x8252, { 0xff });
        gbc.writeMem(0xaf7e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xaf7e, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x8252));
        EXPECT(0x53, gbc.readMem(0xaf7e));
        EXPECT(0x82, gbc.readMem(0xaf7f));
        // FF 034A
        gbc.setState(0xc83c, 0xfc48, 0x7860, 0x2dbe, 0xac1b, 0xfb8e, 0x1, 0x1);
        gbc.writeMem(0xc83c, { 0xff });
        gbc.writeMem(0xfc46, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xfc46, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xc83c));
        EXPECT(0x3d, gbc.readMem(0xfc46));
        EXPECT(0xc8, gbc.readMem(0xfc47));
        // FF 034D
        gbc.setState(0xd0f4, 0xeba0, 0xf6d0, 0x5145, 0x387c, 0x4c3a, 0x1, 0x1);
        gbc.writeMem(0xd0f4, { 0xff });
        gbc.writeMem(0xeb9e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xeb9e, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xd0f4));
        EXPECT(0xf5, gbc.readMem(0xeb9e));
        EXPECT(0xd0, gbc.readMem(0xeb9f));
        // FF 034F
        gbc.setState(0xbea, 0x8db5, 0x5aa0, 0x4c43, 0xc13d, 0x8628, 0x0, 0x0);
        gbc.writeMem(0xbea, { 0xff });
        gbc.writeMem(0x8db3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x8db3, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0x8db3));
        EXPECT(0xb, gbc.readMem(0x8db4));
        // FF 0350
        gbc.setState(0x2a01, 0xd128, 0xa4d0, 0xac6, 0xa1c4, 0x9164, 0x1, 0x1);
        gbc.writeMem(0x2a01, { 0xff });
        gbc.writeMem(0xd126, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd126, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xd126));
        EXPECT(0x2a, gbc.readMem(0xd127));
        // FF 0353
        gbc.setState(0x2d20, 0xb020, 0x7a80, 0x5efd, 0xee8b, 0x1bf, 0x1, 0x0);
        gbc.writeMem(0x2d20, { 0xff });
        gbc.writeMem(0xb01e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xb01e, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xb01e));
        EXPECT(0x2d, gbc.readMem(0xb01f));
        // FF 0354
        gbc.setState(0x75c5, 0x9683, 0x7850, 0x2b9b, 0x896a, 0x4a71, 0x1, 0x1);
        gbc.writeMem(0x75c5, { 0xff });
        gbc.writeMem(0x9681, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x9681, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x9681));
        EXPECT(0x75, gbc.readMem(0x9682));
        // FF 0357
        gbc.setState(0xa42b, 0x8a28, 0xf900, 0xba9e, 0xc01d, 0xae2d, 0x0, 0x0);
        gbc.writeMem(0x8a26, { 0x0, 0x0 });
        gbc.writeMem(0xa42b, { 0xff });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x8a26, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x8a26));
        EXPECT(0xa4, gbc.readMem(0x8a27));
        EXPECT(0xff, gbc.readMem(0xa42b));
        // FF 0358
        gbc.setState(0xdb44, 0x8e63, 0xf200, 0xc092, 0x523e, 0xf306, 0x0, 0x1);
        gbc.writeMem(0x8e61, { 0x0, 0x0 });
        gbc.writeMem(0xdb44, { 0xff });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x8e61, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0x8e61));
        EXPECT(0xdb, gbc.readMem(0x8e62));
        EXPECT(0xff, gbc.readMem(0xdb44));
        // FF 0359
        gbc.setState(0x48cf, 0xd517, 0xd330, 0x6bba, 0xc853, 0xf893, 0x0, 0x0);
        gbc.writeMem(0x48cf, { 0xff });
        gbc.writeMem(0xd515, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd515, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xd515));
        EXPECT(0x48, gbc.readMem(0xd516));
        // FF 035A
        gbc.setState(0x84ac, 0x8bfb, 0x1180, 0x24de, 0x8895, 0x5b7f, 0x0, 0x1);
        gbc.writeMem(0x84ac, { 0xff });
        gbc.writeMem(0x8bf9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x8bf9, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x84ac));
        EXPECT(0xad, gbc.readMem(0x8bf9));
        EXPECT(0x84, gbc.readMem(0x8bfa));
        // FF 035D
        gbc.setState(0xe4f2, 0xd65d, 0xec70, 0x4dc8, 0x26ec, 0x3790, 0x0, 0x1);
        gbc.writeMem(0xd65b, { 0x0, 0x0 });
        gbc.writeMem(0xe4f2, { 0xff });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xd65b, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xd65b));
        EXPECT(0xe4, gbc.readMem(0xd65c));
        EXPECT(0xff, gbc.readMem(0xe4f2));
        // FF 035E
        gbc.setState(0x9b9f, 0xc13a, 0xefc0, 0xb308, 0x650e, 0xb2de, 0x0, 0x1);
        gbc.writeMem(0x9b9f, { 0xff });
        gbc.writeMem(0xc138, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc138, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x9b9f));
        EXPECT(0xa0, gbc.readMem(0xc138));
        EXPECT(0x9b, gbc.readMem(0xc139));
        // FF 035F
        gbc.setState(0x9df1, 0x94ed, 0x1d40, 0xb1c7, 0xf63c, 0x62e2, 0x0, 0x0);
        gbc.writeMem(0x94eb, { 0x0, 0x0 });
        gbc.writeMem(0x9df1, { 0xff });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x94eb, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0x94eb));
        EXPECT(0x9d, gbc.readMem(0x94ec));
        EXPECT(0xff, gbc.readMem(0x9df1));
        // FF 0362
        gbc.setState(0x936d, 0xd14a, 0xb660, 0x8297, 0xe299, 0xc6ee, 0x1, 0x0);
        gbc.writeMem(0x936d, { 0xff });
        gbc.writeMem(0xd148, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd148, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x936d));
        EXPECT(0x6e, gbc.readMem(0xd148));
        EXPECT(0x93, gbc.readMem(0xd149));
        // FF 0363
        gbc.setState(0x8266, 0xea38, 0xc4b0, 0x925d, 0x431c, 0xa59f, 0x0, 0x1);
        gbc.writeMem(0x8266, { 0xff });
        gbc.writeMem(0xea36, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xea36, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x8266));
        EXPECT(0x67, gbc.readMem(0xea36));
        EXPECT(0x82, gbc.readMem(0xea37));
        // FF 0367
        gbc.setState(0xa9d0, 0xfeda, 0xdae0, 0xf352, 0x5506, 0x83cd, 0x0, 0x0);
        gbc.writeMem(0xa9d0, { 0xff });
        gbc.writeMem(0xfed8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xfed8, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xa9d0));
        EXPECT(0xd1, gbc.readMem(0xfed8));
        EXPECT(0xa9, gbc.readMem(0xfed9));
        // FF 0369
        gbc.setState(0x9110, 0xcfd3, 0xb680, 0x8446, 0xa7d6, 0x7e5b, 0x1, 0x1);
        gbc.writeMem(0x9110, { 0xff });
        gbc.writeMem(0xcfd1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xcfd1, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x9110));
        EXPECT(0x11, gbc.readMem(0xcfd1));
        EXPECT(0x91, gbc.readMem(0xcfd2));
        // FF 036A
        gbc.setState(0x99c4, 0xb873, 0xc240, 0xf8a1, 0x6d01, 0x7680, 0x0, 0x1);
        gbc.writeMem(0x99c4, { 0xff });
        gbc.writeMem(0xb871, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb871, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x99c4));
        EXPECT(0xc5, gbc.readMem(0xb871));
        EXPECT(0x99, gbc.readMem(0xb872));
        // FF 036B
        gbc.setState(0x230e, 0xec9a, 0xd3e0, 0xee36, 0xffd6, 0xb794, 0x1, 0x0);
        gbc.writeMem(0x230e, { 0xff });
        gbc.writeMem(0xec98, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xec98, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xec98));
        EXPECT(0x23, gbc.readMem(0xec99));
        // FF 036D
        gbc.setState(0x659a, 0xcd05, 0x91f0, 0x1e18, 0x1a27, 0xe7bb, 0x1, 0x0);
        gbc.writeMem(0x659a, { 0xff });
        gbc.writeMem(0xcd03, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xcd03, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xcd03));
        EXPECT(0x65, gbc.readMem(0xcd04));
        // FF 036F
        gbc.setState(0xbf25, 0x926d, 0xaa30, 0xc39a, 0x1fd9, 0x74c5, 0x1, 0x1);
        gbc.writeMem(0x926b, { 0x0, 0x0 });
        gbc.writeMem(0xbf25, { 0xff });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x926b, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x926b));
        EXPECT(0xbf, gbc.readMem(0x926c));
        EXPECT(0xff, gbc.readMem(0xbf25));
        // FF 0370
        gbc.setState(0xb613, 0xbe88, 0xb0, 0x20ae, 0x52da, 0xd188, 0x0, 0x1);
        gbc.writeMem(0xb613, { 0xff });
        gbc.writeMem(0xbe86, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xbe86, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xb613));
        EXPECT(0x14, gbc.readMem(0xbe86));
        EXPECT(0xb6, gbc.readMem(0xbe87));
        // FF 0373
        gbc.setState(0x4b0c, 0xa079, 0x3090, 0x57a8, 0xa15e, 0x852a, 0x0, 0x0);
        gbc.writeMem(0x4b0c, { 0xff });
        gbc.writeMem(0xa077, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xa077, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xa077));
        EXPECT(0x4b, gbc.readMem(0xa078));
        // FF 0377
        gbc.setState(0x1600, 0x89e9, 0x7380, 0x56cd, 0x115d, 0x7f9f, 0x0, 0x1);
        gbc.writeMem(0x1600, { 0xff });
        gbc.writeMem(0x89e7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x89e7, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0x89e7));
        EXPECT(0x16, gbc.readMem(0x89e8));
        // FF 0378
        gbc.setState(0x60f5, 0x887d, 0x8310, 0xfaa8, 0xcbc6, 0x721d, 0x1, 0x0);
        gbc.writeMem(0x60f5, { 0xff });
        gbc.writeMem(0x887b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x887b, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0x887b));
        EXPECT(0x60, gbc.readMem(0x887c));
        // FF 0379
        gbc.setState(0xdb1d, 0xddbd, 0xea90, 0xee2c, 0xff06, 0x4ba6, 0x0, 0x0);
        gbc.writeMem(0xdb1d, { 0xff });
        gbc.writeMem(0xddbb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xddbb, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xdb1d));
        EXPECT(0x1e, gbc.readMem(0xddbb));
        EXPECT(0xdb, gbc.readMem(0xddbc));
        // FF 037D
        gbc.setState(0x7ff1, 0x8276, 0x69b0, 0xabaa, 0xd5b8, 0x839e, 0x0, 0x1);
        gbc.writeMem(0x7ff1, { 0xff });
        gbc.writeMem(0x8274, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x8274, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0x8274));
        EXPECT(0x7f, gbc.readMem(0x8275));
        // FF 0381
        gbc.setState(0x9733, 0xe02a, 0x23d0, 0xca46, 0x624a, 0x9357, 0x1, 0x0);
        gbc.writeMem(0x9733, { 0xff });
        gbc.writeMem(0xe028, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xe028, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x9733));
        EXPECT(0x34, gbc.readMem(0xe028));
        EXPECT(0x97, gbc.readMem(0xe029));
        // FF 0382
        gbc.setState(0x6de1, 0xd971, 0x61a0, 0x13f7, 0x4ac3, 0x8726, 0x1, 0x1);
        gbc.writeMem(0x6de1, { 0xff });
        gbc.writeMem(0xd96f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xd96f, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xd96f));
        EXPECT(0x6d, gbc.readMem(0xd970));
        // FF 0383
        gbc.setState(0x2e7c, 0xcf0b, 0xf320, 0x3e47, 0xc65e, 0xcf66, 0x0, 0x0);
        gbc.writeMem(0x2e7c, { 0xff });
        gbc.writeMem(0xcf09, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xcf09, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xcf09));
        EXPECT(0x2e, gbc.readMem(0xcf0a));
        // FF 0386
        gbc.setState(0x199b, 0xcc2c, 0x30b0, 0xd43e, 0x9567, 0xb364, 0x1, 0x1);
        gbc.writeMem(0x199b, { 0xff });
        gbc.writeMem(0xcc2a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xcc2a, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xcc2a));
        EXPECT(0x19, gbc.readMem(0xcc2b));
        // FF 0388
        gbc.setState(0x1ca6, 0xc3c4, 0xfa00, 0x8119, 0xff48, 0xe6c7, 0x0, 0x1);
        gbc.writeMem(0x1ca6, { 0xff });
        gbc.writeMem(0xc3c2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xc3c2, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc3c2));
        EXPECT(0x1c, gbc.readMem(0xc3c3));
        // FF 0389
        gbc.setState(0x6d88, 0xbfd9, 0x970, 0xc022, 0x5b4f, 0x8ac, 0x0, 0x1);
        gbc.writeMem(0x6d88, { 0xff });
        gbc.writeMem(0xbfd7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xbfd7, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xbfd7));
        EXPECT(0x6d, gbc.readMem(0xbfd8));
        // FF 038A
        gbc.setState(0xe4bc, 0xd2eb, 0x5f40, 0xd505, 0xcb9a, 0x9797, 0x0, 0x0);
        gbc.writeMem(0xd2e9, { 0x0, 0x0 });
        gbc.writeMem(0xe4bc, { 0xff });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xd2e9, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xd2e9));
        EXPECT(0xe4, gbc.readMem(0xd2ea));
        EXPECT(0xff, gbc.readMem(0xe4bc));
        // FF 038B
        gbc.setState(0xc2db, 0xfb2a, 0x1560, 0x53ac, 0x5239, 0x67fb, 0x1, 0x0);
        gbc.writeMem(0xc2db, { 0xff });
        gbc.writeMem(0xfb28, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xfb28, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xc2db));
        EXPECT(0xdc, gbc.readMem(0xfb28));
        EXPECT(0xc2, gbc.readMem(0xfb29));
        // FF 0394
        gbc.setState(0xc74a, 0xe750, 0x17d0, 0x45ad, 0xf796, 0x98c1, 0x1, 0x0);
        gbc.writeMem(0xc74a, { 0xff });
        gbc.writeMem(0xe74e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe74e, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xc74a));
        EXPECT(0x4b, gbc.readMem(0xe74e));
        EXPECT(0xc7, gbc.readMem(0xe74f));
        // FF 0396
        gbc.setState(0x78e8, 0xcb5b, 0x60d0, 0x7d27, 0x9cee, 0xdb7b, 0x0, 0x0);
        gbc.writeMem(0x78e8, { 0xff });
        gbc.writeMem(0xcb59, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xcb59, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xcb59));
        EXPECT(0x78, gbc.readMem(0xcb5a));
        // FF 0397
        gbc.setState(0x7100, 0x894b, 0xfaf0, 0x5538, 0xa748, 0xf9a4, 0x1, 0x1);
        gbc.writeMem(0x7100, { 0xff });
        gbc.writeMem(0x8949, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x8949, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0x8949));
        EXPECT(0x71, gbc.readMem(0x894a));
        // FF 0399
        gbc.setState(0xb553, 0x94f7, 0x34b0, 0x1855, 0x7511, 0x42fd, 0x1, 0x1);
        gbc.writeMem(0x94f5, { 0x0, 0x0 });
        gbc.writeMem(0xb553, { 0xff });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x94f5, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0x94f5));
        EXPECT(0xb5, gbc.readMem(0x94f6));
        EXPECT(0xff, gbc.readMem(0xb553));
        // FF 039A
        gbc.setState(0xaacd, 0xe0ab, 0x74e0, 0x2ff0, 0x5617, 0x814, 0x1, 0x1);
        gbc.writeMem(0xaacd, { 0xff });
        gbc.writeMem(0xe0a9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xe0a9, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xaacd));
        EXPECT(0xce, gbc.readMem(0xe0a9));
        EXPECT(0xaa, gbc.readMem(0xe0aa));
        // FF 039C
        gbc.setState(0x753b, 0xd861, 0x5a20, 0x9308, 0x17cf, 0x8b1e, 0x0, 0x1);
        gbc.writeMem(0x753b, { 0xff });
        gbc.writeMem(0xd85f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xd85f, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xd85f));
        EXPECT(0x75, gbc.readMem(0xd860));
        // FF 03A2
        gbc.setState(0x1680, 0xbd4d, 0x5eb0, 0xdbd8, 0x3c42, 0xd5ca, 0x0, 0x0);
        gbc.writeMem(0x1680, { 0xff });
        gbc.writeMem(0xbd4b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xbd4b, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xbd4b));
        EXPECT(0x16, gbc.readMem(0xbd4c));
        // FF 03A6
        gbc.setState(0x3bff, 0xdbd0, 0x4960, 0xc02c, 0x588d, 0x7416, 0x0, 0x1);
        gbc.writeMem(0x3bff, { 0xff });
        gbc.writeMem(0xdbce, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xdbce, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xdbce));
        EXPECT(0x3c, gbc.readMem(0xdbcf));
        // FF 03AB
        gbc.setState(0x82bd, 0xb41b, 0xee0, 0x457a, 0xcc47, 0x3507, 0x1, 0x0);
        gbc.writeMem(0x82bd, { 0xff });
        gbc.writeMem(0xb419, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xb419, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x82bd));
        EXPECT(0xbe, gbc.readMem(0xb419));
        EXPECT(0x82, gbc.readMem(0xb41a));
        // FF 03AC
        gbc.setState(0x2f66, 0xf798, 0x5ad0, 0xf3a2, 0xb707, 0xe691, 0x1, 0x1);
        gbc.writeMem(0x2f66, { 0xff });
        gbc.writeMem(0xf796, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xf796, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0xf796));
        EXPECT(0x2f, gbc.readMem(0xf797));
        // FF 03AE
        gbc.setState(0x2604, 0xaa75, 0xe3e0, 0x66ae, 0x56cf, 0xdfa2, 0x1, 0x0);
        gbc.writeMem(0x2604, { 0xff });
        gbc.writeMem(0xaa73, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xaa73, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xaa73));
        EXPECT(0x26, gbc.readMem(0xaa74));
        // FF 03AF
        gbc.setState(0xba9f, 0xe1a9, 0x10e0, 0xac3e, 0x7ef4, 0x33d3, 0x1, 0x0);
        gbc.writeMem(0xba9f, { 0xff });
        gbc.writeMem(0xe1a7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xe1a7, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xba9f));
        EXPECT(0xa0, gbc.readMem(0xe1a7));
        EXPECT(0xba, gbc.readMem(0xe1a8));
        // FF 03B1
        gbc.setState(0xd8d2, 0xbf6b, 0x6c20, 0x6f75, 0xed77, 0xdde9, 0x1, 0x1);
        gbc.writeMem(0xbf69, { 0x0, 0x0 });
        gbc.writeMem(0xd8d2, { 0xff });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xbf69, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xbf69));
        EXPECT(0xd8, gbc.readMem(0xbf6a));
        EXPECT(0xff, gbc.readMem(0xd8d2));
        // FF 03B3
        gbc.setState(0x32b5, 0xdebf, 0x89f0, 0x6558, 0x6017, 0x5bd3, 0x1, 0x1);
        gbc.writeMem(0x32b5, { 0xff });
        gbc.writeMem(0xdebd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xdebd, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xdebd));
        EXPECT(0x32, gbc.readMem(0xdebe));
        // FF 03B4
        gbc.setState(0x4539, 0xb64b, 0xebc0, 0xbd5a, 0xa24e, 0xdec8, 0x0, 0x1);
        gbc.writeMem(0x4539, { 0xff });
        gbc.writeMem(0xb649, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xb649, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xb649));
        EXPECT(0x45, gbc.readMem(0xb64a));
        // FF 03B6
        gbc.setState(0x75e5, 0x9b36, 0x2bd0, 0x9d3d, 0x2ee8, 0xb521, 0x1, 0x0);
        gbc.writeMem(0x75e5, { 0xff });
        gbc.writeMem(0x9b34, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x9b34, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9b34));
        EXPECT(0x75, gbc.readMem(0x9b35));
        // FF 03B7
        gbc.setState(0x8b63, 0x8a00, 0x6e80, 0xedf1, 0x1c20, 0x603, 0x0, 0x0);
        gbc.writeMem(0x89fe, { 0x0, 0x0 });
        gbc.writeMem(0x8b63, { 0xff });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x89fe, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x89fe));
        EXPECT(0x8b, gbc.readMem(0x89ff));
        EXPECT(0xff, gbc.readMem(0x8b63));
        // FF 03B8
        gbc.setState(0xa01, 0xc785, 0x8680, 0x2703, 0x58ed, 0xc261, 0x0, 0x0);
        gbc.writeMem(0xa01, { 0xff });
        gbc.writeMem(0xc783, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xc783, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xc783));
        EXPECT(0xa, gbc.readMem(0xc784));
        // FF 03B9
        gbc.setState(0x2b8f, 0xdd2f, 0xdd30, 0x8739, 0xb185, 0x7310, 0x0, 0x0);
        gbc.writeMem(0x2b8f, { 0xff });
        gbc.writeMem(0xdd2d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xdd2d, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xdd2d));
        EXPECT(0x2b, gbc.readMem(0xdd2e));
        // FF 03BB
        gbc.setState(0x79cb, 0xe833, 0xb880, 0x7c42, 0x5a1, 0xd23f, 0x1, 0x0);
        gbc.writeMem(0x79cb, { 0xff });
        gbc.writeMem(0xe831, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe831, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xe831));
        EXPECT(0x79, gbc.readMem(0xe832));
        // FF 03BF
        gbc.setState(0xd272, 0xb2a0, 0x50, 0x9f47, 0x8d97, 0xe61b, 0x0, 0x0);
        gbc.writeMem(0xb29e, { 0x0, 0x0 });
        gbc.writeMem(0xd272, { 0xff });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xb29e, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xb29e));
        EXPECT(0xd2, gbc.readMem(0xb29f));
        EXPECT(0xff, gbc.readMem(0xd272));
        // FF 03C2
        gbc.setState(0x4fbc, 0xa760, 0xb620, 0x3a7a, 0x2de, 0xb905, 0x1, 0x1);
        gbc.writeMem(0x4fbc, { 0xff });
        gbc.writeMem(0xa75e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xa75e, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xa75e));
        EXPECT(0x4f, gbc.readMem(0xa75f));
        // FF 03C3
        gbc.setState(0x7176, 0xba35, 0x660, 0xb2a, 0x903c, 0x5528, 0x1, 0x0);
        gbc.writeMem(0x7176, { 0xff });
        gbc.writeMem(0xba33, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xba33, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xba33));
        EXPECT(0x71, gbc.readMem(0xba34));
        // FF 03C4
        gbc.setState(0xc9c4, 0xcced, 0xf340, 0x86cb, 0xdad2, 0xd286, 0x1, 0x0);
        gbc.writeMem(0xc9c4, { 0xff });
        gbc.writeMem(0xcceb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xcceb, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xc9c4));
        EXPECT(0xc5, gbc.readMem(0xcceb));
        EXPECT(0xc9, gbc.readMem(0xccec));
        // FF 03C6
        gbc.setState(0xc4c8, 0xe106, 0x8c80, 0x8f49, 0xabe5, 0xad88, 0x0, 0x0);
        gbc.writeMem(0xc4c8, { 0xff });
        gbc.writeMem(0xe104, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe104, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xc4c8));
        EXPECT(0xc9, gbc.readMem(0xe104));
        EXPECT(0xc4, gbc.readMem(0xe105));
        // FF 03C8
        gbc.setState(0x173f, 0xc3ef, 0x180, 0xc6b7, 0xeafe, 0x42a9, 0x0, 0x0);
        gbc.writeMem(0x173f, { 0xff });
        gbc.writeMem(0xc3ed, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xc3ed, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xc3ed));
        EXPECT(0x17, gbc.readMem(0xc3ee));
        // FF 03CA
        gbc.setState(0x5ee0, 0xcb8e, 0xd5b0, 0x9ae2, 0x86ce, 0x5bbc, 0x0, 0x1);
        gbc.writeMem(0x5ee0, { 0xff });
        gbc.writeMem(0xcb8c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xcb8c, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xcb8c));
        EXPECT(0x5e, gbc.readMem(0xcb8d));
        // FF 03CB
        gbc.setState(0x2448, 0x94b2, 0x26a0, 0xae4, 0x9322, 0x9b0f, 0x1, 0x1);
        gbc.writeMem(0x2448, { 0xff });
        gbc.writeMem(0x94b0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x94b0, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x94b0));
        EXPECT(0x24, gbc.readMem(0x94b1));
        // FF 03CC
        gbc.setState(0xc8d5, 0xd540, 0x8e30, 0x170c, 0xdc46, 0x34ee, 0x0, 0x1);
        gbc.writeMem(0xc8d5, { 0xff });
        gbc.writeMem(0xd53e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd53e, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xc8d5));
        EXPECT(0xd6, gbc.readMem(0xd53e));
        EXPECT(0xc8, gbc.readMem(0xd53f));
        // FF 03CD
        gbc.setState(0xc810, 0x8f13, 0x6ea0, 0xc9e, 0x2ca9, 0x4cbe, 0x1, 0x1);
        gbc.writeMem(0x8f11, { 0x0, 0x0 });
        gbc.writeMem(0xc810, { 0xff });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x8f11, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x8f11));
        EXPECT(0xc8, gbc.readMem(0x8f12));
        EXPECT(0xff, gbc.readMem(0xc810));
        // FF 03CF
        gbc.setState(0x6ee7, 0x9f09, 0xcf30, 0x4775, 0xd83d, 0x51b9, 0x0, 0x0);
        gbc.writeMem(0x6ee7, { 0xff });
        gbc.writeMem(0x9f07, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x9f07, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0x9f07));
        EXPECT(0x6e, gbc.readMem(0x9f08));
        // FF 03D3
        gbc.setState(0x4ff, 0x8937, 0xd180, 0x84b9, 0x6285, 0xad7c, 0x0, 0x0);
        gbc.writeMem(0x4ff, { 0xff });
        gbc.writeMem(0x8935, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x8935, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x8935));
        EXPECT(0x5, gbc.readMem(0x8936));
        // FF 03D6
        gbc.setState(0xed9a, 0xbf65, 0xfa00, 0x374d, 0x72cc, 0xcb32, 0x0, 0x0);
        gbc.writeMem(0xbf63, { 0x0, 0x0 });
        gbc.writeMem(0xed9a, { 0xff });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xbf63, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xbf63));
        EXPECT(0xed, gbc.readMem(0xbf64));
        EXPECT(0xff, gbc.readMem(0xed9a));
        // FF 03D7
        gbc.setState(0x49b9, 0xbaf7, 0x10, 0xd97c, 0xf170, 0x5ca0, 0x1, 0x0);
        gbc.writeMem(0x49b9, { 0xff });
        gbc.writeMem(0xbaf5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xbaf5, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xbaf5));
        EXPECT(0x49, gbc.readMem(0xbaf6));
        // FF 03D8
        gbc.setState(0xd863, 0xcf05, 0x6c10, 0x95d4, 0xe988, 0x3447, 0x1, 0x1);
        gbc.writeMem(0xcf03, { 0x0, 0x0 });
        gbc.writeMem(0xd863, { 0xff });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xcf03, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xcf03));
        EXPECT(0xd8, gbc.readMem(0xcf04));
        EXPECT(0xff, gbc.readMem(0xd863));
        // FF 03D9
        gbc.setState(0x6a52, 0xebd0, 0xe140, 0x84d, 0xc9d3, 0x734d, 0x1, 0x0);
        gbc.writeMem(0x6a52, { 0xff });
        gbc.writeMem(0xebce, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xebce, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xebce));
        EXPECT(0x6a, gbc.readMem(0xebcf));
        // FF 03DF
        gbc.setState(0xdb61, 0xc7fa, 0x20, 0xcddd, 0x2342, 0x9909, 0x1, 0x0);
        gbc.writeMem(0xc7f8, { 0x0, 0x0 });
        gbc.writeMem(0xdb61, { 0xff });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xc7f8, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xc7f8));
        EXPECT(0xdb, gbc.readMem(0xc7f9));
        EXPECT(0xff, gbc.readMem(0xdb61));
        // FF 03E1
        gbc.setState(0x9bcd, 0xdc7d, 0x2540, 0x1c61, 0xb5a0, 0x41bb, 0x1, 0x1);
        gbc.writeMem(0x9bcd, { 0xff });
        gbc.writeMem(0xdc7b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xdc7b, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x9bcd));
        EXPECT(0xce, gbc.readMem(0xdc7b));
        EXPECT(0x9b, gbc.readMem(0xdc7c));
        // FF 03E3
        gbc.setState(0x3087, 0xb59b, 0x1c20, 0x2e8f, 0xc677, 0x1d5b, 0x1, 0x1);
        gbc.writeMem(0x3087, { 0xff });
        gbc.writeMem(0xb599, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xb599, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xb599));
        EXPECT(0x30, gbc.readMem(0xb59a));
        // FF 03E4
        gbc.setState(0x9574, 0xcd0f, 0x1d00, 0x84fd, 0xc7d1, 0xa8bf, 0x0, 0x0);
        gbc.writeMem(0x9574, { 0xff });
        gbc.writeMem(0xcd0d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xcd0d, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x9574));
        EXPECT(0x75, gbc.readMem(0xcd0d));
        EXPECT(0x95, gbc.readMem(0xcd0e));
        // FF 03E5
        gbc.setState(0xe455, 0xc1a1, 0x1e10, 0x6b3e, 0xd214, 0x3263, 0x1, 0x0);
        gbc.writeMem(0xc19f, { 0x0, 0x0 });
        gbc.writeMem(0xe455, { 0xff });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc19f, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xc19f));
        EXPECT(0xe4, gbc.readMem(0xc1a0));
        EXPECT(0xff, gbc.readMem(0xe455));
        // FF 03E7
        gbc.setState(0xdcdb, 0xc022, 0x5d00, 0x96b8, 0xdc5f, 0x46e, 0x1, 0x1);
        gbc.writeMem(0xc020, { 0x0, 0x0 });
        gbc.writeMem(0xdcdb, { 0xff });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xc020, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xc020));
        EXPECT(0xdc, gbc.readMem(0xc021));
        EXPECT(0xff, gbc.readMem(0xdcdb));
    }
