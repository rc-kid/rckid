#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_02)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_02) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 02 0000
        gbc.setState(0x459a, 0x3efb, 0xa290, 0x8a1e, 0xfafe, 0x4b5, 0x1, 0x1);
        gbc.writeMem(0x459a, { 0x2 });
        gbc.writeMem(0x8a1e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x3efb);
        EXPECT(gbc.pc(), 0x459b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a1e), 0xa2);
        // 02 0002
        gbc.setState(0x5ca7, 0xc173, 0xa700, 0xfc8a, 0x8603, 0x896d, 0x1, 0x1);
        gbc.writeMem(0x5ca7, { 0x2 });
        gbc.writeMem(0xfc8a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xc173);
        EXPECT(gbc.pc(), 0x5ca8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfc8a), 0xa7);
        // 02 0003
        gbc.setState(0x32c7, 0xe1a8, 0x9f20, 0x82e8, 0xb649, 0x6bc4, 0x0, 0x1);
        gbc.writeMem(0x32c7, { 0x2 });
        gbc.writeMem(0x82e8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xe1a8);
        EXPECT(gbc.pc(), 0x32c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82e8), 0x9f);
        // 02 0005
        gbc.setState(0xe917, 0x5e78, 0x33a0, 0xb1f1, 0x6ef0, 0x94aa, 0x0, 0x0);
        gbc.writeMem(0xb1f1, { 0x0 });
        gbc.writeMem(0xe917, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x5e78);
        EXPECT(gbc.pc(), 0xe918);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1f1), 0x33);
        EXPECT(gbc.readMem(0xe917), 0x2);
        // 02 0006
        gbc.setState(0xaa3f, 0xacaf, 0xeed0, 0xa3d6, 0x57db, 0xb7e1, 0x1, 0x1);
        gbc.writeMem(0xa3d6, { 0x0 });
        gbc.writeMem(0xaa3f, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xacaf);
        EXPECT(gbc.pc(), 0xaa40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3d6), 0xee);
        EXPECT(gbc.readMem(0xaa3f), 0x2);
        // 02 0007
        gbc.setState(0x5337, 0x2ad8, 0x4360, 0x8194, 0x90f0, 0x19ce, 0x0, 0x0);
        gbc.writeMem(0x5337, { 0x2 });
        gbc.writeMem(0x8194, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x2ad8);
        EXPECT(gbc.pc(), 0x5338);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8194), 0x43);
        // 02 000B
        gbc.setState(0x6ae0, 0xdfd4, 0x650, 0xce2a, 0x3a9d, 0x2aaa, 0x0, 0x1);
        gbc.writeMem(0x6ae0, { 0x2 });
        gbc.writeMem(0xce2a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xdfd4);
        EXPECT(gbc.pc(), 0x6ae1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce2a), 0x6);
        // 02 0010
        gbc.setState(0x9916, 0xb56c, 0x23c0, 0xc100, 0xdf94, 0xb50b, 0x0, 0x0);
        gbc.writeMem(0x9916, { 0x2 });
        gbc.writeMem(0xc100, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xb56c);
        EXPECT(gbc.pc(), 0x9917);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9916), 0x2);
        EXPECT(gbc.readMem(0xc100), 0x23);
        // 02 0012
        gbc.setState(0x9f75, 0xd8b0, 0xf40, 0xed1c, 0xdaee, 0xc831, 0x1, 0x1);
        gbc.writeMem(0x9f75, { 0x2 });
        gbc.writeMem(0xed1c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xd8b0);
        EXPECT(gbc.pc(), 0x9f76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f75), 0x2);
        EXPECT(gbc.readMem(0xed1c), 0xf);
        // 02 0013
        gbc.setState(0x789d, 0xa4a2, 0xd150, 0xe80d, 0x355f, 0xa3a7, 0x1, 0x1);
        gbc.writeMem(0x789d, { 0x2 });
        gbc.writeMem(0xe80d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xa4a2);
        EXPECT(gbc.pc(), 0x789e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe80d), 0xd1);
        // 02 0014
        gbc.setState(0x1bd0, 0x856b, 0x9df0, 0xc325, 0x600, 0x9fb9, 0x1, 0x0);
        gbc.writeMem(0x1bd0, { 0x2 });
        gbc.writeMem(0xc325, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x856b);
        EXPECT(gbc.pc(), 0x1bd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc325), 0x9d);
        // 02 0017
        gbc.setState(0xc240, 0xf755, 0x6480, 0x9d68, 0xa112, 0xdbe9, 0x0, 0x0);
        gbc.writeMem(0x9d68, { 0x0 });
        gbc.writeMem(0xc240, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xf755);
        EXPECT(gbc.pc(), 0xc241);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d68), 0x64);
        EXPECT(gbc.readMem(0xc240), 0x2);
        // 02 0018
        gbc.setState(0x342e, 0x5555, 0xf430, 0xc422, 0xda2c, 0x869d, 0x0, 0x0);
        gbc.writeMem(0x342e, { 0x2 });
        gbc.writeMem(0xc422, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x5555);
        EXPECT(gbc.pc(), 0x342f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc422), 0xf4);
        // 02 001A
        gbc.setState(0x571c, 0x9458, 0xe1c0, 0xa3e8, 0xe7d8, 0x478c, 0x0, 0x0);
        gbc.writeMem(0x571c, { 0x2 });
        gbc.writeMem(0xa3e8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x9458);
        EXPECT(gbc.pc(), 0x571d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3e8), 0xe1);
        // 02 001C
        gbc.setState(0x9e37, 0x8b02, 0x7ec0, 0xc81a, 0x2d8b, 0x5826, 0x0, 0x1);
        gbc.writeMem(0x9e37, { 0x2 });
        gbc.writeMem(0xc81a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x8b02);
        EXPECT(gbc.pc(), 0x9e38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e37), 0x2);
        EXPECT(gbc.readMem(0xc81a), 0x7e);
        // 02 001D
        gbc.setState(0x4519, 0x13c3, 0xfe70, 0xc801, 0x4045, 0x758, 0x1, 0x0);
        gbc.writeMem(0x4519, { 0x2 });
        gbc.writeMem(0xc801, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x13c3);
        EXPECT(gbc.pc(), 0x451a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc801), 0xfe);
        // 02 001E
        gbc.setState(0x956d, 0x6927, 0xb590, 0xd814, 0xbcd2, 0xe9e0, 0x0, 0x1);
        gbc.writeMem(0x956d, { 0x2 });
        gbc.writeMem(0xd814, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x6927);
        EXPECT(gbc.pc(), 0x956e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x956d), 0x2);
        EXPECT(gbc.readMem(0xd814), 0xb5);
        // 02 001F
        gbc.setState(0xda3f, 0xcf7c, 0x1240, 0xf265, 0x4875, 0x4ada, 0x1, 0x1);
        gbc.writeMem(0xda3f, { 0x2 });
        gbc.writeMem(0xf265, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xcf7c);
        EXPECT(gbc.pc(), 0xda40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda3f), 0x2);
        EXPECT(gbc.readMem(0xf265), 0x12);
        // 02 0020
        gbc.setState(0x2663, 0xf593, 0xe0c0, 0xd1d8, 0x63af, 0xdeeb, 0x0, 0x0);
        gbc.writeMem(0x2663, { 0x2 });
        gbc.writeMem(0xd1d8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xf593);
        EXPECT(gbc.pc(), 0x2664);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1d8), 0xe0);
        // 02 0022
        gbc.setState(0xa0f0, 0x76c9, 0x2c00, 0x9a2b, 0x43d5, 0x539b, 0x0, 0x1);
        gbc.writeMem(0x9a2b, { 0x0 });
        gbc.writeMem(0xa0f0, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x76c9);
        EXPECT(gbc.pc(), 0xa0f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a2b), 0x2c);
        EXPECT(gbc.readMem(0xa0f0), 0x2);
        // 02 0023
        gbc.setState(0x5f81, 0xe17d, 0x1490, 0xc784, 0xa7d1, 0x1ad, 0x1, 0x1);
        gbc.writeMem(0x5f81, { 0x2 });
        gbc.writeMem(0xc784, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xe17d);
        EXPECT(gbc.pc(), 0x5f82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc784), 0x14);
        // 02 0026
        gbc.setState(0x421a, 0xe783, 0xad0, 0x8868, 0xa17a, 0x8b4e, 0x0, 0x0);
        gbc.writeMem(0x421a, { 0x2 });
        gbc.writeMem(0x8868, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xe783);
        EXPECT(gbc.pc(), 0x421b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8868), 0xa);
        // 02 0027
        gbc.setState(0xd920, 0x4cb5, 0xb660, 0x9e71, 0xc934, 0xb21f, 0x1, 0x1);
        gbc.writeMem(0x9e71, { 0x0 });
        gbc.writeMem(0xd920, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x4cb5);
        EXPECT(gbc.pc(), 0xd921);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e71), 0xb6);
        EXPECT(gbc.readMem(0xd920), 0x2);
        // 02 0029
        gbc.setState(0xee6c, 0x241a, 0x37c0, 0xb969, 0x716e, 0x479a, 0x0, 0x0);
        gbc.writeMem(0xb969, { 0x0 });
        gbc.writeMem(0xee6c, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x241a);
        EXPECT(gbc.pc(), 0xee6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb969), 0x37);
        EXPECT(gbc.readMem(0xee6c), 0x2);
        // 02 002B
        gbc.setState(0xb0ff, 0x10dc, 0x8000, 0xa91f, 0x5532, 0xc7cb, 0x0, 0x0);
        gbc.writeMem(0xa91f, { 0x0 });
        gbc.writeMem(0xb0ff, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x10dc);
        EXPECT(gbc.pc(), 0xb100);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa91f), 0x80);
        EXPECT(gbc.readMem(0xb0ff), 0x2);
        // 02 002E
        gbc.setState(0x8c14, 0x4adb, 0x8170, 0x9e4f, 0x6533, 0x4ea3, 0x0, 0x0);
        gbc.writeMem(0x8c14, { 0x2 });
        gbc.writeMem(0x9e4f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x4adb);
        EXPECT(gbc.pc(), 0x8c15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c14), 0x2);
        EXPECT(gbc.readMem(0x9e4f), 0x81);
        // 02 002F
        gbc.setState(0x86c5, 0x87d, 0xd840, 0x837f, 0x43a1, 0xd7c0, 0x0, 0x0);
        gbc.writeMem(0x837f, { 0x0 });
        gbc.writeMem(0x86c5, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x87d);
        EXPECT(gbc.pc(), 0x86c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x837f), 0xd8);
        EXPECT(gbc.readMem(0x86c5), 0x2);
        // 02 0032
        gbc.setState(0xa615, 0x2760, 0x8830, 0xffa9, 0xd9f5, 0xb0c0, 0x0, 0x1);
        gbc.writeMem(0xa615, { 0x2 });
        gbc.writeMem(0xffa9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x2760);
        EXPECT(gbc.pc(), 0xa616);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa615), 0x2);
        EXPECT(gbc.readMem(0xffa9), 0x88);
        // 02 0034
        gbc.setState(0x9554, 0xe312, 0xf590, 0xe8e5, 0xe60f, 0x23a4, 0x1, 0x0);
        gbc.writeMem(0x9554, { 0x2 });
        gbc.writeMem(0xe8e5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xe312);
        EXPECT(gbc.pc(), 0x9555);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9554), 0x2);
        EXPECT(gbc.readMem(0xe8e5), 0xf5);
        // 02 0036
        gbc.setState(0x9de8, 0x151e, 0xa3c0, 0xb190, 0x193d, 0x905d, 0x1, 0x0);
        gbc.writeMem(0x9de8, { 0x2 });
        gbc.writeMem(0xb190, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x151e);
        EXPECT(gbc.pc(), 0x9de9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9de8), 0x2);
        EXPECT(gbc.readMem(0xb190), 0xa3);
        // 02 0037
        gbc.setState(0x2f8d, 0x782a, 0x3e0, 0x9b1f, 0xcb6e, 0xff0, 0x0, 0x1);
        gbc.writeMem(0x2f8d, { 0x2 });
        gbc.writeMem(0x9b1f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x782a);
        EXPECT(gbc.pc(), 0x2f8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b1f), 0x3);
        // 02 0038
        gbc.setState(0x2f02, 0x7e51, 0x3a60, 0xe1cd, 0x6c3e, 0x9246, 0x0, 0x1);
        gbc.writeMem(0x2f02, { 0x2 });
        gbc.writeMem(0xe1cd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x7e51);
        EXPECT(gbc.pc(), 0x2f03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1cd), 0x3a);
        // 02 0039
        gbc.setState(0x4d2c, 0xa90b, 0x830, 0xfa47, 0x6ea3, 0xeeb4, 0x0, 0x1);
        gbc.writeMem(0x4d2c, { 0x2 });
        gbc.writeMem(0xfa47, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xa90b);
        EXPECT(gbc.pc(), 0x4d2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfa47), 0x8);
        // 02 003B
        gbc.setState(0x33ef, 0xdfac, 0xd150, 0xcaf3, 0x4137, 0x153d, 0x1, 0x0);
        gbc.writeMem(0x33ef, { 0x2 });
        gbc.writeMem(0xcaf3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xdfac);
        EXPECT(gbc.pc(), 0x33f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcaf3), 0xd1);
        // 02 003D
        gbc.setState(0x8b76, 0xf60d, 0xd220, 0xc490, 0x4d1d, 0x874, 0x1, 0x0);
        gbc.writeMem(0x8b76, { 0x2 });
        gbc.writeMem(0xc490, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xf60d);
        EXPECT(gbc.pc(), 0x8b77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b76), 0x2);
        EXPECT(gbc.readMem(0xc490), 0xd2);
        // 02 003E
        gbc.setState(0xe240, 0x9a65, 0x90d0, 0xc654, 0x7627, 0x4e9f, 0x0, 0x1);
        gbc.writeMem(0xc654, { 0x0 });
        gbc.writeMem(0xe240, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x9a65);
        EXPECT(gbc.pc(), 0xe241);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc654), 0x90);
        EXPECT(gbc.readMem(0xe240), 0x2);
        // 02 0041
        gbc.setState(0xe149, 0x9be2, 0xa4e0, 0xbeaa, 0xf8f0, 0xf2b6, 0x1, 0x1);
        gbc.writeMem(0xbeaa, { 0x0 });
        gbc.writeMem(0xe149, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x9be2);
        EXPECT(gbc.pc(), 0xe14a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbeaa), 0xa4);
        EXPECT(gbc.readMem(0xe149), 0x2);
        // 02 0044
        gbc.setState(0x1643, 0x63e, 0x6bf0, 0x81b0, 0xe2ea, 0x3d63, 0x0, 0x1);
        gbc.writeMem(0x1643, { 0x2 });
        gbc.writeMem(0x81b0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x63e);
        EXPECT(gbc.pc(), 0x1644);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81b0), 0x6b);
        // 02 0045
        gbc.setState(0xc1e2, 0x20e9, 0x63f0, 0xdb4a, 0xadbf, 0xbc2e, 0x1, 0x1);
        gbc.writeMem(0xc1e2, { 0x2 });
        gbc.writeMem(0xdb4a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x20e9);
        EXPECT(gbc.pc(), 0xc1e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1e2), 0x2);
        EXPECT(gbc.readMem(0xdb4a), 0x63);
        // 02 0047
        gbc.setState(0x43a3, 0x4c83, 0xe2d0, 0xe132, 0xdf7b, 0x4084, 0x1, 0x0);
        gbc.writeMem(0x43a3, { 0x2 });
        gbc.writeMem(0xe132, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x4c83);
        EXPECT(gbc.pc(), 0x43a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe132), 0xe2);
        // 02 004A
        gbc.setState(0x631d, 0x2674, 0x8a20, 0x9ef5, 0x597f, 0x5097, 0x1, 0x1);
        gbc.writeMem(0x631d, { 0x2 });
        gbc.writeMem(0x9ef5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x2674);
        EXPECT(gbc.pc(), 0x631e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ef5), 0x8a);
        // 02 004C
        gbc.setState(0x8bd4, 0x44c7, 0xf530, 0xd7ca, 0x93b6, 0x97ab, 0x0, 0x0);
        gbc.writeMem(0x8bd4, { 0x2 });
        gbc.writeMem(0xd7ca, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x44c7);
        EXPECT(gbc.pc(), 0x8bd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bd4), 0x2);
        EXPECT(gbc.readMem(0xd7ca), 0xf5);
        // 02 004E
        gbc.setState(0xd852, 0x13ef, 0x54f0, 0xebe2, 0x92f0, 0xd724, 0x1, 0x1);
        gbc.writeMem(0xd852, { 0x2 });
        gbc.writeMem(0xebe2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x13ef);
        EXPECT(gbc.pc(), 0xd853);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd852), 0x2);
        EXPECT(gbc.readMem(0xebe2), 0x54);
        // 02 004F
        gbc.setState(0xa30f, 0x5752, 0xdfe0, 0x9239, 0x134a, 0x85cb, 0x1, 0x1);
        gbc.writeMem(0x9239, { 0x0 });
        gbc.writeMem(0xa30f, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x5752);
        EXPECT(gbc.pc(), 0xa310);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9239), 0xdf);
        EXPECT(gbc.readMem(0xa30f), 0x2);
        // 02 0050
        gbc.setState(0xcd44, 0x6674, 0x3950, 0xad1f, 0x3fb7, 0x7df1, 0x1, 0x0);
        gbc.writeMem(0xad1f, { 0x0 });
        gbc.writeMem(0xcd44, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x6674);
        EXPECT(gbc.pc(), 0xcd45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad1f), 0x39);
        EXPECT(gbc.readMem(0xcd44), 0x2);
        // 02 0051
        gbc.setState(0xdb5e, 0x6a32, 0xcbf0, 0xf238, 0x3048, 0x7a3, 0x0, 0x0);
        gbc.writeMem(0xdb5e, { 0x2 });
        gbc.writeMem(0xf238, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x6a32);
        EXPECT(gbc.pc(), 0xdb5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb5e), 0x2);
        EXPECT(gbc.readMem(0xf238), 0xcb);
        // 02 0052
        gbc.setState(0x2c40, 0x82aa, 0x7e00, 0x9229, 0x3d4c, 0xe4a3, 0x1, 0x1);
        gbc.writeMem(0x2c40, { 0x2 });
        gbc.writeMem(0x9229, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x82aa);
        EXPECT(gbc.pc(), 0x2c41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9229), 0x7e);
        // 02 0053
        gbc.setState(0xcbfa, 0x6ec8, 0x3e00, 0xd592, 0x7915, 0xd609, 0x1, 0x0);
        gbc.writeMem(0xcbfa, { 0x2 });
        gbc.writeMem(0xd592, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x6ec8);
        EXPECT(gbc.pc(), 0xcbfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbfa), 0x2);
        EXPECT(gbc.readMem(0xd592), 0x3e);
        // 02 0057
        gbc.setState(0x2c89, 0x3e9c, 0x6840, 0xbd25, 0x9b19, 0x75a9, 0x0, 0x1);
        gbc.writeMem(0x2c89, { 0x2 });
        gbc.writeMem(0xbd25, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x3e9c);
        EXPECT(gbc.pc(), 0x2c8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd25), 0x68);
        // 02 005A
        gbc.setState(0x403e, 0x4564, 0x8d70, 0x80cf, 0x1eff, 0x9448, 0x1, 0x0);
        gbc.writeMem(0x403e, { 0x2 });
        gbc.writeMem(0x80cf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x4564);
        EXPECT(gbc.pc(), 0x403f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80cf), 0x8d);
        // 02 005B
        gbc.setState(0xe336, 0x72bd, 0xb3e0, 0xfa04, 0xaba4, 0x32de, 0x0, 0x0);
        gbc.writeMem(0xe336, { 0x2 });
        gbc.writeMem(0xfa04, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x72bd);
        EXPECT(gbc.pc(), 0xe337);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe336), 0x2);
        EXPECT(gbc.readMem(0xfa04), 0xb3);
        // 02 005C
        gbc.setState(0x3ae5, 0x3adf, 0x330, 0x8b5e, 0x1cb6, 0xe7aa, 0x0, 0x1);
        gbc.writeMem(0x3ae5, { 0x2 });
        gbc.writeMem(0x8b5e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x3adf);
        EXPECT(gbc.pc(), 0x3ae6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b5e), 0x3);
        // 02 005E
        gbc.setState(0xa693, 0xb529, 0xd6a0, 0xbb34, 0xdbe9, 0xf124, 0x1, 0x1);
        gbc.writeMem(0xa693, { 0x2 });
        gbc.writeMem(0xbb34, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xb529);
        EXPECT(gbc.pc(), 0xa694);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa693), 0x2);
        EXPECT(gbc.readMem(0xbb34), 0xd6);
        // 02 0063
        gbc.setState(0xd355, 0x8680, 0xb9f0, 0xd17f, 0x404e, 0xd8a6, 0x1, 0x0);
        gbc.writeMem(0xd17f, { 0x0 });
        gbc.writeMem(0xd355, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x8680);
        EXPECT(gbc.pc(), 0xd356);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd17f), 0xb9);
        EXPECT(gbc.readMem(0xd355), 0x2);
        // 02 006A
        gbc.setState(0x34, 0xced2, 0xb300, 0x9d4a, 0x6ef9, 0x7979, 0x0, 0x0);
        gbc.writeMem(0x34, { 0x2 });
        gbc.writeMem(0x9d4a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xced2);
        EXPECT(gbc.pc(), 0x35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d4a), 0xb3);
        // 02 006B
        gbc.setState(0x1932, 0xeadb, 0xde40, 0xef4f, 0xee50, 0x9cca, 0x0, 0x1);
        gbc.writeMem(0x1932, { 0x2 });
        gbc.writeMem(0xef4f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xeadb);
        EXPECT(gbc.pc(), 0x1933);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef4f), 0xde);
        // 02 006C
        gbc.setState(0x42af, 0x8c1f, 0x4460, 0xa856, 0x49a3, 0xbe53, 0x1, 0x0);
        gbc.writeMem(0x42af, { 0x2 });
        gbc.writeMem(0xa856, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x8c1f);
        EXPECT(gbc.pc(), 0x42b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa856), 0x44);
        // 02 006D
        gbc.setState(0x86da, 0x7cf9, 0xf200, 0xe027, 0x5503, 0xf55c, 0x0, 0x1);
        gbc.writeMem(0x86da, { 0x2 });
        gbc.writeMem(0xe027, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x7cf9);
        EXPECT(gbc.pc(), 0x86db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86da), 0x2);
        EXPECT(gbc.readMem(0xe027), 0xf2);
        // 02 006F
        gbc.setState(0x66aa, 0x4f, 0xec70, 0xa422, 0x6193, 0xad37, 0x1, 0x0);
        gbc.writeMem(0x66aa, { 0x2 });
        gbc.writeMem(0xa422, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x4f);
        EXPECT(gbc.pc(), 0x66ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa422), 0xec);
        // 02 0070
        gbc.setState(0xc6ba, 0x4540, 0x7560, 0x9056, 0xf318, 0x30e7, 0x1, 0x1);
        gbc.writeMem(0x9056, { 0x0 });
        gbc.writeMem(0xc6ba, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x4540);
        EXPECT(gbc.pc(), 0xc6bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9056), 0x75);
        EXPECT(gbc.readMem(0xc6ba), 0x2);
        // 02 0074
        gbc.setState(0xbdaf, 0x2aee, 0x7180, 0x9d53, 0xcae, 0x863c, 0x1, 0x0);
        gbc.writeMem(0x9d53, { 0x0 });
        gbc.writeMem(0xbdaf, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x2aee);
        EXPECT(gbc.pc(), 0xbdb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d53), 0x71);
        EXPECT(gbc.readMem(0xbdaf), 0x2);
        // 02 0077
        gbc.setState(0x14ac, 0x4ab7, 0xf620, 0xdff0, 0xfd19, 0xe7eb, 0x1, 0x0);
        gbc.writeMem(0x14ac, { 0x2 });
        gbc.writeMem(0xdff0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x4ab7);
        EXPECT(gbc.pc(), 0x14ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdff0), 0xf6);
        // 02 0078
        gbc.setState(0xbd08, 0x28a1, 0x30c0, 0xa1ed, 0x6ee1, 0xefb2, 0x0, 0x0);
        gbc.writeMem(0xa1ed, { 0x0 });
        gbc.writeMem(0xbd08, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x28a1);
        EXPECT(gbc.pc(), 0xbd09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1ed), 0x30);
        EXPECT(gbc.readMem(0xbd08), 0x2);
        // 02 0079
        gbc.setState(0x3fe1, 0x83a4, 0xffc0, 0xe676, 0x3144, 0x4d82, 0x1, 0x0);
        gbc.writeMem(0x3fe1, { 0x2 });
        gbc.writeMem(0xe676, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x83a4);
        EXPECT(gbc.pc(), 0x3fe2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe676), 0xff);
        // 02 007B
        gbc.setState(0x5a93, 0xfbc8, 0x6070, 0xbeb1, 0x7de2, 0xcc29, 0x1, 0x0);
        gbc.writeMem(0x5a93, { 0x2 });
        gbc.writeMem(0xbeb1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xfbc8);
        EXPECT(gbc.pc(), 0x5a94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbeb1), 0x60);
        // 02 007E
        gbc.setState(0x131e, 0x5f26, 0xd200, 0xbb7f, 0x49f4, 0x4f7e, 0x0, 0x1);
        gbc.writeMem(0x131e, { 0x2 });
        gbc.writeMem(0xbb7f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x5f26);
        EXPECT(gbc.pc(), 0x131f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb7f), 0xd2);
        // 02 007F
        gbc.setState(0xee17, 0xc742, 0x4360, 0x960d, 0x3c82, 0xda4, 0x1, 0x0);
        gbc.writeMem(0x960d, { 0x0 });
        gbc.writeMem(0xee17, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xc742);
        EXPECT(gbc.pc(), 0xee18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x960d), 0x43);
        EXPECT(gbc.readMem(0xee17), 0x2);
        // 02 0081
        gbc.setState(0x4f3f, 0x80dd, 0x7d60, 0xe89c, 0x7fe5, 0x99dc, 0x1, 0x1);
        gbc.writeMem(0x4f3f, { 0x2 });
        gbc.writeMem(0xe89c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x80dd);
        EXPECT(gbc.pc(), 0x4f40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe89c), 0x7d);
        // 02 0082
        gbc.setState(0x5b94, 0x9e5a, 0x7110, 0xb4bb, 0x6e5b, 0x80d4, 0x0, 0x0);
        gbc.writeMem(0x5b94, { 0x2 });
        gbc.writeMem(0xb4bb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x9e5a);
        EXPECT(gbc.pc(), 0x5b95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4bb), 0x71);
        // 02 0083
        gbc.setState(0x9397, 0xa32a, 0x2530, 0xa5b8, 0x5bc0, 0xb798, 0x1, 0x0);
        gbc.writeMem(0x9397, { 0x2 });
        gbc.writeMem(0xa5b8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xa32a);
        EXPECT(gbc.pc(), 0x9398);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9397), 0x2);
        EXPECT(gbc.readMem(0xa5b8), 0x25);
        // 02 0086
        gbc.setState(0x1a2c, 0x7fb7, 0xe250, 0x98dd, 0x8fa5, 0x4c1e, 0x1, 0x0);
        gbc.writeMem(0x1a2c, { 0x2 });
        gbc.writeMem(0x98dd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x7fb7);
        EXPECT(gbc.pc(), 0x1a2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98dd), 0xe2);
        // 02 0089
        gbc.setState(0x99f, 0xa57b, 0xa010, 0xd239, 0x557, 0xc481, 0x1, 0x0);
        gbc.writeMem(0x99f, { 0x2 });
        gbc.writeMem(0xd239, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xa57b);
        EXPECT(gbc.pc(), 0x9a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd239), 0xa0);
        // 02 008B
        gbc.setState(0x8c7c, 0x5b01, 0xde70, 0xd017, 0xfb7e, 0x83be, 0x1, 0x0);
        gbc.writeMem(0x8c7c, { 0x2 });
        gbc.writeMem(0xd017, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x5b01);
        EXPECT(gbc.pc(), 0x8c7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c7c), 0x2);
        EXPECT(gbc.readMem(0xd017), 0xde);
        // 02 008C
        gbc.setState(0xd52d, 0xf6fa, 0x9920, 0xef6e, 0xac31, 0xe471, 0x0, 0x0);
        gbc.writeMem(0xd52d, { 0x2 });
        gbc.writeMem(0xef6e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xf6fa);
        EXPECT(gbc.pc(), 0xd52e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd52d), 0x2);
        EXPECT(gbc.readMem(0xef6e), 0x99);
        // 02 008D
        gbc.setState(0x654c, 0x2098, 0x9620, 0xf62c, 0x8b2, 0x13fc, 0x0, 0x0);
        gbc.writeMem(0x654c, { 0x2 });
        gbc.writeMem(0xf62c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x2098);
        EXPECT(gbc.pc(), 0x654d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf62c), 0x96);
        // 02 008F
        gbc.setState(0x24d4, 0xf432, 0x9f90, 0x83c6, 0xb5a4, 0x3076, 0x1, 0x0);
        gbc.writeMem(0x24d4, { 0x2 });
        gbc.writeMem(0x83c6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xf432);
        EXPECT(gbc.pc(), 0x24d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83c6), 0x9f);
        // 02 0090
        gbc.setState(0x42ec, 0x970c, 0x1a50, 0xc239, 0x4d82, 0x9426, 0x1, 0x1);
        gbc.writeMem(0x42ec, { 0x2 });
        gbc.writeMem(0xc239, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x970c);
        EXPECT(gbc.pc(), 0x42ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc239), 0x1a);
        // 02 0091
        gbc.setState(0xa093, 0xf761, 0x3f20, 0x8077, 0x49fe, 0x6f3, 0x0, 0x0);
        gbc.writeMem(0x8077, { 0x0 });
        gbc.writeMem(0xa093, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xf761);
        EXPECT(gbc.pc(), 0xa094);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8077), 0x3f);
        EXPECT(gbc.readMem(0xa093), 0x2);
        // 02 0092
        gbc.setState(0x55fd, 0x6ad1, 0x81f0, 0xdaee, 0xa1e4, 0x6dd5, 0x1, 0x1);
        gbc.writeMem(0x55fd, { 0x2 });
        gbc.writeMem(0xdaee, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x6ad1);
        EXPECT(gbc.pc(), 0x55fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdaee), 0x81);
        // 02 0093
        gbc.setState(0x1408, 0x4b0e, 0xfc40, 0xfec0, 0x1220, 0x9c4b, 0x1, 0x1);
        gbc.writeMem(0x1408, { 0x2 });
        gbc.writeMem(0xfec0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x4b0e);
        EXPECT(gbc.pc(), 0x1409);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfec0), 0xfc);
        // 02 0095
        gbc.setState(0x84bd, 0x372d, 0x7000, 0x8156, 0x1b42, 0x7b89, 0x1, 0x1);
        gbc.writeMem(0x8156, { 0x0 });
        gbc.writeMem(0x84bd, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x372d);
        EXPECT(gbc.pc(), 0x84be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8156), 0x70);
        EXPECT(gbc.readMem(0x84bd), 0x2);
        // 02 0097
        gbc.setState(0xc86f, 0xd23a, 0x9230, 0xd2cf, 0x9f28, 0xc2ff, 0x1, 0x1);
        gbc.writeMem(0xc86f, { 0x2 });
        gbc.writeMem(0xd2cf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xd23a);
        EXPECT(gbc.pc(), 0xc870);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc86f), 0x2);
        EXPECT(gbc.readMem(0xd2cf), 0x92);
        // 02 0098
        gbc.setState(0x5861, 0x3fdd, 0xd4a0, 0xf37e, 0x79cc, 0xeae0, 0x1, 0x0);
        gbc.writeMem(0x5861, { 0x2 });
        gbc.writeMem(0xf37e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x3fdd);
        EXPECT(gbc.pc(), 0x5862);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf37e), 0xd4);
        // 02 009A
        gbc.setState(0x149e, 0x1e3b, 0xba30, 0xdd18, 0x102f, 0xa4d7, 0x1, 0x1);
        gbc.writeMem(0x149e, { 0x2 });
        gbc.writeMem(0xdd18, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x1e3b);
        EXPECT(gbc.pc(), 0x149f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd18), 0xba);
        // 02 009B
        gbc.setState(0x8130, 0x4363, 0x8060, 0xc7e0, 0xa8a1, 0xb64e, 0x0, 0x0);
        gbc.writeMem(0x8130, { 0x2 });
        gbc.writeMem(0xc7e0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x4363);
        EXPECT(gbc.pc(), 0x8131);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8130), 0x2);
        EXPECT(gbc.readMem(0xc7e0), 0x80);
        // 02 00A0
        gbc.setState(0xe389, 0x44df, 0x4f10, 0xf0a3, 0x7f68, 0x8398, 0x1, 0x0);
        gbc.writeMem(0xe389, { 0x2 });
        gbc.writeMem(0xf0a3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x44df);
        EXPECT(gbc.pc(), 0xe38a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe389), 0x2);
        EXPECT(gbc.readMem(0xf0a3), 0x4f);
        // 02 00A3
        gbc.setState(0x1bf, 0x647, 0xdd20, 0x8aae, 0xd639, 0xf0de, 0x1, 0x0);
        gbc.writeMem(0x1bf, { 0x2 });
        gbc.writeMem(0x8aae, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x647);
        EXPECT(gbc.pc(), 0x1c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8aae), 0xdd);
        // 02 00A9
        gbc.setState(0x7457, 0xabed, 0x6be0, 0xa99e, 0x6ffc, 0xad62, 0x1, 0x0);
        gbc.writeMem(0x7457, { 0x2 });
        gbc.writeMem(0xa99e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xabed);
        EXPECT(gbc.pc(), 0x7458);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa99e), 0x6b);
        // 02 00AB
        gbc.setState(0xa9be, 0xd10d, 0x80b0, 0xa9eb, 0xb686, 0x5f8d, 0x0, 0x0);
        gbc.writeMem(0xa9be, { 0x2 });
        gbc.writeMem(0xa9eb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xd10d);
        EXPECT(gbc.pc(), 0xa9bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9be), 0x2);
        EXPECT(gbc.readMem(0xa9eb), 0x80);
        // 02 00AE
        gbc.setState(0xe707, 0xefc8, 0x24c0, 0xc1d3, 0x43c9, 0xf52a, 0x0, 0x1);
        gbc.writeMem(0xc1d3, { 0x0 });
        gbc.writeMem(0xe707, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xefc8);
        EXPECT(gbc.pc(), 0xe708);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1d3), 0x24);
        EXPECT(gbc.readMem(0xe707), 0x2);
        // 02 00B0
        gbc.setState(0x1f83, 0x64d3, 0xe000, 0xdb16, 0x1d01, 0xd1a5, 0x1, 0x0);
        gbc.writeMem(0x1f83, { 0x2 });
        gbc.writeMem(0xdb16, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x64d3);
        EXPECT(gbc.pc(), 0x1f84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb16), 0xe0);
        // 02 00B1
        gbc.setState(0x3de7, 0x2cd2, 0x6c90, 0xc2c1, 0x6564, 0x56f0, 0x0, 0x1);
        gbc.writeMem(0x3de7, { 0x2 });
        gbc.writeMem(0xc2c1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x2cd2);
        EXPECT(gbc.pc(), 0x3de8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2c1), 0x6c);
        // 02 00B3
        gbc.setState(0x51ce, 0x7a95, 0xdc80, 0x978c, 0x58eb, 0x9e76, 0x0, 0x0);
        gbc.writeMem(0x51ce, { 0x2 });
        gbc.writeMem(0x978c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x7a95);
        EXPECT(gbc.pc(), 0x51cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x978c), 0xdc);
        // 02 00B5
        gbc.setState(0xa66d, 0xa457, 0x4530, 0x8671, 0xbbf9, 0xb06b, 0x0, 0x0);
        gbc.writeMem(0x8671, { 0x0 });
        gbc.writeMem(0xa66d, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xa457);
        EXPECT(gbc.pc(), 0xa66e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8671), 0x45);
        EXPECT(gbc.readMem(0xa66d), 0x2);
        // 02 00B7
        gbc.setState(0xb37b, 0x9481, 0x2070, 0xc477, 0x3ce, 0x8225, 0x0, 0x1);
        gbc.writeMem(0xb37b, { 0x2 });
        gbc.writeMem(0xc477, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x9481);
        EXPECT(gbc.pc(), 0xb37c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb37b), 0x2);
        EXPECT(gbc.readMem(0xc477), 0x20);
        // 02 00B9
        gbc.setState(0xe281, 0xa1b9, 0x4220, 0xc0c7, 0xe73a, 0x4f25, 0x0, 0x0);
        gbc.writeMem(0xc0c7, { 0x0 });
        gbc.writeMem(0xe281, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xa1b9);
        EXPECT(gbc.pc(), 0xe282);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0c7), 0x42);
        EXPECT(gbc.readMem(0xe281), 0x2);
        // 02 00BB
        gbc.setState(0x4d70, 0x6c31, 0x5520, 0xecb8, 0x8c6, 0xe71f, 0x1, 0x1);
        gbc.writeMem(0x4d70, { 0x2 });
        gbc.writeMem(0xecb8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x6c31);
        EXPECT(gbc.pc(), 0x4d71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecb8), 0x55);
        // 02 00BD
        gbc.setState(0xefff, 0x2778, 0x44d0, 0x8944, 0x7ddc, 0xb623, 0x0, 0x1);
        gbc.writeMem(0x8944, { 0x0 });
        gbc.writeMem(0xefff, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x2778);
        EXPECT(gbc.pc(), 0xf000);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8944), 0x44);
        EXPECT(gbc.readMem(0xefff), 0x2);
        // 02 00BE
        gbc.setState(0x70db, 0x5b96, 0xdff0, 0xfda6, 0x9407, 0xf98f, 0x0, 0x0);
        gbc.writeMem(0x70db, { 0x2 });
        gbc.writeMem(0xfda6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x5b96);
        EXPECT(gbc.pc(), 0x70dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfda6), 0xdf);
        // 02 00C1
        gbc.setState(0xddc1, 0xee6f, 0x2bc0, 0xc62c, 0x9a8f, 0x4e1c, 0x1, 0x0);
        gbc.writeMem(0xc62c, { 0x0 });
        gbc.writeMem(0xddc1, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xee6f);
        EXPECT(gbc.pc(), 0xddc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc62c), 0x2b);
        EXPECT(gbc.readMem(0xddc1), 0x2);
        // 02 00C3
        gbc.setState(0x96ea, 0x6472, 0x87a0, 0x84a3, 0x1e68, 0x6136, 0x1, 0x1);
        gbc.writeMem(0x84a3, { 0x0 });
        gbc.writeMem(0x96ea, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x6472);
        EXPECT(gbc.pc(), 0x96eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84a3), 0x87);
        EXPECT(gbc.readMem(0x96ea), 0x2);
        // 02 00C4
        gbc.setState(0xe540, 0x8381, 0x86e0, 0xca45, 0xdfb3, 0x67b2, 0x1, 0x0);
        gbc.writeMem(0xca45, { 0x0 });
        gbc.writeMem(0xe540, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x8381);
        EXPECT(gbc.pc(), 0xe541);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca45), 0x86);
        EXPECT(gbc.readMem(0xe540), 0x2);
        // 02 00CA
        gbc.setState(0x3c50, 0x9d97, 0xe580, 0xeaf1, 0x7b1c, 0x912d, 0x1, 0x0);
        gbc.writeMem(0x3c50, { 0x2 });
        gbc.writeMem(0xeaf1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x9d97);
        EXPECT(gbc.pc(), 0x3c51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeaf1), 0xe5);
        // 02 00CD
        gbc.setState(0xede6, 0x2e43, 0x66d0, 0xc6dd, 0x1f78, 0xb476, 0x1, 0x1);
        gbc.writeMem(0xc6dd, { 0x0 });
        gbc.writeMem(0xede6, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x2e43);
        EXPECT(gbc.pc(), 0xede7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6dd), 0x66);
        EXPECT(gbc.readMem(0xede6), 0x2);
        // 02 00CF
        gbc.setState(0x5de, 0x31d3, 0xb690, 0x901c, 0x51e5, 0x3b5, 0x1, 0x1);
        gbc.writeMem(0x5de, { 0x2 });
        gbc.writeMem(0x901c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x31d3);
        EXPECT(gbc.pc(), 0x5df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x901c), 0xb6);
        // 02 00D0
        gbc.setState(0xbdcc, 0x601a, 0xbe60, 0xce3a, 0x5cef, 0x7b0c, 0x1, 0x0);
        gbc.writeMem(0xbdcc, { 0x2 });
        gbc.writeMem(0xce3a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x601a);
        EXPECT(gbc.pc(), 0xbdcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdcc), 0x2);
        EXPECT(gbc.readMem(0xce3a), 0xbe);
        // 02 00D1
        gbc.setState(0x49e2, 0xd8cd, 0x8960, 0xb4b6, 0x7056, 0xaa50, 0x0, 0x1);
        gbc.writeMem(0x49e2, { 0x2 });
        gbc.writeMem(0xb4b6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xd8cd);
        EXPECT(gbc.pc(), 0x49e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4b6), 0x89);
        // 02 00D2
        gbc.setState(0x5fdc, 0x8dc7, 0x1d00, 0xd9ba, 0x6eac, 0x1d65, 0x0, 0x1);
        gbc.writeMem(0x5fdc, { 0x2 });
        gbc.writeMem(0xd9ba, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x8dc7);
        EXPECT(gbc.pc(), 0x5fdd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9ba), 0x1d);
        // 02 00D4
        gbc.setState(0x15be, 0x638, 0x94e0, 0xacd5, 0x8c65, 0x6211, 0x0, 0x0);
        gbc.writeMem(0x15be, { 0x2 });
        gbc.writeMem(0xacd5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x638);
        EXPECT(gbc.pc(), 0x15bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacd5), 0x94);
        // 02 00D5
        gbc.setState(0x41f9, 0x7a8b, 0x4290, 0xcc57, 0x11d8, 0x7d8c, 0x1, 0x1);
        gbc.writeMem(0x41f9, { 0x2 });
        gbc.writeMem(0xcc57, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x7a8b);
        EXPECT(gbc.pc(), 0x41fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc57), 0x42);
        // 02 00D6
        gbc.setState(0x81bf, 0xee3, 0x57f0, 0xb4ee, 0x324d, 0x147b, 0x0, 0x1);
        gbc.writeMem(0x81bf, { 0x2 });
        gbc.writeMem(0xb4ee, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xee3);
        EXPECT(gbc.pc(), 0x81c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81bf), 0x2);
        EXPECT(gbc.readMem(0xb4ee), 0x57);
        // 02 00D8
        gbc.setState(0x8b2c, 0x6701, 0xc7d0, 0xd578, 0x8a0e, 0x2b0e, 0x0, 0x0);
        gbc.writeMem(0x8b2c, { 0x2 });
        gbc.writeMem(0xd578, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x6701);
        EXPECT(gbc.pc(), 0x8b2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b2c), 0x2);
        EXPECT(gbc.readMem(0xd578), 0xc7);
        // 02 00DB
        gbc.setState(0x8aa9, 0x7bb5, 0xc080, 0xdf0c, 0xc9c6, 0xa990, 0x0, 0x0);
        gbc.writeMem(0x8aa9, { 0x2 });
        gbc.writeMem(0xdf0c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x7bb5);
        EXPECT(gbc.pc(), 0x8aaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8aa9), 0x2);
        EXPECT(gbc.readMem(0xdf0c), 0xc0);
        // 02 00DC
        gbc.setState(0x66bb, 0x207c, 0x9c0, 0xf598, 0x860d, 0x13f6, 0x0, 0x0);
        gbc.writeMem(0x66bb, { 0x2 });
        gbc.writeMem(0xf598, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x207c);
        EXPECT(gbc.pc(), 0x66bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf598), 0x9);
        // 02 00DE
        gbc.setState(0x20cb, 0xbcf9, 0xb320, 0xff4f, 0xde18, 0x6318, 0x0, 0x1);
        gbc.writeMem(0x20cb, { 0x2 });
        gbc.writeMem(0xff4f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xbcf9);
        EXPECT(gbc.pc(), 0x20cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff4f), 0xb3);
        // 02 00E1
        gbc.setState(0x90ef, 0x7eff, 0xc580, 0xbbb7, 0x2932, 0x59a4, 0x1, 0x0);
        gbc.writeMem(0x90ef, { 0x2 });
        gbc.writeMem(0xbbb7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x7eff);
        EXPECT(gbc.pc(), 0x90f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90ef), 0x2);
        EXPECT(gbc.readMem(0xbbb7), 0xc5);
        // 02 00E3
        gbc.setState(0x35d1, 0x5e47, 0xfd60, 0xf026, 0x69af, 0x21c4, 0x1, 0x0);
        gbc.writeMem(0x35d1, { 0x2 });
        gbc.writeMem(0xf026, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x5e47);
        EXPECT(gbc.pc(), 0x35d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf026), 0xfd);
        // 02 00E4
        gbc.setState(0xeb3c, 0x5488, 0x7a0, 0x969a, 0x4ef, 0xa845, 0x0, 0x1);
        gbc.writeMem(0x969a, { 0x0 });
        gbc.writeMem(0xeb3c, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x5488);
        EXPECT(gbc.pc(), 0xeb3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x969a), 0x7);
        EXPECT(gbc.readMem(0xeb3c), 0x2);
        // 02 00E5
        gbc.setState(0x92ce, 0xf493, 0x71d0, 0xb79a, 0x526a, 0x86b, 0x1, 0x1);
        gbc.writeMem(0x92ce, { 0x2 });
        gbc.writeMem(0xb79a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xf493);
        EXPECT(gbc.pc(), 0x92cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92ce), 0x2);
        EXPECT(gbc.readMem(0xb79a), 0x71);
        // 02 00EA
        gbc.setState(0x5fb3, 0x5e43, 0x40f0, 0xab61, 0xc1c5, 0xe598, 0x0, 0x0);
        gbc.writeMem(0x5fb3, { 0x2 });
        gbc.writeMem(0xab61, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x5e43);
        EXPECT(gbc.pc(), 0x5fb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab61), 0x40);
        // 02 00F0
        gbc.setState(0xbed2, 0x9c38, 0xc150, 0x98f6, 0xe3ff, 0xc086, 0x1, 0x1);
        gbc.writeMem(0x98f6, { 0x0 });
        gbc.writeMem(0xbed2, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x9c38);
        EXPECT(gbc.pc(), 0xbed3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98f6), 0xc1);
        EXPECT(gbc.readMem(0xbed2), 0x2);
        // 02 00F2
        gbc.setState(0x6661, 0x6abe, 0xe940, 0xee90, 0x95f2, 0x8862, 0x0, 0x0);
        gbc.writeMem(0x6661, { 0x2 });
        gbc.writeMem(0xee90, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x6abe);
        EXPECT(gbc.pc(), 0x6662);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee90), 0xe9);
        // 02 00F3
        gbc.setState(0x87d8, 0x5ff4, 0xc350, 0x9f77, 0x4ce5, 0x1b03, 0x1, 0x0);
        gbc.writeMem(0x87d8, { 0x2 });
        gbc.writeMem(0x9f77, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x5ff4);
        EXPECT(gbc.pc(), 0x87d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87d8), 0x2);
        EXPECT(gbc.readMem(0x9f77), 0xc3);
        // 02 00F5
        gbc.setState(0x2b8b, 0xa50, 0x7f30, 0x98bb, 0xb2a9, 0x833e, 0x1, 0x1);
        gbc.writeMem(0x2b8b, { 0x2 });
        gbc.writeMem(0x98bb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xa50);
        EXPECT(gbc.pc(), 0x2b8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98bb), 0x7f);
        // 02 00F6
        gbc.setState(0xe60b, 0x975a, 0x4620, 0xa1da, 0x3b78, 0xf91f, 0x1, 0x1);
        gbc.writeMem(0xa1da, { 0x0 });
        gbc.writeMem(0xe60b, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x975a);
        EXPECT(gbc.pc(), 0xe60c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1da), 0x46);
        EXPECT(gbc.readMem(0xe60b), 0x2);
        // 02 00F7
        gbc.setState(0xee3a, 0xeab0, 0xb300, 0xbcea, 0x9eea, 0xdd1, 0x1, 0x0);
        gbc.writeMem(0xbcea, { 0x0 });
        gbc.writeMem(0xee3a, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xeab0);
        EXPECT(gbc.pc(), 0xee3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcea), 0xb3);
        EXPECT(gbc.readMem(0xee3a), 0x2);
        // 02 00F8
        gbc.setState(0x183f, 0xfcd8, 0x8200, 0xc837, 0xdd0e, 0xb04e, 0x1, 0x1);
        gbc.writeMem(0x183f, { 0x2 });
        gbc.writeMem(0xc837, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xfcd8);
        EXPECT(gbc.pc(), 0x1840);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc837), 0x82);
        // 02 00FC
        gbc.setState(0x85c, 0x8513, 0x9670, 0xa163, 0xb718, 0xf078, 0x1, 0x1);
        gbc.writeMem(0x85c, { 0x2 });
        gbc.writeMem(0xa163, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x8513);
        EXPECT(gbc.pc(), 0x85d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa163), 0x96);
        // 02 00FF
        gbc.setState(0x52cf, 0x2bed, 0xb7e0, 0xb708, 0x769f, 0x65d, 0x0, 0x1);
        gbc.writeMem(0x52cf, { 0x2 });
        gbc.writeMem(0xb708, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x2bed);
        EXPECT(gbc.pc(), 0x52d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb708), 0xb7);
        // 02 0102
        gbc.setState(0x2e4d, 0xc4d6, 0xd730, 0xeeb5, 0xb1ad, 0x7edc, 0x1, 0x0);
        gbc.writeMem(0x2e4d, { 0x2 });
        gbc.writeMem(0xeeb5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xc4d6);
        EXPECT(gbc.pc(), 0x2e4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeeb5), 0xd7);
        // 02 0103
        gbc.setState(0x48cc, 0x5d38, 0xfc10, 0xe8e9, 0x11b2, 0x8b4d, 0x0, 0x1);
        gbc.writeMem(0x48cc, { 0x2 });
        gbc.writeMem(0xe8e9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x5d38);
        EXPECT(gbc.pc(), 0x48cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8e9), 0xfc);
        // 02 0104
        gbc.setState(0xc891, 0x63ca, 0x87a0, 0xd6d7, 0x96ba, 0x911a, 0x1, 0x0);
        gbc.writeMem(0xc891, { 0x2 });
        gbc.writeMem(0xd6d7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x63ca);
        EXPECT(gbc.pc(), 0xc892);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc891), 0x2);
        EXPECT(gbc.readMem(0xd6d7), 0x87);
        // 02 0106
        gbc.setState(0xbeff, 0x5dc1, 0x4320, 0x8d78, 0x6c0d, 0xf8e7, 0x0, 0x1);
        gbc.writeMem(0x8d78, { 0x0 });
        gbc.writeMem(0xbeff, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x5dc1);
        EXPECT(gbc.pc(), 0xbf00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d78), 0x43);
        EXPECT(gbc.readMem(0xbeff), 0x2);
        // 02 0108
        gbc.setState(0x947f, 0xbaf4, 0x5630, 0xe106, 0xc573, 0x625f, 0x0, 0x1);
        gbc.writeMem(0x947f, { 0x2 });
        gbc.writeMem(0xe106, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xbaf4);
        EXPECT(gbc.pc(), 0x9480);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x947f), 0x2);
        EXPECT(gbc.readMem(0xe106), 0x56);
        // 02 010A
        gbc.setState(0x9c76, 0x589f, 0xb6d0, 0xc994, 0x79e2, 0x49e7, 0x0, 0x1);
        gbc.writeMem(0x9c76, { 0x2 });
        gbc.writeMem(0xc994, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x589f);
        EXPECT(gbc.pc(), 0x9c77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c76), 0x2);
        EXPECT(gbc.readMem(0xc994), 0xb6);
        // 02 0112
        gbc.setState(0xc7c, 0xa42e, 0x9610, 0x86b8, 0xe9d3, 0xbccc, 0x0, 0x1);
        gbc.writeMem(0xc7c, { 0x2 });
        gbc.writeMem(0x86b8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xa42e);
        EXPECT(gbc.pc(), 0xc7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86b8), 0x96);
        // 02 0113
        gbc.setState(0xd723, 0x1a64, 0x3ec0, 0x9628, 0xc07e, 0xcd1e, 0x1, 0x0);
        gbc.writeMem(0x9628, { 0x0 });
        gbc.writeMem(0xd723, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x1a64);
        EXPECT(gbc.pc(), 0xd724);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9628), 0x3e);
        EXPECT(gbc.readMem(0xd723), 0x2);
        // 02 0117
        gbc.setState(0x3b54, 0x5650, 0x88a0, 0xa6a6, 0x2c05, 0xc32d, 0x0, 0x1);
        gbc.writeMem(0x3b54, { 0x2 });
        gbc.writeMem(0xa6a6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x5650);
        EXPECT(gbc.pc(), 0x3b55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6a6), 0x88);
        // 02 011A
        gbc.setState(0x64a0, 0x988a, 0xfec0, 0xdf0a, 0x6d19, 0xd021, 0x0, 0x0);
        gbc.writeMem(0x64a0, { 0x2 });
        gbc.writeMem(0xdf0a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x988a);
        EXPECT(gbc.pc(), 0x64a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf0a), 0xfe);
        // 02 011B
        gbc.setState(0x799a, 0xfcba, 0x9900, 0xf308, 0xbf01, 0x2565, 0x0, 0x0);
        gbc.writeMem(0x799a, { 0x2 });
        gbc.writeMem(0xf308, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xfcba);
        EXPECT(gbc.pc(), 0x799b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf308), 0x99);
        // 02 011C
        gbc.setState(0xab18, 0x5a14, 0x7180, 0x8c49, 0x9775, 0x81ea, 0x0, 0x1);
        gbc.writeMem(0x8c49, { 0x0 });
        gbc.writeMem(0xab18, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x5a14);
        EXPECT(gbc.pc(), 0xab19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c49), 0x71);
        EXPECT(gbc.readMem(0xab18), 0x2);
        // 02 011E
        gbc.setState(0xc98b, 0xa912, 0xf940, 0xbca8, 0x57b5, 0xd4a9, 0x1, 0x0);
        gbc.writeMem(0xbca8, { 0x0 });
        gbc.writeMem(0xc98b, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xa912);
        EXPECT(gbc.pc(), 0xc98c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbca8), 0xf9);
        EXPECT(gbc.readMem(0xc98b), 0x2);
        // 02 0122
        gbc.setState(0x9cec, 0xe501, 0x4f40, 0xc935, 0x1395, 0xe4da, 0x1, 0x0);
        gbc.writeMem(0x9cec, { 0x2 });
        gbc.writeMem(0xc935, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xe501);
        EXPECT(gbc.pc(), 0x9ced);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cec), 0x2);
        EXPECT(gbc.readMem(0xc935), 0x4f);
        // 02 0123
        gbc.setState(0x77b6, 0x9152, 0x6250, 0xbec0, 0x3715, 0xc65a, 0x1, 0x0);
        gbc.writeMem(0x77b6, { 0x2 });
        gbc.writeMem(0xbec0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x9152);
        EXPECT(gbc.pc(), 0x77b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbec0), 0x62);
        // 02 0125
        gbc.setState(0x3cce, 0x1836, 0x8ee0, 0xe14e, 0xf9, 0xb99, 0x0, 0x1);
        gbc.writeMem(0x3cce, { 0x2 });
        gbc.writeMem(0xe14e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x1836);
        EXPECT(gbc.pc(), 0x3ccf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe14e), 0x8e);
        // 02 0127
        gbc.setState(0x8e76, 0x726f, 0x50f0, 0xf886, 0xc237, 0xadd0, 0x1, 0x0);
        gbc.writeMem(0x8e76, { 0x2 });
        gbc.writeMem(0xf886, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x726f);
        EXPECT(gbc.pc(), 0x8e77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e76), 0x2);
        EXPECT(gbc.readMem(0xf886), 0x50);
        // 02 012A
        gbc.setState(0xcc5b, 0x7669, 0xf330, 0xd7bb, 0x826, 0x6d29, 0x0, 0x0);
        gbc.writeMem(0xcc5b, { 0x2 });
        gbc.writeMem(0xd7bb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x7669);
        EXPECT(gbc.pc(), 0xcc5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc5b), 0x2);
        EXPECT(gbc.readMem(0xd7bb), 0xf3);
        // 02 012C
        gbc.setState(0x6817, 0xf6a4, 0xe200, 0xc4e6, 0xe798, 0x474b, 0x1, 0x0);
        gbc.writeMem(0x6817, { 0x2 });
        gbc.writeMem(0xc4e6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xf6a4);
        EXPECT(gbc.pc(), 0x6818);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4e6), 0xe2);
        // 02 012D
        gbc.setState(0xb861, 0x8d31, 0xec90, 0xc6bc, 0x4818, 0x5f87, 0x0, 0x1);
        gbc.writeMem(0xb861, { 0x2 });
        gbc.writeMem(0xc6bc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x8d31);
        EXPECT(gbc.pc(), 0xb862);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb861), 0x2);
        EXPECT(gbc.readMem(0xc6bc), 0xec);
        // 02 012F
        gbc.setState(0x43e8, 0x3b21, 0x4e0, 0xffd9, 0x20d0, 0xe477, 0x0, 0x0);
        gbc.writeMem(0x43e8, { 0x2 });
        gbc.writeMem(0xffd9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x3b21);
        EXPECT(gbc.pc(), 0x43e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffd9), 0x4);
        // 02 0132
        gbc.setState(0xeff3, 0x8db0, 0x6de0, 0xec41, 0x7c88, 0x1b44, 0x1, 0x0);
        gbc.writeMem(0xec41, { 0x0 });
        gbc.writeMem(0xeff3, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x8db0);
        EXPECT(gbc.pc(), 0xeff4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec41), 0x6d);
        EXPECT(gbc.readMem(0xeff3), 0x2);
        // 02 0134
        gbc.setState(0x331d, 0xdb38, 0x2e0, 0xeecb, 0x6b34, 0x7376, 0x1, 0x0);
        gbc.writeMem(0x331d, { 0x2 });
        gbc.writeMem(0xeecb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xdb38);
        EXPECT(gbc.pc(), 0x331e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeecb), 0x2);
        // 02 0135
        gbc.setState(0xef7e, 0x24b5, 0x7b60, 0xffd7, 0x6aa8, 0xf0ff, 0x1, 0x0);
        gbc.writeMem(0xef7e, { 0x2 });
        gbc.writeMem(0xffd7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x24b5);
        EXPECT(gbc.pc(), 0xef7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef7e), 0x2);
        EXPECT(gbc.readMem(0xffd7), 0x7b);
        // 02 0136
        gbc.setState(0x6ef8, 0x28fd, 0x5490, 0x9811, 0x7ec, 0x5925, 0x1, 0x0);
        gbc.writeMem(0x6ef8, { 0x2 });
        gbc.writeMem(0x9811, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x28fd);
        EXPECT(gbc.pc(), 0x6ef9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9811), 0x54);
        // 02 0137
        gbc.setState(0xc832, 0xf26d, 0xd830, 0xcb5e, 0x6796, 0x8cb0, 0x1, 0x0);
        gbc.writeMem(0xc832, { 0x2 });
        gbc.writeMem(0xcb5e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xf26d);
        EXPECT(gbc.pc(), 0xc833);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc832), 0x2);
        EXPECT(gbc.readMem(0xcb5e), 0xd8);
        // 02 0138
        gbc.setState(0x62f4, 0x8f01, 0xd950, 0x8230, 0xcd20, 0xb016, 0x0, 0x0);
        gbc.writeMem(0x62f4, { 0x2 });
        gbc.writeMem(0x8230, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x8f01);
        EXPECT(gbc.pc(), 0x62f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8230), 0xd9);
        // 02 0139
        gbc.setState(0x5274, 0x5b5f, 0xc7f0, 0xf6cc, 0x5bf6, 0x787c, 0x1, 0x0);
        gbc.writeMem(0x5274, { 0x2 });
        gbc.writeMem(0xf6cc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x5b5f);
        EXPECT(gbc.pc(), 0x5275);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf6cc), 0xc7);
        // 02 013B
        gbc.setState(0x7e97, 0x5f50, 0xaab0, 0xffb1, 0xdce1, 0x12eb, 0x0, 0x0);
        gbc.writeMem(0x7e97, { 0x2 });
        gbc.writeMem(0xffb1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x5f50);
        EXPECT(gbc.pc(), 0x7e98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffb1), 0xaa);
        // 02 013F
        gbc.setState(0x4d5b, 0x37d9, 0x5f60, 0xebb1, 0x52e1, 0x7c8c, 0x0, 0x1);
        gbc.writeMem(0x4d5b, { 0x2 });
        gbc.writeMem(0xebb1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x37d9);
        EXPECT(gbc.pc(), 0x4d5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebb1), 0x5f);
        // 02 0141
        gbc.setState(0x602, 0xa87, 0x9920, 0x93b8, 0xca18, 0x44d3, 0x0, 0x0);
        gbc.writeMem(0x602, { 0x2 });
        gbc.writeMem(0x93b8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xa87);
        EXPECT(gbc.pc(), 0x603);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93b8), 0x99);
        // 02 0143
        gbc.setState(0x22c9, 0x5769, 0x6b10, 0xf928, 0x59c4, 0x99c1, 0x1, 0x0);
        gbc.writeMem(0x22c9, { 0x2 });
        gbc.writeMem(0xf928, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x5769);
        EXPECT(gbc.pc(), 0x22ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf928), 0x6b);
        // 02 0145
        gbc.setState(0xe43e, 0x3fea, 0x210, 0xad30, 0x62a0, 0xbf4c, 0x1, 0x0);
        gbc.writeMem(0xad30, { 0x0 });
        gbc.writeMem(0xe43e, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x3fea);
        EXPECT(gbc.pc(), 0xe43f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad30), 0x2);
        EXPECT(gbc.readMem(0xe43e), 0x2);
        // 02 0147
        gbc.setState(0x8f98, 0xd2e3, 0x9b50, 0x9272, 0xe69f, 0x9932, 0x0, 0x1);
        gbc.writeMem(0x8f98, { 0x2 });
        gbc.writeMem(0x9272, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xd2e3);
        EXPECT(gbc.pc(), 0x8f99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f98), 0x2);
        EXPECT(gbc.readMem(0x9272), 0x9b);
        // 02 014B
        gbc.setState(0x6e5c, 0xd658, 0x8790, 0xdd19, 0x526b, 0x212b, 0x0, 0x0);
        gbc.writeMem(0x6e5c, { 0x2 });
        gbc.writeMem(0xdd19, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xd658);
        EXPECT(gbc.pc(), 0x6e5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd19), 0x87);
        // 02 014C
        gbc.setState(0x5696, 0x14e9, 0x7300, 0xab83, 0x69b2, 0xb872, 0x0, 0x1);
        gbc.writeMem(0x5696, { 0x2 });
        gbc.writeMem(0xab83, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x14e9);
        EXPECT(gbc.pc(), 0x5697);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab83), 0x73);
        // 02 014E
        gbc.setState(0x1423, 0x7232, 0xe2b0, 0x9171, 0x2d90, 0xfa78, 0x1, 0x1);
        gbc.writeMem(0x1423, { 0x2 });
        gbc.writeMem(0x9171, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x7232);
        EXPECT(gbc.pc(), 0x1424);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9171), 0xe2);
        // 02 014F
        gbc.setState(0xc46, 0xa39a, 0x7700, 0xdf57, 0xd23e, 0x2625, 0x0, 0x0);
        gbc.writeMem(0xc46, { 0x2 });
        gbc.writeMem(0xdf57, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xa39a);
        EXPECT(gbc.pc(), 0xc47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf57), 0x77);
        // 02 0150
        gbc.setState(0x1323, 0xeb57, 0x9ee0, 0xf0ad, 0xaebc, 0x2261, 0x1, 0x1);
        gbc.writeMem(0x1323, { 0x2 });
        gbc.writeMem(0xf0ad, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xeb57);
        EXPECT(gbc.pc(), 0x1324);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf0ad), 0x9e);
        // 02 0153
        gbc.setState(0x7335, 0xad7b, 0xeab0, 0xa50e, 0xc420, 0xca32, 0x1, 0x1);
        gbc.writeMem(0x7335, { 0x2 });
        gbc.writeMem(0xa50e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xad7b);
        EXPECT(gbc.pc(), 0x7336);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa50e), 0xea);
        // 02 0154
        gbc.setState(0x46a7, 0x3593, 0x40d0, 0xccce, 0x7c27, 0xac15, 0x1, 0x1);
        gbc.writeMem(0x46a7, { 0x2 });
        gbc.writeMem(0xccce, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x3593);
        EXPECT(gbc.pc(), 0x46a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccce), 0x40);
        // 02 0156
        gbc.setState(0xb075, 0x163, 0xb890, 0xa62e, 0xa82, 0x7da2, 0x0, 0x0);
        gbc.writeMem(0xa62e, { 0x0 });
        gbc.writeMem(0xb075, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x163);
        EXPECT(gbc.pc(), 0xb076);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa62e), 0xb8);
        EXPECT(gbc.readMem(0xb075), 0x2);
        // 02 0157
        gbc.setState(0xdca1, 0xe735, 0xa5f0, 0x93ed, 0x5177, 0xb1a0, 0x0, 0x1);
        gbc.writeMem(0x93ed, { 0x0 });
        gbc.writeMem(0xdca1, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xe735);
        EXPECT(gbc.pc(), 0xdca2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93ed), 0xa5);
        EXPECT(gbc.readMem(0xdca1), 0x2);
        // 02 015C
        gbc.setState(0x1a29, 0xf969, 0x7d0, 0xb74b, 0x144, 0x3666, 0x1, 0x0);
        gbc.writeMem(0x1a29, { 0x2 });
        gbc.writeMem(0xb74b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xf969);
        EXPECT(gbc.pc(), 0x1a2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb74b), 0x7);
        // 02 015D
        gbc.setState(0x37bb, 0xc0f2, 0xbe00, 0xd61d, 0xd062, 0x2657, 0x0, 0x0);
        gbc.writeMem(0x37bb, { 0x2 });
        gbc.writeMem(0xd61d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xc0f2);
        EXPECT(gbc.pc(), 0x37bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd61d), 0xbe);
        // 02 015F
        gbc.setState(0x7af6, 0x1b6, 0xcf60, 0x8896, 0x622, 0x3155, 0x1, 0x0);
        gbc.writeMem(0x7af6, { 0x2 });
        gbc.writeMem(0x8896, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x1b6);
        EXPECT(gbc.pc(), 0x7af7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8896), 0xcf);
        // 02 0162
        gbc.setState(0xc057, 0xd9b8, 0x3470, 0xfea2, 0x80c9, 0xfa18, 0x0, 0x0);
        gbc.writeMem(0xc057, { 0x2 });
        gbc.writeMem(0xfea2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xd9b8);
        EXPECT(gbc.pc(), 0xc058);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc057), 0x2);
        EXPECT(gbc.readMem(0xfea2), 0x34);
        // 02 0163
        gbc.setState(0x8e65, 0xdee7, 0x4ae0, 0xd021, 0x8fef, 0x5917, 0x0, 0x1);
        gbc.writeMem(0x8e65, { 0x2 });
        gbc.writeMem(0xd021, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xdee7);
        EXPECT(gbc.pc(), 0x8e66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e65), 0x2);
        EXPECT(gbc.readMem(0xd021), 0x4a);
        // 02 0164
        gbc.setState(0x33eb, 0x4a5c, 0x7af0, 0xdd50, 0xfd6e, 0x71bb, 0x1, 0x1);
        gbc.writeMem(0x33eb, { 0x2 });
        gbc.writeMem(0xdd50, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x4a5c);
        EXPECT(gbc.pc(), 0x33ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd50), 0x7a);
        // 02 0165
        gbc.setState(0x1298, 0xa253, 0x6530, 0x89d9, 0x9459, 0xd26e, 0x0, 0x0);
        gbc.writeMem(0x1298, { 0x2 });
        gbc.writeMem(0x89d9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xa253);
        EXPECT(gbc.pc(), 0x1299);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89d9), 0x65);
        // 02 0167
        gbc.setState(0x1945, 0x812e, 0x2190, 0x8642, 0x3b11, 0x39b0, 0x0, 0x0);
        gbc.writeMem(0x1945, { 0x2 });
        gbc.writeMem(0x8642, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x812e);
        EXPECT(gbc.pc(), 0x1946);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8642), 0x21);
        // 02 0168
        gbc.setState(0x29e8, 0x7aea, 0xb8d0, 0xfe63, 0xa470, 0x7758, 0x1, 0x0);
        gbc.writeMem(0x29e8, { 0x2 });
        gbc.writeMem(0xfe63, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x7aea);
        EXPECT(gbc.pc(), 0x29e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfe63), 0xb8);
        // 02 016B
        gbc.setState(0x79f2, 0x43d2, 0x95b0, 0xc12f, 0x520d, 0x2398, 0x1, 0x1);
        gbc.writeMem(0x79f2, { 0x2 });
        gbc.writeMem(0xc12f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x43d2);
        EXPECT(gbc.pc(), 0x79f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc12f), 0x95);
        // 02 016C
        gbc.setState(0x78d9, 0x4ff6, 0x2ab0, 0xa01b, 0x8b43, 0xa1a2, 0x0, 0x0);
        gbc.writeMem(0x78d9, { 0x2 });
        gbc.writeMem(0xa01b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x4ff6);
        EXPECT(gbc.pc(), 0x78da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa01b), 0x2a);
        // 02 016D
        gbc.setState(0x4ed3, 0x589a, 0x5db0, 0xfa46, 0xfe2b, 0x7fab, 0x0, 0x1);
        gbc.writeMem(0x4ed3, { 0x2 });
        gbc.writeMem(0xfa46, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x589a);
        EXPECT(gbc.pc(), 0x4ed4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfa46), 0x5d);
        // 02 016E
        gbc.setState(0x79b3, 0xd769, 0xd200, 0xb489, 0x430a, 0xf49c, 0x1, 0x1);
        gbc.writeMem(0x79b3, { 0x2 });
        gbc.writeMem(0xb489, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xd769);
        EXPECT(gbc.pc(), 0x79b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb489), 0xd2);
        // 02 016F
        gbc.setState(0x4173, 0x1c31, 0xbd80, 0xc00e, 0x11b7, 0x1aaa, 0x1, 0x1);
        gbc.writeMem(0x4173, { 0x2 });
        gbc.writeMem(0xc00e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x1c31);
        EXPECT(gbc.pc(), 0x4174);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc00e), 0xbd);
        // 02 0170
        gbc.setState(0x1d43, 0x5a6, 0x4770, 0xa1d6, 0x1c21, 0xdf63, 0x0, 0x1);
        gbc.writeMem(0x1d43, { 0x2 });
        gbc.writeMem(0xa1d6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x5a6);
        EXPECT(gbc.pc(), 0x1d44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1d6), 0x47);
        // 02 0172
        gbc.setState(0xbec5, 0x42f5, 0x60, 0xa8ef, 0x69d9, 0xafb9, 0x1, 0x1);
        gbc.writeMem(0xa8ef, { 0x0 });
        gbc.writeMem(0xbec5, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x42f5);
        EXPECT(gbc.pc(), 0xbec6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8ef), 0x0);
        EXPECT(gbc.readMem(0xbec5), 0x2);
        // 02 0173
        gbc.setState(0x983, 0x430, 0x7c90, 0xeaa9, 0xbc41, 0xbb38, 0x1, 0x0);
        gbc.writeMem(0x983, { 0x2 });
        gbc.writeMem(0xeaa9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x430);
        EXPECT(gbc.pc(), 0x984);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeaa9), 0x7c);
        // 02 0175
        gbc.setState(0x5da1, 0x79b6, 0x1040, 0xddcf, 0x8075, 0x8ea9, 0x1, 0x1);
        gbc.writeMem(0x5da1, { 0x2 });
        gbc.writeMem(0xddcf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x79b6);
        EXPECT(gbc.pc(), 0x5da2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddcf), 0x10);
        // 02 0177
        gbc.setState(0x717, 0x3f69, 0xf7f0, 0xce25, 0x5624, 0x82f9, 0x0, 0x0);
        gbc.writeMem(0x717, { 0x2 });
        gbc.writeMem(0xce25, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x3f69);
        EXPECT(gbc.pc(), 0x718);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce25), 0xf7);
        // 02 017E
        gbc.setState(0x6def, 0x5d5b, 0xd30, 0xfd75, 0x12e3, 0x42d0, 0x0, 0x0);
        gbc.writeMem(0x6def, { 0x2 });
        gbc.writeMem(0xfd75, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x5d5b);
        EXPECT(gbc.pc(), 0x6df0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfd75), 0xd);
        // 02 0182
        gbc.setState(0x361e, 0xd206, 0x6380, 0xbbaa, 0x537b, 0x70a0, 0x0, 0x0);
        gbc.writeMem(0x361e, { 0x2 });
        gbc.writeMem(0xbbaa, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xd206);
        EXPECT(gbc.pc(), 0x361f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbaa), 0x63);
        // 02 0183
        gbc.setState(0xccf0, 0xe320, 0x8ef0, 0xbd2b, 0x652c, 0x558f, 0x1, 0x1);
        gbc.writeMem(0xbd2b, { 0x0 });
        gbc.writeMem(0xccf0, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xe320);
        EXPECT(gbc.pc(), 0xccf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd2b), 0x8e);
        EXPECT(gbc.readMem(0xccf0), 0x2);
        // 02 0184
        gbc.setState(0x956b, 0x36e5, 0x2270, 0xeddc, 0x5a7e, 0x73a5, 0x1, 0x1);
        gbc.writeMem(0x956b, { 0x2 });
        gbc.writeMem(0xeddc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x36e5);
        EXPECT(gbc.pc(), 0x956c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x956b), 0x2);
        EXPECT(gbc.readMem(0xeddc), 0x22);
        // 02 0186
        gbc.setState(0xd80c, 0xf849, 0xadf0, 0xd7d1, 0xc6c4, 0xf2e1, 0x1, 0x1);
        gbc.writeMem(0xd7d1, { 0x0 });
        gbc.writeMem(0xd80c, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xf849);
        EXPECT(gbc.pc(), 0xd80d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7d1), 0xad);
        EXPECT(gbc.readMem(0xd80c), 0x2);
        // 02 0187
        gbc.setState(0x1daf, 0x1f0c, 0xe290, 0xaeae, 0x69f2, 0x211e, 0x0, 0x1);
        gbc.writeMem(0x1daf, { 0x2 });
        gbc.writeMem(0xaeae, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x1f0c);
        EXPECT(gbc.pc(), 0x1db0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaeae), 0xe2);
        // 02 018A
        gbc.setState(0x9e23, 0x702e, 0xca40, 0x8dbb, 0x1665, 0x711e, 0x0, 0x0);
        gbc.writeMem(0x8dbb, { 0x0 });
        gbc.writeMem(0x9e23, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x702e);
        EXPECT(gbc.pc(), 0x9e24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dbb), 0xca);
        EXPECT(gbc.readMem(0x9e23), 0x2);
        // 02 018B
        gbc.setState(0x2e1c, 0xad3f, 0xa0, 0xc2d8, 0x8537, 0xbd06, 0x1, 0x0);
        gbc.writeMem(0x2e1c, { 0x2 });
        gbc.writeMem(0xc2d8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xad3f);
        EXPECT(gbc.pc(), 0x2e1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2d8), 0x0);
        // 02 018C
        gbc.setState(0xcfaf, 0x3062, 0x60d0, 0xed32, 0x24dc, 0xcc5b, 0x1, 0x1);
        gbc.writeMem(0xcfaf, { 0x2 });
        gbc.writeMem(0xed32, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x3062);
        EXPECT(gbc.pc(), 0xcfb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfaf), 0x2);
        EXPECT(gbc.readMem(0xed32), 0x60);
        // 02 018F
        gbc.setState(0x28c0, 0x952, 0xe9d0, 0x967a, 0x8119, 0x2015, 0x0, 0x1);
        gbc.writeMem(0x28c0, { 0x2 });
        gbc.writeMem(0x967a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x952);
        EXPECT(gbc.pc(), 0x28c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x967a), 0xe9);
        // 02 0192
        gbc.setState(0x837d, 0x5248, 0x7db0, 0x8608, 0xc559, 0xc4b5, 0x1, 0x0);
        gbc.writeMem(0x837d, { 0x2 });
        gbc.writeMem(0x8608, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x5248);
        EXPECT(gbc.pc(), 0x837e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x837d), 0x2);
        EXPECT(gbc.readMem(0x8608), 0x7d);
        // 02 019D
        gbc.setState(0xbed, 0xc6d4, 0x9710, 0xa608, 0xdd53, 0x4cf2, 0x0, 0x1);
        gbc.writeMem(0xbed, { 0x2 });
        gbc.writeMem(0xa608, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xc6d4);
        EXPECT(gbc.pc(), 0xbee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa608), 0x97);
        // 02 019E
        gbc.setState(0x8a9a, 0xd9fa, 0xb270, 0xe6b9, 0xc63e, 0xaa99, 0x1, 0x0);
        gbc.writeMem(0x8a9a, { 0x2 });
        gbc.writeMem(0xe6b9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xd9fa);
        EXPECT(gbc.pc(), 0x8a9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a9a), 0x2);
        EXPECT(gbc.readMem(0xe6b9), 0xb2);
        // 02 019F
        gbc.setState(0xac8c, 0x7397, 0x290, 0xb388, 0xf92c, 0xcac7, 0x0, 0x0);
        gbc.writeMem(0xac8c, { 0x2 });
        gbc.writeMem(0xb388, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x7397);
        EXPECT(gbc.pc(), 0xac8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac8c), 0x2);
        EXPECT(gbc.readMem(0xb388), 0x2);
        // 02 01A0
        gbc.setState(0xde4f, 0xdcb7, 0x6c0, 0xa0bd, 0x3397, 0x8af, 0x1, 0x1);
        gbc.writeMem(0xa0bd, { 0x0 });
        gbc.writeMem(0xde4f, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xdcb7);
        EXPECT(gbc.pc(), 0xde50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0bd), 0x6);
        EXPECT(gbc.readMem(0xde4f), 0x2);
        // 02 01A1
        gbc.setState(0x531c, 0xa003, 0xb430, 0xdd1b, 0x4003, 0x1ba1, 0x0, 0x1);
        gbc.writeMem(0x531c, { 0x2 });
        gbc.writeMem(0xdd1b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xa003);
        EXPECT(gbc.pc(), 0x531d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd1b), 0xb4);
        // 02 01A2
        gbc.setState(0xb958, 0xa04b, 0x8420, 0xdf98, 0xd858, 0x4e9b, 0x0, 0x1);
        gbc.writeMem(0xb958, { 0x2 });
        gbc.writeMem(0xdf98, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xa04b);
        EXPECT(gbc.pc(), 0xb959);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb958), 0x2);
        EXPECT(gbc.readMem(0xdf98), 0x84);
        // 02 01A3
        gbc.setState(0x7c91, 0xd57c, 0xe410, 0xf9ff, 0x8262, 0xe8c0, 0x0, 0x0);
        gbc.writeMem(0x7c91, { 0x2 });
        gbc.writeMem(0xf9ff, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xd57c);
        EXPECT(gbc.pc(), 0x7c92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf9ff), 0xe4);
        // 02 01A4
        gbc.setState(0x5275, 0x6200, 0x3060, 0xaf4d, 0x71d1, 0x1093, 0x0, 0x0);
        gbc.writeMem(0x5275, { 0x2 });
        gbc.writeMem(0xaf4d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x6200);
        EXPECT(gbc.pc(), 0x5276);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf4d), 0x30);
        // 02 01A5
        gbc.setState(0xaab4, 0xed66, 0x3540, 0xfb34, 0xfe55, 0xe543, 0x1, 0x0);
        gbc.writeMem(0xaab4, { 0x2 });
        gbc.writeMem(0xfb34, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xed66);
        EXPECT(gbc.pc(), 0xaab5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaab4), 0x2);
        EXPECT(gbc.readMem(0xfb34), 0x35);
        // 02 01A9
        gbc.setState(0x44ab, 0xe85a, 0xb210, 0x8c7e, 0x5c84, 0x2055, 0x1, 0x1);
        gbc.writeMem(0x44ab, { 0x2 });
        gbc.writeMem(0x8c7e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xe85a);
        EXPECT(gbc.pc(), 0x44ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c7e), 0xb2);
        // 02 01AC
        gbc.setState(0xceb3, 0xa861, 0x9b50, 0xf21a, 0x9ea4, 0xf49a, 0x0, 0x1);
        gbc.writeMem(0xceb3, { 0x2 });
        gbc.writeMem(0xf21a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xa861);
        EXPECT(gbc.pc(), 0xceb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xceb3), 0x2);
        EXPECT(gbc.readMem(0xf21a), 0x9b);
        // 02 01AE
        gbc.setState(0xd4de, 0x1eb3, 0xc710, 0x894c, 0xdbbc, 0xb6f2, 0x0, 0x0);
        gbc.writeMem(0x894c, { 0x0 });
        gbc.writeMem(0xd4de, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x1eb3);
        EXPECT(gbc.pc(), 0xd4df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x894c), 0xc7);
        EXPECT(gbc.readMem(0xd4de), 0x2);
        // 02 01AF
        gbc.setState(0xe3a9, 0x503b, 0x58a0, 0xc48c, 0x7bf9, 0x80ce, 0x1, 0x1);
        gbc.writeMem(0xc48c, { 0x0 });
        gbc.writeMem(0xe3a9, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x503b);
        EXPECT(gbc.pc(), 0xe3aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc48c), 0x58);
        EXPECT(gbc.readMem(0xe3a9), 0x2);
        // 02 01B0
        gbc.setState(0x536f, 0x151f, 0x70, 0x7358, 0x5f2b, 0xe35d, 0x1, 0x0);
        gbc.writeMem(0x536f, { 0x2 });
        gbc.writeMem(0x7358, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x151f);
        EXPECT(gbc.pc(), 0x5370);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 02 01B1
        gbc.setState(0x5cf8, 0x9ba7, 0xfac0, 0xbf17, 0x8fc9, 0x4791, 0x0, 0x1);
        gbc.writeMem(0x5cf8, { 0x2 });
        gbc.writeMem(0xbf17, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x9ba7);
        EXPECT(gbc.pc(), 0x5cf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf17), 0xfa);
        // 02 01B2
        gbc.setState(0x1ba, 0x9a00, 0xd940, 0x94a8, 0xdfa5, 0x3767, 0x1, 0x0);
        gbc.writeMem(0x1ba, { 0x2 });
        gbc.writeMem(0x94a8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x9a00);
        EXPECT(gbc.pc(), 0x1bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94a8), 0xd9);
        // 02 01B3
        gbc.setState(0x4e88, 0x834, 0x2970, 0xe911, 0x463f, 0x5755, 0x0, 0x1);
        gbc.writeMem(0x4e88, { 0x2 });
        gbc.writeMem(0xe911, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x834);
        EXPECT(gbc.pc(), 0x4e89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe911), 0x29);
        // 02 01B4
        gbc.setState(0x5614, 0xf778, 0x7e00, 0x8f8a, 0x4409, 0x3ea2, 0x0, 0x0);
        gbc.writeMem(0x5614, { 0x2 });
        gbc.writeMem(0x8f8a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xf778);
        EXPECT(gbc.pc(), 0x5615);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f8a), 0x7e);
        // 02 01B5
        gbc.setState(0x61d7, 0x2bc1, 0x9de0, 0xcf5f, 0x3dd, 0x2aa9, 0x1, 0x0);
        gbc.writeMem(0x61d7, { 0x2 });
        gbc.writeMem(0xcf5f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x2bc1);
        EXPECT(gbc.pc(), 0x61d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf5f), 0x9d);
        // 02 01BA
        gbc.setState(0x9dc2, 0x3650, 0xfdc0, 0xbc58, 0xff7f, 0x65b1, 0x0, 0x1);
        gbc.writeMem(0x9dc2, { 0x2 });
        gbc.writeMem(0xbc58, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x3650);
        EXPECT(gbc.pc(), 0x9dc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dc2), 0x2);
        EXPECT(gbc.readMem(0xbc58), 0xfd);
        // 02 01BB
        gbc.setState(0xafbc, 0x38b4, 0xee90, 0xd5a3, 0x957, 0xe1cf, 0x1, 0x1);
        gbc.writeMem(0xafbc, { 0x2 });
        gbc.writeMem(0xd5a3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x38b4);
        EXPECT(gbc.pc(), 0xafbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafbc), 0x2);
        EXPECT(gbc.readMem(0xd5a3), 0xee);
        // 02 01BD
        gbc.setState(0x11a5, 0xa0d7, 0x3a20, 0x885e, 0x7e53, 0x1a7d, 0x0, 0x0);
        gbc.writeMem(0x11a5, { 0x2 });
        gbc.writeMem(0x885e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xa0d7);
        EXPECT(gbc.pc(), 0x11a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x885e), 0x3a);
        // 02 01C0
        gbc.setState(0x40fc, 0xe111, 0x6af0, 0xaeef, 0x194a, 0x9c5d, 0x0, 0x0);
        gbc.writeMem(0x40fc, { 0x2 });
        gbc.writeMem(0xaeef, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xe111);
        EXPECT(gbc.pc(), 0x40fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaeef), 0x6a);
        // 02 01C2
        gbc.setState(0xe2aa, 0xc00d, 0x8930, 0x823d, 0x8df5, 0xf593, 0x0, 0x0);
        gbc.writeMem(0x823d, { 0x0 });
        gbc.writeMem(0xe2aa, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xc00d);
        EXPECT(gbc.pc(), 0xe2ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x823d), 0x89);
        EXPECT(gbc.readMem(0xe2aa), 0x2);
        // 02 01C4
        gbc.setState(0x853, 0x594c, 0x8e40, 0xbed6, 0xc411, 0x9124, 0x0, 0x1);
        gbc.writeMem(0x853, { 0x2 });
        gbc.writeMem(0xbed6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x594c);
        EXPECT(gbc.pc(), 0x854);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbed6), 0x8e);
        // 02 01C5
        gbc.setState(0x4308, 0x98ab, 0xef20, 0xd356, 0xdda8, 0xf967, 0x0, 0x1);
        gbc.writeMem(0x4308, { 0x2 });
        gbc.writeMem(0xd356, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x98ab);
        EXPECT(gbc.pc(), 0x4309);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd356), 0xef);
        // 02 01C7
        gbc.setState(0x761f, 0xd6c0, 0x6be0, 0xf604, 0x92b, 0xebdc, 0x0, 0x0);
        gbc.writeMem(0x761f, { 0x2 });
        gbc.writeMem(0xf604, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xd6c0);
        EXPECT(gbc.pc(), 0x7620);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf604), 0x6b);
        // 02 01CA
        gbc.setState(0x6ffe, 0x5345, 0xce10, 0xe1ef, 0xfea8, 0xc189, 0x1, 0x0);
        gbc.writeMem(0x6ffe, { 0x2 });
        gbc.writeMem(0xe1ef, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x5345);
        EXPECT(gbc.pc(), 0x6fff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1ef), 0xce);
        // 02 01CB
        gbc.setState(0x8070, 0x8efb, 0x72b0, 0x8f90, 0x8b7c, 0xd6b0, 0x1, 0x1);
        gbc.writeMem(0x8070, { 0x2 });
        gbc.writeMem(0x8f90, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x8efb);
        EXPECT(gbc.pc(), 0x8071);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8070), 0x2);
        EXPECT(gbc.readMem(0x8f90), 0x72);
        // 02 01CD
        gbc.setState(0xeaa9, 0xa84f, 0x7990, 0xd5f3, 0xafd3, 0xdee2, 0x1, 0x1);
        gbc.writeMem(0xd5f3, { 0x0 });
        gbc.writeMem(0xeaa9, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xa84f);
        EXPECT(gbc.pc(), 0xeaaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5f3), 0x79);
        EXPECT(gbc.readMem(0xeaa9), 0x2);
        // 02 01CF
        gbc.setState(0x6d92, 0x3841, 0x23f0, 0xd2d1, 0xf5ac, 0x14c, 0x0, 0x0);
        gbc.writeMem(0x6d92, { 0x2 });
        gbc.writeMem(0xd2d1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x3841);
        EXPECT(gbc.pc(), 0x6d93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2d1), 0x23);
        // 02 01D6
        gbc.setState(0x5c53, 0x594c, 0x98f0, 0xb4bc, 0x9a58, 0xd297, 0x1, 0x1);
        gbc.writeMem(0x5c53, { 0x2 });
        gbc.writeMem(0xb4bc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x594c);
        EXPECT(gbc.pc(), 0x5c54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4bc), 0x98);
        // 02 01D7
        gbc.setState(0xde85, 0xfc20, 0x72c0, 0xe632, 0x8e77, 0x2222, 0x0, 0x1);
        gbc.writeMem(0xde85, { 0x2 });
        gbc.writeMem(0xe632, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xfc20);
        EXPECT(gbc.pc(), 0xde86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde85), 0x2);
        EXPECT(gbc.readMem(0xe632), 0x72);
        // 02 01D8
        gbc.setState(0x954a, 0x85e8, 0xbe20, 0xb3a6, 0x4282, 0xbef3, 0x0, 0x0);
        gbc.writeMem(0x954a, { 0x2 });
        gbc.writeMem(0xb3a6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x85e8);
        EXPECT(gbc.pc(), 0x954b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x954a), 0x2);
        EXPECT(gbc.readMem(0xb3a6), 0xbe);
        // 02 01DD
        gbc.setState(0x923b, 0x9ac0, 0x5ec0, 0xf893, 0xe931, 0xeb5b, 0x0, 0x1);
        gbc.writeMem(0x923b, { 0x2 });
        gbc.writeMem(0xf893, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x9ac0);
        EXPECT(gbc.pc(), 0x923c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x923b), 0x2);
        EXPECT(gbc.readMem(0xf893), 0x5e);
        // 02 01DF
        gbc.setState(0x6ca5, 0x62be, 0xf460, 0x8903, 0x331f, 0x91ad, 0x0, 0x0);
        gbc.writeMem(0x6ca5, { 0x2 });
        gbc.writeMem(0x8903, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x62be);
        EXPECT(gbc.pc(), 0x6ca6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8903), 0xf4);
        // 02 01E1
        gbc.setState(0x4f88, 0x73ef, 0x2670, 0x826e, 0x890, 0xbd82, 0x0, 0x0);
        gbc.writeMem(0x4f88, { 0x2 });
        gbc.writeMem(0x826e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x73ef);
        EXPECT(gbc.pc(), 0x4f89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x826e), 0x26);
        // 02 01E2
        gbc.setState(0x9479, 0x97df, 0x49b0, 0xa43b, 0x8d55, 0x54c9, 0x1, 0x0);
        gbc.writeMem(0x9479, { 0x2 });
        gbc.writeMem(0xa43b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x97df);
        EXPECT(gbc.pc(), 0x947a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9479), 0x2);
        EXPECT(gbc.readMem(0xa43b), 0x49);
        // 02 01E4
        gbc.setState(0x3195, 0xedbb, 0x29a0, 0xe5a6, 0x4723, 0x333a, 0x0, 0x1);
        gbc.writeMem(0x3195, { 0x2 });
        gbc.writeMem(0xe5a6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xedbb);
        EXPECT(gbc.pc(), 0x3196);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5a6), 0x29);
        // 02 01E6
        gbc.setState(0x3a89, 0x8c14, 0xcde0, 0x8348, 0x20f6, 0x633c, 0x1, 0x0);
        gbc.writeMem(0x3a89, { 0x2 });
        gbc.writeMem(0x8348, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x8c14);
        EXPECT(gbc.pc(), 0x3a8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8348), 0xcd);
        // 02 01E8
        gbc.setState(0x854e, 0xed7a, 0x4280, 0x91c2, 0x83f6, 0xa003, 0x1, 0x0);
        gbc.writeMem(0x854e, { 0x2 });
        gbc.writeMem(0x91c2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xed7a);
        EXPECT(gbc.pc(), 0x854f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x854e), 0x2);
        EXPECT(gbc.readMem(0x91c2), 0x42);
        // 02 01E9
        gbc.setState(0xb74c, 0x42e, 0x8dd0, 0xa96e, 0x42aa, 0xcad7, 0x1, 0x0);
        gbc.writeMem(0xa96e, { 0x0 });
        gbc.writeMem(0xb74c, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x42e);
        EXPECT(gbc.pc(), 0xb74d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa96e), 0x8d);
        EXPECT(gbc.readMem(0xb74c), 0x2);
        // 02 01EB
        gbc.setState(0xcaf0, 0x2e35, 0x95f0, 0x81ef, 0x52bd, 0x95c5, 0x0, 0x1);
        gbc.writeMem(0x81ef, { 0x0 });
        gbc.writeMem(0xcaf0, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x2e35);
        EXPECT(gbc.pc(), 0xcaf1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81ef), 0x95);
        EXPECT(gbc.readMem(0xcaf0), 0x2);
        // 02 01F0
        gbc.setState(0xd056, 0x64f4, 0x6e30, 0x955b, 0xf19e, 0xea86, 0x1, 0x0);
        gbc.writeMem(0x955b, { 0x0 });
        gbc.writeMem(0xd056, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x64f4);
        EXPECT(gbc.pc(), 0xd057);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x955b), 0x6e);
        EXPECT(gbc.readMem(0xd056), 0x2);
        // 02 01F1
        gbc.setState(0xca8d, 0x32e, 0xe60, 0x8be6, 0x5497, 0x7d12, 0x0, 0x0);
        gbc.writeMem(0x8be6, { 0x0 });
        gbc.writeMem(0xca8d, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x32e);
        EXPECT(gbc.pc(), 0xca8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8be6), 0xe);
        EXPECT(gbc.readMem(0xca8d), 0x2);
        // 02 01F2
        gbc.setState(0x36ff, 0x295e, 0xf100, 0x88c5, 0x6d, 0x2dbc, 0x0, 0x1);
        gbc.writeMem(0x36ff, { 0x2 });
        gbc.writeMem(0x88c5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x295e);
        EXPECT(gbc.pc(), 0x3700);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88c5), 0xf1);
        // 02 01F4
        gbc.setState(0xd457, 0x9f6e, 0xa90, 0x927b, 0xfdbd, 0xd9e0, 0x0, 0x1);
        gbc.writeMem(0x927b, { 0x0 });
        gbc.writeMem(0xd457, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x9f6e);
        EXPECT(gbc.pc(), 0xd458);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x927b), 0xa);
        EXPECT(gbc.readMem(0xd457), 0x2);
        // 02 01F9
        gbc.setState(0x1ca6, 0xacb5, 0x330, 0x9c8d, 0x446e, 0xbbd7, 0x1, 0x1);
        gbc.writeMem(0x1ca6, { 0x2 });
        gbc.writeMem(0x9c8d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xacb5);
        EXPECT(gbc.pc(), 0x1ca7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c8d), 0x3);
        // 02 01FA
        gbc.setState(0x4ad9, 0x454d, 0x9320, 0xfbe7, 0x9b19, 0x1e71, 0x1, 0x0);
        gbc.writeMem(0x4ad9, { 0x2 });
        gbc.writeMem(0xfbe7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x454d);
        EXPECT(gbc.pc(), 0x4ada);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfbe7), 0x93);
        // 02 01FB
        gbc.setState(0x2630, 0x7b52, 0x3080, 0xaed0, 0x507, 0x5cc1, 0x0, 0x0);
        gbc.writeMem(0x2630, { 0x2 });
        gbc.writeMem(0xaed0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x7b52);
        EXPECT(gbc.pc(), 0x2631);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaed0), 0x30);
        // 02 01FD
        gbc.setState(0xac49, 0xa667, 0x1930, 0xd881, 0x27c1, 0x6c1e, 0x0, 0x1);
        gbc.writeMem(0xac49, { 0x2 });
        gbc.writeMem(0xd881, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xa667);
        EXPECT(gbc.pc(), 0xac4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac49), 0x2);
        EXPECT(gbc.readMem(0xd881), 0x19);
        // 02 01FF
        gbc.setState(0x9356, 0x2ef4, 0xfb20, 0xb2e4, 0x3a6b, 0xdf54, 0x0, 0x0);
        gbc.writeMem(0x9356, { 0x2 });
        gbc.writeMem(0xb2e4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x2ef4);
        EXPECT(gbc.pc(), 0x9357);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9356), 0x2);
        EXPECT(gbc.readMem(0xb2e4), 0xfb);
        // 02 0200
        gbc.setState(0x7981, 0xd036, 0x90e0, 0xc5d9, 0x71c4, 0x89e8, 0x1, 0x0);
        gbc.writeMem(0x7981, { 0x2 });
        gbc.writeMem(0xc5d9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xd036);
        EXPECT(gbc.pc(), 0x7982);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5d9), 0x90);
        // 02 0201
        gbc.setState(0xc6ca, 0xc18d, 0xdc90, 0xc1e7, 0x3575, 0xe423, 0x1, 0x0);
        gbc.writeMem(0xc1e7, { 0x0 });
        gbc.writeMem(0xc6ca, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xc18d);
        EXPECT(gbc.pc(), 0xc6cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1e7), 0xdc);
        EXPECT(gbc.readMem(0xc6ca), 0x2);
        // 02 0202
        gbc.setState(0xa709, 0xa66d, 0xbd70, 0xe339, 0x4085, 0x7ee5, 0x1, 0x1);
        gbc.writeMem(0xa709, { 0x2 });
        gbc.writeMem(0xe339, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xa66d);
        EXPECT(gbc.pc(), 0xa70a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa709), 0x2);
        EXPECT(gbc.readMem(0xe339), 0xbd);
        // 02 0203
        gbc.setState(0xa033, 0x677a, 0x2340, 0xa056, 0x7813, 0xfbea, 0x1, 0x0);
        gbc.writeMem(0xa033, { 0x2 });
        gbc.writeMem(0xa056, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x677a);
        EXPECT(gbc.pc(), 0xa034);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa033), 0x2);
        EXPECT(gbc.readMem(0xa056), 0x23);
        // 02 0205
        gbc.setState(0xd6f1, 0x6ab5, 0x5870, 0xfcfd, 0x351b, 0x6f6a, 0x1, 0x0);
        gbc.writeMem(0xd6f1, { 0x2 });
        gbc.writeMem(0xfcfd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x6ab5);
        EXPECT(gbc.pc(), 0xd6f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6f1), 0x2);
        EXPECT(gbc.readMem(0xfcfd), 0x58);
        // 02 0209
        gbc.setState(0x1d48, 0x6f8e, 0x47c0, 0xd529, 0xc017, 0x1b93, 0x0, 0x1);
        gbc.writeMem(0x1d48, { 0x2 });
        gbc.writeMem(0xd529, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x6f8e);
        EXPECT(gbc.pc(), 0x1d49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd529), 0x47);
        // 02 020D
        gbc.setState(0xa7cf, 0x22ef, 0x5cb0, 0xbf15, 0x15f9, 0xd2c3, 0x1, 0x0);
        gbc.writeMem(0xa7cf, { 0x2 });
        gbc.writeMem(0xbf15, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x22ef);
        EXPECT(gbc.pc(), 0xa7d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7cf), 0x2);
        EXPECT(gbc.readMem(0xbf15), 0x5c);
        // 02 020F
        gbc.setState(0x3ceb, 0xf071, 0x10, 0xe98a, 0x4eba, 0x471, 0x0, 0x1);
        gbc.writeMem(0x3ceb, { 0x2 });
        gbc.writeMem(0xe98a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xf071);
        EXPECT(gbc.pc(), 0x3cec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe98a), 0x0);
        // 02 0210
        gbc.setState(0x1d6f, 0x6966, 0xcb20, 0xa702, 0xfd01, 0x2759, 0x0, 0x1);
        gbc.writeMem(0x1d6f, { 0x2 });
        gbc.writeMem(0xa702, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x6966);
        EXPECT(gbc.pc(), 0x1d70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa702), 0xcb);
        // 02 0212
        gbc.setState(0x861c, 0xd987, 0xbb10, 0x97ec, 0xa583, 0x162a, 0x0, 0x1);
        gbc.writeMem(0x861c, { 0x2 });
        gbc.writeMem(0x97ec, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xd987);
        EXPECT(gbc.pc(), 0x861d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x861c), 0x2);
        EXPECT(gbc.readMem(0x97ec), 0xbb);
        // 02 0213
        gbc.setState(0xbe98, 0x23dd, 0x7570, 0x8867, 0xf3a1, 0x6091, 0x1, 0x0);
        gbc.writeMem(0x8867, { 0x0 });
        gbc.writeMem(0xbe98, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x23dd);
        EXPECT(gbc.pc(), 0xbe99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8867), 0x75);
        EXPECT(gbc.readMem(0xbe98), 0x2);
        // 02 0216
        gbc.setState(0xd9b5, 0x7172, 0xefd0, 0xd799, 0x3eda, 0x6ec1, 0x1, 0x1);
        gbc.writeMem(0xd799, { 0x0 });
        gbc.writeMem(0xd9b5, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x7172);
        EXPECT(gbc.pc(), 0xd9b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd799), 0xef);
        EXPECT(gbc.readMem(0xd9b5), 0x2);
        // 02 0217
        gbc.setState(0x81d8, 0x33, 0x4190, 0x9e3c, 0x4035, 0xb75f, 0x1, 0x0);
        gbc.writeMem(0x81d8, { 0x2 });
        gbc.writeMem(0x9e3c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x33);
        EXPECT(gbc.pc(), 0x81d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81d8), 0x2);
        EXPECT(gbc.readMem(0x9e3c), 0x41);
        // 02 0218
        gbc.setState(0x1000, 0x76bf, 0x6a80, 0x9fee, 0xe04, 0x2ca, 0x0, 0x0);
        gbc.writeMem(0x1000, { 0x2 });
        gbc.writeMem(0x9fee, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x76bf);
        EXPECT(gbc.pc(), 0x1001);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fee), 0x6a);
        // 02 021D
        gbc.setState(0x17bb, 0xd6d8, 0xd2a0, 0x918c, 0x9081, 0xc4be, 0x0, 0x1);
        gbc.writeMem(0x17bb, { 0x2 });
        gbc.writeMem(0x918c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xd6d8);
        EXPECT(gbc.pc(), 0x17bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x918c), 0xd2);
        // 02 021E
        gbc.setState(0x5931, 0x1fca, 0x1950, 0xa13c, 0x6099, 0x4271, 0x1, 0x0);
        gbc.writeMem(0x5931, { 0x2 });
        gbc.writeMem(0xa13c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x1fca);
        EXPECT(gbc.pc(), 0x5932);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa13c), 0x19);
        // 02 0220
        gbc.setState(0x2648, 0xc4b5, 0x7560, 0xb2f2, 0x7a24, 0xd6a3, 0x1, 0x0);
        gbc.writeMem(0x2648, { 0x2 });
        gbc.writeMem(0xb2f2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xc4b5);
        EXPECT(gbc.pc(), 0x2649);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2f2), 0x75);
        // 02 0223
        gbc.setState(0x838f, 0x5b4e, 0x1950, 0xe114, 0xb77f, 0x70c3, 0x1, 0x0);
        gbc.writeMem(0x838f, { 0x2 });
        gbc.writeMem(0xe114, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x5b4e);
        EXPECT(gbc.pc(), 0x8390);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x838f), 0x2);
        EXPECT(gbc.readMem(0xe114), 0x19);
        // 02 0224
        gbc.setState(0x4b45, 0xea1b, 0xd40, 0x93ce, 0xad06, 0xc488, 0x0, 0x0);
        gbc.writeMem(0x4b45, { 0x2 });
        gbc.writeMem(0x93ce, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xea1b);
        EXPECT(gbc.pc(), 0x4b46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93ce), 0xd);
        // 02 0226
        gbc.setState(0xc51d, 0x10af, 0xd0d0, 0xa146, 0x5769, 0x4e72, 0x1, 0x0);
        gbc.writeMem(0xa146, { 0x0 });
        gbc.writeMem(0xc51d, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x10af);
        EXPECT(gbc.pc(), 0xc51e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa146), 0xd0);
        EXPECT(gbc.readMem(0xc51d), 0x2);
        // 02 022A
        gbc.setState(0x9936, 0x4143, 0x1c60, 0xd542, 0x859d, 0x150, 0x1, 0x0);
        gbc.writeMem(0x9936, { 0x2 });
        gbc.writeMem(0xd542, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x4143);
        EXPECT(gbc.pc(), 0x9937);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9936), 0x2);
        EXPECT(gbc.readMem(0xd542), 0x1c);
        // 02 022B
        gbc.setState(0xc7f4, 0x2392, 0xfe60, 0xf360, 0x673, 0xa0ad, 0x1, 0x1);
        gbc.writeMem(0xc7f4, { 0x2 });
        gbc.writeMem(0xf360, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x2392);
        EXPECT(gbc.pc(), 0xc7f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7f4), 0x2);
        EXPECT(gbc.readMem(0xf360), 0xfe);
        // 02 022E
        gbc.setState(0x9233, 0x12a, 0x9bc0, 0x9097, 0xfa40, 0x7491, 0x0, 0x0);
        gbc.writeMem(0x9097, { 0x0 });
        gbc.writeMem(0x9233, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x12a);
        EXPECT(gbc.pc(), 0x9234);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9097), 0x9b);
        EXPECT(gbc.readMem(0x9233), 0x2);
        // 02 0230
        gbc.setState(0x32e9, 0xf755, 0x1890, 0xc9b8, 0xe5f2, 0x4d2c, 0x1, 0x0);
        gbc.writeMem(0x32e9, { 0x2 });
        gbc.writeMem(0xc9b8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xf755);
        EXPECT(gbc.pc(), 0x32ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9b8), 0x18);
        // 02 0233
        gbc.setState(0x1da0, 0xa8a7, 0xc50, 0xb592, 0x1b8e, 0x974, 0x1, 0x0);
        gbc.writeMem(0x1da0, { 0x2 });
        gbc.writeMem(0xb592, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xa8a7);
        EXPECT(gbc.pc(), 0x1da1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb592), 0xc);
        // 02 0234
        gbc.setState(0xac65, 0x1978, 0x2bd0, 0xa3f4, 0xc480, 0x6e11, 0x0, 0x0);
        gbc.writeMem(0xa3f4, { 0x0 });
        gbc.writeMem(0xac65, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x1978);
        EXPECT(gbc.pc(), 0xac66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3f4), 0x2b);
        EXPECT(gbc.readMem(0xac65), 0x2);
        // 02 0236
        gbc.setState(0x7b7, 0xfed2, 0xb460, 0xcd4a, 0x814a, 0x83c4, 0x0, 0x1);
        gbc.writeMem(0x7b7, { 0x2 });
        gbc.writeMem(0xcd4a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xfed2);
        EXPECT(gbc.pc(), 0x7b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd4a), 0xb4);
        // 02 0237
        gbc.setState(0xd81, 0x7239, 0xb1e0, 0x9ae7, 0xd0dd, 0x93d2, 0x1, 0x1);
        gbc.writeMem(0xd81, { 0x2 });
        gbc.writeMem(0x9ae7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x7239);
        EXPECT(gbc.pc(), 0xd82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ae7), 0xb1);
        // 02 0239
        gbc.setState(0x56b1, 0x9722, 0x7910, 0x88c3, 0x49f1, 0xabfb, 0x1, 0x0);
        gbc.writeMem(0x56b1, { 0x2 });
        gbc.writeMem(0x88c3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x9722);
        EXPECT(gbc.pc(), 0x56b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88c3), 0x79);
        // 02 023B
        gbc.setState(0x3e9d, 0x19a1, 0xf110, 0xf34b, 0x7de, 0x3958, 0x0, 0x0);
        gbc.writeMem(0x3e9d, { 0x2 });
        gbc.writeMem(0xf34b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x19a1);
        EXPECT(gbc.pc(), 0x3e9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf34b), 0xf1);
        // 02 023C
        gbc.setState(0xd411, 0xb50b, 0xac40, 0xeeb6, 0x9383, 0x3fb2, 0x1, 0x0);
        gbc.writeMem(0xd411, { 0x2 });
        gbc.writeMem(0xeeb6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xb50b);
        EXPECT(gbc.pc(), 0xd412);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd411), 0x2);
        EXPECT(gbc.readMem(0xeeb6), 0xac);
        // 02 023D
        gbc.setState(0xe41, 0xf134, 0xfee0, 0xcaff, 0x9823, 0x97da, 0x0, 0x0);
        gbc.writeMem(0xe41, { 0x2 });
        gbc.writeMem(0xcaff, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xf134);
        EXPECT(gbc.pc(), 0xe42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcaff), 0xfe);
        // 02 023E
        gbc.setState(0x885f, 0xac15, 0x2240, 0xbb23, 0x9125, 0xdd6d, 0x0, 0x1);
        gbc.writeMem(0x885f, { 0x2 });
        gbc.writeMem(0xbb23, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xac15);
        EXPECT(gbc.pc(), 0x8860);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x885f), 0x2);
        EXPECT(gbc.readMem(0xbb23), 0x22);
        // 02 0241
        gbc.setState(0x6ff, 0xa37d, 0x7530, 0x9243, 0x533f, 0x6220, 0x1, 0x1);
        gbc.writeMem(0x6ff, { 0x2 });
        gbc.writeMem(0x9243, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xa37d);
        EXPECT(gbc.pc(), 0x700);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9243), 0x75);
        // 02 0243
        gbc.setState(0xd94b, 0x1e79, 0x7d70, 0xfed5, 0x931c, 0x92af, 0x0, 0x0);
        gbc.writeMem(0xd94b, { 0x2 });
        gbc.writeMem(0xfed5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x1e79);
        EXPECT(gbc.pc(), 0xd94c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd94b), 0x2);
        EXPECT(gbc.readMem(0xfed5), 0x7d);
        // 02 0246
        gbc.setState(0x6601, 0x911c, 0xa8f0, 0xb4a1, 0x8d56, 0x977d, 0x1, 0x0);
        gbc.writeMem(0x6601, { 0x2 });
        gbc.writeMem(0xb4a1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x911c);
        EXPECT(gbc.pc(), 0x6602);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4a1), 0xa8);
        // 02 024A
        gbc.setState(0xa019, 0x9bc3, 0xaa00, 0xdb16, 0x350d, 0xf3d6, 0x0, 0x0);
        gbc.writeMem(0xa019, { 0x2 });
        gbc.writeMem(0xdb16, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x9bc3);
        EXPECT(gbc.pc(), 0xa01a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa019), 0x2);
        EXPECT(gbc.readMem(0xdb16), 0xaa);
        // 02 024D
        gbc.setState(0xe0e1, 0x657e, 0x5de0, 0xedce, 0x67bc, 0x85de, 0x0, 0x1);
        gbc.writeMem(0xe0e1, { 0x2 });
        gbc.writeMem(0xedce, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x657e);
        EXPECT(gbc.pc(), 0xe0e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0e1), 0x2);
        EXPECT(gbc.readMem(0xedce), 0x5d);
        // 02 024E
        gbc.setState(0xeb76, 0x330f, 0x1900, 0xc479, 0x4d6b, 0x5988, 0x0, 0x0);
        gbc.writeMem(0xc479, { 0x0 });
        gbc.writeMem(0xeb76, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x330f);
        EXPECT(gbc.pc(), 0xeb77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc479), 0x19);
        EXPECT(gbc.readMem(0xeb76), 0x2);
        // 02 024F
        gbc.setState(0x5110, 0xd52e, 0xdaf0, 0xa8c0, 0xd1cb, 0x815f, 0x0, 0x1);
        gbc.writeMem(0x5110, { 0x2 });
        gbc.writeMem(0xa8c0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xd52e);
        EXPECT(gbc.pc(), 0x5111);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8c0), 0xda);
        // 02 0252
        gbc.setState(0x74ea, 0xe0cf, 0xd820, 0xff28, 0x236c, 0x800f, 0x0, 0x0);
        gbc.writeMem(0x74ea, { 0x2 });
        gbc.writeMem(0xff28, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xe0cf);
        EXPECT(gbc.pc(), 0x74eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff28), 0xd8);
        // 02 0253
        gbc.setState(0x75fc, 0xda68, 0x4010, 0x812a, 0x2468, 0x7ea3, 0x0, 0x1);
        gbc.writeMem(0x75fc, { 0x2 });
        gbc.writeMem(0x812a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xda68);
        EXPECT(gbc.pc(), 0x75fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x812a), 0x40);
        // 02 0256
        gbc.setState(0x2b4d, 0xcefb, 0xd730, 0xb2a3, 0xc468, 0x8402, 0x1, 0x1);
        gbc.writeMem(0x2b4d, { 0x2 });
        gbc.writeMem(0xb2a3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xcefb);
        EXPECT(gbc.pc(), 0x2b4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2a3), 0xd7);
        // 02 0258
        gbc.setState(0xc707, 0xb865, 0x3f20, 0xdf69, 0x4c8d, 0x8d3a, 0x0, 0x0);
        gbc.writeMem(0xc707, { 0x2 });
        gbc.writeMem(0xdf69, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xb865);
        EXPECT(gbc.pc(), 0xc708);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc707), 0x2);
        EXPECT(gbc.readMem(0xdf69), 0x3f);
        // 02 0259
        gbc.setState(0x8bff, 0x7315, 0x260, 0xb136, 0xacd6, 0x29b3, 0x1, 0x0);
        gbc.writeMem(0x8bff, { 0x2 });
        gbc.writeMem(0xb136, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x7315);
        EXPECT(gbc.pc(), 0x8c00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bff), 0x2);
        EXPECT(gbc.readMem(0xb136), 0x2);
        // 02 025A
        gbc.setState(0xb4c3, 0x2451, 0xbb30, 0xf733, 0x1e2b, 0x3d63, 0x1, 0x0);
        gbc.writeMem(0xb4c3, { 0x2 });
        gbc.writeMem(0xf733, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x2451);
        EXPECT(gbc.pc(), 0xb4c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4c3), 0x2);
        EXPECT(gbc.readMem(0xf733), 0xbb);
        // 02 025B
        gbc.setState(0xd3b5, 0x42ca, 0x86c0, 0x869e, 0x537, 0x2f98, 0x1, 0x0);
        gbc.writeMem(0x869e, { 0x0 });
        gbc.writeMem(0xd3b5, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x42ca);
        EXPECT(gbc.pc(), 0xd3b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x869e), 0x86);
        EXPECT(gbc.readMem(0xd3b5), 0x2);
        // 02 0268
        gbc.setState(0xe2ce, 0xcffd, 0x8310, 0xcef9, 0xef3d, 0x9232, 0x0, 0x1);
        gbc.writeMem(0xcef9, { 0x0 });
        gbc.writeMem(0xe2ce, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xcffd);
        EXPECT(gbc.pc(), 0xe2cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcef9), 0x83);
        EXPECT(gbc.readMem(0xe2ce), 0x2);
        // 02 0269
        gbc.setState(0x3499, 0xc37a, 0xdc90, 0xdbb9, 0x3940, 0x2103, 0x1, 0x1);
        gbc.writeMem(0x3499, { 0x2 });
        gbc.writeMem(0xdbb9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xc37a);
        EXPECT(gbc.pc(), 0x349a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbb9), 0xdc);
        // 02 026C
        gbc.setState(0xd46, 0x5152, 0xa2a0, 0xdbf6, 0x949b, 0x351e, 0x1, 0x0);
        gbc.writeMem(0xd46, { 0x2 });
        gbc.writeMem(0xdbf6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x5152);
        EXPECT(gbc.pc(), 0xd47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbf6), 0xa2);
        // 02 026D
        gbc.setState(0xde6, 0x6e18, 0x8730, 0xb892, 0x2299, 0x111e, 0x0, 0x0);
        gbc.writeMem(0xde6, { 0x2 });
        gbc.writeMem(0xb892, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x6e18);
        EXPECT(gbc.pc(), 0xde7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb892), 0x87);
        // 02 026F
        gbc.setState(0xe277, 0xe9e1, 0x4440, 0xd65d, 0xc14e, 0x6e42, 0x0, 0x0);
        gbc.writeMem(0xd65d, { 0x0 });
        gbc.writeMem(0xe277, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xe9e1);
        EXPECT(gbc.pc(), 0xe278);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd65d), 0x44);
        EXPECT(gbc.readMem(0xe277), 0x2);
        // 02 0270
        gbc.setState(0x185f, 0x3a3b, 0xd4c0, 0xc171, 0x1f09, 0x1cca, 0x0, 0x0);
        gbc.writeMem(0x185f, { 0x2 });
        gbc.writeMem(0xc171, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x3a3b);
        EXPECT(gbc.pc(), 0x1860);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc171), 0xd4);
        // 02 0275
        gbc.setState(0x1f82, 0x1f6f, 0xb220, 0xccc1, 0xe40e, 0xdee0, 0x1, 0x0);
        gbc.writeMem(0x1f82, { 0x2 });
        gbc.writeMem(0xccc1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x1f6f);
        EXPECT(gbc.pc(), 0x1f83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccc1), 0xb2);
        // 02 0277
        gbc.setState(0x1662, 0x3a5f, 0xf320, 0x8674, 0x2239, 0x4c69, 0x0, 0x0);
        gbc.writeMem(0x1662, { 0x2 });
        gbc.writeMem(0x8674, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x3a5f);
        EXPECT(gbc.pc(), 0x1663);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8674), 0xf3);
        // 02 027D
        gbc.setState(0x466d, 0xfdd9, 0x7620, 0xc3d0, 0x3252, 0x8fde, 0x1, 0x1);
        gbc.writeMem(0x466d, { 0x2 });
        gbc.writeMem(0xc3d0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xfdd9);
        EXPECT(gbc.pc(), 0x466e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3d0), 0x76);
        // 02 0280
        gbc.setState(0xb866, 0x3f58, 0x7d90, 0xf9ed, 0x323, 0xff43, 0x1, 0x0);
        gbc.writeMem(0xb866, { 0x2 });
        gbc.writeMem(0xf9ed, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x3f58);
        EXPECT(gbc.pc(), 0xb867);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb866), 0x2);
        EXPECT(gbc.readMem(0xf9ed), 0x7d);
        // 02 0285
        gbc.setState(0x83fd, 0xc935, 0xd490, 0xf000, 0xb5ab, 0x71f8, 0x1, 0x1);
        gbc.writeMem(0x83fd, { 0x2 });
        gbc.writeMem(0xf000, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xc935);
        EXPECT(gbc.pc(), 0x83fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83fd), 0x2);
        EXPECT(gbc.readMem(0xf000), 0xd4);
        // 02 0286
        gbc.setState(0x6619, 0x2515, 0x3ad0, 0xf0f7, 0x4d35, 0x3d04, 0x0, 0x1);
        gbc.writeMem(0x6619, { 0x2 });
        gbc.writeMem(0xf0f7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x2515);
        EXPECT(gbc.pc(), 0x661a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf0f7), 0x3a);
        // 02 0287
        gbc.setState(0xb362, 0x31c4, 0x8a10, 0xeea3, 0xc6c3, 0xc91, 0x1, 0x0);
        gbc.writeMem(0xb362, { 0x2 });
        gbc.writeMem(0xeea3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x31c4);
        EXPECT(gbc.pc(), 0xb363);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb362), 0x2);
        EXPECT(gbc.readMem(0xeea3), 0x8a);
        // 02 0288
        gbc.setState(0x67ba, 0xe121, 0x5c60, 0x901a, 0x526a, 0xf2ef, 0x1, 0x0);
        gbc.writeMem(0x67ba, { 0x2 });
        gbc.writeMem(0x901a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xe121);
        EXPECT(gbc.pc(), 0x67bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x901a), 0x5c);
        // 02 0289
        gbc.setState(0x21cf, 0x6a31, 0xdbf0, 0xec3a, 0x4082, 0xef68, 0x1, 0x1);
        gbc.writeMem(0x21cf, { 0x2 });
        gbc.writeMem(0xec3a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x6a31);
        EXPECT(gbc.pc(), 0x21d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec3a), 0xdb);
        // 02 028A
        gbc.setState(0x1641, 0x76f5, 0x5d40, 0x8506, 0x62f3, 0x1c83, 0x1, 0x0);
        gbc.writeMem(0x1641, { 0x2 });
        gbc.writeMem(0x8506, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x76f5);
        EXPECT(gbc.pc(), 0x1642);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8506), 0x5d);
        // 02 028D
        gbc.setState(0x359c, 0xc92c, 0xf8c0, 0xb3c1, 0xf496, 0x1b3, 0x0, 0x1);
        gbc.writeMem(0x359c, { 0x2 });
        gbc.writeMem(0xb3c1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xc92c);
        EXPECT(gbc.pc(), 0x359d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3c1), 0xf8);
        // 02 028E
        gbc.setState(0xcbb9, 0x4b08, 0x5bb0, 0xd46d, 0xa784, 0xf0d0, 0x1, 0x0);
        gbc.writeMem(0xcbb9, { 0x2 });
        gbc.writeMem(0xd46d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x4b08);
        EXPECT(gbc.pc(), 0xcbba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbb9), 0x2);
        EXPECT(gbc.readMem(0xd46d), 0x5b);
        // 02 028F
        gbc.setState(0x4675, 0x7d61, 0xd8e0, 0x9719, 0x5455, 0x853e, 0x1, 0x0);
        gbc.writeMem(0x4675, { 0x2 });
        gbc.writeMem(0x9719, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x7d61);
        EXPECT(gbc.pc(), 0x4676);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9719), 0xd8);
        // 02 0290
        gbc.setState(0x5a87, 0xbc9f, 0xbab0, 0xcb8b, 0x6640, 0x7c40, 0x1, 0x1);
        gbc.writeMem(0x5a87, { 0x2 });
        gbc.writeMem(0xcb8b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xbc9f);
        EXPECT(gbc.pc(), 0x5a88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb8b), 0xba);
        // 02 0291
        gbc.setState(0x5936, 0xab63, 0xab90, 0xeba7, 0x9b61, 0x7902, 0x1, 0x1);
        gbc.writeMem(0x5936, { 0x2 });
        gbc.writeMem(0xeba7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xab63);
        EXPECT(gbc.pc(), 0x5937);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeba7), 0xab);
        // 02 0292
        gbc.setState(0x91e8, 0x2040, 0x4380, 0x8950, 0x32a7, 0x5d5, 0x1, 0x0);
        gbc.writeMem(0x8950, { 0x0 });
        gbc.writeMem(0x91e8, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x2040);
        EXPECT(gbc.pc(), 0x91e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8950), 0x43);
        EXPECT(gbc.readMem(0x91e8), 0x2);
        // 02 0293
        gbc.setState(0x65b3, 0x2350, 0x6860, 0xc315, 0x417d, 0xcbfc, 0x1, 0x0);
        gbc.writeMem(0x65b3, { 0x2 });
        gbc.writeMem(0xc315, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x2350);
        EXPECT(gbc.pc(), 0x65b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc315), 0x68);
        // 02 0294
        gbc.setState(0x157e, 0xe6c5, 0x7ae0, 0xc6e6, 0x84ab, 0x260a, 0x1, 0x1);
        gbc.writeMem(0x157e, { 0x2 });
        gbc.writeMem(0xc6e6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xe6c5);
        EXPECT(gbc.pc(), 0x157f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6e6), 0x7a);
        // 02 0295
        gbc.setState(0xd9ff, 0xd60a, 0x27d0, 0xeba1, 0x8e2b, 0x2817, 0x0, 0x1);
        gbc.writeMem(0xd9ff, { 0x2 });
        gbc.writeMem(0xeba1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xd60a);
        EXPECT(gbc.pc(), 0xda00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9ff), 0x2);
        EXPECT(gbc.readMem(0xeba1), 0x27);
        // 02 0297
        gbc.setState(0x7d63, 0xfcb4, 0x26e0, 0x9817, 0x925a, 0xe1bd, 0x0, 0x0);
        gbc.writeMem(0x7d63, { 0x2 });
        gbc.writeMem(0x9817, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xfcb4);
        EXPECT(gbc.pc(), 0x7d64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9817), 0x26);
        // 02 0298
        gbc.setState(0x9972, 0x10dd, 0x4340, 0xbd72, 0x3089, 0xe364, 0x1, 0x0);
        gbc.writeMem(0x9972, { 0x2 });
        gbc.writeMem(0xbd72, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x10dd);
        EXPECT(gbc.pc(), 0x9973);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9972), 0x2);
        EXPECT(gbc.readMem(0xbd72), 0x43);
        // 02 0299
        gbc.setState(0xaa4, 0xd5b9, 0x6970, 0xf0f9, 0xae47, 0x735b, 0x0, 0x1);
        gbc.writeMem(0xaa4, { 0x2 });
        gbc.writeMem(0xf0f9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xd5b9);
        EXPECT(gbc.pc(), 0xaa5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf0f9), 0x69);
        // 02 029B
        gbc.setState(0xb667, 0x7db9, 0x9030, 0xe024, 0x74bd, 0x4883, 0x0, 0x1);
        gbc.writeMem(0xb667, { 0x2 });
        gbc.writeMem(0xe024, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x7db9);
        EXPECT(gbc.pc(), 0xb668);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb667), 0x2);
        EXPECT(gbc.readMem(0xe024), 0x90);
        // 02 029E
        gbc.setState(0xa712, 0x7208, 0xe450, 0xaf7b, 0x7f17, 0x42e3, 0x1, 0x1);
        gbc.writeMem(0xa712, { 0x2 });
        gbc.writeMem(0xaf7b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x7208);
        EXPECT(gbc.pc(), 0xa713);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa712), 0x2);
        EXPECT(gbc.readMem(0xaf7b), 0xe4);
        // 02 02A3
        gbc.setState(0xe793, 0x4b74, 0x1d10, 0xa219, 0x91a4, 0xea31, 0x1, 0x0);
        gbc.writeMem(0xa219, { 0x0 });
        gbc.writeMem(0xe793, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x4b74);
        EXPECT(gbc.pc(), 0xe794);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa219), 0x1d);
        EXPECT(gbc.readMem(0xe793), 0x2);
        // 02 02A5
        gbc.setState(0xd48b, 0x4110, 0x940, 0x99d3, 0x8b38, 0xeb53, 0x1, 0x0);
        gbc.writeMem(0x99d3, { 0x0 });
        gbc.writeMem(0xd48b, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x4110);
        EXPECT(gbc.pc(), 0xd48c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99d3), 0x9);
        EXPECT(gbc.readMem(0xd48b), 0x2);
        // 02 02A6
        gbc.setState(0x5663, 0x694, 0x4f20, 0x996b, 0x6069, 0x61a7, 0x1, 0x0);
        gbc.writeMem(0x5663, { 0x2 });
        gbc.writeMem(0x996b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x694);
        EXPECT(gbc.pc(), 0x5664);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x996b), 0x4f);
        // 02 02A9
        gbc.setState(0x5494, 0xff8e, 0x1490, 0xbfcd, 0x4985, 0x2d53, 0x1, 0x0);
        gbc.writeMem(0x5494, { 0x2 });
        gbc.writeMem(0xbfcd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xff8e);
        EXPECT(gbc.pc(), 0x5495);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfcd), 0x14);
        // 02 02AB
        gbc.setState(0x561f, 0xa0e5, 0x86f0, 0xf4ff, 0x4c66, 0xaee, 0x1, 0x1);
        gbc.writeMem(0x561f, { 0x2 });
        gbc.writeMem(0xf4ff, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xa0e5);
        EXPECT(gbc.pc(), 0x5620);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf4ff), 0x86);
        // 02 02AC
        gbc.setState(0x930e, 0x9713, 0x7cc0, 0xa243, 0x84d4, 0x2e8a, 0x1, 0x1);
        gbc.writeMem(0x930e, { 0x2 });
        gbc.writeMem(0xa243, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x9713);
        EXPECT(gbc.pc(), 0x930f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x930e), 0x2);
        EXPECT(gbc.readMem(0xa243), 0x7c);
        // 02 02AF
        gbc.setState(0x325a, 0x5744, 0x5c50, 0x8c7a, 0xacd9, 0x8e1b, 0x1, 0x1);
        gbc.writeMem(0x325a, { 0x2 });
        gbc.writeMem(0x8c7a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x5744);
        EXPECT(gbc.pc(), 0x325b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c7a), 0x5c);
        // 02 02B0
        gbc.setState(0x5a7, 0x320f, 0xa090, 0xa49c, 0x6ad8, 0x4c71, 0x1, 0x0);
        gbc.writeMem(0x5a7, { 0x2 });
        gbc.writeMem(0xa49c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x320f);
        EXPECT(gbc.pc(), 0x5a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa49c), 0xa0);
        // 02 02B1
        gbc.setState(0x745a, 0x90ae, 0x1980, 0x86c3, 0x5ce8, 0x6a60, 0x1, 0x0);
        gbc.writeMem(0x745a, { 0x2 });
        gbc.writeMem(0x86c3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x90ae);
        EXPECT(gbc.pc(), 0x745b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86c3), 0x19);
        // 02 02B2
        gbc.setState(0x140d, 0xccc2, 0x2f40, 0x81f7, 0x33a, 0xbdda, 0x0, 0x1);
        gbc.writeMem(0x140d, { 0x2 });
        gbc.writeMem(0x81f7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xccc2);
        EXPECT(gbc.pc(), 0x140e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81f7), 0x2f);
        // 02 02B3
        gbc.setState(0xd3a3, 0xf6e3, 0xc610, 0xfaa3, 0x3297, 0x53ec, 0x1, 0x0);
        gbc.writeMem(0xd3a3, { 0x2 });
        gbc.writeMem(0xfaa3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xf6e3);
        EXPECT(gbc.pc(), 0xd3a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3a3), 0x2);
        EXPECT(gbc.readMem(0xfaa3), 0xc6);
        // 02 02B5
        gbc.setState(0x8d16, 0x4ddd, 0xa040, 0xde4c, 0x473c, 0x29c7, 0x1, 0x0);
        gbc.writeMem(0x8d16, { 0x2 });
        gbc.writeMem(0xde4c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x4ddd);
        EXPECT(gbc.pc(), 0x8d17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d16), 0x2);
        EXPECT(gbc.readMem(0xde4c), 0xa0);
        // 02 02B7
        gbc.setState(0xe3b3, 0xf578, 0x8bd0, 0x859c, 0x73c1, 0x232d, 0x0, 0x0);
        gbc.writeMem(0x859c, { 0x0 });
        gbc.writeMem(0xe3b3, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xf578);
        EXPECT(gbc.pc(), 0xe3b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x859c), 0x8b);
        EXPECT(gbc.readMem(0xe3b3), 0x2);
        // 02 02B9
        gbc.setState(0x2748, 0x545a, 0x1420, 0x8779, 0x4492, 0x23af, 0x0, 0x0);
        gbc.writeMem(0x2748, { 0x2 });
        gbc.writeMem(0x8779, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x545a);
        EXPECT(gbc.pc(), 0x2749);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8779), 0x14);
        // 02 02BA
        gbc.setState(0x204d, 0x2859, 0xfc50, 0xc701, 0x6508, 0x413d, 0x1, 0x1);
        gbc.writeMem(0x204d, { 0x2 });
        gbc.writeMem(0xc701, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x2859);
        EXPECT(gbc.pc(), 0x204e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc701), 0xfc);
        // 02 02BE
        gbc.setState(0xae44, 0x9681, 0x9150, 0x84a4, 0x8616, 0xd497, 0x0, 0x0);
        gbc.writeMem(0x84a4, { 0x0 });
        gbc.writeMem(0xae44, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x9681);
        EXPECT(gbc.pc(), 0xae45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84a4), 0x91);
        EXPECT(gbc.readMem(0xae44), 0x2);
        // 02 02C0
        gbc.setState(0xca1, 0xf990, 0xbb10, 0xf7a6, 0xc9f1, 0x5cd6, 0x1, 0x0);
        gbc.writeMem(0xca1, { 0x2 });
        gbc.writeMem(0xf7a6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xf990);
        EXPECT(gbc.pc(), 0xca2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf7a6), 0xbb);
        // 02 02C5
        gbc.setState(0xb986, 0x982, 0xe550, 0x8b8f, 0x8586, 0xcce0, 0x1, 0x1);
        gbc.writeMem(0x8b8f, { 0x0 });
        gbc.writeMem(0xb986, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x982);
        EXPECT(gbc.pc(), 0xb987);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b8f), 0xe5);
        EXPECT(gbc.readMem(0xb986), 0x2);
        // 02 02CA
        gbc.setState(0x3923, 0xa76b, 0xa6a0, 0xc157, 0x6f13, 0x4c20, 0x1, 0x0);
        gbc.writeMem(0x3923, { 0x2 });
        gbc.writeMem(0xc157, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xa76b);
        EXPECT(gbc.pc(), 0x3924);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc157), 0xa6);
        // 02 02CE
        gbc.setState(0xfc1, 0xd7d8, 0x5d10, 0x9078, 0x4d7, 0xf2eb, 0x0, 0x1);
        gbc.writeMem(0xfc1, { 0x2 });
        gbc.writeMem(0x9078, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xd7d8);
        EXPECT(gbc.pc(), 0xfc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9078), 0x5d);
        // 02 02CF
        gbc.setState(0x2ed5, 0x413b, 0xe180, 0xba04, 0xcf3, 0xf220, 0x0, 0x1);
        gbc.writeMem(0x2ed5, { 0x2 });
        gbc.writeMem(0xba04, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x413b);
        EXPECT(gbc.pc(), 0x2ed6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba04), 0xe1);
        // 02 02D0
        gbc.setState(0x9f3c, 0x4c2b, 0xe40, 0xd9c5, 0x7af0, 0xa774, 0x1, 0x1);
        gbc.writeMem(0x9f3c, { 0x2 });
        gbc.writeMem(0xd9c5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x4c2b);
        EXPECT(gbc.pc(), 0x9f3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f3c), 0x2);
        EXPECT(gbc.readMem(0xd9c5), 0xe);
        // 02 02D1
        gbc.setState(0x769a, 0x5d4b, 0x5d50, 0x8b5f, 0x9ea2, 0x6842, 0x1, 0x0);
        gbc.writeMem(0x769a, { 0x2 });
        gbc.writeMem(0x8b5f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x5d4b);
        EXPECT(gbc.pc(), 0x769b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b5f), 0x5d);
        // 02 02D4
        gbc.setState(0x7628, 0x361c, 0xb1b0, 0x9896, 0x2c40, 0x21ac, 0x1, 0x1);
        gbc.writeMem(0x7628, { 0x2 });
        gbc.writeMem(0x9896, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x361c);
        EXPECT(gbc.pc(), 0x7629);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9896), 0xb1);
        // 02 02D9
        gbc.setState(0x4432, 0xc039, 0xf8d0, 0xd266, 0x9782, 0xe890, 0x0, 0x0);
        gbc.writeMem(0x4432, { 0x2 });
        gbc.writeMem(0xd266, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xc039);
        EXPECT(gbc.pc(), 0x4433);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd266), 0xf8);
        // 02 02DB
        gbc.setState(0xaba2, 0x9df0, 0x7050, 0x822a, 0x7000, 0x5625, 0x1, 0x1);
        gbc.writeMem(0x822a, { 0x0 });
        gbc.writeMem(0xaba2, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x9df0);
        EXPECT(gbc.pc(), 0xaba3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x822a), 0x70);
        EXPECT(gbc.readMem(0xaba2), 0x2);
        // 02 02E2
        gbc.setState(0x574e, 0x8892, 0x98e0, 0xfabc, 0xc47d, 0x10cb, 0x1, 0x1);
        gbc.writeMem(0x574e, { 0x2 });
        gbc.writeMem(0xfabc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x8892);
        EXPECT(gbc.pc(), 0x574f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfabc), 0x98);
        // 02 02E4
        gbc.setState(0xc81e, 0x176d, 0x7460, 0xe6f4, 0xc8f5, 0x1324, 0x0, 0x1);
        gbc.writeMem(0xc81e, { 0x2 });
        gbc.writeMem(0xe6f4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x176d);
        EXPECT(gbc.pc(), 0xc81f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc81e), 0x2);
        EXPECT(gbc.readMem(0xe6f4), 0x74);
        // 02 02E6
        gbc.setState(0x6f21, 0x90b9, 0x54c0, 0xdeaf, 0x6b1c, 0x4ab5, 0x1, 0x0);
        gbc.writeMem(0x6f21, { 0x2 });
        gbc.writeMem(0xdeaf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x90b9);
        EXPECT(gbc.pc(), 0x6f22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdeaf), 0x54);
        // 02 02E7
        gbc.setState(0x7b5b, 0x95fb, 0x3590, 0xcb71, 0xe0ec, 0x31bc, 0x0, 0x1);
        gbc.writeMem(0x7b5b, { 0x2 });
        gbc.writeMem(0xcb71, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x95fb);
        EXPECT(gbc.pc(), 0x7b5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb71), 0x35);
        // 02 02E8
        gbc.setState(0x9b72, 0x198d, 0x9c00, 0xa3e0, 0xe98c, 0x6070, 0x1, 0x0);
        gbc.writeMem(0x9b72, { 0x2 });
        gbc.writeMem(0xa3e0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x198d);
        EXPECT(gbc.pc(), 0x9b73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b72), 0x2);
        EXPECT(gbc.readMem(0xa3e0), 0x9c);
        // 02 02E9
        gbc.setState(0x730a, 0x42ae, 0xe9e0, 0xf0c9, 0xa3cb, 0x1e5a, 0x1, 0x1);
        gbc.writeMem(0x730a, { 0x2 });
        gbc.writeMem(0xf0c9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x42ae);
        EXPECT(gbc.pc(), 0x730b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf0c9), 0xe9);
        // 02 02ED
        gbc.setState(0x30b9, 0x7f94, 0x5540, 0xdf8b, 0x782c, 0xae7a, 0x1, 0x0);
        gbc.writeMem(0x30b9, { 0x2 });
        gbc.writeMem(0xdf8b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x7f94);
        EXPECT(gbc.pc(), 0x30ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf8b), 0x55);
        // 02 02EF
        gbc.setState(0x187d, 0x32f, 0x9600, 0xa83e, 0x813d, 0x31ae, 0x1, 0x0);
        gbc.writeMem(0x187d, { 0x2 });
        gbc.writeMem(0xa83e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x32f);
        EXPECT(gbc.pc(), 0x187e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa83e), 0x96);
        // 02 02F0
        gbc.setState(0x89fa, 0xc36c, 0xba80, 0xf376, 0x8824, 0xa16c, 0x0, 0x1);
        gbc.writeMem(0x89fa, { 0x2 });
        gbc.writeMem(0xf376, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xc36c);
        EXPECT(gbc.pc(), 0x89fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89fa), 0x2);
        EXPECT(gbc.readMem(0xf376), 0xba);
        // 02 02F4
        gbc.setState(0x9d3, 0xa527, 0xa380, 0xd3b6, 0xd979, 0x71eb, 0x0, 0x1);
        gbc.writeMem(0x9d3, { 0x2 });
        gbc.writeMem(0xd3b6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xa527);
        EXPECT(gbc.pc(), 0x9d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3b6), 0xa3);
        // 02 02F7
        gbc.setState(0x3e9c, 0x264a, 0xc920, 0xd42d, 0xbb51, 0x26b1, 0x1, 0x1);
        gbc.writeMem(0x3e9c, { 0x2 });
        gbc.writeMem(0xd42d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x264a);
        EXPECT(gbc.pc(), 0x3e9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd42d), 0xc9);
        // 02 02F8
        gbc.setState(0x281f, 0x85cb, 0x700, 0x9237, 0x587d, 0xb1bd, 0x0, 0x1);
        gbc.writeMem(0x281f, { 0x2 });
        gbc.writeMem(0x9237, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x85cb);
        EXPECT(gbc.pc(), 0x2820);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9237), 0x7);
        // 02 02F9
        gbc.setState(0x3b2a, 0xd26d, 0xe970, 0xa980, 0xefe1, 0x4d88, 0x1, 0x1);
        gbc.writeMem(0x3b2a, { 0x2 });
        gbc.writeMem(0xa980, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xd26d);
        EXPECT(gbc.pc(), 0x3b2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa980), 0xe9);
        // 02 02FA
        gbc.setState(0xd032, 0x4e2d, 0xdc0, 0x97ca, 0x784d, 0xe39f, 0x0, 0x0);
        gbc.writeMem(0x97ca, { 0x0 });
        gbc.writeMem(0xd032, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x4e2d);
        EXPECT(gbc.pc(), 0xd033);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97ca), 0xd);
        EXPECT(gbc.readMem(0xd032), 0x2);
        // 02 02FB
        gbc.setState(0xaf9b, 0xeb53, 0xbe00, 0xcb66, 0x715b, 0x75ea, 0x1, 0x0);
        gbc.writeMem(0xaf9b, { 0x2 });
        gbc.writeMem(0xcb66, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xeb53);
        EXPECT(gbc.pc(), 0xaf9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf9b), 0x2);
        EXPECT(gbc.readMem(0xcb66), 0xbe);
        // 02 02FC
        gbc.setState(0x7473, 0xa654, 0xe3a0, 0xa474, 0xaf18, 0xb0d2, 0x1, 0x1);
        gbc.writeMem(0x7473, { 0x2 });
        gbc.writeMem(0xa474, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xa654);
        EXPECT(gbc.pc(), 0x7474);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa474), 0xe3);
        // 02 0301
        gbc.setState(0x94c0, 0x1f74, 0x7d30, 0x97b9, 0xbddc, 0xe86f, 0x0, 0x1);
        gbc.writeMem(0x94c0, { 0x2 });
        gbc.writeMem(0x97b9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x1f74);
        EXPECT(gbc.pc(), 0x94c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94c0), 0x2);
        EXPECT(gbc.readMem(0x97b9), 0x7d);
        // 02 0303
        gbc.setState(0x5bc2, 0xd2ef, 0x91e0, 0x9a32, 0x6eb3, 0x2d4d, 0x0, 0x1);
        gbc.writeMem(0x5bc2, { 0x2 });
        gbc.writeMem(0x9a32, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xd2ef);
        EXPECT(gbc.pc(), 0x5bc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a32), 0x91);
        // 02 0305
        gbc.setState(0xd587, 0x76b0, 0x5d30, 0x88cd, 0xcf19, 0x69d5, 0x1, 0x0);
        gbc.writeMem(0x88cd, { 0x0 });
        gbc.writeMem(0xd587, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x76b0);
        EXPECT(gbc.pc(), 0xd588);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88cd), 0x5d);
        EXPECT(gbc.readMem(0xd587), 0x2);
        // 02 0306
        gbc.setState(0x4980, 0x4004, 0xda40, 0xa897, 0xd19c, 0x32a3, 0x0, 0x0);
        gbc.writeMem(0x4980, { 0x2 });
        gbc.writeMem(0xa897, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x4004);
        EXPECT(gbc.pc(), 0x4981);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa897), 0xda);
        // 02 0308
        gbc.setState(0xda90, 0x24af, 0x40e0, 0x85dd, 0xcc23, 0x8ed9, 0x0, 0x0);
        gbc.writeMem(0x85dd, { 0x0 });
        gbc.writeMem(0xda90, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x24af);
        EXPECT(gbc.pc(), 0xda91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85dd), 0x40);
        EXPECT(gbc.readMem(0xda90), 0x2);
        // 02 030B
        gbc.setState(0xe8b2, 0x5e89, 0xc470, 0xd82e, 0x417c, 0xc960, 0x1, 0x0);
        gbc.writeMem(0xd82e, { 0x0 });
        gbc.writeMem(0xe8b2, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x5e89);
        EXPECT(gbc.pc(), 0xe8b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd82e), 0xc4);
        EXPECT(gbc.readMem(0xe8b2), 0x2);
        // 02 030D
        gbc.setState(0x958d, 0x761d, 0x4260, 0x8d0d, 0xa19e, 0x6968, 0x1, 0x0);
        gbc.writeMem(0x8d0d, { 0x0 });
        gbc.writeMem(0x958d, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x761d);
        EXPECT(gbc.pc(), 0x958e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d0d), 0x42);
        EXPECT(gbc.readMem(0x958d), 0x2);
        // 02 030E
        gbc.setState(0x95dc, 0xdee0, 0x660, 0xd777, 0x34b5, 0x6122, 0x1, 0x1);
        gbc.writeMem(0x95dc, { 0x2 });
        gbc.writeMem(0xd777, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xdee0);
        EXPECT(gbc.pc(), 0x95dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95dc), 0x2);
        EXPECT(gbc.readMem(0xd777), 0x6);
        // 02 030F
        gbc.setState(0x6a6a, 0xd02b, 0xd660, 0xfe61, 0xf1d5, 0x426a, 0x0, 0x0);
        gbc.writeMem(0x6a6a, { 0x2 });
        gbc.writeMem(0xfe61, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xd02b);
        EXPECT(gbc.pc(), 0x6a6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfe61), 0xd6);
        // 02 0312
        gbc.setState(0xb8b, 0xf529, 0xfb70, 0xe843, 0x9f4f, 0x2805, 0x1, 0x1);
        gbc.writeMem(0xb8b, { 0x2 });
        gbc.writeMem(0xe843, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xf529);
        EXPECT(gbc.pc(), 0xb8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe843), 0xfb);
        // 02 0313
        gbc.setState(0x9cbb, 0x6fb7, 0xdbd0, 0xcd07, 0x9ab3, 0xbc9b, 0x0, 0x1);
        gbc.writeMem(0x9cbb, { 0x2 });
        gbc.writeMem(0xcd07, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x6fb7);
        EXPECT(gbc.pc(), 0x9cbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cbb), 0x2);
        EXPECT(gbc.readMem(0xcd07), 0xdb);
        // 02 0314
        gbc.setState(0x72e, 0x495c, 0xebf0, 0x894f, 0x26e4, 0x4a44, 0x1, 0x0);
        gbc.writeMem(0x72e, { 0x2 });
        gbc.writeMem(0x894f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x495c);
        EXPECT(gbc.pc(), 0x72f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x894f), 0xeb);
        // 02 0316
        gbc.setState(0x90d4, 0xc583, 0x3f70, 0xf2d4, 0xc96e, 0x313c, 0x0, 0x0);
        gbc.writeMem(0x90d4, { 0x2 });
        gbc.writeMem(0xf2d4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xc583);
        EXPECT(gbc.pc(), 0x90d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90d4), 0x2);
        EXPECT(gbc.readMem(0xf2d4), 0x3f);
        // 02 031A
        gbc.setState(0x3a7a, 0x570d, 0x83e0, 0xbc32, 0xd00c, 0x44b3, 0x0, 0x0);
        gbc.writeMem(0x3a7a, { 0x2 });
        gbc.writeMem(0xbc32, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x570d);
        EXPECT(gbc.pc(), 0x3a7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc32), 0x83);
        // 02 031B
        gbc.setState(0x5809, 0x5fe4, 0xcc10, 0xab02, 0x9c66, 0xc7e7, 0x0, 0x0);
        gbc.writeMem(0x5809, { 0x2 });
        gbc.writeMem(0xab02, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x5fe4);
        EXPECT(gbc.pc(), 0x580a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab02), 0xcc);
        // 02 031C
        gbc.setState(0x44e, 0x7102, 0xe4f0, 0xb5c3, 0x5a50, 0xa742, 0x1, 0x0);
        gbc.writeMem(0x44e, { 0x2 });
        gbc.writeMem(0xb5c3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x7102);
        EXPECT(gbc.pc(), 0x44f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5c3), 0xe4);
        // 02 031D
        gbc.setState(0x384a, 0x82aa, 0xe620, 0x86e2, 0xf1a6, 0xc44c, 0x0, 0x1);
        gbc.writeMem(0x384a, { 0x2 });
        gbc.writeMem(0x86e2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x82aa);
        EXPECT(gbc.pc(), 0x384b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86e2), 0xe6);
        // 02 031E
        gbc.setState(0x4830, 0xd908, 0x3010, 0xdba1, 0xd590, 0x6fe1, 0x0, 0x1);
        gbc.writeMem(0x4830, { 0x2 });
        gbc.writeMem(0xdba1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xd908);
        EXPECT(gbc.pc(), 0x4831);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdba1), 0x30);
        // 02 031F
        gbc.setState(0xd993, 0xfb93, 0x6910, 0x9829, 0x38af, 0x55f, 0x0, 0x0);
        gbc.writeMem(0x9829, { 0x0 });
        gbc.writeMem(0xd993, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xfb93);
        EXPECT(gbc.pc(), 0xd994);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9829), 0x69);
        EXPECT(gbc.readMem(0xd993), 0x2);
        // 02 0327
        gbc.setState(0x8083, 0x6c43, 0x9650, 0xbc98, 0x604c, 0x9433, 0x0, 0x1);
        gbc.writeMem(0x8083, { 0x2 });
        gbc.writeMem(0xbc98, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x6c43);
        EXPECT(gbc.pc(), 0x8084);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8083), 0x2);
        EXPECT(gbc.readMem(0xbc98), 0x96);
        // 02 0328
        gbc.setState(0xd32b, 0xeafa, 0xe0c0, 0x83c6, 0xa4a2, 0x1c31, 0x0, 0x1);
        gbc.writeMem(0x83c6, { 0x0 });
        gbc.writeMem(0xd32b, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xeafa);
        EXPECT(gbc.pc(), 0xd32c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83c6), 0xe0);
        EXPECT(gbc.readMem(0xd32b), 0x2);
        // 02 0329
        gbc.setState(0xd164, 0x5899, 0x6b50, 0xbde9, 0x8520, 0x95fd, 0x1, 0x0);
        gbc.writeMem(0xbde9, { 0x0 });
        gbc.writeMem(0xd164, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x5899);
        EXPECT(gbc.pc(), 0xd165);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbde9), 0x6b);
        EXPECT(gbc.readMem(0xd164), 0x2);
        // 02 032C
        gbc.setState(0xdf40, 0xa763, 0x2e80, 0xd88f, 0x3672, 0x4d7a, 0x1, 0x1);
        gbc.writeMem(0xd88f, { 0x0 });
        gbc.writeMem(0xdf40, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xa763);
        EXPECT(gbc.pc(), 0xdf41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd88f), 0x2e);
        EXPECT(gbc.readMem(0xdf40), 0x2);
        // 02 032F
        gbc.setState(0x90d0, 0xe8de, 0xa5c0, 0xbbd4, 0x4425, 0xb379, 0x0, 0x1);
        gbc.writeMem(0x90d0, { 0x2 });
        gbc.writeMem(0xbbd4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xe8de);
        EXPECT(gbc.pc(), 0x90d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90d0), 0x2);
        EXPECT(gbc.readMem(0xbbd4), 0xa5);
        // 02 0330
        gbc.setState(0x9b0a, 0x69a4, 0xe610, 0x9fa7, 0xb533, 0x4ee7, 0x0, 0x1);
        gbc.writeMem(0x9b0a, { 0x2 });
        gbc.writeMem(0x9fa7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x69a4);
        EXPECT(gbc.pc(), 0x9b0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b0a), 0x2);
        EXPECT(gbc.readMem(0x9fa7), 0xe6);
        // 02 0332
        gbc.setState(0xc05a, 0x2df2, 0x54c0, 0xbdd7, 0xe166, 0x2dd8, 0x1, 0x1);
        gbc.writeMem(0xbdd7, { 0x0 });
        gbc.writeMem(0xc05a, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x2df2);
        EXPECT(gbc.pc(), 0xc05b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdd7), 0x54);
        EXPECT(gbc.readMem(0xc05a), 0x2);
        // 02 0334
        gbc.setState(0x8716, 0x8f23, 0x6de0, 0xa9c6, 0x918e, 0x933e, 0x0, 0x0);
        gbc.writeMem(0x8716, { 0x2 });
        gbc.writeMem(0xa9c6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x8f23);
        EXPECT(gbc.pc(), 0x8717);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8716), 0x2);
        EXPECT(gbc.readMem(0xa9c6), 0x6d);
        // 02 0336
        gbc.setState(0x5478, 0xcffd, 0x6b60, 0xa4ea, 0xf562, 0xae16, 0x1, 0x0);
        gbc.writeMem(0x5478, { 0x2 });
        gbc.writeMem(0xa4ea, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xcffd);
        EXPECT(gbc.pc(), 0x5479);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4ea), 0x6b);
        // 02 0337
        gbc.setState(0xcd3d, 0xf0db, 0x4580, 0xccb8, 0x1d64, 0x30d8, 0x0, 0x1);
        gbc.writeMem(0xccb8, { 0x0 });
        gbc.writeMem(0xcd3d, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xf0db);
        EXPECT(gbc.pc(), 0xcd3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccb8), 0x45);
        EXPECT(gbc.readMem(0xcd3d), 0x2);
        // 02 0338
        gbc.setState(0xb0b, 0x4146, 0xac90, 0xec1a, 0x9e8, 0x1c6b, 0x1, 0x0);
        gbc.writeMem(0xb0b, { 0x2 });
        gbc.writeMem(0xec1a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x4146);
        EXPECT(gbc.pc(), 0xb0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec1a), 0xac);
        // 02 0339
        gbc.setState(0x700c, 0x28e2, 0xb7f0, 0xe110, 0x720c, 0x1fce, 0x0, 0x1);
        gbc.writeMem(0x700c, { 0x2 });
        gbc.writeMem(0xe110, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x28e2);
        EXPECT(gbc.pc(), 0x700d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe110), 0xb7);
        // 02 033C
        gbc.setState(0xd17, 0x1a9b, 0xe500, 0xa5ae, 0xbead, 0x518c, 0x1, 0x1);
        gbc.writeMem(0xd17, { 0x2 });
        gbc.writeMem(0xa5ae, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x1a9b);
        EXPECT(gbc.pc(), 0xd18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5ae), 0xe5);
        // 02 033D
        gbc.setState(0x5103, 0x23d5, 0x9e20, 0xbd1b, 0xb2f, 0x362f, 0x0, 0x0);
        gbc.writeMem(0x5103, { 0x2 });
        gbc.writeMem(0xbd1b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x23d5);
        EXPECT(gbc.pc(), 0x5104);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd1b), 0x9e);
        // 02 033E
        gbc.setState(0x2a08, 0x9452, 0x2370, 0xd707, 0x7527, 0xdeb0, 0x0, 0x1);
        gbc.writeMem(0x2a08, { 0x2 });
        gbc.writeMem(0xd707, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x9452);
        EXPECT(gbc.pc(), 0x2a09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd707), 0x23);
        // 02 033F
        gbc.setState(0x8861, 0xc4fb, 0x89a0, 0xa919, 0x8b19, 0xd957, 0x0, 0x0);
        gbc.writeMem(0x8861, { 0x2 });
        gbc.writeMem(0xa919, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xc4fb);
        EXPECT(gbc.pc(), 0x8862);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8861), 0x2);
        EXPECT(gbc.readMem(0xa919), 0x89);
        // 02 0340
        gbc.setState(0xb9b3, 0x45e0, 0x6350, 0xfcff, 0xe143, 0x4ffb, 0x1, 0x0);
        gbc.writeMem(0xb9b3, { 0x2 });
        gbc.writeMem(0xfcff, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x45e0);
        EXPECT(gbc.pc(), 0xb9b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9b3), 0x2);
        EXPECT(gbc.readMem(0xfcff), 0x63);
        // 02 0341
        gbc.setState(0x8863, 0xf660, 0xb600, 0x91cc, 0x4e2, 0x1eb8, 0x1, 0x0);
        gbc.writeMem(0x8863, { 0x2 });
        gbc.writeMem(0x91cc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xf660);
        EXPECT(gbc.pc(), 0x8864);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8863), 0x2);
        EXPECT(gbc.readMem(0x91cc), 0xb6);
        // 02 0342
        gbc.setState(0x5efc, 0x247d, 0xdac0, 0x99af, 0x110a, 0xb00f, 0x1, 0x1);
        gbc.writeMem(0x5efc, { 0x2 });
        gbc.writeMem(0x99af, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x247d);
        EXPECT(gbc.pc(), 0x5efd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99af), 0xda);
        // 02 0344
        gbc.setState(0x6a36, 0x1123, 0xa9c0, 0xc650, 0xf1a, 0xb598, 0x0, 0x1);
        gbc.writeMem(0x6a36, { 0x2 });
        gbc.writeMem(0xc650, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x1123);
        EXPECT(gbc.pc(), 0x6a37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc650), 0xa9);
        // 02 0346
        gbc.setState(0x86f7, 0xec62, 0x62e0, 0xd857, 0xbebe, 0x477, 0x0, 0x0);
        gbc.writeMem(0x86f7, { 0x2 });
        gbc.writeMem(0xd857, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xec62);
        EXPECT(gbc.pc(), 0x86f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86f7), 0x2);
        EXPECT(gbc.readMem(0xd857), 0x62);
        // 02 0347
        gbc.setState(0xceee, 0x47a5, 0xcd00, 0xe6a2, 0x8137, 0xf09c, 0x0, 0x0);
        gbc.writeMem(0xceee, { 0x2 });
        gbc.writeMem(0xe6a2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x47a5);
        EXPECT(gbc.pc(), 0xceef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xceee), 0x2);
        EXPECT(gbc.readMem(0xe6a2), 0xcd);
        // 02 0348
        gbc.setState(0x397c, 0x7f1b, 0x28a0, 0xc98b, 0x7afc, 0xb4b6, 0x0, 0x1);
        gbc.writeMem(0x397c, { 0x2 });
        gbc.writeMem(0xc98b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x7f1b);
        EXPECT(gbc.pc(), 0x397d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc98b), 0x28);
        // 02 034B
        gbc.setState(0xe1f3, 0x915c, 0x4fb0, 0xa8d6, 0xbe59, 0xb519, 0x0, 0x1);
        gbc.writeMem(0xa8d6, { 0x0 });
        gbc.writeMem(0xe1f3, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x915c);
        EXPECT(gbc.pc(), 0xe1f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8d6), 0x4f);
        EXPECT(gbc.readMem(0xe1f3), 0x2);
        // 02 034D
        gbc.setState(0xeac7, 0x64c2, 0xf650, 0x80e4, 0x36d5, 0x191, 0x0, 0x1);
        gbc.writeMem(0x80e4, { 0x0 });
        gbc.writeMem(0xeac7, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x64c2);
        EXPECT(gbc.pc(), 0xeac8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80e4), 0xf6);
        EXPECT(gbc.readMem(0xeac7), 0x2);
        // 02 034E
        gbc.setState(0xe894, 0x97d, 0x7eb0, 0xfb99, 0x2fb4, 0x613d, 0x0, 0x0);
        gbc.writeMem(0xe894, { 0x2 });
        gbc.writeMem(0xfb99, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x97d);
        EXPECT(gbc.pc(), 0xe895);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe894), 0x2);
        EXPECT(gbc.readMem(0xfb99), 0x7e);
        // 02 0350
        gbc.setState(0x4108, 0x7285, 0x7380, 0xd390, 0x8275, 0x9a9b, 0x0, 0x0);
        gbc.writeMem(0x4108, { 0x2 });
        gbc.writeMem(0xd390, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x7285);
        EXPECT(gbc.pc(), 0x4109);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd390), 0x73);
        // 02 0351
        gbc.setState(0x1f3c, 0x79a6, 0xef90, 0xa982, 0xb22b, 0x6bbf, 0x1, 0x1);
        gbc.writeMem(0x1f3c, { 0x2 });
        gbc.writeMem(0xa982, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x79a6);
        EXPECT(gbc.pc(), 0x1f3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa982), 0xef);
        // 02 0353
        gbc.setState(0x58f6, 0xcded, 0xd60, 0xa2fa, 0x6ff7, 0x1520, 0x0, 0x1);
        gbc.writeMem(0x58f6, { 0x2 });
        gbc.writeMem(0xa2fa, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xcded);
        EXPECT(gbc.pc(), 0x58f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2fa), 0xd);
        // 02 0354
        gbc.setState(0x3b69, 0x99ac, 0xe120, 0xfec6, 0x49f1, 0x2c8a, 0x0, 0x1);
        gbc.writeMem(0x3b69, { 0x2 });
        gbc.writeMem(0xfec6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x99ac);
        EXPECT(gbc.pc(), 0x3b6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfec6), 0xe1);
        // 02 0356
        gbc.setState(0x2223, 0xb7b1, 0xf20, 0xc4ee, 0x911c, 0x792d, 0x1, 0x1);
        gbc.writeMem(0x2223, { 0x2 });
        gbc.writeMem(0xc4ee, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xb7b1);
        EXPECT(gbc.pc(), 0x2224);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4ee), 0xf);
        // 02 0358
        gbc.setState(0xef99, 0xb591, 0x5eb0, 0xe912, 0xfebf, 0xd118, 0x0, 0x0);
        gbc.writeMem(0xe912, { 0x0 });
        gbc.writeMem(0xef99, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xb591);
        EXPECT(gbc.pc(), 0xef9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe912), 0x5e);
        EXPECT(gbc.readMem(0xef99), 0x2);
        // 02 0359
        gbc.setState(0x5e59, 0x5bc0, 0x3380, 0xc149, 0x594, 0xf0c, 0x0, 0x0);
        gbc.writeMem(0x5e59, { 0x2 });
        gbc.writeMem(0xc149, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x5bc0);
        EXPECT(gbc.pc(), 0x5e5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc149), 0x33);
        // 02 035E
        gbc.setState(0x3072, 0xea71, 0x8c40, 0xe42b, 0xbfda, 0xec8b, 0x0, 0x1);
        gbc.writeMem(0x3072, { 0x2 });
        gbc.writeMem(0xe42b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xea71);
        EXPECT(gbc.pc(), 0x3073);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe42b), 0x8c);
        // 02 035F
        gbc.setState(0x8f82, 0x604a, 0x8850, 0x8b43, 0xeff, 0xb773, 0x1, 0x1);
        gbc.writeMem(0x8b43, { 0x0 });
        gbc.writeMem(0x8f82, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x604a);
        EXPECT(gbc.pc(), 0x8f83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b43), 0x88);
        EXPECT(gbc.readMem(0x8f82), 0x2);
        // 02 0361
        gbc.setState(0x3166, 0x7e63, 0xfd10, 0xf349, 0x6ef7, 0x9c25, 0x1, 0x1);
        gbc.writeMem(0x3166, { 0x2 });
        gbc.writeMem(0xf349, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x7e63);
        EXPECT(gbc.pc(), 0x3167);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf349), 0xfd);
        // 02 0364
        gbc.setState(0x2548, 0xc4df, 0x6570, 0xa994, 0x7534, 0x7345, 0x0, 0x0);
        gbc.writeMem(0x2548, { 0x2 });
        gbc.writeMem(0xa994, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xc4df);
        EXPECT(gbc.pc(), 0x2549);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa994), 0x65);
        // 02 0365
        gbc.setState(0x5357, 0x713f, 0xade0, 0xabe9, 0x772, 0xd5c3, 0x1, 0x1);
        gbc.writeMem(0x5357, { 0x2 });
        gbc.writeMem(0xabe9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x713f);
        EXPECT(gbc.pc(), 0x5358);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabe9), 0xad);
        // 02 0367
        gbc.setState(0x9afc, 0x6605, 0x4e20, 0xe3fb, 0x5d2f, 0xe3d1, 0x1, 0x0);
        gbc.writeMem(0x9afc, { 0x2 });
        gbc.writeMem(0xe3fb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x6605);
        EXPECT(gbc.pc(), 0x9afd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9afc), 0x2);
        EXPECT(gbc.readMem(0xe3fb), 0x4e);
        // 02 036A
        gbc.setState(0x8769, 0x1c43, 0xd5e0, 0x8c23, 0x7eaa, 0x8a88, 0x1, 0x0);
        gbc.writeMem(0x8769, { 0x2 });
        gbc.writeMem(0x8c23, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x1c43);
        EXPECT(gbc.pc(), 0x876a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8769), 0x2);
        EXPECT(gbc.readMem(0x8c23), 0xd5);
        // 02 036C
        gbc.setState(0xce0d, 0xe552, 0xe530, 0xd8f3, 0x68c7, 0x824b, 0x1, 0x0);
        gbc.writeMem(0xce0d, { 0x2 });
        gbc.writeMem(0xd8f3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xe552);
        EXPECT(gbc.pc(), 0xce0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce0d), 0x2);
        EXPECT(gbc.readMem(0xd8f3), 0xe5);
        // 02 036D
        gbc.setState(0x17c6, 0xa4eb, 0xa030, 0xeedc, 0x9d70, 0x412d, 0x1, 0x1);
        gbc.writeMem(0x17c6, { 0x2 });
        gbc.writeMem(0xeedc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xa4eb);
        EXPECT(gbc.pc(), 0x17c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeedc), 0xa0);
        // 02 0370
        gbc.setState(0xd3d1, 0xbf45, 0x29e0, 0xacc2, 0xde5e, 0xd7ea, 0x0, 0x0);
        gbc.writeMem(0xacc2, { 0x0 });
        gbc.writeMem(0xd3d1, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xbf45);
        EXPECT(gbc.pc(), 0xd3d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacc2), 0x29);
        EXPECT(gbc.readMem(0xd3d1), 0x2);
        // 02 0374
        gbc.setState(0xdea7, 0x170e, 0xfd70, 0xd5fa, 0x3e11, 0x29ff, 0x0, 0x1);
        gbc.writeMem(0xd5fa, { 0x0 });
        gbc.writeMem(0xdea7, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x170e);
        EXPECT(gbc.pc(), 0xdea8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5fa), 0xfd);
        EXPECT(gbc.readMem(0xdea7), 0x2);
        // 02 0378
        gbc.setState(0x4b95, 0xa53b, 0x5e50, 0x9e69, 0x9e60, 0xb851, 0x0, 0x1);
        gbc.writeMem(0x4b95, { 0x2 });
        gbc.writeMem(0x9e69, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xa53b);
        EXPECT(gbc.pc(), 0x4b96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e69), 0x5e);
        // 02 037A
        gbc.setState(0x490d, 0xcbca, 0xcf60, 0x9ddc, 0xc5f0, 0xb9e3, 0x1, 0x1);
        gbc.writeMem(0x490d, { 0x2 });
        gbc.writeMem(0x9ddc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xcbca);
        EXPECT(gbc.pc(), 0x490e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ddc), 0xcf);
        // 02 037B
        gbc.setState(0x4d3, 0x2b1, 0x92e0, 0x9079, 0x7f8, 0x1404, 0x1, 0x1);
        gbc.writeMem(0x4d3, { 0x2 });
        gbc.writeMem(0x9079, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x2b1);
        EXPECT(gbc.pc(), 0x4d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9079), 0x92);
        // 02 037C
        gbc.setState(0x9d85, 0x9a6, 0x6480, 0xf167, 0x1657, 0x2e79, 0x1, 0x1);
        gbc.writeMem(0x9d85, { 0x2 });
        gbc.writeMem(0xf167, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x9a6);
        EXPECT(gbc.pc(), 0x9d86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d85), 0x2);
        EXPECT(gbc.readMem(0xf167), 0x64);
        // 02 037D
        gbc.setState(0x17e5, 0xb742, 0xb750, 0xe1c6, 0xf9d8, 0x9ded, 0x0, 0x0);
        gbc.writeMem(0x17e5, { 0x2 });
        gbc.writeMem(0xe1c6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xb742);
        EXPECT(gbc.pc(), 0x17e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1c6), 0xb7);
        // 02 037E
        gbc.setState(0x76dc, 0xbe56, 0x2b60, 0xde1f, 0x6b3, 0xea1a, 0x0, 0x1);
        gbc.writeMem(0x76dc, { 0x2 });
        gbc.writeMem(0xde1f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xbe56);
        EXPECT(gbc.pc(), 0x76dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde1f), 0x2b);
        // 02 037F
        gbc.setState(0xbf1d, 0xac03, 0x2010, 0xe6ee, 0x79b1, 0x251b, 0x0, 0x0);
        gbc.writeMem(0xbf1d, { 0x2 });
        gbc.writeMem(0xe6ee, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xac03);
        EXPECT(gbc.pc(), 0xbf1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf1d), 0x2);
        EXPECT(gbc.readMem(0xe6ee), 0x20);
        // 02 0383
        gbc.setState(0x1325, 0x8401, 0xbef0, 0xc560, 0x6641, 0x2599, 0x0, 0x1);
        gbc.writeMem(0x1325, { 0x2 });
        gbc.writeMem(0xc560, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x8401);
        EXPECT(gbc.pc(), 0x1326);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc560), 0xbe);
        // 02 0385
        gbc.setState(0x3940, 0xa85a, 0xce60, 0x9f6f, 0xdf9a, 0x7b0d, 0x1, 0x1);
        gbc.writeMem(0x3940, { 0x2 });
        gbc.writeMem(0x9f6f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xa85a);
        EXPECT(gbc.pc(), 0x3941);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f6f), 0xce);
        // 02 038A
        gbc.setState(0xeb10, 0x9974, 0x98b0, 0xd2f7, 0x845b, 0x526d, 0x1, 0x1);
        gbc.writeMem(0xd2f7, { 0x0 });
        gbc.writeMem(0xeb10, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x9974);
        EXPECT(gbc.pc(), 0xeb11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2f7), 0x98);
        EXPECT(gbc.readMem(0xeb10), 0x2);
        // 02 038B
        gbc.setState(0xafe0, 0xf9f8, 0x5a00, 0x859c, 0x3af3, 0xb235, 0x0, 0x0);
        gbc.writeMem(0x859c, { 0x0 });
        gbc.writeMem(0xafe0, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xf9f8);
        EXPECT(gbc.pc(), 0xafe1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x859c), 0x5a);
        EXPECT(gbc.readMem(0xafe0), 0x2);
        // 02 038D
        gbc.setState(0x6b90, 0x8bdd, 0x9dc0, 0x8465, 0xe7c6, 0x1f90, 0x0, 0x0);
        gbc.writeMem(0x6b90, { 0x2 });
        gbc.writeMem(0x8465, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x8bdd);
        EXPECT(gbc.pc(), 0x6b91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8465), 0x9d);
        // 02 038E
        gbc.setState(0x321e, 0x66c2, 0x78f0, 0x9678, 0x9e89, 0x2fe6, 0x0, 0x0);
        gbc.writeMem(0x321e, { 0x2 });
        gbc.writeMem(0x9678, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x66c2);
        EXPECT(gbc.pc(), 0x321f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9678), 0x78);
        // 02 038F
        gbc.setState(0x52e0, 0xd2d9, 0x3f00, 0xaa0e, 0x9eb5, 0x17b3, 0x1, 0x1);
        gbc.writeMem(0x52e0, { 0x2 });
        gbc.writeMem(0xaa0e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xd2d9);
        EXPECT(gbc.pc(), 0x52e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa0e), 0x3f);
        // 02 0390
        gbc.setState(0xb691, 0x278a, 0x9c0, 0xd542, 0x2afe, 0x7e5, 0x0, 0x0);
        gbc.writeMem(0xb691, { 0x2 });
        gbc.writeMem(0xd542, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x278a);
        EXPECT(gbc.pc(), 0xb692);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb691), 0x2);
        EXPECT(gbc.readMem(0xd542), 0x9);
        // 02 0391
        gbc.setState(0xa080, 0xaf1a, 0x3f10, 0xc308, 0x3260, 0x4444, 0x1, 0x0);
        gbc.writeMem(0xa080, { 0x2 });
        gbc.writeMem(0xc308, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xaf1a);
        EXPECT(gbc.pc(), 0xa081);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa080), 0x2);
        EXPECT(gbc.readMem(0xc308), 0x3f);
        // 02 0392
        gbc.setState(0xa9e8, 0xba20, 0xf9d0, 0xef53, 0x4789, 0x2f86, 0x1, 0x0);
        gbc.writeMem(0xa9e8, { 0x2 });
        gbc.writeMem(0xef53, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xba20);
        EXPECT(gbc.pc(), 0xa9e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9e8), 0x2);
        EXPECT(gbc.readMem(0xef53), 0xf9);
        // 02 0393
        gbc.setState(0xa226, 0x273a, 0xbea0, 0xa948, 0xbf5d, 0xfa1, 0x1, 0x0);
        gbc.writeMem(0xa226, { 0x2 });
        gbc.writeMem(0xa948, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x273a);
        EXPECT(gbc.pc(), 0xa227);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa226), 0x2);
        EXPECT(gbc.readMem(0xa948), 0xbe);
        // 02 0394
        gbc.setState(0xe095, 0x7178, 0xdbc0, 0xc325, 0x2cd1, 0x28af, 0x1, 0x0);
        gbc.writeMem(0xc325, { 0x0 });
        gbc.writeMem(0xe095, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x7178);
        EXPECT(gbc.pc(), 0xe096);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc325), 0xdb);
        EXPECT(gbc.readMem(0xe095), 0x2);
        // 02 0398
        gbc.setState(0xc483, 0x45a0, 0xe1f0, 0xfa7f, 0x8c1a, 0x61a1, 0x1, 0x1);
        gbc.writeMem(0xc483, { 0x2 });
        gbc.writeMem(0xfa7f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x45a0);
        EXPECT(gbc.pc(), 0xc484);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc483), 0x2);
        EXPECT(gbc.readMem(0xfa7f), 0xe1);
        // 02 0399
        gbc.setState(0xeca, 0x21c0, 0xfd30, 0x8ad8, 0x7345, 0x3832, 0x1, 0x0);
        gbc.writeMem(0xeca, { 0x2 });
        gbc.writeMem(0x8ad8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x21c0);
        EXPECT(gbc.pc(), 0xecb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ad8), 0xfd);
        // 02 039F
        gbc.setState(0x1a80, 0xd66b, 0x68b0, 0xc74d, 0xdc2b, 0x8204, 0x1, 0x1);
        gbc.writeMem(0x1a80, { 0x2 });
        gbc.writeMem(0xc74d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xd66b);
        EXPECT(gbc.pc(), 0x1a81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc74d), 0x68);
        // 02 03A0
        gbc.setState(0x8a69, 0xe50d, 0x8300, 0xdc9f, 0xc3ad, 0xd647, 0x0, 0x1);
        gbc.writeMem(0x8a69, { 0x2 });
        gbc.writeMem(0xdc9f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xe50d);
        EXPECT(gbc.pc(), 0x8a6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a69), 0x2);
        EXPECT(gbc.readMem(0xdc9f), 0x83);
        // 02 03A1
        gbc.setState(0x1cb1, 0xb836, 0xdf90, 0xf8e7, 0x5bd, 0x69c2, 0x0, 0x1);
        gbc.writeMem(0x1cb1, { 0x2 });
        gbc.writeMem(0xf8e7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xb836);
        EXPECT(gbc.pc(), 0x1cb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf8e7), 0xdf);
        // 02 03A5
        gbc.setState(0xce5, 0x11f0, 0xe7e0, 0xe0f7, 0xf41c, 0x22f0, 0x1, 0x1);
        gbc.writeMem(0xce5, { 0x2 });
        gbc.writeMem(0xe0f7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x11f0);
        EXPECT(gbc.pc(), 0xce6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0f7), 0xe7);
        // 02 03A7
        gbc.setState(0x8f4f, 0x381e, 0x1870, 0xa8ee, 0xf49a, 0x5177, 0x0, 0x0);
        gbc.writeMem(0x8f4f, { 0x2 });
        gbc.writeMem(0xa8ee, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x381e);
        EXPECT(gbc.pc(), 0x8f50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f4f), 0x2);
        EXPECT(gbc.readMem(0xa8ee), 0x18);
        // 02 03AE
        gbc.setState(0x7c44, 0xdb83, 0xe7d0, 0x8d50, 0x4e2b, 0x211f, 0x1, 0x0);
        gbc.writeMem(0x7c44, { 0x2 });
        gbc.writeMem(0x8d50, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xdb83);
        EXPECT(gbc.pc(), 0x7c45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d50), 0xe7);
        // 02 03B1
        gbc.setState(0x50d, 0xb5a0, 0x2420, 0x89c9, 0xea73, 0xe1ef, 0x1, 0x0);
        gbc.writeMem(0x50d, { 0x2 });
        gbc.writeMem(0x89c9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xb5a0);
        EXPECT(gbc.pc(), 0x50e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89c9), 0x24);
        // 02 03B5
        gbc.setState(0xb9cd, 0x4ce5, 0x1ad0, 0xb259, 0xb389, 0x3061, 0x1, 0x0);
        gbc.writeMem(0xb259, { 0x0 });
        gbc.writeMem(0xb9cd, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x4ce5);
        EXPECT(gbc.pc(), 0xb9ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb259), 0x1a);
        EXPECT(gbc.readMem(0xb9cd), 0x2);
        // 02 03B9
        gbc.setState(0xa237, 0x1096, 0x3b10, 0x9382, 0x5066, 0x4960, 0x0, 0x0);
        gbc.writeMem(0x9382, { 0x0 });
        gbc.writeMem(0xa237, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x1096);
        EXPECT(gbc.pc(), 0xa238);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9382), 0x3b);
        EXPECT(gbc.readMem(0xa237), 0x2);
        // 02 03BD
        gbc.setState(0x19af, 0x2c25, 0x5270, 0x9332, 0xbe41, 0x2d01, 0x0, 0x0);
        gbc.writeMem(0x19af, { 0x2 });
        gbc.writeMem(0x9332, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x2c25);
        EXPECT(gbc.pc(), 0x19b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9332), 0x52);
        // 02 03BF
        gbc.setState(0x3eeb, 0x3c62, 0x91c0, 0xbc88, 0xb049, 0xd45a, 0x0, 0x0);
        gbc.writeMem(0x3eeb, { 0x2 });
        gbc.writeMem(0xbc88, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x3c62);
        EXPECT(gbc.pc(), 0x3eec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc88), 0x91);
        // 02 03C2
        gbc.setState(0x4611, 0x4bf8, 0x7d00, 0xe8b1, 0x7f6f, 0xe990, 0x0, 0x1);
        gbc.writeMem(0x4611, { 0x2 });
        gbc.writeMem(0xe8b1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x4bf8);
        EXPECT(gbc.pc(), 0x4612);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8b1), 0x7d);
        // 02 03C3
        gbc.setState(0xc4c3, 0x2e92, 0x61d0, 0xdd55, 0x7bd5, 0x2a3c, 0x0, 0x0);
        gbc.writeMem(0xc4c3, { 0x2 });
        gbc.writeMem(0xdd55, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x2e92);
        EXPECT(gbc.pc(), 0xc4c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4c3), 0x2);
        EXPECT(gbc.readMem(0xdd55), 0x61);
        // 02 03C4
        gbc.setState(0x919d, 0x79f1, 0xeef0, 0xa53e, 0xbeca, 0x2d1b, 0x1, 0x1);
        gbc.writeMem(0x919d, { 0x2 });
        gbc.writeMem(0xa53e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x79f1);
        EXPECT(gbc.pc(), 0x919e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x919d), 0x2);
        EXPECT(gbc.readMem(0xa53e), 0xee);
        // 02 03C5
        gbc.setState(0x371a, 0xb927, 0x4370, 0xe81c, 0xc83, 0x5b22, 0x1, 0x0);
        gbc.writeMem(0x371a, { 0x2 });
        gbc.writeMem(0xe81c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xb927);
        EXPECT(gbc.pc(), 0x371b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe81c), 0x43);
        // 02 03C8
        gbc.setState(0xc0a6, 0x4a5f, 0x4d10, 0xa76d, 0xb2a5, 0xd7d9, 0x0, 0x1);
        gbc.writeMem(0xa76d, { 0x0 });
        gbc.writeMem(0xc0a6, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x4a5f);
        EXPECT(gbc.pc(), 0xc0a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa76d), 0x4d);
        EXPECT(gbc.readMem(0xc0a6), 0x2);
        // 02 03CB
        gbc.setState(0xeec2, 0xdc50, 0x2ab0, 0xc61c, 0x4865, 0xc45d, 0x1, 0x0);
        gbc.writeMem(0xc61c, { 0x0 });
        gbc.writeMem(0xeec2, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xdc50);
        EXPECT(gbc.pc(), 0xeec3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc61c), 0x2a);
        EXPECT(gbc.readMem(0xeec2), 0x2);
        // 02 03CC
        gbc.setState(0x1b96, 0x88fa, 0x7100, 0x9284, 0x55ab, 0x347c, 0x0, 0x0);
        gbc.writeMem(0x1b96, { 0x2 });
        gbc.writeMem(0x9284, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x88fa);
        EXPECT(gbc.pc(), 0x1b97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9284), 0x71);
        // 02 03CD
        gbc.setState(0x1166, 0x82bc, 0xd4c0, 0xa305, 0xc891, 0xff0b, 0x0, 0x1);
        gbc.writeMem(0x1166, { 0x2 });
        gbc.writeMem(0xa305, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x82bc);
        EXPECT(gbc.pc(), 0x1167);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa305), 0xd4);
        // 02 03CE
        gbc.setState(0x22ad, 0x71f8, 0xad50, 0xbf44, 0xaabf, 0x82d8, 0x0, 0x0);
        gbc.writeMem(0x22ad, { 0x2 });
        gbc.writeMem(0xbf44, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x71f8);
        EXPECT(gbc.pc(), 0x22ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf44), 0xad);
        // 02 03D0
        gbc.setState(0xb8ff, 0x83b8, 0xf180, 0xf62f, 0x6de, 0x6ea0, 0x1, 0x0);
        gbc.writeMem(0xb8ff, { 0x2 });
        gbc.writeMem(0xf62f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x83b8);
        EXPECT(gbc.pc(), 0xb900);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8ff), 0x2);
        EXPECT(gbc.readMem(0xf62f), 0xf1);
        // 02 03D1
        gbc.setState(0x660e, 0x8619, 0xb7b0, 0x8c34, 0x663a, 0xa976, 0x1, 0x0);
        gbc.writeMem(0x660e, { 0x2 });
        gbc.writeMem(0x8c34, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x8619);
        EXPECT(gbc.pc(), 0x660f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c34), 0xb7);
        // 02 03D2
        gbc.setState(0xdde, 0xca45, 0xd1d0, 0xe78a, 0x2c58, 0xfac5, 0x1, 0x0);
        gbc.writeMem(0xdde, { 0x2 });
        gbc.writeMem(0xe78a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xca45);
        EXPECT(gbc.pc(), 0xddf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe78a), 0xd1);
        // 02 03D4
        gbc.setState(0xdf16, 0x2031, 0x910, 0xaf16, 0x297d, 0x3dad, 0x1, 0x0);
        gbc.writeMem(0xaf16, { 0x0 });
        gbc.writeMem(0xdf16, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x2031);
        EXPECT(gbc.pc(), 0xdf17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf16), 0x9);
        EXPECT(gbc.readMem(0xdf16), 0x2);
        // 02 03D5
        gbc.setState(0xce79, 0x86d4, 0xd820, 0xd329, 0xf142, 0xe0e8, 0x1, 0x0);
        gbc.writeMem(0xce79, { 0x2 });
        gbc.writeMem(0xd329, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x86d4);
        EXPECT(gbc.pc(), 0xce7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce79), 0x2);
        EXPECT(gbc.readMem(0xd329), 0xd8);
        // 02 03D8
        gbc.setState(0xb176, 0x3c64, 0x9e80, 0xc594, 0x4528, 0x92de, 0x1, 0x0);
        gbc.writeMem(0xb176, { 0x2 });
        gbc.writeMem(0xc594, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x3c64);
        EXPECT(gbc.pc(), 0xb177);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb176), 0x2);
        EXPECT(gbc.readMem(0xc594), 0x9e);
        // 02 03DB
        gbc.setState(0x77da, 0x7074, 0xd2a0, 0xe5b3, 0x5eab, 0x818b, 0x1, 0x1);
        gbc.writeMem(0x77da, { 0x2 });
        gbc.writeMem(0xe5b3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x7074);
        EXPECT(gbc.pc(), 0x77db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5b3), 0xd2);
        // 02 03DC
        gbc.setState(0xa831, 0x2269, 0xa200, 0xfd56, 0x3d4b, 0x1d20, 0x1, 0x1);
        gbc.writeMem(0xa831, { 0x2 });
        gbc.writeMem(0xfd56, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x2269);
        EXPECT(gbc.pc(), 0xa832);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa831), 0x2);
        EXPECT(gbc.readMem(0xfd56), 0xa2);
        // 02 03DD
        gbc.setState(0x87f, 0xd79c, 0x3c0, 0x918b, 0x1332, 0xde7a, 0x1, 0x1);
        gbc.writeMem(0x87f, { 0x2 });
        gbc.writeMem(0x918b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xd79c);
        EXPECT(gbc.pc(), 0x880);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x918b), 0x3);
        // 02 03DE
        gbc.setState(0xd458, 0x5eba, 0xfca0, 0xaf87, 0x66e6, 0x45e7, 0x1, 0x0);
        gbc.writeMem(0xaf87, { 0x0 });
        gbc.writeMem(0xd458, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x5eba);
        EXPECT(gbc.pc(), 0xd459);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf87), 0xfc);
        EXPECT(gbc.readMem(0xd458), 0x2);
        // 02 03DF
        gbc.setState(0xe76b, 0x3e23, 0xe1d0, 0xcea3, 0x9e9d, 0x6b92, 0x0, 0x0);
        gbc.writeMem(0xcea3, { 0x0 });
        gbc.writeMem(0xe76b, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x3e23);
        EXPECT(gbc.pc(), 0xe76c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcea3), 0xe1);
        EXPECT(gbc.readMem(0xe76b), 0x2);
        // 02 03E0
        gbc.setState(0x586c, 0xd467, 0x7620, 0xb1ed, 0xb51, 0xfc90, 0x1, 0x1);
        gbc.writeMem(0x586c, { 0x2 });
        gbc.writeMem(0xb1ed, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xd467);
        EXPECT(gbc.pc(), 0x586d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1ed), 0x76);
        // 02 03E2
        gbc.setState(0xecb1, 0xb8c, 0x5610, 0xe560, 0x343f, 0x8f65, 0x1, 0x1);
        gbc.writeMem(0xe560, { 0x0 });
        gbc.writeMem(0xecb1, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xb8c);
        EXPECT(gbc.pc(), 0xecb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe560), 0x56);
        EXPECT(gbc.readMem(0xecb1), 0x2);
        // 02 03E3
        gbc.setState(0xcb63, 0x731d, 0xdd30, 0xcc75, 0xec95, 0x5aa2, 0x0, 0x0);
        gbc.writeMem(0xcb63, { 0x2 });
        gbc.writeMem(0xcc75, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x731d);
        EXPECT(gbc.pc(), 0xcb64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb63), 0x2);
        EXPECT(gbc.readMem(0xcc75), 0xdd);
        // 02 03E4
        gbc.setState(0x602b, 0xeab9, 0xc50, 0xfba8, 0xc71c, 0xd651, 0x0, 0x0);
        gbc.writeMem(0x602b, { 0x2 });
        gbc.writeMem(0xfba8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xeab9);
        EXPECT(gbc.pc(), 0x602c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfba8), 0xc);
        // 02 03E5
        gbc.setState(0x7d3f, 0x4fad, 0xb740, 0xbd2b, 0xc998, 0x3d98, 0x1, 0x0);
        gbc.writeMem(0x7d3f, { 0x2 });
        gbc.writeMem(0xbd2b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x4fad);
        EXPECT(gbc.pc(), 0x7d40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd2b), 0xb7);
        // 02 03E7
        gbc.setState(0xee7, 0x4c05, 0x3b30, 0xdb4b, 0x115b, 0xa25d, 0x0, 0x1);
        gbc.writeMem(0xee7, { 0x2 });
        gbc.writeMem(0xdb4b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x4c05);
        EXPECT(gbc.pc(), 0xee8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb4b), 0x3b);
    }
}
#endif
