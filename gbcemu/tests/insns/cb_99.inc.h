    TEST(gbcemu, opcode_cb_99) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 99 0000
        gbc.setState(0x5de0, 0x1696, 0x4e50, 0x815, 0xa863, 0x8b10, 0x1, 0x1);
        gbc.writeMem(0x5de0, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x1696);
        EXPECT(gbc.pc(), 0x5de2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0001
        gbc.setState(0x9a66, 0xbf9f, 0x6cf0, 0xa856, 0x1e8d, 0x5200, 0x0, 0x0);
        gbc.writeMem(0x9a66, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xbf9f);
        EXPECT(gbc.pc(), 0x9a68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a66), 0xcb);
        EXPECT(gbc.readMem(0x9a67), 0x99);
        // CB 99 0002
        gbc.setState(0xbb78, 0x210a, 0x71f0, 0x99a6, 0xa3de, 0x1781, 0x0, 0x0);
        gbc.writeMem(0xbb78, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x210a);
        EXPECT(gbc.pc(), 0xbb7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb78), 0xcb);
        EXPECT(gbc.readMem(0xbb79), 0x99);
        // CB 99 0004
        gbc.setState(0x78ac, 0xa020, 0xc820, 0xe11f, 0xdda1, 0x660, 0x0, 0x0);
        gbc.writeMem(0x78ac, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xa020);
        EXPECT(gbc.pc(), 0x78ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0005
        gbc.setState(0xc25f, 0x542d, 0xb690, 0xb501, 0x8611, 0x6c15, 0x0, 0x0);
        gbc.writeMem(0xc25f, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x542d);
        EXPECT(gbc.pc(), 0xc261);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc25f), 0xcb);
        EXPECT(gbc.readMem(0xc260), 0x99);
        // CB 99 0006
        gbc.setState(0xeb5d, 0x1a46, 0xb810, 0x4b04, 0xd1, 0x35b5, 0x0, 0x0);
        gbc.writeMem(0xeb5d, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x1a46);
        EXPECT(gbc.pc(), 0xeb5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb5d), 0xcb);
        EXPECT(gbc.readMem(0xeb5e), 0x99);
        // CB 99 0007
        gbc.setState(0x4d74, 0x496f, 0xb6e0, 0xd92b, 0x947b, 0x24d9, 0x0, 0x0);
        gbc.writeMem(0x4d74, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x496f);
        EXPECT(gbc.pc(), 0x4d76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0008
        gbc.setState(0x786a, 0xbb9c, 0xcf00, 0xbb6a, 0x289c, 0x9267, 0x0, 0x1);
        gbc.writeMem(0x786a, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xbb9c);
        EXPECT(gbc.pc(), 0x786c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0009
        gbc.setState(0x36ce, 0x6e1a, 0xfeb0, 0xc276, 0xbf0e, 0x15da, 0x1, 0x1);
        gbc.writeMem(0x36ce, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x6e1a);
        EXPECT(gbc.pc(), 0x36d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 000A
        gbc.setState(0xce1, 0xed59, 0x8050, 0x3364, 0xd69c, 0x66b2, 0x0, 0x0);
        gbc.writeMem(0xce1, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xed59);
        EXPECT(gbc.pc(), 0xce3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 000B
        gbc.setState(0x8d90, 0x665b, 0xa330, 0x6c1f, 0x62b2, 0x8d73, 0x0, 0x1);
        gbc.writeMem(0x8d90, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x665b);
        EXPECT(gbc.pc(), 0x8d92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d90), 0xcb);
        EXPECT(gbc.readMem(0x8d91), 0x99);
        // CB 99 000C
        gbc.setState(0xb3b8, 0xf7dc, 0x51e0, 0x7b06, 0x968b, 0x3d0e, 0x0, 0x1);
        gbc.writeMem(0xb3b8, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xf7dc);
        EXPECT(gbc.pc(), 0xb3ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3b8), 0xcb);
        EXPECT(gbc.readMem(0xb3b9), 0x99);
        // CB 99 000D
        gbc.setState(0x4a1, 0x39b0, 0x21c0, 0xdb4c, 0xfd13, 0x4a97, 0x1, 0x1);
        gbc.writeMem(0x4a1, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x39b0);
        EXPECT(gbc.pc(), 0x4a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 000E
        gbc.setState(0x591b, 0x56f8, 0xe7a0, 0xdffc, 0xaf74, 0xc88e, 0x1, 0x0);
        gbc.writeMem(0x591b, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x56f8);
        EXPECT(gbc.pc(), 0x591d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 000F
        gbc.setState(0xeccb, 0x312, 0x1a40, 0x256f, 0x1af9, 0xf79b, 0x0, 0x1);
        gbc.writeMem(0xeccb, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x312);
        EXPECT(gbc.pc(), 0xeccd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeccb), 0xcb);
        EXPECT(gbc.readMem(0xeccc), 0x99);
        // CB 99 0010
        gbc.setState(0xce48, 0x20ae, 0xcf40, 0x7fed, 0xe862, 0x43cb, 0x0, 0x0);
        gbc.writeMem(0xce48, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x20ae);
        EXPECT(gbc.pc(), 0xce4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce48), 0xcb);
        EXPECT(gbc.readMem(0xce49), 0x99);
        // CB 99 0012
        gbc.setState(0x422f, 0xea2e, 0xf1a0, 0x9f14, 0xfb74, 0xea7a, 0x1, 0x1);
        gbc.writeMem(0x422f, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xea2e);
        EXPECT(gbc.pc(), 0x4231);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0014
        gbc.setState(0x3496, 0xf020, 0x8660, 0x106d, 0x9b2b, 0x1127, 0x0, 0x0);
        gbc.writeMem(0x3496, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xf020);
        EXPECT(gbc.pc(), 0x3498);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0015
        gbc.setState(0xca03, 0x4143, 0x2ed0, 0x4e82, 0x4afb, 0xc00c, 0x0, 0x1);
        gbc.writeMem(0xca03, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x4143);
        EXPECT(gbc.pc(), 0xca05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca03), 0xcb);
        EXPECT(gbc.readMem(0xca04), 0x99);
        // CB 99 0016
        gbc.setState(0x164, 0x666, 0x51d0, 0x5034, 0x65ef, 0x55ba, 0x0, 0x1);
        gbc.writeMem(0x164, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x666);
        EXPECT(gbc.pc(), 0x166);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0017
        gbc.setState(0x12fb, 0xb88b, 0xaab0, 0x25fe, 0x5479, 0x5eba, 0x1, 0x0);
        gbc.writeMem(0x12fb, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xb88b);
        EXPECT(gbc.pc(), 0x12fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0018
        gbc.setState(0xc33, 0x3ed1, 0xea90, 0xb783, 0xb6c, 0x6040, 0x1, 0x0);
        gbc.writeMem(0xc33, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x3ed1);
        EXPECT(gbc.pc(), 0xc35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0019
        gbc.setState(0xcddd, 0x225, 0x3fa0, 0xf22a, 0x31c9, 0xb002, 0x0, 0x0);
        gbc.writeMem(0xcddd, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x225);
        EXPECT(gbc.pc(), 0xcddf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcddd), 0xcb);
        EXPECT(gbc.readMem(0xcdde), 0x99);
        // CB 99 001A
        gbc.setState(0x4008, 0x7e26, 0x8060, 0x14b8, 0x54d6, 0xc592, 0x0, 0x1);
        gbc.writeMem(0x4008, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x7e26);
        EXPECT(gbc.pc(), 0x400a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 001B
        gbc.setState(0x8070, 0x7b5f, 0xea00, 0x5e14, 0x15d0, 0xd7a7, 0x0, 0x1);
        gbc.writeMem(0x8070, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x7b5f);
        EXPECT(gbc.pc(), 0x8072);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8070), 0xcb);
        EXPECT(gbc.readMem(0x8071), 0x99);
        // CB 99 001C
        gbc.setState(0xb99, 0x832f, 0xc1b0, 0x5e4d, 0x1dcc, 0xeffe, 0x1, 0x1);
        gbc.writeMem(0xb99, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x832f);
        EXPECT(gbc.pc(), 0xb9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 001D
        gbc.setState(0x7a5, 0xb5a0, 0xb290, 0xfec9, 0x98a3, 0xc659, 0x0, 0x1);
        gbc.writeMem(0x7a5, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xb5a0);
        EXPECT(gbc.pc(), 0x7a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 001E
        gbc.setState(0xb23b, 0x917f, 0xcf50, 0xabc, 0x2692, 0x9aed, 0x1, 0x0);
        gbc.writeMem(0xb23b, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x917f);
        EXPECT(gbc.pc(), 0xb23d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb23b), 0xcb);
        EXPECT(gbc.readMem(0xb23c), 0x99);
        // CB 99 001F
        gbc.setState(0x9014, 0x5a08, 0x5820, 0x9d4e, 0xba8e, 0x8fd6, 0x0, 0x0);
        gbc.writeMem(0x9014, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x5a08);
        EXPECT(gbc.pc(), 0x9016);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9014), 0xcb);
        EXPECT(gbc.readMem(0x9015), 0x99);
        // CB 99 0021
        gbc.setState(0xc9ae, 0xc454, 0x5a80, 0x9ee2, 0xd16, 0xe8ce, 0x0, 0x1);
        gbc.writeMem(0xc9ae, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xc454);
        EXPECT(gbc.pc(), 0xc9b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9ae), 0xcb);
        EXPECT(gbc.readMem(0xc9af), 0x99);
        // CB 99 0022
        gbc.setState(0x405b, 0x3e44, 0x7b20, 0x6787, 0x4740, 0x9a1d, 0x1, 0x1);
        gbc.writeMem(0x405b, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x3e44);
        EXPECT(gbc.pc(), 0x405d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0023
        gbc.setState(0xbf3f, 0x21a7, 0x1370, 0x8342, 0xa40a, 0x8c02, 0x1, 0x1);
        gbc.writeMem(0xbf3f, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x21a7);
        EXPECT(gbc.pc(), 0xbf41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf3f), 0xcb);
        EXPECT(gbc.readMem(0xbf40), 0x99);
        // CB 99 0024
        gbc.setState(0x5b85, 0x4f4d, 0xc090, 0x5e79, 0xda8, 0x5222, 0x0, 0x0);
        gbc.writeMem(0x5b85, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x4f4d);
        EXPECT(gbc.pc(), 0x5b87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0025
        gbc.setState(0x9415, 0x9247, 0x4cd0, 0x3dd8, 0x3daf, 0x3465, 0x1, 0x0);
        gbc.writeMem(0x9415, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x9247);
        EXPECT(gbc.pc(), 0x9417);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9415), 0xcb);
        EXPECT(gbc.readMem(0x9416), 0x99);
        // CB 99 0026
        gbc.setState(0x4842, 0x7fd8, 0x2c70, 0x1762, 0x5127, 0x7ab, 0x0, 0x1);
        gbc.writeMem(0x4842, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x7fd8);
        EXPECT(gbc.pc(), 0x4844);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0027
        gbc.setState(0x3fb2, 0x86c, 0x9ec0, 0x9a98, 0xe318, 0xf81e, 0x1, 0x1);
        gbc.writeMem(0x3fb2, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x86c);
        EXPECT(gbc.pc(), 0x3fb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0028
        gbc.setState(0x8807, 0x2120, 0x3b60, 0x1ae5, 0xf3c0, 0xc57a, 0x1, 0x0);
        gbc.writeMem(0x8807, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x2120);
        EXPECT(gbc.pc(), 0x8809);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8807), 0xcb);
        EXPECT(gbc.readMem(0x8808), 0x99);
        // CB 99 0029
        gbc.setState(0x13e6, 0x62c8, 0xa60, 0xeef4, 0x98f2, 0x2291, 0x0, 0x1);
        gbc.writeMem(0x13e6, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x62c8);
        EXPECT(gbc.pc(), 0x13e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 002A
        gbc.setState(0x74b4, 0xa5a3, 0xa010, 0xdd11, 0x442f, 0xcd15, 0x0, 0x0);
        gbc.writeMem(0x74b4, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xa5a3);
        EXPECT(gbc.pc(), 0x74b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 002B
        gbc.setState(0xb8d2, 0xee5, 0xdc60, 0xc8f4, 0x242b, 0x8613, 0x1, 0x0);
        gbc.writeMem(0xb8d2, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xee5);
        EXPECT(gbc.pc(), 0xb8d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8d2), 0xcb);
        EXPECT(gbc.readMem(0xb8d3), 0x99);
        // CB 99 002C
        gbc.setState(0x8ffc, 0x97cb, 0xf630, 0x70c5, 0x8667, 0xc096, 0x1, 0x0);
        gbc.writeMem(0x8ffc, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x97cb);
        EXPECT(gbc.pc(), 0x8ffe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ffc), 0xcb);
        EXPECT(gbc.readMem(0x8ffd), 0x99);
        // CB 99 002D
        gbc.setState(0x5fa9, 0x1ae8, 0x1ba0, 0x5a58, 0x911b, 0x51e0, 0x0, 0x0);
        gbc.writeMem(0x5fa9, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x1ae8);
        EXPECT(gbc.pc(), 0x5fab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 002E
        gbc.setState(0x94d5, 0x8415, 0xd6d0, 0x7e82, 0x5472, 0x19f1, 0x0, 0x1);
        gbc.writeMem(0x94d5, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x8415);
        EXPECT(gbc.pc(), 0x94d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94d5), 0xcb);
        EXPECT(gbc.readMem(0x94d6), 0x99);
        // CB 99 002F
        gbc.setState(0x64ce, 0x2340, 0x8b40, 0x8246, 0x5ad, 0x9ead, 0x1, 0x0);
        gbc.writeMem(0x64ce, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x2340);
        EXPECT(gbc.pc(), 0x64d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0030
        gbc.setState(0xb1d2, 0x4190, 0x2e80, 0x6cc7, 0x9c5a, 0x4146, 0x1, 0x0);
        gbc.writeMem(0xb1d2, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x4190);
        EXPECT(gbc.pc(), 0xb1d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1d2), 0xcb);
        EXPECT(gbc.readMem(0xb1d3), 0x99);
        // CB 99 0032
        gbc.setState(0x3328, 0xfd7c, 0xff70, 0xcd35, 0xa4a2, 0xd410, 0x0, 0x0);
        gbc.writeMem(0x3328, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xfd7c);
        EXPECT(gbc.pc(), 0x332a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0033
        gbc.setState(0x9359, 0xedb7, 0x820, 0x7c12, 0x27cd, 0x2e3f, 0x0, 0x0);
        gbc.writeMem(0x9359, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xedb7);
        EXPECT(gbc.pc(), 0x935b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9359), 0xcb);
        EXPECT(gbc.readMem(0x935a), 0x99);
        // CB 99 0034
        gbc.setState(0x38e2, 0x92bc, 0x8ba0, 0x87bf, 0x5532, 0xa987, 0x0, 0x0);
        gbc.writeMem(0x38e2, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x92bc);
        EXPECT(gbc.pc(), 0x38e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0035
        gbc.setState(0x35d1, 0x73a4, 0xb640, 0x9944, 0x92b5, 0x897c, 0x0, 0x1);
        gbc.writeMem(0x35d1, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x73a4);
        EXPECT(gbc.pc(), 0x35d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0036
        gbc.setState(0x6dcd, 0xf3e8, 0x1f60, 0xf9cc, 0xcb5, 0x53dc, 0x1, 0x0);
        gbc.writeMem(0x6dcd, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xf3e8);
        EXPECT(gbc.pc(), 0x6dcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0037
        gbc.setState(0xe1f2, 0x6585, 0x99d0, 0xa4e8, 0x4f5b, 0x9367, 0x1, 0x1);
        gbc.writeMem(0xe1f2, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x6585);
        EXPECT(gbc.pc(), 0xe1f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1f2), 0xcb);
        EXPECT(gbc.readMem(0xe1f3), 0x99);
        // CB 99 0038
        gbc.setState(0x6c0e, 0x2cb4, 0xf130, 0x7269, 0x2332, 0x8a17, 0x1, 0x1);
        gbc.writeMem(0x6c0e, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x2cb4);
        EXPECT(gbc.pc(), 0x6c10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 003A
        gbc.setState(0x80f9, 0xd3e8, 0x9130, 0x4dfa, 0x505a, 0x8007, 0x0, 0x1);
        gbc.writeMem(0x80f9, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xd3e8);
        EXPECT(gbc.pc(), 0x80fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80f9), 0xcb);
        EXPECT(gbc.readMem(0x80fa), 0x99);
        // CB 99 003B
        gbc.setState(0x961f, 0x122, 0xe000, 0x8296, 0xd64c, 0x934, 0x0, 0x1);
        gbc.writeMem(0x961f, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x122);
        EXPECT(gbc.pc(), 0x9621);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x961f), 0xcb);
        EXPECT(gbc.readMem(0x9620), 0x99);
        // CB 99 003C
        gbc.setState(0xe776, 0x30d5, 0x3b90, 0xcd5f, 0xc0c8, 0xb40, 0x0, 0x0);
        gbc.writeMem(0xe776, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x30d5);
        EXPECT(gbc.pc(), 0xe778);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe776), 0xcb);
        EXPECT(gbc.readMem(0xe777), 0x99);
        // CB 99 003D
        gbc.setState(0x4bf0, 0xf529, 0xa630, 0x2706, 0x76de, 0x577d, 0x1, 0x1);
        gbc.writeMem(0x4bf0, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xf529);
        EXPECT(gbc.pc(), 0x4bf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 003E
        gbc.setState(0xaada, 0x4974, 0xc10, 0x4394, 0xb65c, 0x6e9f, 0x1, 0x1);
        gbc.writeMem(0xaada, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x4974);
        EXPECT(gbc.pc(), 0xaadc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaada), 0xcb);
        EXPECT(gbc.readMem(0xaadb), 0x99);
        // CB 99 003F
        gbc.setState(0x8834, 0x1746, 0xf60, 0x57de, 0x219b, 0x8871, 0x1, 0x1);
        gbc.writeMem(0x8834, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x1746);
        EXPECT(gbc.pc(), 0x8836);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8834), 0xcb);
        EXPECT(gbc.readMem(0x8835), 0x99);
        // CB 99 0040
        gbc.setState(0x2b60, 0x42b4, 0x1600, 0x57a6, 0xa5ff, 0xaef5, 0x1, 0x1);
        gbc.writeMem(0x2b60, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x42b4);
        EXPECT(gbc.pc(), 0x2b62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0041
        gbc.setState(0x97dc, 0x3659, 0x4090, 0x442f, 0x1193, 0xcbe4, 0x1, 0x1);
        gbc.writeMem(0x97dc, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x3659);
        EXPECT(gbc.pc(), 0x97de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97dc), 0xcb);
        EXPECT(gbc.readMem(0x97dd), 0x99);
        // CB 99 0042
        gbc.setState(0x9f29, 0xf8a7, 0x870, 0x94b, 0xfb0, 0xb5d6, 0x0, 0x1);
        gbc.writeMem(0x9f29, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xf8a7);
        EXPECT(gbc.pc(), 0x9f2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f29), 0xcb);
        EXPECT(gbc.readMem(0x9f2a), 0x99);
        // CB 99 0043
        gbc.setState(0x9a43, 0x1e05, 0x100, 0x1739, 0xfa94, 0xe5e2, 0x1, 0x1);
        gbc.writeMem(0x9a43, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x1e05);
        EXPECT(gbc.pc(), 0x9a45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a43), 0xcb);
        EXPECT(gbc.readMem(0x9a44), 0x99);
        // CB 99 0044
        gbc.setState(0xa3cf, 0xb3e2, 0xbdb0, 0xa455, 0x54d1, 0xd84d, 0x1, 0x1);
        gbc.writeMem(0xa3cf, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xb3e2);
        EXPECT(gbc.pc(), 0xa3d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3cf), 0xcb);
        EXPECT(gbc.readMem(0xa3d0), 0x99);
        // CB 99 0045
        gbc.setState(0xe58, 0x16e7, 0x9600, 0xf65e, 0x6217, 0xc7c6, 0x0, 0x1);
        gbc.writeMem(0xe58, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x16e7);
        EXPECT(gbc.pc(), 0xe5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0046
        gbc.setState(0x2cb2, 0x9560, 0xa050, 0x3b55, 0x3114, 0x9415, 0x1, 0x0);
        gbc.writeMem(0x2cb2, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x9560);
        EXPECT(gbc.pc(), 0x2cb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0047
        gbc.setState(0x8f67, 0x30c6, 0xea00, 0x109c, 0xea6c, 0x1c55, 0x1, 0x1);
        gbc.writeMem(0x8f67, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x30c6);
        EXPECT(gbc.pc(), 0x8f69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f67), 0xcb);
        EXPECT(gbc.readMem(0x8f68), 0x99);
        // CB 99 0049
        gbc.setState(0x599b, 0x7c60, 0x330, 0x5124, 0xed8d, 0x841f, 0x0, 0x0);
        gbc.writeMem(0x599b, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x7c60);
        EXPECT(gbc.pc(), 0x599d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 004A
        gbc.setState(0x60c0, 0x431, 0xa4f0, 0x1c49, 0xa0b2, 0xba94, 0x1, 0x1);
        gbc.writeMem(0x60c0, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x431);
        EXPECT(gbc.pc(), 0x60c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 004B
        gbc.setState(0x9cd8, 0xf841, 0xde20, 0xcdda, 0x6719, 0x816f, 0x0, 0x0);
        gbc.writeMem(0x9cd8, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xf841);
        EXPECT(gbc.pc(), 0x9cda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cd8), 0xcb);
        EXPECT(gbc.readMem(0x9cd9), 0x99);
        // CB 99 004C
        gbc.setState(0x8444, 0xa2e2, 0x8720, 0x8c21, 0x5350, 0x93c3, 0x0, 0x0);
        gbc.writeMem(0x8444, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xa2e2);
        EXPECT(gbc.pc(), 0x8446);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8444), 0xcb);
        EXPECT(gbc.readMem(0x8445), 0x99);
        // CB 99 004D
        gbc.setState(0x84df, 0xad8f, 0x7130, 0x42ec, 0xa169, 0x9904, 0x1, 0x1);
        gbc.writeMem(0x84df, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xad8f);
        EXPECT(gbc.pc(), 0x84e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84df), 0xcb);
        EXPECT(gbc.readMem(0x84e0), 0x99);
        // CB 99 004E
        gbc.setState(0x220e, 0x1a4, 0xb590, 0x4cf5, 0xe71a, 0x999c, 0x0, 0x1);
        gbc.writeMem(0x220e, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x1a4);
        EXPECT(gbc.pc(), 0x2210);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0051
        gbc.setState(0x5e66, 0xe95f, 0x97d0, 0xad, 0xa257, 0x9a8b, 0x0, 0x1);
        gbc.writeMem(0x5e66, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xe95f);
        EXPECT(gbc.pc(), 0x5e68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0052
        gbc.setState(0x1ffd, 0xbd23, 0x6540, 0xd4a0, 0xee25, 0x1a71, 0x0, 0x0);
        gbc.writeMem(0x1ffd, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xbd23);
        EXPECT(gbc.pc(), 0x1fff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0053
        gbc.setState(0x917a, 0xbb45, 0xc0f0, 0xb1c5, 0x9341, 0x6c82, 0x1, 0x1);
        gbc.writeMem(0x917a, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xbb45);
        EXPECT(gbc.pc(), 0x917c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x917a), 0xcb);
        EXPECT(gbc.readMem(0x917b), 0x99);
        // CB 99 0054
        gbc.setState(0x4b77, 0x9f9, 0x7f80, 0x1f14, 0x501f, 0x5765, 0x1, 0x0);
        gbc.writeMem(0x4b77, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x9f9);
        EXPECT(gbc.pc(), 0x4b79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0055
        gbc.setState(0x48eb, 0xb709, 0x4460, 0x4f39, 0x441b, 0x8ac, 0x1, 0x1);
        gbc.writeMem(0x48eb, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xb709);
        EXPECT(gbc.pc(), 0x48ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0056
        gbc.setState(0x60c4, 0x9261, 0x6750, 0x146d, 0x798b, 0x1240, 0x1, 0x1);
        gbc.writeMem(0x60c4, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x9261);
        EXPECT(gbc.pc(), 0x60c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0057
        gbc.setState(0x1b1f, 0xc507, 0xfb90, 0xb197, 0x36f2, 0xb3bd, 0x1, 0x1);
        gbc.writeMem(0x1b1f, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xc507);
        EXPECT(gbc.pc(), 0x1b21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0058
        gbc.setState(0xe7d0, 0xd8fb, 0x24a0, 0x7d10, 0x9914, 0x5dc6, 0x1, 0x0);
        gbc.writeMem(0xe7d0, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xd8fb);
        EXPECT(gbc.pc(), 0xe7d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7d0), 0xcb);
        EXPECT(gbc.readMem(0xe7d1), 0x99);
        // CB 99 0059
        gbc.setState(0x872c, 0xbf4d, 0x2670, 0x5290, 0xb530, 0xbb7f, 0x0, 0x0);
        gbc.writeMem(0x872c, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xbf4d);
        EXPECT(gbc.pc(), 0x872e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x872c), 0xcb);
        EXPECT(gbc.readMem(0x872d), 0x99);
        // CB 99 005A
        gbc.setState(0xcaee, 0x1658, 0x3a60, 0xd22a, 0x6ed9, 0x7685, 0x0, 0x0);
        gbc.writeMem(0xcaee, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x1658);
        EXPECT(gbc.pc(), 0xcaf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcaee), 0xcb);
        EXPECT(gbc.readMem(0xcaef), 0x99);
        // CB 99 005B
        gbc.setState(0xd3ae, 0x3a98, 0x3e90, 0x69f8, 0xce07, 0xccf4, 0x0, 0x1);
        gbc.writeMem(0xd3ae, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x3a98);
        EXPECT(gbc.pc(), 0xd3b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3ae), 0xcb);
        EXPECT(gbc.readMem(0xd3af), 0x99);
        // CB 99 005C
        gbc.setState(0xc623, 0x1c5e, 0x3560, 0x30c9, 0xfe5b, 0xd062, 0x0, 0x0);
        gbc.writeMem(0xc623, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x1c5e);
        EXPECT(gbc.pc(), 0xc625);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc623), 0xcb);
        EXPECT(gbc.readMem(0xc624), 0x99);
        // CB 99 005D
        gbc.setState(0x1dc7, 0xfa16, 0x4910, 0xf663, 0xa02d, 0x560a, 0x1, 0x0);
        gbc.writeMem(0x1dc7, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xfa16);
        EXPECT(gbc.pc(), 0x1dc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 005E
        gbc.setState(0xb384, 0xbcb7, 0xb0a0, 0xe608, 0x4ea3, 0xacbe, 0x1, 0x0);
        gbc.writeMem(0xb384, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xbcb7);
        EXPECT(gbc.pc(), 0xb386);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb384), 0xcb);
        EXPECT(gbc.readMem(0xb385), 0x99);
        // CB 99 005F
        gbc.setState(0x54e, 0xa64d, 0xbb10, 0x91db, 0xcb14, 0xe328, 0x1, 0x0);
        gbc.writeMem(0x54e, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xa64d);
        EXPECT(gbc.pc(), 0x550);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0060
        gbc.setState(0x94ca, 0x4f6f, 0xb5b0, 0xd8ef, 0x58ae, 0xedef, 0x0, 0x0);
        gbc.writeMem(0x94ca, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x4f6f);
        EXPECT(gbc.pc(), 0x94cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94ca), 0xcb);
        EXPECT(gbc.readMem(0x94cb), 0x99);
        // CB 99 0061
        gbc.setState(0x24ea, 0xa741, 0x4830, 0x9a92, 0x63d6, 0xcf84, 0x1, 0x1);
        gbc.writeMem(0x24ea, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xa741);
        EXPECT(gbc.pc(), 0x24ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0062
        gbc.setState(0x76cc, 0xe4c0, 0x8eb0, 0xb409, 0x695c, 0x8f51, 0x0, 0x0);
        gbc.writeMem(0x76cc, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xe4c0);
        EXPECT(gbc.pc(), 0x76ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0063
        gbc.setState(0x4656, 0x418e, 0x39e0, 0xbf63, 0xcdd3, 0x237a, 0x1, 0x0);
        gbc.writeMem(0x4656, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x418e);
        EXPECT(gbc.pc(), 0x4658);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0064
        gbc.setState(0x515, 0xd674, 0x6b00, 0x2fc, 0xce30, 0x427f, 0x0, 0x0);
        gbc.writeMem(0x515, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xd674);
        EXPECT(gbc.pc(), 0x517);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0065
        gbc.setState(0x8f95, 0x29e9, 0xe5a0, 0x6da5, 0xd3bf, 0x5938, 0x0, 0x1);
        gbc.writeMem(0x8f95, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x29e9);
        EXPECT(gbc.pc(), 0x8f97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f95), 0xcb);
        EXPECT(gbc.readMem(0x8f96), 0x99);
        // CB 99 0066
        gbc.setState(0x6f49, 0xa616, 0x29b0, 0xf510, 0xb810, 0x13e5, 0x1, 0x1);
        gbc.writeMem(0x6f49, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xa616);
        EXPECT(gbc.pc(), 0x6f4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0067
        gbc.setState(0x66dd, 0xb430, 0x5bc0, 0xa332, 0xab8f, 0x1243, 0x0, 0x0);
        gbc.writeMem(0x66dd, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xb430);
        EXPECT(gbc.pc(), 0x66df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0068
        gbc.setState(0xdcb5, 0xa4cc, 0x7a50, 0x99ce, 0x3cb3, 0x3eb4, 0x1, 0x0);
        gbc.writeMem(0xdcb5, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xa4cc);
        EXPECT(gbc.pc(), 0xdcb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcb5), 0xcb);
        EXPECT(gbc.readMem(0xdcb6), 0x99);
        // CB 99 0069
        gbc.setState(0x99a2, 0x7e54, 0x1d80, 0x20eb, 0x6fbf, 0x4225, 0x1, 0x1);
        gbc.writeMem(0x99a2, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x7e54);
        EXPECT(gbc.pc(), 0x99a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99a2), 0xcb);
        EXPECT(gbc.readMem(0x99a3), 0x99);
        // CB 99 006A
        gbc.setState(0x985f, 0x4911, 0xf770, 0xecb0, 0x8fc5, 0x4dfc, 0x0, 0x0);
        gbc.writeMem(0x985f, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x4911);
        EXPECT(gbc.pc(), 0x9861);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x985f), 0xcb);
        EXPECT(gbc.readMem(0x9860), 0x99);
        // CB 99 006B
        gbc.setState(0x64ae, 0xc4f1, 0xe2e0, 0x705c, 0xaee6, 0x1779, 0x1, 0x1);
        gbc.writeMem(0x64ae, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xc4f1);
        EXPECT(gbc.pc(), 0x64b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 006C
        gbc.setState(0x4d12, 0xfd2d, 0x3270, 0x8d68, 0x7d5a, 0x3f1f, 0x1, 0x1);
        gbc.writeMem(0x4d12, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xfd2d);
        EXPECT(gbc.pc(), 0x4d14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 006D
        gbc.setState(0xd13d, 0x9b87, 0x3e60, 0x7449, 0x91b3, 0x1d3d, 0x0, 0x1);
        gbc.writeMem(0xd13d, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x9b87);
        EXPECT(gbc.pc(), 0xd13f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd13d), 0xcb);
        EXPECT(gbc.readMem(0xd13e), 0x99);
        // CB 99 006E
        gbc.setState(0x6026, 0xb0a8, 0x3a90, 0x5479, 0xf8b, 0xd104, 0x1, 0x1);
        gbc.writeMem(0x6026, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xb0a8);
        EXPECT(gbc.pc(), 0x6028);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 006F
        gbc.setState(0x8d07, 0xea01, 0xdb00, 0x4d2c, 0xc251, 0xb6c7, 0x1, 0x0);
        gbc.writeMem(0x8d07, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xea01);
        EXPECT(gbc.pc(), 0x8d09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d07), 0xcb);
        EXPECT(gbc.readMem(0x8d08), 0x99);
        // CB 99 0070
        gbc.setState(0xfb4, 0xe480, 0x1a60, 0x8f7, 0xb674, 0x9c03, 0x1, 0x1);
        gbc.writeMem(0xfb4, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xe480);
        EXPECT(gbc.pc(), 0xfb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0071
        gbc.setState(0x51a8, 0xfde9, 0x3770, 0x1cfe, 0xae65, 0x7c9c, 0x0, 0x0);
        gbc.writeMem(0x51a8, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xfde9);
        EXPECT(gbc.pc(), 0x51aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0072
        gbc.setState(0x8262, 0x61e7, 0xc10, 0x2df1, 0xb392, 0x683c, 0x0, 0x0);
        gbc.writeMem(0x8262, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x61e7);
        EXPECT(gbc.pc(), 0x8264);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8262), 0xcb);
        EXPECT(gbc.readMem(0x8263), 0x99);
        // CB 99 0073
        gbc.setState(0x8229, 0x9562, 0xd820, 0x2086, 0x939d, 0x5628, 0x0, 0x0);
        gbc.writeMem(0x8229, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x9562);
        EXPECT(gbc.pc(), 0x822b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8229), 0xcb);
        EXPECT(gbc.readMem(0x822a), 0x99);
        // CB 99 0074
        gbc.setState(0xc4ac, 0x6237, 0x1ae0, 0x70c1, 0x57b1, 0x107f, 0x0, 0x0);
        gbc.writeMem(0xc4ac, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x6237);
        EXPECT(gbc.pc(), 0xc4ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4ac), 0xcb);
        EXPECT(gbc.readMem(0xc4ad), 0x99);
        // CB 99 0075
        gbc.setState(0x42ed, 0xef8c, 0x18a0, 0xac24, 0x2480, 0x2145, 0x1, 0x0);
        gbc.writeMem(0x42ed, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xef8c);
        EXPECT(gbc.pc(), 0x42ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0076
        gbc.setState(0xad4e, 0x7fe0, 0x9ab0, 0x8536, 0xd875, 0x59c4, 0x0, 0x0);
        gbc.writeMem(0xad4e, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x7fe0);
        EXPECT(gbc.pc(), 0xad50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad4e), 0xcb);
        EXPECT(gbc.readMem(0xad4f), 0x99);
        // CB 99 0077
        gbc.setState(0x4c63, 0xf3f, 0x6020, 0x8c05, 0x9f61, 0x809a, 0x1, 0x1);
        gbc.writeMem(0x4c63, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xf3f);
        EXPECT(gbc.pc(), 0x4c65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0078
        gbc.setState(0x443b, 0xf00, 0x7840, 0x1c38, 0x430d, 0x6a9, 0x0, 0x0);
        gbc.writeMem(0x443b, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xf00);
        EXPECT(gbc.pc(), 0x443d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0079
        gbc.setState(0xddd6, 0x849d, 0xab50, 0xc9db, 0xe828, 0x8365, 0x0, 0x0);
        gbc.writeMem(0xddd6, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x849d);
        EXPECT(gbc.pc(), 0xddd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddd6), 0xcb);
        EXPECT(gbc.readMem(0xddd7), 0x99);
        // CB 99 007A
        gbc.setState(0x9ee1, 0x3e91, 0x54a0, 0x6d2, 0x6dd1, 0xd527, 0x1, 0x0);
        gbc.writeMem(0x9ee1, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x3e91);
        EXPECT(gbc.pc(), 0x9ee3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ee1), 0xcb);
        EXPECT(gbc.readMem(0x9ee2), 0x99);
        // CB 99 007B
        gbc.setState(0x423e, 0x84d6, 0xcdf0, 0xd094, 0x2f0, 0x7352, 0x0, 0x0);
        gbc.writeMem(0x423e, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x84d6);
        EXPECT(gbc.pc(), 0x4240);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 007C
        gbc.setState(0xd357, 0xdb8, 0xb770, 0xc45f, 0xbfcd, 0xec17, 0x0, 0x1);
        gbc.writeMem(0xd357, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xdb8);
        EXPECT(gbc.pc(), 0xd359);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd357), 0xcb);
        EXPECT(gbc.readMem(0xd358), 0x99);
        // CB 99 007D
        gbc.setState(0xba4e, 0xeaaa, 0x3ab0, 0xc900, 0xc710, 0xcab7, 0x1, 0x0);
        gbc.writeMem(0xba4e, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xeaaa);
        EXPECT(gbc.pc(), 0xba50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba4e), 0xcb);
        EXPECT(gbc.readMem(0xba4f), 0x99);
        // CB 99 007E
        gbc.setState(0x3bc6, 0xe4e0, 0x7760, 0xd41, 0xfbe7, 0x8968, 0x0, 0x1);
        gbc.writeMem(0x3bc6, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xe4e0);
        EXPECT(gbc.pc(), 0x3bc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 007F
        gbc.setState(0x97f, 0xbc80, 0xb590, 0x91a1, 0xf7f8, 0x9201, 0x1, 0x1);
        gbc.writeMem(0x97f, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xbc80);
        EXPECT(gbc.pc(), 0x981);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0080
        gbc.setState(0x7ffa, 0x48d4, 0xc2d0, 0x7425, 0x24f8, 0xdb1c, 0x1, 0x1);
        gbc.writeMem(0x7ffa, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x48d4);
        EXPECT(gbc.pc(), 0x7ffc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0081
        gbc.setState(0x763d, 0xa918, 0xb570, 0xbc3d, 0x92ed, 0x4b49, 0x1, 0x1);
        gbc.writeMem(0x763d, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xa918);
        EXPECT(gbc.pc(), 0x763f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0082
        gbc.setState(0x7316, 0xc170, 0xf30, 0x6e20, 0x7cf5, 0xe15, 0x1, 0x1);
        gbc.writeMem(0x7316, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xc170);
        EXPECT(gbc.pc(), 0x7318);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0084
        gbc.setState(0xc893, 0x2deb, 0x130, 0x20fa, 0x5140, 0x49d1, 0x0, 0x0);
        gbc.writeMem(0xc893, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x2deb);
        EXPECT(gbc.pc(), 0xc895);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc893), 0xcb);
        EXPECT(gbc.readMem(0xc894), 0x99);
        // CB 99 0085
        gbc.setState(0xd47d, 0xfc6c, 0x1f20, 0x13d4, 0x1037, 0xac12, 0x1, 0x1);
        gbc.writeMem(0xd47d, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xfc6c);
        EXPECT(gbc.pc(), 0xd47f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd47d), 0xcb);
        EXPECT(gbc.readMem(0xd47e), 0x99);
        // CB 99 0086
        gbc.setState(0xe0eb, 0x6199, 0x970, 0xfeed, 0x5864, 0x2737, 0x0, 0x0);
        gbc.writeMem(0xe0eb, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x6199);
        EXPECT(gbc.pc(), 0xe0ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0eb), 0xcb);
        EXPECT(gbc.readMem(0xe0ec), 0x99);
        // CB 99 0087
        gbc.setState(0x722c, 0xbca6, 0x4510, 0x86ed, 0x3a46, 0x5186, 0x1, 0x1);
        gbc.writeMem(0x722c, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xbca6);
        EXPECT(gbc.pc(), 0x722e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0088
        gbc.setState(0x96b2, 0xb4fa, 0xe900, 0xf76a, 0x5cf0, 0x6e9b, 0x1, 0x0);
        gbc.writeMem(0x96b2, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xb4fa);
        EXPECT(gbc.pc(), 0x96b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96b2), 0xcb);
        EXPECT(gbc.readMem(0x96b3), 0x99);
        // CB 99 0089
        gbc.setState(0x54eb, 0xffce, 0x40, 0x845a, 0xc192, 0xcdb2, 0x0, 0x1);
        gbc.writeMem(0x54eb, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xffce);
        EXPECT(gbc.pc(), 0x54ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 008A
        gbc.setState(0x7d56, 0xec37, 0xb40, 0xd962, 0x414b, 0xb353, 0x1, 0x1);
        gbc.writeMem(0x7d56, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xec37);
        EXPECT(gbc.pc(), 0x7d58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 008B
        gbc.setState(0x8e84, 0xf1da, 0x7dc0, 0xe0b0, 0x9ddd, 0x3a7, 0x1, 0x0);
        gbc.writeMem(0x8e84, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xf1da);
        EXPECT(gbc.pc(), 0x8e86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e84), 0xcb);
        EXPECT(gbc.readMem(0x8e85), 0x99);
        // CB 99 008C
        gbc.setState(0x56aa, 0x65d5, 0xf60, 0x1007, 0x463e, 0x7332, 0x1, 0x0);
        gbc.writeMem(0x56aa, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x65d5);
        EXPECT(gbc.pc(), 0x56ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 008D
        gbc.setState(0xd0b0, 0x32e9, 0x8ac0, 0x10fd, 0x7d74, 0xa28d, 0x0, 0x1);
        gbc.writeMem(0xd0b0, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x32e9);
        EXPECT(gbc.pc(), 0xd0b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0b0), 0xcb);
        EXPECT(gbc.readMem(0xd0b1), 0x99);
        // CB 99 008E
        gbc.setState(0x2ff6, 0x41f7, 0xd2f0, 0xb85, 0x9725, 0x7c92, 0x1, 0x0);
        gbc.writeMem(0x2ff6, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x41f7);
        EXPECT(gbc.pc(), 0x2ff8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 008F
        gbc.setState(0x1244, 0xb663, 0x4c50, 0x80c0, 0xfac4, 0x624f, 0x1, 0x1);
        gbc.writeMem(0x1244, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xb663);
        EXPECT(gbc.pc(), 0x1246);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0090
        gbc.setState(0x161, 0xce1b, 0x1fe0, 0x1f87, 0x1bc9, 0xf9f9, 0x1, 0x0);
        gbc.writeMem(0x161, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xce1b);
        EXPECT(gbc.pc(), 0x163);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0091
        gbc.setState(0x807e, 0x170c, 0x86d0, 0xabf, 0xb45b, 0x3c42, 0x1, 0x1);
        gbc.writeMem(0x807e, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x170c);
        EXPECT(gbc.pc(), 0x8080);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x807e), 0xcb);
        EXPECT(gbc.readMem(0x807f), 0x99);
        // CB 99 0092
        gbc.setState(0xe6e9, 0x3d92, 0xbbf0, 0x67e4, 0xefb4, 0x6d64, 0x0, 0x0);
        gbc.writeMem(0xe6e9, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x3d92);
        EXPECT(gbc.pc(), 0xe6eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6e9), 0xcb);
        EXPECT(gbc.readMem(0xe6ea), 0x99);
        // CB 99 0093
        gbc.setState(0x63b6, 0xda78, 0xf060, 0xad2c, 0x5d0c, 0x377d, 0x0, 0x0);
        gbc.writeMem(0x63b6, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xda78);
        EXPECT(gbc.pc(), 0x63b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0094
        gbc.setState(0x2fbe, 0xae11, 0xa050, 0x715d, 0x1727, 0xd089, 0x1, 0x1);
        gbc.writeMem(0x2fbe, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xae11);
        EXPECT(gbc.pc(), 0x2fc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0095
        gbc.setState(0x2e0b, 0x853a, 0x740, 0x664b, 0x5a99, 0xdd61, 0x0, 0x0);
        gbc.writeMem(0x2e0b, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x853a);
        EXPECT(gbc.pc(), 0x2e0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0096
        gbc.setState(0x91f9, 0xb65b, 0x28d0, 0xfa79, 0xf35d, 0xa20c, 0x1, 0x1);
        gbc.writeMem(0x91f9, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xb65b);
        EXPECT(gbc.pc(), 0x91fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91f9), 0xcb);
        EXPECT(gbc.readMem(0x91fa), 0x99);
        // CB 99 0097
        gbc.setState(0x37d0, 0x59e6, 0xf110, 0x98f, 0x52a4, 0xa48b, 0x0, 0x0);
        gbc.writeMem(0x37d0, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x59e6);
        EXPECT(gbc.pc(), 0x37d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0098
        gbc.setState(0x7be1, 0xe1, 0x57b0, 0x29b1, 0xd798, 0x10b3, 0x0, 0x1);
        gbc.writeMem(0x7be1, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xe1);
        EXPECT(gbc.pc(), 0x7be3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0099
        gbc.setState(0x152e, 0xe56d, 0x79d0, 0x25b2, 0xf203, 0x76ef, 0x1, 0x0);
        gbc.writeMem(0x152e, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xe56d);
        EXPECT(gbc.pc(), 0x1530);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 009A
        gbc.setState(0x1b4b, 0x6163, 0x4ba0, 0x843b, 0xa0bb, 0xba71, 0x1, 0x1);
        gbc.writeMem(0x1b4b, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x6163);
        EXPECT(gbc.pc(), 0x1b4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 009C
        gbc.setState(0x3ec2, 0x8586, 0xef00, 0x24bb, 0xb17f, 0x5259, 0x0, 0x0);
        gbc.writeMem(0x3ec2, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x8586);
        EXPECT(gbc.pc(), 0x3ec4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 009D
        gbc.setState(0xc673, 0x6d07, 0x62b0, 0x810d, 0x542d, 0x12b6, 0x1, 0x0);
        gbc.writeMem(0xc673, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x6d07);
        EXPECT(gbc.pc(), 0xc675);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc673), 0xcb);
        EXPECT(gbc.readMem(0xc674), 0x99);
        // CB 99 009E
        gbc.setState(0x2ec2, 0x9b82, 0xb600, 0x57e6, 0x37d1, 0xcea9, 0x0, 0x0);
        gbc.writeMem(0x2ec2, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x9b82);
        EXPECT(gbc.pc(), 0x2ec4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 009F
        gbc.setState(0x8a9, 0x51b2, 0x50c0, 0x5cad, 0x3075, 0x7e2f, 0x1, 0x1);
        gbc.writeMem(0x8a9, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x51b2);
        EXPECT(gbc.pc(), 0x8ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 00A0
        gbc.setState(0x409e, 0xb8df, 0x3c80, 0x4072, 0x6d1, 0x635b, 0x1, 0x1);
        gbc.writeMem(0x409e, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xb8df);
        EXPECT(gbc.pc(), 0x40a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 00A1
        gbc.setState(0x4b1a, 0x1a3b, 0x5ee0, 0xe431, 0xbcb1, 0x4297, 0x0, 0x0);
        gbc.writeMem(0x4b1a, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x1a3b);
        EXPECT(gbc.pc(), 0x4b1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 00A2
        gbc.setState(0x4bf8, 0x666d, 0x2870, 0xf1f, 0xe0ae, 0x35a1, 0x0, 0x1);
        gbc.writeMem(0x4bf8, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x666d);
        EXPECT(gbc.pc(), 0x4bfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 00A3
        gbc.setState(0x559f, 0xe54f, 0xcb0, 0xf41f, 0x9dc4, 0x4146, 0x0, 0x1);
        gbc.writeMem(0x559f, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xe54f);
        EXPECT(gbc.pc(), 0x55a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 00A4
        gbc.setState(0xed2b, 0xad58, 0x8120, 0xc52f, 0xc03, 0xc486, 0x0, 0x1);
        gbc.writeMem(0xed2b, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xad58);
        EXPECT(gbc.pc(), 0xed2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed2b), 0xcb);
        EXPECT(gbc.readMem(0xed2c), 0x99);
        // CB 99 00A5
        gbc.setState(0xe195, 0xf86b, 0xce50, 0xca98, 0x9196, 0x28c, 0x1, 0x1);
        gbc.writeMem(0xe195, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xf86b);
        EXPECT(gbc.pc(), 0xe197);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe195), 0xcb);
        EXPECT(gbc.readMem(0xe196), 0x99);
        // CB 99 00A6
        gbc.setState(0x5106, 0xcc7a, 0xa840, 0x1016, 0x9bb6, 0x1e63, 0x1, 0x0);
        gbc.writeMem(0x5106, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xcc7a);
        EXPECT(gbc.pc(), 0x5108);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 00A7
        gbc.setState(0x79d9, 0xc9ec, 0x450, 0x3780, 0xdaa0, 0x8314, 0x1, 0x1);
        gbc.writeMem(0x79d9, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xc9ec);
        EXPECT(gbc.pc(), 0x79db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 00A9
        gbc.setState(0x333f, 0xb4c9, 0x1ed0, 0x9353, 0x4918, 0x6184, 0x0, 0x1);
        gbc.writeMem(0x333f, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xb4c9);
        EXPECT(gbc.pc(), 0x3341);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 00AA
        gbc.setState(0x9ad2, 0xa2b2, 0x5760, 0xc893, 0x75c2, 0xcd6a, 0x0, 0x1);
        gbc.writeMem(0x9ad2, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xa2b2);
        EXPECT(gbc.pc(), 0x9ad4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ad2), 0xcb);
        EXPECT(gbc.readMem(0x9ad3), 0x99);
        // CB 99 00AB
        gbc.setState(0xb431, 0x66e7, 0xbc40, 0xc4d0, 0x725a, 0xe574, 0x1, 0x0);
        gbc.writeMem(0xb431, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x66e7);
        EXPECT(gbc.pc(), 0xb433);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb431), 0xcb);
        EXPECT(gbc.readMem(0xb432), 0x99);
        // CB 99 00AC
        gbc.setState(0x17ce, 0x346c, 0xb030, 0x869b, 0xa6f3, 0xb1, 0x1, 0x0);
        gbc.writeMem(0x17ce, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x346c);
        EXPECT(gbc.pc(), 0x17d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 00AD
        gbc.setState(0xdc1d, 0x1511, 0x9b10, 0x1e, 0x9002, 0x7480, 0x1, 0x1);
        gbc.writeMem(0xdc1d, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x1511);
        EXPECT(gbc.pc(), 0xdc1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc1d), 0xcb);
        EXPECT(gbc.readMem(0xdc1e), 0x99);
        // CB 99 00AE
        gbc.setState(0xbf1b, 0xfd11, 0x9760, 0x3f88, 0x982b, 0x9616, 0x1, 0x0);
        gbc.writeMem(0xbf1b, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xfd11);
        EXPECT(gbc.pc(), 0xbf1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf1b), 0xcb);
        EXPECT(gbc.readMem(0xbf1c), 0x99);
        // CB 99 00AF
        gbc.setState(0xb542, 0x4033, 0x40b0, 0x9c94, 0x5776, 0x48aa, 0x0, 0x1);
        gbc.writeMem(0xb542, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x4033);
        EXPECT(gbc.pc(), 0xb544);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb542), 0xcb);
        EXPECT(gbc.readMem(0xb543), 0x99);
        // CB 99 00B0
        gbc.setState(0x8b3b, 0x693e, 0xf570, 0x4a09, 0x7141, 0x207e, 0x1, 0x1);
        gbc.writeMem(0x8b3b, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x693e);
        EXPECT(gbc.pc(), 0x8b3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b3b), 0xcb);
        EXPECT(gbc.readMem(0x8b3c), 0x99);
        // CB 99 00B1
        gbc.setState(0x50fe, 0xf74b, 0xef70, 0x1be, 0xba2c, 0x8ca5, 0x1, 0x0);
        gbc.writeMem(0x50fe, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xf74b);
        EXPECT(gbc.pc(), 0x5100);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 00B2
        gbc.setState(0xbca7, 0xb279, 0x2170, 0xd78b, 0xdf48, 0xd6f8, 0x0, 0x1);
        gbc.writeMem(0xbca7, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xb279);
        EXPECT(gbc.pc(), 0xbca9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbca7), 0xcb);
        EXPECT(gbc.readMem(0xbca8), 0x99);
        // CB 99 00B3
        gbc.setState(0x8813, 0x8e5a, 0x99e0, 0x6baf, 0x9397, 0xe8d7, 0x1, 0x0);
        gbc.writeMem(0x8813, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x8e5a);
        EXPECT(gbc.pc(), 0x8815);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8813), 0xcb);
        EXPECT(gbc.readMem(0x8814), 0x99);
        // CB 99 00B4
        gbc.setState(0xf9e, 0xa81c, 0xd360, 0x796a, 0x4b, 0xf50, 0x1, 0x1);
        gbc.writeMem(0xf9e, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xa81c);
        EXPECT(gbc.pc(), 0xfa0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 00B5
        gbc.setState(0x92c0, 0xa549, 0xeb90, 0xad6e, 0x35cc, 0x2de, 0x1, 0x1);
        gbc.writeMem(0x92c0, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xa549);
        EXPECT(gbc.pc(), 0x92c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92c0), 0xcb);
        EXPECT(gbc.readMem(0x92c1), 0x99);
        // CB 99 00B6
        gbc.setState(0xda3d, 0x4d0b, 0x80c0, 0xe12d, 0xa4d1, 0x8255, 0x0, 0x1);
        gbc.writeMem(0xda3d, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x4d0b);
        EXPECT(gbc.pc(), 0xda3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda3d), 0xcb);
        EXPECT(gbc.readMem(0xda3e), 0x99);
        // CB 99 00B7
        gbc.setState(0x27ae, 0x45a2, 0x2b60, 0x2323, 0x8bea, 0x61a5, 0x0, 0x1);
        gbc.writeMem(0x27ae, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x45a2);
        EXPECT(gbc.pc(), 0x27b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 00B8
        gbc.setState(0xb1c4, 0xb9b4, 0x9c10, 0x4022, 0x7ff2, 0xf0be, 0x1, 0x1);
        gbc.writeMem(0xb1c4, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xb9b4);
        EXPECT(gbc.pc(), 0xb1c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1c4), 0xcb);
        EXPECT(gbc.readMem(0xb1c5), 0x99);
        // CB 99 00B9
        gbc.setState(0x9cbe, 0x956c, 0x64e0, 0xd65e, 0x96ae, 0x36e3, 0x1, 0x1);
        gbc.writeMem(0x9cbe, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x956c);
        EXPECT(gbc.pc(), 0x9cc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cbe), 0xcb);
        EXPECT(gbc.readMem(0x9cbf), 0x99);
        // CB 99 00BA
        gbc.setState(0xef1e, 0x2e3c, 0x60b0, 0x780c, 0x279d, 0xe6e, 0x0, 0x1);
        gbc.writeMem(0xef1e, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x2e3c);
        EXPECT(gbc.pc(), 0xef20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef1e), 0xcb);
        EXPECT(gbc.readMem(0xef1f), 0x99);
        // CB 99 00BB
        gbc.setState(0xc485, 0x25a1, 0x5ca0, 0x35a9, 0x57c3, 0xcac4, 0x0, 0x0);
        gbc.writeMem(0xc485, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x25a1);
        EXPECT(gbc.pc(), 0xc487);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc485), 0xcb);
        EXPECT(gbc.readMem(0xc486), 0x99);
        // CB 99 00BC
        gbc.setState(0x4506, 0xda5, 0x1b80, 0x56c, 0x41e9, 0x2a46, 0x0, 0x1);
        gbc.writeMem(0x4506, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xda5);
        EXPECT(gbc.pc(), 0x4508);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 00BD
        gbc.setState(0x86a5, 0x35f2, 0xd280, 0xc2b1, 0x1106, 0xeb63, 0x0, 0x0);
        gbc.writeMem(0x86a5, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x35f2);
        EXPECT(gbc.pc(), 0x86a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86a5), 0xcb);
        EXPECT(gbc.readMem(0x86a6), 0x99);
        // CB 99 00BE
        gbc.setState(0x9727, 0x155b, 0xf930, 0xcd11, 0x8f9d, 0x2ba7, 0x0, 0x1);
        gbc.writeMem(0x9727, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x155b);
        EXPECT(gbc.pc(), 0x9729);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9727), 0xcb);
        EXPECT(gbc.readMem(0x9728), 0x99);
        // CB 99 00BF
        gbc.setState(0x1074, 0xe95d, 0x7d40, 0x4840, 0x4b32, 0xc813, 0x0, 0x0);
        gbc.writeMem(0x1074, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xe95d);
        EXPECT(gbc.pc(), 0x1076);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 00C0
        gbc.setState(0xb245, 0xd153, 0x8670, 0x84c8, 0x79af, 0xc2f2, 0x1, 0x0);
        gbc.writeMem(0xb245, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xd153);
        EXPECT(gbc.pc(), 0xb247);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb245), 0xcb);
        EXPECT(gbc.readMem(0xb246), 0x99);
        // CB 99 00C1
        gbc.setState(0xa050, 0x16c, 0x2c0, 0x38f4, 0x5c84, 0xbbe0, 0x1, 0x1);
        gbc.writeMem(0xa050, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x16c);
        EXPECT(gbc.pc(), 0xa052);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa050), 0xcb);
        EXPECT(gbc.readMem(0xa051), 0x99);
        // CB 99 00C2
        gbc.setState(0x5408, 0x33ec, 0x9200, 0x1bda, 0xd335, 0x5a1a, 0x1, 0x1);
        gbc.writeMem(0x5408, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x33ec);
        EXPECT(gbc.pc(), 0x540a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 00C3
        gbc.setState(0x7406, 0xa62d, 0x74e0, 0xd9ec, 0x3294, 0x2e97, 0x1, 0x1);
        gbc.writeMem(0x7406, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xa62d);
        EXPECT(gbc.pc(), 0x7408);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 00C4
        gbc.setState(0x8d33, 0x8, 0x36e0, 0x24e2, 0x7f5a, 0xac37, 0x0, 0x0);
        gbc.writeMem(0x8d33, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x8);
        EXPECT(gbc.pc(), 0x8d35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d33), 0xcb);
        EXPECT(gbc.readMem(0x8d34), 0x99);
        // CB 99 00C5
        gbc.setState(0x8d85, 0x7d1f, 0x4af0, 0x523c, 0xe538, 0xb6bc, 0x0, 0x1);
        gbc.writeMem(0x8d85, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x7d1f);
        EXPECT(gbc.pc(), 0x8d87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d85), 0xcb);
        EXPECT(gbc.readMem(0x8d86), 0x99);
        // CB 99 00C6
        gbc.setState(0x1220, 0xe821, 0x2530, 0xefd4, 0xa5c6, 0x744c, 0x0, 0x0);
        gbc.writeMem(0x1220, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xe821);
        EXPECT(gbc.pc(), 0x1222);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 00C7
        gbc.setState(0x11a1, 0x1cc9, 0xf090, 0x417a, 0x222a, 0x296b, 0x1, 0x1);
        gbc.writeMem(0x11a1, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x1cc9);
        EXPECT(gbc.pc(), 0x11a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 00C8
        gbc.setState(0xedd9, 0xa0a1, 0xc160, 0x913a, 0x6bba, 0xfe6f, 0x1, 0x0);
        gbc.writeMem(0xedd9, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xa0a1);
        EXPECT(gbc.pc(), 0xeddb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedd9), 0xcb);
        EXPECT(gbc.readMem(0xedda), 0x99);
        // CB 99 00C9
        gbc.setState(0x111d, 0x10f5, 0x3f50, 0x3aee, 0x518e, 0x12fa, 0x0, 0x1);
        gbc.writeMem(0x111d, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x10f5);
        EXPECT(gbc.pc(), 0x111f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 00CA
        gbc.setState(0x8f1c, 0x7ab8, 0xb620, 0x31b4, 0x99b5, 0x8db9, 0x1, 0x1);
        gbc.writeMem(0x8f1c, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x7ab8);
        EXPECT(gbc.pc(), 0x8f1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f1c), 0xcb);
        EXPECT(gbc.readMem(0x8f1d), 0x99);
        // CB 99 00CB
        gbc.setState(0x20e1, 0xfbe0, 0xc970, 0xf38c, 0xba4f, 0x5f96, 0x0, 0x0);
        gbc.writeMem(0x20e1, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xfbe0);
        EXPECT(gbc.pc(), 0x20e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 00CC
        gbc.setState(0x5f08, 0x85af, 0x1450, 0x4ae9, 0xd821, 0xe172, 0x0, 0x0);
        gbc.writeMem(0x5f08, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x85af);
        EXPECT(gbc.pc(), 0x5f0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 00CD
        gbc.setState(0x7f7c, 0x3e30, 0x8880, 0xba2f, 0xb622, 0x8a78, 0x1, 0x0);
        gbc.writeMem(0x7f7c, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x3e30);
        EXPECT(gbc.pc(), 0x7f7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 00CE
        gbc.setState(0x887f, 0xf3e9, 0xf340, 0x7841, 0x184a, 0x5fb, 0x0, 0x0);
        gbc.writeMem(0x887f, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xf3e9);
        EXPECT(gbc.pc(), 0x8881);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x887f), 0xcb);
        EXPECT(gbc.readMem(0x8880), 0x99);
        // CB 99 00CF
        gbc.setState(0xd62e, 0xb609, 0x2b60, 0x6477, 0x8f5a, 0xd2ab, 0x1, 0x1);
        gbc.writeMem(0xd62e, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xb609);
        EXPECT(gbc.pc(), 0xd630);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd62e), 0xcb);
        EXPECT(gbc.readMem(0xd62f), 0x99);
        // CB 99 00D0
        gbc.setState(0x6b0, 0x2ade, 0xb610, 0x28f3, 0x44b0, 0xc881, 0x0, 0x1);
        gbc.writeMem(0x6b0, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x2ade);
        EXPECT(gbc.pc(), 0x6b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 00D1
        gbc.setState(0x1adb, 0xb5ca, 0x66b0, 0x3121, 0xee62, 0xe0ff, 0x1, 0x0);
        gbc.writeMem(0x1adb, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xb5ca);
        EXPECT(gbc.pc(), 0x1add);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 00D2
        gbc.setState(0xa6f6, 0x9c70, 0xdca0, 0xea0b, 0xa035, 0xe690, 0x0, 0x0);
        gbc.writeMem(0xa6f6, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x9c70);
        EXPECT(gbc.pc(), 0xa6f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6f6), 0xcb);
        EXPECT(gbc.readMem(0xa6f7), 0x99);
        // CB 99 00D3
        gbc.setState(0xcb3b, 0xbf71, 0x2640, 0xf841, 0x22da, 0x6221, 0x0, 0x0);
        gbc.writeMem(0xcb3b, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xbf71);
        EXPECT(gbc.pc(), 0xcb3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb3b), 0xcb);
        EXPECT(gbc.readMem(0xcb3c), 0x99);
        // CB 99 00D4
        gbc.setState(0x533a, 0x9c4f, 0x4db0, 0x4789, 0x9331, 0xfab3, 0x0, 0x1);
        gbc.writeMem(0x533a, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x9c4f);
        EXPECT(gbc.pc(), 0x533c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 00D5
        gbc.setState(0x7707, 0xd152, 0x31e0, 0x1f9, 0x8cf7, 0x4b50, 0x0, 0x0);
        gbc.writeMem(0x7707, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xd152);
        EXPECT(gbc.pc(), 0x7709);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 00D6
        gbc.setState(0x8ad0, 0x7bd1, 0xd00, 0xe2ab, 0x3607, 0x86d2, 0x1, 0x1);
        gbc.writeMem(0x8ad0, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x7bd1);
        EXPECT(gbc.pc(), 0x8ad2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ad0), 0xcb);
        EXPECT(gbc.readMem(0x8ad1), 0x99);
        // CB 99 00D7
        gbc.setState(0xe90f, 0xba15, 0x2710, 0x1348, 0xf27c, 0xd946, 0x1, 0x1);
        gbc.writeMem(0xe90f, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xba15);
        EXPECT(gbc.pc(), 0xe911);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe90f), 0xcb);
        EXPECT(gbc.readMem(0xe910), 0x99);
        // CB 99 00D8
        gbc.setState(0xea9a, 0xecaf, 0x9a10, 0x959, 0x70a9, 0x42be, 0x1, 0x1);
        gbc.writeMem(0xea9a, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xecaf);
        EXPECT(gbc.pc(), 0xea9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea9a), 0xcb);
        EXPECT(gbc.readMem(0xea9b), 0x99);
        // CB 99 00D9
        gbc.setState(0x50cf, 0x1927, 0x1250, 0xdfed, 0x592, 0xa993, 0x1, 0x1);
        gbc.writeMem(0x50cf, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x1927);
        EXPECT(gbc.pc(), 0x50d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 00DA
        gbc.setState(0xef65, 0x2554, 0xeb80, 0xb363, 0xb1ff, 0x3f1f, 0x1, 0x1);
        gbc.writeMem(0xef65, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x2554);
        EXPECT(gbc.pc(), 0xef67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef65), 0xcb);
        EXPECT(gbc.readMem(0xef66), 0x99);
        // CB 99 00DB
        gbc.setState(0xbf3a, 0x5df7, 0x9b80, 0xe7ac, 0x8f4b, 0x602f, 0x1, 0x1);
        gbc.writeMem(0xbf3a, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x5df7);
        EXPECT(gbc.pc(), 0xbf3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf3a), 0xcb);
        EXPECT(gbc.readMem(0xbf3b), 0x99);
        // CB 99 00DC
        gbc.setState(0xda47, 0x85bb, 0xf950, 0x309, 0x6633, 0xc7ef, 0x1, 0x1);
        gbc.writeMem(0xda47, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x85bb);
        EXPECT(gbc.pc(), 0xda49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda47), 0xcb);
        EXPECT(gbc.readMem(0xda48), 0x99);
        // CB 99 00DD
        gbc.setState(0xd19d, 0xbfc9, 0xd8d0, 0x12bd, 0xc152, 0x1eb6, 0x1, 0x1);
        gbc.writeMem(0xd19d, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xbfc9);
        EXPECT(gbc.pc(), 0xd19f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd19d), 0xcb);
        EXPECT(gbc.readMem(0xd19e), 0x99);
        // CB 99 00DE
        gbc.setState(0x50d8, 0x5eae, 0x670, 0xf84c, 0x1b61, 0xfc54, 0x1, 0x1);
        gbc.writeMem(0x50d8, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x5eae);
        EXPECT(gbc.pc(), 0x50da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 00E0
        gbc.setState(0x7899, 0xf607, 0x2f0, 0x8e1, 0x631d, 0x7d96, 0x0, 0x0);
        gbc.writeMem(0x7899, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xf607);
        EXPECT(gbc.pc(), 0x789b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 00E1
        gbc.setState(0xb6b0, 0x4a3b, 0x58c0, 0x1837, 0x51bd, 0x424, 0x0, 0x0);
        gbc.writeMem(0xb6b0, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x4a3b);
        EXPECT(gbc.pc(), 0xb6b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6b0), 0xcb);
        EXPECT(gbc.readMem(0xb6b1), 0x99);
        // CB 99 00E2
        gbc.setState(0xaaae, 0xaec, 0x9da0, 0x396, 0x5512, 0x2752, 0x0, 0x0);
        gbc.writeMem(0xaaae, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xaec);
        EXPECT(gbc.pc(), 0xaab0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaae), 0xcb);
        EXPECT(gbc.readMem(0xaaaf), 0x99);
        // CB 99 00E3
        gbc.setState(0x8f10, 0xb399, 0x5590, 0x41b6, 0xce83, 0xed69, 0x1, 0x1);
        gbc.writeMem(0x8f10, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xb399);
        EXPECT(gbc.pc(), 0x8f12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f10), 0xcb);
        EXPECT(gbc.readMem(0x8f11), 0x99);
        // CB 99 00E4
        gbc.setState(0x55bb, 0x199c, 0x1010, 0xfa82, 0xd368, 0x63a1, 0x1, 0x0);
        gbc.writeMem(0x55bb, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x199c);
        EXPECT(gbc.pc(), 0x55bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 00E5
        gbc.setState(0x9256, 0x7571, 0x8e90, 0x6d7b, 0x2854, 0xa302, 0x1, 0x1);
        gbc.writeMem(0x9256, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x7571);
        EXPECT(gbc.pc(), 0x9258);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9256), 0xcb);
        EXPECT(gbc.readMem(0x9257), 0x99);
        // CB 99 00E7
        gbc.setState(0xd77, 0x3b44, 0xbe40, 0xb79e, 0x37e, 0xa003, 0x1, 0x1);
        gbc.writeMem(0xd77, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x3b44);
        EXPECT(gbc.pc(), 0xd79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 00E8
        gbc.setState(0xb0db, 0x2985, 0xc510, 0x1d8a, 0x5e90, 0x503, 0x1, 0x0);
        gbc.writeMem(0xb0db, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x2985);
        EXPECT(gbc.pc(), 0xb0dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0db), 0xcb);
        EXPECT(gbc.readMem(0xb0dc), 0x99);
        // CB 99 00E9
        gbc.setState(0xe845, 0x3824, 0x8eb0, 0x712, 0xffae, 0x4bf6, 0x1, 0x1);
        gbc.writeMem(0xe845, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x3824);
        EXPECT(gbc.pc(), 0xe847);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe845), 0xcb);
        EXPECT(gbc.readMem(0xe846), 0x99);
        // CB 99 00EA
        gbc.setState(0x8e4f, 0x2103, 0xde30, 0x233c, 0x143e, 0x9a26, 0x1, 0x1);
        gbc.writeMem(0x8e4f, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x2103);
        EXPECT(gbc.pc(), 0x8e51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e4f), 0xcb);
        EXPECT(gbc.readMem(0x8e50), 0x99);
        // CB 99 00EB
        gbc.setState(0x7cd9, 0xea19, 0x1520, 0xa81e, 0xe739, 0x9eda, 0x1, 0x1);
        gbc.writeMem(0x7cd9, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xea19);
        EXPECT(gbc.pc(), 0x7cdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 00EC
        gbc.setState(0x2548, 0xabc4, 0x2060, 0x8b66, 0x4743, 0x1f38, 0x1, 0x0);
        gbc.writeMem(0x2548, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xabc4);
        EXPECT(gbc.pc(), 0x254a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 00ED
        gbc.setState(0xa415, 0xb35, 0xa1b0, 0x98f1, 0x173a, 0x9375, 0x0, 0x1);
        gbc.writeMem(0xa415, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xb35);
        EXPECT(gbc.pc(), 0xa417);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa415), 0xcb);
        EXPECT(gbc.readMem(0xa416), 0x99);
        // CB 99 00EE
        gbc.setState(0xe2a2, 0x9b50, 0xeaa0, 0x6ea4, 0x421b, 0x7f17, 0x1, 0x1);
        gbc.writeMem(0xe2a2, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x9b50);
        EXPECT(gbc.pc(), 0xe2a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2a2), 0xcb);
        EXPECT(gbc.readMem(0xe2a3), 0x99);
        // CB 99 00EF
        gbc.setState(0x15cd, 0x1a16, 0x80b0, 0x35a, 0x8816, 0xa85d, 0x1, 0x0);
        gbc.writeMem(0x15cd, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x1a16);
        EXPECT(gbc.pc(), 0x15cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 00F0
        gbc.setState(0x416a, 0x7874, 0x50d0, 0xdc62, 0x2717, 0x7da6, 0x0, 0x1);
        gbc.writeMem(0x416a, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x7874);
        EXPECT(gbc.pc(), 0x416c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 00F1
        gbc.setState(0x392b, 0xbdf9, 0xa690, 0x942c, 0x2d98, 0xac9f, 0x0, 0x0);
        gbc.writeMem(0x392b, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xbdf9);
        EXPECT(gbc.pc(), 0x392d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 00F2
        gbc.setState(0xceb0, 0xa378, 0x1800, 0x2d0, 0x3935, 0x28cc, 0x0, 0x0);
        gbc.writeMem(0xceb0, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xa378);
        EXPECT(gbc.pc(), 0xceb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xceb0), 0xcb);
        EXPECT(gbc.readMem(0xceb1), 0x99);
        // CB 99 00F3
        gbc.setState(0x252a, 0xcea6, 0x6fa0, 0xe242, 0x95cb, 0xc120, 0x0, 0x1);
        gbc.writeMem(0x252a, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xcea6);
        EXPECT(gbc.pc(), 0x252c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 00F4
        gbc.setState(0x5729, 0x4b4d, 0x180, 0xcc6b, 0xbd76, 0x895c, 0x0, 0x0);
        gbc.writeMem(0x5729, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x4b4d);
        EXPECT(gbc.pc(), 0x572b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 00F5
        gbc.setState(0x4103, 0xe2aa, 0xfce0, 0x82aa, 0xe289, 0x8664, 0x1, 0x1);
        gbc.writeMem(0x4103, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xe2aa);
        EXPECT(gbc.pc(), 0x4105);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 00F6
        gbc.setState(0xb5b0, 0x9dc3, 0xba60, 0x89c3, 0xc710, 0xabda, 0x0, 0x0);
        gbc.writeMem(0xb5b0, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x9dc3);
        EXPECT(gbc.pc(), 0xb5b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5b0), 0xcb);
        EXPECT(gbc.readMem(0xb5b1), 0x99);
        // CB 99 00F7
        gbc.setState(0x7220, 0x26fe, 0x7b00, 0x1874, 0xa99d, 0x8094, 0x0, 0x1);
        gbc.writeMem(0x7220, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x26fe);
        EXPECT(gbc.pc(), 0x7222);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 00F8
        gbc.setState(0x3686, 0x39ef, 0xda60, 0xaff8, 0xc715, 0x5a3e, 0x1, 0x1);
        gbc.writeMem(0x3686, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x39ef);
        EXPECT(gbc.pc(), 0x3688);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 00F9
        gbc.setState(0x553b, 0xebd5, 0x4800, 0xef58, 0x1097, 0x8ec1, 0x0, 0x1);
        gbc.writeMem(0x553b, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xebd5);
        EXPECT(gbc.pc(), 0x553d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 00FA
        gbc.setState(0x2b4d, 0xc200, 0x7390, 0xe054, 0xe4be, 0x5b76, 0x0, 0x0);
        gbc.writeMem(0x2b4d, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xc200);
        EXPECT(gbc.pc(), 0x2b4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 00FC
        gbc.setState(0xa499, 0xd1db, 0x9cb0, 0x241, 0x7548, 0x53a, 0x1, 0x0);
        gbc.writeMem(0xa499, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xd1db);
        EXPECT(gbc.pc(), 0xa49b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa499), 0xcb);
        EXPECT(gbc.readMem(0xa49a), 0x99);
        // CB 99 00FD
        gbc.setState(0xcd8c, 0x5e91, 0xf220, 0xb62a, 0x6f4, 0xc971, 0x1, 0x0);
        gbc.writeMem(0xcd8c, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x5e91);
        EXPECT(gbc.pc(), 0xcd8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd8c), 0xcb);
        EXPECT(gbc.readMem(0xcd8d), 0x99);
        // CB 99 00FE
        gbc.setState(0x92c, 0xb12f, 0x3000, 0xeb64, 0x7a16, 0x44bb, 0x0, 0x0);
        gbc.writeMem(0x92c, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xb12f);
        EXPECT(gbc.pc(), 0x92e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0100
        gbc.setState(0xe52f, 0x2a36, 0xfc70, 0x9bb1, 0x4e32, 0x75b7, 0x0, 0x1);
        gbc.writeMem(0xe52f, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x2a36);
        EXPECT(gbc.pc(), 0xe531);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe52f), 0xcb);
        EXPECT(gbc.readMem(0xe530), 0x99);
        // CB 99 0101
        gbc.setState(0x8b46, 0x14fb, 0xaa80, 0xafe4, 0xb3c9, 0xd921, 0x0, 0x0);
        gbc.writeMem(0x8b46, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x14fb);
        EXPECT(gbc.pc(), 0x8b48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b46), 0xcb);
        EXPECT(gbc.readMem(0x8b47), 0x99);
        // CB 99 0102
        gbc.setState(0x671e, 0xb25b, 0x78c0, 0x46c, 0xd83f, 0xcd2c, 0x1, 0x1);
        gbc.writeMem(0x671e, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xb25b);
        EXPECT(gbc.pc(), 0x6720);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0103
        gbc.setState(0xe5c9, 0xae96, 0xae60, 0xe00b, 0x52ba, 0x5a17, 0x0, 0x0);
        gbc.writeMem(0xe5c9, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xae96);
        EXPECT(gbc.pc(), 0xe5cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5c9), 0xcb);
        EXPECT(gbc.readMem(0xe5ca), 0x99);
        // CB 99 0104
        gbc.setState(0xb7ae, 0x2588, 0x6040, 0xe2b2, 0x47da, 0x7cc1, 0x1, 0x0);
        gbc.writeMem(0xb7ae, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x2588);
        EXPECT(gbc.pc(), 0xb7b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7ae), 0xcb);
        EXPECT(gbc.readMem(0xb7af), 0x99);
        // CB 99 0105
        gbc.setState(0xbf03, 0xa9a5, 0x9e70, 0x558d, 0x7236, 0xe19d, 0x0, 0x1);
        gbc.writeMem(0xbf03, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xa9a5);
        EXPECT(gbc.pc(), 0xbf05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf03), 0xcb);
        EXPECT(gbc.readMem(0xbf04), 0x99);
        // CB 99 0106
        gbc.setState(0x4335, 0x29a0, 0xc5e0, 0x2c0b, 0xeb44, 0x2592, 0x0, 0x0);
        gbc.writeMem(0x4335, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x29a0);
        EXPECT(gbc.pc(), 0x4337);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0107
        gbc.setState(0xddf9, 0x17d0, 0x4d60, 0x9cf4, 0xf013, 0x41d5, 0x1, 0x0);
        gbc.writeMem(0xddf9, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x17d0);
        EXPECT(gbc.pc(), 0xddfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddf9), 0xcb);
        EXPECT(gbc.readMem(0xddfa), 0x99);
        // CB 99 0109
        gbc.setState(0xa56b, 0x11f3, 0x8da0, 0x3936, 0x2be4, 0x1b6b, 0x1, 0x1);
        gbc.writeMem(0xa56b, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x11f3);
        EXPECT(gbc.pc(), 0xa56d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa56b), 0xcb);
        EXPECT(gbc.readMem(0xa56c), 0x99);
        // CB 99 010A
        gbc.setState(0x5644, 0xf998, 0x800, 0x1de2, 0x3503, 0x27b4, 0x0, 0x0);
        gbc.writeMem(0x5644, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xf998);
        EXPECT(gbc.pc(), 0x5646);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 010B
        gbc.setState(0x24d0, 0xbf20, 0xc050, 0x3da, 0x4fe3, 0xe382, 0x1, 0x0);
        gbc.writeMem(0x24d0, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xbf20);
        EXPECT(gbc.pc(), 0x24d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 010C
        gbc.setState(0x59e7, 0x7cdf, 0xc4e0, 0x4c81, 0xcd6, 0xa246, 0x0, 0x0);
        gbc.writeMem(0x59e7, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x7cdf);
        EXPECT(gbc.pc(), 0x59e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 010D
        gbc.setState(0x127b, 0x16ff, 0x8090, 0xff5b, 0xde94, 0x9d7f, 0x0, 0x1);
        gbc.writeMem(0x127b, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x16ff);
        EXPECT(gbc.pc(), 0x127d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 010E
        gbc.setState(0xc8ea, 0x9f6d, 0xa790, 0xc94c, 0x2d35, 0x58dc, 0x0, 0x0);
        gbc.writeMem(0xc8ea, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x9f6d);
        EXPECT(gbc.pc(), 0xc8ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8ea), 0xcb);
        EXPECT(gbc.readMem(0xc8eb), 0x99);
        // CB 99 010F
        gbc.setState(0x7a66, 0x42ad, 0x7c90, 0xcded, 0x55ca, 0xf84b, 0x0, 0x0);
        gbc.writeMem(0x7a66, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x42ad);
        EXPECT(gbc.pc(), 0x7a68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0110
        gbc.setState(0xb0cb, 0x6b28, 0x5340, 0x4dbe, 0x6a80, 0x4bf1, 0x0, 0x1);
        gbc.writeMem(0xb0cb, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x6b28);
        EXPECT(gbc.pc(), 0xb0cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0cb), 0xcb);
        EXPECT(gbc.readMem(0xb0cc), 0x99);
        // CB 99 0111
        gbc.setState(0x5a11, 0xdc40, 0x9a30, 0x9d14, 0x6a2e, 0xe335, 0x1, 0x0);
        gbc.writeMem(0x5a11, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xdc40);
        EXPECT(gbc.pc(), 0x5a13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0112
        gbc.setState(0x6d88, 0x8437, 0x29c0, 0xb315, 0xee87, 0x9a12, 0x1, 0x0);
        gbc.writeMem(0x6d88, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x8437);
        EXPECT(gbc.pc(), 0x6d8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0113
        gbc.setState(0xebc4, 0x1079, 0x59c0, 0x3a7f, 0x42f0, 0xdfcf, 0x1, 0x1);
        gbc.writeMem(0xebc4, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x1079);
        EXPECT(gbc.pc(), 0xebc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebc4), 0xcb);
        EXPECT(gbc.readMem(0xebc5), 0x99);
        // CB 99 0114
        gbc.setState(0x2f79, 0x1f9e, 0xbbf0, 0xd9fb, 0x6c41, 0xc972, 0x1, 0x1);
        gbc.writeMem(0x2f79, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x1f9e);
        EXPECT(gbc.pc(), 0x2f7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0115
        gbc.setState(0xeb53, 0x52aa, 0xc10, 0x5b09, 0xa794, 0xfea3, 0x1, 0x0);
        gbc.writeMem(0xeb53, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x52aa);
        EXPECT(gbc.pc(), 0xeb55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb53), 0xcb);
        EXPECT(gbc.readMem(0xeb54), 0x99);
        // CB 99 0116
        gbc.setState(0xaffb, 0x9395, 0x3530, 0x88e6, 0xd966, 0x7d41, 0x1, 0x1);
        gbc.writeMem(0xaffb, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x9395);
        EXPECT(gbc.pc(), 0xaffd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaffb), 0xcb);
        EXPECT(gbc.readMem(0xaffc), 0x99);
        // CB 99 0117
        gbc.setState(0x1c3a, 0xb456, 0x4ed0, 0x8215, 0xe84e, 0xbc31, 0x0, 0x0);
        gbc.writeMem(0x1c3a, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xb456);
        EXPECT(gbc.pc(), 0x1c3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0118
        gbc.setState(0x9c67, 0xbac1, 0x4d00, 0x7a9a, 0xb7, 0xbf8a, 0x0, 0x0);
        gbc.writeMem(0x9c67, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xbac1);
        EXPECT(gbc.pc(), 0x9c69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c67), 0xcb);
        EXPECT(gbc.readMem(0x9c68), 0x99);
        // CB 99 0119
        gbc.setState(0xab38, 0xd4da, 0xd400, 0x1f87, 0x8aa2, 0x1c49, 0x0, 0x0);
        gbc.writeMem(0xab38, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xd4da);
        EXPECT(gbc.pc(), 0xab3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab38), 0xcb);
        EXPECT(gbc.readMem(0xab39), 0x99);
        // CB 99 011A
        gbc.setState(0xaa68, 0xe5e9, 0x7c70, 0xe52f, 0x5fe2, 0x90eb, 0x0, 0x1);
        gbc.writeMem(0xaa68, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xe5e9);
        EXPECT(gbc.pc(), 0xaa6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa68), 0xcb);
        EXPECT(gbc.readMem(0xaa69), 0x99);
        // CB 99 011B
        gbc.setState(0xcb5b, 0x169e, 0xd500, 0xa81b, 0xca01, 0xd801, 0x1, 0x1);
        gbc.writeMem(0xcb5b, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x169e);
        EXPECT(gbc.pc(), 0xcb5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb5b), 0xcb);
        EXPECT(gbc.readMem(0xcb5c), 0x99);
        // CB 99 011C
        gbc.setState(0xa3a6, 0xa880, 0x6a20, 0xc1c4, 0xc455, 0x3ab5, 0x1, 0x1);
        gbc.writeMem(0xa3a6, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xa880);
        EXPECT(gbc.pc(), 0xa3a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3a6), 0xcb);
        EXPECT(gbc.readMem(0xa3a7), 0x99);
        // CB 99 011D
        gbc.setState(0x705a, 0x30f, 0x1920, 0x1b34, 0x9464, 0xad6, 0x1, 0x1);
        gbc.writeMem(0x705a, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x30f);
        EXPECT(gbc.pc(), 0x705c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 011E
        gbc.setState(0x50f8, 0x6e7c, 0x6280, 0x6e66, 0x4156, 0x8ef4, 0x0, 0x1);
        gbc.writeMem(0x50f8, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x6e7c);
        EXPECT(gbc.pc(), 0x50fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 011F
        gbc.setState(0xc537, 0x33ad, 0x5570, 0x9119, 0xa4f3, 0x10e3, 0x1, 0x0);
        gbc.writeMem(0xc537, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x33ad);
        EXPECT(gbc.pc(), 0xc539);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc537), 0xcb);
        EXPECT(gbc.readMem(0xc538), 0x99);
        // CB 99 0120
        gbc.setState(0xc98, 0xb100, 0xde50, 0xe17c, 0x7d09, 0x7318, 0x1, 0x0);
        gbc.writeMem(0xc98, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xb100);
        EXPECT(gbc.pc(), 0xc9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0121
        gbc.setState(0xcd1b, 0xcc87, 0x84f0, 0x3cd, 0x1e, 0x146d, 0x1, 0x1);
        gbc.writeMem(0xcd1b, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xcc87);
        EXPECT(gbc.pc(), 0xcd1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd1b), 0xcb);
        EXPECT(gbc.readMem(0xcd1c), 0x99);
        // CB 99 0122
        gbc.setState(0x8dae, 0xb8ed, 0xd610, 0x71c8, 0xdece, 0x1b42, 0x1, 0x1);
        gbc.writeMem(0x8dae, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xb8ed);
        EXPECT(gbc.pc(), 0x8db0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dae), 0xcb);
        EXPECT(gbc.readMem(0x8daf), 0x99);
        // CB 99 0123
        gbc.setState(0x1cc1, 0x4904, 0xa60, 0xe2ec, 0xf4f5, 0x6db0, 0x0, 0x1);
        gbc.writeMem(0x1cc1, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x4904);
        EXPECT(gbc.pc(), 0x1cc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0124
        gbc.setState(0xe0e5, 0x867, 0x440, 0xad1, 0x6086, 0x61f5, 0x1, 0x1);
        gbc.writeMem(0xe0e5, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x867);
        EXPECT(gbc.pc(), 0xe0e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0e5), 0xcb);
        EXPECT(gbc.readMem(0xe0e6), 0x99);
        // CB 99 0125
        gbc.setState(0x1dc6, 0x2b1b, 0x69d0, 0x3348, 0xd343, 0x27ad, 0x0, 0x0);
        gbc.writeMem(0x1dc6, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x2b1b);
        EXPECT(gbc.pc(), 0x1dc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0126
        gbc.setState(0xcd86, 0xefa6, 0x9bc0, 0x8954, 0xc95f, 0x9aa0, 0x1, 0x1);
        gbc.writeMem(0xcd86, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xefa6);
        EXPECT(gbc.pc(), 0xcd88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd86), 0xcb);
        EXPECT(gbc.readMem(0xcd87), 0x99);
        // CB 99 0127
        gbc.setState(0x16bc, 0x11f, 0x6c80, 0x988b, 0x1cc7, 0x755e, 0x1, 0x0);
        gbc.writeMem(0x16bc, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x11f);
        EXPECT(gbc.pc(), 0x16be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0128
        gbc.setState(0x2228, 0xb5cb, 0x3e20, 0x2bfb, 0xf50d, 0xd0c0, 0x0, 0x0);
        gbc.writeMem(0x2228, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xb5cb);
        EXPECT(gbc.pc(), 0x222a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 012A
        gbc.setState(0x930c, 0x14e3, 0x52a0, 0xc1eb, 0x5650, 0x24d7, 0x0, 0x0);
        gbc.writeMem(0x930c, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x14e3);
        EXPECT(gbc.pc(), 0x930e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x930c), 0xcb);
        EXPECT(gbc.readMem(0x930d), 0x99);
        // CB 99 012C
        gbc.setState(0xaff5, 0x9e06, 0x6190, 0xbd29, 0x556c, 0xa43d, 0x0, 0x1);
        gbc.writeMem(0xaff5, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x9e06);
        EXPECT(gbc.pc(), 0xaff7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaff5), 0xcb);
        EXPECT(gbc.readMem(0xaff6), 0x99);
        // CB 99 012D
        gbc.setState(0x9fe7, 0x5938, 0x64a0, 0xbc51, 0xe150, 0xde79, 0x1, 0x1);
        gbc.writeMem(0x9fe7, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x5938);
        EXPECT(gbc.pc(), 0x9fe9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fe7), 0xcb);
        EXPECT(gbc.readMem(0x9fe8), 0x99);
        // CB 99 012E
        gbc.setState(0x3a32, 0x5f8c, 0x5580, 0xf02a, 0x2a1b, 0xf410, 0x0, 0x1);
        gbc.writeMem(0x3a32, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x5f8c);
        EXPECT(gbc.pc(), 0x3a34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 012F
        gbc.setState(0x216c, 0x80cb, 0xd070, 0xbb71, 0xd36f, 0x71a7, 0x0, 0x0);
        gbc.writeMem(0x216c, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x80cb);
        EXPECT(gbc.pc(), 0x216e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0130
        gbc.setState(0xedb9, 0x72d6, 0xe5c0, 0x244e, 0x9dc4, 0x3d96, 0x0, 0x1);
        gbc.writeMem(0xedb9, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x72d6);
        EXPECT(gbc.pc(), 0xedbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedb9), 0xcb);
        EXPECT(gbc.readMem(0xedba), 0x99);
        // CB 99 0131
        gbc.setState(0x8f64, 0x4308, 0x3400, 0x77e2, 0xf9d9, 0x9627, 0x1, 0x1);
        gbc.writeMem(0x8f64, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x4308);
        EXPECT(gbc.pc(), 0x8f66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f64), 0xcb);
        EXPECT(gbc.readMem(0x8f65), 0x99);
        // CB 99 0132
        gbc.setState(0x4193, 0xd090, 0xa4c0, 0x68cc, 0x4f7, 0x5dc2, 0x1, 0x0);
        gbc.writeMem(0x4193, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xd090);
        EXPECT(gbc.pc(), 0x4195);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0133
        gbc.setState(0xc1a1, 0x6952, 0x1e30, 0x8c50, 0x9a79, 0xe05b, 0x1, 0x1);
        gbc.writeMem(0xc1a1, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x6952);
        EXPECT(gbc.pc(), 0xc1a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1a1), 0xcb);
        EXPECT(gbc.readMem(0xc1a2), 0x99);
        // CB 99 0134
        gbc.setState(0xdb9a, 0x132, 0xc650, 0x9031, 0xe3f3, 0x9498, 0x0, 0x0);
        gbc.writeMem(0xdb9a, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x132);
        EXPECT(gbc.pc(), 0xdb9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb9a), 0xcb);
        EXPECT(gbc.readMem(0xdb9b), 0x99);
        // CB 99 0136
        gbc.setState(0xa47, 0x785a, 0x70e0, 0xe936, 0x8166, 0xc114, 0x1, 0x1);
        gbc.writeMem(0xa47, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x785a);
        EXPECT(gbc.pc(), 0xa49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0137
        gbc.setState(0x7a08, 0xe96a, 0x5dd0, 0xdac6, 0x5bbb, 0x370d, 0x1, 0x0);
        gbc.writeMem(0x7a08, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xe96a);
        EXPECT(gbc.pc(), 0x7a0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0138
        gbc.setState(0x8aa9, 0x4b55, 0xc0a0, 0xdc2f, 0xef8f, 0xb652, 0x0, 0x0);
        gbc.writeMem(0x8aa9, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x4b55);
        EXPECT(gbc.pc(), 0x8aab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8aa9), 0xcb);
        EXPECT(gbc.readMem(0x8aaa), 0x99);
        // CB 99 0139
        gbc.setState(0xd91c, 0x847e, 0x5bd0, 0x13e3, 0x9e97, 0x1b22, 0x1, 0x1);
        gbc.writeMem(0xd91c, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x847e);
        EXPECT(gbc.pc(), 0xd91e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd91c), 0xcb);
        EXPECT(gbc.readMem(0xd91d), 0x99);
        // CB 99 013A
        gbc.setState(0xcc70, 0x722a, 0x6510, 0x6eaa, 0xf476, 0x44df, 0x0, 0x0);
        gbc.writeMem(0xcc70, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x722a);
        EXPECT(gbc.pc(), 0xcc72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc70), 0xcb);
        EXPECT(gbc.readMem(0xcc71), 0x99);
        // CB 99 013B
        gbc.setState(0x1d4b, 0x8694, 0xa650, 0x62fb, 0xf908, 0x674, 0x0, 0x0);
        gbc.writeMem(0x1d4b, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x8694);
        EXPECT(gbc.pc(), 0x1d4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 013C
        gbc.setState(0x29fb, 0x6119, 0xe860, 0x6a44, 0xc0f3, 0x1b2, 0x0, 0x0);
        gbc.writeMem(0x29fb, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x6119);
        EXPECT(gbc.pc(), 0x29fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 013D
        gbc.setState(0x1181, 0xbc31, 0xaee0, 0x602a, 0xad38, 0x4354, 0x1, 0x0);
        gbc.writeMem(0x1181, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xbc31);
        EXPECT(gbc.pc(), 0x1183);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 013E
        gbc.setState(0x4ca0, 0xf30a, 0xa980, 0x19c4, 0xd390, 0x112f, 0x0, 0x0);
        gbc.writeMem(0x4ca0, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xf30a);
        EXPECT(gbc.pc(), 0x4ca2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0140
        gbc.setState(0xb7cf, 0xe2e, 0xbca0, 0x9f43, 0x3c3f, 0x99d8, 0x0, 0x1);
        gbc.writeMem(0xb7cf, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xe2e);
        EXPECT(gbc.pc(), 0xb7d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7cf), 0xcb);
        EXPECT(gbc.readMem(0xb7d0), 0x99);
        // CB 99 0141
        gbc.setState(0x5439, 0x130, 0x4440, 0x54ec, 0x59c0, 0x9643, 0x1, 0x1);
        gbc.writeMem(0x5439, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x130);
        EXPECT(gbc.pc(), 0x543b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0142
        gbc.setState(0x313b, 0xcc93, 0x64d0, 0x313a, 0xf219, 0x84bf, 0x1, 0x0);
        gbc.writeMem(0x313b, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xcc93);
        EXPECT(gbc.pc(), 0x313d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0143
        gbc.setState(0x19a1, 0x1d5d, 0x6120, 0x9125, 0x64d9, 0x1f78, 0x1, 0x0);
        gbc.writeMem(0x19a1, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x1d5d);
        EXPECT(gbc.pc(), 0x19a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0144
        gbc.setState(0xaf0e, 0xd67d, 0x8cd0, 0xabff, 0xa370, 0xe440, 0x0, 0x0);
        gbc.writeMem(0xaf0e, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xd67d);
        EXPECT(gbc.pc(), 0xaf10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf0e), 0xcb);
        EXPECT(gbc.readMem(0xaf0f), 0x99);
        // CB 99 0145
        gbc.setState(0x5d4d, 0xdbe5, 0xae80, 0x595a, 0xf4db, 0x6024, 0x0, 0x1);
        gbc.writeMem(0x5d4d, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xdbe5);
        EXPECT(gbc.pc(), 0x5d4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0147
        gbc.setState(0xad22, 0xb41c, 0x5080, 0x4118, 0xd28e, 0x2957, 0x1, 0x0);
        gbc.writeMem(0xad22, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xb41c);
        EXPECT(gbc.pc(), 0xad24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad22), 0xcb);
        EXPECT(gbc.readMem(0xad23), 0x99);
        // CB 99 0148
        gbc.setState(0x4cd1, 0x192d, 0x14b0, 0x65b2, 0x6f3, 0x79be, 0x1, 0x1);
        gbc.writeMem(0x4cd1, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x192d);
        EXPECT(gbc.pc(), 0x4cd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0149
        gbc.setState(0x700e, 0xc450, 0x5a90, 0x21a1, 0x8a1d, 0x31ad, 0x0, 0x1);
        gbc.writeMem(0x700e, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xc450);
        EXPECT(gbc.pc(), 0x7010);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 014A
        gbc.setState(0x789f, 0xca30, 0x8980, 0x5527, 0x9af9, 0xb217, 0x0, 0x1);
        gbc.writeMem(0x789f, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xca30);
        EXPECT(gbc.pc(), 0x78a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 014B
        gbc.setState(0xaa5, 0xd145, 0x12b0, 0xd19, 0xb257, 0xf834, 0x1, 0x1);
        gbc.writeMem(0xaa5, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xd145);
        EXPECT(gbc.pc(), 0xaa7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 014C
        gbc.setState(0x2d3f, 0x17e4, 0x5330, 0x47c4, 0xd8fc, 0x9a89, 0x1, 0x1);
        gbc.writeMem(0x2d3f, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x17e4);
        EXPECT(gbc.pc(), 0x2d41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 014D
        gbc.setState(0x5292, 0x118b, 0xca30, 0x6275, 0x8299, 0xa30, 0x0, 0x1);
        gbc.writeMem(0x5292, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x118b);
        EXPECT(gbc.pc(), 0x5294);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 014E
        gbc.setState(0x2ff8, 0xd98, 0xbca0, 0x3010, 0x5a93, 0xd00d, 0x1, 0x0);
        gbc.writeMem(0x2ff8, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xd98);
        EXPECT(gbc.pc(), 0x2ffa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 014F
        gbc.setState(0xd6ee, 0x59f6, 0x55e0, 0xe7c8, 0xdf11, 0x2cee, 0x0, 0x1);
        gbc.writeMem(0xd6ee, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x59f6);
        EXPECT(gbc.pc(), 0xd6f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6ee), 0xcb);
        EXPECT(gbc.readMem(0xd6ef), 0x99);
        // CB 99 0150
        gbc.setState(0x7700, 0xa544, 0x16a0, 0x9743, 0x8629, 0xc043, 0x1, 0x1);
        gbc.writeMem(0x7700, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xa544);
        EXPECT(gbc.pc(), 0x7702);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0151
        gbc.setState(0x8ba0, 0x152a, 0xc530, 0xd157, 0x3d1c, 0x2f1a, 0x1, 0x0);
        gbc.writeMem(0x8ba0, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x152a);
        EXPECT(gbc.pc(), 0x8ba2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ba0), 0xcb);
        EXPECT(gbc.readMem(0x8ba1), 0x99);
        // CB 99 0152
        gbc.setState(0x1170, 0xc00c, 0x5ee0, 0x6dc1, 0xacd9, 0xa1aa, 0x0, 0x1);
        gbc.writeMem(0x1170, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xc00c);
        EXPECT(gbc.pc(), 0x1172);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0153
        gbc.setState(0xccf2, 0xfd51, 0x31a0, 0xc28f, 0x312, 0x8ea, 0x0, 0x1);
        gbc.writeMem(0xccf2, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xfd51);
        EXPECT(gbc.pc(), 0xccf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccf2), 0xcb);
        EXPECT(gbc.readMem(0xccf3), 0x99);
        // CB 99 0154
        gbc.setState(0xd107, 0xa381, 0xf6e0, 0xbc2, 0x36f, 0x873c, 0x0, 0x0);
        gbc.writeMem(0xd107, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xa381);
        EXPECT(gbc.pc(), 0xd109);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd107), 0xcb);
        EXPECT(gbc.readMem(0xd108), 0x99);
        // CB 99 0155
        gbc.setState(0xcb22, 0xfb79, 0x5bf0, 0x3579, 0x37d2, 0x67c9, 0x1, 0x0);
        gbc.writeMem(0xcb22, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xfb79);
        EXPECT(gbc.pc(), 0xcb24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb22), 0xcb);
        EXPECT(gbc.readMem(0xcb23), 0x99);
        // CB 99 0156
        gbc.setState(0xef8f, 0xe503, 0x2870, 0xef37, 0x64d2, 0x9239, 0x1, 0x0);
        gbc.writeMem(0xef8f, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xe503);
        EXPECT(gbc.pc(), 0xef91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef8f), 0xcb);
        EXPECT(gbc.readMem(0xef90), 0x99);
        // CB 99 0157
        gbc.setState(0xcb53, 0x6c40, 0x4800, 0xae8f, 0x92be, 0xfcc5, 0x0, 0x0);
        gbc.writeMem(0xcb53, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x6c40);
        EXPECT(gbc.pc(), 0xcb55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb53), 0xcb);
        EXPECT(gbc.readMem(0xcb54), 0x99);
        // CB 99 0159
        gbc.setState(0xf60, 0x7e72, 0x6f00, 0x80b0, 0x7c43, 0xd93, 0x0, 0x1);
        gbc.writeMem(0xf60, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x7e72);
        EXPECT(gbc.pc(), 0xf62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 015A
        gbc.setState(0x5cfa, 0xb8cb, 0x4210, 0x315f, 0xf862, 0xb934, 0x1, 0x0);
        gbc.writeMem(0x5cfa, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xb8cb);
        EXPECT(gbc.pc(), 0x5cfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 015B
        gbc.setState(0x1767, 0xbcf4, 0x3160, 0xf574, 0xec67, 0xef69, 0x1, 0x0);
        gbc.writeMem(0x1767, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xbcf4);
        EXPECT(gbc.pc(), 0x1769);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 015C
        gbc.setState(0x9d10, 0x4370, 0x8320, 0x223, 0x5e06, 0xb62, 0x1, 0x1);
        gbc.writeMem(0x9d10, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x4370);
        EXPECT(gbc.pc(), 0x9d12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d10), 0xcb);
        EXPECT(gbc.readMem(0x9d11), 0x99);
        // CB 99 015D
        gbc.setState(0xd8dc, 0x9dbc, 0xcba0, 0x6849, 0xbf29, 0xe0fe, 0x0, 0x1);
        gbc.writeMem(0xd8dc, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x9dbc);
        EXPECT(gbc.pc(), 0xd8de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8dc), 0xcb);
        EXPECT(gbc.readMem(0xd8dd), 0x99);
        // CB 99 015E
        gbc.setState(0xeb56, 0x3f51, 0x8f20, 0xc197, 0xde79, 0x6ea6, 0x1, 0x1);
        gbc.writeMem(0xeb56, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x3f51);
        EXPECT(gbc.pc(), 0xeb58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb56), 0xcb);
        EXPECT(gbc.readMem(0xeb57), 0x99);
        // CB 99 015F
        gbc.setState(0xbe02, 0x174d, 0x2e20, 0xa724, 0x3d5, 0xe669, 0x0, 0x0);
        gbc.writeMem(0xbe02, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x174d);
        EXPECT(gbc.pc(), 0xbe04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe02), 0xcb);
        EXPECT(gbc.readMem(0xbe03), 0x99);
        // CB 99 0160
        gbc.setState(0x10b, 0xcb85, 0x700, 0xda23, 0x847a, 0x152b, 0x1, 0x1);
        gbc.writeMem(0x10b, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xcb85);
        EXPECT(gbc.pc(), 0x10d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0161
        gbc.setState(0xc784, 0x8807, 0x4a60, 0xea1e, 0x650d, 0xf493, 0x1, 0x1);
        gbc.writeMem(0xc784, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x8807);
        EXPECT(gbc.pc(), 0xc786);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc784), 0xcb);
        EXPECT(gbc.readMem(0xc785), 0x99);
        // CB 99 0162
        gbc.setState(0xc5b9, 0x613e, 0xc7d0, 0xd179, 0xfcda, 0x1b35, 0x1, 0x1);
        gbc.writeMem(0xc5b9, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x613e);
        EXPECT(gbc.pc(), 0xc5bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5b9), 0xcb);
        EXPECT(gbc.readMem(0xc5ba), 0x99);
        // CB 99 0163
        gbc.setState(0xa44b, 0xa666, 0x1340, 0x5813, 0x19a, 0xd150, 0x0, 0x1);
        gbc.writeMem(0xa44b, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xa666);
        EXPECT(gbc.pc(), 0xa44d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa44b), 0xcb);
        EXPECT(gbc.readMem(0xa44c), 0x99);
        // CB 99 0164
        gbc.setState(0x7cd5, 0xe2e3, 0x8280, 0x27c, 0x731f, 0x4ef3, 0x1, 0x1);
        gbc.writeMem(0x7cd5, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xe2e3);
        EXPECT(gbc.pc(), 0x7cd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0165
        gbc.setState(0x3ca7, 0x996, 0x280, 0x8405, 0x67d9, 0xe5b0, 0x0, 0x0);
        gbc.writeMem(0x3ca7, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x996);
        EXPECT(gbc.pc(), 0x3ca9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0166
        gbc.setState(0xe467, 0xf31, 0x21a0, 0x7f69, 0xc4e3, 0x9e0, 0x0, 0x0);
        gbc.writeMem(0xe467, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xf31);
        EXPECT(gbc.pc(), 0xe469);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe467), 0xcb);
        EXPECT(gbc.readMem(0xe468), 0x99);
        // CB 99 0167
        gbc.setState(0xaa8b, 0x9293, 0x1490, 0x79ea, 0xcb34, 0xba08, 0x0, 0x0);
        gbc.writeMem(0xaa8b, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x9293);
        EXPECT(gbc.pc(), 0xaa8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa8b), 0xcb);
        EXPECT(gbc.readMem(0xaa8c), 0x99);
        // CB 99 0168
        gbc.setState(0x7e2f, 0xf419, 0xc9f0, 0x1954, 0x33f2, 0xc046, 0x1, 0x1);
        gbc.writeMem(0x7e2f, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xf419);
        EXPECT(gbc.pc(), 0x7e31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0169
        gbc.setState(0x19cb, 0x9a6b, 0x4ed0, 0x2e3e, 0x281b, 0x8aef, 0x1, 0x1);
        gbc.writeMem(0x19cb, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x9a6b);
        EXPECT(gbc.pc(), 0x19cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 016A
        gbc.setState(0x5223, 0x5461, 0xc80, 0x3e56, 0xec37, 0x2fb5, 0x1, 0x0);
        gbc.writeMem(0x5223, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x5461);
        EXPECT(gbc.pc(), 0x5225);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 016B
        gbc.setState(0xae3a, 0x3b1a, 0x8e60, 0xc770, 0xd15f, 0xee11, 0x1, 0x0);
        gbc.writeMem(0xae3a, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x3b1a);
        EXPECT(gbc.pc(), 0xae3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae3a), 0xcb);
        EXPECT(gbc.readMem(0xae3b), 0x99);
        // CB 99 016C
        gbc.setState(0xbd54, 0x8c, 0x6730, 0x6acc, 0x4eb6, 0x4e22, 0x1, 0x0);
        gbc.writeMem(0xbd54, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x8c);
        EXPECT(gbc.pc(), 0xbd56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd54), 0xcb);
        EXPECT(gbc.readMem(0xbd55), 0x99);
        // CB 99 016D
        gbc.setState(0x334f, 0xd2d8, 0xf870, 0xecb4, 0x69e0, 0x8733, 0x0, 0x0);
        gbc.writeMem(0x334f, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xd2d8);
        EXPECT(gbc.pc(), 0x3351);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 016E
        gbc.setState(0xc3ff, 0x4fc2, 0x78d0, 0xec8, 0xc4cd, 0x552, 0x1, 0x1);
        gbc.writeMem(0xc3ff, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x4fc2);
        EXPECT(gbc.pc(), 0xc401);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3ff), 0xcb);
        EXPECT(gbc.readMem(0xc400), 0x99);
        // CB 99 016F
        gbc.setState(0x2374, 0x8, 0xdb10, 0x686f, 0x173b, 0xf0f8, 0x0, 0x0);
        gbc.writeMem(0x2374, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x8);
        EXPECT(gbc.pc(), 0x2376);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0170
        gbc.setState(0x82, 0xd15d, 0x5380, 0x9b7d, 0x473, 0x2793, 0x1, 0x0);
        gbc.writeMem(0x82, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xd15d);
        EXPECT(gbc.pc(), 0x84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0171
        gbc.setState(0xa68a, 0x7683, 0xf9c0, 0x8f0e, 0xc59d, 0x24cf, 0x0, 0x0);
        gbc.writeMem(0xa68a, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x7683);
        EXPECT(gbc.pc(), 0xa68c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa68a), 0xcb);
        EXPECT(gbc.readMem(0xa68b), 0x99);
        // CB 99 0172
        gbc.setState(0xd936, 0x6a80, 0x75e0, 0xa7b0, 0x42f4, 0x715e, 0x1, 0x0);
        gbc.writeMem(0xd936, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x6a80);
        EXPECT(gbc.pc(), 0xd938);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd936), 0xcb);
        EXPECT(gbc.readMem(0xd937), 0x99);
        // CB 99 0173
        gbc.setState(0x6c72, 0x98fb, 0xc80, 0x2fda, 0x3033, 0x72c1, 0x1, 0x1);
        gbc.writeMem(0x6c72, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x98fb);
        EXPECT(gbc.pc(), 0x6c74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0174
        gbc.setState(0x9da2, 0x81c, 0xe440, 0x82db, 0xa422, 0xefea, 0x0, 0x0);
        gbc.writeMem(0x9da2, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x81c);
        EXPECT(gbc.pc(), 0x9da4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9da2), 0xcb);
        EXPECT(gbc.readMem(0x9da3), 0x99);
        // CB 99 0175
        gbc.setState(0xe47d, 0x4b21, 0x1fb0, 0x81, 0xf841, 0x94af, 0x1, 0x0);
        gbc.writeMem(0xe47d, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x4b21);
        EXPECT(gbc.pc(), 0xe47f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe47d), 0xcb);
        EXPECT(gbc.readMem(0xe47e), 0x99);
        // CB 99 0176
        gbc.setState(0xe906, 0xa6f0, 0x1210, 0xfe59, 0x256c, 0xff6b, 0x1, 0x0);
        gbc.writeMem(0xe906, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xa6f0);
        EXPECT(gbc.pc(), 0xe908);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe906), 0xcb);
        EXPECT(gbc.readMem(0xe907), 0x99);
        // CB 99 0177
        gbc.setState(0xae6d, 0x1ead, 0x5f90, 0x28d3, 0x3844, 0xa665, 0x1, 0x1);
        gbc.writeMem(0xae6d, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x1ead);
        EXPECT(gbc.pc(), 0xae6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae6d), 0xcb);
        EXPECT(gbc.readMem(0xae6e), 0x99);
        // CB 99 0178
        gbc.setState(0xc638, 0xfc72, 0x6430, 0x8d2f, 0x2d6a, 0xc08c, 0x0, 0x0);
        gbc.writeMem(0xc638, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xfc72);
        EXPECT(gbc.pc(), 0xc63a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc638), 0xcb);
        EXPECT(gbc.readMem(0xc639), 0x99);
        // CB 99 0179
        gbc.setState(0x53e6, 0x6fb2, 0xefb0, 0x735a, 0x877b, 0xe4ef, 0x1, 0x0);
        gbc.writeMem(0x53e6, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x6fb2);
        EXPECT(gbc.pc(), 0x53e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 017A
        gbc.setState(0x1f59, 0x9b47, 0x9b20, 0xee64, 0x70bf, 0x22c1, 0x1, 0x0);
        gbc.writeMem(0x1f59, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x9b47);
        EXPECT(gbc.pc(), 0x1f5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 017B
        gbc.setState(0x4238, 0xdde4, 0x1340, 0xc315, 0x11a2, 0xe868, 0x1, 0x0);
        gbc.writeMem(0x4238, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xdde4);
        EXPECT(gbc.pc(), 0x423a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 017C
        gbc.setState(0x495d, 0x52f, 0xd4e0, 0xd9ed, 0x15c, 0xb18a, 0x1, 0x1);
        gbc.writeMem(0x495d, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x52f);
        EXPECT(gbc.pc(), 0x495f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 017D
        gbc.setState(0xa34c, 0xd76e, 0x6ad0, 0x3607, 0xd1a5, 0xca31, 0x1, 0x0);
        gbc.writeMem(0xa34c, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xd76e);
        EXPECT(gbc.pc(), 0xa34e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa34c), 0xcb);
        EXPECT(gbc.readMem(0xa34d), 0x99);
        // CB 99 017E
        gbc.setState(0x9e97, 0x1316, 0x2bc0, 0x17d0, 0x7d53, 0xdff, 0x0, 0x0);
        gbc.writeMem(0x9e97, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x1316);
        EXPECT(gbc.pc(), 0x9e99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e97), 0xcb);
        EXPECT(gbc.readMem(0x9e98), 0x99);
        // CB 99 017F
        gbc.setState(0xb9af, 0x81b2, 0x92c0, 0x1945, 0xfefb, 0xedaf, 0x1, 0x0);
        gbc.writeMem(0xb9af, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x81b2);
        EXPECT(gbc.pc(), 0xb9b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9af), 0xcb);
        EXPECT(gbc.readMem(0xb9b0), 0x99);
        // CB 99 0180
        gbc.setState(0x351a, 0xbd47, 0x310, 0xac67, 0x5bae, 0xdfb9, 0x1, 0x1);
        gbc.writeMem(0x351a, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xbd47);
        EXPECT(gbc.pc(), 0x351c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0181
        gbc.setState(0x4383, 0xc74f, 0x4240, 0x6940, 0x5019, 0x7205, 0x0, 0x1);
        gbc.writeMem(0x4383, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xc74f);
        EXPECT(gbc.pc(), 0x4385);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0182
        gbc.setState(0x787b, 0x7f16, 0x4160, 0xa846, 0x5f2c, 0x2745, 0x0, 0x0);
        gbc.writeMem(0x787b, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x7f16);
        EXPECT(gbc.pc(), 0x787d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0184
        gbc.setState(0xd431, 0xc840, 0xc470, 0x7255, 0x6b5c, 0xffbe, 0x1, 0x0);
        gbc.writeMem(0xd431, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xc840);
        EXPECT(gbc.pc(), 0xd433);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd431), 0xcb);
        EXPECT(gbc.readMem(0xd432), 0x99);
        // CB 99 0185
        gbc.setState(0xc6ac, 0x5f41, 0xd520, 0x1583, 0x48b8, 0x7ac2, 0x0, 0x0);
        gbc.writeMem(0xc6ac, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x5f41);
        EXPECT(gbc.pc(), 0xc6ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6ac), 0xcb);
        EXPECT(gbc.readMem(0xc6ad), 0x99);
        // CB 99 0186
        gbc.setState(0x24a2, 0x7a53, 0xc740, 0x4109, 0x9a16, 0xd103, 0x0, 0x1);
        gbc.writeMem(0x24a2, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x7a53);
        EXPECT(gbc.pc(), 0x24a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0187
        gbc.setState(0x7029, 0x18e9, 0x61f0, 0x6c5e, 0xc878, 0xdb66, 0x1, 0x0);
        gbc.writeMem(0x7029, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x18e9);
        EXPECT(gbc.pc(), 0x702b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0188
        gbc.setState(0x452b, 0x4e6f, 0x96b0, 0xec91, 0xe7cd, 0x273a, 0x1, 0x1);
        gbc.writeMem(0x452b, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x4e6f);
        EXPECT(gbc.pc(), 0x452d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0189
        gbc.setState(0xc110, 0x25ff, 0xeb20, 0x80bd, 0x4014, 0xe636, 0x1, 0x0);
        gbc.writeMem(0xc110, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x25ff);
        EXPECT(gbc.pc(), 0xc112);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc110), 0xcb);
        EXPECT(gbc.readMem(0xc111), 0x99);
        // CB 99 018A
        gbc.setState(0x30c1, 0x3284, 0x8590, 0xd450, 0x5b1c, 0xdb0e, 0x1, 0x1);
        gbc.writeMem(0x30c1, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x3284);
        EXPECT(gbc.pc(), 0x30c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 018B
        gbc.setState(0xb3a9, 0x934c, 0x70d0, 0x52b6, 0xf6d1, 0x581, 0x1, 0x1);
        gbc.writeMem(0xb3a9, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x934c);
        EXPECT(gbc.pc(), 0xb3ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3a9), 0xcb);
        EXPECT(gbc.readMem(0xb3aa), 0x99);
        // CB 99 018C
        gbc.setState(0x3b36, 0xc10a, 0xddf0, 0x2cd8, 0xb184, 0xd0ab, 0x1, 0x0);
        gbc.writeMem(0x3b36, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xc10a);
        EXPECT(gbc.pc(), 0x3b38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 018D
        gbc.setState(0x114e, 0x8cfe, 0x42c0, 0xded, 0x6afe, 0x5197, 0x0, 0x0);
        gbc.writeMem(0x114e, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x8cfe);
        EXPECT(gbc.pc(), 0x1150);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 018E
        gbc.setState(0x15e0, 0x4168, 0x3400, 0xc99e, 0x7f69, 0x6da1, 0x0, 0x1);
        gbc.writeMem(0x15e0, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x4168);
        EXPECT(gbc.pc(), 0x15e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 018F
        gbc.setState(0x6f88, 0x2ebb, 0x3600, 0xc6cd, 0xd264, 0x6960, 0x0, 0x0);
        gbc.writeMem(0x6f88, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x2ebb);
        EXPECT(gbc.pc(), 0x6f8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0190
        gbc.setState(0xc0cc, 0x9eb6, 0x1db0, 0xc258, 0x715a, 0xadab, 0x1, 0x0);
        gbc.writeMem(0xc0cc, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x9eb6);
        EXPECT(gbc.pc(), 0xc0ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0cc), 0xcb);
        EXPECT(gbc.readMem(0xc0cd), 0x99);
        // CB 99 0191
        gbc.setState(0xcf8, 0x30f8, 0xf5a0, 0x2a7c, 0x2c64, 0xe235, 0x0, 0x0);
        gbc.writeMem(0xcf8, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x30f8);
        EXPECT(gbc.pc(), 0xcfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0192
        gbc.setState(0x8ee1, 0x71f3, 0x4490, 0xcfbd, 0xbd6a, 0x31ec, 0x1, 0x0);
        gbc.writeMem(0x8ee1, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x71f3);
        EXPECT(gbc.pc(), 0x8ee3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ee1), 0xcb);
        EXPECT(gbc.readMem(0x8ee2), 0x99);
        // CB 99 0193
        gbc.setState(0x3fc8, 0x41e9, 0xc4b0, 0x244f, 0xcf0b, 0x92e2, 0x0, 0x0);
        gbc.writeMem(0x3fc8, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x41e9);
        EXPECT(gbc.pc(), 0x3fca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0194
        gbc.setState(0xa252, 0xdf41, 0xee70, 0xb895, 0x477d, 0x8185, 0x1, 0x0);
        gbc.writeMem(0xa252, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xdf41);
        EXPECT(gbc.pc(), 0xa254);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa252), 0xcb);
        EXPECT(gbc.readMem(0xa253), 0x99);
        // CB 99 0195
        gbc.setState(0x5894, 0xd029, 0xcea0, 0x824a, 0xf66a, 0x2f72, 0x0, 0x1);
        gbc.writeMem(0x5894, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xd029);
        EXPECT(gbc.pc(), 0x5896);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0196
        gbc.setState(0x91a6, 0xbeda, 0xe630, 0x9d4f, 0x991, 0xeee0, 0x0, 0x1);
        gbc.writeMem(0x91a6, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xbeda);
        EXPECT(gbc.pc(), 0x91a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91a6), 0xcb);
        EXPECT(gbc.readMem(0x91a7), 0x99);
        // CB 99 0197
        gbc.setState(0x49be, 0xb7ab, 0xeef0, 0xb948, 0x847, 0xe623, 0x1, 0x0);
        gbc.writeMem(0x49be, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xb7ab);
        EXPECT(gbc.pc(), 0x49c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0198
        gbc.setState(0x9d2d, 0xd8f7, 0x430, 0x2a60, 0xc913, 0x1e63, 0x0, 0x0);
        gbc.writeMem(0x9d2d, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xd8f7);
        EXPECT(gbc.pc(), 0x9d2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d2d), 0xcb);
        EXPECT(gbc.readMem(0x9d2e), 0x99);
        // CB 99 0199
        gbc.setState(0xa900, 0xf1dc, 0x9d60, 0x630a, 0xf090, 0x1d3d, 0x0, 0x1);
        gbc.writeMem(0xa900, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xf1dc);
        EXPECT(gbc.pc(), 0xa902);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa900), 0xcb);
        EXPECT(gbc.readMem(0xa901), 0x99);
        // CB 99 019A
        gbc.setState(0xad21, 0x49e7, 0x2450, 0xdb0, 0xeb22, 0x9a6c, 0x1, 0x0);
        gbc.writeMem(0xad21, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x49e7);
        EXPECT(gbc.pc(), 0xad23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad21), 0xcb);
        EXPECT(gbc.readMem(0xad22), 0x99);
        // CB 99 019B
        gbc.setState(0x3285, 0x5982, 0xec10, 0xfa51, 0x8554, 0xf667, 0x0, 0x0);
        gbc.writeMem(0x3285, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x5982);
        EXPECT(gbc.pc(), 0x3287);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 019C
        gbc.setState(0x886c, 0xf392, 0xf60, 0x9c76, 0xa92d, 0x26c3, 0x1, 0x0);
        gbc.writeMem(0x886c, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xf392);
        EXPECT(gbc.pc(), 0x886e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x886c), 0xcb);
        EXPECT(gbc.readMem(0x886d), 0x99);
        // CB 99 019D
        gbc.setState(0x65ef, 0x9f40, 0x3040, 0xfe45, 0x75dc, 0x308b, 0x1, 0x1);
        gbc.writeMem(0x65ef, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x9f40);
        EXPECT(gbc.pc(), 0x65f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 019E
        gbc.setState(0xb64, 0x47eb, 0x18f0, 0x45f3, 0xaf5d, 0x97, 0x1, 0x0);
        gbc.writeMem(0xb64, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x47eb);
        EXPECT(gbc.pc(), 0xb66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 019F
        gbc.setState(0xa0c1, 0x5ae6, 0xc4d0, 0xfffc, 0x1fe9, 0x4b0e, 0x0, 0x0);
        gbc.writeMem(0xa0c1, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x5ae6);
        EXPECT(gbc.pc(), 0xa0c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0c1), 0xcb);
        EXPECT(gbc.readMem(0xa0c2), 0x99);
        // CB 99 01A0
        gbc.setState(0x22c9, 0x3fa4, 0x1720, 0xa5a1, 0x24c6, 0xed47, 0x0, 0x0);
        gbc.writeMem(0x22c9, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x3fa4);
        EXPECT(gbc.pc(), 0x22cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 01A1
        gbc.setState(0x1bdb, 0x6feb, 0xcee0, 0xc01a, 0x5894, 0xb3b7, 0x0, 0x1);
        gbc.writeMem(0x1bdb, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x6feb);
        EXPECT(gbc.pc(), 0x1bdd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 01A2
        gbc.setState(0xae8e, 0x2a95, 0x200, 0x1d15, 0xc735, 0xf123, 0x0, 0x1);
        gbc.writeMem(0xae8e, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x2a95);
        EXPECT(gbc.pc(), 0xae90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae8e), 0xcb);
        EXPECT(gbc.readMem(0xae8f), 0x99);
        // CB 99 01A4
        gbc.setState(0xad81, 0x99db, 0x6f40, 0x955a, 0x6f80, 0x8ff5, 0x0, 0x1);
        gbc.writeMem(0xad81, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x99db);
        EXPECT(gbc.pc(), 0xad83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad81), 0xcb);
        EXPECT(gbc.readMem(0xad82), 0x99);
        // CB 99 01A5
        gbc.setState(0xb2b0, 0x44da, 0x4220, 0xb40c, 0x918, 0xece8, 0x1, 0x0);
        gbc.writeMem(0xb2b0, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x44da);
        EXPECT(gbc.pc(), 0xb2b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2b0), 0xcb);
        EXPECT(gbc.readMem(0xb2b1), 0x99);
        // CB 99 01A6
        gbc.setState(0xec2c, 0xc7c7, 0xaf40, 0xc039, 0x577d, 0x731, 0x0, 0x1);
        gbc.writeMem(0xec2c, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xc7c7);
        EXPECT(gbc.pc(), 0xec2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec2c), 0xcb);
        EXPECT(gbc.readMem(0xec2d), 0x99);
        // CB 99 01A7
        gbc.setState(0x264c, 0xd588, 0x5fb0, 0x2f47, 0x70b, 0x8f0d, 0x0, 0x1);
        gbc.writeMem(0x264c, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xd588);
        EXPECT(gbc.pc(), 0x264e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 01A8
        gbc.setState(0x948a, 0xf51f, 0xce60, 0xb32a, 0x169a, 0xe374, 0x0, 0x0);
        gbc.writeMem(0x948a, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xf51f);
        EXPECT(gbc.pc(), 0x948c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x948a), 0xcb);
        EXPECT(gbc.readMem(0x948b), 0x99);
        // CB 99 01A9
        gbc.setState(0xc4bd, 0x56a2, 0xddc0, 0x2363, 0x42e6, 0x8efe, 0x0, 0x1);
        gbc.writeMem(0xc4bd, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x56a2);
        EXPECT(gbc.pc(), 0xc4bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4bd), 0xcb);
        EXPECT(gbc.readMem(0xc4be), 0x99);
        // CB 99 01AB
        gbc.setState(0x5372, 0xd272, 0xb910, 0x93af, 0x8f7c, 0x1eed, 0x0, 0x0);
        gbc.writeMem(0x5372, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xd272);
        EXPECT(gbc.pc(), 0x5374);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 01AC
        gbc.setState(0xa816, 0xb2bb, 0xd1a0, 0x8524, 0xfce2, 0x6c94, 0x0, 0x1);
        gbc.writeMem(0xa816, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xb2bb);
        EXPECT(gbc.pc(), 0xa818);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa816), 0xcb);
        EXPECT(gbc.readMem(0xa817), 0x99);
        // CB 99 01AE
        gbc.setState(0xccfc, 0x2f8f, 0x6e00, 0xa29, 0xa3b6, 0xde96, 0x1, 0x1);
        gbc.writeMem(0xccfc, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x2f8f);
        EXPECT(gbc.pc(), 0xccfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccfc), 0xcb);
        EXPECT(gbc.readMem(0xccfd), 0x99);
        // CB 99 01AF
        gbc.setState(0xba8c, 0x2edd, 0x8260, 0x28e0, 0x3c9c, 0x4095, 0x0, 0x1);
        gbc.writeMem(0xba8c, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x2edd);
        EXPECT(gbc.pc(), 0xba8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba8c), 0xcb);
        EXPECT(gbc.readMem(0xba8d), 0x99);
        // CB 99 01B0
        gbc.setState(0xbc0f, 0x45fe, 0xb060, 0x8e12, 0x76e5, 0xb145, 0x1, 0x1);
        gbc.writeMem(0xbc0f, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x45fe);
        EXPECT(gbc.pc(), 0xbc11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc0f), 0xcb);
        EXPECT(gbc.readMem(0xbc10), 0x99);
        // CB 99 01B1
        gbc.setState(0xb33e, 0xcb61, 0x3bd0, 0x32e7, 0xf999, 0xda72, 0x0, 0x1);
        gbc.writeMem(0xb33e, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xcb61);
        EXPECT(gbc.pc(), 0xb340);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb33e), 0xcb);
        EXPECT(gbc.readMem(0xb33f), 0x99);
        // CB 99 01B2
        gbc.setState(0x1a61, 0x926, 0x7310, 0xd92c, 0xdcee, 0xcfa9, 0x1, 0x0);
        gbc.writeMem(0x1a61, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x926);
        EXPECT(gbc.pc(), 0x1a63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 01B3
        gbc.setState(0x8445, 0xea99, 0x1520, 0x897d, 0xb7b5, 0x534b, 0x0, 0x1);
        gbc.writeMem(0x8445, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xea99);
        EXPECT(gbc.pc(), 0x8447);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8445), 0xcb);
        EXPECT(gbc.readMem(0x8446), 0x99);
        // CB 99 01B4
        gbc.setState(0xad3b, 0x6c29, 0x1380, 0x911a, 0x60e3, 0xe7e3, 0x0, 0x0);
        gbc.writeMem(0xad3b, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x6c29);
        EXPECT(gbc.pc(), 0xad3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad3b), 0xcb);
        EXPECT(gbc.readMem(0xad3c), 0x99);
        // CB 99 01B5
        gbc.setState(0x3271, 0xeae3, 0x7390, 0xdc9b, 0xfbf4, 0xb9ea, 0x0, 0x1);
        gbc.writeMem(0x3271, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xeae3);
        EXPECT(gbc.pc(), 0x3273);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 01B6
        gbc.setState(0xe599, 0x8050, 0xee20, 0xde31, 0x2737, 0x1fca, 0x0, 0x0);
        gbc.writeMem(0xe599, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x8050);
        EXPECT(gbc.pc(), 0xe59b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe599), 0xcb);
        EXPECT(gbc.readMem(0xe59a), 0x99);
        // CB 99 01B7
        gbc.setState(0x5480, 0xe278, 0x8150, 0x2f94, 0x7787, 0x25c3, 0x1, 0x0);
        gbc.writeMem(0x5480, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xe278);
        EXPECT(gbc.pc(), 0x5482);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 01B8
        gbc.setState(0xc6b3, 0x12ca, 0xb480, 0xb66a, 0x416a, 0x2b2c, 0x0, 0x1);
        gbc.writeMem(0xc6b3, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x12ca);
        EXPECT(gbc.pc(), 0xc6b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6b3), 0xcb);
        EXPECT(gbc.readMem(0xc6b4), 0x99);
        // CB 99 01B9
        gbc.setState(0x6b5c, 0x3a4a, 0x1e50, 0xc428, 0x928, 0xcc52, 0x1, 0x1);
        gbc.writeMem(0x6b5c, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x3a4a);
        EXPECT(gbc.pc(), 0x6b5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 01BA
        gbc.setState(0x82b3, 0xf530, 0xd0b0, 0x6c33, 0x1d33, 0x8612, 0x0, 0x1);
        gbc.writeMem(0x82b3, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xf530);
        EXPECT(gbc.pc(), 0x82b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82b3), 0xcb);
        EXPECT(gbc.readMem(0x82b4), 0x99);
        // CB 99 01BB
        gbc.setState(0x1b0e, 0x1725, 0x6d30, 0x211a, 0xb6c0, 0x8f3e, 0x0, 0x0);
        gbc.writeMem(0x1b0e, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x1725);
        EXPECT(gbc.pc(), 0x1b10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 01BC
        gbc.setState(0x8ff5, 0xe2af, 0x3bc0, 0x2627, 0x148f, 0x2a76, 0x0, 0x0);
        gbc.writeMem(0x8ff5, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xe2af);
        EXPECT(gbc.pc(), 0x8ff7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ff5), 0xcb);
        EXPECT(gbc.readMem(0x8ff6), 0x99);
        // CB 99 01BD
        gbc.setState(0xc017, 0xb59c, 0x3e90, 0x1553, 0xe510, 0x30dd, 0x0, 0x1);
        gbc.writeMem(0xc017, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xb59c);
        EXPECT(gbc.pc(), 0xc019);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc017), 0xcb);
        EXPECT(gbc.readMem(0xc018), 0x99);
        // CB 99 01BE
        gbc.setState(0xcea0, 0x1935, 0xdbb0, 0x108, 0xf441, 0xa07e, 0x1, 0x0);
        gbc.writeMem(0xcea0, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x1935);
        EXPECT(gbc.pc(), 0xcea2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcea0), 0xcb);
        EXPECT(gbc.readMem(0xcea1), 0x99);
        // CB 99 01BF
        gbc.setState(0x70ef, 0x78b2, 0x3fd0, 0x891a, 0xeed5, 0xbd05, 0x1, 0x1);
        gbc.writeMem(0x70ef, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x78b2);
        EXPECT(gbc.pc(), 0x70f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 01C0
        gbc.setState(0xea7f, 0x2942, 0x81c0, 0xa985, 0x5a44, 0x1e7a, 0x0, 0x1);
        gbc.writeMem(0xea7f, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x2942);
        EXPECT(gbc.pc(), 0xea81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea7f), 0xcb);
        EXPECT(gbc.readMem(0xea80), 0x99);
        // CB 99 01C1
        gbc.setState(0x2878, 0x7f2c, 0xffa0, 0xa29b, 0x556f, 0x4cd3, 0x1, 0x0);
        gbc.writeMem(0x2878, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x7f2c);
        EXPECT(gbc.pc(), 0x287a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 01C2
        gbc.setState(0x81b5, 0xf296, 0x2890, 0xbfb5, 0x107b, 0x9ad5, 0x0, 0x0);
        gbc.writeMem(0x81b5, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xf296);
        EXPECT(gbc.pc(), 0x81b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81b5), 0xcb);
        EXPECT(gbc.readMem(0x81b6), 0x99);
        // CB 99 01C3
        gbc.setState(0xe6bf, 0x1411, 0xddd0, 0x3f14, 0xb5cb, 0x4dde, 0x0, 0x0);
        gbc.writeMem(0xe6bf, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x1411);
        EXPECT(gbc.pc(), 0xe6c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6bf), 0xcb);
        EXPECT(gbc.readMem(0xe6c0), 0x99);
        // CB 99 01C4
        gbc.setState(0x33a6, 0xd1da, 0x55e0, 0x202, 0xad, 0xa257, 0x0, 0x1);
        gbc.writeMem(0x33a6, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xd1da);
        EXPECT(gbc.pc(), 0x33a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 01C5
        gbc.setState(0x57c, 0x9fd1, 0xbad0, 0xad03, 0xa81e, 0xb525, 0x0, 0x0);
        gbc.writeMem(0x57c, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x9fd1);
        EXPECT(gbc.pc(), 0x57e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 01C6
        gbc.setState(0x861a, 0xad57, 0xbc70, 0x81fd, 0x6100, 0x5f52, 0x0, 0x0);
        gbc.writeMem(0x861a, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xad57);
        EXPECT(gbc.pc(), 0x861c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x861a), 0xcb);
        EXPECT(gbc.readMem(0x861b), 0x99);
        // CB 99 01C7
        gbc.setState(0x8efa, 0x588d, 0x9a50, 0x8991, 0x195, 0xd90e, 0x0, 0x0);
        gbc.writeMem(0x8efa, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x588d);
        EXPECT(gbc.pc(), 0x8efc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8efa), 0xcb);
        EXPECT(gbc.readMem(0x8efb), 0x99);
        // CB 99 01C8
        gbc.setState(0xea4d, 0xcdcb, 0x70b0, 0xe1c0, 0x9276, 0x4529, 0x0, 0x1);
        gbc.writeMem(0xea4d, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xcdcb);
        EXPECT(gbc.pc(), 0xea4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea4d), 0xcb);
        EXPECT(gbc.readMem(0xea4e), 0x99);
        // CB 99 01C9
        gbc.setState(0xb400, 0x5de6, 0x81c0, 0x36e9, 0xf489, 0x5144, 0x0, 0x1);
        gbc.writeMem(0xb400, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x5de6);
        EXPECT(gbc.pc(), 0xb402);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb400), 0xcb);
        EXPECT(gbc.readMem(0xb401), 0x99);
        // CB 99 01CA
        gbc.setState(0xe2d, 0xe17d, 0xd840, 0xbebc, 0xee66, 0x4155, 0x0, 0x0);
        gbc.writeMem(0xe2d, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xe17d);
        EXPECT(gbc.pc(), 0xe2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 01CB
        gbc.setState(0x4bd7, 0xb655, 0xc50, 0xd643, 0x740d, 0x807e, 0x1, 0x1);
        gbc.writeMem(0x4bd7, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xb655);
        EXPECT(gbc.pc(), 0x4bd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 01CC
        gbc.setState(0x679a, 0xe3c8, 0x43b0, 0x5fae, 0x9f6e, 0x5e8, 0x0, 0x0);
        gbc.writeMem(0x679a, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xe3c8);
        EXPECT(gbc.pc(), 0x679c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 01CD
        gbc.setState(0x8b05, 0xeea8, 0xdc80, 0xf365, 0xea20, 0x7616, 0x1, 0x1);
        gbc.writeMem(0x8b05, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xeea8);
        EXPECT(gbc.pc(), 0x8b07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b05), 0xcb);
        EXPECT(gbc.readMem(0x8b06), 0x99);
        // CB 99 01CE
        gbc.setState(0x96cb, 0x9e48, 0x1530, 0x12bf, 0xdee6, 0x15ff, 0x0, 0x0);
        gbc.writeMem(0x96cb, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x9e48);
        EXPECT(gbc.pc(), 0x96cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96cb), 0xcb);
        EXPECT(gbc.readMem(0x96cc), 0x99);
        // CB 99 01D0
        gbc.setState(0x257d, 0x3deb, 0xf460, 0xa3a0, 0x2ea2, 0xa1ed, 0x1, 0x1);
        gbc.writeMem(0x257d, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x3deb);
        EXPECT(gbc.pc(), 0x257f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 01D1
        gbc.setState(0x83a0, 0x9e44, 0xb930, 0x853, 0x5d17, 0x6eea, 0x1, 0x0);
        gbc.writeMem(0x83a0, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x9e44);
        EXPECT(gbc.pc(), 0x83a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83a0), 0xcb);
        EXPECT(gbc.readMem(0x83a1), 0x99);
        // CB 99 01D2
        gbc.setState(0x89cf, 0xa4e8, 0xf2b0, 0xffa8, 0x628e, 0x949c, 0x1, 0x1);
        gbc.writeMem(0x89cf, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xa4e8);
        EXPECT(gbc.pc(), 0x89d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89cf), 0xcb);
        EXPECT(gbc.readMem(0x89d0), 0x99);
        // CB 99 01D3
        gbc.setState(0x685e, 0x49b4, 0x4770, 0x6c43, 0x2d5b, 0x9b60, 0x1, 0x1);
        gbc.writeMem(0x685e, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x49b4);
        EXPECT(gbc.pc(), 0x6860);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 01D4
        gbc.setState(0xd38a, 0x8bb2, 0x3800, 0xdac0, 0x4a4c, 0xf3bc, 0x1, 0x1);
        gbc.writeMem(0xd38a, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x8bb2);
        EXPECT(gbc.pc(), 0xd38c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd38a), 0xcb);
        EXPECT(gbc.readMem(0xd38b), 0x99);
        // CB 99 01D5
        gbc.setState(0x6c4b, 0x8f88, 0xffb0, 0x93ce, 0xc5ea, 0x9923, 0x0, 0x1);
        gbc.writeMem(0x6c4b, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x8f88);
        EXPECT(gbc.pc(), 0x6c4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 01D6
        gbc.setState(0xdb5f, 0x1b1d, 0xa30, 0x5a82, 0xcd4e, 0x3dd2, 0x1, 0x0);
        gbc.writeMem(0xdb5f, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x1b1d);
        EXPECT(gbc.pc(), 0xdb61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb5f), 0xcb);
        EXPECT(gbc.readMem(0xdb60), 0x99);
        // CB 99 01D7
        gbc.setState(0x1d9a, 0x7daa, 0x8720, 0xf294, 0x443f, 0x8c2e, 0x0, 0x0);
        gbc.writeMem(0x1d9a, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x7daa);
        EXPECT(gbc.pc(), 0x1d9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 01D8
        gbc.setState(0x6356, 0xd07a, 0xf2c0, 0x7818, 0x53e6, 0x796b, 0x0, 0x1);
        gbc.writeMem(0x6356, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xd07a);
        EXPECT(gbc.pc(), 0x6358);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 01D9
        gbc.setState(0x7eec, 0x1065, 0xd6d0, 0x6e5b, 0x949, 0x1f1c, 0x0, 0x0);
        gbc.writeMem(0x7eec, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x1065);
        EXPECT(gbc.pc(), 0x7eee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 01DA
        gbc.setState(0xc1fa, 0x152a, 0xfaa0, 0x642d, 0x4680, 0xc105, 0x1, 0x1);
        gbc.writeMem(0xc1fa, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x152a);
        EXPECT(gbc.pc(), 0xc1fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1fa), 0xcb);
        EXPECT(gbc.readMem(0xc1fb), 0x99);
        // CB 99 01DB
        gbc.setState(0x38c1, 0xc775, 0xf7a0, 0x3a20, 0xfd6d, 0xe49f, 0x0, 0x1);
        gbc.writeMem(0x38c1, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xc775);
        EXPECT(gbc.pc(), 0x38c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 01DC
        gbc.setState(0x7a00, 0xc470, 0x88d0, 0xcafe, 0x7e75, 0x8a5f, 0x1, 0x0);
        gbc.writeMem(0x7a00, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xc470);
        EXPECT(gbc.pc(), 0x7a02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 01DD
        gbc.setState(0x9bb7, 0xabb, 0x13f0, 0xca0, 0xe3dd, 0xbfb2, 0x1, 0x1);
        gbc.writeMem(0x9bb7, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xabb);
        EXPECT(gbc.pc(), 0x9bb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bb7), 0xcb);
        EXPECT(gbc.readMem(0x9bb8), 0x99);
        // CB 99 01DE
        gbc.setState(0x956c, 0x6204, 0xa050, 0xa10b, 0x57b3, 0x1dea, 0x0, 0x1);
        gbc.writeMem(0x956c, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x6204);
        EXPECT(gbc.pc(), 0x956e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x956c), 0xcb);
        EXPECT(gbc.readMem(0x956d), 0x99);
        // CB 99 01DF
        gbc.setState(0xde4e, 0xc1e1, 0xe3a0, 0x5d63, 0x6d8f, 0x951d, 0x1, 0x1);
        gbc.writeMem(0xde4e, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xc1e1);
        EXPECT(gbc.pc(), 0xde50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde4e), 0xcb);
        EXPECT(gbc.readMem(0xde4f), 0x99);
        // CB 99 01E0
        gbc.setState(0xa6cd, 0x9e15, 0x6c50, 0x10a3, 0xf63c, 0xfc8d, 0x0, 0x0);
        gbc.writeMem(0xa6cd, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x9e15);
        EXPECT(gbc.pc(), 0xa6cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6cd), 0xcb);
        EXPECT(gbc.readMem(0xa6ce), 0x99);
        // CB 99 01E1
        gbc.setState(0xe356, 0x8526, 0x6210, 0x92de, 0x3480, 0x869e, 0x0, 0x0);
        gbc.writeMem(0xe356, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x8526);
        EXPECT(gbc.pc(), 0xe358);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe356), 0xcb);
        EXPECT(gbc.readMem(0xe357), 0x99);
        // CB 99 01E2
        gbc.setState(0x373b, 0x9608, 0x57f0, 0x51ed, 0x90c5, 0x367b, 0x0, 0x1);
        gbc.writeMem(0x373b, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x9608);
        EXPECT(gbc.pc(), 0x373d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 01E3
        gbc.setState(0x6a00, 0xc2b, 0xe820, 0x86e9, 0x956a, 0x290a, 0x1, 0x0);
        gbc.writeMem(0x6a00, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xc2b);
        EXPECT(gbc.pc(), 0x6a02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 01E4
        gbc.setState(0xba4f, 0xeaa4, 0x70a0, 0x7b5a, 0x7b1b, 0x583d, 0x1, 0x0);
        gbc.writeMem(0xba4f, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xeaa4);
        EXPECT(gbc.pc(), 0xba51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba4f), 0xcb);
        EXPECT(gbc.readMem(0xba50), 0x99);
        // CB 99 01E5
        gbc.setState(0xa2ca, 0x71c2, 0x4c80, 0x45b4, 0x3784, 0x1600, 0x1, 0x1);
        gbc.writeMem(0xa2ca, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x71c2);
        EXPECT(gbc.pc(), 0xa2cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2ca), 0xcb);
        EXPECT(gbc.readMem(0xa2cb), 0x99);
        // CB 99 01E6
        gbc.setState(0x5b56, 0xde96, 0xb5f0, 0x66df, 0x72b1, 0x989e, 0x1, 0x0);
        gbc.writeMem(0x5b56, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xde96);
        EXPECT(gbc.pc(), 0x5b58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 01E8
        gbc.setState(0x7a20, 0x7775, 0xad80, 0x3074, 0x15c2, 0xc3ba, 0x1, 0x1);
        gbc.writeMem(0x7a20, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x7775);
        EXPECT(gbc.pc(), 0x7a22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 01EA
        gbc.setState(0xaa6, 0x3acd, 0x7fe0, 0x7e2d, 0xaec2, 0x30f7, 0x0, 0x0);
        gbc.writeMem(0xaa6, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x3acd);
        EXPECT(gbc.pc(), 0xaa8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 01EB
        gbc.setState(0xba98, 0xa33b, 0x19d0, 0xb6, 0x613b, 0x95a6, 0x0, 0x1);
        gbc.writeMem(0xba98, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xa33b);
        EXPECT(gbc.pc(), 0xba9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba98), 0xcb);
        EXPECT(gbc.readMem(0xba99), 0x99);
        // CB 99 01EC
        gbc.setState(0xa20a, 0x7b97, 0xb010, 0x9251, 0x370a, 0x677, 0x1, 0x0);
        gbc.writeMem(0xa20a, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x7b97);
        EXPECT(gbc.pc(), 0xa20c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa20a), 0xcb);
        EXPECT(gbc.readMem(0xa20b), 0x99);
        // CB 99 01ED
        gbc.setState(0x5ee3, 0xa7e2, 0xa130, 0xa83b, 0x65ee, 0x708f, 0x0, 0x0);
        gbc.writeMem(0x5ee3, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xa7e2);
        EXPECT(gbc.pc(), 0x5ee5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 01EE
        gbc.setState(0x1bc5, 0x1426, 0xf230, 0x9095, 0xc8d3, 0x2263, 0x0, 0x1);
        gbc.writeMem(0x1bc5, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x1426);
        EXPECT(gbc.pc(), 0x1bc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 01EF
        gbc.setState(0xc19d, 0x5916, 0x75c0, 0xc160, 0x1924, 0x2491, 0x0, 0x1);
        gbc.writeMem(0xc19d, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x5916);
        EXPECT(gbc.pc(), 0xc19f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc19d), 0xcb);
        EXPECT(gbc.readMem(0xc19e), 0x99);
        // CB 99 01F0
        gbc.setState(0x14ad, 0x9d3, 0x8ca0, 0xef33, 0xa49e, 0xf269, 0x0, 0x1);
        gbc.writeMem(0x14ad, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x9d3);
        EXPECT(gbc.pc(), 0x14af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 01F1
        gbc.setState(0xab78, 0xbc45, 0x82c0, 0xb90b, 0x7171, 0x491, 0x0, 0x1);
        gbc.writeMem(0xab78, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xbc45);
        EXPECT(gbc.pc(), 0xab7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab78), 0xcb);
        EXPECT(gbc.readMem(0xab79), 0x99);
        // CB 99 01F2
        gbc.setState(0xa7c9, 0x33c, 0xd9b0, 0x618f, 0x5061, 0x4f37, 0x1, 0x0);
        gbc.writeMem(0xa7c9, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x33c);
        EXPECT(gbc.pc(), 0xa7cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7c9), 0xcb);
        EXPECT(gbc.readMem(0xa7ca), 0x99);
        // CB 99 01F3
        gbc.setState(0x7f9a, 0x710, 0xf760, 0xacc4, 0x32b1, 0x2c60, 0x1, 0x1);
        gbc.writeMem(0x7f9a, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x710);
        EXPECT(gbc.pc(), 0x7f9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 01F4
        gbc.setState(0xa19f, 0xa332, 0xf6c0, 0x9601, 0xff4, 0x6a87, 0x1, 0x0);
        gbc.writeMem(0xa19f, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xa332);
        EXPECT(gbc.pc(), 0xa1a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa19f), 0xcb);
        EXPECT(gbc.readMem(0xa1a0), 0x99);
        // CB 99 01F5
        gbc.setState(0xc4fe, 0xf967, 0xb0e0, 0xaee7, 0x33a4, 0x2fc0, 0x1, 0x1);
        gbc.writeMem(0xc4fe, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xf967);
        EXPECT(gbc.pc(), 0xc500);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4fe), 0xcb);
        EXPECT(gbc.readMem(0xc4ff), 0x99);
        // CB 99 01F6
        gbc.setState(0x3a7f, 0xb28a, 0xdeb0, 0x2432, 0x2175, 0x2032, 0x0, 0x0);
        gbc.writeMem(0x3a7f, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xb28a);
        EXPECT(gbc.pc(), 0x3a81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 01F7
        gbc.setState(0x5fc9, 0x7db5, 0xa510, 0xf1d0, 0x8199, 0x2a8d, 0x1, 0x0);
        gbc.writeMem(0x5fc9, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x7db5);
        EXPECT(gbc.pc(), 0x5fcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 01F8
        gbc.setState(0x2e1b, 0x5d60, 0x9370, 0x4eda, 0x4097, 0x4ca, 0x0, 0x0);
        gbc.writeMem(0x2e1b, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x5d60);
        EXPECT(gbc.pc(), 0x2e1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 01F9
        gbc.setState(0x1d59, 0x3fd3, 0x68a0, 0x880a, 0xe17b, 0xf223, 0x0, 0x0);
        gbc.writeMem(0x1d59, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x3fd3);
        EXPECT(gbc.pc(), 0x1d5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 01FA
        gbc.setState(0x71a8, 0x501e, 0x170, 0x5fba, 0x681f, 0xd32d, 0x0, 0x0);
        gbc.writeMem(0x71a8, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x501e);
        EXPECT(gbc.pc(), 0x71aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 01FB
        gbc.setState(0x25b7, 0xca2c, 0x7670, 0x645a, 0xedc7, 0x6a85, 0x0, 0x0);
        gbc.writeMem(0x25b7, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xca2c);
        EXPECT(gbc.pc(), 0x25b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 01FC
        gbc.setState(0xdb98, 0x1e50, 0xc3e0, 0xc9c6, 0xe898, 0xc630, 0x0, 0x0);
        gbc.writeMem(0xdb98, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x1e50);
        EXPECT(gbc.pc(), 0xdb9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb98), 0xcb);
        EXPECT(gbc.readMem(0xdb99), 0x99);
        // CB 99 01FD
        gbc.setState(0xc66, 0xae4d, 0xed60, 0xbc9, 0xbe36, 0xcb66, 0x1, 0x1);
        gbc.writeMem(0xc66, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xae4d);
        EXPECT(gbc.pc(), 0xc68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 01FE
        gbc.setState(0x8, 0xbc37, 0x6270, 0xe1f3, 0xcc15, 0x8915, 0x1, 0x0);
        gbc.writeMem(0x8, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xbc37);
        EXPECT(gbc.pc(), 0xa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 01FF
        gbc.setState(0x1078, 0xaf94, 0x9ad0, 0x3b83, 0x73e7, 0xb7d2, 0x1, 0x0);
        gbc.writeMem(0x1078, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xaf94);
        EXPECT(gbc.pc(), 0x107a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0200
        gbc.setState(0x6517, 0xd52b, 0x1710, 0x29a7, 0x4a8d, 0xf245, 0x0, 0x0);
        gbc.writeMem(0x6517, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xd52b);
        EXPECT(gbc.pc(), 0x6519);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0201
        gbc.setState(0x4a3e, 0x8d21, 0x8d10, 0xc3af, 0x91d6, 0x2b1b, 0x0, 0x1);
        gbc.writeMem(0x4a3e, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x8d21);
        EXPECT(gbc.pc(), 0x4a40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0203
        gbc.setState(0xc570, 0x41de, 0x4a10, 0x2cb1, 0x9b07, 0xc60, 0x0, 0x0);
        gbc.writeMem(0xc570, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x41de);
        EXPECT(gbc.pc(), 0xc572);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc570), 0xcb);
        EXPECT(gbc.readMem(0xc571), 0x99);
        // CB 99 0204
        gbc.setState(0x1307, 0x2b9f, 0x3af0, 0xbd63, 0x5e0a, 0x129, 0x1, 0x0);
        gbc.writeMem(0x1307, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x2b9f);
        EXPECT(gbc.pc(), 0x1309);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0205
        gbc.setState(0xade8, 0x236a, 0x5a90, 0xba41, 0x9d45, 0x2077, 0x0, 0x0);
        gbc.writeMem(0xade8, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x236a);
        EXPECT(gbc.pc(), 0xadea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xade8), 0xcb);
        EXPECT(gbc.readMem(0xade9), 0x99);
        // CB 99 0206
        gbc.setState(0x5130, 0xc9f2, 0x5650, 0x9b2e, 0x7283, 0xbb6a, 0x1, 0x1);
        gbc.writeMem(0x5130, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xc9f2);
        EXPECT(gbc.pc(), 0x5132);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0207
        gbc.setState(0x652a, 0x1a24, 0xeb50, 0x96bb, 0xf747, 0x2c6e, 0x0, 0x0);
        gbc.writeMem(0x652a, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x1a24);
        EXPECT(gbc.pc(), 0x652c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0208
        gbc.setState(0xc470, 0x23bd, 0x3840, 0x59ba, 0x6e57, 0xdb70, 0x0, 0x1);
        gbc.writeMem(0xc470, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x23bd);
        EXPECT(gbc.pc(), 0xc472);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc470), 0xcb);
        EXPECT(gbc.readMem(0xc471), 0x99);
        // CB 99 0209
        gbc.setState(0x48ed, 0x6024, 0x18b0, 0xe0b3, 0xa7f9, 0xe372, 0x0, 0x1);
        gbc.writeMem(0x48ed, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x6024);
        EXPECT(gbc.pc(), 0x48ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 020A
        gbc.setState(0xbe9c, 0x95a, 0x4f30, 0xf4cb, 0x5a7c, 0xd6e4, 0x1, 0x0);
        gbc.writeMem(0xbe9c, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x95a);
        EXPECT(gbc.pc(), 0xbe9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe9c), 0xcb);
        EXPECT(gbc.readMem(0xbe9d), 0x99);
        // CB 99 020B
        gbc.setState(0x2df, 0x6bc5, 0xa730, 0x111d, 0x64cd, 0x5f0d, 0x0, 0x1);
        gbc.writeMem(0x2df, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x6bc5);
        EXPECT(gbc.pc(), 0x2e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 020C
        gbc.setState(0x1196, 0x99ad, 0x53b0, 0xa422, 0xd0b6, 0x47f8, 0x0, 0x1);
        gbc.writeMem(0x1196, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x99ad);
        EXPECT(gbc.pc(), 0x1198);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 020D
        gbc.setState(0x975e, 0xc74e, 0x1da0, 0xab4b, 0xb77c, 0x6ea9, 0x1, 0x0);
        gbc.writeMem(0x975e, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xc74e);
        EXPECT(gbc.pc(), 0x9760);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x975e), 0xcb);
        EXPECT(gbc.readMem(0x975f), 0x99);
        // CB 99 020E
        gbc.setState(0x2312, 0x5eda, 0x8ac0, 0xd956, 0xa6b6, 0x3ac2, 0x0, 0x0);
        gbc.writeMem(0x2312, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x5eda);
        EXPECT(gbc.pc(), 0x2314);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 020F
        gbc.setState(0x4f18, 0x2446, 0xf950, 0x2fec, 0x5632, 0x53d4, 0x0, 0x0);
        gbc.writeMem(0x4f18, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x2446);
        EXPECT(gbc.pc(), 0x4f1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0210
        gbc.setState(0xd7d5, 0x7dd6, 0x4da0, 0x9160, 0x10d7, 0x1b08, 0x1, 0x0);
        gbc.writeMem(0xd7d5, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x7dd6);
        EXPECT(gbc.pc(), 0xd7d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7d5), 0xcb);
        EXPECT(gbc.readMem(0xd7d6), 0x99);
        // CB 99 0211
        gbc.setState(0xe6da, 0x766a, 0xf4f0, 0xc788, 0x1704, 0x6d78, 0x0, 0x1);
        gbc.writeMem(0xe6da, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x766a);
        EXPECT(gbc.pc(), 0xe6dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6da), 0xcb);
        EXPECT(gbc.readMem(0xe6db), 0x99);
        // CB 99 0212
        gbc.setState(0x720b, 0x6257, 0x4160, 0x74e9, 0xd776, 0x79bf, 0x1, 0x1);
        gbc.writeMem(0x720b, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x6257);
        EXPECT(gbc.pc(), 0x720d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0213
        gbc.setState(0x6461, 0xd182, 0xc2a0, 0x58b9, 0xf998, 0x2ecb, 0x1, 0x0);
        gbc.writeMem(0x6461, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xd182);
        EXPECT(gbc.pc(), 0x6463);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0214
        gbc.setState(0x92fa, 0xc887, 0xf910, 0x2701, 0x7d1, 0x36c6, 0x1, 0x0);
        gbc.writeMem(0x92fa, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xc887);
        EXPECT(gbc.pc(), 0x92fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92fa), 0xcb);
        EXPECT(gbc.readMem(0x92fb), 0x99);
        // CB 99 0215
        gbc.setState(0xa520, 0x1680, 0xbc80, 0x3c67, 0x8a4f, 0xbceb, 0x0, 0x0);
        gbc.writeMem(0xa520, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x1680);
        EXPECT(gbc.pc(), 0xa522);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa520), 0xcb);
        EXPECT(gbc.readMem(0xa521), 0x99);
        // CB 99 0216
        gbc.setState(0x908c, 0x6bc3, 0x49b0, 0x2ff0, 0xb523, 0x6529, 0x1, 0x1);
        gbc.writeMem(0x908c, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x6bc3);
        EXPECT(gbc.pc(), 0x908e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x908c), 0xcb);
        EXPECT(gbc.readMem(0x908d), 0x99);
        // CB 99 0217
        gbc.setState(0x7d34, 0x3d34, 0xfc10, 0xb52b, 0x2001, 0x2f6c, 0x0, 0x1);
        gbc.writeMem(0x7d34, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x3d34);
        EXPECT(gbc.pc(), 0x7d36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0218
        gbc.setState(0xb371, 0xf81, 0x9ba0, 0xd86c, 0xb71a, 0x6f87, 0x0, 0x0);
        gbc.writeMem(0xb371, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xf81);
        EXPECT(gbc.pc(), 0xb373);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb371), 0xcb);
        EXPECT(gbc.readMem(0xb372), 0x99);
        // CB 99 0219
        gbc.setState(0xa6df, 0x4491, 0x63d0, 0xdf66, 0x924b, 0x7758, 0x0, 0x1);
        gbc.writeMem(0xa6df, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x4491);
        EXPECT(gbc.pc(), 0xa6e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6df), 0xcb);
        EXPECT(gbc.readMem(0xa6e0), 0x99);
        // CB 99 021A
        gbc.setState(0xcaed, 0xeb71, 0xbcf0, 0x9964, 0x774b, 0x3c49, 0x1, 0x1);
        gbc.writeMem(0xcaed, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xeb71);
        EXPECT(gbc.pc(), 0xcaef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcaed), 0xcb);
        EXPECT(gbc.readMem(0xcaee), 0x99);
        // CB 99 021B
        gbc.setState(0x78a4, 0xdd18, 0x6560, 0xfc0c, 0x396, 0x9fe9, 0x0, 0x0);
        gbc.writeMem(0x78a4, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xdd18);
        EXPECT(gbc.pc(), 0x78a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 021C
        gbc.setState(0xc871, 0xd1c4, 0xce20, 0xe8bd, 0x8e48, 0x9037, 0x1, 0x1);
        gbc.writeMem(0xc871, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xd1c4);
        EXPECT(gbc.pc(), 0xc873);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc871), 0xcb);
        EXPECT(gbc.readMem(0xc872), 0x99);
        // CB 99 021D
        gbc.setState(0x5b43, 0x9144, 0x3270, 0x2fa3, 0x8e87, 0xa6a7, 0x0, 0x0);
        gbc.writeMem(0x5b43, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x9144);
        EXPECT(gbc.pc(), 0x5b45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 021E
        gbc.setState(0xe2b9, 0x4451, 0xe060, 0x7dda, 0x5e86, 0x8344, 0x1, 0x1);
        gbc.writeMem(0xe2b9, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x4451);
        EXPECT(gbc.pc(), 0xe2bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2b9), 0xcb);
        EXPECT(gbc.readMem(0xe2ba), 0x99);
        // CB 99 021F
        gbc.setState(0xee6d, 0x5023, 0xc650, 0x8dff, 0xf9f2, 0x997c, 0x1, 0x1);
        gbc.writeMem(0xee6d, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x5023);
        EXPECT(gbc.pc(), 0xee6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee6d), 0xcb);
        EXPECT(gbc.readMem(0xee6e), 0x99);
        // CB 99 0220
        gbc.setState(0xe0f6, 0xe9bd, 0x7750, 0x484e, 0xcde8, 0xcb0, 0x0, 0x0);
        gbc.writeMem(0xe0f6, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xe9bd);
        EXPECT(gbc.pc(), 0xe0f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0f6), 0xcb);
        EXPECT(gbc.readMem(0xe0f7), 0x99);
        // CB 99 0221
        gbc.setState(0x7e85, 0xe6ff, 0x7470, 0xfd3a, 0xad54, 0x37e9, 0x0, 0x0);
        gbc.writeMem(0x7e85, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xe6ff);
        EXPECT(gbc.pc(), 0x7e87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0222
        gbc.setState(0x3a25, 0x1fdd, 0x6a80, 0x76fa, 0x264, 0xa4b0, 0x1, 0x1);
        gbc.writeMem(0x3a25, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x1fdd);
        EXPECT(gbc.pc(), 0x3a27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0223
        gbc.setState(0xef0f, 0xd422, 0xba90, 0x2a19, 0x70fc, 0xf0d, 0x0, 0x1);
        gbc.writeMem(0xef0f, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xd422);
        EXPECT(gbc.pc(), 0xef11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef0f), 0xcb);
        EXPECT(gbc.readMem(0xef10), 0x99);
        // CB 99 0224
        gbc.setState(0x6d33, 0x4221, 0xcbb0, 0x648c, 0xdafd, 0xeaf8, 0x1, 0x1);
        gbc.writeMem(0x6d33, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x4221);
        EXPECT(gbc.pc(), 0x6d35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0225
        gbc.setState(0x90c5, 0x9de3, 0x32b0, 0x9328, 0x68aa, 0x92d9, 0x1, 0x0);
        gbc.writeMem(0x90c5, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x9de3);
        EXPECT(gbc.pc(), 0x90c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90c5), 0xcb);
        EXPECT(gbc.readMem(0x90c6), 0x99);
        // CB 99 0226
        gbc.setState(0xa24f, 0x62dc, 0xdd10, 0x305b, 0x8592, 0xa136, 0x0, 0x0);
        gbc.writeMem(0xa24f, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x62dc);
        EXPECT(gbc.pc(), 0xa251);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa24f), 0xcb);
        EXPECT(gbc.readMem(0xa250), 0x99);
        // CB 99 0227
        gbc.setState(0x6501, 0xf5fd, 0x3fb0, 0xf622, 0x30af, 0xd4fa, 0x1, 0x0);
        gbc.writeMem(0x6501, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xf5fd);
        EXPECT(gbc.pc(), 0x6503);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0228
        gbc.setState(0xa6db, 0x89ed, 0x13a0, 0xf46e, 0x1b69, 0x96da, 0x0, 0x1);
        gbc.writeMem(0xa6db, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x89ed);
        EXPECT(gbc.pc(), 0xa6dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6db), 0xcb);
        EXPECT(gbc.readMem(0xa6dc), 0x99);
        // CB 99 0229
        gbc.setState(0x4939, 0x9fe7, 0x5b60, 0xe29c, 0xf77f, 0xdf28, 0x0, 0x0);
        gbc.writeMem(0x4939, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x9fe7);
        EXPECT(gbc.pc(), 0x493b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 022A
        gbc.setState(0x40ce, 0xe3fd, 0xd820, 0xbd2b, 0x5eb4, 0x55a7, 0x0, 0x1);
        gbc.writeMem(0x40ce, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xe3fd);
        EXPECT(gbc.pc(), 0x40d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 022B
        gbc.setState(0xc84b, 0x5bdd, 0x9960, 0x4934, 0x9b3, 0x5977, 0x1, 0x0);
        gbc.writeMem(0xc84b, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x5bdd);
        EXPECT(gbc.pc(), 0xc84d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc84b), 0xcb);
        EXPECT(gbc.readMem(0xc84c), 0x99);
        // CB 99 022C
        gbc.setState(0x466, 0xe8d3, 0x200, 0x61f3, 0xb722, 0xae5, 0x0, 0x0);
        gbc.writeMem(0x466, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xe8d3);
        EXPECT(gbc.pc(), 0x468);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 022D
        gbc.setState(0x73bc, 0xb284, 0x6a70, 0xaedc, 0x78a, 0x69ab, 0x1, 0x0);
        gbc.writeMem(0x73bc, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xb284);
        EXPECT(gbc.pc(), 0x73be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 022E
        gbc.setState(0x3568, 0x75a, 0xb1e0, 0x9fc0, 0x5c05, 0x9880, 0x1, 0x0);
        gbc.writeMem(0x3568, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x75a);
        EXPECT(gbc.pc(), 0x356a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 022F
        gbc.setState(0xa855, 0xf836, 0x2110, 0x1e71, 0x31e9, 0x1e34, 0x0, 0x1);
        gbc.writeMem(0xa855, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xf836);
        EXPECT(gbc.pc(), 0xa857);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa855), 0xcb);
        EXPECT(gbc.readMem(0xa856), 0x99);
        // CB 99 0231
        gbc.setState(0x4349, 0x9, 0xd810, 0x95dc, 0x1758, 0x6a58, 0x1, 0x1);
        gbc.writeMem(0x4349, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x9);
        EXPECT(gbc.pc(), 0x434b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0232
        gbc.setState(0xdda2, 0xcb07, 0xd660, 0xf63c, 0x799, 0xcf5f, 0x1, 0x0);
        gbc.writeMem(0xdda2, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xcb07);
        EXPECT(gbc.pc(), 0xdda4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdda2), 0xcb);
        EXPECT(gbc.readMem(0xdda3), 0x99);
        // CB 99 0233
        gbc.setState(0xbd7d, 0xcd2f, 0x8380, 0xc12, 0xfde0, 0x226d, 0x0, 0x0);
        gbc.writeMem(0xbd7d, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xcd2f);
        EXPECT(gbc.pc(), 0xbd7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd7d), 0xcb);
        EXPECT(gbc.readMem(0xbd7e), 0x99);
        // CB 99 0234
        gbc.setState(0xd490, 0xb186, 0xfc10, 0x5060, 0xea3c, 0xa43f, 0x0, 0x1);
        gbc.writeMem(0xd490, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xb186);
        EXPECT(gbc.pc(), 0xd492);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd490), 0xcb);
        EXPECT(gbc.readMem(0xd491), 0x99);
        // CB 99 0235
        gbc.setState(0x60af, 0xd44a, 0x9880, 0x3b2b, 0xd567, 0x4844, 0x1, 0x1);
        gbc.writeMem(0x60af, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xd44a);
        EXPECT(gbc.pc(), 0x60b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0236
        gbc.setState(0xb89f, 0xba97, 0xba80, 0x55a1, 0xad20, 0xbacc, 0x1, 0x1);
        gbc.writeMem(0xb89f, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xba97);
        EXPECT(gbc.pc(), 0xb8a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb89f), 0xcb);
        EXPECT(gbc.readMem(0xb8a0), 0x99);
        // CB 99 0237
        gbc.setState(0xed6e, 0x9bcb, 0xfd20, 0xe2a4, 0x1d35, 0xbf7, 0x0, 0x0);
        gbc.writeMem(0xed6e, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x9bcb);
        EXPECT(gbc.pc(), 0xed70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed6e), 0xcb);
        EXPECT(gbc.readMem(0xed6f), 0x99);
        // CB 99 0238
        gbc.setState(0x5656, 0x30a7, 0xc650, 0xfcba, 0xcef1, 0x15da, 0x1, 0x0);
        gbc.writeMem(0x5656, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x30a7);
        EXPECT(gbc.pc(), 0x5658);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0239
        gbc.setState(0x86ed, 0x1b46, 0x2430, 0x58de, 0xb2ea, 0x66e, 0x0, 0x1);
        gbc.writeMem(0x86ed, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x1b46);
        EXPECT(gbc.pc(), 0x86ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86ed), 0xcb);
        EXPECT(gbc.readMem(0x86ee), 0x99);
        // CB 99 023A
        gbc.setState(0xb392, 0xfa81, 0xed20, 0xd192, 0x5c6e, 0x1098, 0x0, 0x1);
        gbc.writeMem(0xb392, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xfa81);
        EXPECT(gbc.pc(), 0xb394);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb392), 0xcb);
        EXPECT(gbc.readMem(0xb393), 0x99);
        // CB 99 023B
        gbc.setState(0x6567, 0x6d14, 0x5c90, 0x1db0, 0xf86b, 0x2d0d, 0x1, 0x1);
        gbc.writeMem(0x6567, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x6d14);
        EXPECT(gbc.pc(), 0x6569);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 023C
        gbc.setState(0xe530, 0x3b14, 0x4940, 0xb053, 0x2981, 0x8a9e, 0x1, 0x0);
        gbc.writeMem(0xe530, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x3b14);
        EXPECT(gbc.pc(), 0xe532);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe530), 0xcb);
        EXPECT(gbc.readMem(0xe531), 0x99);
        // CB 99 023D
        gbc.setState(0x1182, 0xd941, 0xfbc0, 0x1c19, 0x16c9, 0x4184, 0x1, 0x1);
        gbc.writeMem(0x1182, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xd941);
        EXPECT(gbc.pc(), 0x1184);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 023E
        gbc.setState(0xc726, 0xbba, 0x9790, 0x1e5d, 0xbdc, 0x239b, 0x1, 0x1);
        gbc.writeMem(0xc726, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xbba);
        EXPECT(gbc.pc(), 0xc728);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc726), 0xcb);
        EXPECT(gbc.readMem(0xc727), 0x99);
        // CB 99 023F
        gbc.setState(0x6539, 0x59c2, 0xde0, 0x9273, 0xed47, 0xe917, 0x1, 0x1);
        gbc.writeMem(0x6539, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x59c2);
        EXPECT(gbc.pc(), 0x653b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0240
        gbc.setState(0xc001, 0x1ee8, 0x4d70, 0x1bbb, 0xa07d, 0x4633, 0x1, 0x1);
        gbc.writeMem(0xc001, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x1ee8);
        EXPECT(gbc.pc(), 0xc003);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc001), 0xcb);
        EXPECT(gbc.readMem(0xc002), 0x99);
        // CB 99 0241
        gbc.setState(0x2998, 0x4c56, 0x2910, 0xc50, 0xbba6, 0x22b4, 0x1, 0x0);
        gbc.writeMem(0x2998, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x4c56);
        EXPECT(gbc.pc(), 0x299a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0242
        gbc.setState(0x5ae6, 0x92a9, 0x15c0, 0xdeee, 0xd09a, 0x29c5, 0x0, 0x1);
        gbc.writeMem(0x5ae6, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x92a9);
        EXPECT(gbc.pc(), 0x5ae8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0243
        gbc.setState(0x82ac, 0xc733, 0x5390, 0xd9e7, 0x3571, 0xdcd2, 0x0, 0x0);
        gbc.writeMem(0x82ac, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xc733);
        EXPECT(gbc.pc(), 0x82ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82ac), 0xcb);
        EXPECT(gbc.readMem(0x82ad), 0x99);
        // CB 99 0244
        gbc.setState(0x4eca, 0xc6a9, 0xd7c0, 0x3863, 0xd4f2, 0x1292, 0x1, 0x1);
        gbc.writeMem(0x4eca, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xc6a9);
        EXPECT(gbc.pc(), 0x4ecc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0245
        gbc.setState(0xd8b1, 0x9e92, 0x7610, 0x7e7e, 0x387e, 0x8768, 0x0, 0x1);
        gbc.writeMem(0xd8b1, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x9e92);
        EXPECT(gbc.pc(), 0xd8b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8b1), 0xcb);
        EXPECT(gbc.readMem(0xd8b2), 0x99);
        // CB 99 0246
        gbc.setState(0x1d38, 0x26dd, 0x820, 0x53b6, 0xa2d3, 0x1503, 0x1, 0x0);
        gbc.writeMem(0x1d38, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x26dd);
        EXPECT(gbc.pc(), 0x1d3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0247
        gbc.setState(0x879e, 0x9430, 0x60c0, 0xa00e, 0x5096, 0xf2b8, 0x1, 0x0);
        gbc.writeMem(0x879e, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x9430);
        EXPECT(gbc.pc(), 0x87a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x879e), 0xcb);
        EXPECT(gbc.readMem(0x879f), 0x99);
        // CB 99 0248
        gbc.setState(0xb73f, 0x21e6, 0xef90, 0x734d, 0xe40c, 0x91a7, 0x1, 0x0);
        gbc.writeMem(0xb73f, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x21e6);
        EXPECT(gbc.pc(), 0xb741);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb73f), 0xcb);
        EXPECT(gbc.readMem(0xb740), 0x99);
        // CB 99 0249
        gbc.setState(0x6ca3, 0x36d2, 0xd60, 0xc556, 0xc622, 0x67fc, 0x1, 0x0);
        gbc.writeMem(0x6ca3, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x36d2);
        EXPECT(gbc.pc(), 0x6ca5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 024A
        gbc.setState(0xa682, 0x4fb6, 0xbcb0, 0x715, 0x73e, 0xa79b, 0x0, 0x1);
        gbc.writeMem(0xa682, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x4fb6);
        EXPECT(gbc.pc(), 0xa684);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa682), 0xcb);
        EXPECT(gbc.readMem(0xa683), 0x99);
        // CB 99 024B
        gbc.setState(0xed8a, 0x51a1, 0xeb40, 0x1a67, 0xf8eb, 0x1384, 0x1, 0x1);
        gbc.writeMem(0xed8a, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x51a1);
        EXPECT(gbc.pc(), 0xed8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed8a), 0xcb);
        EXPECT(gbc.readMem(0xed8b), 0x99);
        // CB 99 024C
        gbc.setState(0xbed6, 0xe66, 0x3030, 0xa0f1, 0x305d, 0x916b, 0x0, 0x0);
        gbc.writeMem(0xbed6, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xe66);
        EXPECT(gbc.pc(), 0xbed8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbed6), 0xcb);
        EXPECT(gbc.readMem(0xbed7), 0x99);
        // CB 99 024D
        gbc.setState(0x45c7, 0xc32b, 0x3ff0, 0xaca8, 0xb22d, 0x2231, 0x1, 0x0);
        gbc.writeMem(0x45c7, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xc32b);
        EXPECT(gbc.pc(), 0x45c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 024E
        gbc.setState(0x207a, 0x878e, 0xd970, 0xf887, 0x8b3e, 0x6b23, 0x0, 0x0);
        gbc.writeMem(0x207a, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x878e);
        EXPECT(gbc.pc(), 0x207c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 024F
        gbc.setState(0xc06b, 0x8184, 0x6be0, 0xbd96, 0x469f, 0x3d0b, 0x0, 0x0);
        gbc.writeMem(0xc06b, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x8184);
        EXPECT(gbc.pc(), 0xc06d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc06b), 0xcb);
        EXPECT(gbc.readMem(0xc06c), 0x99);
        // CB 99 0250
        gbc.setState(0xa71f, 0xb0f, 0x8610, 0x2f43, 0xb5b7, 0x3c10, 0x1, 0x0);
        gbc.writeMem(0xa71f, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xb0f);
        EXPECT(gbc.pc(), 0xa721);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa71f), 0xcb);
        EXPECT(gbc.readMem(0xa720), 0x99);
        // CB 99 0252
        gbc.setState(0x4de1, 0xece3, 0x8740, 0xa932, 0xbafe, 0x5c6a, 0x0, 0x1);
        gbc.writeMem(0x4de1, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xece3);
        EXPECT(gbc.pc(), 0x4de3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0253
        gbc.setState(0xa41f, 0xe0b2, 0x6030, 0xdb23, 0xea49, 0x2281, 0x0, 0x1);
        gbc.writeMem(0xa41f, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xe0b2);
        EXPECT(gbc.pc(), 0xa421);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa41f), 0xcb);
        EXPECT(gbc.readMem(0xa420), 0x99);
        // CB 99 0254
        gbc.setState(0x3037, 0x2279, 0xd620, 0x76ad, 0xf76, 0x7d4, 0x1, 0x1);
        gbc.writeMem(0x3037, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x2279);
        EXPECT(gbc.pc(), 0x3039);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0255
        gbc.setState(0xc36b, 0x9c72, 0xcce0, 0x6c91, 0x5f9c, 0xc102, 0x0, 0x1);
        gbc.writeMem(0xc36b, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x9c72);
        EXPECT(gbc.pc(), 0xc36d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc36b), 0xcb);
        EXPECT(gbc.readMem(0xc36c), 0x99);
        // CB 99 0256
        gbc.setState(0xa2e4, 0xa0d0, 0x21e0, 0x36fb, 0x8a2f, 0xe66a, 0x0, 0x0);
        gbc.writeMem(0xa2e4, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xa0d0);
        EXPECT(gbc.pc(), 0xa2e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2e4), 0xcb);
        EXPECT(gbc.readMem(0xa2e5), 0x99);
        // CB 99 0257
        gbc.setState(0x53ef, 0xa4f4, 0xca40, 0x20e6, 0xfa2a, 0x3229, 0x0, 0x1);
        gbc.writeMem(0x53ef, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xa4f4);
        EXPECT(gbc.pc(), 0x53f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0258
        gbc.setState(0x8c9b, 0xe365, 0x7e00, 0x2735, 0x4401, 0xf9da, 0x1, 0x1);
        gbc.writeMem(0x8c9b, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xe365);
        EXPECT(gbc.pc(), 0x8c9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c9b), 0xcb);
        EXPECT(gbc.readMem(0x8c9c), 0x99);
        // CB 99 0259
        gbc.setState(0x7ee1, 0x2b86, 0x8aa0, 0x3e02, 0x7012, 0x3170, 0x0, 0x1);
        gbc.writeMem(0x7ee1, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x2b86);
        EXPECT(gbc.pc(), 0x7ee3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 025A
        gbc.setState(0x88c1, 0x53c1, 0xcf30, 0x8c18, 0xcc7d, 0x1e53, 0x1, 0x1);
        gbc.writeMem(0x88c1, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x53c1);
        EXPECT(gbc.pc(), 0x88c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88c1), 0xcb);
        EXPECT(gbc.readMem(0x88c2), 0x99);
        // CB 99 025B
        gbc.setState(0x72e4, 0x76ba, 0x7680, 0x6b40, 0xca8c, 0xee63, 0x0, 0x0);
        gbc.writeMem(0x72e4, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x76ba);
        EXPECT(gbc.pc(), 0x72e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 025C
        gbc.setState(0x1d71, 0x1cd6, 0xa010, 0x22c5, 0xdec9, 0xecbf, 0x0, 0x0);
        gbc.writeMem(0x1d71, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x1cd6);
        EXPECT(gbc.pc(), 0x1d73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 025D
        gbc.setState(0x3d80, 0xb364, 0x46b0, 0xfaa0, 0xf758, 0x4c6, 0x0, 0x1);
        gbc.writeMem(0x3d80, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xb364);
        EXPECT(gbc.pc(), 0x3d82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 025F
        gbc.setState(0x8603, 0xb886, 0x69a0, 0xd16a, 0x4dfe, 0x1554, 0x0, 0x0);
        gbc.writeMem(0x8603, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xb886);
        EXPECT(gbc.pc(), 0x8605);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8603), 0xcb);
        EXPECT(gbc.readMem(0x8604), 0x99);
        // CB 99 0260
        gbc.setState(0xafd, 0x7cf4, 0x4550, 0x86ae, 0xed56, 0x77a3, 0x0, 0x0);
        gbc.writeMem(0xafd, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x7cf4);
        EXPECT(gbc.pc(), 0xaff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0261
        gbc.setState(0x4017, 0x7d17, 0x2790, 0xe5d4, 0xc95f, 0x593a, 0x1, 0x1);
        gbc.writeMem(0x4017, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x7d17);
        EXPECT(gbc.pc(), 0x4019);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0262
        gbc.setState(0xb893, 0x36d8, 0xe4a0, 0x7e6c, 0xcc0d, 0x77ea, 0x0, 0x0);
        gbc.writeMem(0xb893, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x36d8);
        EXPECT(gbc.pc(), 0xb895);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb893), 0xcb);
        EXPECT(gbc.readMem(0xb894), 0x99);
        // CB 99 0263
        gbc.setState(0x2bf, 0x2835, 0x85d0, 0x7ca7, 0xab41, 0x52b5, 0x0, 0x0);
        gbc.writeMem(0x2bf, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x2835);
        EXPECT(gbc.pc(), 0x2c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0264
        gbc.setState(0x3fa0, 0x983c, 0x8a70, 0xacbb, 0xdab3, 0x6a87, 0x1, 0x0);
        gbc.writeMem(0x3fa0, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x983c);
        EXPECT(gbc.pc(), 0x3fa2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0265
        gbc.setState(0xdbaf, 0x296c, 0xd180, 0x1f9a, 0x9537, 0x41de, 0x1, 0x1);
        gbc.writeMem(0xdbaf, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x296c);
        EXPECT(gbc.pc(), 0xdbb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbaf), 0xcb);
        EXPECT(gbc.readMem(0xdbb0), 0x99);
        // CB 99 0266
        gbc.setState(0x1fed, 0xe56d, 0xdd80, 0xb822, 0x8a09, 0x7b42, 0x0, 0x0);
        gbc.writeMem(0x1fed, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xe56d);
        EXPECT(gbc.pc(), 0x1fef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0267
        gbc.setState(0x93b4, 0xdecc, 0xb220, 0x8a27, 0xbeee, 0x9356, 0x1, 0x1);
        gbc.writeMem(0x93b4, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xdecc);
        EXPECT(gbc.pc(), 0x93b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93b4), 0xcb);
        EXPECT(gbc.readMem(0x93b5), 0x99);
        // CB 99 0268
        gbc.setState(0xad81, 0x9652, 0xb520, 0x3068, 0x7a62, 0xa831, 0x1, 0x1);
        gbc.writeMem(0xad81, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x9652);
        EXPECT(gbc.pc(), 0xad83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad81), 0xcb);
        EXPECT(gbc.readMem(0xad82), 0x99);
        // CB 99 0269
        gbc.setState(0x7306, 0x9b2c, 0xb280, 0xbbec, 0x9403, 0x8246, 0x0, 0x0);
        gbc.writeMem(0x7306, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x9b2c);
        EXPECT(gbc.pc(), 0x7308);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 026A
        gbc.setState(0x5b73, 0x90f6, 0xa8d0, 0x7bf9, 0x197c, 0x880e, 0x0, 0x1);
        gbc.writeMem(0x5b73, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x90f6);
        EXPECT(gbc.pc(), 0x5b75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 026B
        gbc.setState(0x4525, 0xb10d, 0x61a0, 0x8abb, 0x8d59, 0x354c, 0x1, 0x0);
        gbc.writeMem(0x4525, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xb10d);
        EXPECT(gbc.pc(), 0x4527);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 026C
        gbc.setState(0x613, 0x1157, 0xb0a0, 0xe130, 0xed57, 0xea7f, 0x1, 0x1);
        gbc.writeMem(0x613, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x1157);
        EXPECT(gbc.pc(), 0x615);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 026D
        gbc.setState(0xaede, 0x56e4, 0x20c0, 0x5427, 0x76fb, 0x615, 0x1, 0x0);
        gbc.writeMem(0xaede, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x56e4);
        EXPECT(gbc.pc(), 0xaee0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaede), 0xcb);
        EXPECT(gbc.readMem(0xaedf), 0x99);
        // CB 99 026E
        gbc.setState(0x7621, 0xc17f, 0xb800, 0x8a4b, 0x4239, 0xf349, 0x1, 0x0);
        gbc.writeMem(0x7621, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xc17f);
        EXPECT(gbc.pc(), 0x7623);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0270
        gbc.setState(0x23e, 0xdfc2, 0xeb50, 0xb9d4, 0x84ea, 0x656f, 0x1, 0x1);
        gbc.writeMem(0x23e, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xdfc2);
        EXPECT(gbc.pc(), 0x240);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0272
        gbc.setState(0x3518, 0xaa8e, 0x44f0, 0x8e36, 0x2066, 0x88ba, 0x1, 0x0);
        gbc.writeMem(0x3518, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xaa8e);
        EXPECT(gbc.pc(), 0x351a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0274
        gbc.setState(0xe107, 0xdf6, 0x5950, 0xb846, 0x24d8, 0xdbc2, 0x1, 0x1);
        gbc.writeMem(0xe107, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xdf6);
        EXPECT(gbc.pc(), 0xe109);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe107), 0xcb);
        EXPECT(gbc.readMem(0xe108), 0x99);
        // CB 99 0275
        gbc.setState(0xee24, 0x8b79, 0xe350, 0x4912, 0x540a, 0xce63, 0x1, 0x0);
        gbc.writeMem(0xee24, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x8b79);
        EXPECT(gbc.pc(), 0xee26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee24), 0xcb);
        EXPECT(gbc.readMem(0xee25), 0x99);
        // CB 99 0276
        gbc.setState(0xbddc, 0x6788, 0x8080, 0xad8c, 0x59fe, 0xd9a3, 0x1, 0x0);
        gbc.writeMem(0xbddc, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x6788);
        EXPECT(gbc.pc(), 0xbdde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbddc), 0xcb);
        EXPECT(gbc.readMem(0xbddd), 0x99);
        // CB 99 0277
        gbc.setState(0x4bf, 0xba49, 0xea90, 0x1b62, 0xe30e, 0x1a8c, 0x1, 0x1);
        gbc.writeMem(0x4bf, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xba49);
        EXPECT(gbc.pc(), 0x4c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0278
        gbc.setState(0x2e10, 0x3c40, 0x84c0, 0x2af7, 0xbdb6, 0x363a, 0x0, 0x1);
        gbc.writeMem(0x2e10, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x3c40);
        EXPECT(gbc.pc(), 0x2e12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0279
        gbc.setState(0xbe6b, 0x4d41, 0x7c80, 0xdc42, 0xf6e3, 0x9d9b, 0x1, 0x1);
        gbc.writeMem(0xbe6b, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x4d41);
        EXPECT(gbc.pc(), 0xbe6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe6b), 0xcb);
        EXPECT(gbc.readMem(0xbe6c), 0x99);
        // CB 99 027A
        gbc.setState(0x5f88, 0xff64, 0x68d0, 0x5de8, 0x244e, 0xcb13, 0x0, 0x1);
        gbc.writeMem(0x5f88, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xff64);
        EXPECT(gbc.pc(), 0x5f8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 027B
        gbc.setState(0xd102, 0xdeeb, 0xe560, 0xcc29, 0x8689, 0x8bc1, 0x0, 0x0);
        gbc.writeMem(0xd102, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xdeeb);
        EXPECT(gbc.pc(), 0xd104);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd102), 0xcb);
        EXPECT(gbc.readMem(0xd103), 0x99);
        // CB 99 027C
        gbc.setState(0xf24, 0x69c4, 0xd660, 0x45bd, 0x7cb, 0xb51b, 0x0, 0x1);
        gbc.writeMem(0xf24, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x69c4);
        EXPECT(gbc.pc(), 0xf26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 027D
        gbc.setState(0x796e, 0xd485, 0x1b90, 0x8608, 0x794, 0x152a, 0x0, 0x1);
        gbc.writeMem(0x796e, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xd485);
        EXPECT(gbc.pc(), 0x7970);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 027E
        gbc.setState(0x7d8c, 0xafa8, 0x82a0, 0x4ca4, 0x8c96, 0x676b, 0x1, 0x0);
        gbc.writeMem(0x7d8c, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xafa8);
        EXPECT(gbc.pc(), 0x7d8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 027F
        gbc.setState(0x3196, 0xe218, 0x3680, 0xb7c2, 0xed90, 0x2a5b, 0x0, 0x0);
        gbc.writeMem(0x3196, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xe218);
        EXPECT(gbc.pc(), 0x3198);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0280
        gbc.setState(0x80ac, 0x3483, 0xc530, 0xb506, 0x8267, 0x7cfa, 0x0, 0x0);
        gbc.writeMem(0x80ac, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x3483);
        EXPECT(gbc.pc(), 0x80ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80ac), 0xcb);
        EXPECT(gbc.readMem(0x80ad), 0x99);
        // CB 99 0281
        gbc.setState(0xcde8, 0xc52, 0x1080, 0xf2b8, 0x66d, 0xf152, 0x1, 0x0);
        gbc.writeMem(0xcde8, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xc52);
        EXPECT(gbc.pc(), 0xcdea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcde8), 0xcb);
        EXPECT(gbc.readMem(0xcde9), 0x99);
        // CB 99 0282
        gbc.setState(0x2ee, 0x30ab, 0x6df0, 0x7fc5, 0xd9d0, 0xf5cb, 0x1, 0x1);
        gbc.writeMem(0x2ee, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x30ab);
        EXPECT(gbc.pc(), 0x2f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0284
        gbc.setState(0x45a0, 0x5941, 0x1590, 0x6683, 0xc02c, 0x4624, 0x1, 0x1);
        gbc.writeMem(0x45a0, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x5941);
        EXPECT(gbc.pc(), 0x45a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0286
        gbc.setState(0x42fd, 0xc82c, 0x5c0, 0xc338, 0x5fb8, 0x2732, 0x1, 0x1);
        gbc.writeMem(0x42fd, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xc82c);
        EXPECT(gbc.pc(), 0x42ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0287
        gbc.setState(0x442c, 0x429d, 0xd0d0, 0x7d37, 0xe68f, 0x2426, 0x1, 0x1);
        gbc.writeMem(0x442c, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x429d);
        EXPECT(gbc.pc(), 0x442e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0288
        gbc.setState(0x52c0, 0x8ce, 0x27a0, 0x5fc1, 0xa4bf, 0x973e, 0x0, 0x1);
        gbc.writeMem(0x52c0, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x8ce);
        EXPECT(gbc.pc(), 0x52c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0289
        gbc.setState(0xaa99, 0x1048, 0x2b0, 0x56ea, 0x87a, 0x2fda, 0x0, 0x0);
        gbc.writeMem(0xaa99, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x1048);
        EXPECT(gbc.pc(), 0xaa9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa99), 0xcb);
        EXPECT(gbc.readMem(0xaa9a), 0x99);
        // CB 99 028A
        gbc.setState(0x51e3, 0x6d6f, 0x6ae0, 0xc435, 0xadc6, 0x553d, 0x0, 0x0);
        gbc.writeMem(0x51e3, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x6d6f);
        EXPECT(gbc.pc(), 0x51e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 028B
        gbc.setState(0x2d7, 0xb771, 0x7da0, 0x25cd, 0xccb8, 0x1bc1, 0x0, 0x1);
        gbc.writeMem(0x2d7, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xb771);
        EXPECT(gbc.pc(), 0x2d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 028C
        gbc.setState(0x2e04, 0x2c3b, 0x2960, 0x9763, 0xeb69, 0x2ec4, 0x1, 0x0);
        gbc.writeMem(0x2e04, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x2c3b);
        EXPECT(gbc.pc(), 0x2e06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 028D
        gbc.setState(0x299e, 0x707e, 0x6cc0, 0xe8a8, 0x9162, 0x6845, 0x1, 0x0);
        gbc.writeMem(0x299e, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x707e);
        EXPECT(gbc.pc(), 0x29a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 028E
        gbc.setState(0xa74c, 0xb3e5, 0x2320, 0x4487, 0x5c0c, 0x4461, 0x0, 0x1);
        gbc.writeMem(0xa74c, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xb3e5);
        EXPECT(gbc.pc(), 0xa74e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa74c), 0xcb);
        EXPECT(gbc.readMem(0xa74d), 0x99);
        // CB 99 028F
        gbc.setState(0x7c29, 0xbc62, 0x92b0, 0x558, 0x355b, 0x1af4, 0x1, 0x1);
        gbc.writeMem(0x7c29, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xbc62);
        EXPECT(gbc.pc(), 0x7c2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0290
        gbc.setState(0xb0e0, 0x7eee, 0x2c80, 0x217e, 0xe0c2, 0xcc3e, 0x0, 0x1);
        gbc.writeMem(0xb0e0, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x7eee);
        EXPECT(gbc.pc(), 0xb0e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0e0), 0xcb);
        EXPECT(gbc.readMem(0xb0e1), 0x99);
        // CB 99 0291
        gbc.setState(0x8127, 0x486b, 0x7970, 0x4557, 0x7ba1, 0x84b4, 0x1, 0x0);
        gbc.writeMem(0x8127, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x486b);
        EXPECT(gbc.pc(), 0x8129);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8127), 0xcb);
        EXPECT(gbc.readMem(0x8128), 0x99);
        // CB 99 0292
        gbc.setState(0x7f4f, 0x3204, 0xb1c0, 0x4a3a, 0x5190, 0x78b1, 0x0, 0x1);
        gbc.writeMem(0x7f4f, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x3204);
        EXPECT(gbc.pc(), 0x7f51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0293
        gbc.setState(0xdcb6, 0x212, 0x31d0, 0x792b, 0xc7fb, 0x1677, 0x1, 0x1);
        gbc.writeMem(0xdcb6, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x212);
        EXPECT(gbc.pc(), 0xdcb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcb6), 0xcb);
        EXPECT(gbc.readMem(0xdcb7), 0x99);
        // CB 99 0294
        gbc.setState(0x3d8d, 0x7f42, 0x2750, 0x498b, 0x6cea, 0x27bc, 0x0, 0x0);
        gbc.writeMem(0x3d8d, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x7f42);
        EXPECT(gbc.pc(), 0x3d8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0295
        gbc.setState(0xe881, 0x8365, 0x74f0, 0x99c1, 0xfa7e, 0x467, 0x0, 0x1);
        gbc.writeMem(0xe881, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x8365);
        EXPECT(gbc.pc(), 0xe883);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe881), 0xcb);
        EXPECT(gbc.readMem(0xe882), 0x99);
        // CB 99 0296
        gbc.setState(0x697d, 0xa224, 0x3120, 0xb8d1, 0xf9a8, 0x9bde, 0x0, 0x0);
        gbc.writeMem(0x697d, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xa224);
        EXPECT(gbc.pc(), 0x697f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0297
        gbc.setState(0x54ac, 0x43b7, 0xd9a0, 0x6ad3, 0x6019, 0x84ae, 0x0, 0x1);
        gbc.writeMem(0x54ac, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x43b7);
        EXPECT(gbc.pc(), 0x54ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0298
        gbc.setState(0xc229, 0xc20a, 0x6bc0, 0x2541, 0xe93e, 0x203f, 0x0, 0x0);
        gbc.writeMem(0xc229, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xc20a);
        EXPECT(gbc.pc(), 0xc22b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc229), 0xcb);
        EXPECT(gbc.readMem(0xc22a), 0x99);
        // CB 99 029A
        gbc.setState(0x4da1, 0x2e52, 0x79b0, 0xf468, 0xa2dc, 0xad13, 0x0, 0x0);
        gbc.writeMem(0x4da1, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x2e52);
        EXPECT(gbc.pc(), 0x4da3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 029B
        gbc.setState(0xbfc3, 0xfc01, 0x5310, 0x32a5, 0xcbea, 0xc39b, 0x1, 0x1);
        gbc.writeMem(0xbfc3, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xfc01);
        EXPECT(gbc.pc(), 0xbfc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfc3), 0xcb);
        EXPECT(gbc.readMem(0xbfc4), 0x99);
        // CB 99 029C
        gbc.setState(0xb5f3, 0x4a87, 0x25f0, 0xa415, 0xfe88, 0x613a, 0x1, 0x0);
        gbc.writeMem(0xb5f3, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x4a87);
        EXPECT(gbc.pc(), 0xb5f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5f3), 0xcb);
        EXPECT(gbc.readMem(0xb5f4), 0x99);
        // CB 99 029D
        gbc.setState(0x8301, 0xf2f3, 0xd110, 0x2715, 0xb9ac, 0x5d62, 0x0, 0x1);
        gbc.writeMem(0x8301, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xf2f3);
        EXPECT(gbc.pc(), 0x8303);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8301), 0xcb);
        EXPECT(gbc.readMem(0x8302), 0x99);
        // CB 99 029E
        gbc.setState(0x7c33, 0x33f2, 0x6450, 0xbf9, 0xa5ee, 0x2a56, 0x0, 0x1);
        gbc.writeMem(0x7c33, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x33f2);
        EXPECT(gbc.pc(), 0x7c35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 029F
        gbc.setState(0x9dea, 0x42af, 0x22e0, 0xdbad, 0x14ed, 0xd4ac, 0x0, 0x1);
        gbc.writeMem(0x9dea, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x42af);
        EXPECT(gbc.pc(), 0x9dec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dea), 0xcb);
        EXPECT(gbc.readMem(0x9deb), 0x99);
        // CB 99 02A0
        gbc.setState(0xc829, 0x78d6, 0x2d90, 0x8aac, 0xa131, 0x1234, 0x1, 0x1);
        gbc.writeMem(0xc829, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x78d6);
        EXPECT(gbc.pc(), 0xc82b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc829), 0xcb);
        EXPECT(gbc.readMem(0xc82a), 0x99);
        // CB 99 02A1
        gbc.setState(0x7436, 0xf311, 0x7170, 0xe6d2, 0x36dc, 0x4888, 0x1, 0x0);
        gbc.writeMem(0x7436, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xf311);
        EXPECT(gbc.pc(), 0x7438);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 02A2
        gbc.setState(0xb144, 0xb933, 0x5390, 0xecfe, 0x904e, 0x2972, 0x0, 0x0);
        gbc.writeMem(0xb144, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xb933);
        EXPECT(gbc.pc(), 0xb146);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb144), 0xcb);
        EXPECT(gbc.readMem(0xb145), 0x99);
        // CB 99 02A3
        gbc.setState(0x7cfe, 0xe86d, 0xbef0, 0x1048, 0x95f0, 0xc807, 0x0, 0x0);
        gbc.writeMem(0x7cfe, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xe86d);
        EXPECT(gbc.pc(), 0x7d00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 02A4
        gbc.setState(0xd2e6, 0xe340, 0x5510, 0x9617, 0xf955, 0x5e72, 0x1, 0x0);
        gbc.writeMem(0xd2e6, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xe340);
        EXPECT(gbc.pc(), 0xd2e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2e6), 0xcb);
        EXPECT(gbc.readMem(0xd2e7), 0x99);
        // CB 99 02A5
        gbc.setState(0x8bf1, 0x141c, 0xed30, 0xd439, 0xd54f, 0x9f3f, 0x0, 0x1);
        gbc.writeMem(0x8bf1, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x141c);
        EXPECT(gbc.pc(), 0x8bf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bf1), 0xcb);
        EXPECT(gbc.readMem(0x8bf2), 0x99);
        // CB 99 02A6
        gbc.setState(0x5e79, 0x4a88, 0xe540, 0x314b, 0x3b9, 0x80cd, 0x1, 0x1);
        gbc.writeMem(0x5e79, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x4a88);
        EXPECT(gbc.pc(), 0x5e7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 02A7
        gbc.setState(0x6ca2, 0x9b14, 0x3020, 0x1680, 0x42a, 0x6a05, 0x0, 0x1);
        gbc.writeMem(0x6ca2, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x9b14);
        EXPECT(gbc.pc(), 0x6ca4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 02A9
        gbc.setState(0x98dc, 0x9971, 0xef40, 0xb26, 0x82e2, 0x2c52, 0x0, 0x0);
        gbc.writeMem(0x98dc, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x9971);
        EXPECT(gbc.pc(), 0x98de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98dc), 0xcb);
        EXPECT(gbc.readMem(0x98dd), 0x99);
        // CB 99 02AB
        gbc.setState(0x6ac1, 0x2051, 0x9730, 0xd605, 0x21fd, 0xca53, 0x0, 0x0);
        gbc.writeMem(0x6ac1, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x2051);
        EXPECT(gbc.pc(), 0x6ac3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 02AC
        gbc.setState(0x86b, 0x3e33, 0x5470, 0x322b, 0x2114, 0xe13a, 0x1, 0x1);
        gbc.writeMem(0x86b, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x3e33);
        EXPECT(gbc.pc(), 0x86d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 02AD
        gbc.setState(0xd88f, 0x4329, 0x1260, 0xf1d, 0xa9ee, 0x967a, 0x0, 0x0);
        gbc.writeMem(0xd88f, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x4329);
        EXPECT(gbc.pc(), 0xd891);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd88f), 0xcb);
        EXPECT(gbc.readMem(0xd890), 0x99);
        // CB 99 02AE
        gbc.setState(0x7caf, 0x2f8e, 0xe900, 0x899a, 0x485e, 0x7526, 0x1, 0x0);
        gbc.writeMem(0x7caf, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x2f8e);
        EXPECT(gbc.pc(), 0x7cb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 02AF
        gbc.setState(0x1cbf, 0x7d0e, 0xeac0, 0xdc7a, 0xabae, 0x5322, 0x0, 0x0);
        gbc.writeMem(0x1cbf, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x7d0e);
        EXPECT(gbc.pc(), 0x1cc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 02B0
        gbc.setState(0x5fd8, 0xcc85, 0xbce0, 0x9466, 0x5b12, 0xe7d1, 0x0, 0x0);
        gbc.writeMem(0x5fd8, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xcc85);
        EXPECT(gbc.pc(), 0x5fda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 02B1
        gbc.setState(0x1d0c, 0x243f, 0xc20, 0x6bde, 0xfa66, 0xf63d, 0x1, 0x1);
        gbc.writeMem(0x1d0c, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x243f);
        EXPECT(gbc.pc(), 0x1d0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 02B2
        gbc.setState(0xc8d8, 0xa54a, 0x2720, 0xb8eb, 0x9979, 0x42c3, 0x0, 0x1);
        gbc.writeMem(0xc8d8, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xa54a);
        EXPECT(gbc.pc(), 0xc8da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8d8), 0xcb);
        EXPECT(gbc.readMem(0xc8d9), 0x99);
        // CB 99 02B3
        gbc.setState(0x4ff9, 0x6453, 0x6250, 0x76be, 0x7496, 0x26d3, 0x0, 0x1);
        gbc.writeMem(0x4ff9, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x6453);
        EXPECT(gbc.pc(), 0x4ffb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 02B4
        gbc.setState(0x18a, 0x57f9, 0x9a60, 0xb8c5, 0xf286, 0x3bf2, 0x1, 0x0);
        gbc.writeMem(0x18a, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x57f9);
        EXPECT(gbc.pc(), 0x18c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 02B5
        gbc.setState(0xb345, 0x4bd9, 0xec40, 0x365d, 0xac4, 0x18a6, 0x1, 0x1);
        gbc.writeMem(0xb345, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x4bd9);
        EXPECT(gbc.pc(), 0xb347);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb345), 0xcb);
        EXPECT(gbc.readMem(0xb346), 0x99);
        // CB 99 02B6
        gbc.setState(0xb543, 0xc2c, 0x4d40, 0x7ae, 0xe4be, 0xf0f7, 0x0, 0x1);
        gbc.writeMem(0xb543, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xc2c);
        EXPECT(gbc.pc(), 0xb545);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb543), 0xcb);
        EXPECT(gbc.readMem(0xb544), 0x99);
        // CB 99 02B7
        gbc.setState(0xe050, 0xf0ca, 0xab60, 0x80e4, 0x4a94, 0xe451, 0x1, 0x1);
        gbc.writeMem(0xe050, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xf0ca);
        EXPECT(gbc.pc(), 0xe052);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe050), 0xcb);
        EXPECT(gbc.readMem(0xe051), 0x99);
        // CB 99 02B8
        gbc.setState(0x2b5d, 0x9cd5, 0x2940, 0xff33, 0x1ac4, 0x2ccc, 0x0, 0x1);
        gbc.writeMem(0x2b5d, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x9cd5);
        EXPECT(gbc.pc(), 0x2b5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 02B9
        gbc.setState(0xc352, 0x2a74, 0x7280, 0x9959, 0x6d9e, 0xfb24, 0x1, 0x0);
        gbc.writeMem(0xc352, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x2a74);
        EXPECT(gbc.pc(), 0xc354);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc352), 0xcb);
        EXPECT(gbc.readMem(0xc353), 0x99);
        // CB 99 02BA
        gbc.setState(0x8ae3, 0x8319, 0xe7d0, 0x9278, 0xf04c, 0x2553, 0x1, 0x1);
        gbc.writeMem(0x8ae3, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x8319);
        EXPECT(gbc.pc(), 0x8ae5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ae3), 0xcb);
        EXPECT(gbc.readMem(0x8ae4), 0x99);
        // CB 99 02BB
        gbc.setState(0x7f2, 0x24c2, 0x2400, 0x24be, 0xa798, 0x513f, 0x0, 0x0);
        gbc.writeMem(0x7f2, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x24c2);
        EXPECT(gbc.pc(), 0x7f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 02BC
        gbc.setState(0xa01e, 0x52ba, 0x1460, 0xa51, 0x1698, 0xfe2f, 0x0, 0x1);
        gbc.writeMem(0xa01e, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x52ba);
        EXPECT(gbc.pc(), 0xa020);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa01e), 0xcb);
        EXPECT(gbc.readMem(0xa01f), 0x99);
        // CB 99 02BD
        gbc.setState(0x1bc, 0xfb56, 0x78b0, 0x3de6, 0xae30, 0x8bf4, 0x0, 0x0);
        gbc.writeMem(0x1bc, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xfb56);
        EXPECT(gbc.pc(), 0x1be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 02BE
        gbc.setState(0xa005, 0xf9ab, 0x9aa0, 0x7bf, 0x6a92, 0x28d3, 0x0, 0x1);
        gbc.writeMem(0xa005, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xf9ab);
        EXPECT(gbc.pc(), 0xa007);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa005), 0xcb);
        EXPECT(gbc.readMem(0xa006), 0x99);
        // CB 99 02BF
        gbc.setState(0xd039, 0xb047, 0xb470, 0x6406, 0xfd3f, 0x5ed4, 0x0, 0x0);
        gbc.writeMem(0xd039, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xb047);
        EXPECT(gbc.pc(), 0xd03b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd039), 0xcb);
        EXPECT(gbc.readMem(0xd03a), 0x99);
        // CB 99 02C0
        gbc.setState(0xac30, 0xa725, 0x4600, 0xd0a5, 0x5901, 0x158b, 0x1, 0x1);
        gbc.writeMem(0xac30, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xa725);
        EXPECT(gbc.pc(), 0xac32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac30), 0xcb);
        EXPECT(gbc.readMem(0xac31), 0x99);
        // CB 99 02C1
        gbc.setState(0xb9b, 0xb462, 0x50c0, 0x39f2, 0x6c50, 0x2799, 0x0, 0x0);
        gbc.writeMem(0xb9b, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xb462);
        EXPECT(gbc.pc(), 0xb9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 02C2
        gbc.setState(0x8485, 0xbaf9, 0x22c0, 0x9745, 0x55f8, 0xd6fe, 0x0, 0x0);
        gbc.writeMem(0x8485, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xbaf9);
        EXPECT(gbc.pc(), 0x8487);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8485), 0xcb);
        EXPECT(gbc.readMem(0x8486), 0x99);
        // CB 99 02C3
        gbc.setState(0x109a, 0x1ee1, 0x91f0, 0xda48, 0x2a90, 0x659b, 0x0, 0x0);
        gbc.writeMem(0x109a, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x1ee1);
        EXPECT(gbc.pc(), 0x109c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 02C4
        gbc.setState(0x247a, 0x2807, 0xb870, 0x1e33, 0x93cb, 0x5357, 0x0, 0x0);
        gbc.writeMem(0x247a, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x2807);
        EXPECT(gbc.pc(), 0x247c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 02C5
        gbc.setState(0x7201, 0xc91b, 0x6630, 0xe9fc, 0x713f, 0xb0d1, 0x0, 0x1);
        gbc.writeMem(0x7201, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xc91b);
        EXPECT(gbc.pc(), 0x7203);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 02C6
        gbc.setState(0xdabc, 0x8e90, 0xb860, 0x3deb, 0x52ff, 0x4029, 0x1, 0x0);
        gbc.writeMem(0xdabc, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x8e90);
        EXPECT(gbc.pc(), 0xdabe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdabc), 0xcb);
        EXPECT(gbc.readMem(0xdabd), 0x99);
        // CB 99 02C7
        gbc.setState(0xa98a, 0x1791, 0x20, 0xc18f, 0x2d7c, 0x9859, 0x1, 0x0);
        gbc.writeMem(0xa98a, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x1791);
        EXPECT(gbc.pc(), 0xa98c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa98a), 0xcb);
        EXPECT(gbc.readMem(0xa98b), 0x99);
        // CB 99 02C8
        gbc.setState(0xc3fa, 0x5602, 0xdb80, 0x5489, 0x497f, 0xe663, 0x0, 0x0);
        gbc.writeMem(0xc3fa, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x5602);
        EXPECT(gbc.pc(), 0xc3fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3fa), 0xcb);
        EXPECT(gbc.readMem(0xc3fb), 0x99);
        // CB 99 02CA
        gbc.setState(0xdce9, 0xaac5, 0xbd60, 0xbc70, 0xbb87, 0x37a3, 0x1, 0x0);
        gbc.writeMem(0xdce9, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xaac5);
        EXPECT(gbc.pc(), 0xdceb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdce9), 0xcb);
        EXPECT(gbc.readMem(0xdcea), 0x99);
        // CB 99 02CC
        gbc.setState(0x7562, 0xc5f4, 0x4660, 0xb3b2, 0xd097, 0x9536, 0x1, 0x1);
        gbc.writeMem(0x7562, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xc5f4);
        EXPECT(gbc.pc(), 0x7564);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 02CD
        gbc.setState(0xd1d, 0x2aea, 0x6f0, 0xb753, 0x53f7, 0xe238, 0x0, 0x1);
        gbc.writeMem(0xd1d, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x2aea);
        EXPECT(gbc.pc(), 0xd1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 02CE
        gbc.setState(0x428a, 0xd2f8, 0xb6c0, 0xb337, 0x6287, 0x6c05, 0x0, 0x0);
        gbc.writeMem(0x428a, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xd2f8);
        EXPECT(gbc.pc(), 0x428c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 02CF
        gbc.setState(0xc4a, 0x8d53, 0xf200, 0xf9de, 0xd60f, 0x884d, 0x1, 0x0);
        gbc.writeMem(0xc4a, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x8d53);
        EXPECT(gbc.pc(), 0xc4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 02D0
        gbc.setState(0x6f8f, 0x8986, 0x5c50, 0x5429, 0x689d, 0x8cae, 0x1, 0x0);
        gbc.writeMem(0x6f8f, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x8986);
        EXPECT(gbc.pc(), 0x6f91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 02D1
        gbc.setState(0xaa91, 0x458d, 0xae30, 0xad77, 0x9573, 0x177c, 0x1, 0x1);
        gbc.writeMem(0xaa91, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x458d);
        EXPECT(gbc.pc(), 0xaa93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa91), 0xcb);
        EXPECT(gbc.readMem(0xaa92), 0x99);
        // CB 99 02D2
        gbc.setState(0x218, 0xbe04, 0xde90, 0x6cb, 0x2430, 0x8ae9, 0x1, 0x0);
        gbc.writeMem(0x218, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xbe04);
        EXPECT(gbc.pc(), 0x21a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 02D4
        gbc.setState(0x3995, 0x7d1c, 0x3da0, 0x9a82, 0x5460, 0x9115, 0x1, 0x0);
        gbc.writeMem(0x3995, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x7d1c);
        EXPECT(gbc.pc(), 0x3997);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 02D5
        gbc.setState(0xa5eb, 0xe71a, 0x2410, 0x8d45, 0x4711, 0xde0, 0x1, 0x1);
        gbc.writeMem(0xa5eb, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xe71a);
        EXPECT(gbc.pc(), 0xa5ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5eb), 0xcb);
        EXPECT(gbc.readMem(0xa5ec), 0x99);
        // CB 99 02D6
        gbc.setState(0x9359, 0x9886, 0x5060, 0x7fb8, 0xf76c, 0xc290, 0x0, 0x0);
        gbc.writeMem(0x9359, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x9886);
        EXPECT(gbc.pc(), 0x935b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9359), 0xcb);
        EXPECT(gbc.readMem(0x935a), 0x99);
        // CB 99 02D7
        gbc.setState(0x79d3, 0xe516, 0x7920, 0xb23f, 0xb8c9, 0x9b38, 0x0, 0x1);
        gbc.writeMem(0x79d3, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xe516);
        EXPECT(gbc.pc(), 0x79d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 02D8
        gbc.setState(0x4745, 0x2ca5, 0xd7e0, 0x5a21, 0x4af1, 0xe920, 0x0, 0x0);
        gbc.writeMem(0x4745, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x2ca5);
        EXPECT(gbc.pc(), 0x4747);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 02D9
        gbc.setState(0x2a4f, 0xbe1b, 0x3300, 0x33b7, 0x71b0, 0x68f5, 0x0, 0x1);
        gbc.writeMem(0x2a4f, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xbe1b);
        EXPECT(gbc.pc(), 0x2a51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 02DA
        gbc.setState(0xe493, 0x7418, 0x36f0, 0xbd97, 0xd8d8, 0xbdb5, 0x0, 0x1);
        gbc.writeMem(0xe493, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x7418);
        EXPECT(gbc.pc(), 0xe495);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe493), 0xcb);
        EXPECT(gbc.readMem(0xe494), 0x99);
        // CB 99 02DB
        gbc.setState(0x3977, 0x737a, 0xef30, 0x652e, 0x494b, 0xabfe, 0x0, 0x0);
        gbc.writeMem(0x3977, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x737a);
        EXPECT(gbc.pc(), 0x3979);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 02DC
        gbc.setState(0xb852, 0xe992, 0x2420, 0x5808, 0x880c, 0x9e23, 0x1, 0x1);
        gbc.writeMem(0xb852, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xe992);
        EXPECT(gbc.pc(), 0xb854);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb852), 0xcb);
        EXPECT(gbc.readMem(0xb853), 0x99);
        // CB 99 02DD
        gbc.setState(0x8301, 0x73cb, 0xf700, 0x76b9, 0x49df, 0x94bd, 0x1, 0x1);
        gbc.writeMem(0x8301, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x73cb);
        EXPECT(gbc.pc(), 0x8303);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8301), 0xcb);
        EXPECT(gbc.readMem(0x8302), 0x99);
        // CB 99 02DE
        gbc.setState(0xc8a6, 0x5439, 0x25f0, 0x8e8f, 0x752, 0xe6a8, 0x0, 0x1);
        gbc.writeMem(0xc8a6, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x5439);
        EXPECT(gbc.pc(), 0xc8a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8a6), 0xcb);
        EXPECT(gbc.readMem(0xc8a7), 0x99);
        // CB 99 02DF
        gbc.setState(0x84a2, 0x8db5, 0x1620, 0xdb3d, 0xc352, 0x9e39, 0x0, 0x0);
        gbc.writeMem(0x84a2, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x8db5);
        EXPECT(gbc.pc(), 0x84a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84a2), 0xcb);
        EXPECT(gbc.readMem(0x84a3), 0x99);
        // CB 99 02E0
        gbc.setState(0x91fc, 0x49e7, 0x9790, 0xfa7, 0x96b8, 0xa535, 0x1, 0x1);
        gbc.writeMem(0x91fc, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x49e7);
        EXPECT(gbc.pc(), 0x91fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91fc), 0xcb);
        EXPECT(gbc.readMem(0x91fd), 0x99);
        // CB 99 02E1
        gbc.setState(0x9413, 0xa1e5, 0xa440, 0xf2b8, 0x3f3c, 0xb088, 0x1, 0x1);
        gbc.writeMem(0x9413, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xa1e5);
        EXPECT(gbc.pc(), 0x9415);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9413), 0xcb);
        EXPECT(gbc.readMem(0x9414), 0x99);
        // CB 99 02E2
        gbc.setState(0x6be1, 0x2886, 0x4740, 0x1848, 0xd4f3, 0xb8d7, 0x1, 0x0);
        gbc.writeMem(0x6be1, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x2886);
        EXPECT(gbc.pc(), 0x6be3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 02E3
        gbc.setState(0xbc04, 0xb292, 0x8cc0, 0x1474, 0xbfe, 0xd1dd, 0x1, 0x1);
        gbc.writeMem(0xbc04, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xb292);
        EXPECT(gbc.pc(), 0xbc06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc04), 0xcb);
        EXPECT(gbc.readMem(0xbc05), 0x99);
        // CB 99 02E5
        gbc.setState(0x1c9f, 0xbe90, 0x9680, 0xd496, 0xfaa3, 0xb1e9, 0x0, 0x0);
        gbc.writeMem(0x1c9f, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xbe90);
        EXPECT(gbc.pc(), 0x1ca1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 02E6
        gbc.setState(0x21d9, 0x4af3, 0x4f70, 0x6000, 0xd9f9, 0xc62a, 0x1, 0x0);
        gbc.writeMem(0x21d9, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x4af3);
        EXPECT(gbc.pc(), 0x21db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 02E7
        gbc.setState(0x96d9, 0x440a, 0x2a20, 0xe4f3, 0x73df, 0x6019, 0x0, 0x0);
        gbc.writeMem(0x96d9, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x440a);
        EXPECT(gbc.pc(), 0x96db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96d9), 0xcb);
        EXPECT(gbc.readMem(0x96da), 0x99);
        // CB 99 02E8
        gbc.setState(0x37a8, 0xa4da, 0x1380, 0xec28, 0xbd58, 0xaa58, 0x0, 0x1);
        gbc.writeMem(0x37a8, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xa4da);
        EXPECT(gbc.pc(), 0x37aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 02E9
        gbc.setState(0x9442, 0xd9df, 0x7050, 0xd2eb, 0x243f, 0x4715, 0x1, 0x1);
        gbc.writeMem(0x9442, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xd9df);
        EXPECT(gbc.pc(), 0x9444);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9442), 0xcb);
        EXPECT(gbc.readMem(0x9443), 0x99);
        // CB 99 02EA
        gbc.setState(0xe10d, 0x38d0, 0x7810, 0xdad8, 0x8283, 0xdcdd, 0x0, 0x0);
        gbc.writeMem(0xe10d, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x38d0);
        EXPECT(gbc.pc(), 0xe10f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe10d), 0xcb);
        EXPECT(gbc.readMem(0xe10e), 0x99);
        // CB 99 02EB
        gbc.setState(0xa910, 0xabe0, 0x22e0, 0xeeab, 0x9ba1, 0xe25d, 0x0, 0x0);
        gbc.writeMem(0xa910, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xabe0);
        EXPECT(gbc.pc(), 0xa912);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa910), 0xcb);
        EXPECT(gbc.readMem(0xa911), 0x99);
        // CB 99 02ED
        gbc.setState(0xbf68, 0xc7d1, 0x6ea0, 0xb8c3, 0xb224, 0xe770, 0x1, 0x0);
        gbc.writeMem(0xbf68, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xc7d1);
        EXPECT(gbc.pc(), 0xbf6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf68), 0xcb);
        EXPECT(gbc.readMem(0xbf69), 0x99);
        // CB 99 02EE
        gbc.setState(0xbb3e, 0x4318, 0xde00, 0x6cc4, 0xab03, 0x13a8, 0x0, 0x0);
        gbc.writeMem(0xbb3e, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x4318);
        EXPECT(gbc.pc(), 0xbb40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb3e), 0xcb);
        EXPECT(gbc.readMem(0xbb3f), 0x99);
        // CB 99 02EF
        gbc.setState(0x32a4, 0x899f, 0x2b70, 0xf294, 0xcf37, 0x8aae, 0x0, 0x0);
        gbc.writeMem(0x32a4, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x899f);
        EXPECT(gbc.pc(), 0x32a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 02F0
        gbc.setState(0x538f, 0xc39d, 0xaca0, 0x744e, 0xd6d3, 0x8de3, 0x0, 0x0);
        gbc.writeMem(0x538f, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xc39d);
        EXPECT(gbc.pc(), 0x5391);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 02F1
        gbc.setState(0x91ea, 0x4715, 0xcc60, 0x5dcd, 0x6cc8, 0x4d50, 0x0, 0x1);
        gbc.writeMem(0x91ea, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x4715);
        EXPECT(gbc.pc(), 0x91ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91ea), 0xcb);
        EXPECT(gbc.readMem(0x91eb), 0x99);
        // CB 99 02F2
        gbc.setState(0xda8d, 0x5387, 0x85e0, 0x3dd4, 0x1696, 0x3b37, 0x1, 0x1);
        gbc.writeMem(0xda8d, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x5387);
        EXPECT(gbc.pc(), 0xda8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda8d), 0xcb);
        EXPECT(gbc.readMem(0xda8e), 0x99);
        // CB 99 02F3
        gbc.setState(0x49c0, 0x2e19, 0x78f0, 0xb5aa, 0x72b, 0xde0d, 0x1, 0x1);
        gbc.writeMem(0x49c0, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x2e19);
        EXPECT(gbc.pc(), 0x49c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 02F4
        gbc.setState(0x4f08, 0xed55, 0xb80, 0x8da1, 0x8e78, 0x6b34, 0x0, 0x1);
        gbc.writeMem(0x4f08, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xed55);
        EXPECT(gbc.pc(), 0x4f0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 02F5
        gbc.setState(0x797b, 0x78c8, 0xdab0, 0x9cdc, 0xfeb9, 0xee36, 0x1, 0x0);
        gbc.writeMem(0x797b, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x78c8);
        EXPECT(gbc.pc(), 0x797d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 02F6
        gbc.setState(0x62a7, 0xb933, 0x38d0, 0xc862, 0xeea3, 0xe451, 0x1, 0x1);
        gbc.writeMem(0x62a7, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xb933);
        EXPECT(gbc.pc(), 0x62a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 02F7
        gbc.setState(0x9bba, 0xeef4, 0xb200, 0xa4e2, 0xfdd8, 0x82d4, 0x0, 0x1);
        gbc.writeMem(0x9bba, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xeef4);
        EXPECT(gbc.pc(), 0x9bbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bba), 0xcb);
        EXPECT(gbc.readMem(0x9bbb), 0x99);
        // CB 99 02F8
        gbc.setState(0x559a, 0xef45, 0x1a0, 0x8299, 0x664c, 0xd500, 0x0, 0x0);
        gbc.writeMem(0x559a, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xef45);
        EXPECT(gbc.pc(), 0x559c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 02F9
        gbc.setState(0xb3c4, 0x6fbb, 0xa3d0, 0xdb98, 0x1b32, 0xb781, 0x1, 0x1);
        gbc.writeMem(0xb3c4, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x6fbb);
        EXPECT(gbc.pc(), 0xb3c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3c4), 0xcb);
        EXPECT(gbc.readMem(0xb3c5), 0x99);
        // CB 99 02FA
        gbc.setState(0xbcd1, 0x67c, 0x62c0, 0x5508, 0x9ab1, 0x984f, 0x1, 0x1);
        gbc.writeMem(0xbcd1, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x67c);
        EXPECT(gbc.pc(), 0xbcd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcd1), 0xcb);
        EXPECT(gbc.readMem(0xbcd2), 0x99);
        // CB 99 02FB
        gbc.setState(0xcc36, 0xe835, 0xa160, 0xc4ee, 0x328, 0x6000, 0x1, 0x1);
        gbc.writeMem(0xcc36, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xe835);
        EXPECT(gbc.pc(), 0xcc38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc36), 0xcb);
        EXPECT(gbc.readMem(0xcc37), 0x99);
        // CB 99 02FC
        gbc.setState(0xe986, 0x5d07, 0x1740, 0xcedc, 0x572, 0x97db, 0x0, 0x1);
        gbc.writeMem(0xe986, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x5d07);
        EXPECT(gbc.pc(), 0xe988);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe986), 0xcb);
        EXPECT(gbc.readMem(0xe987), 0x99);
        // CB 99 02FD
        gbc.setState(0x958, 0x4d05, 0x4860, 0xfbd, 0xbe2b, 0x198e, 0x1, 0x0);
        gbc.writeMem(0x958, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x4d05);
        EXPECT(gbc.pc(), 0x95a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 02FE
        gbc.setState(0x8041, 0xb43, 0x9d90, 0xd597, 0x7fa9, 0xa2ef, 0x1, 0x0);
        gbc.writeMem(0x8041, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xb43);
        EXPECT(gbc.pc(), 0x8043);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8041), 0xcb);
        EXPECT(gbc.readMem(0x8042), 0x99);
        // CB 99 02FF
        gbc.setState(0x8320, 0x8ae6, 0x4c60, 0xd6cd, 0xd61, 0xb44d, 0x0, 0x0);
        gbc.writeMem(0x8320, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x8ae6);
        EXPECT(gbc.pc(), 0x8322);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8320), 0xcb);
        EXPECT(gbc.readMem(0x8321), 0x99);
        // CB 99 0300
        gbc.setState(0xeaaf, 0x9fbe, 0x9670, 0x3b7, 0xc9c0, 0xd994, 0x0, 0x1);
        gbc.writeMem(0xeaaf, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x9fbe);
        EXPECT(gbc.pc(), 0xeab1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeaaf), 0xcb);
        EXPECT(gbc.readMem(0xeab0), 0x99);
        // CB 99 0301
        gbc.setState(0x60ab, 0x2a6a, 0x2310, 0xd1d7, 0xc905, 0x8c2a, 0x0, 0x0);
        gbc.writeMem(0x60ab, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x2a6a);
        EXPECT(gbc.pc(), 0x60ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0302
        gbc.setState(0xdc91, 0x875d, 0xf280, 0x8826, 0xae44, 0x8fca, 0x1, 0x1);
        gbc.writeMem(0xdc91, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x875d);
        EXPECT(gbc.pc(), 0xdc93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc91), 0xcb);
        EXPECT(gbc.readMem(0xdc92), 0x99);
        // CB 99 0303
        gbc.setState(0xbe11, 0x1dd4, 0x7210, 0x8bc8, 0xc872, 0xd313, 0x0, 0x1);
        gbc.writeMem(0xbe11, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x1dd4);
        EXPECT(gbc.pc(), 0xbe13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe11), 0xcb);
        EXPECT(gbc.readMem(0xbe12), 0x99);
        // CB 99 0304
        gbc.setState(0x9764, 0xbe4d, 0x1aa0, 0xca78, 0xe41b, 0x87b1, 0x0, 0x0);
        gbc.writeMem(0x9764, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xbe4d);
        EXPECT(gbc.pc(), 0x9766);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9764), 0xcb);
        EXPECT(gbc.readMem(0x9765), 0x99);
        // CB 99 0305
        gbc.setState(0x4def, 0x5156, 0xb030, 0x2c7a, 0xc596, 0xda9a, 0x0, 0x0);
        gbc.writeMem(0x4def, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x5156);
        EXPECT(gbc.pc(), 0x4df1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0306
        gbc.setState(0x7a51, 0x3dac, 0x4840, 0x132, 0x4aab, 0x6d65, 0x1, 0x1);
        gbc.writeMem(0x7a51, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x3dac);
        EXPECT(gbc.pc(), 0x7a53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0307
        gbc.setState(0xb09a, 0x1db7, 0x2580, 0x8a77, 0x8943, 0x882, 0x1, 0x0);
        gbc.writeMem(0xb09a, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x1db7);
        EXPECT(gbc.pc(), 0xb09c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb09a), 0xcb);
        EXPECT(gbc.readMem(0xb09b), 0x99);
        // CB 99 0308
        gbc.setState(0x29ef, 0x3679, 0xf7b0, 0xbc77, 0x22b3, 0xf753, 0x0, 0x1);
        gbc.writeMem(0x29ef, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x3679);
        EXPECT(gbc.pc(), 0x29f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0309
        gbc.setState(0x42dd, 0xa01, 0x36c0, 0x113d, 0x37c0, 0xc19b, 0x1, 0x0);
        gbc.writeMem(0x42dd, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xa01);
        EXPECT(gbc.pc(), 0x42df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 030A
        gbc.setState(0x4def, 0x8683, 0xcf10, 0x4a75, 0xafcb, 0xcf81, 0x0, 0x0);
        gbc.writeMem(0x4def, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x8683);
        EXPECT(gbc.pc(), 0x4df1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 030B
        gbc.setState(0x2d64, 0xab04, 0xfa30, 0x1a2f, 0x3d26, 0x702f, 0x0, 0x0);
        gbc.writeMem(0x2d64, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xab04);
        EXPECT(gbc.pc(), 0x2d66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 030C
        gbc.setState(0x4163, 0xe7f5, 0x5640, 0xc28b, 0xbee, 0x34d2, 0x1, 0x1);
        gbc.writeMem(0x4163, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xe7f5);
        EXPECT(gbc.pc(), 0x4165);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 030D
        gbc.setState(0x284f, 0x4823, 0xb290, 0x5b3, 0xe8c0, 0xfc50, 0x1, 0x1);
        gbc.writeMem(0x284f, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x4823);
        EXPECT(gbc.pc(), 0x2851);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 030E
        gbc.setState(0x823a, 0xd025, 0x5e80, 0x2896, 0x33d8, 0x7655, 0x0, 0x1);
        gbc.writeMem(0x823a, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xd025);
        EXPECT(gbc.pc(), 0x823c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x823a), 0xcb);
        EXPECT(gbc.readMem(0x823b), 0x99);
        // CB 99 030F
        gbc.setState(0x5f91, 0x63d7, 0x8c10, 0xacac, 0xd57a, 0x32a6, 0x0, 0x0);
        gbc.writeMem(0x5f91, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x63d7);
        EXPECT(gbc.pc(), 0x5f93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0310
        gbc.setState(0x45b3, 0x240b, 0x5990, 0x4de3, 0xdc15, 0xc4d8, 0x1, 0x0);
        gbc.writeMem(0x45b3, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x240b);
        EXPECT(gbc.pc(), 0x45b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0311
        gbc.setState(0xab20, 0xec1e, 0x7d0, 0x3e2, 0xdf41, 0x5247, 0x1, 0x1);
        gbc.writeMem(0xab20, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xec1e);
        EXPECT(gbc.pc(), 0xab22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab20), 0xcb);
        EXPECT(gbc.readMem(0xab21), 0x99);
        // CB 99 0312
        gbc.setState(0x5f23, 0xe56c, 0x20a0, 0x892e, 0x34d2, 0x667f, 0x1, 0x1);
        gbc.writeMem(0x5f23, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xe56c);
        EXPECT(gbc.pc(), 0x5f25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0313
        gbc.setState(0x9a6, 0xb39, 0xc3d0, 0xc185, 0xf39f, 0x3c45, 0x1, 0x1);
        gbc.writeMem(0x9a6, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xb39);
        EXPECT(gbc.pc(), 0x9a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0314
        gbc.setState(0xbc3e, 0xaaa3, 0xc410, 0xc9b1, 0x307, 0x5a97, 0x1, 0x0);
        gbc.writeMem(0xbc3e, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xaaa3);
        EXPECT(gbc.pc(), 0xbc40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc3e), 0xcb);
        EXPECT(gbc.readMem(0xbc3f), 0x99);
        // CB 99 0315
        gbc.setState(0x4c73, 0x1073, 0x7810, 0x22c, 0x49f7, 0x9e4c, 0x0, 0x0);
        gbc.writeMem(0x4c73, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x1073);
        EXPECT(gbc.pc(), 0x4c75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0316
        gbc.setState(0x290c, 0x68bf, 0x7c0, 0x3c8b, 0x99df, 0x872d, 0x0, 0x0);
        gbc.writeMem(0x290c, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x68bf);
        EXPECT(gbc.pc(), 0x290e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0317
        gbc.setState(0x70de, 0x37a, 0x6600, 0xed4d, 0xf3ba, 0x5907, 0x1, 0x0);
        gbc.writeMem(0x70de, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x37a);
        EXPECT(gbc.pc(), 0x70e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0318
        gbc.setState(0xb6b6, 0xff8d, 0x9c80, 0x34c6, 0x84b8, 0xdab0, 0x1, 0x0);
        gbc.writeMem(0xb6b6, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xff8d);
        EXPECT(gbc.pc(), 0xb6b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6b6), 0xcb);
        EXPECT(gbc.readMem(0xb6b7), 0x99);
        // CB 99 0319
        gbc.setState(0xdd1b, 0xfe3, 0x8840, 0x71e0, 0xfcc9, 0x2e19, 0x0, 0x0);
        gbc.writeMem(0xdd1b, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xfe3);
        EXPECT(gbc.pc(), 0xdd1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd1b), 0xcb);
        EXPECT(gbc.readMem(0xdd1c), 0x99);
        // CB 99 031A
        gbc.setState(0x518, 0x6c14, 0x11f0, 0x6278, 0xa680, 0xe215, 0x1, 0x1);
        gbc.writeMem(0x518, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x6c14);
        EXPECT(gbc.pc(), 0x51a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 031B
        gbc.setState(0x27a6, 0xdef1, 0xd340, 0xb820, 0x9f52, 0x1631, 0x0, 0x0);
        gbc.writeMem(0x27a6, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xdef1);
        EXPECT(gbc.pc(), 0x27a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 031C
        gbc.setState(0x882b, 0xd9f3, 0x2150, 0xbcff, 0xe358, 0x8fdb, 0x1, 0x1);
        gbc.writeMem(0x882b, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xd9f3);
        EXPECT(gbc.pc(), 0x882d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x882b), 0xcb);
        EXPECT(gbc.readMem(0x882c), 0x99);
        // CB 99 031D
        gbc.setState(0xddb1, 0x8ff2, 0x65a0, 0xcb4b, 0xe4e8, 0xbf9, 0x1, 0x1);
        gbc.writeMem(0xddb1, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x8ff2);
        EXPECT(gbc.pc(), 0xddb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddb1), 0xcb);
        EXPECT(gbc.readMem(0xddb2), 0x99);
        // CB 99 031E
        gbc.setState(0x8c8a, 0x770e, 0x5510, 0xb0a9, 0xb8f2, 0xa9d6, 0x1, 0x0);
        gbc.writeMem(0x8c8a, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x770e);
        EXPECT(gbc.pc(), 0x8c8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c8a), 0xcb);
        EXPECT(gbc.readMem(0x8c8b), 0x99);
        // CB 99 031F
        gbc.setState(0xea44, 0x4ca2, 0x22c0, 0x496a, 0x9524, 0xa081, 0x0, 0x0);
        gbc.writeMem(0xea44, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x4ca2);
        EXPECT(gbc.pc(), 0xea46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea44), 0xcb);
        EXPECT(gbc.readMem(0xea45), 0x99);
        // CB 99 0320
        gbc.setState(0xe95c, 0xf054, 0x3cd0, 0xe06a, 0x7b89, 0xd110, 0x0, 0x0);
        gbc.writeMem(0xe95c, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xf054);
        EXPECT(gbc.pc(), 0xe95e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe95c), 0xcb);
        EXPECT(gbc.readMem(0xe95d), 0x99);
        // CB 99 0321
        gbc.setState(0x5a08, 0xa0d2, 0x9980, 0xba79, 0x592e, 0xb7, 0x0, 0x0);
        gbc.writeMem(0x5a08, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xa0d2);
        EXPECT(gbc.pc(), 0x5a0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0322
        gbc.setState(0xecc3, 0x90a0, 0x1d20, 0x70b7, 0x7cf6, 0xd30d, 0x0, 0x1);
        gbc.writeMem(0xecc3, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x90a0);
        EXPECT(gbc.pc(), 0xecc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecc3), 0xcb);
        EXPECT(gbc.readMem(0xecc4), 0x99);
        // CB 99 0323
        gbc.setState(0x404c, 0x32b6, 0x4e60, 0x891f, 0xbe08, 0x155e, 0x1, 0x1);
        gbc.writeMem(0x404c, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x32b6);
        EXPECT(gbc.pc(), 0x404e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0325
        gbc.setState(0x1f17, 0x96ed, 0x2fc0, 0xa93c, 0x330f, 0x1a93, 0x1, 0x0);
        gbc.writeMem(0x1f17, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x96ed);
        EXPECT(gbc.pc(), 0x1f19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0326
        gbc.setState(0x3114, 0x71f5, 0x3400, 0xb48c, 0xd658, 0xb20b, 0x1, 0x0);
        gbc.writeMem(0x3114, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x71f5);
        EXPECT(gbc.pc(), 0x3116);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0327
        gbc.setState(0x4fd6, 0xa312, 0x42a0, 0x8a46, 0x6301, 0x1ccc, 0x1, 0x1);
        gbc.writeMem(0x4fd6, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xa312);
        EXPECT(gbc.pc(), 0x4fd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0328
        gbc.setState(0x3525, 0xf6ec, 0xc890, 0x41e8, 0x2fb9, 0x8c06, 0x1, 0x1);
        gbc.writeMem(0x3525, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xf6ec);
        EXPECT(gbc.pc(), 0x3527);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0329
        gbc.setState(0x9c7c, 0xa6a, 0xc780, 0xdf72, 0x55f1, 0x12cd, 0x0, 0x0);
        gbc.writeMem(0x9c7c, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xa6a);
        EXPECT(gbc.pc(), 0x9c7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c7c), 0xcb);
        EXPECT(gbc.readMem(0x9c7d), 0x99);
        // CB 99 032A
        gbc.setState(0x2ea4, 0xdf9d, 0xc230, 0xe53f, 0x69d0, 0x1cd1, 0x1, 0x0);
        gbc.writeMem(0x2ea4, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xdf9d);
        EXPECT(gbc.pc(), 0x2ea6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 032B
        gbc.setState(0x9d3e, 0x80e1, 0x1b60, 0xd152, 0x2335, 0x2dc4, 0x1, 0x1);
        gbc.writeMem(0x9d3e, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x80e1);
        EXPECT(gbc.pc(), 0x9d40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d3e), 0xcb);
        EXPECT(gbc.readMem(0x9d3f), 0x99);
        // CB 99 032C
        gbc.setState(0x171a, 0xe400, 0xf900, 0x3ecf, 0x5f19, 0x61af, 0x1, 0x0);
        gbc.writeMem(0x171a, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xe400);
        EXPECT(gbc.pc(), 0x171c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 032D
        gbc.setState(0x65fb, 0x5dd2, 0xe1e0, 0x44e6, 0xcb63, 0x9cf6, 0x1, 0x0);
        gbc.writeMem(0x65fb, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x5dd2);
        EXPECT(gbc.pc(), 0x65fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 032E
        gbc.setState(0x5a22, 0xb878, 0x1200, 0x8e6c, 0x1bd2, 0xc929, 0x0, 0x0);
        gbc.writeMem(0x5a22, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xb878);
        EXPECT(gbc.pc(), 0x5a24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0331
        gbc.setState(0xcd07, 0x5c0, 0xd760, 0x990e, 0x908c, 0xb349, 0x0, 0x1);
        gbc.writeMem(0xcd07, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x5c0);
        EXPECT(gbc.pc(), 0xcd09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd07), 0xcb);
        EXPECT(gbc.readMem(0xcd08), 0x99);
        // CB 99 0332
        gbc.setState(0xb72a, 0xaa49, 0xc750, 0xb14d, 0x2901, 0xde10, 0x1, 0x1);
        gbc.writeMem(0xb72a, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xaa49);
        EXPECT(gbc.pc(), 0xb72c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb72a), 0xcb);
        EXPECT(gbc.readMem(0xb72b), 0x99);
        // CB 99 0333
        gbc.setState(0x4cc0, 0x735, 0xb220, 0x14b0, 0x2d0, 0xae32, 0x0, 0x1);
        gbc.writeMem(0x4cc0, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x735);
        EXPECT(gbc.pc(), 0x4cc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0334
        gbc.setState(0xb61a, 0x40ab, 0x240, 0x1f97, 0x4f53, 0xe7be, 0x0, 0x0);
        gbc.writeMem(0xb61a, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x40ab);
        EXPECT(gbc.pc(), 0xb61c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb61a), 0xcb);
        EXPECT(gbc.readMem(0xb61b), 0x99);
        // CB 99 0335
        gbc.setState(0x440d, 0xadec, 0xa100, 0x9d29, 0x6044, 0xc931, 0x1, 0x0);
        gbc.writeMem(0x440d, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xadec);
        EXPECT(gbc.pc(), 0x440f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0336
        gbc.setState(0xaa0b, 0xd07c, 0xd1a0, 0x308a, 0x9851, 0x47f, 0x1, 0x1);
        gbc.writeMem(0xaa0b, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xd07c);
        EXPECT(gbc.pc(), 0xaa0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa0b), 0xcb);
        EXPECT(gbc.readMem(0xaa0c), 0x99);
        // CB 99 0337
        gbc.setState(0x92c2, 0x77e2, 0xa840, 0x90f9, 0xf1dd, 0xad49, 0x0, 0x1);
        gbc.writeMem(0x92c2, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x77e2);
        EXPECT(gbc.pc(), 0x92c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92c2), 0xcb);
        EXPECT(gbc.readMem(0x92c3), 0x99);
        // CB 99 0338
        gbc.setState(0xdfd9, 0x59a5, 0xddb0, 0xc0b6, 0xfc6b, 0xbe5f, 0x1, 0x1);
        gbc.writeMem(0xdfd9, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x59a5);
        EXPECT(gbc.pc(), 0xdfdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfd9), 0xcb);
        EXPECT(gbc.readMem(0xdfda), 0x99);
        // CB 99 0339
        gbc.setState(0xd3d3, 0x8e29, 0x6a60, 0x15cf, 0xf341, 0x3be3, 0x0, 0x1);
        gbc.writeMem(0xd3d3, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x8e29);
        EXPECT(gbc.pc(), 0xd3d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3d3), 0xcb);
        EXPECT(gbc.readMem(0xd3d4), 0x99);
        // CB 99 033A
        gbc.setState(0x9764, 0xcf26, 0xab40, 0x9ad6, 0xbe97, 0x45aa, 0x0, 0x1);
        gbc.writeMem(0x9764, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xcf26);
        EXPECT(gbc.pc(), 0x9766);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9764), 0xcb);
        EXPECT(gbc.readMem(0x9765), 0x99);
        // CB 99 033B
        gbc.setState(0x4bdb, 0xa632, 0xd5b0, 0x346, 0x6139, 0x3a32, 0x0, 0x0);
        gbc.writeMem(0x4bdb, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xa632);
        EXPECT(gbc.pc(), 0x4bdd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 033C
        gbc.setState(0x64f4, 0xa0ed, 0x95e0, 0x9fe0, 0xa7f3, 0x8fc5, 0x1, 0x0);
        gbc.writeMem(0x64f4, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xa0ed);
        EXPECT(gbc.pc(), 0x64f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 033D
        gbc.setState(0x5587, 0xbc8c, 0x1d80, 0xa578, 0x6086, 0xac3c, 0x0, 0x1);
        gbc.writeMem(0x5587, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xbc8c);
        EXPECT(gbc.pc(), 0x5589);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 033E
        gbc.setState(0x2147, 0xe1a6, 0x4440, 0x6182, 0x24a, 0x4bc6, 0x0, 0x0);
        gbc.writeMem(0x2147, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xe1a6);
        EXPECT(gbc.pc(), 0x2149);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 033F
        gbc.setState(0xd620, 0x88c5, 0xb9f0, 0xa663, 0xb716, 0x7283, 0x1, 0x1);
        gbc.writeMem(0xd620, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x88c5);
        EXPECT(gbc.pc(), 0xd622);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd620), 0xcb);
        EXPECT(gbc.readMem(0xd621), 0x99);
        // CB 99 0340
        gbc.setState(0x5bf8, 0x590d, 0xd740, 0xa0dd, 0x3ff9, 0x9919, 0x0, 0x0);
        gbc.writeMem(0x5bf8, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x590d);
        EXPECT(gbc.pc(), 0x5bfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0341
        gbc.setState(0x433c, 0xb66b, 0x1580, 0xd0b3, 0x2d57, 0xa278, 0x1, 0x1);
        gbc.writeMem(0x433c, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xb66b);
        EXPECT(gbc.pc(), 0x433e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0342
        gbc.setState(0x9f3d, 0x910e, 0x3510, 0x4189, 0x3b21, 0xfd6d, 0x0, 0x0);
        gbc.writeMem(0x9f3d, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x910e);
        EXPECT(gbc.pc(), 0x9f3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f3d), 0xcb);
        EXPECT(gbc.readMem(0x9f3e), 0x99);
        // CB 99 0343
        gbc.setState(0x8853, 0xd8b, 0x5890, 0x78d4, 0x4529, 0x16ac, 0x0, 0x1);
        gbc.writeMem(0x8853, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xd8b);
        EXPECT(gbc.pc(), 0x8855);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8853), 0xcb);
        EXPECT(gbc.readMem(0x8854), 0x99);
        // CB 99 0344
        gbc.setState(0x139e, 0xff5, 0x8b0, 0xdd5c, 0xe7dc, 0x8d9b, 0x1, 0x1);
        gbc.writeMem(0x139e, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xff5);
        EXPECT(gbc.pc(), 0x13a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0345
        gbc.setState(0xc99a, 0x2b9, 0x7600, 0x5733, 0xaa81, 0xda0b, 0x0, 0x0);
        gbc.writeMem(0xc99a, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x2b9);
        EXPECT(gbc.pc(), 0xc99c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc99a), 0xcb);
        EXPECT(gbc.readMem(0xc99b), 0x99);
        // CB 99 0346
        gbc.setState(0x242b, 0x41cd, 0x56e0, 0x1d5, 0x28bd, 0xa551, 0x1, 0x0);
        gbc.writeMem(0x242b, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x41cd);
        EXPECT(gbc.pc(), 0x242d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0347
        gbc.setState(0xc13e, 0x7363, 0xc910, 0x3918, 0x119b, 0x6384, 0x0, 0x0);
        gbc.writeMem(0xc13e, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x7363);
        EXPECT(gbc.pc(), 0xc140);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc13e), 0xcb);
        EXPECT(gbc.readMem(0xc13f), 0x99);
        // CB 99 0348
        gbc.setState(0x91db, 0x73de, 0x4af0, 0xdfc4, 0x75da, 0x4f0f, 0x1, 0x0);
        gbc.writeMem(0x91db, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x73de);
        EXPECT(gbc.pc(), 0x91dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91db), 0xcb);
        EXPECT(gbc.readMem(0x91dc), 0x99);
        // CB 99 0349
        gbc.setState(0x95a8, 0xb821, 0xef40, 0x4233, 0x1ed5, 0x501e, 0x1, 0x1);
        gbc.writeMem(0x95a8, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xb821);
        EXPECT(gbc.pc(), 0x95aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95a8), 0xcb);
        EXPECT(gbc.readMem(0x95a9), 0x99);
        // CB 99 034A
        gbc.setState(0x23ea, 0x5e9b, 0xb490, 0x3c51, 0x757e, 0xc0e5, 0x1, 0x0);
        gbc.writeMem(0x23ea, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x5e9b);
        EXPECT(gbc.pc(), 0x23ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 034B
        gbc.setState(0x7eab, 0xa6c6, 0xf130, 0x4145, 0xeb84, 0xd607, 0x1, 0x1);
        gbc.writeMem(0x7eab, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xa6c6);
        EXPECT(gbc.pc(), 0x7ead);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 034C
        gbc.setState(0x71e, 0xd3d2, 0x1d50, 0x50ed, 0x35f7, 0x3a49, 0x1, 0x1);
        gbc.writeMem(0x71e, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xd3d2);
        EXPECT(gbc.pc(), 0x720);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 034D
        gbc.setState(0x6bbc, 0x8f3f, 0x35f0, 0xf744, 0x49fc, 0xe8b8, 0x1, 0x0);
        gbc.writeMem(0x6bbc, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x8f3f);
        EXPECT(gbc.pc(), 0x6bbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 034E
        gbc.setState(0xb93, 0xf342, 0x9fa0, 0xa36a, 0x27e1, 0xacbd, 0x1, 0x1);
        gbc.writeMem(0xb93, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xf342);
        EXPECT(gbc.pc(), 0xb95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 034F
        gbc.setState(0xbfcf, 0x326a, 0xc0d0, 0xb1c1, 0xedc6, 0x1228, 0x1, 0x0);
        gbc.writeMem(0xbfcf, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x326a);
        EXPECT(gbc.pc(), 0xbfd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfcf), 0xcb);
        EXPECT(gbc.readMem(0xbfd0), 0x99);
        // CB 99 0350
        gbc.setState(0x4276, 0xc1ce, 0x9b70, 0xe4f3, 0xe29f, 0x6b20, 0x1, 0x1);
        gbc.writeMem(0x4276, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xc1ce);
        EXPECT(gbc.pc(), 0x4278);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0351
        gbc.setState(0x6d97, 0x80ed, 0xbcf0, 0x6f4a, 0x87b1, 0x79bf, 0x0, 0x0);
        gbc.writeMem(0x6d97, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x80ed);
        EXPECT(gbc.pc(), 0x6d99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0352
        gbc.setState(0x8016, 0x2780, 0xf330, 0xbd88, 0x58da, 0x6b71, 0x0, 0x0);
        gbc.writeMem(0x8016, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x2780);
        EXPECT(gbc.pc(), 0x8018);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8016), 0xcb);
        EXPECT(gbc.readMem(0x8017), 0x99);
        // CB 99 0353
        gbc.setState(0x6716, 0x7d24, 0xd820, 0xd368, 0x296b, 0x9238, 0x1, 0x1);
        gbc.writeMem(0x6716, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x7d24);
        EXPECT(gbc.pc(), 0x6718);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0354
        gbc.setState(0x7f3a, 0xae18, 0xf7d0, 0x6adb, 0x2f4e, 0xa74c, 0x0, 0x1);
        gbc.writeMem(0x7f3a, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xae18);
        EXPECT(gbc.pc(), 0x7f3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0355
        gbc.setState(0xe6ba, 0xcd3b, 0xde50, 0x9f54, 0x43ac, 0x41b0, 0x0, 0x1);
        gbc.writeMem(0xe6ba, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xcd3b);
        EXPECT(gbc.pc(), 0xe6bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6ba), 0xcb);
        EXPECT(gbc.readMem(0xe6bb), 0x99);
        // CB 99 0356
        gbc.setState(0xbde5, 0x4a1b, 0xa8f0, 0x4040, 0x66c0, 0x6fe6, 0x1, 0x1);
        gbc.writeMem(0xbde5, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x4a1b);
        EXPECT(gbc.pc(), 0xbde7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbde5), 0xcb);
        EXPECT(gbc.readMem(0xbde6), 0x99);
        // CB 99 0357
        gbc.setState(0x8657, 0x9d8d, 0xfcd0, 0xff, 0xc24b, 0x67bb, 0x0, 0x0);
        gbc.writeMem(0x8657, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x9d8d);
        EXPECT(gbc.pc(), 0x8659);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8657), 0xcb);
        EXPECT(gbc.readMem(0x8658), 0x99);
        // CB 99 0358
        gbc.setState(0x3fe7, 0x355c, 0x7760, 0x7ece, 0x71a3, 0xf03c, 0x0, 0x1);
        gbc.writeMem(0x3fe7, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x355c);
        EXPECT(gbc.pc(), 0x3fe9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0359
        gbc.setState(0x48f3, 0x34af, 0x20c0, 0x764b, 0xeb38, 0x3c53, 0x1, 0x0);
        gbc.writeMem(0x48f3, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x34af);
        EXPECT(gbc.pc(), 0x48f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 035A
        gbc.setState(0xa972, 0x46e5, 0xb6b0, 0xc007, 0x59a3, 0x4c87, 0x0, 0x1);
        gbc.writeMem(0xa972, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x46e5);
        EXPECT(gbc.pc(), 0xa974);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa972), 0xcb);
        EXPECT(gbc.readMem(0xa973), 0x99);
        // CB 99 035B
        gbc.setState(0x3417, 0x2b7e, 0xcf30, 0x5f43, 0x3188, 0xd964, 0x1, 0x1);
        gbc.writeMem(0x3417, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x2b7e);
        EXPECT(gbc.pc(), 0x3419);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 035C
        gbc.setState(0xd8d0, 0x8d0d, 0x61d0, 0x2e03, 0xe062, 0x5bd, 0x0, 0x0);
        gbc.writeMem(0xd8d0, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x8d0d);
        EXPECT(gbc.pc(), 0xd8d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8d0), 0xcb);
        EXPECT(gbc.readMem(0xd8d1), 0x99);
        // CB 99 035D
        gbc.setState(0xda16, 0x7217, 0x7590, 0x2ac2, 0x2c58, 0xf405, 0x0, 0x0);
        gbc.writeMem(0xda16, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x7217);
        EXPECT(gbc.pc(), 0xda18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda16), 0xcb);
        EXPECT(gbc.readMem(0xda17), 0x99);
        // CB 99 035E
        gbc.setState(0x3a28, 0x1aa, 0x3f20, 0x4200, 0xec14, 0xfb8c, 0x0, 0x1);
        gbc.writeMem(0x3a28, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x1aa);
        EXPECT(gbc.pc(), 0x3a2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 035F
        gbc.setState(0x1ea7, 0x7046, 0x15d0, 0x3b05, 0x1abd, 0x1835, 0x1, 0x1);
        gbc.writeMem(0x1ea7, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x7046);
        EXPECT(gbc.pc(), 0x1ea9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0360
        gbc.setState(0x4e4c, 0x540a, 0x6da0, 0xbeb2, 0xa2bc, 0x7aef, 0x1, 0x0);
        gbc.writeMem(0x4e4c, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x540a);
        EXPECT(gbc.pc(), 0x4e4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0361
        gbc.setState(0x6451, 0xdd6f, 0x4ad0, 0x72df, 0xf7ae, 0x33d9, 0x0, 0x1);
        gbc.writeMem(0x6451, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xdd6f);
        EXPECT(gbc.pc(), 0x6453);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0362
        gbc.setState(0x72c1, 0x4730, 0x4840, 0xd154, 0x8868, 0xf798, 0x0, 0x1);
        gbc.writeMem(0x72c1, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x4730);
        EXPECT(gbc.pc(), 0x72c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0364
        gbc.setState(0x7a7b, 0xb4ed, 0xa340, 0x7f2a, 0x8b06, 0x3327, 0x0, 0x0);
        gbc.writeMem(0x7a7b, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xb4ed);
        EXPECT(gbc.pc(), 0x7a7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0365
        gbc.setState(0x7065, 0x5adc, 0x30, 0xf91e, 0x20b8, 0xaddf, 0x0, 0x0);
        gbc.writeMem(0x7065, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x5adc);
        EXPECT(gbc.pc(), 0x7067);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0366
        gbc.setState(0xada0, 0xdd52, 0x7c80, 0x2104, 0x52ec, 0xc86b, 0x1, 0x1);
        gbc.writeMem(0xada0, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xdd52);
        EXPECT(gbc.pc(), 0xada2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xada0), 0xcb);
        EXPECT(gbc.readMem(0xada1), 0x99);
        // CB 99 0367
        gbc.setState(0x564, 0x4ea7, 0xb160, 0x45d, 0xbc62, 0x6144, 0x1, 0x0);
        gbc.writeMem(0x564, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x4ea7);
        EXPECT(gbc.pc(), 0x566);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0368
        gbc.setState(0x9673, 0x1cbd, 0xce80, 0xe312, 0x6975, 0x1f0b, 0x1, 0x0);
        gbc.writeMem(0x9673, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x1cbd);
        EXPECT(gbc.pc(), 0x9675);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9673), 0xcb);
        EXPECT(gbc.readMem(0x9674), 0x99);
        // CB 99 0369
        gbc.setState(0xbcf2, 0x5f7f, 0xe520, 0x387b, 0xb6b7, 0x7882, 0x1, 0x0);
        gbc.writeMem(0xbcf2, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x5f7f);
        EXPECT(gbc.pc(), 0xbcf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcf2), 0xcb);
        EXPECT(gbc.readMem(0xbcf3), 0x99);
        // CB 99 036A
        gbc.setState(0x433c, 0xf000, 0xd6e0, 0xb8ec, 0x118, 0xc213, 0x0, 0x1);
        gbc.writeMem(0x433c, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xf000);
        EXPECT(gbc.pc(), 0x433e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 036B
        gbc.setState(0x8aaa, 0xbeab, 0x3f50, 0x87e9, 0x2880, 0x7e6a, 0x0, 0x1);
        gbc.writeMem(0x8aaa, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xbeab);
        EXPECT(gbc.pc(), 0x8aac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8aaa), 0xcb);
        EXPECT(gbc.readMem(0x8aab), 0x99);
        // CB 99 036C
        gbc.setState(0x50ea, 0x40ed, 0xa540, 0x67bc, 0x9d14, 0x72a8, 0x1, 0x1);
        gbc.writeMem(0x50ea, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x40ed);
        EXPECT(gbc.pc(), 0x50ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 036D
        gbc.setState(0x3607, 0x75d4, 0xaef0, 0xe22d, 0x76c7, 0x772a, 0x0, 0x0);
        gbc.writeMem(0x3607, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x75d4);
        EXPECT(gbc.pc(), 0x3609);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 036E
        gbc.setState(0xaaef, 0xdf52, 0x5440, 0xa901, 0xbba7, 0xd897, 0x0, 0x0);
        gbc.writeMem(0xaaef, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xdf52);
        EXPECT(gbc.pc(), 0xaaf1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaef), 0xcb);
        EXPECT(gbc.readMem(0xaaf0), 0x99);
        // CB 99 036F
        gbc.setState(0x4898, 0x621b, 0xbc0, 0x47dc, 0x9d16, 0xe115, 0x1, 0x1);
        gbc.writeMem(0x4898, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x621b);
        EXPECT(gbc.pc(), 0x489a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0370
        gbc.setState(0x27bb, 0x1496, 0x92a0, 0xeca9, 0x877, 0x3a15, 0x0, 0x1);
        gbc.writeMem(0x27bb, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x1496);
        EXPECT(gbc.pc(), 0x27bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0371
        gbc.setState(0xef50, 0x9dfc, 0x8ad0, 0x9ddb, 0x8fd0, 0x5993, 0x1, 0x1);
        gbc.writeMem(0xef50, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x9dfc);
        EXPECT(gbc.pc(), 0xef52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef50), 0xcb);
        EXPECT(gbc.readMem(0xef51), 0x99);
        // CB 99 0372
        gbc.setState(0xd88, 0x436, 0x3ab0, 0x55c3, 0x2025, 0x2423, 0x0, 0x0);
        gbc.writeMem(0xd88, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x436);
        EXPECT(gbc.pc(), 0xd8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0373
        gbc.setState(0xe1ba, 0xe405, 0x7f90, 0xffd2, 0xd659, 0x6190, 0x0, 0x0);
        gbc.writeMem(0xe1ba, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xe405);
        EXPECT(gbc.pc(), 0xe1bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1ba), 0xcb);
        EXPECT(gbc.readMem(0xe1bb), 0x99);
        // CB 99 0374
        gbc.setState(0xa20a, 0x8104, 0x2520, 0xdbf1, 0x1dec, 0x541c, 0x1, 0x0);
        gbc.writeMem(0xa20a, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x8104);
        EXPECT(gbc.pc(), 0xa20c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa20a), 0xcb);
        EXPECT(gbc.readMem(0xa20b), 0x99);
        // CB 99 0375
        gbc.setState(0x8906, 0x5858, 0x2bc0, 0x4d31, 0xc20d, 0xfaa, 0x0, 0x0);
        gbc.writeMem(0x8906, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x5858);
        EXPECT(gbc.pc(), 0x8908);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8906), 0xcb);
        EXPECT(gbc.readMem(0x8907), 0x99);
        // CB 99 0376
        gbc.setState(0x9982, 0xf14b, 0x5e50, 0x3e9a, 0x3861, 0xdefd, 0x0, 0x0);
        gbc.writeMem(0x9982, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xf14b);
        EXPECT(gbc.pc(), 0x9984);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9982), 0xcb);
        EXPECT(gbc.readMem(0x9983), 0x99);
        // CB 99 0377
        gbc.setState(0x4eb, 0xf340, 0xd9c0, 0xa685, 0xc6d6, 0x58dc, 0x0, 0x1);
        gbc.writeMem(0x4eb, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xf340);
        EXPECT(gbc.pc(), 0x4ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0378
        gbc.setState(0x7ee7, 0xda39, 0xafd0, 0x8bad, 0x280d, 0x521d, 0x1, 0x0);
        gbc.writeMem(0x7ee7, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xda39);
        EXPECT(gbc.pc(), 0x7ee9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0379
        gbc.setState(0x9a30, 0xe37e, 0xa90, 0xd9fd, 0xbf10, 0x686a, 0x1, 0x0);
        gbc.writeMem(0x9a30, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xe37e);
        EXPECT(gbc.pc(), 0x9a32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a30), 0xcb);
        EXPECT(gbc.readMem(0x9a31), 0x99);
        // CB 99 037A
        gbc.setState(0xa589, 0xcdaf, 0x32d0, 0xbe2a, 0x1854, 0x42c4, 0x0, 0x0);
        gbc.writeMem(0xa589, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xcdaf);
        EXPECT(gbc.pc(), 0xa58b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa589), 0xcb);
        EXPECT(gbc.readMem(0xa58a), 0x99);
        // CB 99 037C
        gbc.setState(0x2710, 0xd8a7, 0xbca0, 0x4617, 0x3bd8, 0xf3c1, 0x1, 0x1);
        gbc.writeMem(0x2710, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xd8a7);
        EXPECT(gbc.pc(), 0x2712);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 037D
        gbc.setState(0xd39, 0x1cc7, 0x1cd0, 0x9de0, 0x4f20, 0x4749, 0x1, 0x0);
        gbc.writeMem(0xd39, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x1cc7);
        EXPECT(gbc.pc(), 0xd3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 037E
        gbc.setState(0x96d8, 0xf41b, 0xe170, 0x16ba, 0xe287, 0x8a72, 0x0, 0x1);
        gbc.writeMem(0x96d8, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xf41b);
        EXPECT(gbc.pc(), 0x96da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96d8), 0xcb);
        EXPECT(gbc.readMem(0x96d9), 0x99);
        // CB 99 037F
        gbc.setState(0x98ec, 0xb4b6, 0x8950, 0xdec7, 0xf234, 0xe519, 0x1, 0x1);
        gbc.writeMem(0x98ec, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xb4b6);
        EXPECT(gbc.pc(), 0x98ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98ec), 0xcb);
        EXPECT(gbc.readMem(0x98ed), 0x99);
        // CB 99 0380
        gbc.setState(0x274b, 0x801f, 0xefb0, 0x8aeb, 0x28a6, 0xaa22, 0x1, 0x1);
        gbc.writeMem(0x274b, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x801f);
        EXPECT(gbc.pc(), 0x274d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0381
        gbc.setState(0x163d, 0xe233, 0x5cb0, 0x287a, 0xd78f, 0xf22c, 0x1, 0x0);
        gbc.writeMem(0x163d, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xe233);
        EXPECT(gbc.pc(), 0x163f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0382
        gbc.setState(0x82ac, 0x67f6, 0xb5e0, 0xb48d, 0x8ec2, 0x8fba, 0x0, 0x1);
        gbc.writeMem(0x82ac, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x67f6);
        EXPECT(gbc.pc(), 0x82ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82ac), 0xcb);
        EXPECT(gbc.readMem(0x82ad), 0x99);
        // CB 99 0383
        gbc.setState(0x3f6f, 0x9f1, 0xaaa0, 0xe7cf, 0x6e20, 0x9222, 0x0, 0x0);
        gbc.writeMem(0x3f6f, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x9f1);
        EXPECT(gbc.pc(), 0x3f71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0384
        gbc.setState(0x5af3, 0xb2f3, 0xe770, 0xc2cf, 0x4553, 0xc19a, 0x0, 0x1);
        gbc.writeMem(0x5af3, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xb2f3);
        EXPECT(gbc.pc(), 0x5af5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0385
        gbc.setState(0x53f7, 0xf5c6, 0x2cb0, 0xe2b2, 0xfd35, 0x6a0, 0x1, 0x0);
        gbc.writeMem(0x53f7, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xf5c6);
        EXPECT(gbc.pc(), 0x53f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0387
        gbc.setState(0xa45f, 0xbeb0, 0x9a40, 0x601a, 0x63ac, 0x2696, 0x0, 0x0);
        gbc.writeMem(0xa45f, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xbeb0);
        EXPECT(gbc.pc(), 0xa461);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa45f), 0xcb);
        EXPECT(gbc.readMem(0xa460), 0x99);
        // CB 99 0388
        gbc.setState(0x7945, 0x731e, 0xa6d0, 0xc2a0, 0xae37, 0xd2c6, 0x1, 0x1);
        gbc.writeMem(0x7945, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x731e);
        EXPECT(gbc.pc(), 0x7947);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0389
        gbc.setState(0x758e, 0x7325, 0x6a80, 0xfdd0, 0x62f5, 0x2489, 0x0, 0x1);
        gbc.writeMem(0x758e, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x7325);
        EXPECT(gbc.pc(), 0x7590);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 038B
        gbc.setState(0x3127, 0x67d4, 0xae70, 0x2c43, 0x7e58, 0x6c09, 0x0, 0x1);
        gbc.writeMem(0x3127, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x67d4);
        EXPECT(gbc.pc(), 0x3129);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 038C
        gbc.setState(0xa0dc, 0x2b55, 0xee90, 0xf78a, 0x4ba6, 0x49e, 0x0, 0x1);
        gbc.writeMem(0xa0dc, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x2b55);
        EXPECT(gbc.pc(), 0xa0de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0dc), 0xcb);
        EXPECT(gbc.readMem(0xa0dd), 0x99);
        // CB 99 038D
        gbc.setState(0x8107, 0x47eb, 0x4680, 0xae9a, 0x820b, 0xad0d, 0x1, 0x0);
        gbc.writeMem(0x8107, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x47eb);
        EXPECT(gbc.pc(), 0x8109);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8107), 0xcb);
        EXPECT(gbc.readMem(0x8108), 0x99);
        // CB 99 038E
        gbc.setState(0x37a8, 0x2c00, 0xf490, 0x132, 0x8822, 0x3444, 0x1, 0x0);
        gbc.writeMem(0x37a8, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x2c00);
        EXPECT(gbc.pc(), 0x37aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 038F
        gbc.setState(0xd4c9, 0xbb5b, 0xba00, 0x84a2, 0x8c0e, 0x178b, 0x0, 0x1);
        gbc.writeMem(0xd4c9, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xbb5b);
        EXPECT(gbc.pc(), 0xd4cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4c9), 0xcb);
        EXPECT(gbc.readMem(0xd4ca), 0x99);
        // CB 99 0390
        gbc.setState(0xa474, 0xbc1f, 0x7570, 0x5dd2, 0x60c5, 0x4742, 0x1, 0x0);
        gbc.writeMem(0xa474, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xbc1f);
        EXPECT(gbc.pc(), 0xa476);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa474), 0xcb);
        EXPECT(gbc.readMem(0xa475), 0x99);
        // CB 99 0391
        gbc.setState(0x72bc, 0x48cb, 0xbc10, 0xcd40, 0xc353, 0x4d20, 0x1, 0x1);
        gbc.writeMem(0x72bc, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x48cb);
        EXPECT(gbc.pc(), 0x72be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0392
        gbc.setState(0x660e, 0x29ad, 0xc460, 0x1488, 0x63b, 0xf71d, 0x0, 0x1);
        gbc.writeMem(0x660e, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x29ad);
        EXPECT(gbc.pc(), 0x6610);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 0393
        gbc.setState(0x3daf, 0x18ad, 0x7ed0, 0x9c18, 0xc42a, 0x8581, 0x1, 0x0);
        gbc.writeMem(0x3daf, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x18ad);
        EXPECT(gbc.pc(), 0x3db1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0394
        gbc.setState(0x9755, 0x4e2c, 0x4df0, 0x57f, 0x755f, 0x5276, 0x1, 0x0);
        gbc.writeMem(0x9755, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x4e2c);
        EXPECT(gbc.pc(), 0x9757);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9755), 0xcb);
        EXPECT(gbc.readMem(0x9756), 0x99);
        // CB 99 0396
        gbc.setState(0xc618, 0xd2d0, 0xab70, 0x94fe, 0x423a, 0xf8a3, 0x1, 0x1);
        gbc.writeMem(0xc618, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xd2d0);
        EXPECT(gbc.pc(), 0xc61a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc618), 0xcb);
        EXPECT(gbc.readMem(0xc619), 0x99);
        // CB 99 0397
        gbc.setState(0x67ab, 0x2490, 0x7b50, 0xf497, 0xf509, 0x5c4d, 0x1, 0x1);
        gbc.writeMem(0x67ab, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x2490);
        EXPECT(gbc.pc(), 0x67ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 0398
        gbc.setState(0xc6d9, 0xac0e, 0xdfd0, 0xdd01, 0x9fc2, 0xa87b, 0x0, 0x0);
        gbc.writeMem(0xc6d9, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xac0e);
        EXPECT(gbc.pc(), 0xc6db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6d9), 0xcb);
        EXPECT(gbc.readMem(0xc6da), 0x99);
        // CB 99 0399
        gbc.setState(0xad07, 0x3172, 0x6e70, 0xf117, 0xcb7b, 0x896d, 0x1, 0x0);
        gbc.writeMem(0xad07, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x3172);
        EXPECT(gbc.pc(), 0xad09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad07), 0xcb);
        EXPECT(gbc.readMem(0xad08), 0x99);
        // CB 99 039A
        gbc.setState(0x1b26, 0x4c68, 0x7f0, 0x3a48, 0xd726, 0xd324, 0x0, 0x0);
        gbc.writeMem(0x1b26, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x4c68);
        EXPECT(gbc.pc(), 0x1b28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 039B
        gbc.setState(0x13ef, 0x8925, 0x3e70, 0x65a4, 0x6772, 0x8e6, 0x1, 0x1);
        gbc.writeMem(0x13ef, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x8925);
        EXPECT(gbc.pc(), 0x13f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 039D
        gbc.setState(0x9d68, 0x26ce, 0x2310, 0x8fcf, 0xb39a, 0xc695, 0x1, 0x0);
        gbc.writeMem(0x9d68, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x26ce);
        EXPECT(gbc.pc(), 0x9d6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d68), 0xcb);
        EXPECT(gbc.readMem(0x9d69), 0x99);
        // CB 99 039F
        gbc.setState(0x9417, 0xcbfc, 0xfa40, 0xa9f, 0xeb53, 0x9e48, 0x0, 0x0);
        gbc.writeMem(0x9417, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xcbfc);
        EXPECT(gbc.pc(), 0x9419);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9417), 0xcb);
        EXPECT(gbc.readMem(0x9418), 0x99);
        // CB 99 03A0
        gbc.setState(0x9871, 0xea86, 0xc1b0, 0xe1d3, 0xf80b, 0xdbc6, 0x1, 0x0);
        gbc.writeMem(0x9871, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xea86);
        EXPECT(gbc.pc(), 0x9873);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9871), 0xcb);
        EXPECT(gbc.readMem(0x9872), 0x99);
        // CB 99 03A1
        gbc.setState(0xb2a, 0xd4b, 0x2e80, 0x6d21, 0xa0a, 0x96ef, 0x0, 0x0);
        gbc.writeMem(0xb2a, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xd4b);
        EXPECT(gbc.pc(), 0xb2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 03A2
        gbc.setState(0xd4fe, 0x802d, 0x3240, 0xd094, 0xa65d, 0x45bb, 0x1, 0x0);
        gbc.writeMem(0xd4fe, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x802d);
        EXPECT(gbc.pc(), 0xd500);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4fe), 0xcb);
        EXPECT(gbc.readMem(0xd4ff), 0x99);
        // CB 99 03A3
        gbc.setState(0x7e41, 0xb2e5, 0xf1d0, 0x2d8c, 0xc792, 0xc44b, 0x1, 0x0);
        gbc.writeMem(0x7e41, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xb2e5);
        EXPECT(gbc.pc(), 0x7e43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 03A4
        gbc.setState(0xaebc, 0x9f4c, 0x5a0, 0x13bc, 0x2f53, 0xe77b, 0x1, 0x0);
        gbc.writeMem(0xaebc, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x9f4c);
        EXPECT(gbc.pc(), 0xaebe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaebc), 0xcb);
        EXPECT(gbc.readMem(0xaebd), 0x99);
        // CB 99 03A5
        gbc.setState(0xe80c, 0xe5f6, 0x3970, 0xfab6, 0xf92f, 0x64aa, 0x0, 0x1);
        gbc.writeMem(0xe80c, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xe5f6);
        EXPECT(gbc.pc(), 0xe80e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe80c), 0xcb);
        EXPECT(gbc.readMem(0xe80d), 0x99);
        // CB 99 03A6
        gbc.setState(0xb27e, 0xdb86, 0x4f30, 0x149e, 0xfca6, 0x9d23, 0x1, 0x1);
        gbc.writeMem(0xb27e, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xdb86);
        EXPECT(gbc.pc(), 0xb280);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb27e), 0xcb);
        EXPECT(gbc.readMem(0xb27f), 0x99);
        // CB 99 03A7
        gbc.setState(0x3e6c, 0xd3a8, 0x3070, 0x9ab7, 0xe35e, 0x4606, 0x0, 0x0);
        gbc.writeMem(0x3e6c, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xd3a8);
        EXPECT(gbc.pc(), 0x3e6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 03A8
        gbc.setState(0x9d4b, 0x4fd0, 0x9e30, 0x5bb2, 0x72eb, 0x8d20, 0x1, 0x0);
        gbc.writeMem(0x9d4b, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x4fd0);
        EXPECT(gbc.pc(), 0x9d4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d4b), 0xcb);
        EXPECT(gbc.readMem(0x9d4c), 0x99);
        // CB 99 03A9
        gbc.setState(0x37e7, 0xa444, 0xed10, 0x72f1, 0xd334, 0x3a21, 0x0, 0x0);
        gbc.writeMem(0x37e7, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xa444);
        EXPECT(gbc.pc(), 0x37e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 03AA
        gbc.setState(0xcb64, 0x313f, 0x52e0, 0x29f1, 0x4769, 0xd2b8, 0x1, 0x1);
        gbc.writeMem(0xcb64, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x313f);
        EXPECT(gbc.pc(), 0xcb66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb64), 0xcb);
        EXPECT(gbc.readMem(0xcb65), 0x99);
        // CB 99 03AB
        gbc.setState(0x6d5e, 0xd947, 0x5470, 0x6bcd, 0xbe7e, 0x2e30, 0x0, 0x0);
        gbc.writeMem(0x6d5e, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xd947);
        EXPECT(gbc.pc(), 0x6d60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 03AC
        gbc.setState(0xe226, 0x4cb7, 0x1620, 0x717d, 0x359f, 0x8d3e, 0x0, 0x1);
        gbc.writeMem(0xe226, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x4cb7);
        EXPECT(gbc.pc(), 0xe228);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe226), 0xcb);
        EXPECT(gbc.readMem(0xe227), 0x99);
        // CB 99 03AD
        gbc.setState(0xb54e, 0x4db7, 0x14e0, 0x79d4, 0xbf0, 0x52d9, 0x1, 0x0);
        gbc.writeMem(0xb54e, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x4db7);
        EXPECT(gbc.pc(), 0xb550);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb54e), 0xcb);
        EXPECT(gbc.readMem(0xb54f), 0x99);
        // CB 99 03AE
        gbc.setState(0x9489, 0x7c8d, 0xe880, 0xec06, 0xdf6, 0x91c3, 0x0, 0x1);
        gbc.writeMem(0x9489, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x7c8d);
        EXPECT(gbc.pc(), 0x948b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9489), 0xcb);
        EXPECT(gbc.readMem(0x948a), 0x99);
        // CB 99 03AF
        gbc.setState(0xd066, 0xb370, 0x99b0, 0xe069, 0xe168, 0xd76e, 0x0, 0x1);
        gbc.writeMem(0xd066, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xb370);
        EXPECT(gbc.pc(), 0xd068);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd066), 0xcb);
        EXPECT(gbc.readMem(0xd067), 0x99);
        // CB 99 03B0
        gbc.setState(0x959e, 0x4787, 0x8c30, 0xbe3f, 0x31f9, 0x1a1, 0x1, 0x1);
        gbc.writeMem(0x959e, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x4787);
        EXPECT(gbc.pc(), 0x95a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x959e), 0xcb);
        EXPECT(gbc.readMem(0x959f), 0x99);
        // CB 99 03B2
        gbc.setState(0x93ef, 0xb799, 0xb50, 0xaf9f, 0x9ac5, 0xfa50, 0x1, 0x0);
        gbc.writeMem(0x93ef, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xb799);
        EXPECT(gbc.pc(), 0x93f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93ef), 0xcb);
        EXPECT(gbc.readMem(0x93f0), 0x99);
        // CB 99 03B3
        gbc.setState(0x35d3, 0x6d1b, 0x4330, 0x1ef0, 0xeea0, 0xac0d, 0x0, 0x0);
        gbc.writeMem(0x35d3, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x6d1b);
        EXPECT(gbc.pc(), 0x35d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 03B4
        gbc.setState(0x6480, 0xe71a, 0x8cf0, 0x9a03, 0xa0de, 0x7f10, 0x0, 0x0);
        gbc.writeMem(0x6480, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xe71a);
        EXPECT(gbc.pc(), 0x6482);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 03B5
        gbc.setState(0x5bf1, 0x6b29, 0x1c0, 0xf152, 0xece0, 0x5510, 0x1, 0x0);
        gbc.writeMem(0x5bf1, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x6b29);
        EXPECT(gbc.pc(), 0x5bf3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 03B6
        gbc.setState(0x2387, 0xbc92, 0xded0, 0x3c1, 0x9ec8, 0x5a6a, 0x1, 0x1);
        gbc.writeMem(0x2387, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xbc92);
        EXPECT(gbc.pc(), 0x2389);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 03B7
        gbc.setState(0x1695, 0x28af, 0xfa40, 0xda89, 0x813f, 0xe1bc, 0x1, 0x0);
        gbc.writeMem(0x1695, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x28af);
        EXPECT(gbc.pc(), 0x1697);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 03B8
        gbc.setState(0x4f2b, 0x9ccd, 0x1940, 0xa7f, 0xb0e5, 0x906c, 0x0, 0x0);
        gbc.writeMem(0x4f2b, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x9ccd);
        EXPECT(gbc.pc(), 0x4f2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 03B9
        gbc.setState(0xbe13, 0x377a, 0x80c0, 0x323, 0xf5b8, 0x2004, 0x1, 0x0);
        gbc.writeMem(0xbe13, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x377a);
        EXPECT(gbc.pc(), 0xbe15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe13), 0xcb);
        EXPECT(gbc.readMem(0xbe14), 0x99);
        // CB 99 03BA
        gbc.setState(0x174b, 0xc38, 0xb060, 0x177f, 0x1ee6, 0x321e, 0x1, 0x1);
        gbc.writeMem(0x174b, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xc38);
        EXPECT(gbc.pc(), 0x174d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 03BB
        gbc.setState(0x8c14, 0xee06, 0x7a20, 0x1f41, 0xacef, 0x7183, 0x0, 0x0);
        gbc.writeMem(0x8c14, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xee06);
        EXPECT(gbc.pc(), 0x8c16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c14), 0xcb);
        EXPECT(gbc.readMem(0x8c15), 0x99);
        // CB 99 03BC
        gbc.setState(0x66b7, 0xae0b, 0xdc50, 0xe942, 0x4f80, 0xad11, 0x0, 0x0);
        gbc.writeMem(0x66b7, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xae0b);
        EXPECT(gbc.pc(), 0x66b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 03BD
        gbc.setState(0xeb7f, 0x74fc, 0x5650, 0xf143, 0xcdb2, 0xc6af, 0x0, 0x1);
        gbc.writeMem(0xeb7f, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x74fc);
        EXPECT(gbc.pc(), 0xeb81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb7f), 0xcb);
        EXPECT(gbc.readMem(0xeb80), 0x99);
        // CB 99 03BE
        gbc.setState(0x9d31, 0xc2de, 0xecb0, 0xb19f, 0xd477, 0xa1ad, 0x1, 0x1);
        gbc.writeMem(0x9d31, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xc2de);
        EXPECT(gbc.pc(), 0x9d33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d31), 0xcb);
        EXPECT(gbc.readMem(0x9d32), 0x99);
        // CB 99 03BF
        gbc.setState(0xe37b, 0x2560, 0xa230, 0x7c4b, 0xd6a3, 0x723e, 0x1, 0x0);
        gbc.writeMem(0xe37b, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x2560);
        EXPECT(gbc.pc(), 0xe37d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe37b), 0xcb);
        EXPECT(gbc.readMem(0xe37c), 0x99);
        // CB 99 03C0
        gbc.setState(0x4f0b, 0x5bb, 0x4260, 0x1ec8, 0x3f9a, 0x1fc4, 0x1, 0x1);
        gbc.writeMem(0x4f0b, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x5bb);
        EXPECT(gbc.pc(), 0x4f0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 03C2
        gbc.setState(0x2586, 0xfd19, 0xaa0, 0xf399, 0x1ba6, 0x626f, 0x1, 0x0);
        gbc.writeMem(0x2586, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xfd19);
        EXPECT(gbc.pc(), 0x2588);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 03C3
        gbc.setState(0x2034, 0x88e2, 0x6660, 0x8337, 0x6631, 0x5d37, 0x1, 0x0);
        gbc.writeMem(0x2034, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x88e2);
        EXPECT(gbc.pc(), 0x2036);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 03C4
        gbc.setState(0x59d1, 0x2e21, 0x5660, 0xc91d, 0x89b, 0xc91, 0x1, 0x1);
        gbc.writeMem(0x59d1, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x2e21);
        EXPECT(gbc.pc(), 0x59d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 03C5
        gbc.setState(0x7c96, 0x9b71, 0x3810, 0x9304, 0x3dd1, 0x58e8, 0x1, 0x0);
        gbc.writeMem(0x7c96, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x9b71);
        EXPECT(gbc.pc(), 0x7c98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 03C6
        gbc.setState(0x8acb, 0xdb9, 0x8190, 0xf7fa, 0x6cd0, 0xd5c9, 0x1, 0x0);
        gbc.writeMem(0x8acb, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xdb9);
        EXPECT(gbc.pc(), 0x8acd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8acb), 0xcb);
        EXPECT(gbc.readMem(0x8acc), 0x99);
        // CB 99 03C7
        gbc.setState(0xe51b, 0xe33f, 0xca40, 0x8b8, 0x8fd7, 0xd044, 0x1, 0x1);
        gbc.writeMem(0xe51b, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xe33f);
        EXPECT(gbc.pc(), 0xe51d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe51b), 0xcb);
        EXPECT(gbc.readMem(0xe51c), 0x99);
        // CB 99 03C8
        gbc.setState(0xbdad, 0x678a, 0xe860, 0xe463, 0x6df8, 0x34f7, 0x0, 0x0);
        gbc.writeMem(0xbdad, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x678a);
        EXPECT(gbc.pc(), 0xbdaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdad), 0xcb);
        EXPECT(gbc.readMem(0xbdae), 0x99);
        // CB 99 03C9
        gbc.setState(0x53a0, 0xf720, 0x32b0, 0x707, 0xa822, 0xc22f, 0x1, 0x0);
        gbc.writeMem(0x53a0, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xf720);
        EXPECT(gbc.pc(), 0x53a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 03CA
        gbc.setState(0x6715, 0x676b, 0xd510, 0x5ec, 0xfa25, 0x6e6b, 0x0, 0x0);
        gbc.writeMem(0x6715, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x676b);
        EXPECT(gbc.pc(), 0x6717);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 99 03CC
        gbc.setState(0xd541, 0x62b8, 0x1480, 0x7ee9, 0xeb54, 0x626, 0x1, 0x1);
        gbc.writeMem(0xd541, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x62b8);
        EXPECT(gbc.pc(), 0xd543);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd541), 0xcb);
        EXPECT(gbc.readMem(0xd542), 0x99);
        // CB 99 03CD
        gbc.setState(0x8968, 0xb6ee, 0xe7e0, 0x22fa, 0x9b2b, 0x4fc, 0x1, 0x1);
        gbc.writeMem(0x8968, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xb6ee);
        EXPECT(gbc.pc(), 0x896a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8968), 0xcb);
        EXPECT(gbc.readMem(0x8969), 0x99);
        // CB 99 03CE
        gbc.setState(0x207c, 0xe859, 0xfd70, 0xe8a4, 0x6339, 0xa2fb, 0x1, 0x0);
        gbc.writeMem(0x207c, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xe859);
        EXPECT(gbc.pc(), 0x207e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 03CF
        gbc.setState(0x4705, 0x4236, 0x4060, 0xc3b8, 0x9518, 0x78d8, 0x0, 0x1);
        gbc.writeMem(0x4705, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x4236);
        EXPECT(gbc.pc(), 0x4707);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 03D0
        gbc.setState(0x8d5f, 0x803b, 0x8530, 0x3b82, 0x9b99, 0x705e, 0x1, 0x0);
        gbc.writeMem(0x8d5f, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x803b);
        EXPECT(gbc.pc(), 0x8d61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d5f), 0xcb);
        EXPECT(gbc.readMem(0x8d60), 0x99);
        // CB 99 03D2
        gbc.setState(0xabd6, 0xa9e2, 0x8410, 0xa8a0, 0x99a, 0xe498, 0x0, 0x0);
        gbc.writeMem(0xabd6, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xa9e2);
        EXPECT(gbc.pc(), 0xabd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabd6), 0xcb);
        EXPECT(gbc.readMem(0xabd7), 0x99);
        // CB 99 03D3
        gbc.setState(0xab83, 0xf2dc, 0xd780, 0x4f0d, 0x658d, 0xb419, 0x1, 0x0);
        gbc.writeMem(0xab83, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xf2dc);
        EXPECT(gbc.pc(), 0xab85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab83), 0xcb);
        EXPECT(gbc.readMem(0xab84), 0x99);
        // CB 99 03D4
        gbc.setState(0x875c, 0xe0db, 0xb8e0, 0xccb1, 0x9b97, 0x7da3, 0x0, 0x0);
        gbc.writeMem(0x875c, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xe0db);
        EXPECT(gbc.pc(), 0x875e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x875c), 0xcb);
        EXPECT(gbc.readMem(0x875d), 0x99);
        // CB 99 03D6
        gbc.setState(0xcd49, 0x4a79, 0x8350, 0x71f, 0x6c3f, 0x415a, 0x1, 0x1);
        gbc.writeMem(0xcd49, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x4a79);
        EXPECT(gbc.pc(), 0xcd4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd49), 0xcb);
        EXPECT(gbc.readMem(0xcd4a), 0x99);
        // CB 99 03D7
        gbc.setState(0x5c3d, 0x5329, 0x5960, 0x2c8a, 0xd64d, 0x9b2b, 0x0, 0x0);
        gbc.writeMem(0x5c3d, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x5329);
        EXPECT(gbc.pc(), 0x5c3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 03D8
        gbc.setState(0x5257, 0x1e77, 0x3900, 0x17b0, 0x385b, 0x18f3, 0x0, 0x1);
        gbc.writeMem(0x5257, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x1e77);
        EXPECT(gbc.pc(), 0x5259);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 03D9
        gbc.setState(0x9aea, 0x2f19, 0xb70, 0x2937, 0x8bba, 0x5ee, 0x0, 0x0);
        gbc.writeMem(0x9aea, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x2f19);
        EXPECT(gbc.pc(), 0x9aec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9aea), 0xcb);
        EXPECT(gbc.readMem(0x9aeb), 0x99);
        // CB 99 03DA
        gbc.setState(0x521c, 0xb044, 0x75c0, 0x1f2e, 0x1d18, 0xe473, 0x0, 0x1);
        gbc.writeMem(0x521c, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xb044);
        EXPECT(gbc.pc(), 0x521e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 03DB
        gbc.setState(0xbf48, 0xb524, 0xec10, 0xca56, 0xdb2b, 0x2db4, 0x0, 0x1);
        gbc.writeMem(0xbf48, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xb524);
        EXPECT(gbc.pc(), 0xbf4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf48), 0xcb);
        EXPECT(gbc.readMem(0xbf49), 0x99);
        // CB 99 03DC
        gbc.setState(0x359, 0x9f13, 0x9fc0, 0xfeeb, 0xb906, 0x78c3, 0x1, 0x0);
        gbc.writeMem(0x359, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x9f13);
        EXPECT(gbc.pc(), 0x35b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 03DD
        gbc.setState(0x19a1, 0x4bf7, 0x9130, 0x9a3b, 0xb65c, 0xfd92, 0x0, 0x0);
        gbc.writeMem(0x19a1, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x4bf7);
        EXPECT(gbc.pc(), 0x19a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 03DE
        gbc.setState(0x209c, 0xe44c, 0x6f20, 0x9b34, 0x35df, 0x1228, 0x1, 0x0);
        gbc.writeMem(0x209c, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xe44c);
        EXPECT(gbc.pc(), 0x209e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 03DF
        gbc.setState(0x26db, 0x4e56, 0x4520, 0xae14, 0x3e6c, 0x5701, 0x1, 0x1);
        gbc.writeMem(0x26db, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x4e56);
        EXPECT(gbc.pc(), 0x26dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 03E0
        gbc.setState(0x3d17, 0x388, 0x8430, 0x5651, 0x4e80, 0x4b2, 0x0, 0x0);
        gbc.writeMem(0x3d17, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x388);
        EXPECT(gbc.pc(), 0x3d19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 03E1
        gbc.setState(0x6e11, 0x2378, 0xc4f0, 0xf0db, 0x3f9f, 0xe92f, 0x0, 0x1);
        gbc.writeMem(0x6e11, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x2378);
        EXPECT(gbc.pc(), 0x6e13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 99 03E2
        gbc.setState(0xc291, 0x938e, 0x7530, 0xb64a, 0xb74a, 0xa1de, 0x0, 0x1);
        gbc.writeMem(0xc291, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x938e);
        EXPECT(gbc.pc(), 0xc293);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc291), 0xcb);
        EXPECT(gbc.readMem(0xc292), 0x99);
        // CB 99 03E3
        gbc.setState(0x3793, 0xc250, 0x4b20, 0xe866, 0xc98e, 0x17fe, 0x1, 0x0);
        gbc.writeMem(0x3793, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xc250);
        EXPECT(gbc.pc(), 0x3795);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 99 03E4
        gbc.setState(0xb52e, 0x8291, 0x1fd0, 0x5c87, 0x84fa, 0x79f8, 0x1, 0x0);
        gbc.writeMem(0xb52e, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x8291);
        EXPECT(gbc.pc(), 0xb530);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb52e), 0xcb);
        EXPECT(gbc.readMem(0xb52f), 0x99);
        // CB 99 03E5
        gbc.setState(0x571f, 0x2fed, 0xa00, 0x44d9, 0xd7a9, 0x6315, 0x1, 0x0);
        gbc.writeMem(0x571f, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x2fed);
        EXPECT(gbc.pc(), 0x5721);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 99 03E6
        gbc.setState(0x807a, 0xdcd4, 0x50f0, 0xefd2, 0x349a, 0x118, 0x0, 0x1);
        gbc.writeMem(0x807a, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xdcd4);
        EXPECT(gbc.pc(), 0x807c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x807a), 0xcb);
        EXPECT(gbc.readMem(0x807b), 0x99);
        // CB 99 03E7
        gbc.setState(0xb24c, 0x832a, 0xac80, 0x857c, 0x2653, 0x6c3a, 0x0, 0x1);
        gbc.writeMem(0xb24c, { 0xcb, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x832a);
        EXPECT(gbc.pc(), 0xb24e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb24c), 0xcb);
        EXPECT(gbc.readMem(0xb24d), 0x99);
    }
