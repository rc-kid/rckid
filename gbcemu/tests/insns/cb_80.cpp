#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_80)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_80) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 80 0000
        gbc.setState(0xac63, 0x4055, 0xe4b0, 0x386f, 0x8aed, 0xeb8b, 0x1, 0x0);
        gbc.writeMem(0xac63, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x4055);
        EXPECT(gbc.pc(), 0xac65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac63), 0xcb);
        EXPECT(gbc.readMem(0xac64), 0x80);
        // CB 80 0001
        gbc.setState(0xc819, 0x496e, 0xe9f0, 0x26a1, 0xcb22, 0x57dc, 0x0, 0x0);
        gbc.writeMem(0xc819, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x496e);
        EXPECT(gbc.pc(), 0xc81b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc819), 0xcb);
        EXPECT(gbc.readMem(0xc81a), 0x80);
        // CB 80 0002
        gbc.setState(0x8e46, 0xcdf1, 0x32e0, 0xb775, 0x2d15, 0x4eee, 0x0, 0x0);
        gbc.writeMem(0x8e46, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xcdf1);
        EXPECT(gbc.pc(), 0x8e48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e46), 0xcb);
        EXPECT(gbc.readMem(0x8e47), 0x80);
        // CB 80 0003
        gbc.setState(0xb018, 0x1780, 0xd670, 0x36f0, 0x6393, 0x84be, 0x0, 0x1);
        gbc.writeMem(0xb018, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x1780);
        EXPECT(gbc.pc(), 0xb01a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb018), 0xcb);
        EXPECT(gbc.readMem(0xb019), 0x80);
        // CB 80 0004
        gbc.setState(0x332a, 0xb910, 0xdb00, 0x949b, 0xb3cd, 0x7efb, 0x1, 0x1);
        gbc.writeMem(0x332a, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xb910);
        EXPECT(gbc.pc(), 0x332c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0005
        gbc.setState(0x3159, 0xe1ff, 0x4d20, 0xf34a, 0x2557, 0x20aa, 0x1, 0x0);
        gbc.writeMem(0x3159, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xe1ff);
        EXPECT(gbc.pc(), 0x315b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0006
        gbc.setState(0x9d6d, 0xe503, 0x4f10, 0xb460, 0xddca, 0xb9b7, 0x0, 0x1);
        gbc.writeMem(0x9d6d, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xe503);
        EXPECT(gbc.pc(), 0x9d6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d6d), 0xcb);
        EXPECT(gbc.readMem(0x9d6e), 0x80);
        // CB 80 0007
        gbc.setState(0x42e6, 0x8370, 0x2450, 0xb482, 0x7bf, 0x9d4f, 0x0, 0x1);
        gbc.writeMem(0x42e6, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x8370);
        EXPECT(gbc.pc(), 0x42e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0008
        gbc.setState(0x3e64, 0xd213, 0xccd0, 0x70e6, 0x773f, 0x101a, 0x1, 0x0);
        gbc.writeMem(0x3e64, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xd213);
        EXPECT(gbc.pc(), 0x3e66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0009
        gbc.setState(0x78cd, 0xd5b3, 0xfe10, 0x35c6, 0xd172, 0x27ed, 0x1, 0x0);
        gbc.writeMem(0x78cd, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xd5b3);
        EXPECT(gbc.pc(), 0x78cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 000A
        gbc.setState(0x7978, 0xdbd6, 0xf3a0, 0xdfaa, 0x8e0c, 0x18e, 0x1, 0x1);
        gbc.writeMem(0x7978, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xdbd6);
        EXPECT(gbc.pc(), 0x797a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 000B
        gbc.setState(0x4e93, 0xf095, 0x65c0, 0xb576, 0xc88, 0x42d7, 0x1, 0x0);
        gbc.writeMem(0x4e93, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xf095);
        EXPECT(gbc.pc(), 0x4e95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 000C
        gbc.setState(0x9735, 0xa56a, 0xffe0, 0x443c, 0x4077, 0x28c3, 0x0, 0x1);
        gbc.writeMem(0x9735, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xa56a);
        EXPECT(gbc.pc(), 0x9737);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9735), 0xcb);
        EXPECT(gbc.readMem(0x9736), 0x80);
        // CB 80 000D
        gbc.setState(0x2c97, 0xce4b, 0x4b90, 0x245c, 0xb7b5, 0x341a, 0x1, 0x0);
        gbc.writeMem(0x2c97, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xce4b);
        EXPECT(gbc.pc(), 0x2c99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 000E
        gbc.setState(0xae0, 0x149b, 0x6a30, 0x7d88, 0xc53, 0xd3fa, 0x0, 0x0);
        gbc.writeMem(0xae0, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x149b);
        EXPECT(gbc.pc(), 0xae2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 000F
        gbc.setState(0xe943, 0xec12, 0x1690, 0x68df, 0xe391, 0x96cf, 0x1, 0x0);
        gbc.writeMem(0xe943, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xec12);
        EXPECT(gbc.pc(), 0xe945);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe943), 0xcb);
        EXPECT(gbc.readMem(0xe944), 0x80);
        // CB 80 0010
        gbc.setState(0x736a, 0xfe89, 0x7990, 0x7adf, 0xb194, 0xc2f8, 0x0, 0x0);
        gbc.writeMem(0x736a, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xfe89);
        EXPECT(gbc.pc(), 0x736c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0011
        gbc.setState(0x61c9, 0xcfa8, 0xa2b0, 0xff4b, 0x72a1, 0x7e6f, 0x1, 0x1);
        gbc.writeMem(0x61c9, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xcfa8);
        EXPECT(gbc.pc(), 0x61cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0012
        gbc.setState(0x5fc5, 0x2f8a, 0xc6e0, 0x977a, 0xe481, 0x1665, 0x0, 0x0);
        gbc.writeMem(0x5fc5, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x2f8a);
        EXPECT(gbc.pc(), 0x5fc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0013
        gbc.setState(0xc566, 0xe532, 0x9320, 0xf550, 0x20, 0x70f3, 0x1, 0x1);
        gbc.writeMem(0xc566, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xe532);
        EXPECT(gbc.pc(), 0xc568);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc566), 0xcb);
        EXPECT(gbc.readMem(0xc567), 0x80);
        // CB 80 0014
        gbc.setState(0x8e70, 0xd5d0, 0x8700, 0xfb0d, 0xb94f, 0x357, 0x1, 0x1);
        gbc.writeMem(0x8e70, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xd5d0);
        EXPECT(gbc.pc(), 0x8e72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e70), 0xcb);
        EXPECT(gbc.readMem(0x8e71), 0x80);
        // CB 80 0015
        gbc.setState(0x7884, 0x55b6, 0x1a80, 0xc07c, 0x63c8, 0x60d1, 0x1, 0x1);
        gbc.writeMem(0x7884, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x55b6);
        EXPECT(gbc.pc(), 0x7886);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0016
        gbc.setState(0x5214, 0xd28c, 0x7d20, 0x8b3c, 0x9c03, 0x12e5, 0x1, 0x1);
        gbc.writeMem(0x5214, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xd28c);
        EXPECT(gbc.pc(), 0x5216);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0017
        gbc.setState(0x7982, 0xa66b, 0x8840, 0x651c, 0x631d, 0xe08, 0x0, 0x0);
        gbc.writeMem(0x7982, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xa66b);
        EXPECT(gbc.pc(), 0x7984);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0018
        gbc.setState(0xe122, 0x302a, 0x6ce0, 0x2bdd, 0xd939, 0xc9d6, 0x0, 0x1);
        gbc.writeMem(0xe122, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x302a);
        EXPECT(gbc.pc(), 0xe124);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe122), 0xcb);
        EXPECT(gbc.readMem(0xe123), 0x80);
        // CB 80 0019
        gbc.setState(0xd3be, 0x3c8b, 0x5a90, 0xee6f, 0xedf8, 0xb3a0, 0x0, 0x0);
        gbc.writeMem(0xd3be, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x3c8b);
        EXPECT(gbc.pc(), 0xd3c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3be), 0xcb);
        EXPECT(gbc.readMem(0xd3bf), 0x80);
        // CB 80 001A
        gbc.setState(0x392f, 0xdd1c, 0xe210, 0xfe7f, 0x6e9a, 0xe194, 0x1, 0x1);
        gbc.writeMem(0x392f, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xdd1c);
        EXPECT(gbc.pc(), 0x3931);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 001B
        gbc.setState(0x42e8, 0x150a, 0x9e90, 0x1798, 0xb998, 0x354, 0x1, 0x0);
        gbc.writeMem(0x42e8, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x150a);
        EXPECT(gbc.pc(), 0x42ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 001C
        gbc.setState(0x29c8, 0x2a8b, 0xb040, 0x9655, 0x3cfb, 0xc2e1, 0x1, 0x0);
        gbc.writeMem(0x29c8, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x2a8b);
        EXPECT(gbc.pc(), 0x29ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 001D
        gbc.setState(0x44ca, 0xa098, 0x5900, 0x3a48, 0x230c, 0xd450, 0x1, 0x1);
        gbc.writeMem(0x44ca, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xa098);
        EXPECT(gbc.pc(), 0x44cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 001E
        gbc.setState(0x95df, 0x13ab, 0xa9b0, 0xc35b, 0xe5ff, 0x17a7, 0x1, 0x0);
        gbc.writeMem(0x95df, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x13ab);
        EXPECT(gbc.pc(), 0x95e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95df), 0xcb);
        EXPECT(gbc.readMem(0x95e0), 0x80);
        // CB 80 001F
        gbc.setState(0x1729, 0x4693, 0x9240, 0x32e2, 0xfb48, 0xe248, 0x0, 0x0);
        gbc.writeMem(0x1729, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x4693);
        EXPECT(gbc.pc(), 0x172b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0020
        gbc.setState(0x2087, 0x1819, 0x9ad0, 0xf9f5, 0xba6b, 0x56a8, 0x0, 0x0);
        gbc.writeMem(0x2087, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x1819);
        EXPECT(gbc.pc(), 0x2089);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0021
        gbc.setState(0xc2b1, 0x5442, 0xc460, 0x827e, 0xc2e6, 0x4c33, 0x0, 0x0);
        gbc.writeMem(0xc2b1, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x5442);
        EXPECT(gbc.pc(), 0xc2b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2b1), 0xcb);
        EXPECT(gbc.readMem(0xc2b2), 0x80);
        // CB 80 0022
        gbc.setState(0xef0e, 0x279, 0xfd00, 0x6fc0, 0xd1b7, 0x1cca, 0x0, 0x0);
        gbc.writeMem(0xef0e, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x279);
        EXPECT(gbc.pc(), 0xef10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef0e), 0xcb);
        EXPECT(gbc.readMem(0xef0f), 0x80);
        // CB 80 0023
        gbc.setState(0x7fa, 0xfbef, 0xfc60, 0x6136, 0xb2ec, 0x9f64, 0x0, 0x1);
        gbc.writeMem(0x7fa, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xfbef);
        EXPECT(gbc.pc(), 0x7fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0024
        gbc.setState(0xa88b, 0x8bfc, 0xbc70, 0x87d5, 0x93d, 0xc458, 0x0, 0x0);
        gbc.writeMem(0xa88b, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x8bfc);
        EXPECT(gbc.pc(), 0xa88d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa88b), 0xcb);
        EXPECT(gbc.readMem(0xa88c), 0x80);
        // CB 80 0026
        gbc.setState(0x2ab6, 0x1c9a, 0x2530, 0xa7e3, 0x2963, 0x6675, 0x0, 0x1);
        gbc.writeMem(0x2ab6, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x1c9a);
        EXPECT(gbc.pc(), 0x2ab8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0027
        gbc.setState(0x22c6, 0x46d5, 0x7270, 0x8207, 0xad21, 0x89ff, 0x1, 0x0);
        gbc.writeMem(0x22c6, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x46d5);
        EXPECT(gbc.pc(), 0x22c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0028
        gbc.setState(0x1f7b, 0x1cf9, 0xcd10, 0xdfad, 0x9300, 0x18b4, 0x0, 0x0);
        gbc.writeMem(0x1f7b, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x1cf9);
        EXPECT(gbc.pc(), 0x1f7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0029
        gbc.setState(0xbd25, 0x8010, 0x98e0, 0x3309, 0x6701, 0x7227, 0x1, 0x0);
        gbc.writeMem(0xbd25, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x8010);
        EXPECT(gbc.pc(), 0xbd27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd25), 0xcb);
        EXPECT(gbc.readMem(0xbd26), 0x80);
        // CB 80 002A
        gbc.setState(0x4d73, 0xe749, 0xe9a0, 0x98e2, 0x35a, 0xbc08, 0x1, 0x0);
        gbc.writeMem(0x4d73, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xe749);
        EXPECT(gbc.pc(), 0x4d75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 002B
        gbc.setState(0x8e01, 0x97a, 0x72e0, 0x8f6d, 0x740c, 0xbfb1, 0x0, 0x0);
        gbc.writeMem(0x8e01, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x97a);
        EXPECT(gbc.pc(), 0x8e03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e01), 0xcb);
        EXPECT(gbc.readMem(0x8e02), 0x80);
        // CB 80 002C
        gbc.setState(0x1389, 0x11f6, 0x1fa0, 0x9851, 0xd219, 0xb3ff, 0x1, 0x1);
        gbc.writeMem(0x1389, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x11f6);
        EXPECT(gbc.pc(), 0x138b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 002D
        gbc.setState(0x19d3, 0x8123, 0x6a00, 0xaa82, 0xa9, 0xc5a3, 0x0, 0x1);
        gbc.writeMem(0x19d3, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x8123);
        EXPECT(gbc.pc(), 0x19d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 002E
        gbc.setState(0x17e1, 0x8fe0, 0x7400, 0xf664, 0x9779, 0xadf9, 0x1, 0x1);
        gbc.writeMem(0x17e1, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x8fe0);
        EXPECT(gbc.pc(), 0x17e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 002F
        gbc.setState(0xa3dc, 0x4af2, 0x38b0, 0x1202, 0xf88a, 0xa915, 0x1, 0x0);
        gbc.writeMem(0xa3dc, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x4af2);
        EXPECT(gbc.pc(), 0xa3de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3dc), 0xcb);
        EXPECT(gbc.readMem(0xa3dd), 0x80);
        // CB 80 0030
        gbc.setState(0x921f, 0xa27d, 0x6080, 0xa2cf, 0xb9b6, 0x7dfa, 0x0, 0x0);
        gbc.writeMem(0x921f, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xa27d);
        EXPECT(gbc.pc(), 0x9221);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x921f), 0xcb);
        EXPECT(gbc.readMem(0x9220), 0x80);
        // CB 80 0031
        gbc.setState(0x2b64, 0x8fb, 0xd380, 0x8e0a, 0xfc6d, 0xcbc2, 0x0, 0x0);
        gbc.writeMem(0x2b64, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x8fb);
        EXPECT(gbc.pc(), 0x2b66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0032
        gbc.setState(0x7013, 0x10c1, 0xa1f0, 0x9f47, 0xae27, 0x103e, 0x0, 0x1);
        gbc.writeMem(0x7013, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x10c1);
        EXPECT(gbc.pc(), 0x7015);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0033
        gbc.setState(0x7c70, 0x5a2a, 0xaa80, 0x6186, 0x95c7, 0x93ae, 0x0, 0x0);
        gbc.writeMem(0x7c70, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x5a2a);
        EXPECT(gbc.pc(), 0x7c72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0034
        gbc.setState(0x980f, 0x9d0e, 0xd2f0, 0x2a93, 0xb971, 0xe34c, 0x0, 0x1);
        gbc.writeMem(0x980f, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x9d0e);
        EXPECT(gbc.pc(), 0x9811);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x980f), 0xcb);
        EXPECT(gbc.readMem(0x9810), 0x80);
        // CB 80 0035
        gbc.setState(0x5979, 0x5e19, 0xf1f0, 0x5bd2, 0xf0fa, 0x7c5d, 0x0, 0x0);
        gbc.writeMem(0x5979, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x5e19);
        EXPECT(gbc.pc(), 0x597b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0036
        gbc.setState(0xbad1, 0xc89d, 0xace0, 0x7ca9, 0xcc89, 0x7daf, 0x1, 0x0);
        gbc.writeMem(0xbad1, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xc89d);
        EXPECT(gbc.pc(), 0xbad3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbad1), 0xcb);
        EXPECT(gbc.readMem(0xbad2), 0x80);
        // CB 80 0037
        gbc.setState(0x5686, 0xb300, 0x1b10, 0xb8b3, 0x736b, 0x3abe, 0x1, 0x0);
        gbc.writeMem(0x5686, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xb300);
        EXPECT(gbc.pc(), 0x5688);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0038
        gbc.setState(0x9c22, 0x9235, 0x120, 0x8c04, 0x39e1, 0x9528, 0x0, 0x1);
        gbc.writeMem(0x9c22, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x9235);
        EXPECT(gbc.pc(), 0x9c24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c22), 0xcb);
        EXPECT(gbc.readMem(0x9c23), 0x80);
        // CB 80 0039
        gbc.setState(0xa537, 0xa5e2, 0x2520, 0xa0df, 0x22c7, 0x7b5c, 0x1, 0x1);
        gbc.writeMem(0xa537, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xa5e2);
        EXPECT(gbc.pc(), 0xa539);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa537), 0xcb);
        EXPECT(gbc.readMem(0xa538), 0x80);
        // CB 80 003A
        gbc.setState(0x1c81, 0x98d7, 0xa3b0, 0x4b14, 0x63a8, 0x5008, 0x1, 0x0);
        gbc.writeMem(0x1c81, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x98d7);
        EXPECT(gbc.pc(), 0x1c83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 003B
        gbc.setState(0x1edd, 0xa0af, 0x7930, 0x266c, 0x8097, 0xa60b, 0x0, 0x0);
        gbc.writeMem(0x1edd, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xa0af);
        EXPECT(gbc.pc(), 0x1edf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 003C
        gbc.setState(0x333a, 0xb48f, 0xa7b0, 0x4c6e, 0x1366, 0xf4fd, 0x0, 0x1);
        gbc.writeMem(0x333a, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xb48f);
        EXPECT(gbc.pc(), 0x333c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 003D
        gbc.setState(0x460a, 0x27f7, 0x5c30, 0xadb4, 0x7471, 0x5492, 0x1, 0x0);
        gbc.writeMem(0x460a, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x27f7);
        EXPECT(gbc.pc(), 0x460c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 003E
        gbc.setState(0x3b9d, 0x940d, 0x8310, 0x2bd4, 0xdf56, 0x18bf, 0x1, 0x1);
        gbc.writeMem(0x3b9d, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x940d);
        EXPECT(gbc.pc(), 0x3b9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 003F
        gbc.setState(0x24e8, 0xd3df, 0x3ba0, 0xdcb8, 0x519, 0xaccf, 0x0, 0x0);
        gbc.writeMem(0x24e8, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xd3df);
        EXPECT(gbc.pc(), 0x24ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0040
        gbc.setState(0x8829, 0xa7f6, 0xe980, 0x85af, 0x6977, 0xf9ef, 0x1, 0x1);
        gbc.writeMem(0x8829, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xa7f6);
        EXPECT(gbc.pc(), 0x882b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8829), 0xcb);
        EXPECT(gbc.readMem(0x882a), 0x80);
        // CB 80 0041
        gbc.setState(0x9e55, 0xa723, 0xcbd0, 0xf6f2, 0xef59, 0x5b68, 0x1, 0x0);
        gbc.writeMem(0x9e55, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xa723);
        EXPECT(gbc.pc(), 0x9e57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e55), 0xcb);
        EXPECT(gbc.readMem(0x9e56), 0x80);
        // CB 80 0042
        gbc.setState(0x5f39, 0xb957, 0x9600, 0xf7d5, 0x51cd, 0x530b, 0x1, 0x1);
        gbc.writeMem(0x5f39, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xb957);
        EXPECT(gbc.pc(), 0x5f3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0043
        gbc.setState(0x624, 0x7ee4, 0x2610, 0x8461, 0x299a, 0xf576, 0x0, 0x1);
        gbc.writeMem(0x624, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x7ee4);
        EXPECT(gbc.pc(), 0x626);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0046
        gbc.setState(0x18ae, 0x5e1f, 0x8c10, 0x21bd, 0x6f88, 0x8188, 0x0, 0x0);
        gbc.writeMem(0x18ae, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x5e1f);
        EXPECT(gbc.pc(), 0x18b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0047
        gbc.setState(0x19be, 0x5db4, 0xb220, 0xf6ef, 0xf879, 0xde1a, 0x1, 0x0);
        gbc.writeMem(0x19be, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x5db4);
        EXPECT(gbc.pc(), 0x19c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0048
        gbc.setState(0xb2ab, 0xfbc3, 0xdf0, 0x40b, 0x4136, 0xa6f, 0x0, 0x0);
        gbc.writeMem(0xb2ab, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xfbc3);
        EXPECT(gbc.pc(), 0xb2ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2ab), 0xcb);
        EXPECT(gbc.readMem(0xb2ac), 0x80);
        // CB 80 0049
        gbc.setState(0x1da3, 0x80c4, 0x8680, 0x45, 0xd5f4, 0x37a2, 0x1, 0x0);
        gbc.writeMem(0x1da3, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x80c4);
        EXPECT(gbc.pc(), 0x1da5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 004A
        gbc.setState(0xb7ee, 0xec32, 0x2830, 0xdb67, 0xee71, 0x7baf, 0x1, 0x0);
        gbc.writeMem(0xb7ee, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xec32);
        EXPECT(gbc.pc(), 0xb7f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7ee), 0xcb);
        EXPECT(gbc.readMem(0xb7ef), 0x80);
        // CB 80 004B
        gbc.setState(0x1ef8, 0xb4ae, 0xd6f0, 0xe794, 0xe8a4, 0x81cd, 0x1, 0x1);
        gbc.writeMem(0x1ef8, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xb4ae);
        EXPECT(gbc.pc(), 0x1efa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 004C
        gbc.setState(0xcc3a, 0xfd94, 0x2150, 0x43e8, 0xa0a7, 0x9e52, 0x0, 0x1);
        gbc.writeMem(0xcc3a, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xfd94);
        EXPECT(gbc.pc(), 0xcc3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc3a), 0xcb);
        EXPECT(gbc.readMem(0xcc3b), 0x80);
        // CB 80 004D
        gbc.setState(0xcec3, 0xfa48, 0xf7e0, 0x3f66, 0xfa07, 0x7f48, 0x1, 0x0);
        gbc.writeMem(0xcec3, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xfa48);
        EXPECT(gbc.pc(), 0xcec5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcec3), 0xcb);
        EXPECT(gbc.readMem(0xcec4), 0x80);
        // CB 80 004E
        gbc.setState(0xb9da, 0x2580, 0xe4e0, 0xe9ad, 0x21f, 0x88e, 0x1, 0x1);
        gbc.writeMem(0xb9da, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x2580);
        EXPECT(gbc.pc(), 0xb9dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9da), 0xcb);
        EXPECT(gbc.readMem(0xb9db), 0x80);
        // CB 80 004F
        gbc.setState(0x140e, 0x9efc, 0xbb90, 0x88c5, 0x8c81, 0xab5d, 0x0, 0x1);
        gbc.writeMem(0x140e, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x9efc);
        EXPECT(gbc.pc(), 0x1410);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0050
        gbc.setState(0x2f00, 0x7809, 0x1820, 0xb9a8, 0x7e24, 0x621f, 0x1, 0x0);
        gbc.writeMem(0x2f00, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x7809);
        EXPECT(gbc.pc(), 0x2f02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0051
        gbc.setState(0x1a86, 0x5525, 0xcb60, 0xab33, 0x2a24, 0xf8d2, 0x0, 0x1);
        gbc.writeMem(0x1a86, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x5525);
        EXPECT(gbc.pc(), 0x1a88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0052
        gbc.setState(0xdfa4, 0x6fc5, 0x62f0, 0x1b3e, 0x6d03, 0x54cd, 0x1, 0x0);
        gbc.writeMem(0xdfa4, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x6fc5);
        EXPECT(gbc.pc(), 0xdfa6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfa4), 0xcb);
        EXPECT(gbc.readMem(0xdfa5), 0x80);
        // CB 80 0053
        gbc.setState(0x2feb, 0xe74, 0x97d0, 0x4637, 0x8f95, 0x6637, 0x1, 0x1);
        gbc.writeMem(0x2feb, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xe74);
        EXPECT(gbc.pc(), 0x2fed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0054
        gbc.setState(0xe40a, 0x742e, 0x19a0, 0x81c0, 0x5e0a, 0x2417, 0x0, 0x1);
        gbc.writeMem(0xe40a, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x742e);
        EXPECT(gbc.pc(), 0xe40c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe40a), 0xcb);
        EXPECT(gbc.readMem(0xe40b), 0x80);
        // CB 80 0055
        gbc.setState(0x435f, 0x8fba, 0x8ab0, 0x9e88, 0x1ed7, 0x645e, 0x1, 0x1);
        gbc.writeMem(0x435f, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x8fba);
        EXPECT(gbc.pc(), 0x4361);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0056
        gbc.setState(0x8d37, 0xdf5b, 0xc9e0, 0x45ea, 0x67ca, 0xd5ac, 0x1, 0x1);
        gbc.writeMem(0x8d37, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xdf5b);
        EXPECT(gbc.pc(), 0x8d39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d37), 0xcb);
        EXPECT(gbc.readMem(0x8d38), 0x80);
        // CB 80 0057
        gbc.setState(0x7a84, 0x80d6, 0x2530, 0x8b93, 0xc871, 0x88e8, 0x1, 0x1);
        gbc.writeMem(0x7a84, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x80d6);
        EXPECT(gbc.pc(), 0x7a86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0058
        gbc.setState(0x977a, 0x541b, 0xf910, 0xba3b, 0x4c4d, 0x71a8, 0x1, 0x1);
        gbc.writeMem(0x977a, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x541b);
        EXPECT(gbc.pc(), 0x977c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x977a), 0xcb);
        EXPECT(gbc.readMem(0x977b), 0x80);
        // CB 80 0059
        gbc.setState(0x20b, 0xe0c5, 0xeb30, 0xbbcb, 0x1754, 0xd609, 0x0, 0x0);
        gbc.writeMem(0x20b, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xe0c5);
        EXPECT(gbc.pc(), 0x20d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 005A
        gbc.setState(0xaee7, 0x2b87, 0xc680, 0x838c, 0xb00e, 0xd665, 0x1, 0x0);
        gbc.writeMem(0xaee7, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x2b87);
        EXPECT(gbc.pc(), 0xaee9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaee7), 0xcb);
        EXPECT(gbc.readMem(0xaee8), 0x80);
        // CB 80 005B
        gbc.setState(0x2784, 0xee2c, 0x9410, 0x2fdc, 0x6d8f, 0xd28d, 0x1, 0x1);
        gbc.writeMem(0x2784, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xee2c);
        EXPECT(gbc.pc(), 0x2786);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 005C
        gbc.setState(0xd403, 0xc, 0xaeb0, 0x8a4f, 0x316d, 0x8ec9, 0x1, 0x0);
        gbc.writeMem(0xd403, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xc);
        EXPECT(gbc.pc(), 0xd405);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd403), 0xcb);
        EXPECT(gbc.readMem(0xd404), 0x80);
        // CB 80 005D
        gbc.setState(0xd064, 0xef0a, 0x2ac0, 0x291, 0x37ba, 0x9aeb, 0x1, 0x1);
        gbc.writeMem(0xd064, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xef0a);
        EXPECT(gbc.pc(), 0xd066);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd064), 0xcb);
        EXPECT(gbc.readMem(0xd065), 0x80);
        // CB 80 005E
        gbc.setState(0x8bee, 0x2c21, 0xec90, 0x943b, 0x7cc, 0x7345, 0x1, 0x0);
        gbc.writeMem(0x8bee, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x2c21);
        EXPECT(gbc.pc(), 0x8bf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bee), 0xcb);
        EXPECT(gbc.readMem(0x8bef), 0x80);
        // CB 80 005F
        gbc.setState(0xe556, 0xf67d, 0x3470, 0x672c, 0xd180, 0x361e, 0x1, 0x1);
        gbc.writeMem(0xe556, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xf67d);
        EXPECT(gbc.pc(), 0xe558);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe556), 0xcb);
        EXPECT(gbc.readMem(0xe557), 0x80);
        // CB 80 0060
        gbc.setState(0x22fb, 0x65c6, 0xff90, 0xa131, 0x6643, 0xadd5, 0x1, 0x1);
        gbc.writeMem(0x22fb, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x65c6);
        EXPECT(gbc.pc(), 0x22fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0062
        gbc.setState(0x355c, 0x139f, 0x94a0, 0x11d9, 0x536, 0x7b2b, 0x0, 0x0);
        gbc.writeMem(0x355c, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x139f);
        EXPECT(gbc.pc(), 0x355e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0063
        gbc.setState(0x125a, 0x42a7, 0x3900, 0xe2e0, 0xe53c, 0x8d2b, 0x0, 0x1);
        gbc.writeMem(0x125a, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x42a7);
        EXPECT(gbc.pc(), 0x125c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0064
        gbc.setState(0x2a81, 0xec20, 0x8f90, 0xd565, 0xc4f5, 0x348f, 0x1, 0x0);
        gbc.writeMem(0x2a81, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xec20);
        EXPECT(gbc.pc(), 0x2a83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0066
        gbc.setState(0xcde6, 0x509d, 0x3360, 0x7fa4, 0x94c8, 0x3420, 0x0, 0x0);
        gbc.writeMem(0xcde6, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x509d);
        EXPECT(gbc.pc(), 0xcde8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcde6), 0xcb);
        EXPECT(gbc.readMem(0xcde7), 0x80);
        // CB 80 0068
        gbc.setState(0xe11, 0x20c2, 0x76c0, 0x9b6, 0xa6e8, 0x32af, 0x0, 0x0);
        gbc.writeMem(0xe11, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x20c2);
        EXPECT(gbc.pc(), 0xe13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0069
        gbc.setState(0x3234, 0x86f9, 0x2630, 0x6e52, 0x6812, 0x6f6b, 0x1, 0x1);
        gbc.writeMem(0x3234, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x86f9);
        EXPECT(gbc.pc(), 0x3236);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 006A
        gbc.setState(0x1b0, 0xeaff, 0x8dd0, 0x1c19, 0x3fa2, 0x7546, 0x0, 0x1);
        gbc.writeMem(0x1b0, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xeaff);
        EXPECT(gbc.pc(), 0x1b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 006B
        gbc.setState(0x86a9, 0x56f0, 0xf020, 0xc1b2, 0x556e, 0x127e, 0x0, 0x0);
        gbc.writeMem(0x86a9, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x56f0);
        EXPECT(gbc.pc(), 0x86ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86a9), 0xcb);
        EXPECT(gbc.readMem(0x86aa), 0x80);
        // CB 80 006C
        gbc.setState(0x4b1d, 0x9429, 0x8620, 0xddbb, 0x6403, 0xfd18, 0x0, 0x0);
        gbc.writeMem(0x4b1d, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x9429);
        EXPECT(gbc.pc(), 0x4b1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 006D
        gbc.setState(0x3db9, 0x3755, 0x54d0, 0xa67c, 0x8194, 0x97d2, 0x1, 0x1);
        gbc.writeMem(0x3db9, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x3755);
        EXPECT(gbc.pc(), 0x3dbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 006E
        gbc.setState(0xb645, 0xf269, 0xfc00, 0xfebe, 0xb4b4, 0x2d03, 0x0, 0x1);
        gbc.writeMem(0xb645, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xf269);
        EXPECT(gbc.pc(), 0xb647);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb645), 0xcb);
        EXPECT(gbc.readMem(0xb646), 0x80);
        // CB 80 006F
        gbc.setState(0x3cfc, 0xf900, 0xe200, 0x8264, 0xb273, 0xa1ed, 0x1, 0x1);
        gbc.writeMem(0x3cfc, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xf900);
        EXPECT(gbc.pc(), 0x3cfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0070
        gbc.setState(0x6804, 0x81db, 0x8010, 0x433a, 0x2d1e, 0x97f8, 0x1, 0x0);
        gbc.writeMem(0x6804, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x81db);
        EXPECT(gbc.pc(), 0x6806);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0071
        gbc.setState(0xa14e, 0xde22, 0xf220, 0xfaeb, 0xc60d, 0x20f2, 0x0, 0x1);
        gbc.writeMem(0xa14e, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xde22);
        EXPECT(gbc.pc(), 0xa150);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa14e), 0xcb);
        EXPECT(gbc.readMem(0xa14f), 0x80);
        // CB 80 0072
        gbc.setState(0xd219, 0x53b, 0x2d00, 0xae22, 0x66cf, 0xc3ba, 0x0, 0x0);
        gbc.writeMem(0xd219, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x53b);
        EXPECT(gbc.pc(), 0xd21b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd219), 0xcb);
        EXPECT(gbc.readMem(0xd21a), 0x80);
        // CB 80 0073
        gbc.setState(0xc7c5, 0x9054, 0xf2d0, 0x655f, 0xa09e, 0xce2a, 0x1, 0x1);
        gbc.writeMem(0xc7c5, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x9054);
        EXPECT(gbc.pc(), 0xc7c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7c5), 0xcb);
        EXPECT(gbc.readMem(0xc7c6), 0x80);
        // CB 80 0074
        gbc.setState(0x99a, 0x1c20, 0x8230, 0x59a9, 0xc13d, 0x8d3b, 0x0, 0x0);
        gbc.writeMem(0x99a, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x1c20);
        EXPECT(gbc.pc(), 0x99c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0075
        gbc.setState(0x85fd, 0xf1ef, 0x440, 0xb437, 0xada8, 0x9ecf, 0x1, 0x0);
        gbc.writeMem(0x85fd, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xf1ef);
        EXPECT(gbc.pc(), 0x85ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85fd), 0xcb);
        EXPECT(gbc.readMem(0x85fe), 0x80);
        // CB 80 0076
        gbc.setState(0x42d0, 0x175f, 0x96a0, 0x1a20, 0x1e5c, 0x87d5, 0x0, 0x0);
        gbc.writeMem(0x42d0, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x175f);
        EXPECT(gbc.pc(), 0x42d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0077
        gbc.setState(0x8fe4, 0x1973, 0x8cb0, 0x7253, 0x352d, 0x91e6, 0x0, 0x1);
        gbc.writeMem(0x8fe4, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x1973);
        EXPECT(gbc.pc(), 0x8fe6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fe4), 0xcb);
        EXPECT(gbc.readMem(0x8fe5), 0x80);
        // CB 80 0078
        gbc.setState(0x4f6e, 0x64e5, 0xea80, 0x6508, 0x6244, 0xb72d, 0x0, 0x1);
        gbc.writeMem(0x4f6e, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x64e5);
        EXPECT(gbc.pc(), 0x4f70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0079
        gbc.setState(0x6881, 0xa226, 0xd990, 0xb312, 0x6bef, 0xaa4d, 0x1, 0x0);
        gbc.writeMem(0x6881, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xa226);
        EXPECT(gbc.pc(), 0x6883);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 007A
        gbc.setState(0xb706, 0x1b83, 0xe5c0, 0xf313, 0x4077, 0xa3e8, 0x1, 0x0);
        gbc.writeMem(0xb706, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x1b83);
        EXPECT(gbc.pc(), 0xb708);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb706), 0xcb);
        EXPECT(gbc.readMem(0xb707), 0x80);
        // CB 80 007B
        gbc.setState(0xac9d, 0x647, 0xa0a0, 0x25a3, 0x8272, 0xa85c, 0x1, 0x1);
        gbc.writeMem(0xac9d, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x647);
        EXPECT(gbc.pc(), 0xac9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac9d), 0xcb);
        EXPECT(gbc.readMem(0xac9e), 0x80);
        // CB 80 007C
        gbc.setState(0x7077, 0x33a9, 0xe000, 0xff2a, 0x4d79, 0x8d89, 0x0, 0x0);
        gbc.writeMem(0x7077, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x33a9);
        EXPECT(gbc.pc(), 0x7079);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 007D
        gbc.setState(0x2e9a, 0xb063, 0xf840, 0xd691, 0x6b5c, 0xed89, 0x1, 0x1);
        gbc.writeMem(0x2e9a, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xb063);
        EXPECT(gbc.pc(), 0x2e9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 007E
        gbc.setState(0x6b75, 0x7601, 0xe860, 0x1482, 0xe349, 0xd73d, 0x0, 0x1);
        gbc.writeMem(0x6b75, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x7601);
        EXPECT(gbc.pc(), 0x6b77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 007F
        gbc.setState(0x6d70, 0x1956, 0xde00, 0x13bf, 0xf9d8, 0x4a53, 0x0, 0x0);
        gbc.writeMem(0x6d70, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x1956);
        EXPECT(gbc.pc(), 0x6d72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0080
        gbc.setState(0xcd83, 0xd5b8, 0x7500, 0x67f7, 0x80e8, 0xb6f6, 0x1, 0x0);
        gbc.writeMem(0xcd83, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xd5b8);
        EXPECT(gbc.pc(), 0xcd85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd83), 0xcb);
        EXPECT(gbc.readMem(0xcd84), 0x80);
        // CB 80 0081
        gbc.setState(0xa36b, 0xb383, 0xd2d0, 0x8d26, 0xabe1, 0x1630, 0x0, 0x1);
        gbc.writeMem(0xa36b, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xb383);
        EXPECT(gbc.pc(), 0xa36d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa36b), 0xcb);
        EXPECT(gbc.readMem(0xa36c), 0x80);
        // CB 80 0082
        gbc.setState(0xb5b7, 0x5b57, 0x27a0, 0x4b3c, 0x4ae0, 0xd9cc, 0x0, 0x0);
        gbc.writeMem(0xb5b7, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x5b57);
        EXPECT(gbc.pc(), 0xb5b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5b7), 0xcb);
        EXPECT(gbc.readMem(0xb5b8), 0x80);
        // CB 80 0083
        gbc.setState(0x69fd, 0xa619, 0xa60, 0x12c0, 0x2617, 0xa59a, 0x0, 0x0);
        gbc.writeMem(0x69fd, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xa619);
        EXPECT(gbc.pc(), 0x69ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0084
        gbc.setState(0x3ec, 0xddbe, 0x5900, 0x40cb, 0x58f8, 0x9792, 0x0, 0x1);
        gbc.writeMem(0x3ec, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xddbe);
        EXPECT(gbc.pc(), 0x3ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0085
        gbc.setState(0x1814, 0x78df, 0x1420, 0xfa7e, 0x332a, 0x20ff, 0x1, 0x0);
        gbc.writeMem(0x1814, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x78df);
        EXPECT(gbc.pc(), 0x1816);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0086
        gbc.setState(0x6cb5, 0xe3e3, 0x9bf0, 0x5728, 0x6a42, 0x5120, 0x1, 0x0);
        gbc.writeMem(0x6cb5, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xe3e3);
        EXPECT(gbc.pc(), 0x6cb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0087
        gbc.setState(0x5ac7, 0x13b3, 0xca90, 0xc54c, 0x2aca, 0x4db, 0x0, 0x1);
        gbc.writeMem(0x5ac7, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x13b3);
        EXPECT(gbc.pc(), 0x5ac9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0089
        gbc.setState(0xd98e, 0x241f, 0x8db0, 0xb678, 0x7d54, 0x48bf, 0x0, 0x0);
        gbc.writeMem(0xd98e, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x241f);
        EXPECT(gbc.pc(), 0xd990);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd98e), 0xcb);
        EXPECT(gbc.readMem(0xd98f), 0x80);
        // CB 80 008A
        gbc.setState(0xb010, 0x56a8, 0x5210, 0x9cdd, 0xdc55, 0x5b20, 0x0, 0x0);
        gbc.writeMem(0xb010, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x56a8);
        EXPECT(gbc.pc(), 0xb012);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb010), 0xcb);
        EXPECT(gbc.readMem(0xb011), 0x80);
        // CB 80 008B
        gbc.setState(0x40bf, 0x61b3, 0xb80, 0x7d37, 0xea64, 0x82a, 0x0, 0x1);
        gbc.writeMem(0x40bf, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x61b3);
        EXPECT(gbc.pc(), 0x40c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 008C
        gbc.setState(0xf04, 0xb392, 0x3170, 0xa262, 0x7930, 0xe134, 0x1, 0x0);
        gbc.writeMem(0xf04, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xb392);
        EXPECT(gbc.pc(), 0xf06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 008D
        gbc.setState(0x7a95, 0x55b, 0xb170, 0x71b7, 0x5b28, 0xa985, 0x0, 0x0);
        gbc.writeMem(0x7a95, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x55b);
        EXPECT(gbc.pc(), 0x7a97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 008E
        gbc.setState(0xdc05, 0xa14e, 0xaa80, 0x41ef, 0xcfbb, 0x4949, 0x1, 0x0);
        gbc.writeMem(0xdc05, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xa14e);
        EXPECT(gbc.pc(), 0xdc07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc05), 0xcb);
        EXPECT(gbc.readMem(0xdc06), 0x80);
        // CB 80 008F
        gbc.setState(0xdc5f, 0x7dc, 0xa8a0, 0x675d, 0xa8e2, 0xaa78, 0x0, 0x1);
        gbc.writeMem(0xdc5f, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x7dc);
        EXPECT(gbc.pc(), 0xdc61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc5f), 0xcb);
        EXPECT(gbc.readMem(0xdc60), 0x80);
        // CB 80 0090
        gbc.setState(0xac1, 0xb18e, 0xb8d0, 0x3a55, 0x1b19, 0x5d9f, 0x0, 0x1);
        gbc.writeMem(0xac1, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xb18e);
        EXPECT(gbc.pc(), 0xac3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0091
        gbc.setState(0x4f26, 0xc5be, 0xbcc0, 0x15ec, 0x1fd3, 0x1382, 0x0, 0x1);
        gbc.writeMem(0x4f26, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xc5be);
        EXPECT(gbc.pc(), 0x4f28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0093
        gbc.setState(0x8272, 0x3417, 0x45e0, 0xe682, 0x15b8, 0x896d, 0x1, 0x1);
        gbc.writeMem(0x8272, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x3417);
        EXPECT(gbc.pc(), 0x8274);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8272), 0xcb);
        EXPECT(gbc.readMem(0x8273), 0x80);
        // CB 80 0094
        gbc.setState(0xca79, 0xbb07, 0xdda0, 0xb247, 0xb4d2, 0x465c, 0x0, 0x0);
        gbc.writeMem(0xca79, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xbb07);
        EXPECT(gbc.pc(), 0xca7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca79), 0xcb);
        EXPECT(gbc.readMem(0xca7a), 0x80);
        // CB 80 0096
        gbc.setState(0x2df8, 0x72bc, 0x94b0, 0x9896, 0xeea4, 0x2480, 0x0, 0x1);
        gbc.writeMem(0x2df8, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x72bc);
        EXPECT(gbc.pc(), 0x2dfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0097
        gbc.setState(0x16f3, 0xf9b6, 0x9080, 0x7259, 0x3df9, 0x94b2, 0x0, 0x0);
        gbc.writeMem(0x16f3, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xf9b6);
        EXPECT(gbc.pc(), 0x16f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0098
        gbc.setState(0xbf8, 0xc69a, 0xd760, 0x9f71, 0x9fcf, 0x42a2, 0x1, 0x1);
        gbc.writeMem(0xbf8, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xc69a);
        EXPECT(gbc.pc(), 0xbfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0099
        gbc.setState(0x5768, 0x688f, 0xfc10, 0x2010, 0x2269, 0x773e, 0x1, 0x1);
        gbc.writeMem(0x5768, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x688f);
        EXPECT(gbc.pc(), 0x576a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 009A
        gbc.setState(0x24fe, 0x1778, 0xb10, 0x711d, 0x4637, 0xcd13, 0x1, 0x0);
        gbc.writeMem(0x24fe, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x1778);
        EXPECT(gbc.pc(), 0x2500);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 009B
        gbc.setState(0x3bc2, 0x3bc7, 0x5e50, 0x4d27, 0x91e2, 0x13c7, 0x0, 0x0);
        gbc.writeMem(0x3bc2, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x3bc7);
        EXPECT(gbc.pc(), 0x3bc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 009C
        gbc.setState(0x8765, 0xf26d, 0x8f20, 0x414c, 0xbe8, 0x149c, 0x0, 0x1);
        gbc.writeMem(0x8765, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xf26d);
        EXPECT(gbc.pc(), 0x8767);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8765), 0xcb);
        EXPECT(gbc.readMem(0x8766), 0x80);
        // CB 80 009D
        gbc.setState(0xddfb, 0x5d4e, 0x74b0, 0xf36b, 0xb317, 0x27c0, 0x1, 0x0);
        gbc.writeMem(0xddfb, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x5d4e);
        EXPECT(gbc.pc(), 0xddfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddfb), 0xcb);
        EXPECT(gbc.readMem(0xddfc), 0x80);
        // CB 80 009E
        gbc.setState(0x9630, 0xd212, 0xad90, 0xceb2, 0xdae2, 0x87b4, 0x0, 0x0);
        gbc.writeMem(0x9630, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xd212);
        EXPECT(gbc.pc(), 0x9632);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9630), 0xcb);
        EXPECT(gbc.readMem(0x9631), 0x80);
        // CB 80 00A0
        gbc.setState(0xba58, 0x9365, 0x4b50, 0x8eb3, 0xcebc, 0xd1cc, 0x0, 0x0);
        gbc.writeMem(0xba58, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x9365);
        EXPECT(gbc.pc(), 0xba5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba58), 0xcb);
        EXPECT(gbc.readMem(0xba59), 0x80);
        // CB 80 00A1
        gbc.setState(0x4d3e, 0xb0f8, 0xc430, 0x6a0e, 0xc0fd, 0xfd09, 0x1, 0x0);
        gbc.writeMem(0x4d3e, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xb0f8);
        EXPECT(gbc.pc(), 0x4d40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 00A2
        gbc.setState(0x226f, 0xbf5d, 0xe670, 0x3afa, 0x74c3, 0x9e4, 0x0, 0x0);
        gbc.writeMem(0x226f, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xbf5d);
        EXPECT(gbc.pc(), 0x2271);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 00A3
        gbc.setState(0x97be, 0x5cc, 0x31a0, 0x17a, 0xcf62, 0xd54a, 0x0, 0x1);
        gbc.writeMem(0x97be, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x5cc);
        EXPECT(gbc.pc(), 0x97c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97be), 0xcb);
        EXPECT(gbc.readMem(0x97bf), 0x80);
        // CB 80 00A5
        gbc.setState(0xe64c, 0x5f45, 0x90d0, 0xf1dd, 0x8ebc, 0xb6d, 0x1, 0x0);
        gbc.writeMem(0xe64c, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x5f45);
        EXPECT(gbc.pc(), 0xe64e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe64c), 0xcb);
        EXPECT(gbc.readMem(0xe64d), 0x80);
        // CB 80 00A6
        gbc.setState(0x7d7f, 0xe650, 0x2000, 0x67aa, 0x75a4, 0xe04a, 0x1, 0x1);
        gbc.writeMem(0x7d7f, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xe650);
        EXPECT(gbc.pc(), 0x7d81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 00A7
        gbc.setState(0x9597, 0xd044, 0x57d0, 0xbcfa, 0xd34e, 0x6fa2, 0x0, 0x1);
        gbc.writeMem(0x9597, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xd044);
        EXPECT(gbc.pc(), 0x9599);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9597), 0xcb);
        EXPECT(gbc.readMem(0x9598), 0x80);
        // CB 80 00A8
        gbc.setState(0x5b30, 0xf502, 0x9750, 0x4944, 0x2e3b, 0x109e, 0x0, 0x1);
        gbc.writeMem(0x5b30, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xf502);
        EXPECT(gbc.pc(), 0x5b32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 00A9
        gbc.setState(0x907a, 0x52bf, 0x2300, 0x5c7a, 0xcb9, 0x4c40, 0x1, 0x0);
        gbc.writeMem(0x907a, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x52bf);
        EXPECT(gbc.pc(), 0x907c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x907a), 0xcb);
        EXPECT(gbc.readMem(0x907b), 0x80);
        // CB 80 00AA
        gbc.setState(0x6a9d, 0x6ccf, 0xde60, 0xf955, 0xca07, 0xb133, 0x0, 0x1);
        gbc.writeMem(0x6a9d, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x6ccf);
        EXPECT(gbc.pc(), 0x6a9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 00AB
        gbc.setState(0x6fa5, 0x2ae4, 0x9820, 0xb4d2, 0x272a, 0x5ff3, 0x1, 0x0);
        gbc.writeMem(0x6fa5, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x2ae4);
        EXPECT(gbc.pc(), 0x6fa7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 00AC
        gbc.setState(0xe9fb, 0xa9e3, 0xba0, 0xace4, 0xa9de, 0x67e0, 0x1, 0x1);
        gbc.writeMem(0xe9fb, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xa9e3);
        EXPECT(gbc.pc(), 0xe9fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9fb), 0xcb);
        EXPECT(gbc.readMem(0xe9fc), 0x80);
        // CB 80 00AD
        gbc.setState(0x3937, 0x8887, 0x3000, 0xb067, 0x39d6, 0xf4cf, 0x0, 0x1);
        gbc.writeMem(0x3937, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x8887);
        EXPECT(gbc.pc(), 0x3939);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 00AE
        gbc.setState(0x5d19, 0x8c12, 0x66c0, 0xff9d, 0x7eab, 0xefa3, 0x0, 0x0);
        gbc.writeMem(0x5d19, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x8c12);
        EXPECT(gbc.pc(), 0x5d1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 00AF
        gbc.setState(0x7fad, 0xa74a, 0x9b40, 0xfd87, 0x3052, 0x3626, 0x0, 0x0);
        gbc.writeMem(0x7fad, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xa74a);
        EXPECT(gbc.pc(), 0x7faf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 00B0
        gbc.setState(0xe498, 0x6dfc, 0x9ae0, 0x219, 0xacc4, 0x9345, 0x1, 0x1);
        gbc.writeMem(0xe498, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x6dfc);
        EXPECT(gbc.pc(), 0xe49a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe498), 0xcb);
        EXPECT(gbc.readMem(0xe499), 0x80);
        // CB 80 00B1
        gbc.setState(0x9e19, 0x191, 0xda00, 0x44d4, 0x57f8, 0x8a9b, 0x0, 0x1);
        gbc.writeMem(0x9e19, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x191);
        EXPECT(gbc.pc(), 0x9e1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e19), 0xcb);
        EXPECT(gbc.readMem(0x9e1a), 0x80);
        // CB 80 00B2
        gbc.setState(0x37ab, 0xf6c3, 0x1640, 0x4e08, 0xa635, 0x88b2, 0x1, 0x1);
        gbc.writeMem(0x37ab, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xf6c3);
        EXPECT(gbc.pc(), 0x37ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 00B4
        gbc.setState(0x2173, 0xd73d, 0x9770, 0xba9b, 0xcc89, 0xf913, 0x0, 0x0);
        gbc.writeMem(0x2173, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xd73d);
        EXPECT(gbc.pc(), 0x2175);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 00B5
        gbc.setState(0x8b43, 0x6daa, 0xa240, 0x6e3c, 0xfe5d, 0xf4eb, 0x1, 0x0);
        gbc.writeMem(0x8b43, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x6daa);
        EXPECT(gbc.pc(), 0x8b45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b43), 0xcb);
        EXPECT(gbc.readMem(0x8b44), 0x80);
        // CB 80 00B6
        gbc.setState(0x3ffa, 0x2280, 0xb660, 0x64bd, 0x7b91, 0xd106, 0x1, 0x0);
        gbc.writeMem(0x3ffa, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x2280);
        EXPECT(gbc.pc(), 0x3ffc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 00B7
        gbc.setState(0x160d, 0x1fc4, 0x1610, 0xc6ec, 0x8c52, 0xb236, 0x0, 0x0);
        gbc.writeMem(0x160d, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x1fc4);
        EXPECT(gbc.pc(), 0x160f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 00B8
        gbc.setState(0x8ac0, 0x2a9c, 0x7e50, 0xb9b3, 0xd49f, 0xb6e5, 0x1, 0x1);
        gbc.writeMem(0x8ac0, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x2a9c);
        EXPECT(gbc.pc(), 0x8ac2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ac0), 0xcb);
        EXPECT(gbc.readMem(0x8ac1), 0x80);
        // CB 80 00B9
        gbc.setState(0x9846, 0xaab7, 0x20c0, 0x95aa, 0xdb4f, 0x76d1, 0x1, 0x0);
        gbc.writeMem(0x9846, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xaab7);
        EXPECT(gbc.pc(), 0x9848);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9846), 0xcb);
        EXPECT(gbc.readMem(0x9847), 0x80);
        // CB 80 00BA
        gbc.setState(0x1580, 0x962e, 0xb910, 0x6f93, 0xc53, 0x7a80, 0x1, 0x0);
        gbc.writeMem(0x1580, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x962e);
        EXPECT(gbc.pc(), 0x1582);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 00BB
        gbc.setState(0x137, 0x978d, 0x7390, 0x475d, 0x665b, 0x1e91, 0x1, 0x0);
        gbc.writeMem(0x137, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x978d);
        EXPECT(gbc.pc(), 0x139);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 00BC
        gbc.setState(0x5205, 0xba09, 0x8760, 0x975a, 0x7602, 0x818, 0x0, 0x0);
        gbc.writeMem(0x5205, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xba09);
        EXPECT(gbc.pc(), 0x5207);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 00BD
        gbc.setState(0x58aa, 0x1ada, 0x38b0, 0xa56f, 0xfb2, 0x447e, 0x0, 0x0);
        gbc.writeMem(0x58aa, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x1ada);
        EXPECT(gbc.pc(), 0x58ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 00BE
        gbc.setState(0xa0e1, 0x516, 0xd9d0, 0xb73f, 0x4cc6, 0x4f53, 0x0, 0x0);
        gbc.writeMem(0xa0e1, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x516);
        EXPECT(gbc.pc(), 0xa0e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0e1), 0xcb);
        EXPECT(gbc.readMem(0xa0e2), 0x80);
        // CB 80 00BF
        gbc.setState(0x6592, 0xfdd, 0x1a0, 0xaa6e, 0xb665, 0xce3b, 0x0, 0x1);
        gbc.writeMem(0x6592, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xfdd);
        EXPECT(gbc.pc(), 0x6594);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 00C0
        gbc.setState(0xc692, 0x5fe0, 0xe270, 0xb29e, 0x3a8e, 0x6542, 0x0, 0x0);
        gbc.writeMem(0xc692, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x5fe0);
        EXPECT(gbc.pc(), 0xc694);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc692), 0xcb);
        EXPECT(gbc.readMem(0xc693), 0x80);
        // CB 80 00C1
        gbc.setState(0xbc3b, 0xd92e, 0xaf60, 0xdf87, 0x5862, 0x9426, 0x0, 0x0);
        gbc.writeMem(0xbc3b, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xd92e);
        EXPECT(gbc.pc(), 0xbc3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc3b), 0xcb);
        EXPECT(gbc.readMem(0xbc3c), 0x80);
        // CB 80 00C2
        gbc.setState(0x1b2a, 0xfed4, 0x2070, 0xe5e0, 0xd33b, 0x7f99, 0x0, 0x0);
        gbc.writeMem(0x1b2a, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xfed4);
        EXPECT(gbc.pc(), 0x1b2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 00C3
        gbc.setState(0x9d9a, 0x31b7, 0x2740, 0x9c5d, 0xba3, 0x5ac2, 0x0, 0x1);
        gbc.writeMem(0x9d9a, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x31b7);
        EXPECT(gbc.pc(), 0x9d9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d9a), 0xcb);
        EXPECT(gbc.readMem(0x9d9b), 0x80);
        // CB 80 00C4
        gbc.setState(0x13de, 0xcac6, 0x6de0, 0x3b71, 0x4664, 0xb157, 0x0, 0x1);
        gbc.writeMem(0x13de, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xcac6);
        EXPECT(gbc.pc(), 0x13e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 00C5
        gbc.setState(0x9d8, 0x1ac0, 0xa720, 0x1369, 0x1855, 0x3289, 0x1, 0x0);
        gbc.writeMem(0x9d8, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x1ac0);
        EXPECT(gbc.pc(), 0x9da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 00C6
        gbc.setState(0x4a55, 0x951d, 0xd500, 0x46fc, 0xf870, 0xfab, 0x1, 0x0);
        gbc.writeMem(0x4a55, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x951d);
        EXPECT(gbc.pc(), 0x4a57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 00C9
        gbc.setState(0x1578, 0x6b7e, 0xb540, 0xb922, 0x96ee, 0xe5db, 0x0, 0x0);
        gbc.writeMem(0x1578, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x6b7e);
        EXPECT(gbc.pc(), 0x157a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 00CA
        gbc.setState(0x41c7, 0x5828, 0x25b0, 0xea97, 0xebc, 0xc78a, 0x0, 0x1);
        gbc.writeMem(0x41c7, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x5828);
        EXPECT(gbc.pc(), 0x41c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 00CB
        gbc.setState(0x1dc3, 0xc53c, 0xf390, 0xdef3, 0xebd6, 0x360a, 0x1, 0x1);
        gbc.writeMem(0x1dc3, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xc53c);
        EXPECT(gbc.pc(), 0x1dc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 00CC
        gbc.setState(0xcdfb, 0xff04, 0xe6f0, 0x71c7, 0xae0c, 0xdb3b, 0x0, 0x1);
        gbc.writeMem(0xcdfb, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xff04);
        EXPECT(gbc.pc(), 0xcdfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdfb), 0xcb);
        EXPECT(gbc.readMem(0xcdfc), 0x80);
        // CB 80 00CD
        gbc.setState(0xca8f, 0xef28, 0x1290, 0xfc7f, 0x8648, 0x9475, 0x1, 0x0);
        gbc.writeMem(0xca8f, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xef28);
        EXPECT(gbc.pc(), 0xca91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca8f), 0xcb);
        EXPECT(gbc.readMem(0xca90), 0x80);
        // CB 80 00CE
        gbc.setState(0xcde9, 0x248, 0x4d70, 0x56f8, 0x5fd0, 0x11e8, 0x0, 0x1);
        gbc.writeMem(0xcde9, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x248);
        EXPECT(gbc.pc(), 0xcdeb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcde9), 0xcb);
        EXPECT(gbc.readMem(0xcdea), 0x80);
        // CB 80 00CF
        gbc.setState(0x48b0, 0x70e2, 0xfd50, 0x1120, 0x3ce1, 0xcab6, 0x1, 0x1);
        gbc.writeMem(0x48b0, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x70e2);
        EXPECT(gbc.pc(), 0x48b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 00D0
        gbc.setState(0x6f91, 0xc6f2, 0x26f0, 0xadeb, 0x4574, 0x38b1, 0x0, 0x0);
        gbc.writeMem(0x6f91, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xc6f2);
        EXPECT(gbc.pc(), 0x6f93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 00D1
        gbc.setState(0x378e, 0x2bf7, 0x6ec0, 0x6f83, 0xa9bb, 0x588, 0x0, 0x1);
        gbc.writeMem(0x378e, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x2bf7);
        EXPECT(gbc.pc(), 0x3790);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 00D2
        gbc.setState(0xb456, 0xf1c2, 0xa940, 0x31a0, 0xf892, 0xc414, 0x1, 0x1);
        gbc.writeMem(0xb456, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xf1c2);
        EXPECT(gbc.pc(), 0xb458);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb456), 0xcb);
        EXPECT(gbc.readMem(0xb457), 0x80);
        // CB 80 00D3
        gbc.setState(0x8722, 0x9ed4, 0x5300, 0xffd1, 0xaf1d, 0x56ce, 0x0, 0x1);
        gbc.writeMem(0x8722, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x9ed4);
        EXPECT(gbc.pc(), 0x8724);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8722), 0xcb);
        EXPECT(gbc.readMem(0x8723), 0x80);
        // CB 80 00D5
        gbc.setState(0x3c4a, 0x80e6, 0x8e10, 0x41fe, 0xcb19, 0x1864, 0x0, 0x1);
        gbc.writeMem(0x3c4a, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x80e6);
        EXPECT(gbc.pc(), 0x3c4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 00D6
        gbc.setState(0x2f69, 0xa1fa, 0xa860, 0x7c, 0x8989, 0xebd7, 0x0, 0x0);
        gbc.writeMem(0x2f69, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xa1fa);
        EXPECT(gbc.pc(), 0x2f6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 00D7
        gbc.setState(0xc0e5, 0x60ac, 0x5040, 0x3a2b, 0x6d66, 0x81d7, 0x0, 0x0);
        gbc.writeMem(0xc0e5, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x60ac);
        EXPECT(gbc.pc(), 0xc0e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0e5), 0xcb);
        EXPECT(gbc.readMem(0xc0e6), 0x80);
        // CB 80 00D8
        gbc.setState(0x79ef, 0x11c6, 0x60e0, 0x334, 0x4997, 0xd767, 0x1, 0x0);
        gbc.writeMem(0x79ef, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x11c6);
        EXPECT(gbc.pc(), 0x79f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 00D9
        gbc.setState(0xd70c, 0x42b7, 0x7fe0, 0xf538, 0x6e4a, 0x4fc3, 0x0, 0x0);
        gbc.writeMem(0xd70c, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x42b7);
        EXPECT(gbc.pc(), 0xd70e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd70c), 0xcb);
        EXPECT(gbc.readMem(0xd70d), 0x80);
        // CB 80 00DA
        gbc.setState(0x378a, 0x7321, 0xe340, 0xfe8f, 0x767, 0xfb31, 0x0, 0x1);
        gbc.writeMem(0x378a, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x7321);
        EXPECT(gbc.pc(), 0x378c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 00DB
        gbc.setState(0xb4e6, 0xa8ba, 0x6c50, 0xd28a, 0x3a46, 0xf271, 0x1, 0x0);
        gbc.writeMem(0xb4e6, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xa8ba);
        EXPECT(gbc.pc(), 0xb4e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4e6), 0xcb);
        EXPECT(gbc.readMem(0xb4e7), 0x80);
        // CB 80 00DC
        gbc.setState(0x2712, 0xee33, 0xae40, 0x80e0, 0x6df8, 0x8702, 0x0, 0x0);
        gbc.writeMem(0x2712, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xee33);
        EXPECT(gbc.pc(), 0x2714);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 00DD
        gbc.setState(0xabb4, 0xbc90, 0xcc50, 0x2cef, 0x5d95, 0xf1bb, 0x0, 0x0);
        gbc.writeMem(0xabb4, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xbc90);
        EXPECT(gbc.pc(), 0xabb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabb4), 0xcb);
        EXPECT(gbc.readMem(0xabb5), 0x80);
        // CB 80 00DE
        gbc.setState(0x4a9a, 0x4df7, 0x52c0, 0xd977, 0xc2ae, 0x428f, 0x0, 0x0);
        gbc.writeMem(0x4a9a, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x4df7);
        EXPECT(gbc.pc(), 0x4a9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 00DF
        gbc.setState(0xabee, 0x98e9, 0xbdc0, 0xa18e, 0x7b10, 0xc12e, 0x1, 0x1);
        gbc.writeMem(0xabee, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x98e9);
        EXPECT(gbc.pc(), 0xabf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabee), 0xcb);
        EXPECT(gbc.readMem(0xabef), 0x80);
        // CB 80 00E1
        gbc.setState(0x2a45, 0xff47, 0xee70, 0x6084, 0x513e, 0xb55a, 0x0, 0x0);
        gbc.writeMem(0x2a45, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xff47);
        EXPECT(gbc.pc(), 0x2a47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 00E2
        gbc.setState(0x1dbf, 0x36a8, 0x6f20, 0xb343, 0xe473, 0x9311, 0x0, 0x1);
        gbc.writeMem(0x1dbf, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x36a8);
        EXPECT(gbc.pc(), 0x1dc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 00E3
        gbc.setState(0x4c11, 0xedeb, 0xa580, 0x72b4, 0x401b, 0xea2b, 0x0, 0x0);
        gbc.writeMem(0x4c11, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xedeb);
        EXPECT(gbc.pc(), 0x4c13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 00E4
        gbc.setState(0x84bb, 0x9355, 0x3d20, 0x4512, 0xd471, 0xf542, 0x1, 0x0);
        gbc.writeMem(0x84bb, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x9355);
        EXPECT(gbc.pc(), 0x84bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84bb), 0xcb);
        EXPECT(gbc.readMem(0x84bc), 0x80);
        // CB 80 00E5
        gbc.setState(0xd12a, 0xa518, 0xdb20, 0xcb79, 0x8c7c, 0x19e3, 0x1, 0x1);
        gbc.writeMem(0xd12a, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xa518);
        EXPECT(gbc.pc(), 0xd12c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd12a), 0xcb);
        EXPECT(gbc.readMem(0xd12b), 0x80);
        // CB 80 00E6
        gbc.setState(0xc686, 0xbc3a, 0xe8c0, 0xcb12, 0xa20d, 0xf0e3, 0x0, 0x1);
        gbc.writeMem(0xc686, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xbc3a);
        EXPECT(gbc.pc(), 0xc688);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc686), 0xcb);
        EXPECT(gbc.readMem(0xc687), 0x80);
        // CB 80 00E7
        gbc.setState(0x5f92, 0xf8b6, 0x4970, 0xb2ff, 0x122, 0xd506, 0x0, 0x1);
        gbc.writeMem(0x5f92, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xf8b6);
        EXPECT(gbc.pc(), 0x5f94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 00E8
        gbc.setState(0x9668, 0x704c, 0x6d50, 0xd104, 0x1459, 0xfacb, 0x0, 0x1);
        gbc.writeMem(0x9668, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x704c);
        EXPECT(gbc.pc(), 0x966a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9668), 0xcb);
        EXPECT(gbc.readMem(0x9669), 0x80);
        // CB 80 00E9
        gbc.setState(0x79eb, 0x72dd, 0xec80, 0xeef7, 0xd5ca, 0x8200, 0x1, 0x1);
        gbc.writeMem(0x79eb, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x72dd);
        EXPECT(gbc.pc(), 0x79ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 00EA
        gbc.setState(0x48a3, 0x4556, 0x9920, 0xd373, 0x7165, 0x5efc, 0x0, 0x1);
        gbc.writeMem(0x48a3, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x4556);
        EXPECT(gbc.pc(), 0x48a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 00EB
        gbc.setState(0x9805, 0x5db0, 0x740, 0x5b51, 0x7d08, 0x3c4a, 0x0, 0x1);
        gbc.writeMem(0x9805, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x5db0);
        EXPECT(gbc.pc(), 0x9807);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9805), 0xcb);
        EXPECT(gbc.readMem(0x9806), 0x80);
        // CB 80 00EC
        gbc.setState(0x2730, 0x9d85, 0x3200, 0xdd07, 0x8368, 0x290d, 0x1, 0x0);
        gbc.writeMem(0x2730, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x9d85);
        EXPECT(gbc.pc(), 0x2732);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 00ED
        gbc.setState(0xd72c, 0x5a1c, 0x6020, 0x3616, 0x2ba4, 0x2f6b, 0x1, 0x1);
        gbc.writeMem(0xd72c, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x5a1c);
        EXPECT(gbc.pc(), 0xd72e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd72c), 0xcb);
        EXPECT(gbc.readMem(0xd72d), 0x80);
        // CB 80 00EE
        gbc.setState(0x19f1, 0x3f32, 0x37d0, 0x8a38, 0x21cc, 0xd53b, 0x1, 0x1);
        gbc.writeMem(0x19f1, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x3f32);
        EXPECT(gbc.pc(), 0x19f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 00EF
        gbc.setState(0xc8cf, 0x2ff8, 0x1890, 0xc295, 0xaef1, 0xefb5, 0x0, 0x0);
        gbc.writeMem(0xc8cf, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x2ff8);
        EXPECT(gbc.pc(), 0xc8d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8cf), 0xcb);
        EXPECT(gbc.readMem(0xc8d0), 0x80);
        // CB 80 00F1
        gbc.setState(0xaea, 0x5fc1, 0xe0f0, 0x6179, 0xebdf, 0xac8a, 0x1, 0x1);
        gbc.writeMem(0xaea, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x5fc1);
        EXPECT(gbc.pc(), 0xaec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 00F2
        gbc.setState(0xb5e3, 0xab77, 0xc6a0, 0x938a, 0xd2ba, 0xa1a9, 0x0, 0x0);
        gbc.writeMem(0xb5e3, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xab77);
        EXPECT(gbc.pc(), 0xb5e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5e3), 0xcb);
        EXPECT(gbc.readMem(0xb5e4), 0x80);
        // CB 80 00F3
        gbc.setState(0x5c73, 0x2232, 0xd000, 0xeb4a, 0xd5e, 0x6bfe, 0x0, 0x0);
        gbc.writeMem(0x5c73, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x2232);
        EXPECT(gbc.pc(), 0x5c75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 00F4
        gbc.setState(0x292c, 0x77e0, 0x6c0, 0x91bf, 0x5d12, 0xe41d, 0x1, 0x0);
        gbc.writeMem(0x292c, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x77e0);
        EXPECT(gbc.pc(), 0x292e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 00F5
        gbc.setState(0x891c, 0x1e45, 0xade0, 0x2a3c, 0xeb4d, 0xecf8, 0x0, 0x1);
        gbc.writeMem(0x891c, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x1e45);
        EXPECT(gbc.pc(), 0x891e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x891c), 0xcb);
        EXPECT(gbc.readMem(0x891d), 0x80);
        // CB 80 00F6
        gbc.setState(0x3eff, 0xecd2, 0x2c0, 0x2fbb, 0xf9a6, 0xca38, 0x0, 0x0);
        gbc.writeMem(0x3eff, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xecd2);
        EXPECT(gbc.pc(), 0x3f01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 00F7
        gbc.setState(0xc0c1, 0xf64d, 0xd90, 0x680c, 0xe334, 0x6c82, 0x0, 0x0);
        gbc.writeMem(0xc0c1, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xf64d);
        EXPECT(gbc.pc(), 0xc0c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0c1), 0xcb);
        EXPECT(gbc.readMem(0xc0c2), 0x80);
        // CB 80 00F8
        gbc.setState(0x63a6, 0xde08, 0xb4f0, 0xc83e, 0xdf5a, 0x7248, 0x1, 0x1);
        gbc.writeMem(0x63a6, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xde08);
        EXPECT(gbc.pc(), 0x63a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 00F9
        gbc.setState(0xb9f4, 0x4c0a, 0xc420, 0xe3b4, 0xdb61, 0x6526, 0x0, 0x1);
        gbc.writeMem(0xb9f4, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x4c0a);
        EXPECT(gbc.pc(), 0xb9f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9f4), 0xcb);
        EXPECT(gbc.readMem(0xb9f5), 0x80);
        // CB 80 00FA
        gbc.setState(0x6b97, 0xbe6, 0x5e80, 0xd8a9, 0xc33e, 0x97ac, 0x0, 0x0);
        gbc.writeMem(0x6b97, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xbe6);
        EXPECT(gbc.pc(), 0x6b99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 00FB
        gbc.setState(0x72a5, 0x911e, 0xce80, 0x1f47, 0xec0d, 0xc68d, 0x1, 0x0);
        gbc.writeMem(0x72a5, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x911e);
        EXPECT(gbc.pc(), 0x72a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 00FC
        gbc.setState(0xc974, 0x5369, 0x22a0, 0x4815, 0x1651, 0x359e, 0x0, 0x1);
        gbc.writeMem(0xc974, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x5369);
        EXPECT(gbc.pc(), 0xc976);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc974), 0xcb);
        EXPECT(gbc.readMem(0xc975), 0x80);
        // CB 80 00FD
        gbc.setState(0xbb17, 0xd376, 0xe730, 0x3557, 0x4313, 0x4f71, 0x0, 0x1);
        gbc.writeMem(0xbb17, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xd376);
        EXPECT(gbc.pc(), 0xbb19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb17), 0xcb);
        EXPECT(gbc.readMem(0xbb18), 0x80);
        // CB 80 00FE
        gbc.setState(0x8f01, 0x8bab, 0x5d10, 0x2d19, 0x96d3, 0xc19d, 0x0, 0x0);
        gbc.writeMem(0x8f01, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x8bab);
        EXPECT(gbc.pc(), 0x8f03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f01), 0xcb);
        EXPECT(gbc.readMem(0x8f02), 0x80);
        // CB 80 00FF
        gbc.setState(0x47ee, 0xe8da, 0x5e80, 0x429, 0x1fa6, 0xc3a9, 0x0, 0x1);
        gbc.writeMem(0x47ee, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xe8da);
        EXPECT(gbc.pc(), 0x47f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0100
        gbc.setState(0x65c6, 0xea07, 0x2b10, 0xcd30, 0x17b5, 0x6d74, 0x1, 0x0);
        gbc.writeMem(0x65c6, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xea07);
        EXPECT(gbc.pc(), 0x65c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0102
        gbc.setState(0x554b, 0x245e, 0x7560, 0x517a, 0xbb4a, 0xb758, 0x0, 0x1);
        gbc.writeMem(0x554b, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x245e);
        EXPECT(gbc.pc(), 0x554d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0103
        gbc.setState(0x17f, 0xf80b, 0x3c60, 0xed90, 0x184d, 0x2276, 0x1, 0x0);
        gbc.writeMem(0x17f, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xf80b);
        EXPECT(gbc.pc(), 0x181);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0104
        gbc.setState(0x492e, 0x39f, 0x2ae0, 0xf092, 0x333, 0x66ee, 0x0, 0x1);
        gbc.writeMem(0x492e, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x39f);
        EXPECT(gbc.pc(), 0x4930);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0105
        gbc.setState(0x23ea, 0x3ef1, 0xa4a0, 0xd2e9, 0x26c, 0x98ad, 0x0, 0x1);
        gbc.writeMem(0x23ea, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x3ef1);
        EXPECT(gbc.pc(), 0x23ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0106
        gbc.setState(0x3d5c, 0xedec, 0xc7b0, 0x3121, 0xdff4, 0xf367, 0x1, 0x0);
        gbc.writeMem(0x3d5c, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xedec);
        EXPECT(gbc.pc(), 0x3d5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0107
        gbc.setState(0x5aae, 0xd83, 0x5250, 0xd355, 0xde61, 0x588, 0x1, 0x1);
        gbc.writeMem(0x5aae, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xd83);
        EXPECT(gbc.pc(), 0x5ab0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0108
        gbc.setState(0x67a2, 0xe4f7, 0xac60, 0x2f12, 0xba98, 0x99b1, 0x0, 0x0);
        gbc.writeMem(0x67a2, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xe4f7);
        EXPECT(gbc.pc(), 0x67a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0109
        gbc.setState(0x3ac2, 0x7e0d, 0x8400, 0x3bad, 0x3244, 0x70fc, 0x0, 0x1);
        gbc.writeMem(0x3ac2, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x7e0d);
        EXPECT(gbc.pc(), 0x3ac4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 010B
        gbc.setState(0x1037, 0xbb16, 0x5e00, 0x2454, 0x4c78, 0xbfff, 0x0, 0x0);
        gbc.writeMem(0x1037, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xbb16);
        EXPECT(gbc.pc(), 0x1039);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 010C
        gbc.setState(0x6e5f, 0xee93, 0x7180, 0x2631, 0x6842, 0xc1bd, 0x1, 0x0);
        gbc.writeMem(0x6e5f, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xee93);
        EXPECT(gbc.pc(), 0x6e61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 010D
        gbc.setState(0xb651, 0x397b, 0xc5d0, 0x45e0, 0x8e34, 0x34a, 0x1, 0x0);
        gbc.writeMem(0xb651, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x397b);
        EXPECT(gbc.pc(), 0xb653);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb651), 0xcb);
        EXPECT(gbc.readMem(0xb652), 0x80);
        // CB 80 010E
        gbc.setState(0x139b, 0xf778, 0x34b0, 0x1287, 0xbc59, 0xcf31, 0x0, 0x1);
        gbc.writeMem(0x139b, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xf778);
        EXPECT(gbc.pc(), 0x139d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 010F
        gbc.setState(0xef14, 0xa694, 0x73d0, 0x1baa, 0x7eb2, 0x47a8, 0x1, 0x1);
        gbc.writeMem(0xef14, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xa694);
        EXPECT(gbc.pc(), 0xef16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef14), 0xcb);
        EXPECT(gbc.readMem(0xef15), 0x80);
        // CB 80 0110
        gbc.setState(0x54e, 0x1835, 0x6ab0, 0xcf32, 0xc0d3, 0xab58, 0x0, 0x1);
        gbc.writeMem(0x54e, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x1835);
        EXPECT(gbc.pc(), 0x550);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0111
        gbc.setState(0xe8ee, 0xef4f, 0x69b0, 0xd822, 0xa9af, 0x22c, 0x1, 0x1);
        gbc.writeMem(0xe8ee, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xef4f);
        EXPECT(gbc.pc(), 0xe8f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8ee), 0xcb);
        EXPECT(gbc.readMem(0xe8ef), 0x80);
        // CB 80 0112
        gbc.setState(0x43c0, 0xa02, 0x8800, 0x435d, 0x4fbe, 0x44a8, 0x1, 0x1);
        gbc.writeMem(0x43c0, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xa02);
        EXPECT(gbc.pc(), 0x43c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0113
        gbc.setState(0x3b78, 0xc336, 0x2d90, 0x19b, 0x8a1f, 0xb7e3, 0x1, 0x0);
        gbc.writeMem(0x3b78, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xc336);
        EXPECT(gbc.pc(), 0x3b7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0114
        gbc.setState(0xdba6, 0x219a, 0x21f0, 0x93f0, 0x9b45, 0xce23, 0x0, 0x1);
        gbc.writeMem(0xdba6, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x219a);
        EXPECT(gbc.pc(), 0xdba8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdba6), 0xcb);
        EXPECT(gbc.readMem(0xdba7), 0x80);
        // CB 80 0115
        gbc.setState(0xbe24, 0x452, 0xb740, 0xcb50, 0x340, 0x1eeb, 0x0, 0x0);
        gbc.writeMem(0xbe24, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x452);
        EXPECT(gbc.pc(), 0xbe26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe24), 0xcb);
        EXPECT(gbc.readMem(0xbe25), 0x80);
        // CB 80 0116
        gbc.setState(0x27f9, 0x344c, 0x3210, 0x8f81, 0xd9cb, 0xf19d, 0x0, 0x0);
        gbc.writeMem(0x27f9, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x344c);
        EXPECT(gbc.pc(), 0x27fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0117
        gbc.setState(0x6b4a, 0x4ed7, 0xeed0, 0xa1a2, 0xd617, 0xdc66, 0x0, 0x0);
        gbc.writeMem(0x6b4a, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x4ed7);
        EXPECT(gbc.pc(), 0x6b4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0118
        gbc.setState(0x8e10, 0x9e87, 0x9c50, 0x735, 0x6682, 0x15f3, 0x1, 0x1);
        gbc.writeMem(0x8e10, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x9e87);
        EXPECT(gbc.pc(), 0x8e12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e10), 0xcb);
        EXPECT(gbc.readMem(0x8e11), 0x80);
        // CB 80 0119
        gbc.setState(0xae6b, 0x1e06, 0x8b0, 0x586c, 0x5db3, 0x294b, 0x0, 0x1);
        gbc.writeMem(0xae6b, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x1e06);
        EXPECT(gbc.pc(), 0xae6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae6b), 0xcb);
        EXPECT(gbc.readMem(0xae6c), 0x80);
        // CB 80 011A
        gbc.setState(0xdf8a, 0x6b04, 0x8e70, 0xb4f6, 0x34ca, 0x6bea, 0x0, 0x1);
        gbc.writeMem(0xdf8a, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x6b04);
        EXPECT(gbc.pc(), 0xdf8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf8a), 0xcb);
        EXPECT(gbc.readMem(0xdf8b), 0x80);
        // CB 80 011C
        gbc.setState(0x466f, 0xabc4, 0x2060, 0x97a9, 0x421f, 0x89b7, 0x1, 0x1);
        gbc.writeMem(0x466f, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xabc4);
        EXPECT(gbc.pc(), 0x4671);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 011D
        gbc.setState(0x3e99, 0xd9f8, 0x5da0, 0x8a37, 0x9273, 0x135d, 0x1, 0x1);
        gbc.writeMem(0x3e99, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xd9f8);
        EXPECT(gbc.pc(), 0x3e9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 011E
        gbc.setState(0x7419, 0x8240, 0x5660, 0x6136, 0xd211, 0x77cc, 0x1, 0x1);
        gbc.writeMem(0x7419, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x8240);
        EXPECT(gbc.pc(), 0x741b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 011F
        gbc.setState(0x5d04, 0xe5a1, 0x53b0, 0x59de, 0x4fe6, 0x2ab5, 0x0, 0x0);
        gbc.writeMem(0x5d04, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xe5a1);
        EXPECT(gbc.pc(), 0x5d06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0120
        gbc.setState(0xd7db, 0xb3d7, 0x8e0, 0x2218, 0x8e1a, 0x1241, 0x0, 0x0);
        gbc.writeMem(0xd7db, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xb3d7);
        EXPECT(gbc.pc(), 0xd7dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7db), 0xcb);
        EXPECT(gbc.readMem(0xd7dc), 0x80);
        // CB 80 0121
        gbc.setState(0x834c, 0xb67d, 0x3a80, 0x1b13, 0x65d, 0xb707, 0x1, 0x0);
        gbc.writeMem(0x834c, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xb67d);
        EXPECT(gbc.pc(), 0x834e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x834c), 0xcb);
        EXPECT(gbc.readMem(0x834d), 0x80);
        // CB 80 0122
        gbc.setState(0xa656, 0x340f, 0xd0, 0xa0a0, 0xaad4, 0xe8d0, 0x0, 0x0);
        gbc.writeMem(0xa656, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x340f);
        EXPECT(gbc.pc(), 0xa658);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa656), 0xcb);
        EXPECT(gbc.readMem(0xa657), 0x80);
        // CB 80 0123
        gbc.setState(0xe3f6, 0x5bb1, 0xfdb0, 0x5a02, 0xc63, 0xe654, 0x1, 0x1);
        gbc.writeMem(0xe3f6, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x5bb1);
        EXPECT(gbc.pc(), 0xe3f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3f6), 0xcb);
        EXPECT(gbc.readMem(0xe3f7), 0x80);
        // CB 80 0124
        gbc.setState(0x2db4, 0x9083, 0x7c90, 0x594b, 0xf204, 0x3fc, 0x1, 0x1);
        gbc.writeMem(0x2db4, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x9083);
        EXPECT(gbc.pc(), 0x2db6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0125
        gbc.setState(0x342, 0x4428, 0xbcf0, 0xc742, 0x33eb, 0x3e32, 0x1, 0x0);
        gbc.writeMem(0x342, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x4428);
        EXPECT(gbc.pc(), 0x344);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0126
        gbc.setState(0x97c1, 0x931b, 0xada0, 0xb329, 0xeebf, 0xca2c, 0x1, 0x1);
        gbc.writeMem(0x97c1, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x931b);
        EXPECT(gbc.pc(), 0x97c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97c1), 0xcb);
        EXPECT(gbc.readMem(0x97c2), 0x80);
        // CB 80 0127
        gbc.setState(0x3684, 0xffa4, 0x6460, 0xcb0f, 0xac70, 0x66fa, 0x1, 0x0);
        gbc.writeMem(0x3684, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xffa4);
        EXPECT(gbc.pc(), 0x3686);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0128
        gbc.setState(0x55fe, 0xa4d9, 0xaec0, 0x7fd6, 0xa9b8, 0x87c, 0x0, 0x1);
        gbc.writeMem(0x55fe, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xa4d9);
        EXPECT(gbc.pc(), 0x5600);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0129
        gbc.setState(0x1257, 0x5f6b, 0xed70, 0xe62d, 0xf4a2, 0x93fd, 0x1, 0x0);
        gbc.writeMem(0x1257, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x5f6b);
        EXPECT(gbc.pc(), 0x1259);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 012A
        gbc.setState(0x4f8, 0x8f4e, 0x4800, 0xfd6d, 0xee99, 0xb522, 0x1, 0x0);
        gbc.writeMem(0x4f8, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x8f4e);
        EXPECT(gbc.pc(), 0x4fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 012B
        gbc.setState(0x141d, 0x58b3, 0x42d0, 0x1fd6, 0xdcd5, 0x2538, 0x0, 0x1);
        gbc.writeMem(0x141d, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x58b3);
        EXPECT(gbc.pc(), 0x141f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 012C
        gbc.setState(0x3e0d, 0xb1c6, 0x940, 0x6bca, 0x6a6c, 0x1a00, 0x0, 0x1);
        gbc.writeMem(0x3e0d, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xb1c6);
        EXPECT(gbc.pc(), 0x3e0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 012D
        gbc.setState(0x6529, 0x2898, 0x7850, 0xd2be, 0xc43a, 0x949, 0x1, 0x1);
        gbc.writeMem(0x6529, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x2898);
        EXPECT(gbc.pc(), 0x652b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 012E
        gbc.setState(0xd52c, 0x3f08, 0x2260, 0x3665, 0x78ad, 0xab6b, 0x0, 0x0);
        gbc.writeMem(0xd52c, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x3f08);
        EXPECT(gbc.pc(), 0xd52e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd52c), 0xcb);
        EXPECT(gbc.readMem(0xd52d), 0x80);
        // CB 80 012F
        gbc.setState(0x5b30, 0x50e3, 0x5c00, 0xd310, 0x4214, 0x6abd, 0x1, 0x0);
        gbc.writeMem(0x5b30, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x50e3);
        EXPECT(gbc.pc(), 0x5b32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0130
        gbc.setState(0xa015, 0x39cf, 0x28e0, 0x967, 0x2442, 0xd1b7, 0x0, 0x0);
        gbc.writeMem(0xa015, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x39cf);
        EXPECT(gbc.pc(), 0xa017);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa015), 0xcb);
        EXPECT(gbc.readMem(0xa016), 0x80);
        // CB 80 0131
        gbc.setState(0xbc93, 0xc922, 0x9a80, 0xea98, 0x2384, 0xfaad, 0x0, 0x1);
        gbc.writeMem(0xbc93, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xc922);
        EXPECT(gbc.pc(), 0xbc95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc93), 0xcb);
        EXPECT(gbc.readMem(0xbc94), 0x80);
        // CB 80 0132
        gbc.setState(0x81ac, 0xe10b, 0x8e0, 0x85c7, 0x87c4, 0xc60b, 0x1, 0x0);
        gbc.writeMem(0x81ac, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xe10b);
        EXPECT(gbc.pc(), 0x81ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81ac), 0xcb);
        EXPECT(gbc.readMem(0x81ad), 0x80);
        // CB 80 0133
        gbc.setState(0xa74c, 0x13f5, 0x1890, 0x74c0, 0xca77, 0x329, 0x0, 0x1);
        gbc.writeMem(0xa74c, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x13f5);
        EXPECT(gbc.pc(), 0xa74e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa74c), 0xcb);
        EXPECT(gbc.readMem(0xa74d), 0x80);
        // CB 80 0134
        gbc.setState(0x1bf7, 0x9739, 0x9740, 0xe4dd, 0xa4ee, 0xef8, 0x0, 0x0);
        gbc.writeMem(0x1bf7, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x9739);
        EXPECT(gbc.pc(), 0x1bf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0135
        gbc.setState(0x6cf9, 0xdad8, 0xd960, 0x82e5, 0x864b, 0x6cb1, 0x1, 0x1);
        gbc.writeMem(0x6cf9, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xdad8);
        EXPECT(gbc.pc(), 0x6cfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0136
        gbc.setState(0x5a6e, 0x1b3f, 0xc030, 0xfb42, 0x514, 0xe0b0, 0x0, 0x0);
        gbc.writeMem(0x5a6e, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x1b3f);
        EXPECT(gbc.pc(), 0x5a70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0137
        gbc.setState(0x40a5, 0x1fa7, 0x76b0, 0xb933, 0x33d0, 0x6403, 0x0, 0x1);
        gbc.writeMem(0x40a5, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x1fa7);
        EXPECT(gbc.pc(), 0x40a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0138
        gbc.setState(0x18c3, 0xe7bf, 0x5350, 0x1e64, 0x283a, 0x6d00, 0x0, 0x1);
        gbc.writeMem(0x18c3, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xe7bf);
        EXPECT(gbc.pc(), 0x18c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0139
        gbc.setState(0x4ca5, 0xeb55, 0xe80, 0x4de8, 0xd5d, 0xa39b, 0x0, 0x0);
        gbc.writeMem(0x4ca5, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xeb55);
        EXPECT(gbc.pc(), 0x4ca7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 013A
        gbc.setState(0x8c70, 0xd393, 0xd8a0, 0x92a7, 0x9566, 0x9752, 0x1, 0x0);
        gbc.writeMem(0x8c70, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xd393);
        EXPECT(gbc.pc(), 0x8c72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c70), 0xcb);
        EXPECT(gbc.readMem(0x8c71), 0x80);
        // CB 80 013B
        gbc.setState(0x2a9a, 0x737d, 0x190, 0xfcd6, 0x9185, 0x63bf, 0x1, 0x0);
        gbc.writeMem(0x2a9a, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x737d);
        EXPECT(gbc.pc(), 0x2a9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 013C
        gbc.setState(0x4e74, 0xab8c, 0xcfd0, 0xdac5, 0x81a2, 0xe58, 0x1, 0x1);
        gbc.writeMem(0x4e74, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xab8c);
        EXPECT(gbc.pc(), 0x4e76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 013D
        gbc.setState(0x2a51, 0xcb9a, 0x2e10, 0x393b, 0x22, 0xa282, 0x0, 0x1);
        gbc.writeMem(0x2a51, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xcb9a);
        EXPECT(gbc.pc(), 0x2a53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 013E
        gbc.setState(0x66c1, 0x2c64, 0x39b0, 0xa746, 0xec25, 0x29d0, 0x0, 0x0);
        gbc.writeMem(0x66c1, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x2c64);
        EXPECT(gbc.pc(), 0x66c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 013F
        gbc.setState(0x5051, 0x71f0, 0xcda0, 0x4660, 0x14e7, 0xed68, 0x1, 0x1);
        gbc.writeMem(0x5051, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x71f0);
        EXPECT(gbc.pc(), 0x5053);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0140
        gbc.setState(0xa10c, 0x461f, 0x8610, 0xddab, 0x73ca, 0x2e25, 0x1, 0x0);
        gbc.writeMem(0xa10c, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x461f);
        EXPECT(gbc.pc(), 0xa10e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa10c), 0xcb);
        EXPECT(gbc.readMem(0xa10d), 0x80);
        // CB 80 0141
        gbc.setState(0x17d4, 0xfee9, 0xa30, 0xd8be, 0xe7ae, 0x19aa, 0x1, 0x1);
        gbc.writeMem(0x17d4, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xfee9);
        EXPECT(gbc.pc(), 0x17d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0142
        gbc.setState(0x1f39, 0xf89b, 0xa950, 0x8d60, 0x36f6, 0x5b34, 0x1, 0x1);
        gbc.writeMem(0x1f39, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xf89b);
        EXPECT(gbc.pc(), 0x1f3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0143
        gbc.setState(0xde7f, 0x3d5c, 0x9c50, 0x9cdc, 0x1dad, 0xf495, 0x0, 0x1);
        gbc.writeMem(0xde7f, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x3d5c);
        EXPECT(gbc.pc(), 0xde81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde7f), 0xcb);
        EXPECT(gbc.readMem(0xde80), 0x80);
        // CB 80 0144
        gbc.setState(0xa426, 0xbf3c, 0x15a0, 0x2b6c, 0x8575, 0xa0b8, 0x1, 0x1);
        gbc.writeMem(0xa426, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xbf3c);
        EXPECT(gbc.pc(), 0xa428);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa426), 0xcb);
        EXPECT(gbc.readMem(0xa427), 0x80);
        // CB 80 0145
        gbc.setState(0x37db, 0x3ac, 0x4a00, 0x8b63, 0x4ec6, 0x6933, 0x0, 0x0);
        gbc.writeMem(0x37db, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x3ac);
        EXPECT(gbc.pc(), 0x37dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0146
        gbc.setState(0x5849, 0x1175, 0xff60, 0x4fd0, 0xb944, 0xd432, 0x0, 0x0);
        gbc.writeMem(0x5849, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x1175);
        EXPECT(gbc.pc(), 0x584b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0147
        gbc.setState(0x1ccc, 0x58a9, 0x640, 0xde28, 0x707e, 0xb54d, 0x0, 0x0);
        gbc.writeMem(0x1ccc, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x58a9);
        EXPECT(gbc.pc(), 0x1cce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0148
        gbc.setState(0xa301, 0xe2cc, 0x4280, 0xf68, 0x5e87, 0x58ac, 0x0, 0x1);
        gbc.writeMem(0xa301, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xe2cc);
        EXPECT(gbc.pc(), 0xa303);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa301), 0xcb);
        EXPECT(gbc.readMem(0xa302), 0x80);
        // CB 80 0149
        gbc.setState(0x61c2, 0x3add, 0xfe60, 0xcf0f, 0x8377, 0xc31b, 0x1, 0x1);
        gbc.writeMem(0x61c2, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x3add);
        EXPECT(gbc.pc(), 0x61c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 014A
        gbc.setState(0x598a, 0x6554, 0x2d20, 0xc6e5, 0x6217, 0xee2b, 0x1, 0x1);
        gbc.writeMem(0x598a, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x6554);
        EXPECT(gbc.pc(), 0x598c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 014B
        gbc.setState(0xe3d5, 0x331, 0x5540, 0x5873, 0xa87d, 0xba53, 0x1, 0x1);
        gbc.writeMem(0xe3d5, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x331);
        EXPECT(gbc.pc(), 0xe3d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3d5), 0xcb);
        EXPECT(gbc.readMem(0xe3d6), 0x80);
        // CB 80 014C
        gbc.setState(0xd542, 0xf040, 0x5ff0, 0xf85f, 0xeb4a, 0xbcfa, 0x1, 0x1);
        gbc.writeMem(0xd542, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xf040);
        EXPECT(gbc.pc(), 0xd544);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd542), 0xcb);
        EXPECT(gbc.readMem(0xd543), 0x80);
        // CB 80 014D
        gbc.setState(0xe70e, 0xdfc2, 0xb200, 0x9c83, 0x8ba3, 0x3dd0, 0x1, 0x1);
        gbc.writeMem(0xe70e, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xdfc2);
        EXPECT(gbc.pc(), 0xe710);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe70e), 0xcb);
        EXPECT(gbc.readMem(0xe70f), 0x80);
        // CB 80 014E
        gbc.setState(0xe247, 0x8e1d, 0x1400, 0xd26b, 0xd802, 0xf4c4, 0x0, 0x1);
        gbc.writeMem(0xe247, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x8e1d);
        EXPECT(gbc.pc(), 0xe249);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe247), 0xcb);
        EXPECT(gbc.readMem(0xe248), 0x80);
        // CB 80 014F
        gbc.setState(0x7164, 0xaa8b, 0x4100, 0x3669, 0x862f, 0xbbb3, 0x1, 0x0);
        gbc.writeMem(0x7164, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xaa8b);
        EXPECT(gbc.pc(), 0x7166);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0150
        gbc.setState(0x16e5, 0x1ccf, 0x63c0, 0x14c, 0xf183, 0xe90b, 0x0, 0x1);
        gbc.writeMem(0x16e5, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x1ccf);
        EXPECT(gbc.pc(), 0x16e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0151
        gbc.setState(0x5c81, 0x71ad, 0x11d0, 0xd8c3, 0x1f94, 0xc4a9, 0x0, 0x0);
        gbc.writeMem(0x5c81, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x71ad);
        EXPECT(gbc.pc(), 0x5c83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0152
        gbc.setState(0xaa53, 0xce20, 0x1930, 0x2d32, 0x1978, 0x3732, 0x0, 0x0);
        gbc.writeMem(0xaa53, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xce20);
        EXPECT(gbc.pc(), 0xaa55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa53), 0xcb);
        EXPECT(gbc.readMem(0xaa54), 0x80);
        // CB 80 0154
        gbc.setState(0xa178, 0x7052, 0xc160, 0x5fea, 0x8728, 0x482, 0x0, 0x1);
        gbc.writeMem(0xa178, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x7052);
        EXPECT(gbc.pc(), 0xa17a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa178), 0xcb);
        EXPECT(gbc.readMem(0xa179), 0x80);
        // CB 80 0155
        gbc.setState(0x19f5, 0xdb03, 0x54e0, 0x39db, 0x8d35, 0x981d, 0x1, 0x0);
        gbc.writeMem(0x19f5, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xdb03);
        EXPECT(gbc.pc(), 0x19f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0156
        gbc.setState(0x7c6d, 0x2ff2, 0xe2a0, 0xfc26, 0xac76, 0x897b, 0x1, 0x0);
        gbc.writeMem(0x7c6d, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x2ff2);
        EXPECT(gbc.pc(), 0x7c6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0157
        gbc.setState(0xb7fd, 0x788, 0xcf80, 0x4415, 0x4d76, 0x75a1, 0x0, 0x0);
        gbc.writeMem(0xb7fd, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x788);
        EXPECT(gbc.pc(), 0xb7ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7fd), 0xcb);
        EXPECT(gbc.readMem(0xb7fe), 0x80);
        // CB 80 0158
        gbc.setState(0x5611, 0xa4a4, 0x5780, 0xd813, 0x4e4e, 0x6ccf, 0x0, 0x0);
        gbc.writeMem(0x5611, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xa4a4);
        EXPECT(gbc.pc(), 0x5613);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0159
        gbc.setState(0x8c90, 0x69c7, 0xcb70, 0xd5f7, 0x6d36, 0xe85f, 0x0, 0x0);
        gbc.writeMem(0x8c90, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x69c7);
        EXPECT(gbc.pc(), 0x8c92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c90), 0xcb);
        EXPECT(gbc.readMem(0x8c91), 0x80);
        // CB 80 015A
        gbc.setState(0xbca7, 0x9002, 0x9730, 0x6dad, 0x80cf, 0xcb6e, 0x1, 0x1);
        gbc.writeMem(0xbca7, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x9002);
        EXPECT(gbc.pc(), 0xbca9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbca7), 0xcb);
        EXPECT(gbc.readMem(0xbca8), 0x80);
        // CB 80 015B
        gbc.setState(0x82ce, 0xed73, 0xca10, 0xc3e2, 0xa1d9, 0x7840, 0x1, 0x1);
        gbc.writeMem(0x82ce, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xed73);
        EXPECT(gbc.pc(), 0x82d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82ce), 0xcb);
        EXPECT(gbc.readMem(0x82cf), 0x80);
        // CB 80 015C
        gbc.setState(0x3b29, 0x79d9, 0xf640, 0xd48c, 0x3547, 0x88de, 0x1, 0x0);
        gbc.writeMem(0x3b29, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x79d9);
        EXPECT(gbc.pc(), 0x3b2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 015D
        gbc.setState(0xb9d9, 0xb8a4, 0xbcf0, 0xce7, 0xd745, 0xa548, 0x0, 0x1);
        gbc.writeMem(0xb9d9, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xb8a4);
        EXPECT(gbc.pc(), 0xb9db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9d9), 0xcb);
        EXPECT(gbc.readMem(0xb9da), 0x80);
        // CB 80 015E
        gbc.setState(0xcfd6, 0xb02f, 0x6310, 0x82f6, 0x4ffc, 0xef0c, 0x1, 0x0);
        gbc.writeMem(0xcfd6, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xb02f);
        EXPECT(gbc.pc(), 0xcfd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfd6), 0xcb);
        EXPECT(gbc.readMem(0xcfd7), 0x80);
        // CB 80 015F
        gbc.setState(0x3ae0, 0xeb5c, 0x59e0, 0x50c0, 0xf3ce, 0x4f3d, 0x1, 0x1);
        gbc.writeMem(0x3ae0, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xeb5c);
        EXPECT(gbc.pc(), 0x3ae2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0160
        gbc.setState(0x2810, 0x4ba7, 0x9950, 0xeea2, 0xab35, 0xf613, 0x1, 0x1);
        gbc.writeMem(0x2810, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x4ba7);
        EXPECT(gbc.pc(), 0x2812);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0161
        gbc.setState(0x6b3e, 0x5017, 0xe050, 0x8ee1, 0xd34, 0xa05f, 0x0, 0x1);
        gbc.writeMem(0x6b3e, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x5017);
        EXPECT(gbc.pc(), 0x6b40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0162
        gbc.setState(0xcd88, 0xfd64, 0x8da0, 0x8006, 0x6c01, 0xe5b0, 0x0, 0x1);
        gbc.writeMem(0xcd88, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xfd64);
        EXPECT(gbc.pc(), 0xcd8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd88), 0xcb);
        EXPECT(gbc.readMem(0xcd89), 0x80);
        // CB 80 0163
        gbc.setState(0x66e9, 0xbb8a, 0x380, 0xf726, 0x4d94, 0xafb, 0x1, 0x0);
        gbc.writeMem(0x66e9, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xbb8a);
        EXPECT(gbc.pc(), 0x66eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0164
        gbc.setState(0x5c54, 0x28d4, 0x8f0, 0xe0e0, 0xbc22, 0xb6e2, 0x0, 0x0);
        gbc.writeMem(0x5c54, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x28d4);
        EXPECT(gbc.pc(), 0x5c56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0165
        gbc.setState(0x8ae4, 0x427c, 0x42c0, 0x8071, 0xaaa9, 0x8040, 0x1, 0x0);
        gbc.writeMem(0x8ae4, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x427c);
        EXPECT(gbc.pc(), 0x8ae6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ae4), 0xcb);
        EXPECT(gbc.readMem(0x8ae5), 0x80);
        // CB 80 0166
        gbc.setState(0xbbb4, 0xa2d8, 0x8c90, 0xf9e1, 0x13c5, 0x4400, 0x1, 0x1);
        gbc.writeMem(0xbbb4, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xa2d8);
        EXPECT(gbc.pc(), 0xbbb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbb4), 0xcb);
        EXPECT(gbc.readMem(0xbbb5), 0x80);
        // CB 80 0167
        gbc.setState(0x3095, 0xb82c, 0x41e0, 0x9c8f, 0x67a8, 0x1ce, 0x0, 0x0);
        gbc.writeMem(0x3095, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xb82c);
        EXPECT(gbc.pc(), 0x3097);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0168
        gbc.setState(0xdaa6, 0x164f, 0x88f0, 0xa38, 0x695b, 0x3def, 0x1, 0x1);
        gbc.writeMem(0xdaa6, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x164f);
        EXPECT(gbc.pc(), 0xdaa8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdaa6), 0xcb);
        EXPECT(gbc.readMem(0xdaa7), 0x80);
        // CB 80 0169
        gbc.setState(0x9fab, 0x396e, 0x2210, 0xb482, 0xacee, 0x1267, 0x1, 0x0);
        gbc.writeMem(0x9fab, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x396e);
        EXPECT(gbc.pc(), 0x9fad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fab), 0xcb);
        EXPECT(gbc.readMem(0x9fac), 0x80);
        // CB 80 016A
        gbc.setState(0xedf6, 0x6ef6, 0x79a0, 0x1b7, 0xd42d, 0xc1c7, 0x1, 0x1);
        gbc.writeMem(0xedf6, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x6ef6);
        EXPECT(gbc.pc(), 0xedf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedf6), 0xcb);
        EXPECT(gbc.readMem(0xedf7), 0x80);
        // CB 80 016B
        gbc.setState(0xdf72, 0x1b4e, 0xc5b0, 0xf387, 0x5c88, 0xafb0, 0x0, 0x1);
        gbc.writeMem(0xdf72, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x1b4e);
        EXPECT(gbc.pc(), 0xdf74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf72), 0xcb);
        EXPECT(gbc.readMem(0xdf73), 0x80);
        // CB 80 016D
        gbc.setState(0x2145, 0x35b, 0xdbc0, 0x9aa3, 0x612b, 0xc9b4, 0x0, 0x1);
        gbc.writeMem(0x2145, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x35b);
        EXPECT(gbc.pc(), 0x2147);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 016E
        gbc.setState(0x1ee0, 0xb30b, 0xf6c0, 0xef02, 0x17d6, 0x88c9, 0x0, 0x1);
        gbc.writeMem(0x1ee0, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xb30b);
        EXPECT(gbc.pc(), 0x1ee2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 016F
        gbc.setState(0x173e, 0x250f, 0x2d50, 0x5441, 0x334e, 0x2cfc, 0x1, 0x0);
        gbc.writeMem(0x173e, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x250f);
        EXPECT(gbc.pc(), 0x1740);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0170
        gbc.setState(0x985e, 0xb928, 0xe5a0, 0xd596, 0x3722, 0x50ff, 0x0, 0x0);
        gbc.writeMem(0x985e, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xb928);
        EXPECT(gbc.pc(), 0x9860);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x985e), 0xcb);
        EXPECT(gbc.readMem(0x985f), 0x80);
        // CB 80 0171
        gbc.setState(0x8e09, 0xa74d, 0xeaf0, 0x2cc9, 0xef44, 0x16, 0x0, 0x1);
        gbc.writeMem(0x8e09, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xa74d);
        EXPECT(gbc.pc(), 0x8e0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e09), 0xcb);
        EXPECT(gbc.readMem(0x8e0a), 0x80);
        // CB 80 0172
        gbc.setState(0x95ea, 0xf6d4, 0x80c0, 0x99ba, 0x721f, 0x93d8, 0x0, 0x0);
        gbc.writeMem(0x95ea, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xf6d4);
        EXPECT(gbc.pc(), 0x95ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95ea), 0xcb);
        EXPECT(gbc.readMem(0x95eb), 0x80);
        // CB 80 0173
        gbc.setState(0xa88a, 0xad6, 0xe320, 0xe123, 0xef7b, 0x9fe, 0x0, 0x0);
        gbc.writeMem(0xa88a, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xad6);
        EXPECT(gbc.pc(), 0xa88c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa88a), 0xcb);
        EXPECT(gbc.readMem(0xa88b), 0x80);
        // CB 80 0174
        gbc.setState(0xf65, 0x1505, 0xbd50, 0xe73e, 0x2fd7, 0xf066, 0x0, 0x1);
        gbc.writeMem(0xf65, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x1505);
        EXPECT(gbc.pc(), 0xf67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0175
        gbc.setState(0x5ab4, 0xa1c1, 0x3170, 0x20d3, 0x70bc, 0xd9a2, 0x1, 0x0);
        gbc.writeMem(0x5ab4, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xa1c1);
        EXPECT(gbc.pc(), 0x5ab6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0176
        gbc.setState(0x42f6, 0xc705, 0xaa70, 0x35b2, 0x73a, 0xaa2a, 0x1, 0x1);
        gbc.writeMem(0x42f6, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xc705);
        EXPECT(gbc.pc(), 0x42f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0177
        gbc.setState(0x2fbe, 0x3de1, 0x3340, 0xc57d, 0x63f9, 0xf76d, 0x0, 0x1);
        gbc.writeMem(0x2fbe, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x3de1);
        EXPECT(gbc.pc(), 0x2fc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0178
        gbc.setState(0x7817, 0xe2e1, 0x6590, 0x38d0, 0xe97e, 0x5b7b, 0x0, 0x1);
        gbc.writeMem(0x7817, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xe2e1);
        EXPECT(gbc.pc(), 0x7819);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0179
        gbc.setState(0x7fab, 0x6408, 0x5790, 0x5bad, 0x6b5, 0xe4e, 0x1, 0x1);
        gbc.writeMem(0x7fab, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x6408);
        EXPECT(gbc.pc(), 0x7fad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 017A
        gbc.setState(0x8aa4, 0x25b6, 0x3f0, 0xd1, 0x1797, 0x32d0, 0x1, 0x1);
        gbc.writeMem(0x8aa4, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x25b6);
        EXPECT(gbc.pc(), 0x8aa6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8aa4), 0xcb);
        EXPECT(gbc.readMem(0x8aa5), 0x80);
        // CB 80 017B
        gbc.setState(0xcde8, 0x8484, 0x4d60, 0x3c2e, 0x9840, 0xd110, 0x1, 0x1);
        gbc.writeMem(0xcde8, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x8484);
        EXPECT(gbc.pc(), 0xcdea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcde8), 0xcb);
        EXPECT(gbc.readMem(0xcde9), 0x80);
        // CB 80 017C
        gbc.setState(0x581a, 0x8431, 0x6050, 0x7bee, 0x4399, 0x30e7, 0x0, 0x0);
        gbc.writeMem(0x581a, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x8431);
        EXPECT(gbc.pc(), 0x581c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 017D
        gbc.setState(0x93e1, 0xac4f, 0xeec0, 0x9bc2, 0x3e31, 0xad16, 0x1, 0x1);
        gbc.writeMem(0x93e1, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xac4f);
        EXPECT(gbc.pc(), 0x93e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93e1), 0xcb);
        EXPECT(gbc.readMem(0x93e2), 0x80);
        // CB 80 017E
        gbc.setState(0x81b9, 0xf9a6, 0xe520, 0xfbb9, 0x8923, 0x63bc, 0x0, 0x0);
        gbc.writeMem(0x81b9, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xf9a6);
        EXPECT(gbc.pc(), 0x81bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81b9), 0xcb);
        EXPECT(gbc.readMem(0x81ba), 0x80);
        // CB 80 017F
        gbc.setState(0xd703, 0xe06b, 0x83e0, 0xdd55, 0xac00, 0x298a, 0x1, 0x0);
        gbc.writeMem(0xd703, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xe06b);
        EXPECT(gbc.pc(), 0xd705);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd703), 0xcb);
        EXPECT(gbc.readMem(0xd704), 0x80);
        // CB 80 0180
        gbc.setState(0xdda8, 0xbcb5, 0x91c0, 0x38a7, 0x3308, 0xb352, 0x1, 0x0);
        gbc.writeMem(0xdda8, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xbcb5);
        EXPECT(gbc.pc(), 0xddaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdda8), 0xcb);
        EXPECT(gbc.readMem(0xdda9), 0x80);
        // CB 80 0181
        gbc.setState(0x9813, 0xf164, 0xa070, 0xd96, 0x165, 0x7e64, 0x0, 0x0);
        gbc.writeMem(0x9813, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xf164);
        EXPECT(gbc.pc(), 0x9815);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9813), 0xcb);
        EXPECT(gbc.readMem(0x9814), 0x80);
        // CB 80 0182
        gbc.setState(0xd743, 0x2859, 0x1250, 0xb2e9, 0x5069, 0x75de, 0x1, 0x1);
        gbc.writeMem(0xd743, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x2859);
        EXPECT(gbc.pc(), 0xd745);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd743), 0xcb);
        EXPECT(gbc.readMem(0xd744), 0x80);
        // CB 80 0183
        gbc.setState(0xc429, 0xf611, 0x1540, 0xea6f, 0x11ce, 0x2cb, 0x0, 0x1);
        gbc.writeMem(0xc429, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xf611);
        EXPECT(gbc.pc(), 0xc42b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc429), 0xcb);
        EXPECT(gbc.readMem(0xc42a), 0x80);
        // CB 80 0184
        gbc.setState(0x7e41, 0xd35, 0xd480, 0xd3c5, 0xc652, 0x8481, 0x0, 0x1);
        gbc.writeMem(0x7e41, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xd35);
        EXPECT(gbc.pc(), 0x7e43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0185
        gbc.setState(0x7a47, 0x217f, 0xb2a0, 0x87eb, 0x5db8, 0xd7bd, 0x0, 0x1);
        gbc.writeMem(0x7a47, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x217f);
        EXPECT(gbc.pc(), 0x7a49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0186
        gbc.setState(0x908e, 0x8d22, 0x40f0, 0xab80, 0xbae9, 0xb39e, 0x0, 0x0);
        gbc.writeMem(0x908e, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x8d22);
        EXPECT(gbc.pc(), 0x9090);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x908e), 0xcb);
        EXPECT(gbc.readMem(0x908f), 0x80);
        // CB 80 0187
        gbc.setState(0x928b, 0xf2cb, 0xf540, 0x62fc, 0x605c, 0x16fd, 0x1, 0x0);
        gbc.writeMem(0x928b, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xf2cb);
        EXPECT(gbc.pc(), 0x928d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x928b), 0xcb);
        EXPECT(gbc.readMem(0x928c), 0x80);
        // CB 80 0188
        gbc.setState(0xa349, 0x7cb9, 0x4020, 0x7933, 0xfe98, 0x4947, 0x0, 0x1);
        gbc.writeMem(0xa349, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x7cb9);
        EXPECT(gbc.pc(), 0xa34b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa349), 0xcb);
        EXPECT(gbc.readMem(0xa34a), 0x80);
        // CB 80 0189
        gbc.setState(0x6d5a, 0x3c7a, 0x5b00, 0x3c94, 0x3af3, 0xc716, 0x0, 0x1);
        gbc.writeMem(0x6d5a, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x3c7a);
        EXPECT(gbc.pc(), 0x6d5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 018A
        gbc.setState(0x639d, 0xe34, 0xcfa0, 0x7fdc, 0x7587, 0x7d02, 0x1, 0x0);
        gbc.writeMem(0x639d, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xe34);
        EXPECT(gbc.pc(), 0x639f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 018B
        gbc.setState(0x1418, 0x3227, 0xb520, 0x14fc, 0x77a0, 0x3f5b, 0x0, 0x1);
        gbc.writeMem(0x1418, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x3227);
        EXPECT(gbc.pc(), 0x141a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 018C
        gbc.setState(0xccef, 0x424c, 0x2970, 0x610d, 0x7650, 0x1241, 0x1, 0x0);
        gbc.writeMem(0xccef, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x424c);
        EXPECT(gbc.pc(), 0xccf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccef), 0xcb);
        EXPECT(gbc.readMem(0xccf0), 0x80);
        // CB 80 018D
        gbc.setState(0x1438, 0xf790, 0xa220, 0xc6d4, 0x5781, 0x1d, 0x0, 0x1);
        gbc.writeMem(0x1438, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xf790);
        EXPECT(gbc.pc(), 0x143a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 018F
        gbc.setState(0xa1b9, 0x9080, 0xe8f0, 0x3d1d, 0xc85e, 0xb0b2, 0x0, 0x1);
        gbc.writeMem(0xa1b9, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x9080);
        EXPECT(gbc.pc(), 0xa1bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1b9), 0xcb);
        EXPECT(gbc.readMem(0xa1ba), 0x80);
        // CB 80 0191
        gbc.setState(0x9e8a, 0x1cde, 0x70, 0x2ad9, 0x2367, 0x2ab7, 0x0, 0x0);
        gbc.writeMem(0x9e8a, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x1cde);
        EXPECT(gbc.pc(), 0x9e8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e8a), 0xcb);
        EXPECT(gbc.readMem(0x9e8b), 0x80);
        // CB 80 0192
        gbc.setState(0x9708, 0xceb1, 0xdcf0, 0x5998, 0x88db, 0x949f, 0x1, 0x1);
        gbc.writeMem(0x9708, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xceb1);
        EXPECT(gbc.pc(), 0x970a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9708), 0xcb);
        EXPECT(gbc.readMem(0x9709), 0x80);
        // CB 80 0193
        gbc.setState(0xd7aa, 0xe0fe, 0x6eb0, 0x57e0, 0x3f5e, 0x6d8d, 0x0, 0x1);
        gbc.writeMem(0xd7aa, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xe0fe);
        EXPECT(gbc.pc(), 0xd7ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7aa), 0xcb);
        EXPECT(gbc.readMem(0xd7ab), 0x80);
        // CB 80 0194
        gbc.setState(0x5a3, 0xb4f0, 0x71e0, 0x2c4f, 0x49e6, 0x668, 0x1, 0x0);
        gbc.writeMem(0x5a3, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xb4f0);
        EXPECT(gbc.pc(), 0x5a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0195
        gbc.setState(0x3e5c, 0x293b, 0x57b0, 0xce9a, 0x70cf, 0xa550, 0x0, 0x1);
        gbc.writeMem(0x3e5c, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x293b);
        EXPECT(gbc.pc(), 0x3e5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0196
        gbc.setState(0x41f5, 0xcf76, 0x7240, 0xbc18, 0xdc27, 0x6433, 0x1, 0x0);
        gbc.writeMem(0x41f5, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xcf76);
        EXPECT(gbc.pc(), 0x41f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0197
        gbc.setState(0x84e4, 0xd3fc, 0x20d0, 0xb345, 0xcb23, 0xa1f0, 0x0, 0x1);
        gbc.writeMem(0x84e4, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xd3fc);
        EXPECT(gbc.pc(), 0x84e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84e4), 0xcb);
        EXPECT(gbc.readMem(0x84e5), 0x80);
        // CB 80 0198
        gbc.setState(0x3c08, 0x5b94, 0xd3b0, 0x1442, 0xf2a3, 0x7e7e, 0x1, 0x0);
        gbc.writeMem(0x3c08, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x5b94);
        EXPECT(gbc.pc(), 0x3c0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0199
        gbc.setState(0x7282, 0xf2aa, 0xb320, 0xf26b, 0x37b5, 0x2417, 0x0, 0x1);
        gbc.writeMem(0x7282, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xf2aa);
        EXPECT(gbc.pc(), 0x7284);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 019A
        gbc.setState(0xad7, 0x1b12, 0xb8e0, 0x8ad3, 0xa8a2, 0x2944, 0x1, 0x0);
        gbc.writeMem(0xad7, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x1b12);
        EXPECT(gbc.pc(), 0xad9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 019B
        gbc.setState(0x8164, 0x272f, 0x81c0, 0x40ea, 0x6c12, 0x13d7, 0x1, 0x1);
        gbc.writeMem(0x8164, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x272f);
        EXPECT(gbc.pc(), 0x8166);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8164), 0xcb);
        EXPECT(gbc.readMem(0x8165), 0x80);
        // CB 80 019C
        gbc.setState(0x5ac4, 0xf82, 0x7fa0, 0xc636, 0x525f, 0x9b18, 0x0, 0x0);
        gbc.writeMem(0x5ac4, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xf82);
        EXPECT(gbc.pc(), 0x5ac6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 019D
        gbc.setState(0xa9a6, 0x1c08, 0x3f20, 0x4701, 0xab2b, 0xd81e, 0x1, 0x0);
        gbc.writeMem(0xa9a6, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x1c08);
        EXPECT(gbc.pc(), 0xa9a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9a6), 0xcb);
        EXPECT(gbc.readMem(0xa9a7), 0x80);
        // CB 80 019E
        gbc.setState(0x10b5, 0x7314, 0xcf20, 0x8895, 0x20a9, 0x2eba, 0x0, 0x0);
        gbc.writeMem(0x10b5, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x7314);
        EXPECT(gbc.pc(), 0x10b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 019F
        gbc.setState(0xaeec, 0x3508, 0x8960, 0xe504, 0x9ed5, 0x93ce, 0x0, 0x0);
        gbc.writeMem(0xaeec, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x3508);
        EXPECT(gbc.pc(), 0xaeee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaeec), 0xcb);
        EXPECT(gbc.readMem(0xaeed), 0x80);
        // CB 80 01A0
        gbc.setState(0xc719, 0xf144, 0x70e0, 0xca84, 0xff8a, 0x8355, 0x1, 0x0);
        gbc.writeMem(0xc719, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xf144);
        EXPECT(gbc.pc(), 0xc71b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc719), 0xcb);
        EXPECT(gbc.readMem(0xc71a), 0x80);
        // CB 80 01A1
        gbc.setState(0xb866, 0xa34c, 0xf560, 0xb46a, 0xbe7c, 0x1688, 0x1, 0x1);
        gbc.writeMem(0xb866, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xa34c);
        EXPECT(gbc.pc(), 0xb868);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb866), 0xcb);
        EXPECT(gbc.readMem(0xb867), 0x80);
        // CB 80 01A2
        gbc.setState(0x26e8, 0xe3d, 0x80f0, 0x4cc1, 0x7598, 0x6edb, 0x0, 0x1);
        gbc.writeMem(0x26e8, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xe3d);
        EXPECT(gbc.pc(), 0x26ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 01A3
        gbc.setState(0x861a, 0x7ab2, 0x9100, 0x3c53, 0x5386, 0x7a26, 0x1, 0x0);
        gbc.writeMem(0x861a, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x7ab2);
        EXPECT(gbc.pc(), 0x861c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x861a), 0xcb);
        EXPECT(gbc.readMem(0x861b), 0x80);
        // CB 80 01A4
        gbc.setState(0xd092, 0x65c4, 0x2c20, 0x24f6, 0x18ac, 0xbc5a, 0x0, 0x0);
        gbc.writeMem(0xd092, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x65c4);
        EXPECT(gbc.pc(), 0xd094);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd092), 0xcb);
        EXPECT(gbc.readMem(0xd093), 0x80);
        // CB 80 01A5
        gbc.setState(0x8110, 0xaeff, 0x9ac0, 0xa1c1, 0x4732, 0xfa5b, 0x1, 0x0);
        gbc.writeMem(0x8110, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xaeff);
        EXPECT(gbc.pc(), 0x8112);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8110), 0xcb);
        EXPECT(gbc.readMem(0x8111), 0x80);
        // CB 80 01A6
        gbc.setState(0x87d9, 0x8e93, 0x5950, 0xb94e, 0x3406, 0xadc0, 0x1, 0x0);
        gbc.writeMem(0x87d9, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x8e93);
        EXPECT(gbc.pc(), 0x87db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87d9), 0xcb);
        EXPECT(gbc.readMem(0x87da), 0x80);
        // CB 80 01A7
        gbc.setState(0x1b8a, 0x8362, 0x2df0, 0xbd8c, 0x6456, 0x392b, 0x0, 0x1);
        gbc.writeMem(0x1b8a, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x8362);
        EXPECT(gbc.pc(), 0x1b8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 01A8
        gbc.setState(0x8a10, 0x8c29, 0x4c60, 0x8baf, 0xf477, 0xbe6, 0x1, 0x0);
        gbc.writeMem(0x8a10, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x8c29);
        EXPECT(gbc.pc(), 0x8a12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a10), 0xcb);
        EXPECT(gbc.readMem(0x8a11), 0x80);
        // CB 80 01A9
        gbc.setState(0x884a, 0x934, 0x6ff0, 0x372b, 0x8674, 0x6d7f, 0x1, 0x0);
        gbc.writeMem(0x884a, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x934);
        EXPECT(gbc.pc(), 0x884c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x884a), 0xcb);
        EXPECT(gbc.readMem(0x884b), 0x80);
        // CB 80 01AA
        gbc.setState(0xd2ef, 0xfcae, 0x5240, 0xbc98, 0xd60c, 0x7d9d, 0x0, 0x1);
        gbc.writeMem(0xd2ef, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xfcae);
        EXPECT(gbc.pc(), 0xd2f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2ef), 0xcb);
        EXPECT(gbc.readMem(0xd2f0), 0x80);
        // CB 80 01AB
        gbc.setState(0xac55, 0x3a97, 0x8c50, 0x63da, 0xf4d1, 0x4976, 0x1, 0x1);
        gbc.writeMem(0xac55, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x3a97);
        EXPECT(gbc.pc(), 0xac57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac55), 0xcb);
        EXPECT(gbc.readMem(0xac56), 0x80);
        // CB 80 01AD
        gbc.setState(0x9497, 0x385f, 0x330, 0x234a, 0xccc1, 0xa542, 0x0, 0x1);
        gbc.writeMem(0x9497, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x385f);
        EXPECT(gbc.pc(), 0x9499);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9497), 0xcb);
        EXPECT(gbc.readMem(0x9498), 0x80);
        // CB 80 01AE
        gbc.setState(0xb86b, 0xd6f3, 0x1670, 0x6be1, 0xef78, 0x9230, 0x1, 0x1);
        gbc.writeMem(0xb86b, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xd6f3);
        EXPECT(gbc.pc(), 0xb86d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb86b), 0xcb);
        EXPECT(gbc.readMem(0xb86c), 0x80);
        // CB 80 01AF
        gbc.setState(0x80fa, 0x9654, 0x3080, 0x74b1, 0x5ec1, 0xb564, 0x1, 0x1);
        gbc.writeMem(0x80fa, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x9654);
        EXPECT(gbc.pc(), 0x80fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80fa), 0xcb);
        EXPECT(gbc.readMem(0x80fb), 0x80);
        // CB 80 01B0
        gbc.setState(0x118f, 0x7466, 0x3780, 0x7f54, 0x90c7, 0xccc6, 0x1, 0x1);
        gbc.writeMem(0x118f, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x7466);
        EXPECT(gbc.pc(), 0x1191);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 01B1
        gbc.setState(0x1bf1, 0x89b7, 0x79d0, 0xdab7, 0x7345, 0x8625, 0x1, 0x0);
        gbc.writeMem(0x1bf1, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x89b7);
        EXPECT(gbc.pc(), 0x1bf3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 01B2
        gbc.setState(0x1e48, 0x5ff6, 0x5aa0, 0x3b5, 0x79cc, 0x57e8, 0x1, 0x0);
        gbc.writeMem(0x1e48, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x5ff6);
        EXPECT(gbc.pc(), 0x1e4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 01B3
        gbc.setState(0x2d04, 0x84e8, 0xbf50, 0x8b11, 0xa469, 0xad44, 0x0, 0x0);
        gbc.writeMem(0x2d04, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x84e8);
        EXPECT(gbc.pc(), 0x2d06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 01B4
        gbc.setState(0xe588, 0x9210, 0x7c60, 0x4445, 0xce51, 0x616c, 0x1, 0x1);
        gbc.writeMem(0xe588, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x9210);
        EXPECT(gbc.pc(), 0xe58a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe588), 0xcb);
        EXPECT(gbc.readMem(0xe589), 0x80);
        // CB 80 01B5
        gbc.setState(0x1ac5, 0x79, 0x9f40, 0xc6bd, 0xeaf8, 0x9d0, 0x1, 0x0);
        gbc.writeMem(0x1ac5, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x79);
        EXPECT(gbc.pc(), 0x1ac7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 01B6
        gbc.setState(0x1c00, 0x1bee, 0xf9b0, 0x3819, 0x3d84, 0x54b7, 0x1, 0x0);
        gbc.writeMem(0x1c00, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x1bee);
        EXPECT(gbc.pc(), 0x1c02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 01B7
        gbc.setState(0x8afe, 0xea24, 0x680, 0xf356, 0xacd6, 0xeaa5, 0x1, 0x0);
        gbc.writeMem(0x8afe, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xea24);
        EXPECT(gbc.pc(), 0x8b00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8afe), 0xcb);
        EXPECT(gbc.readMem(0x8aff), 0x80);
        // CB 80 01B8
        gbc.setState(0xb4b5, 0x5584, 0xe860, 0x37d7, 0xe124, 0xc6e2, 0x0, 0x0);
        gbc.writeMem(0xb4b5, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x5584);
        EXPECT(gbc.pc(), 0xb4b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4b5), 0xcb);
        EXPECT(gbc.readMem(0xb4b6), 0x80);
        // CB 80 01B9
        gbc.setState(0xe64b, 0x8e5d, 0xfd00, 0xffeb, 0x8676, 0x5698, 0x0, 0x0);
        gbc.writeMem(0xe64b, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x8e5d);
        EXPECT(gbc.pc(), 0xe64d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe64b), 0xcb);
        EXPECT(gbc.readMem(0xe64c), 0x80);
        // CB 80 01BA
        gbc.setState(0x3010, 0x6420, 0x9f40, 0x39d5, 0xfb4d, 0x530a, 0x1, 0x1);
        gbc.writeMem(0x3010, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x6420);
        EXPECT(gbc.pc(), 0x3012);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 01BB
        gbc.setState(0xc90e, 0x73e1, 0x4fd0, 0xd879, 0x9495, 0xc405, 0x0, 0x0);
        gbc.writeMem(0xc90e, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x73e1);
        EXPECT(gbc.pc(), 0xc910);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc90e), 0xcb);
        EXPECT(gbc.readMem(0xc90f), 0x80);
        // CB 80 01BC
        gbc.setState(0x881a, 0xf27b, 0xb140, 0xbed6, 0x2020, 0xc41e, 0x0, 0x0);
        gbc.writeMem(0x881a, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xf27b);
        EXPECT(gbc.pc(), 0x881c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x881a), 0xcb);
        EXPECT(gbc.readMem(0x881b), 0x80);
        // CB 80 01BD
        gbc.setState(0x1344, 0x7eff, 0x3160, 0xbf37, 0x90d6, 0x9c57, 0x0, 0x1);
        gbc.writeMem(0x1344, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x7eff);
        EXPECT(gbc.pc(), 0x1346);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 01BE
        gbc.setState(0xa205, 0xdab6, 0x76d0, 0x59aa, 0x5e96, 0x9873, 0x0, 0x0);
        gbc.writeMem(0xa205, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xdab6);
        EXPECT(gbc.pc(), 0xa207);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa205), 0xcb);
        EXPECT(gbc.readMem(0xa206), 0x80);
        // CB 80 01BF
        gbc.setState(0x7583, 0x4cf9, 0x7b0, 0xaf73, 0x76e9, 0x1e5f, 0x1, 0x1);
        gbc.writeMem(0x7583, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x4cf9);
        EXPECT(gbc.pc(), 0x7585);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 01C0
        gbc.setState(0x7387, 0xe137, 0xe6a0, 0x94fe, 0xb7a5, 0x81eb, 0x1, 0x0);
        gbc.writeMem(0x7387, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xe137);
        EXPECT(gbc.pc(), 0x7389);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 01C1
        gbc.setState(0xb7b5, 0xc41e, 0x90c0, 0x45de, 0x2202, 0x69c5, 0x0, 0x0);
        gbc.writeMem(0xb7b5, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xc41e);
        EXPECT(gbc.pc(), 0xb7b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7b5), 0xcb);
        EXPECT(gbc.readMem(0xb7b6), 0x80);
        // CB 80 01C2
        gbc.setState(0xc56e, 0xbdb, 0x4f0, 0xf0b, 0xb140, 0x4b7a, 0x0, 0x0);
        gbc.writeMem(0xc56e, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xbdb);
        EXPECT(gbc.pc(), 0xc570);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc56e), 0xcb);
        EXPECT(gbc.readMem(0xc56f), 0x80);
        // CB 80 01C3
        gbc.setState(0x70a4, 0xe268, 0xf860, 0xb1a7, 0xc32b, 0x985a, 0x1, 0x0);
        gbc.writeMem(0x70a4, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xe268);
        EXPECT(gbc.pc(), 0x70a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 01C4
        gbc.setState(0xa0, 0x6885, 0x1400, 0x85b0, 0x556a, 0xd3d7, 0x1, 0x0);
        gbc.writeMem(0xa0, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x6885);
        EXPECT(gbc.pc(), 0xa2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 01C5
        gbc.setState(0x3e1a, 0x9e04, 0x2e20, 0x4e8e, 0x3fdf, 0xdc0d, 0x0, 0x1);
        gbc.writeMem(0x3e1a, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x9e04);
        EXPECT(gbc.pc(), 0x3e1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 01C6
        gbc.setState(0x444e, 0x4c75, 0x3d60, 0x67ff, 0x7ffa, 0x3538, 0x1, 0x0);
        gbc.writeMem(0x444e, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x4c75);
        EXPECT(gbc.pc(), 0x4450);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 01C7
        gbc.setState(0x5c72, 0x73db, 0xd370, 0xc60d, 0x18b1, 0x194f, 0x1, 0x1);
        gbc.writeMem(0x5c72, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x73db);
        EXPECT(gbc.pc(), 0x5c74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 01C8
        gbc.setState(0x9b4d, 0x71a7, 0x2e80, 0xc6fe, 0x3f7, 0x7b2d, 0x0, 0x0);
        gbc.writeMem(0x9b4d, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x71a7);
        EXPECT(gbc.pc(), 0x9b4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b4d), 0xcb);
        EXPECT(gbc.readMem(0x9b4e), 0x80);
        // CB 80 01C9
        gbc.setState(0x7b7d, 0x1b9e, 0x8680, 0xe5cd, 0xd805, 0xe903, 0x0, 0x1);
        gbc.writeMem(0x7b7d, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x1b9e);
        EXPECT(gbc.pc(), 0x7b7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 01CA
        gbc.setState(0x7dcd, 0xd915, 0xc8b0, 0xae5c, 0x81cf, 0x27fa, 0x0, 0x0);
        gbc.writeMem(0x7dcd, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xd915);
        EXPECT(gbc.pc(), 0x7dcf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 01CB
        gbc.setState(0x2c97, 0x87e1, 0xd240, 0xf98d, 0xc98, 0x2643, 0x0, 0x0);
        gbc.writeMem(0x2c97, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x87e1);
        EXPECT(gbc.pc(), 0x2c99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 01CC
        gbc.setState(0xd827, 0xbd5, 0x32b0, 0xaf10, 0xbdd5, 0x813b, 0x0, 0x1);
        gbc.writeMem(0xd827, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xbd5);
        EXPECT(gbc.pc(), 0xd829);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd827), 0xcb);
        EXPECT(gbc.readMem(0xd828), 0x80);
        // CB 80 01CD
        gbc.setState(0x8337, 0x2b4b, 0x8660, 0x4edf, 0x38d4, 0xf425, 0x0, 0x0);
        gbc.writeMem(0x8337, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x2b4b);
        EXPECT(gbc.pc(), 0x8339);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8337), 0xcb);
        EXPECT(gbc.readMem(0x8338), 0x80);
        // CB 80 01CE
        gbc.setState(0x90a, 0x4852, 0x33a0, 0x4cde, 0xe28e, 0x8b77, 0x1, 0x1);
        gbc.writeMem(0x90a, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x4852);
        EXPECT(gbc.pc(), 0x90c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 01CF
        gbc.setState(0xc9d1, 0x8f57, 0xc1f0, 0xf0a4, 0xff74, 0xcb3c, 0x1, 0x1);
        gbc.writeMem(0xc9d1, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x8f57);
        EXPECT(gbc.pc(), 0xc9d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9d1), 0xcb);
        EXPECT(gbc.readMem(0xc9d2), 0x80);
        // CB 80 01D0
        gbc.setState(0x7c9e, 0xae9f, 0x86c0, 0x3c48, 0xb18c, 0x22bf, 0x1, 0x1);
        gbc.writeMem(0x7c9e, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xae9f);
        EXPECT(gbc.pc(), 0x7ca0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 01D1
        gbc.setState(0x2f17, 0xf722, 0xd390, 0x64f3, 0x85a4, 0xb6cf, 0x1, 0x0);
        gbc.writeMem(0x2f17, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xf722);
        EXPECT(gbc.pc(), 0x2f19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 01D2
        gbc.setState(0x509d, 0x4b85, 0xdba0, 0xb0e7, 0x5531, 0x857d, 0x0, 0x1);
        gbc.writeMem(0x509d, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x4b85);
        EXPECT(gbc.pc(), 0x509f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 01D4
        gbc.setState(0x771a, 0xe1, 0xa130, 0xbb71, 0x9275, 0x5d61, 0x0, 0x0);
        gbc.writeMem(0x771a, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xe1);
        EXPECT(gbc.pc(), 0x771c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 01D6
        gbc.setState(0xe29b, 0x5c0b, 0x8ff0, 0xdb1e, 0xbc1a, 0x7553, 0x0, 0x0);
        gbc.writeMem(0xe29b, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x5c0b);
        EXPECT(gbc.pc(), 0xe29d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe29b), 0xcb);
        EXPECT(gbc.readMem(0xe29c), 0x80);
        // CB 80 01D7
        gbc.setState(0x19ef, 0xfcae, 0xaa90, 0xd035, 0xa54a, 0x12cd, 0x0, 0x0);
        gbc.writeMem(0x19ef, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xfcae);
        EXPECT(gbc.pc(), 0x19f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 01D9
        gbc.setState(0x7755, 0xf25e, 0xab30, 0x3579, 0x1321, 0x82aa, 0x1, 0x1);
        gbc.writeMem(0x7755, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xf25e);
        EXPECT(gbc.pc(), 0x7757);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 01DA
        gbc.setState(0x9d85, 0xf9c4, 0xd520, 0x740b, 0x16, 0xac86, 0x1, 0x1);
        gbc.writeMem(0x9d85, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xf9c4);
        EXPECT(gbc.pc(), 0x9d87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d85), 0xcb);
        EXPECT(gbc.readMem(0x9d86), 0x80);
        // CB 80 01DB
        gbc.setState(0x78be, 0x3c8c, 0xff60, 0xff02, 0x445b, 0xb2b7, 0x1, 0x1);
        gbc.writeMem(0x78be, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x3c8c);
        EXPECT(gbc.pc(), 0x78c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 01DC
        gbc.setState(0x4b91, 0x69de, 0xca20, 0xd5de, 0xb90a, 0xab26, 0x1, 0x0);
        gbc.writeMem(0x4b91, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x69de);
        EXPECT(gbc.pc(), 0x4b93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 01DD
        gbc.setState(0x47ec, 0x46df, 0x26d0, 0x9445, 0x8b41, 0xdd24, 0x0, 0x0);
        gbc.writeMem(0x47ec, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x46df);
        EXPECT(gbc.pc(), 0x47ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 01DE
        gbc.setState(0x9b4c, 0x3b2d, 0xf7f0, 0xdf48, 0x4899, 0x4596, 0x1, 0x1);
        gbc.writeMem(0x9b4c, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x3b2d);
        EXPECT(gbc.pc(), 0x9b4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b4c), 0xcb);
        EXPECT(gbc.readMem(0x9b4d), 0x80);
        // CB 80 01DF
        gbc.setState(0x8108, 0xfeba, 0x7060, 0xef, 0x78a, 0xe8a2, 0x1, 0x0);
        gbc.writeMem(0x8108, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xfeba);
        EXPECT(gbc.pc(), 0x810a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8108), 0xcb);
        EXPECT(gbc.readMem(0x8109), 0x80);
        // CB 80 01E0
        gbc.setState(0x6ad2, 0xc209, 0x22f0, 0xe7a2, 0x278b, 0x235f, 0x0, 0x1);
        gbc.writeMem(0x6ad2, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xc209);
        EXPECT(gbc.pc(), 0x6ad4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 01E1
        gbc.setState(0xa199, 0x9239, 0xf7c0, 0x8f86, 0x65fe, 0xb828, 0x0, 0x0);
        gbc.writeMem(0xa199, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x9239);
        EXPECT(gbc.pc(), 0xa19b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa199), 0xcb);
        EXPECT(gbc.readMem(0xa19a), 0x80);
        // CB 80 01E2
        gbc.setState(0x504f, 0x8c56, 0x4320, 0x2261, 0x2e3, 0x4aa9, 0x1, 0x0);
        gbc.writeMem(0x504f, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x8c56);
        EXPECT(gbc.pc(), 0x5051);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 01E5
        gbc.setState(0xee6b, 0x6d9f, 0x8ef0, 0xdd0e, 0xb1fa, 0x8b2d, 0x1, 0x1);
        gbc.writeMem(0xee6b, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x6d9f);
        EXPECT(gbc.pc(), 0xee6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee6b), 0xcb);
        EXPECT(gbc.readMem(0xee6c), 0x80);
        // CB 80 01E6
        gbc.setState(0x4725, 0x9eda, 0x4830, 0xd9f7, 0x48e2, 0x3434, 0x1, 0x1);
        gbc.writeMem(0x4725, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x9eda);
        EXPECT(gbc.pc(), 0x4727);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 01E7
        gbc.setState(0x364a, 0x76ff, 0xc010, 0x7ff4, 0x4ddf, 0x68b, 0x0, 0x1);
        gbc.writeMem(0x364a, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x76ff);
        EXPECT(gbc.pc(), 0x364c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 01E8
        gbc.setState(0xd521, 0xe32f, 0x3f90, 0xb377, 0x7888, 0x827d, 0x1, 0x0);
        gbc.writeMem(0xd521, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xe32f);
        EXPECT(gbc.pc(), 0xd523);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd521), 0xcb);
        EXPECT(gbc.readMem(0xd522), 0x80);
        // CB 80 01E9
        gbc.setState(0x9f5e, 0x2e5f, 0x10e0, 0x7825, 0x6e4d, 0x18ce, 0x1, 0x1);
        gbc.writeMem(0x9f5e, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x2e5f);
        EXPECT(gbc.pc(), 0x9f60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f5e), 0xcb);
        EXPECT(gbc.readMem(0x9f5f), 0x80);
        // CB 80 01EA
        gbc.setState(0xe164, 0x4b41, 0x3c50, 0x58a, 0x17d1, 0x9d16, 0x1, 0x0);
        gbc.writeMem(0xe164, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x4b41);
        EXPECT(gbc.pc(), 0xe166);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe164), 0xcb);
        EXPECT(gbc.readMem(0xe165), 0x80);
        // CB 80 01EB
        gbc.setState(0x8157, 0x7249, 0x83f0, 0x2d36, 0x953d, 0xe202, 0x1, 0x0);
        gbc.writeMem(0x8157, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x7249);
        EXPECT(gbc.pc(), 0x8159);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8157), 0xcb);
        EXPECT(gbc.readMem(0x8158), 0x80);
        // CB 80 01EC
        gbc.setState(0xc591, 0xd8c4, 0x9750, 0x8fc8, 0x155, 0x5194, 0x1, 0x1);
        gbc.writeMem(0xc591, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xd8c4);
        EXPECT(gbc.pc(), 0xc593);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc591), 0xcb);
        EXPECT(gbc.readMem(0xc592), 0x80);
        // CB 80 01ED
        gbc.setState(0xedce, 0x1828, 0x5670, 0xb497, 0xc70e, 0xc1c3, 0x1, 0x1);
        gbc.writeMem(0xedce, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x1828);
        EXPECT(gbc.pc(), 0xedd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedce), 0xcb);
        EXPECT(gbc.readMem(0xedcf), 0x80);
        // CB 80 01EE
        gbc.setState(0xabc1, 0x41d4, 0x8e80, 0xd822, 0xfb2d, 0x2821, 0x1, 0x1);
        gbc.writeMem(0xabc1, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x41d4);
        EXPECT(gbc.pc(), 0xabc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabc1), 0xcb);
        EXPECT(gbc.readMem(0xabc2), 0x80);
        // CB 80 01EF
        gbc.setState(0x9804, 0xcc6c, 0x97e0, 0x2b06, 0xdf0, 0x811d, 0x1, 0x1);
        gbc.writeMem(0x9804, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xcc6c);
        EXPECT(gbc.pc(), 0x9806);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9804), 0xcb);
        EXPECT(gbc.readMem(0x9805), 0x80);
        // CB 80 01F0
        gbc.setState(0xb33b, 0x9595, 0xd000, 0x1ce4, 0x8214, 0xb0c7, 0x0, 0x0);
        gbc.writeMem(0xb33b, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x9595);
        EXPECT(gbc.pc(), 0xb33d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb33b), 0xcb);
        EXPECT(gbc.readMem(0xb33c), 0x80);
        // CB 80 01F1
        gbc.setState(0xbb7a, 0x8bef, 0x1700, 0x711c, 0x6cd1, 0x5de4, 0x1, 0x1);
        gbc.writeMem(0xbb7a, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x8bef);
        EXPECT(gbc.pc(), 0xbb7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb7a), 0xcb);
        EXPECT(gbc.readMem(0xbb7b), 0x80);
        // CB 80 01F2
        gbc.setState(0x9767, 0xfeed, 0x5f90, 0x7feb, 0x92f6, 0xef46, 0x0, 0x0);
        gbc.writeMem(0x9767, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xfeed);
        EXPECT(gbc.pc(), 0x9769);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9767), 0xcb);
        EXPECT(gbc.readMem(0x9768), 0x80);
        // CB 80 01F3
        gbc.setState(0x5c00, 0x3a92, 0x4060, 0x7ac6, 0xcf15, 0xa404, 0x1, 0x1);
        gbc.writeMem(0x5c00, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x3a92);
        EXPECT(gbc.pc(), 0x5c02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 01F4
        gbc.setState(0x70cc, 0xfd41, 0x32b0, 0x5d5e, 0xf356, 0x6d8e, 0x0, 0x0);
        gbc.writeMem(0x70cc, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xfd41);
        EXPECT(gbc.pc(), 0x70ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 01F5
        gbc.setState(0xf03, 0xedf9, 0x29b0, 0x1d0, 0xa836, 0x19f5, 0x1, 0x0);
        gbc.writeMem(0xf03, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xedf9);
        EXPECT(gbc.pc(), 0xf05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 01F6
        gbc.setState(0x46c8, 0x9336, 0x1480, 0x52da, 0x510b, 0x47b4, 0x0, 0x0);
        gbc.writeMem(0x46c8, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x9336);
        EXPECT(gbc.pc(), 0x46ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 01F7
        gbc.setState(0x9e1, 0xbc06, 0x30d0, 0x2595, 0xe3d0, 0xdb3d, 0x1, 0x1);
        gbc.writeMem(0x9e1, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xbc06);
        EXPECT(gbc.pc(), 0x9e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 01F8
        gbc.setState(0x46aa, 0x6fae, 0xcd20, 0x272c, 0x85a7, 0x758c, 0x1, 0x0);
        gbc.writeMem(0x46aa, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x6fae);
        EXPECT(gbc.pc(), 0x46ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 01F9
        gbc.setState(0x18d4, 0x5178, 0x2c0, 0xb808, 0xef58, 0x9d1a, 0x1, 0x0);
        gbc.writeMem(0x18d4, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x5178);
        EXPECT(gbc.pc(), 0x18d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 01FA
        gbc.setState(0x7486, 0xc92f, 0xad80, 0xffb3, 0xadf8, 0xb70b, 0x1, 0x1);
        gbc.writeMem(0x7486, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xc92f);
        EXPECT(gbc.pc(), 0x7488);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 01FB
        gbc.setState(0x40f7, 0x7281, 0x3ff0, 0x6aeb, 0x16c7, 0x47f4, 0x1, 0x0);
        gbc.writeMem(0x40f7, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x7281);
        EXPECT(gbc.pc(), 0x40f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 01FC
        gbc.setState(0x9630, 0x175d, 0xb830, 0x89d4, 0xa778, 0xe769, 0x1, 0x0);
        gbc.writeMem(0x9630, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x175d);
        EXPECT(gbc.pc(), 0x9632);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9630), 0xcb);
        EXPECT(gbc.readMem(0x9631), 0x80);
        // CB 80 01FD
        gbc.setState(0xcfad, 0x9fbe, 0x4890, 0xea53, 0xd93a, 0xc2d5, 0x1, 0x0);
        gbc.writeMem(0xcfad, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x9fbe);
        EXPECT(gbc.pc(), 0xcfaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfad), 0xcb);
        EXPECT(gbc.readMem(0xcfae), 0x80);
        // CB 80 01FE
        gbc.setState(0x8bf5, 0xf543, 0xf080, 0xaccb, 0x21c, 0x97c5, 0x1, 0x1);
        gbc.writeMem(0x8bf5, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xf543);
        EXPECT(gbc.pc(), 0x8bf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bf5), 0xcb);
        EXPECT(gbc.readMem(0x8bf6), 0x80);
        // CB 80 01FF
        gbc.setState(0xa2fc, 0xb94c, 0x7ae0, 0xfa17, 0x81bd, 0x17f5, 0x1, 0x0);
        gbc.writeMem(0xa2fc, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xb94c);
        EXPECT(gbc.pc(), 0xa2fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2fc), 0xcb);
        EXPECT(gbc.readMem(0xa2fd), 0x80);
        // CB 80 0200
        gbc.setState(0x7441, 0x44de, 0xfa50, 0x8d5e, 0x1011, 0xac42, 0x1, 0x1);
        gbc.writeMem(0x7441, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x44de);
        EXPECT(gbc.pc(), 0x7443);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0201
        gbc.setState(0xed7b, 0x18d0, 0xc0e0, 0x3b7b, 0xfd95, 0x87c0, 0x0, 0x0);
        gbc.writeMem(0xed7b, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x18d0);
        EXPECT(gbc.pc(), 0xed7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed7b), 0xcb);
        EXPECT(gbc.readMem(0xed7c), 0x80);
        // CB 80 0202
        gbc.setState(0x50f3, 0xb254, 0xff10, 0x89c3, 0x36b2, 0x8b5f, 0x0, 0x0);
        gbc.writeMem(0x50f3, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xb254);
        EXPECT(gbc.pc(), 0x50f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0203
        gbc.setState(0xddf8, 0xbafe, 0x7000, 0x982f, 0x9b92, 0xae50, 0x0, 0x0);
        gbc.writeMem(0xddf8, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xbafe);
        EXPECT(gbc.pc(), 0xddfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddf8), 0xcb);
        EXPECT(gbc.readMem(0xddf9), 0x80);
        // CB 80 0204
        gbc.setState(0x39bc, 0x840f, 0xc660, 0x6d9, 0xed3b, 0xf2f9, 0x0, 0x1);
        gbc.writeMem(0x39bc, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x840f);
        EXPECT(gbc.pc(), 0x39be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0205
        gbc.setState(0xb438, 0x931d, 0x57a0, 0x7678, 0xb0d0, 0x87c5, 0x0, 0x1);
        gbc.writeMem(0xb438, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x931d);
        EXPECT(gbc.pc(), 0xb43a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb438), 0xcb);
        EXPECT(gbc.readMem(0xb439), 0x80);
        // CB 80 0206
        gbc.setState(0x4f26, 0xde65, 0x69a0, 0xcbed, 0xdab8, 0x1d30, 0x1, 0x1);
        gbc.writeMem(0x4f26, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xde65);
        EXPECT(gbc.pc(), 0x4f28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0207
        gbc.setState(0xb16c, 0xee14, 0x8aa0, 0x9454, 0xf405, 0xb533, 0x1, 0x1);
        gbc.writeMem(0xb16c, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xee14);
        EXPECT(gbc.pc(), 0xb16e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb16c), 0xcb);
        EXPECT(gbc.readMem(0xb16d), 0x80);
        // CB 80 0208
        gbc.setState(0xc314, 0x1862, 0x1f40, 0x3570, 0xd5dd, 0x9d9e, 0x0, 0x0);
        gbc.writeMem(0xc314, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x1862);
        EXPECT(gbc.pc(), 0xc316);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc314), 0xcb);
        EXPECT(gbc.readMem(0xc315), 0x80);
        // CB 80 0209
        gbc.setState(0x705d, 0xb55b, 0x8f00, 0xa139, 0x4a5c, 0x19c7, 0x1, 0x1);
        gbc.writeMem(0x705d, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xb55b);
        EXPECT(gbc.pc(), 0x705f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 020A
        gbc.setState(0x1977, 0x4c87, 0x8a00, 0x7cc9, 0x1c26, 0x2a67, 0x1, 0x1);
        gbc.writeMem(0x1977, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x4c87);
        EXPECT(gbc.pc(), 0x1979);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 020B
        gbc.setState(0x62f6, 0x46bf, 0xd420, 0x2378, 0xc3c1, 0x706d, 0x1, 0x1);
        gbc.writeMem(0x62f6, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x46bf);
        EXPECT(gbc.pc(), 0x62f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 020C
        gbc.setState(0x53d4, 0x2d1d, 0x1de0, 0xfab5, 0xa260, 0xa5e2, 0x0, 0x0);
        gbc.writeMem(0x53d4, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x2d1d);
        EXPECT(gbc.pc(), 0x53d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 020D
        gbc.setState(0xc613, 0x941f, 0x5de0, 0xccfc, 0x99dd, 0x6d9c, 0x0, 0x1);
        gbc.writeMem(0xc613, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x941f);
        EXPECT(gbc.pc(), 0xc615);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc613), 0xcb);
        EXPECT(gbc.readMem(0xc614), 0x80);
        // CB 80 020E
        gbc.setState(0x8c10, 0xe2a5, 0x8b40, 0xe4bd, 0xed3f, 0x6f5b, 0x0, 0x1);
        gbc.writeMem(0x8c10, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xe2a5);
        EXPECT(gbc.pc(), 0x8c12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c10), 0xcb);
        EXPECT(gbc.readMem(0x8c11), 0x80);
        // CB 80 020F
        gbc.setState(0x8cb, 0x8fe4, 0x5240, 0xc19d, 0x185e, 0xbaf8, 0x1, 0x0);
        gbc.writeMem(0x8cb, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x8fe4);
        EXPECT(gbc.pc(), 0x8cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0210
        gbc.setState(0x1d68, 0x80e7, 0x91d0, 0xb67b, 0x6a88, 0xfa5d, 0x1, 0x1);
        gbc.writeMem(0x1d68, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x80e7);
        EXPECT(gbc.pc(), 0x1d6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0211
        gbc.setState(0xaed1, 0xb922, 0x6590, 0xffb8, 0xa471, 0x3acb, 0x0, 0x1);
        gbc.writeMem(0xaed1, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xb922);
        EXPECT(gbc.pc(), 0xaed3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaed1), 0xcb);
        EXPECT(gbc.readMem(0xaed2), 0x80);
        // CB 80 0212
        gbc.setState(0xc068, 0x508, 0x8140, 0xfa85, 0xd038, 0x3e58, 0x0, 0x1);
        gbc.writeMem(0xc068, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x508);
        EXPECT(gbc.pc(), 0xc06a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc068), 0xcb);
        EXPECT(gbc.readMem(0xc069), 0x80);
        // CB 80 0213
        gbc.setState(0x3827, 0x6770, 0x3940, 0x85e0, 0x9031, 0x5456, 0x0, 0x1);
        gbc.writeMem(0x3827, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x6770);
        EXPECT(gbc.pc(), 0x3829);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0214
        gbc.setState(0x3f59, 0x42b2, 0x15e0, 0x7478, 0x8428, 0x2cc3, 0x0, 0x1);
        gbc.writeMem(0x3f59, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x42b2);
        EXPECT(gbc.pc(), 0x3f5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0215
        gbc.setState(0x173d, 0x8249, 0x59e0, 0xb31, 0xe992, 0xb89c, 0x1, 0x1);
        gbc.writeMem(0x173d, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x8249);
        EXPECT(gbc.pc(), 0x173f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0217
        gbc.setState(0x3e1a, 0xd6d1, 0x6a90, 0x880, 0x32f0, 0xffd, 0x1, 0x1);
        gbc.writeMem(0x3e1a, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xd6d1);
        EXPECT(gbc.pc(), 0x3e1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0218
        gbc.setState(0x35cf, 0x3617, 0xdf10, 0x769e, 0xf7a8, 0xed65, 0x1, 0x1);
        gbc.writeMem(0x35cf, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x3617);
        EXPECT(gbc.pc(), 0x35d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0219
        gbc.setState(0x7ea7, 0xdd46, 0x92b0, 0xef50, 0x2dbe, 0x68f9, 0x1, 0x0);
        gbc.writeMem(0x7ea7, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xdd46);
        EXPECT(gbc.pc(), 0x7ea9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 021A
        gbc.setState(0x1a51, 0x8975, 0x1a20, 0xd82a, 0x1165, 0x7c9f, 0x1, 0x1);
        gbc.writeMem(0x1a51, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x8975);
        EXPECT(gbc.pc(), 0x1a53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 021B
        gbc.setState(0x7e9f, 0xa65b, 0x1340, 0x9c67, 0x9741, 0xc794, 0x1, 0x0);
        gbc.writeMem(0x7e9f, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xa65b);
        EXPECT(gbc.pc(), 0x7ea1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 021C
        gbc.setState(0x766c, 0x7e53, 0xfc20, 0x5b2f, 0xef7b, 0xa5b5, 0x1, 0x1);
        gbc.writeMem(0x766c, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x7e53);
        EXPECT(gbc.pc(), 0x766e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 021D
        gbc.setState(0x3ebc, 0xdeb4, 0xd250, 0x7ac7, 0xc044, 0x7eca, 0x1, 0x1);
        gbc.writeMem(0x3ebc, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xdeb4);
        EXPECT(gbc.pc(), 0x3ebe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 021E
        gbc.setState(0xd0fb, 0xb2f3, 0xc760, 0x166a, 0xa877, 0xf4ef, 0x1, 0x1);
        gbc.writeMem(0xd0fb, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xb2f3);
        EXPECT(gbc.pc(), 0xd0fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0fb), 0xcb);
        EXPECT(gbc.readMem(0xd0fc), 0x80);
        // CB 80 021F
        gbc.setState(0x26de, 0x7cfd, 0xa600, 0x7693, 0xcec, 0xe97, 0x0, 0x0);
        gbc.writeMem(0x26de, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x7cfd);
        EXPECT(gbc.pc(), 0x26e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0220
        gbc.setState(0xd9f2, 0xbe36, 0x79e0, 0xee76, 0x415d, 0x9db5, 0x0, 0x1);
        gbc.writeMem(0xd9f2, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xbe36);
        EXPECT(gbc.pc(), 0xd9f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9f2), 0xcb);
        EXPECT(gbc.readMem(0xd9f3), 0x80);
        // CB 80 0221
        gbc.setState(0x1527, 0x9a, 0x8720, 0x2d9f, 0x8d23, 0x495f, 0x0, 0x1);
        gbc.writeMem(0x1527, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x9a);
        EXPECT(gbc.pc(), 0x1529);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0222
        gbc.setState(0x3c99, 0xca0c, 0x4c10, 0xa6a7, 0x40e2, 0x102f, 0x1, 0x1);
        gbc.writeMem(0x3c99, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xca0c);
        EXPECT(gbc.pc(), 0x3c9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0223
        gbc.setState(0xcd2c, 0xdf6c, 0x68e0, 0xd188, 0x9694, 0x2aa, 0x0, 0x1);
        gbc.writeMem(0xcd2c, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xdf6c);
        EXPECT(gbc.pc(), 0xcd2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd2c), 0xcb);
        EXPECT(gbc.readMem(0xcd2d), 0x80);
        // CB 80 0224
        gbc.setState(0xa5d2, 0xb45f, 0x24e0, 0x2078, 0x66e7, 0x256d, 0x1, 0x1);
        gbc.writeMem(0xa5d2, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xb45f);
        EXPECT(gbc.pc(), 0xa5d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5d2), 0xcb);
        EXPECT(gbc.readMem(0xa5d3), 0x80);
        // CB 80 0225
        gbc.setState(0x77d8, 0x2f19, 0xc8a0, 0xd0e8, 0x5ae5, 0x101c, 0x1, 0x1);
        gbc.writeMem(0x77d8, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x2f19);
        EXPECT(gbc.pc(), 0x77da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0226
        gbc.setState(0xde1e, 0x7646, 0xc910, 0xceaf, 0x9564, 0x8e41, 0x0, 0x0);
        gbc.writeMem(0xde1e, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x7646);
        EXPECT(gbc.pc(), 0xde20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde1e), 0xcb);
        EXPECT(gbc.readMem(0xde1f), 0x80);
        // CB 80 0227
        gbc.setState(0xd74f, 0x98c, 0x58f0, 0x2048, 0x734c, 0x7174, 0x1, 0x0);
        gbc.writeMem(0xd74f, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x98c);
        EXPECT(gbc.pc(), 0xd751);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd74f), 0xcb);
        EXPECT(gbc.readMem(0xd750), 0x80);
        // CB 80 0228
        gbc.setState(0x8d, 0x6052, 0x6290, 0xff9, 0x76b, 0x51e1, 0x1, 0x0);
        gbc.writeMem(0x8d, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x6052);
        EXPECT(gbc.pc(), 0x8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0229
        gbc.setState(0x42c5, 0x90c6, 0xe90, 0x24ce, 0x2e67, 0x7815, 0x0, 0x1);
        gbc.writeMem(0x42c5, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x90c6);
        EXPECT(gbc.pc(), 0x42c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 022A
        gbc.setState(0xca25, 0x8aaf, 0x1550, 0x7b96, 0x3e5e, 0xe5d2, 0x1, 0x0);
        gbc.writeMem(0xca25, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x8aaf);
        EXPECT(gbc.pc(), 0xca27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca25), 0xcb);
        EXPECT(gbc.readMem(0xca26), 0x80);
        // CB 80 022B
        gbc.setState(0x9e14, 0x591c, 0xbe50, 0x90c8, 0x120, 0x71d9, 0x1, 0x0);
        gbc.writeMem(0x9e14, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x591c);
        EXPECT(gbc.pc(), 0x9e16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e14), 0xcb);
        EXPECT(gbc.readMem(0x9e15), 0x80);
        // CB 80 022C
        gbc.setState(0xe73e, 0xe655, 0x1b00, 0x9a7a, 0xa84a, 0xe76d, 0x0, 0x1);
        gbc.writeMem(0xe73e, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xe655);
        EXPECT(gbc.pc(), 0xe740);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe73e), 0xcb);
        EXPECT(gbc.readMem(0xe73f), 0x80);
        // CB 80 022D
        gbc.setState(0x5050, 0x4e58, 0xf910, 0x62b9, 0xd9cc, 0xca2, 0x0, 0x1);
        gbc.writeMem(0x5050, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x4e58);
        EXPECT(gbc.pc(), 0x5052);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 022E
        gbc.setState(0x57d4, 0xee7, 0x9d60, 0x1caf, 0xbefa, 0x7778, 0x0, 0x1);
        gbc.writeMem(0x57d4, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xee7);
        EXPECT(gbc.pc(), 0x57d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 022F
        gbc.setState(0xd607, 0x1471, 0x1b60, 0x66c7, 0x1e9b, 0x9ac5, 0x0, 0x1);
        gbc.writeMem(0xd607, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x1471);
        EXPECT(gbc.pc(), 0xd609);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd607), 0xcb);
        EXPECT(gbc.readMem(0xd608), 0x80);
        // CB 80 0230
        gbc.setState(0x8c4c, 0x7d4c, 0x64a0, 0xc3b, 0x6be2, 0x5b67, 0x0, 0x1);
        gbc.writeMem(0x8c4c, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x7d4c);
        EXPECT(gbc.pc(), 0x8c4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c4c), 0xcb);
        EXPECT(gbc.readMem(0x8c4d), 0x80);
        // CB 80 0231
        gbc.setState(0x6dce, 0x555d, 0x390, 0xf1c8, 0x52a9, 0x9152, 0x0, 0x0);
        gbc.writeMem(0x6dce, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x555d);
        EXPECT(gbc.pc(), 0x6dd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0232
        gbc.setState(0xe2dc, 0x3822, 0x2ab0, 0x608a, 0x7d24, 0xf650, 0x0, 0x1);
        gbc.writeMem(0xe2dc, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x3822);
        EXPECT(gbc.pc(), 0xe2de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2dc), 0xcb);
        EXPECT(gbc.readMem(0xe2dd), 0x80);
        // CB 80 0233
        gbc.setState(0xdd17, 0x6de8, 0xc860, 0x8fd, 0xacfa, 0x6667, 0x0, 0x1);
        gbc.writeMem(0xdd17, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x6de8);
        EXPECT(gbc.pc(), 0xdd19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd17), 0xcb);
        EXPECT(gbc.readMem(0xdd18), 0x80);
        // CB 80 0234
        gbc.setState(0x9ab4, 0x63ed, 0xb190, 0x9a51, 0x9b8a, 0x2644, 0x1, 0x0);
        gbc.writeMem(0x9ab4, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x63ed);
        EXPECT(gbc.pc(), 0x9ab6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ab4), 0xcb);
        EXPECT(gbc.readMem(0x9ab5), 0x80);
        // CB 80 0235
        gbc.setState(0x93a2, 0xe167, 0x15f0, 0xfcf7, 0x6d59, 0x907e, 0x0, 0x0);
        gbc.writeMem(0x93a2, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xe167);
        EXPECT(gbc.pc(), 0x93a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93a2), 0xcb);
        EXPECT(gbc.readMem(0x93a3), 0x80);
        // CB 80 0236
        gbc.setState(0x71ed, 0x9df4, 0x52d0, 0xf8d5, 0xc5f0, 0x3968, 0x1, 0x1);
        gbc.writeMem(0x71ed, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x9df4);
        EXPECT(gbc.pc(), 0x71ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0237
        gbc.setState(0x7f01, 0xc6ae, 0x8ae0, 0x3f2b, 0x12a0, 0xf161, 0x1, 0x1);
        gbc.writeMem(0x7f01, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xc6ae);
        EXPECT(gbc.pc(), 0x7f03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0238
        gbc.setState(0x25b8, 0x98d8, 0xf8c0, 0xa644, 0xd64b, 0x942b, 0x1, 0x0);
        gbc.writeMem(0x25b8, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x98d8);
        EXPECT(gbc.pc(), 0x25ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0239
        gbc.setState(0x471e, 0x129a, 0xa0a0, 0xdff7, 0xa9ff, 0x4b3f, 0x1, 0x1);
        gbc.writeMem(0x471e, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x129a);
        EXPECT(gbc.pc(), 0x4720);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 023A
        gbc.setState(0xbde7, 0xb0d5, 0x63f0, 0x732, 0x1cd0, 0x8e03, 0x0, 0x1);
        gbc.writeMem(0xbde7, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xb0d5);
        EXPECT(gbc.pc(), 0xbde9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbde7), 0xcb);
        EXPECT(gbc.readMem(0xbde8), 0x80);
        // CB 80 023B
        gbc.setState(0xd043, 0x9586, 0xeb60, 0xde3e, 0xc9aa, 0x8f85, 0x0, 0x1);
        gbc.writeMem(0xd043, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x9586);
        EXPECT(gbc.pc(), 0xd045);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd043), 0xcb);
        EXPECT(gbc.readMem(0xd044), 0x80);
        // CB 80 023C
        gbc.setState(0xbb20, 0xd3fe, 0x8080, 0x7d34, 0xa3c3, 0xaf97, 0x1, 0x0);
        gbc.writeMem(0xbb20, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xd3fe);
        EXPECT(gbc.pc(), 0xbb22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb20), 0xcb);
        EXPECT(gbc.readMem(0xbb21), 0x80);
        // CB 80 023D
        gbc.setState(0xefde, 0xe60f, 0x5b80, 0xcfe, 0x7e, 0xbd56, 0x0, 0x0);
        gbc.writeMem(0xefde, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xe60f);
        EXPECT(gbc.pc(), 0xefe0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefde), 0xcb);
        EXPECT(gbc.readMem(0xefdf), 0x80);
        // CB 80 023E
        gbc.setState(0x826e, 0x401, 0xc810, 0xbc85, 0xfe6d, 0xc32b, 0x0, 0x0);
        gbc.writeMem(0x826e, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x401);
        EXPECT(gbc.pc(), 0x8270);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x826e), 0xcb);
        EXPECT(gbc.readMem(0x826f), 0x80);
        // CB 80 023F
        gbc.setState(0x3d5c, 0xbc37, 0xb770, 0x3a1, 0x15a4, 0xac60, 0x1, 0x1);
        gbc.writeMem(0x3d5c, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xbc37);
        EXPECT(gbc.pc(), 0x3d5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0240
        gbc.setState(0x184d, 0xb7c1, 0xd290, 0x929a, 0x454e, 0xf5b4, 0x0, 0x0);
        gbc.writeMem(0x184d, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xb7c1);
        EXPECT(gbc.pc(), 0x184f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0241
        gbc.setState(0xb711, 0x145, 0x85f0, 0x4338, 0x3c0c, 0x3e0f, 0x1, 0x0);
        gbc.writeMem(0xb711, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x145);
        EXPECT(gbc.pc(), 0xb713);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb711), 0xcb);
        EXPECT(gbc.readMem(0xb712), 0x80);
        // CB 80 0242
        gbc.setState(0xe8cc, 0xe8d7, 0x600, 0xb94e, 0x8d2e, 0x927, 0x1, 0x1);
        gbc.writeMem(0xe8cc, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xe8d7);
        EXPECT(gbc.pc(), 0xe8ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8cc), 0xcb);
        EXPECT(gbc.readMem(0xe8cd), 0x80);
        // CB 80 0243
        gbc.setState(0xd517, 0x3311, 0x4c20, 0xcd92, 0x76cf, 0x56a7, 0x1, 0x1);
        gbc.writeMem(0xd517, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x3311);
        EXPECT(gbc.pc(), 0xd519);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd517), 0xcb);
        EXPECT(gbc.readMem(0xd518), 0x80);
        // CB 80 0244
        gbc.setState(0x7c88, 0x3f7f, 0x9310, 0xcb, 0x5f3c, 0xc229, 0x1, 0x0);
        gbc.writeMem(0x7c88, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x3f7f);
        EXPECT(gbc.pc(), 0x7c8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0245
        gbc.setState(0x2bfb, 0xeb2d, 0x43a0, 0x2474, 0x8114, 0x1030, 0x0, 0x0);
        gbc.writeMem(0x2bfb, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xeb2d);
        EXPECT(gbc.pc(), 0x2bfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0246
        gbc.setState(0x68a6, 0xe3e1, 0xcc60, 0x13c1, 0xd4c5, 0x5c07, 0x1, 0x0);
        gbc.writeMem(0x68a6, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xe3e1);
        EXPECT(gbc.pc(), 0x68a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0248
        gbc.setState(0x94a8, 0xb540, 0x6a00, 0x8114, 0x55e6, 0xbc1c, 0x1, 0x0);
        gbc.writeMem(0x94a8, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xb540);
        EXPECT(gbc.pc(), 0x94aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94a8), 0xcb);
        EXPECT(gbc.readMem(0x94a9), 0x80);
        // CB 80 0249
        gbc.setState(0x2c73, 0xcb45, 0x2e60, 0xd4b4, 0xd650, 0xec98, 0x1, 0x0);
        gbc.writeMem(0x2c73, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xcb45);
        EXPECT(gbc.pc(), 0x2c75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 024A
        gbc.setState(0x3358, 0xba8b, 0xac90, 0xa82a, 0x2dda, 0xdd4c, 0x0, 0x1);
        gbc.writeMem(0x3358, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xba8b);
        EXPECT(gbc.pc(), 0x335a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 024B
        gbc.setState(0x92ed, 0xad4b, 0xf870, 0xd82c, 0x1466, 0xd9c1, 0x1, 0x0);
        gbc.writeMem(0x92ed, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xad4b);
        EXPECT(gbc.pc(), 0x92ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92ed), 0xcb);
        EXPECT(gbc.readMem(0x92ee), 0x80);
        // CB 80 024C
        gbc.setState(0xa444, 0xb11a, 0xa180, 0xb735, 0x86dc, 0x8bd6, 0x1, 0x1);
        gbc.writeMem(0xa444, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xb11a);
        EXPECT(gbc.pc(), 0xa446);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa444), 0xcb);
        EXPECT(gbc.readMem(0xa445), 0x80);
        // CB 80 024D
        gbc.setState(0x28bf, 0xf60c, 0xf8f0, 0x820, 0x13df, 0x4acd, 0x1, 0x1);
        gbc.writeMem(0x28bf, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xf60c);
        EXPECT(gbc.pc(), 0x28c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 024F
        gbc.setState(0x52d6, 0x1f92, 0x60, 0x4f7e, 0x8222, 0x60c8, 0x1, 0x0);
        gbc.writeMem(0x52d6, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x1f92);
        EXPECT(gbc.pc(), 0x52d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0250
        gbc.setState(0x46c5, 0xec21, 0xf600, 0x347b, 0x72ef, 0x74e0, 0x0, 0x1);
        gbc.writeMem(0x46c5, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xec21);
        EXPECT(gbc.pc(), 0x46c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0251
        gbc.setState(0x48c6, 0x36, 0x6cd0, 0x8317, 0x55f6, 0x81bd, 0x0, 0x1);
        gbc.writeMem(0x48c6, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x36);
        EXPECT(gbc.pc(), 0x48c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0252
        gbc.setState(0xb6c0, 0x6ce1, 0x81b0, 0xc761, 0x8ed0, 0x76b3, 0x1, 0x0);
        gbc.writeMem(0xb6c0, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x6ce1);
        EXPECT(gbc.pc(), 0xb6c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6c0), 0xcb);
        EXPECT(gbc.readMem(0xb6c1), 0x80);
        // CB 80 0253
        gbc.setState(0xde0f, 0x84fd, 0xd4d0, 0x4c86, 0xfd47, 0x7724, 0x0, 0x0);
        gbc.writeMem(0xde0f, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x84fd);
        EXPECT(gbc.pc(), 0xde11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde0f), 0xcb);
        EXPECT(gbc.readMem(0xde10), 0x80);
        // CB 80 0254
        gbc.setState(0x5fe6, 0xa7a4, 0x9620, 0xb924, 0x35c9, 0xb4b7, 0x0, 0x0);
        gbc.writeMem(0x5fe6, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xa7a4);
        EXPECT(gbc.pc(), 0x5fe8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0256
        gbc.setState(0x54e6, 0xfd3b, 0xceb0, 0xda52, 0x6f27, 0x2ec8, 0x0, 0x0);
        gbc.writeMem(0x54e6, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xfd3b);
        EXPECT(gbc.pc(), 0x54e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0257
        gbc.setState(0x8d79, 0xc79e, 0xb10, 0x625b, 0x4cc2, 0x37c3, 0x0, 0x0);
        gbc.writeMem(0x8d79, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xc79e);
        EXPECT(gbc.pc(), 0x8d7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d79), 0xcb);
        EXPECT(gbc.readMem(0x8d7a), 0x80);
        // CB 80 0258
        gbc.setState(0xb199, 0xdf9, 0x8be0, 0x5964, 0x2449, 0xcbf8, 0x1, 0x1);
        gbc.writeMem(0xb199, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xdf9);
        EXPECT(gbc.pc(), 0xb19b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb199), 0xcb);
        EXPECT(gbc.readMem(0xb19a), 0x80);
        // CB 80 0259
        gbc.setState(0xa368, 0x9557, 0x55b0, 0x515e, 0x9760, 0x2328, 0x0, 0x1);
        gbc.writeMem(0xa368, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x9557);
        EXPECT(gbc.pc(), 0xa36a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa368), 0xcb);
        EXPECT(gbc.readMem(0xa369), 0x80);
        // CB 80 025A
        gbc.setState(0xa7cf, 0xe2bc, 0x5fc0, 0x856, 0xfc45, 0x5b92, 0x1, 0x1);
        gbc.writeMem(0xa7cf, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xe2bc);
        EXPECT(gbc.pc(), 0xa7d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7cf), 0xcb);
        EXPECT(gbc.readMem(0xa7d0), 0x80);
        // CB 80 025B
        gbc.setState(0x8f91, 0xd81e, 0x8010, 0x11ff, 0x1b4, 0x5fae, 0x0, 0x1);
        gbc.writeMem(0x8f91, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xd81e);
        EXPECT(gbc.pc(), 0x8f93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f91), 0xcb);
        EXPECT(gbc.readMem(0x8f92), 0x80);
        // CB 80 025C
        gbc.setState(0x597b, 0x6d97, 0x78b0, 0xb0e5, 0x898, 0x895a, 0x1, 0x0);
        gbc.writeMem(0x597b, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x6d97);
        EXPECT(gbc.pc(), 0x597d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 025D
        gbc.setState(0xe077, 0xc942, 0x8cd0, 0xe6cd, 0x404e, 0xaf62, 0x0, 0x0);
        gbc.writeMem(0xe077, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xc942);
        EXPECT(gbc.pc(), 0xe079);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe077), 0xcb);
        EXPECT(gbc.readMem(0xe078), 0x80);
        // CB 80 025E
        gbc.setState(0x91f4, 0xe0fa, 0x85a0, 0x8400, 0x3d06, 0xb58a, 0x1, 0x0);
        gbc.writeMem(0x91f4, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xe0fa);
        EXPECT(gbc.pc(), 0x91f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91f4), 0xcb);
        EXPECT(gbc.readMem(0x91f5), 0x80);
        // CB 80 025F
        gbc.setState(0x57ca, 0x3205, 0x6490, 0x554b, 0xb036, 0xd405, 0x0, 0x0);
        gbc.writeMem(0x57ca, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x3205);
        EXPECT(gbc.pc(), 0x57cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0261
        gbc.setState(0x718b, 0xdec3, 0x7520, 0xbc62, 0xd8b0, 0xe27e, 0x0, 0x1);
        gbc.writeMem(0x718b, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xdec3);
        EXPECT(gbc.pc(), 0x718d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0262
        gbc.setState(0x97a1, 0xfdfc, 0x34b0, 0x7678, 0x3ae8, 0xac33, 0x1, 0x0);
        gbc.writeMem(0x97a1, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xfdfc);
        EXPECT(gbc.pc(), 0x97a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97a1), 0xcb);
        EXPECT(gbc.readMem(0x97a2), 0x80);
        // CB 80 0263
        gbc.setState(0x1fdb, 0x19de, 0xb330, 0xe819, 0x4af4, 0xbe6d, 0x1, 0x0);
        gbc.writeMem(0x1fdb, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x19de);
        EXPECT(gbc.pc(), 0x1fdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0264
        gbc.setState(0xd912, 0xf702, 0x540, 0xdb15, 0x427c, 0xa4e4, 0x1, 0x1);
        gbc.writeMem(0xd912, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xf702);
        EXPECT(gbc.pc(), 0xd914);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd912), 0xcb);
        EXPECT(gbc.readMem(0xd913), 0x80);
        // CB 80 0265
        gbc.setState(0x37f, 0x70f7, 0x9550, 0x36b, 0x5ce5, 0x3a72, 0x0, 0x1);
        gbc.writeMem(0x37f, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x70f7);
        EXPECT(gbc.pc(), 0x381);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0266
        gbc.setState(0xee3c, 0x5d0c, 0xd670, 0x39e8, 0xaf10, 0x3568, 0x0, 0x1);
        gbc.writeMem(0xee3c, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x5d0c);
        EXPECT(gbc.pc(), 0xee3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee3c), 0xcb);
        EXPECT(gbc.readMem(0xee3d), 0x80);
        // CB 80 0267
        gbc.setState(0xbd0e, 0xdb39, 0xc6c0, 0x2eb5, 0x3fa6, 0xf665, 0x0, 0x1);
        gbc.writeMem(0xbd0e, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xdb39);
        EXPECT(gbc.pc(), 0xbd10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd0e), 0xcb);
        EXPECT(gbc.readMem(0xbd0f), 0x80);
        // CB 80 0268
        gbc.setState(0xe10c, 0x2e00, 0x31c0, 0xee7f, 0x272a, 0x8dd4, 0x0, 0x0);
        gbc.writeMem(0xe10c, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x2e00);
        EXPECT(gbc.pc(), 0xe10e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe10c), 0xcb);
        EXPECT(gbc.readMem(0xe10d), 0x80);
        // CB 80 0269
        gbc.setState(0x3170, 0x9ede, 0xcd10, 0xa209, 0x90d0, 0xd16a, 0x1, 0x0);
        gbc.writeMem(0x3170, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x9ede);
        EXPECT(gbc.pc(), 0x3172);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 026A
        gbc.setState(0x89af, 0xa0e4, 0x6a20, 0x35f9, 0x344e, 0xe33a, 0x0, 0x1);
        gbc.writeMem(0x89af, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xa0e4);
        EXPECT(gbc.pc(), 0x89b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89af), 0xcb);
        EXPECT(gbc.readMem(0x89b0), 0x80);
        // CB 80 026B
        gbc.setState(0x5557, 0x70d3, 0xdab0, 0x82cc, 0xa414, 0x647e, 0x0, 0x0);
        gbc.writeMem(0x5557, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x70d3);
        EXPECT(gbc.pc(), 0x5559);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 026C
        gbc.setState(0x2737, 0x6672, 0x3b30, 0x615d, 0xc150, 0xdb65, 0x1, 0x0);
        gbc.writeMem(0x2737, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x6672);
        EXPECT(gbc.pc(), 0x2739);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 026D
        gbc.setState(0x1be5, 0x901b, 0x3380, 0x7e7a, 0x558c, 0x7a86, 0x1, 0x1);
        gbc.writeMem(0x1be5, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x901b);
        EXPECT(gbc.pc(), 0x1be7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 026E
        gbc.setState(0xb3ad, 0xafb1, 0x5970, 0x5c4, 0xfdeb, 0x3170, 0x0, 0x1);
        gbc.writeMem(0xb3ad, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xafb1);
        EXPECT(gbc.pc(), 0xb3af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3ad), 0xcb);
        EXPECT(gbc.readMem(0xb3ae), 0x80);
        // CB 80 026F
        gbc.setState(0x457f, 0x26dd, 0x3910, 0xa7e8, 0x787a, 0x381e, 0x0, 0x0);
        gbc.writeMem(0x457f, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x26dd);
        EXPECT(gbc.pc(), 0x4581);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0270
        gbc.setState(0xa478, 0x2d08, 0x3bf0, 0xf552, 0xb3bc, 0x94cf, 0x1, 0x1);
        gbc.writeMem(0xa478, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x2d08);
        EXPECT(gbc.pc(), 0xa47a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa478), 0xcb);
        EXPECT(gbc.readMem(0xa479), 0x80);
        // CB 80 0271
        gbc.setState(0xb967, 0x23de, 0xc4f0, 0x299c, 0x83b7, 0x2299, 0x1, 0x0);
        gbc.writeMem(0xb967, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x23de);
        EXPECT(gbc.pc(), 0xb969);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb967), 0xcb);
        EXPECT(gbc.readMem(0xb968), 0x80);
        // CB 80 0272
        gbc.setState(0x51e2, 0xb977, 0x1f0, 0x9745, 0x36d8, 0x75e3, 0x0, 0x1);
        gbc.writeMem(0x51e2, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xb977);
        EXPECT(gbc.pc(), 0x51e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0273
        gbc.setState(0x10e9, 0x77df, 0x4430, 0xa105, 0xdf7e, 0xaa0c, 0x0, 0x0);
        gbc.writeMem(0x10e9, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x77df);
        EXPECT(gbc.pc(), 0x10eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0274
        gbc.setState(0xea, 0xf816, 0xd300, 0xde30, 0x6cf3, 0x90f4, 0x0, 0x0);
        gbc.writeMem(0xea, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xf816);
        EXPECT(gbc.pc(), 0xec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0275
        gbc.setState(0x91d7, 0xdf4d, 0xb9e0, 0x472d, 0x5259, 0x2a0b, 0x1, 0x1);
        gbc.writeMem(0x91d7, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xdf4d);
        EXPECT(gbc.pc(), 0x91d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91d7), 0xcb);
        EXPECT(gbc.readMem(0x91d8), 0x80);
        // CB 80 0276
        gbc.setState(0x6ccb, 0xee96, 0xd130, 0xf461, 0xdeb0, 0x3bb6, 0x0, 0x1);
        gbc.writeMem(0x6ccb, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xee96);
        EXPECT(gbc.pc(), 0x6ccd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0277
        gbc.setState(0xc5dc, 0xd378, 0x11f0, 0x2058, 0xa77d, 0x37e6, 0x0, 0x1);
        gbc.writeMem(0xc5dc, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xd378);
        EXPECT(gbc.pc(), 0xc5de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5dc), 0xcb);
        EXPECT(gbc.readMem(0xc5dd), 0x80);
        // CB 80 0278
        gbc.setState(0x5558, 0xb806, 0xc4f0, 0x6c68, 0xf0fa, 0xbd39, 0x0, 0x1);
        gbc.writeMem(0x5558, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xb806);
        EXPECT(gbc.pc(), 0x555a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 027A
        gbc.setState(0x266d, 0x526d, 0x1830, 0x96cf, 0xc6ff, 0xec5c, 0x0, 0x0);
        gbc.writeMem(0x266d, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x526d);
        EXPECT(gbc.pc(), 0x266f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 027B
        gbc.setState(0xe2d6, 0x19ae, 0xe2d0, 0x8d43, 0x15f3, 0x8146, 0x1, 0x0);
        gbc.writeMem(0xe2d6, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x19ae);
        EXPECT(gbc.pc(), 0xe2d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2d6), 0xcb);
        EXPECT(gbc.readMem(0xe2d7), 0x80);
        // CB 80 027C
        gbc.setState(0x7bf3, 0x35b9, 0x5510, 0x6ce8, 0x8c57, 0x2f81, 0x0, 0x0);
        gbc.writeMem(0x7bf3, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x35b9);
        EXPECT(gbc.pc(), 0x7bf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 027D
        gbc.setState(0x8f3a, 0xbc56, 0x22c0, 0x3506, 0x7f5b, 0xbb22, 0x0, 0x0);
        gbc.writeMem(0x8f3a, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xbc56);
        EXPECT(gbc.pc(), 0x8f3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f3a), 0xcb);
        EXPECT(gbc.readMem(0x8f3b), 0x80);
        // CB 80 027E
        gbc.setState(0x1b7a, 0x93ea, 0xcff0, 0xeeab, 0xdaef, 0x375, 0x0, 0x1);
        gbc.writeMem(0x1b7a, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x93ea);
        EXPECT(gbc.pc(), 0x1b7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 027F
        gbc.setState(0xee4a, 0xaec1, 0x1da0, 0x1145, 0x2204, 0x5505, 0x1, 0x0);
        gbc.writeMem(0xee4a, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xaec1);
        EXPECT(gbc.pc(), 0xee4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee4a), 0xcb);
        EXPECT(gbc.readMem(0xee4b), 0x80);
        // CB 80 0280
        gbc.setState(0x44f2, 0x348d, 0xe5a0, 0x10ab, 0x671a, 0xe689, 0x0, 0x1);
        gbc.writeMem(0x44f2, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x348d);
        EXPECT(gbc.pc(), 0x44f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0281
        gbc.setState(0x78c2, 0x2278, 0x7630, 0xd237, 0x9d5d, 0xdf73, 0x0, 0x1);
        gbc.writeMem(0x78c2, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x2278);
        EXPECT(gbc.pc(), 0x78c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0282
        gbc.setState(0x85fe, 0xf3fe, 0xcd70, 0xb4f7, 0x7bd4, 0x2864, 0x1, 0x1);
        gbc.writeMem(0x85fe, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xf3fe);
        EXPECT(gbc.pc(), 0x8600);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85fe), 0xcb);
        EXPECT(gbc.readMem(0x85ff), 0x80);
        // CB 80 0283
        gbc.setState(0xc698, 0x90, 0xcb90, 0x35c1, 0x14ca, 0x3c35, 0x1, 0x1);
        gbc.writeMem(0xc698, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x90);
        EXPECT(gbc.pc(), 0xc69a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc698), 0xcb);
        EXPECT(gbc.readMem(0xc699), 0x80);
        // CB 80 0284
        gbc.setState(0x5a4a, 0x71cd, 0xe370, 0xca9a, 0x487c, 0x8c64, 0x0, 0x1);
        gbc.writeMem(0x5a4a, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x71cd);
        EXPECT(gbc.pc(), 0x5a4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0285
        gbc.setState(0xcd4f, 0x679e, 0xca90, 0x582c, 0x973, 0x2898, 0x1, 0x0);
        gbc.writeMem(0xcd4f, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x679e);
        EXPECT(gbc.pc(), 0xcd51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd4f), 0xcb);
        EXPECT(gbc.readMem(0xcd50), 0x80);
        // CB 80 0286
        gbc.setState(0xb1d2, 0xc86f, 0x920, 0xf246, 0xdea2, 0xb6a8, 0x0, 0x0);
        gbc.writeMem(0xb1d2, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xc86f);
        EXPECT(gbc.pc(), 0xb1d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1d2), 0xcb);
        EXPECT(gbc.readMem(0xb1d3), 0x80);
        // CB 80 0287
        gbc.setState(0xa5ac, 0x67b9, 0xcad0, 0xea73, 0x2488, 0x31c5, 0x1, 0x0);
        gbc.writeMem(0xa5ac, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x67b9);
        EXPECT(gbc.pc(), 0xa5ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5ac), 0xcb);
        EXPECT(gbc.readMem(0xa5ad), 0x80);
        // CB 80 0288
        gbc.setState(0xcd89, 0xe916, 0x3c50, 0xa98a, 0x2b4d, 0x994e, 0x0, 0x0);
        gbc.writeMem(0xcd89, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xe916);
        EXPECT(gbc.pc(), 0xcd8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd89), 0xcb);
        EXPECT(gbc.readMem(0xcd8a), 0x80);
        // CB 80 0289
        gbc.setState(0x834a, 0xa5a8, 0xb190, 0x7bf9, 0x6b2b, 0x8ce1, 0x1, 0x1);
        gbc.writeMem(0x834a, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xa5a8);
        EXPECT(gbc.pc(), 0x834c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x834a), 0xcb);
        EXPECT(gbc.readMem(0x834b), 0x80);
        // CB 80 028A
        gbc.setState(0x5f02, 0x3415, 0x3980, 0x19fc, 0xa5c5, 0x4d0, 0x0, 0x1);
        gbc.writeMem(0x5f02, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x3415);
        EXPECT(gbc.pc(), 0x5f04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 028C
        gbc.setState(0xad31, 0xd13, 0x3380, 0x35cd, 0x3caf, 0x822e, 0x0, 0x0);
        gbc.writeMem(0xad31, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xd13);
        EXPECT(gbc.pc(), 0xad33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad31), 0xcb);
        EXPECT(gbc.readMem(0xad32), 0x80);
        // CB 80 028D
        gbc.setState(0xb73a, 0xd034, 0x7c10, 0xf8b2, 0x4c21, 0x658d, 0x0, 0x0);
        gbc.writeMem(0xb73a, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xd034);
        EXPECT(gbc.pc(), 0xb73c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb73a), 0xcb);
        EXPECT(gbc.readMem(0xb73b), 0x80);
        // CB 80 028E
        gbc.setState(0xa537, 0xd24a, 0x8080, 0x498f, 0x4dc1, 0x7e85, 0x0, 0x1);
        gbc.writeMem(0xa537, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xd24a);
        EXPECT(gbc.pc(), 0xa539);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa537), 0xcb);
        EXPECT(gbc.readMem(0xa538), 0x80);
        // CB 80 028F
        gbc.setState(0x6b05, 0xaed3, 0x5ad0, 0x3740, 0x30d4, 0x18af, 0x0, 0x0);
        gbc.writeMem(0x6b05, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xaed3);
        EXPECT(gbc.pc(), 0x6b07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0290
        gbc.setState(0xe5b4, 0xd50a, 0x8ee0, 0x4302, 0xd560, 0x5a00, 0x1, 0x1);
        gbc.writeMem(0xe5b4, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xd50a);
        EXPECT(gbc.pc(), 0xe5b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5b4), 0xcb);
        EXPECT(gbc.readMem(0xe5b5), 0x80);
        // CB 80 0291
        gbc.setState(0x2595, 0xb950, 0x33f0, 0xc92f, 0x9d57, 0xb3c4, 0x0, 0x0);
        gbc.writeMem(0x2595, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xb950);
        EXPECT(gbc.pc(), 0x2597);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0292
        gbc.setState(0xa210, 0xa493, 0x6410, 0xf4be, 0xffb7, 0xcfc5, 0x1, 0x0);
        gbc.writeMem(0xa210, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xa493);
        EXPECT(gbc.pc(), 0xa212);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa210), 0xcb);
        EXPECT(gbc.readMem(0xa211), 0x80);
        // CB 80 0293
        gbc.setState(0x830e, 0x1912, 0x5d00, 0x727a, 0xa844, 0xac6, 0x1, 0x1);
        gbc.writeMem(0x830e, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x1912);
        EXPECT(gbc.pc(), 0x8310);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x830e), 0xcb);
        EXPECT(gbc.readMem(0x830f), 0x80);
        // CB 80 0294
        gbc.setState(0x83a8, 0xfe, 0x280, 0xb34, 0x352d, 0x3cc0, 0x1, 0x0);
        gbc.writeMem(0x83a8, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xfe);
        EXPECT(gbc.pc(), 0x83aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83a8), 0xcb);
        EXPECT(gbc.readMem(0x83a9), 0x80);
        // CB 80 0295
        gbc.setState(0x63e6, 0x655d, 0xfd90, 0x8a62, 0x81b, 0x89be, 0x1, 0x0);
        gbc.writeMem(0x63e6, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x655d);
        EXPECT(gbc.pc(), 0x63e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0296
        gbc.setState(0xea2f, 0x66f6, 0xe580, 0x66b8, 0x4b3a, 0x8f40, 0x1, 0x1);
        gbc.writeMem(0xea2f, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x66f6);
        EXPECT(gbc.pc(), 0xea31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea2f), 0xcb);
        EXPECT(gbc.readMem(0xea30), 0x80);
        // CB 80 0297
        gbc.setState(0x42d3, 0x2e5c, 0x3870, 0x3f4e, 0xa8f7, 0x600e, 0x0, 0x0);
        gbc.writeMem(0x42d3, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x2e5c);
        EXPECT(gbc.pc(), 0x42d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0298
        gbc.setState(0x24fa, 0xc9ab, 0x8630, 0xf8c9, 0xad91, 0x90e5, 0x1, 0x1);
        gbc.writeMem(0x24fa, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xc9ab);
        EXPECT(gbc.pc(), 0x24fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0299
        gbc.setState(0xceb7, 0x240c, 0x100, 0x1534, 0x496b, 0x27db, 0x1, 0x1);
        gbc.writeMem(0xceb7, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x240c);
        EXPECT(gbc.pc(), 0xceb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xceb7), 0xcb);
        EXPECT(gbc.readMem(0xceb8), 0x80);
        // CB 80 029A
        gbc.setState(0x16af, 0x367b, 0xfe80, 0xfdd1, 0x9035, 0xa121, 0x0, 0x0);
        gbc.writeMem(0x16af, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x367b);
        EXPECT(gbc.pc(), 0x16b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 029B
        gbc.setState(0x47a2, 0x35e, 0x7820, 0x96af, 0x6b9e, 0xcad, 0x1, 0x0);
        gbc.writeMem(0x47a2, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x35e);
        EXPECT(gbc.pc(), 0x47a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 029C
        gbc.setState(0x3709, 0xa99d, 0xf8d0, 0x8c45, 0xf3a0, 0xa8fb, 0x1, 0x0);
        gbc.writeMem(0x3709, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xa99d);
        EXPECT(gbc.pc(), 0x370b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 029D
        gbc.setState(0x4892, 0xc76e, 0x4670, 0x38e2, 0x9b58, 0x8bc, 0x0, 0x0);
        gbc.writeMem(0x4892, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xc76e);
        EXPECT(gbc.pc(), 0x4894);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 029E
        gbc.setState(0xcd78, 0xc5b1, 0x7e90, 0x9659, 0x67c8, 0xec71, 0x1, 0x0);
        gbc.writeMem(0xcd78, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xc5b1);
        EXPECT(gbc.pc(), 0xcd7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd78), 0xcb);
        EXPECT(gbc.readMem(0xcd79), 0x80);
        // CB 80 029F
        gbc.setState(0x3ff, 0xb99a, 0xfe50, 0x8481, 0x1749, 0x3a4d, 0x0, 0x1);
        gbc.writeMem(0x3ff, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xb99a);
        EXPECT(gbc.pc(), 0x401);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 02A0
        gbc.setState(0xdfb7, 0x1fce, 0x9890, 0xbb10, 0xf4d, 0x7b88, 0x0, 0x0);
        gbc.writeMem(0xdfb7, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x1fce);
        EXPECT(gbc.pc(), 0xdfb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfb7), 0xcb);
        EXPECT(gbc.readMem(0xdfb8), 0x80);
        // CB 80 02A2
        gbc.setState(0x6cdc, 0xb81f, 0xab30, 0x8953, 0xfc04, 0xeb8c, 0x0, 0x1);
        gbc.writeMem(0x6cdc, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xb81f);
        EXPECT(gbc.pc(), 0x6cde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 02A3
        gbc.setState(0x59db, 0x81ed, 0x8a90, 0x6ff1, 0xe595, 0xa873, 0x0, 0x0);
        gbc.writeMem(0x59db, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x81ed);
        EXPECT(gbc.pc(), 0x59dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 02A4
        gbc.setState(0x93f0, 0x28a0, 0x8020, 0x4c96, 0x305f, 0x296d, 0x0, 0x0);
        gbc.writeMem(0x93f0, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x28a0);
        EXPECT(gbc.pc(), 0x93f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93f0), 0xcb);
        EXPECT(gbc.readMem(0x93f1), 0x80);
        // CB 80 02A5
        gbc.setState(0x205a, 0x6196, 0xb5e0, 0x4687, 0xee46, 0x371c, 0x1, 0x1);
        gbc.writeMem(0x205a, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x6196);
        EXPECT(gbc.pc(), 0x205c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 02A6
        gbc.setState(0x5edb, 0xd077, 0xa970, 0xc1d0, 0x8a3e, 0xfa03, 0x1, 0x0);
        gbc.writeMem(0x5edb, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xd077);
        EXPECT(gbc.pc(), 0x5edd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 02A7
        gbc.setState(0x75de, 0x4da3, 0xdd30, 0xd6f4, 0x2ae6, 0xbcbf, 0x0, 0x0);
        gbc.writeMem(0x75de, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x4da3);
        EXPECT(gbc.pc(), 0x75e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 02A9
        gbc.setState(0x89f5, 0x7162, 0x9600, 0x5309, 0x434b, 0xa043, 0x0, 0x1);
        gbc.writeMem(0x89f5, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x7162);
        EXPECT(gbc.pc(), 0x89f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89f5), 0xcb);
        EXPECT(gbc.readMem(0x89f6), 0x80);
        // CB 80 02AA
        gbc.setState(0xd2d4, 0xe924, 0xaea0, 0x8375, 0x8e77, 0xf813, 0x1, 0x0);
        gbc.writeMem(0xd2d4, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xe924);
        EXPECT(gbc.pc(), 0xd2d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2d4), 0xcb);
        EXPECT(gbc.readMem(0xd2d5), 0x80);
        // CB 80 02AB
        gbc.setState(0x8b3b, 0xe4fe, 0x2880, 0xb963, 0x41f3, 0x2249, 0x0, 0x1);
        gbc.writeMem(0x8b3b, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xe4fe);
        EXPECT(gbc.pc(), 0x8b3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b3b), 0xcb);
        EXPECT(gbc.readMem(0x8b3c), 0x80);
        // CB 80 02AC
        gbc.setState(0x6299, 0xa2b7, 0x33d0, 0x56d, 0x240c, 0x5b90, 0x1, 0x1);
        gbc.writeMem(0x6299, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xa2b7);
        EXPECT(gbc.pc(), 0x629b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 02AD
        gbc.setState(0xa7f6, 0x4bb, 0xd450, 0x7d8f, 0x104f, 0xbcdd, 0x0, 0x0);
        gbc.writeMem(0xa7f6, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x4bb);
        EXPECT(gbc.pc(), 0xa7f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7f6), 0xcb);
        EXPECT(gbc.readMem(0xa7f7), 0x80);
        // CB 80 02AE
        gbc.setState(0x9da4, 0xdf18, 0x10f0, 0xf3b1, 0xb8bc, 0x7e5b, 0x1, 0x0);
        gbc.writeMem(0x9da4, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xdf18);
        EXPECT(gbc.pc(), 0x9da6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9da4), 0xcb);
        EXPECT(gbc.readMem(0x9da5), 0x80);
        // CB 80 02AF
        gbc.setState(0x1cbd, 0x3d0e, 0x8900, 0x2d69, 0xbbda, 0xa64f, 0x1, 0x0);
        gbc.writeMem(0x1cbd, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x3d0e);
        EXPECT(gbc.pc(), 0x1cbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 02B0
        gbc.setState(0xd42c, 0x8845, 0xf850, 0xf109, 0x7ce8, 0xfc7b, 0x0, 0x0);
        gbc.writeMem(0xd42c, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x8845);
        EXPECT(gbc.pc(), 0xd42e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd42c), 0xcb);
        EXPECT(gbc.readMem(0xd42d), 0x80);
        // CB 80 02B1
        gbc.setState(0xbce2, 0x2d34, 0x5af0, 0x216f, 0x6df4, 0x5148, 0x1, 0x1);
        gbc.writeMem(0xbce2, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x2d34);
        EXPECT(gbc.pc(), 0xbce4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbce2), 0xcb);
        EXPECT(gbc.readMem(0xbce3), 0x80);
        // CB 80 02B2
        gbc.setState(0x2520, 0x5abf, 0xe480, 0xd416, 0x748c, 0x63db, 0x1, 0x0);
        gbc.writeMem(0x2520, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x5abf);
        EXPECT(gbc.pc(), 0x2522);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 02B3
        gbc.setState(0x92e2, 0x641d, 0x5390, 0x1cf4, 0x97f, 0xa5a6, 0x0, 0x0);
        gbc.writeMem(0x92e2, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x641d);
        EXPECT(gbc.pc(), 0x92e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92e2), 0xcb);
        EXPECT(gbc.readMem(0x92e3), 0x80);
        // CB 80 02B4
        gbc.setState(0x611d, 0x26a8, 0xbdf0, 0x9f57, 0xff5e, 0xe72a, 0x0, 0x1);
        gbc.writeMem(0x611d, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x26a8);
        EXPECT(gbc.pc(), 0x611f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 02B5
        gbc.setState(0xd73d, 0x2f61, 0xf560, 0x8bb, 0xa77d, 0x7452, 0x0, 0x0);
        gbc.writeMem(0xd73d, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x2f61);
        EXPECT(gbc.pc(), 0xd73f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd73d), 0xcb);
        EXPECT(gbc.readMem(0xd73e), 0x80);
        // CB 80 02B6
        gbc.setState(0xe645, 0x4ec0, 0x2bb0, 0x3cc0, 0x3533, 0x53e0, 0x0, 0x0);
        gbc.writeMem(0xe645, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x4ec0);
        EXPECT(gbc.pc(), 0xe647);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe645), 0xcb);
        EXPECT(gbc.readMem(0xe646), 0x80);
        // CB 80 02B7
        gbc.setState(0xd633, 0xb92a, 0xc0c0, 0xeda9, 0x67d0, 0x87f5, 0x0, 0x1);
        gbc.writeMem(0xd633, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xb92a);
        EXPECT(gbc.pc(), 0xd635);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd633), 0xcb);
        EXPECT(gbc.readMem(0xd634), 0x80);
        // CB 80 02B8
        gbc.setState(0x948e, 0xdf2, 0x4740, 0xf7c7, 0x10f2, 0x3809, 0x1, 0x0);
        gbc.writeMem(0x948e, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xdf2);
        EXPECT(gbc.pc(), 0x9490);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x948e), 0xcb);
        EXPECT(gbc.readMem(0x948f), 0x80);
        // CB 80 02B9
        gbc.setState(0x2f3e, 0xdc29, 0x4e50, 0xad0, 0x3173, 0xe78b, 0x0, 0x0);
        gbc.writeMem(0x2f3e, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xdc29);
        EXPECT(gbc.pc(), 0x2f40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 02BA
        gbc.setState(0xa91d, 0x791a, 0xb430, 0xf758, 0xbc49, 0xdf77, 0x0, 0x0);
        gbc.writeMem(0xa91d, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x791a);
        EXPECT(gbc.pc(), 0xa91f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa91d), 0xcb);
        EXPECT(gbc.readMem(0xa91e), 0x80);
        // CB 80 02BB
        gbc.setState(0x508f, 0x9eb7, 0xc4f0, 0x88b9, 0xb1d3, 0xf6f4, 0x1, 0x0);
        gbc.writeMem(0x508f, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x9eb7);
        EXPECT(gbc.pc(), 0x5091);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 02BD
        gbc.setState(0xc149, 0x2b0d, 0x3a70, 0x596a, 0x6dcf, 0x22ca, 0x1, 0x0);
        gbc.writeMem(0xc149, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x2b0d);
        EXPECT(gbc.pc(), 0xc14b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc149), 0xcb);
        EXPECT(gbc.readMem(0xc14a), 0x80);
        // CB 80 02BE
        gbc.setState(0x622f, 0xc607, 0xa6e0, 0xf1e3, 0xb58b, 0x32ed, 0x1, 0x0);
        gbc.writeMem(0x622f, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xc607);
        EXPECT(gbc.pc(), 0x6231);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 02BF
        gbc.setState(0xea6d, 0x773a, 0xc7f0, 0xfa33, 0x1a03, 0xb46f, 0x0, 0x1);
        gbc.writeMem(0xea6d, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x773a);
        EXPECT(gbc.pc(), 0xea6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea6d), 0xcb);
        EXPECT(gbc.readMem(0xea6e), 0x80);
        // CB 80 02C0
        gbc.setState(0x5308, 0x74b1, 0xcae0, 0x501a, 0xabcc, 0xe58b, 0x0, 0x1);
        gbc.writeMem(0x5308, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x74b1);
        EXPECT(gbc.pc(), 0x530a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 02C1
        gbc.setState(0x2946, 0x230e, 0xe530, 0x94b4, 0x91b1, 0x6d02, 0x1, 0x1);
        gbc.writeMem(0x2946, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x230e);
        EXPECT(gbc.pc(), 0x2948);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 02C2
        gbc.setState(0xe4ff, 0x3197, 0xb0e0, 0xf4b6, 0x1355, 0x878a, 0x0, 0x1);
        gbc.writeMem(0xe4ff, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x3197);
        EXPECT(gbc.pc(), 0xe501);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4ff), 0xcb);
        EXPECT(gbc.readMem(0xe500), 0x80);
        // CB 80 02C3
        gbc.setState(0x86ee, 0xc3ba, 0xcc50, 0x9bc, 0x59bd, 0x7a52, 0x1, 0x0);
        gbc.writeMem(0x86ee, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xc3ba);
        EXPECT(gbc.pc(), 0x86f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86ee), 0xcb);
        EXPECT(gbc.readMem(0x86ef), 0x80);
        // CB 80 02C4
        gbc.setState(0x9773, 0xfc65, 0x4280, 0x8ebb, 0x643e, 0x7e27, 0x1, 0x1);
        gbc.writeMem(0x9773, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xfc65);
        EXPECT(gbc.pc(), 0x9775);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9773), 0xcb);
        EXPECT(gbc.readMem(0x9774), 0x80);
        // CB 80 02C5
        gbc.setState(0x8b79, 0xf788, 0x6790, 0xefd4, 0x6a2, 0xb051, 0x1, 0x0);
        gbc.writeMem(0x8b79, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xf788);
        EXPECT(gbc.pc(), 0x8b7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b79), 0xcb);
        EXPECT(gbc.readMem(0x8b7a), 0x80);
        // CB 80 02C6
        gbc.setState(0x475a, 0x55d0, 0xe040, 0xd263, 0x9117, 0xeb62, 0x1, 0x1);
        gbc.writeMem(0x475a, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x55d0);
        EXPECT(gbc.pc(), 0x475c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 02C7
        gbc.setState(0x2e85, 0x2eaf, 0xa7d0, 0xfb81, 0x8923, 0xba21, 0x0, 0x1);
        gbc.writeMem(0x2e85, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x2eaf);
        EXPECT(gbc.pc(), 0x2e87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 02C9
        gbc.setState(0x1b, 0xdf17, 0x51c0, 0xa79a, 0x6dfd, 0xec69, 0x0, 0x0);
        gbc.writeMem(0x1b, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xdf17);
        EXPECT(gbc.pc(), 0x1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 02CB
        gbc.setState(0x47ba, 0xb219, 0x7530, 0xf914, 0xf57d, 0x5c27, 0x1, 0x1);
        gbc.writeMem(0x47ba, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xb219);
        EXPECT(gbc.pc(), 0x47bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 02CC
        gbc.setState(0xbceb, 0xaf5f, 0x3b90, 0x761a, 0x1149, 0xb9a1, 0x1, 0x1);
        gbc.writeMem(0xbceb, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xaf5f);
        EXPECT(gbc.pc(), 0xbced);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbceb), 0xcb);
        EXPECT(gbc.readMem(0xbcec), 0x80);
        // CB 80 02CD
        gbc.setState(0xcf25, 0x184c, 0x2d30, 0x29d, 0x1ac2, 0x579e, 0x1, 0x1);
        gbc.writeMem(0xcf25, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x184c);
        EXPECT(gbc.pc(), 0xcf27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf25), 0xcb);
        EXPECT(gbc.readMem(0xcf26), 0x80);
        // CB 80 02CE
        gbc.setState(0x9155, 0xd446, 0xcee0, 0x7a, 0x5d30, 0xa188, 0x1, 0x0);
        gbc.writeMem(0x9155, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xd446);
        EXPECT(gbc.pc(), 0x9157);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9155), 0xcb);
        EXPECT(gbc.readMem(0x9156), 0x80);
        // CB 80 02CF
        gbc.setState(0xa743, 0x6b1b, 0x6ef0, 0x1f92, 0x8a83, 0xf011, 0x0, 0x1);
        gbc.writeMem(0xa743, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x6b1b);
        EXPECT(gbc.pc(), 0xa745);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa743), 0xcb);
        EXPECT(gbc.readMem(0xa744), 0x80);
        // CB 80 02D0
        gbc.setState(0x2324, 0x1561, 0xd4a0, 0x8cec, 0xd692, 0xd58a, 0x0, 0x0);
        gbc.writeMem(0x2324, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x1561);
        EXPECT(gbc.pc(), 0x2326);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 02D1
        gbc.setState(0xb68d, 0x45ae, 0x9230, 0xd332, 0xad2c, 0xc242, 0x0, 0x0);
        gbc.writeMem(0xb68d, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x45ae);
        EXPECT(gbc.pc(), 0xb68f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb68d), 0xcb);
        EXPECT(gbc.readMem(0xb68e), 0x80);
        // CB 80 02D3
        gbc.setState(0x77c7, 0xc8ba, 0xf70, 0xedf0, 0xf097, 0xc829, 0x1, 0x1);
        gbc.writeMem(0x77c7, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xc8ba);
        EXPECT(gbc.pc(), 0x77c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 02D4
        gbc.setState(0xdb56, 0x7222, 0xf2a0, 0xeae2, 0x7447, 0x7fef, 0x1, 0x0);
        gbc.writeMem(0xdb56, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x7222);
        EXPECT(gbc.pc(), 0xdb58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb56), 0xcb);
        EXPECT(gbc.readMem(0xdb57), 0x80);
        // CB 80 02D5
        gbc.setState(0x544, 0xb358, 0x6530, 0x2bed, 0x85d6, 0x5da0, 0x0, 0x1);
        gbc.writeMem(0x544, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xb358);
        EXPECT(gbc.pc(), 0x546);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 02D6
        gbc.setState(0xb28c, 0x2826, 0xed00, 0x3a19, 0x681a, 0x7965, 0x1, 0x1);
        gbc.writeMem(0xb28c, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x2826);
        EXPECT(gbc.pc(), 0xb28e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb28c), 0xcb);
        EXPECT(gbc.readMem(0xb28d), 0x80);
        // CB 80 02D7
        gbc.setState(0xc3af, 0xa904, 0x2150, 0x3e7e, 0x9681, 0xab04, 0x1, 0x1);
        gbc.writeMem(0xc3af, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xa904);
        EXPECT(gbc.pc(), 0xc3b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3af), 0xcb);
        EXPECT(gbc.readMem(0xc3b0), 0x80);
        // CB 80 02D8
        gbc.setState(0xc1e5, 0x722c, 0x7370, 0x1cbb, 0xf38d, 0x6769, 0x1, 0x0);
        gbc.writeMem(0xc1e5, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x722c);
        EXPECT(gbc.pc(), 0xc1e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1e5), 0xcb);
        EXPECT(gbc.readMem(0xc1e6), 0x80);
        // CB 80 02D9
        gbc.setState(0x265f, 0x7d04, 0x6f40, 0x1d06, 0xa2f5, 0x4508, 0x0, 0x1);
        gbc.writeMem(0x265f, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x7d04);
        EXPECT(gbc.pc(), 0x2661);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 02DA
        gbc.setState(0xb372, 0x8f78, 0x1e80, 0x9c0a, 0xd3d2, 0xead5, 0x0, 0x0);
        gbc.writeMem(0xb372, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x8f78);
        EXPECT(gbc.pc(), 0xb374);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb372), 0xcb);
        EXPECT(gbc.readMem(0xb373), 0x80);
        // CB 80 02DB
        gbc.setState(0xa1af, 0x6819, 0x6be0, 0xe0e2, 0xa76d, 0xd832, 0x1, 0x0);
        gbc.writeMem(0xa1af, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x6819);
        EXPECT(gbc.pc(), 0xa1b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1af), 0xcb);
        EXPECT(gbc.readMem(0xa1b0), 0x80);
        // CB 80 02DC
        gbc.setState(0x398f, 0x3446, 0x4ce0, 0xf85b, 0xa6f2, 0xc6f3, 0x0, 0x1);
        gbc.writeMem(0x398f, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x3446);
        EXPECT(gbc.pc(), 0x3991);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 02DD
        gbc.setState(0xb9ae, 0xf9d8, 0x53f0, 0x145e, 0x8cfa, 0x32f9, 0x0, 0x0);
        gbc.writeMem(0xb9ae, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xf9d8);
        EXPECT(gbc.pc(), 0xb9b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9ae), 0xcb);
        EXPECT(gbc.readMem(0xb9af), 0x80);
        // CB 80 02DE
        gbc.setState(0xd239, 0xb815, 0x3c50, 0x22e0, 0x9caf, 0x395e, 0x0, 0x1);
        gbc.writeMem(0xd239, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xb815);
        EXPECT(gbc.pc(), 0xd23b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd239), 0xcb);
        EXPECT(gbc.readMem(0xd23a), 0x80);
        // CB 80 02DF
        gbc.setState(0x7089, 0x8658, 0x8e90, 0x786d, 0xc06f, 0xe35c, 0x0, 0x1);
        gbc.writeMem(0x7089, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x8658);
        EXPECT(gbc.pc(), 0x708b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 02E0
        gbc.setState(0x31af, 0xcbf, 0x5240, 0xb714, 0xf5c2, 0x561d, 0x1, 0x0);
        gbc.writeMem(0x31af, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xcbf);
        EXPECT(gbc.pc(), 0x31b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 02E1
        gbc.setState(0x5a5e, 0xaf47, 0x4d80, 0x6988, 0x4972, 0x25ba, 0x0, 0x0);
        gbc.writeMem(0x5a5e, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xaf47);
        EXPECT(gbc.pc(), 0x5a60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 02E2
        gbc.setState(0x11b6, 0x49f8, 0x34b0, 0x9fcb, 0xd44, 0xc085, 0x0, 0x1);
        gbc.writeMem(0x11b6, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x49f8);
        EXPECT(gbc.pc(), 0x11b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 02E3
        gbc.setState(0xbaa4, 0x8851, 0x2ef0, 0x4df0, 0xa9fc, 0x82e9, 0x0, 0x1);
        gbc.writeMem(0xbaa4, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x8851);
        EXPECT(gbc.pc(), 0xbaa6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbaa4), 0xcb);
        EXPECT(gbc.readMem(0xbaa5), 0x80);
        // CB 80 02E4
        gbc.setState(0x1de6, 0x42b0, 0x7b30, 0x3c87, 0xd43d, 0xf3b5, 0x0, 0x1);
        gbc.writeMem(0x1de6, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x42b0);
        EXPECT(gbc.pc(), 0x1de8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 02E5
        gbc.setState(0xd875, 0x23f0, 0x5460, 0xe44b, 0xe19d, 0x9e61, 0x1, 0x1);
        gbc.writeMem(0xd875, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x23f0);
        EXPECT(gbc.pc(), 0xd877);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd875), 0xcb);
        EXPECT(gbc.readMem(0xd876), 0x80);
        // CB 80 02E6
        gbc.setState(0xe421, 0x9466, 0x6ec0, 0x678c, 0x3f19, 0xdd40, 0x0, 0x1);
        gbc.writeMem(0xe421, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x9466);
        EXPECT(gbc.pc(), 0xe423);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe421), 0xcb);
        EXPECT(gbc.readMem(0xe422), 0x80);
        // CB 80 02E7
        gbc.setState(0xa8c0, 0x179e, 0x2fa0, 0x6bac, 0xb166, 0xfe2e, 0x1, 0x1);
        gbc.writeMem(0xa8c0, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x179e);
        EXPECT(gbc.pc(), 0xa8c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8c0), 0xcb);
        EXPECT(gbc.readMem(0xa8c1), 0x80);
        // CB 80 02E9
        gbc.setState(0x2150, 0xb55e, 0xce0, 0x15e, 0xe172, 0xb13e, 0x1, 0x0);
        gbc.writeMem(0x2150, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xb55e);
        EXPECT(gbc.pc(), 0x2152);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 02EA
        gbc.setState(0xc586, 0xe533, 0xa580, 0x9f50, 0xe464, 0x7ce7, 0x0, 0x0);
        gbc.writeMem(0xc586, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xe533);
        EXPECT(gbc.pc(), 0xc588);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc586), 0xcb);
        EXPECT(gbc.readMem(0xc587), 0x80);
        // CB 80 02EB
        gbc.setState(0xdc35, 0xc1a5, 0xa970, 0x2770, 0x38c1, 0x8fa8, 0x0, 0x0);
        gbc.writeMem(0xdc35, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xc1a5);
        EXPECT(gbc.pc(), 0xdc37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc35), 0xcb);
        EXPECT(gbc.readMem(0xdc36), 0x80);
        // CB 80 02EC
        gbc.setState(0x147d, 0x5d00, 0xa150, 0x157e, 0x4d88, 0x96c2, 0x1, 0x1);
        gbc.writeMem(0x147d, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x5d00);
        EXPECT(gbc.pc(), 0x147f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 02ED
        gbc.setState(0x1b47, 0x36de, 0xaf30, 0x4b5d, 0x5b60, 0xe14d, 0x0, 0x1);
        gbc.writeMem(0x1b47, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x36de);
        EXPECT(gbc.pc(), 0x1b49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 02EE
        gbc.setState(0x7024, 0xbb89, 0x9040, 0x853a, 0x244f, 0x5175, 0x0, 0x1);
        gbc.writeMem(0x7024, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xbb89);
        EXPECT(gbc.pc(), 0x7026);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 02EF
        gbc.setState(0xb29, 0xe7cd, 0x1b00, 0x8ba1, 0xd3db, 0xd3fb, 0x0, 0x1);
        gbc.writeMem(0xb29, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xe7cd);
        EXPECT(gbc.pc(), 0xb2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 02F0
        gbc.setState(0xac66, 0x821f, 0x1b80, 0x81ad, 0x292e, 0x835a, 0x1, 0x0);
        gbc.writeMem(0xac66, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x821f);
        EXPECT(gbc.pc(), 0xac68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac66), 0xcb);
        EXPECT(gbc.readMem(0xac67), 0x80);
        // CB 80 02F1
        gbc.setState(0xaee5, 0xd48, 0x70d0, 0x781c, 0x129c, 0xf5d, 0x1, 0x0);
        gbc.writeMem(0xaee5, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xd48);
        EXPECT(gbc.pc(), 0xaee7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaee5), 0xcb);
        EXPECT(gbc.readMem(0xaee6), 0x80);
        // CB 80 02F2
        gbc.setState(0x75ba, 0xed23, 0xc300, 0x5545, 0x7f43, 0x2b1c, 0x1, 0x0);
        gbc.writeMem(0x75ba, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xed23);
        EXPECT(gbc.pc(), 0x75bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 02F3
        gbc.setState(0x9e35, 0x4453, 0x4b60, 0xe684, 0xc4ed, 0xde1c, 0x1, 0x0);
        gbc.writeMem(0x9e35, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x4453);
        EXPECT(gbc.pc(), 0x9e37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e35), 0xcb);
        EXPECT(gbc.readMem(0x9e36), 0x80);
        // CB 80 02F4
        gbc.setState(0xc1bf, 0xfae, 0xd0f0, 0xd7d9, 0x378, 0x66f5, 0x1, 0x1);
        gbc.writeMem(0xc1bf, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xfae);
        EXPECT(gbc.pc(), 0xc1c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1bf), 0xcb);
        EXPECT(gbc.readMem(0xc1c0), 0x80);
        // CB 80 02F5
        gbc.setState(0xb04e, 0x1a0d, 0x6e70, 0xe914, 0x291c, 0x5337, 0x0, 0x0);
        gbc.writeMem(0xb04e, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x1a0d);
        EXPECT(gbc.pc(), 0xb050);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb04e), 0xcb);
        EXPECT(gbc.readMem(0xb04f), 0x80);
        // CB 80 02F6
        gbc.setState(0x983a, 0xf778, 0x9c60, 0xa1d4, 0xb6b, 0x8ed0, 0x1, 0x0);
        gbc.writeMem(0x983a, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xf778);
        EXPECT(gbc.pc(), 0x983c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x983a), 0xcb);
        EXPECT(gbc.readMem(0x983b), 0x80);
        // CB 80 02F7
        gbc.setState(0x9169, 0x4466, 0xf30, 0xa9ce, 0xfe47, 0x6645, 0x1, 0x1);
        gbc.writeMem(0x9169, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x4466);
        EXPECT(gbc.pc(), 0x916b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9169), 0xcb);
        EXPECT(gbc.readMem(0x916a), 0x80);
        // CB 80 02F8
        gbc.setState(0x8495, 0x546b, 0x5ef0, 0x38e2, 0xae80, 0xda88, 0x0, 0x0);
        gbc.writeMem(0x8495, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x546b);
        EXPECT(gbc.pc(), 0x8497);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8495), 0xcb);
        EXPECT(gbc.readMem(0x8496), 0x80);
        // CB 80 02F9
        gbc.setState(0x4943, 0x14d9, 0x1740, 0xb643, 0xc27a, 0x458d, 0x1, 0x0);
        gbc.writeMem(0x4943, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x14d9);
        EXPECT(gbc.pc(), 0x4945);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 02FA
        gbc.setState(0x6127, 0x881c, 0x73a0, 0x8a34, 0x829b, 0x6776, 0x0, 0x0);
        gbc.writeMem(0x6127, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x881c);
        EXPECT(gbc.pc(), 0x6129);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 02FB
        gbc.setState(0xced2, 0x300c, 0x5020, 0x3e01, 0x94cd, 0x8cba, 0x0, 0x1);
        gbc.writeMem(0xced2, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x300c);
        EXPECT(gbc.pc(), 0xced4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xced2), 0xcb);
        EXPECT(gbc.readMem(0xced3), 0x80);
        // CB 80 02FC
        gbc.setState(0x322c, 0xd643, 0x7ea0, 0x5a60, 0xcb52, 0x3e78, 0x1, 0x1);
        gbc.writeMem(0x322c, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xd643);
        EXPECT(gbc.pc(), 0x322e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 02FD
        gbc.setState(0x4fff, 0x1db0, 0x8330, 0x9550, 0x57a8, 0xcd1e, 0x0, 0x1);
        gbc.writeMem(0x4fff, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x1db0);
        EXPECT(gbc.pc(), 0x5001);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 02FE
        gbc.setState(0x5ac9, 0xe71, 0x3390, 0xe1ac, 0xbd2c, 0xb11f, 0x1, 0x0);
        gbc.writeMem(0x5ac9, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xe71);
        EXPECT(gbc.pc(), 0x5acb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 02FF
        gbc.setState(0x4d39, 0x53e5, 0xc50, 0xedd0, 0xc3ee, 0x487e, 0x0, 0x1);
        gbc.writeMem(0x4d39, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x53e5);
        EXPECT(gbc.pc(), 0x4d3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0300
        gbc.setState(0x466e, 0x7106, 0xad40, 0x167a, 0x726c, 0x61db, 0x1, 0x0);
        gbc.writeMem(0x466e, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x7106);
        EXPECT(gbc.pc(), 0x4670);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0302
        gbc.setState(0x475a, 0x26d3, 0xf080, 0x4ef5, 0x7df4, 0xdcb6, 0x1, 0x1);
        gbc.writeMem(0x475a, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x26d3);
        EXPECT(gbc.pc(), 0x475c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0303
        gbc.setState(0x364e, 0x6176, 0x4910, 0xe046, 0x1c12, 0x3f7f, 0x0, 0x0);
        gbc.writeMem(0x364e, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x6176);
        EXPECT(gbc.pc(), 0x3650);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0304
        gbc.setState(0x393a, 0xf48, 0xff30, 0xe983, 0x4814, 0xbc54, 0x0, 0x1);
        gbc.writeMem(0x393a, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xf48);
        EXPECT(gbc.pc(), 0x393c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0305
        gbc.setState(0x10f4, 0x96cf, 0xc890, 0x51f8, 0xdb30, 0x759e, 0x1, 0x1);
        gbc.writeMem(0x10f4, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x96cf);
        EXPECT(gbc.pc(), 0x10f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0306
        gbc.setState(0xbce7, 0xd6, 0x82a0, 0xbc75, 0x706, 0x7dfe, 0x1, 0x1);
        gbc.writeMem(0xbce7, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xd6);
        EXPECT(gbc.pc(), 0xbce9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbce7), 0xcb);
        EXPECT(gbc.readMem(0xbce8), 0x80);
        // CB 80 0307
        gbc.setState(0xa854, 0xcab5, 0xfe0, 0x70a4, 0xd655, 0x2390, 0x1, 0x0);
        gbc.writeMem(0xa854, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xcab5);
        EXPECT(gbc.pc(), 0xa856);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa854), 0xcb);
        EXPECT(gbc.readMem(0xa855), 0x80);
        // CB 80 0308
        gbc.setState(0x87c1, 0x7fb1, 0x2200, 0xdfe0, 0x5a95, 0x8a69, 0x0, 0x0);
        gbc.writeMem(0x87c1, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x7fb1);
        EXPECT(gbc.pc(), 0x87c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87c1), 0xcb);
        EXPECT(gbc.readMem(0x87c2), 0x80);
        // CB 80 030A
        gbc.setState(0x3c82, 0x16a2, 0x2d00, 0x8583, 0x6cd2, 0x16d9, 0x0, 0x1);
        gbc.writeMem(0x3c82, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x16a2);
        EXPECT(gbc.pc(), 0x3c84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 030B
        gbc.setState(0x36e5, 0x6dbd, 0xae00, 0x81a5, 0x7c90, 0x2591, 0x1, 0x1);
        gbc.writeMem(0x36e5, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x6dbd);
        EXPECT(gbc.pc(), 0x36e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 030C
        gbc.setState(0x851d, 0xfe3e, 0x4980, 0xb981, 0x678c, 0x40ff, 0x0, 0x0);
        gbc.writeMem(0x851d, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xfe3e);
        EXPECT(gbc.pc(), 0x851f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x851d), 0xcb);
        EXPECT(gbc.readMem(0x851e), 0x80);
        // CB 80 030D
        gbc.setState(0x447, 0xcad, 0x3da0, 0xaec5, 0xd3a4, 0x4b79, 0x1, 0x1);
        gbc.writeMem(0x447, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xcad);
        EXPECT(gbc.pc(), 0x449);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 030F
        gbc.setState(0xd309, 0x7244, 0xa130, 0xc75b, 0x43d4, 0xe97c, 0x1, 0x0);
        gbc.writeMem(0xd309, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x7244);
        EXPECT(gbc.pc(), 0xd30b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd309), 0xcb);
        EXPECT(gbc.readMem(0xd30a), 0x80);
        // CB 80 0310
        gbc.setState(0x459a, 0x1387, 0x4100, 0xd09e, 0x7435, 0x44a6, 0x0, 0x1);
        gbc.writeMem(0x459a, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x1387);
        EXPECT(gbc.pc(), 0x459c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0311
        gbc.setState(0x2453, 0xf609, 0x8ae0, 0x120e, 0x8303, 0xd1f8, 0x1, 0x1);
        gbc.writeMem(0x2453, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xf609);
        EXPECT(gbc.pc(), 0x2455);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0312
        gbc.setState(0xbbb2, 0x3ba8, 0x3050, 0xd687, 0xd3f9, 0xe721, 0x0, 0x1);
        gbc.writeMem(0xbbb2, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x3ba8);
        EXPECT(gbc.pc(), 0xbbb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbb2), 0xcb);
        EXPECT(gbc.readMem(0xbbb3), 0x80);
        // CB 80 0313
        gbc.setState(0xe90, 0x1b3d, 0x7bb0, 0xaf0e, 0xa810, 0x73a8, 0x0, 0x0);
        gbc.writeMem(0xe90, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x1b3d);
        EXPECT(gbc.pc(), 0xe92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0314
        gbc.setState(0x531b, 0xafb4, 0xffb0, 0x4fe9, 0xdad9, 0x20d6, 0x1, 0x1);
        gbc.writeMem(0x531b, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xafb4);
        EXPECT(gbc.pc(), 0x531d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0315
        gbc.setState(0x3a77, 0xa18d, 0x8e40, 0x691b, 0x5b9f, 0x146d, 0x0, 0x0);
        gbc.writeMem(0x3a77, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xa18d);
        EXPECT(gbc.pc(), 0x3a79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0316
        gbc.setState(0xc8ea, 0x3536, 0x6a0, 0xb3d5, 0xed29, 0x4acb, 0x0, 0x1);
        gbc.writeMem(0xc8ea, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x3536);
        EXPECT(gbc.pc(), 0xc8ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8ea), 0xcb);
        EXPECT(gbc.readMem(0xc8eb), 0x80);
        // CB 80 0317
        gbc.setState(0x92a1, 0x2ae2, 0x59a0, 0x6902, 0x5cc1, 0xed78, 0x1, 0x1);
        gbc.writeMem(0x92a1, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x2ae2);
        EXPECT(gbc.pc(), 0x92a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92a1), 0xcb);
        EXPECT(gbc.readMem(0x92a2), 0x80);
        // CB 80 0319
        gbc.setState(0xa755, 0x2bbb, 0x46c0, 0x3aef, 0x6a5f, 0x949f, 0x0, 0x1);
        gbc.writeMem(0xa755, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x2bbb);
        EXPECT(gbc.pc(), 0xa757);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa755), 0xcb);
        EXPECT(gbc.readMem(0xa756), 0x80);
        // CB 80 031A
        gbc.setState(0x718, 0xd862, 0x4ec0, 0xaf4b, 0x2b78, 0x900e, 0x0, 0x1);
        gbc.writeMem(0x718, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xd862);
        EXPECT(gbc.pc(), 0x71a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 031B
        gbc.setState(0xd172, 0x1b02, 0xaf00, 0x83ee, 0x483, 0xd81a, 0x1, 0x1);
        gbc.writeMem(0xd172, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x1b02);
        EXPECT(gbc.pc(), 0xd174);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd172), 0xcb);
        EXPECT(gbc.readMem(0xd173), 0x80);
        // CB 80 031C
        gbc.setState(0x269, 0xbd18, 0xd2a0, 0x7677, 0xb307, 0x7fcb, 0x1, 0x0);
        gbc.writeMem(0x269, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xbd18);
        EXPECT(gbc.pc(), 0x26b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 031D
        gbc.setState(0xcec6, 0xeed6, 0x3ca0, 0x6d16, 0xb3ca, 0x6d97, 0x1, 0x0);
        gbc.writeMem(0xcec6, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xeed6);
        EXPECT(gbc.pc(), 0xcec8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcec6), 0xcb);
        EXPECT(gbc.readMem(0xcec7), 0x80);
        // CB 80 031E
        gbc.setState(0xbfbb, 0x9eea, 0x5770, 0xd5ee, 0x4255, 0x36b4, 0x1, 0x1);
        gbc.writeMem(0xbfbb, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x9eea);
        EXPECT(gbc.pc(), 0xbfbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfbb), 0xcb);
        EXPECT(gbc.readMem(0xbfbc), 0x80);
        // CB 80 031F
        gbc.setState(0xdaf2, 0xd533, 0x9d60, 0x1f34, 0xa696, 0xc299, 0x0, 0x1);
        gbc.writeMem(0xdaf2, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xd533);
        EXPECT(gbc.pc(), 0xdaf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdaf2), 0xcb);
        EXPECT(gbc.readMem(0xdaf3), 0x80);
        // CB 80 0320
        gbc.setState(0x3fd4, 0xe3fb, 0x1b90, 0xc1df, 0xd882, 0xb5f9, 0x0, 0x1);
        gbc.writeMem(0x3fd4, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xe3fb);
        EXPECT(gbc.pc(), 0x3fd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0321
        gbc.setState(0x8a1e, 0xcfc, 0xea20, 0x56c2, 0x63ce, 0x8d3c, 0x0, 0x0);
        gbc.writeMem(0x8a1e, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xcfc);
        EXPECT(gbc.pc(), 0x8a20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a1e), 0xcb);
        EXPECT(gbc.readMem(0x8a1f), 0x80);
        // CB 80 0322
        gbc.setState(0x8d69, 0x9f42, 0x1ea0, 0xb08e, 0x6d85, 0xc480, 0x0, 0x1);
        gbc.writeMem(0x8d69, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x9f42);
        EXPECT(gbc.pc(), 0x8d6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d69), 0xcb);
        EXPECT(gbc.readMem(0x8d6a), 0x80);
        // CB 80 0323
        gbc.setState(0x454d, 0xcbdc, 0x8be0, 0x991, 0x78cd, 0x787, 0x0, 0x1);
        gbc.writeMem(0x454d, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xcbdc);
        EXPECT(gbc.pc(), 0x454f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0324
        gbc.setState(0x91d1, 0xe038, 0x4990, 0xf07b, 0x2499, 0xbe25, 0x0, 0x1);
        gbc.writeMem(0x91d1, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xe038);
        EXPECT(gbc.pc(), 0x91d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91d1), 0xcb);
        EXPECT(gbc.readMem(0x91d2), 0x80);
        // CB 80 0325
        gbc.setState(0x7438, 0x9076, 0xa040, 0x8e47, 0x1cf0, 0x5843, 0x0, 0x1);
        gbc.writeMem(0x7438, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x9076);
        EXPECT(gbc.pc(), 0x743a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0326
        gbc.setState(0x962, 0xd4f3, 0x7070, 0xf562, 0xfde5, 0xaddb, 0x0, 0x1);
        gbc.writeMem(0x962, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xd4f3);
        EXPECT(gbc.pc(), 0x964);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0327
        gbc.setState(0x2f41, 0x7ce9, 0xade0, 0x80a8, 0x77, 0x8c21, 0x0, 0x1);
        gbc.writeMem(0x2f41, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x7ce9);
        EXPECT(gbc.pc(), 0x2f43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0328
        gbc.setState(0xcaee, 0xde92, 0xeb60, 0x1cb6, 0xba12, 0x405f, 0x0, 0x0);
        gbc.writeMem(0xcaee, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xde92);
        EXPECT(gbc.pc(), 0xcaf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcaee), 0xcb);
        EXPECT(gbc.readMem(0xcaef), 0x80);
        // CB 80 032A
        gbc.setState(0x43f6, 0xdf24, 0x7010, 0x76a8, 0x8864, 0x5459, 0x1, 0x0);
        gbc.writeMem(0x43f6, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xdf24);
        EXPECT(gbc.pc(), 0x43f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 032B
        gbc.setState(0x436b, 0xf313, 0x64f0, 0x72b4, 0xdf49, 0x6dfa, 0x0, 0x1);
        gbc.writeMem(0x436b, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xf313);
        EXPECT(gbc.pc(), 0x436d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 032C
        gbc.setState(0xab02, 0x5e1f, 0xc690, 0x4d3, 0xfeb3, 0xbbfa, 0x1, 0x1);
        gbc.writeMem(0xab02, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x5e1f);
        EXPECT(gbc.pc(), 0xab04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab02), 0xcb);
        EXPECT(gbc.readMem(0xab03), 0x80);
        // CB 80 032D
        gbc.setState(0x83e1, 0x2611, 0x15a0, 0xb021, 0xb86e, 0xc4, 0x1, 0x1);
        gbc.writeMem(0x83e1, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x2611);
        EXPECT(gbc.pc(), 0x83e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83e1), 0xcb);
        EXPECT(gbc.readMem(0x83e2), 0x80);
        // CB 80 032E
        gbc.setState(0xa797, 0x366a, 0xdcb0, 0xf97a, 0x7aa4, 0xd749, 0x1, 0x1);
        gbc.writeMem(0xa797, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x366a);
        EXPECT(gbc.pc(), 0xa799);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa797), 0xcb);
        EXPECT(gbc.readMem(0xa798), 0x80);
        // CB 80 032F
        gbc.setState(0x9028, 0xd510, 0x5c10, 0x8fce, 0x4b7f, 0xfb69, 0x1, 0x1);
        gbc.writeMem(0x9028, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xd510);
        EXPECT(gbc.pc(), 0x902a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9028), 0xcb);
        EXPECT(gbc.readMem(0x9029), 0x80);
        // CB 80 0330
        gbc.setState(0x1c14, 0x6a15, 0xcb40, 0x2b4b, 0xfd16, 0xfd1e, 0x1, 0x1);
        gbc.writeMem(0x1c14, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x6a15);
        EXPECT(gbc.pc(), 0x1c16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0331
        gbc.setState(0x794, 0x9f8c, 0x75e0, 0xf35c, 0x2b3b, 0x14eb, 0x0, 0x0);
        gbc.writeMem(0x794, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x9f8c);
        EXPECT(gbc.pc(), 0x796);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0332
        gbc.setState(0x284a, 0x8f87, 0x4380, 0x70e3, 0x6059, 0x4805, 0x0, 0x1);
        gbc.writeMem(0x284a, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x8f87);
        EXPECT(gbc.pc(), 0x284c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0333
        gbc.setState(0x6f97, 0x7d79, 0xffc0, 0xfe0d, 0xc5be, 0xbc5f, 0x1, 0x0);
        gbc.writeMem(0x6f97, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x7d79);
        EXPECT(gbc.pc(), 0x6f99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0334
        gbc.setState(0x1d81, 0xedd1, 0x4490, 0x742, 0xaa90, 0x7ed9, 0x0, 0x0);
        gbc.writeMem(0x1d81, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xedd1);
        EXPECT(gbc.pc(), 0x1d83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0335
        gbc.setState(0x9003, 0xdf30, 0x8fa0, 0xfe6a, 0x68eb, 0xf596, 0x1, 0x0);
        gbc.writeMem(0x9003, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xdf30);
        EXPECT(gbc.pc(), 0x9005);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9003), 0xcb);
        EXPECT(gbc.readMem(0x9004), 0x80);
        // CB 80 0336
        gbc.setState(0x79d3, 0xa107, 0xb1e0, 0xe9d0, 0x19be, 0x5035, 0x0, 0x0);
        gbc.writeMem(0x79d3, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xa107);
        EXPECT(gbc.pc(), 0x79d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0337
        gbc.setState(0x8e94, 0x1dbf, 0x5770, 0xb9d2, 0xc5b9, 0x769c, 0x0, 0x1);
        gbc.writeMem(0x8e94, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x1dbf);
        EXPECT(gbc.pc(), 0x8e96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e94), 0xcb);
        EXPECT(gbc.readMem(0x8e95), 0x80);
        // CB 80 0338
        gbc.setState(0x76b0, 0xc029, 0x330, 0x2005, 0xfda6, 0x6bd, 0x1, 0x1);
        gbc.writeMem(0x76b0, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xc029);
        EXPECT(gbc.pc(), 0x76b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0339
        gbc.setState(0xb2b5, 0xc5f1, 0xb290, 0xd96b, 0x493b, 0xeeb9, 0x0, 0x1);
        gbc.writeMem(0xb2b5, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xc5f1);
        EXPECT(gbc.pc(), 0xb2b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2b5), 0xcb);
        EXPECT(gbc.readMem(0xb2b6), 0x80);
        // CB 80 033A
        gbc.setState(0x5f8e, 0x35db, 0xc510, 0xa46c, 0xd314, 0x8cda, 0x1, 0x0);
        gbc.writeMem(0x5f8e, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x35db);
        EXPECT(gbc.pc(), 0x5f90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 033B
        gbc.setState(0x47e4, 0x7504, 0xab60, 0x292c, 0xacb2, 0xdc29, 0x1, 0x0);
        gbc.writeMem(0x47e4, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x7504);
        EXPECT(gbc.pc(), 0x47e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 033C
        gbc.setState(0x7414, 0x1493, 0xa70, 0x451b, 0x46fe, 0x649f, 0x1, 0x1);
        gbc.writeMem(0x7414, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x1493);
        EXPECT(gbc.pc(), 0x7416);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 033D
        gbc.setState(0x45f5, 0x5e2, 0x120, 0xa4ae, 0x7162, 0xaad7, 0x1, 0x1);
        gbc.writeMem(0x45f5, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x5e2);
        EXPECT(gbc.pc(), 0x45f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 033E
        gbc.setState(0xc7b4, 0xa74a, 0xbb30, 0x9f17, 0xa09f, 0x4440, 0x0, 0x0);
        gbc.writeMem(0xc7b4, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xa74a);
        EXPECT(gbc.pc(), 0xc7b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7b4), 0xcb);
        EXPECT(gbc.readMem(0xc7b5), 0x80);
        // CB 80 033F
        gbc.setState(0xca82, 0xa28f, 0x31d0, 0x8ec2, 0x5ab6, 0x9e9, 0x1, 0x0);
        gbc.writeMem(0xca82, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xa28f);
        EXPECT(gbc.pc(), 0xca84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca82), 0xcb);
        EXPECT(gbc.readMem(0xca83), 0x80);
        // CB 80 0340
        gbc.setState(0x840c, 0xbe19, 0x5b0, 0xa0ba, 0x1988, 0x24e2, 0x0, 0x1);
        gbc.writeMem(0x840c, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xbe19);
        EXPECT(gbc.pc(), 0x840e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x840c), 0xcb);
        EXPECT(gbc.readMem(0x840d), 0x80);
        // CB 80 0341
        gbc.setState(0x52a7, 0xdc82, 0xdb80, 0x5091, 0xf94a, 0x1390, 0x0, 0x1);
        gbc.writeMem(0x52a7, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xdc82);
        EXPECT(gbc.pc(), 0x52a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0342
        gbc.setState(0x107e, 0x5041, 0x1f0, 0x756f, 0x41db, 0xdfa, 0x1, 0x1);
        gbc.writeMem(0x107e, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x5041);
        EXPECT(gbc.pc(), 0x1080);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0345
        gbc.setState(0xb36b, 0x81d0, 0x9240, 0xe024, 0x3d28, 0xba01, 0x0, 0x1);
        gbc.writeMem(0xb36b, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x81d0);
        EXPECT(gbc.pc(), 0xb36d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb36b), 0xcb);
        EXPECT(gbc.readMem(0xb36c), 0x80);
        // CB 80 0346
        gbc.setState(0x30ad, 0x43d3, 0x7680, 0xaf71, 0x277f, 0x19e8, 0x1, 0x1);
        gbc.writeMem(0x30ad, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x43d3);
        EXPECT(gbc.pc(), 0x30af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0347
        gbc.setState(0x1e4d, 0xd7fd, 0x7060, 0x2e7d, 0xeed1, 0xfba9, 0x0, 0x1);
        gbc.writeMem(0x1e4d, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xd7fd);
        EXPECT(gbc.pc(), 0x1e4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0348
        gbc.setState(0x42a2, 0xe495, 0x49c0, 0x75d6, 0xac5c, 0xbc61, 0x1, 0x1);
        gbc.writeMem(0x42a2, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xe495);
        EXPECT(gbc.pc(), 0x42a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0349
        gbc.setState(0xcc1e, 0xfab8, 0x8020, 0x5c3, 0x9ea, 0xc82b, 0x1, 0x1);
        gbc.writeMem(0xcc1e, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xfab8);
        EXPECT(gbc.pc(), 0xcc20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc1e), 0xcb);
        EXPECT(gbc.readMem(0xcc1f), 0x80);
        // CB 80 034A
        gbc.setState(0x98c5, 0x10a5, 0x14b0, 0x2e52, 0x8b1c, 0x3529, 0x0, 0x0);
        gbc.writeMem(0x98c5, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x10a5);
        EXPECT(gbc.pc(), 0x98c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98c5), 0xcb);
        EXPECT(gbc.readMem(0x98c6), 0x80);
        // CB 80 034B
        gbc.setState(0x37f0, 0x4777, 0xc750, 0x6916, 0x5db3, 0x7f6a, 0x1, 0x1);
        gbc.writeMem(0x37f0, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x4777);
        EXPECT(gbc.pc(), 0x37f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 034C
        gbc.setState(0xb988, 0xa989, 0xa7d0, 0x6aff, 0xe5f9, 0x5ca7, 0x0, 0x0);
        gbc.writeMem(0xb988, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xa989);
        EXPECT(gbc.pc(), 0xb98a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb988), 0xcb);
        EXPECT(gbc.readMem(0xb989), 0x80);
        // CB 80 034D
        gbc.setState(0x8908, 0x90a1, 0xc4f0, 0xacfe, 0x679e, 0xf6b8, 0x1, 0x1);
        gbc.writeMem(0x8908, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x90a1);
        EXPECT(gbc.pc(), 0x890a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8908), 0xcb);
        EXPECT(gbc.readMem(0x8909), 0x80);
        // CB 80 034E
        gbc.setState(0x3f50, 0xbb8f, 0xded0, 0xa3a4, 0x83ec, 0x204d, 0x1, 0x0);
        gbc.writeMem(0x3f50, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xbb8f);
        EXPECT(gbc.pc(), 0x3f52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 034F
        gbc.setState(0x1c0c, 0x6f31, 0x9de0, 0x8591, 0x5fbb, 0x3bcc, 0x0, 0x0);
        gbc.writeMem(0x1c0c, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x6f31);
        EXPECT(gbc.pc(), 0x1c0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0350
        gbc.setState(0x7ee3, 0x99ec, 0xfa00, 0x2dcc, 0xf048, 0x50e5, 0x0, 0x1);
        gbc.writeMem(0x7ee3, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x99ec);
        EXPECT(gbc.pc(), 0x7ee5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0351
        gbc.setState(0xe667, 0x334d, 0xde10, 0x4a1c, 0x7ebf, 0x21f5, 0x0, 0x1);
        gbc.writeMem(0xe667, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x334d);
        EXPECT(gbc.pc(), 0xe669);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe667), 0xcb);
        EXPECT(gbc.readMem(0xe668), 0x80);
        // CB 80 0352
        gbc.setState(0xe4d5, 0xca95, 0x5e30, 0xa753, 0x168b, 0x90e, 0x1, 0x0);
        gbc.writeMem(0xe4d5, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xca95);
        EXPECT(gbc.pc(), 0xe4d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4d5), 0xcb);
        EXPECT(gbc.readMem(0xe4d6), 0x80);
        // CB 80 0353
        gbc.setState(0xb0dc, 0x517c, 0x56b0, 0x67fe, 0xcdca, 0xf945, 0x0, 0x0);
        gbc.writeMem(0xb0dc, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x517c);
        EXPECT(gbc.pc(), 0xb0de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0dc), 0xcb);
        EXPECT(gbc.readMem(0xb0dd), 0x80);
        // CB 80 0354
        gbc.setState(0x9b17, 0x592e, 0x5bf0, 0x9be4, 0x67a, 0xb039, 0x0, 0x0);
        gbc.writeMem(0x9b17, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x592e);
        EXPECT(gbc.pc(), 0x9b19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b17), 0xcb);
        EXPECT(gbc.readMem(0x9b18), 0x80);
        // CB 80 0355
        gbc.setState(0x4a1b, 0x675f, 0x4160, 0xb93b, 0xff53, 0x5b68, 0x1, 0x0);
        gbc.writeMem(0x4a1b, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x675f);
        EXPECT(gbc.pc(), 0x4a1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0356
        gbc.setState(0x6c00, 0x9ac0, 0x3010, 0x2cf, 0x77a9, 0xfe69, 0x1, 0x1);
        gbc.writeMem(0x6c00, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x9ac0);
        EXPECT(gbc.pc(), 0x6c02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0357
        gbc.setState(0xadf7, 0x300a, 0x8c10, 0x9f2b, 0xc59e, 0x2f93, 0x1, 0x1);
        gbc.writeMem(0xadf7, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x300a);
        EXPECT(gbc.pc(), 0xadf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadf7), 0xcb);
        EXPECT(gbc.readMem(0xadf8), 0x80);
        // CB 80 0358
        gbc.setState(0xdc8b, 0xfb00, 0x2e90, 0xcc57, 0xe24f, 0x7a20, 0x1, 0x1);
        gbc.writeMem(0xdc8b, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xfb00);
        EXPECT(gbc.pc(), 0xdc8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc8b), 0xcb);
        EXPECT(gbc.readMem(0xdc8c), 0x80);
        // CB 80 0359
        gbc.setState(0x99e8, 0xe31b, 0x3810, 0x4558, 0xf5af, 0xac82, 0x1, 0x1);
        gbc.writeMem(0x99e8, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xe31b);
        EXPECT(gbc.pc(), 0x99ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99e8), 0xcb);
        EXPECT(gbc.readMem(0x99e9), 0x80);
        // CB 80 035A
        gbc.setState(0xc9a4, 0xba3, 0x9d0, 0x423b, 0xd3e9, 0x2c4a, 0x0, 0x1);
        gbc.writeMem(0xc9a4, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xba3);
        EXPECT(gbc.pc(), 0xc9a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9a4), 0xcb);
        EXPECT(gbc.readMem(0xc9a5), 0x80);
        // CB 80 035B
        gbc.setState(0x2fd1, 0x39d5, 0x3d50, 0x325c, 0xf82e, 0xcdbd, 0x1, 0x0);
        gbc.writeMem(0x2fd1, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x39d5);
        EXPECT(gbc.pc(), 0x2fd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 035C
        gbc.setState(0x14d2, 0x6c13, 0xf990, 0xaa5, 0xdccf, 0xf696, 0x0, 0x1);
        gbc.writeMem(0x14d2, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x6c13);
        EXPECT(gbc.pc(), 0x14d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 035D
        gbc.setState(0x4976, 0x74fa, 0xe9c0, 0xee18, 0x695a, 0x1d75, 0x0, 0x0);
        gbc.writeMem(0x4976, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x74fa);
        EXPECT(gbc.pc(), 0x4978);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 035E
        gbc.setState(0x2558, 0x450b, 0xa4b0, 0x8f2e, 0x28bd, 0xba95, 0x1, 0x0);
        gbc.writeMem(0x2558, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x450b);
        EXPECT(gbc.pc(), 0x255a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 035F
        gbc.setState(0x813d, 0x99cd, 0xd920, 0xd840, 0xacf8, 0x13e7, 0x1, 0x0);
        gbc.writeMem(0x813d, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x99cd);
        EXPECT(gbc.pc(), 0x813f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x813d), 0xcb);
        EXPECT(gbc.readMem(0x813e), 0x80);
        // CB 80 0360
        gbc.setState(0xb8ae, 0x4d69, 0xa860, 0x4408, 0xfcbe, 0x30bb, 0x0, 0x0);
        gbc.writeMem(0xb8ae, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x4d69);
        EXPECT(gbc.pc(), 0xb8b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8ae), 0xcb);
        EXPECT(gbc.readMem(0xb8af), 0x80);
        // CB 80 0361
        gbc.setState(0x3b77, 0x2700, 0xf20, 0x6486, 0x9a73, 0x4ef5, 0x0, 0x1);
        gbc.writeMem(0x3b77, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x2700);
        EXPECT(gbc.pc(), 0x3b79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0362
        gbc.setState(0xb116, 0x43f, 0xbf20, 0x7434, 0x7c67, 0x57c3, 0x1, 0x1);
        gbc.writeMem(0xb116, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x43f);
        EXPECT(gbc.pc(), 0xb118);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb116), 0xcb);
        EXPECT(gbc.readMem(0xb117), 0x80);
        // CB 80 0363
        gbc.setState(0x8476, 0x2927, 0xedd0, 0x7e14, 0x769, 0xead0, 0x1, 0x0);
        gbc.writeMem(0x8476, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x2927);
        EXPECT(gbc.pc(), 0x8478);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8476), 0xcb);
        EXPECT(gbc.readMem(0x8477), 0x80);
        // CB 80 0364
        gbc.setState(0x4a9e, 0x720d, 0xd60, 0xe01c, 0x2a11, 0x33be, 0x1, 0x0);
        gbc.writeMem(0x4a9e, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x720d);
        EXPECT(gbc.pc(), 0x4aa0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0365
        gbc.setState(0x6aa1, 0x7ebe, 0xd7b0, 0xb572, 0xd198, 0xb054, 0x0, 0x1);
        gbc.writeMem(0x6aa1, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x7ebe);
        EXPECT(gbc.pc(), 0x6aa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0366
        gbc.setState(0xd22a, 0x3627, 0xe410, 0x810e, 0xf0e4, 0x8ec9, 0x1, 0x1);
        gbc.writeMem(0xd22a, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x3627);
        EXPECT(gbc.pc(), 0xd22c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd22a), 0xcb);
        EXPECT(gbc.readMem(0xd22b), 0x80);
        // CB 80 0367
        gbc.setState(0x96cb, 0xdf6c, 0x5030, 0x94ca, 0xcc3d, 0x88ce, 0x0, 0x1);
        gbc.writeMem(0x96cb, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xdf6c);
        EXPECT(gbc.pc(), 0x96cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96cb), 0xcb);
        EXPECT(gbc.readMem(0x96cc), 0x80);
        // CB 80 0368
        gbc.setState(0x25dd, 0x97aa, 0x36e0, 0x92c6, 0xc57a, 0xaa7c, 0x0, 0x0);
        gbc.writeMem(0x25dd, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x97aa);
        EXPECT(gbc.pc(), 0x25df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0369
        gbc.setState(0x1711, 0xb2a6, 0x9de0, 0x5fd1, 0x66cd, 0xc01b, 0x1, 0x1);
        gbc.writeMem(0x1711, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xb2a6);
        EXPECT(gbc.pc(), 0x1713);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 036B
        gbc.setState(0xe504, 0x99ae, 0x1ec0, 0x1b91, 0x3a97, 0x1984, 0x0, 0x0);
        gbc.writeMem(0xe504, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x99ae);
        EXPECT(gbc.pc(), 0xe506);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe504), 0xcb);
        EXPECT(gbc.readMem(0xe505), 0x80);
        // CB 80 036C
        gbc.setState(0x3588, 0x92aa, 0xc480, 0x2953, 0x40e1, 0x2b43, 0x0, 0x1);
        gbc.writeMem(0x3588, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x92aa);
        EXPECT(gbc.pc(), 0x358a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 036D
        gbc.setState(0xaf3d, 0x10d7, 0x7f0, 0x6f41, 0xac1e, 0xa353, 0x1, 0x0);
        gbc.writeMem(0xaf3d, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x10d7);
        EXPECT(gbc.pc(), 0xaf3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf3d), 0xcb);
        EXPECT(gbc.readMem(0xaf3e), 0x80);
        // CB 80 036F
        gbc.setState(0x810b, 0x3038, 0x2150, 0xd3f6, 0xf05d, 0x3e78, 0x0, 0x0);
        gbc.writeMem(0x810b, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x3038);
        EXPECT(gbc.pc(), 0x810d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x810b), 0xcb);
        EXPECT(gbc.readMem(0x810c), 0x80);
        // CB 80 0370
        gbc.setState(0xc885, 0x4f98, 0x3480, 0x6a94, 0xb348, 0x9b6b, 0x0, 0x1);
        gbc.writeMem(0xc885, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x4f98);
        EXPECT(gbc.pc(), 0xc887);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc885), 0xcb);
        EXPECT(gbc.readMem(0xc886), 0x80);
        // CB 80 0371
        gbc.setState(0xa4da, 0xb3c6, 0x63b0, 0xde05, 0x2fde, 0xe4c4, 0x0, 0x0);
        gbc.writeMem(0xa4da, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xb3c6);
        EXPECT(gbc.pc(), 0xa4dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4da), 0xcb);
        EXPECT(gbc.readMem(0xa4db), 0x80);
        // CB 80 0372
        gbc.setState(0xa74b, 0xdbcf, 0x60c0, 0x5ebc, 0x4baf, 0xaf0e, 0x1, 0x0);
        gbc.writeMem(0xa74b, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xdbcf);
        EXPECT(gbc.pc(), 0xa74d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa74b), 0xcb);
        EXPECT(gbc.readMem(0xa74c), 0x80);
        // CB 80 0373
        gbc.setState(0x72a6, 0xa054, 0xd70, 0xa0fb, 0xb6cf, 0x3ae3, 0x0, 0x1);
        gbc.writeMem(0x72a6, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xa054);
        EXPECT(gbc.pc(), 0x72a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0374
        gbc.setState(0x8c4f, 0x267d, 0xd160, 0xee86, 0xa159, 0x82d2, 0x0, 0x0);
        gbc.writeMem(0x8c4f, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x267d);
        EXPECT(gbc.pc(), 0x8c51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c4f), 0xcb);
        EXPECT(gbc.readMem(0x8c50), 0x80);
        // CB 80 0375
        gbc.setState(0x59fa, 0x5389, 0x4f00, 0xb777, 0x6e49, 0x1006, 0x0, 0x0);
        gbc.writeMem(0x59fa, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x5389);
        EXPECT(gbc.pc(), 0x59fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0376
        gbc.setState(0xc7ed, 0xc8e5, 0x7f70, 0xf537, 0xb376, 0x7979, 0x1, 0x1);
        gbc.writeMem(0xc7ed, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xc8e5);
        EXPECT(gbc.pc(), 0xc7ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7ed), 0xcb);
        EXPECT(gbc.readMem(0xc7ee), 0x80);
        // CB 80 0377
        gbc.setState(0x69d7, 0xef8b, 0x6b00, 0x1dc7, 0xd5b2, 0x246d, 0x0, 0x1);
        gbc.writeMem(0x69d7, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xef8b);
        EXPECT(gbc.pc(), 0x69d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0378
        gbc.setState(0xaa8f, 0x9a5b, 0x15c0, 0xa421, 0x1b28, 0xdbfe, 0x1, 0x1);
        gbc.writeMem(0xaa8f, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x9a5b);
        EXPECT(gbc.pc(), 0xaa91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa8f), 0xcb);
        EXPECT(gbc.readMem(0xaa90), 0x80);
        // CB 80 0379
        gbc.setState(0x5d39, 0xc814, 0x6670, 0x3ba1, 0x7180, 0x2843, 0x0, 0x1);
        gbc.writeMem(0x5d39, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xc814);
        EXPECT(gbc.pc(), 0x5d3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 037A
        gbc.setState(0x68a, 0x6006, 0xa6d0, 0x8eff, 0x39ef, 0xb6be, 0x0, 0x0);
        gbc.writeMem(0x68a, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x6006);
        EXPECT(gbc.pc(), 0x68c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 037B
        gbc.setState(0x54a8, 0x5fbd, 0x6420, 0x76b, 0x468a, 0x2777, 0x0, 0x0);
        gbc.writeMem(0x54a8, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x5fbd);
        EXPECT(gbc.pc(), 0x54aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 037C
        gbc.setState(0x4d0b, 0x3446, 0x4f80, 0x3ed8, 0xa6aa, 0xb610, 0x1, 0x0);
        gbc.writeMem(0x4d0b, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x3446);
        EXPECT(gbc.pc(), 0x4d0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 037D
        gbc.setState(0xdc67, 0x1abb, 0x9200, 0x4722, 0x38eb, 0xb2a0, 0x0, 0x0);
        gbc.writeMem(0xdc67, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x1abb);
        EXPECT(gbc.pc(), 0xdc69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc67), 0xcb);
        EXPECT(gbc.readMem(0xdc68), 0x80);
        // CB 80 037E
        gbc.setState(0x3a13, 0xb67a, 0x8b50, 0xc3d7, 0xd50b, 0x17bb, 0x1, 0x0);
        gbc.writeMem(0x3a13, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xb67a);
        EXPECT(gbc.pc(), 0x3a15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 037F
        gbc.setState(0xb6ce, 0x36cd, 0x6040, 0x9423, 0x1775, 0x10f9, 0x1, 0x0);
        gbc.writeMem(0xb6ce, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x36cd);
        EXPECT(gbc.pc(), 0xb6d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6ce), 0xcb);
        EXPECT(gbc.readMem(0xb6cf), 0x80);
        // CB 80 0380
        gbc.setState(0x5c0, 0xc28e, 0x6210, 0xc067, 0xf433, 0xed3, 0x0, 0x0);
        gbc.writeMem(0x5c0, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xc28e);
        EXPECT(gbc.pc(), 0x5c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0381
        gbc.setState(0x1c88, 0x2fea, 0x1bd0, 0xb819, 0x2ac4, 0xdcb9, 0x1, 0x1);
        gbc.writeMem(0x1c88, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x2fea);
        EXPECT(gbc.pc(), 0x1c8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0382
        gbc.setState(0xb14f, 0xd3d5, 0xc70, 0xc64c, 0xe391, 0xe462, 0x1, 0x0);
        gbc.writeMem(0xb14f, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xd3d5);
        EXPECT(gbc.pc(), 0xb151);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb14f), 0xcb);
        EXPECT(gbc.readMem(0xb150), 0x80);
        // CB 80 0383
        gbc.setState(0xc910, 0x2133, 0x63a0, 0xce22, 0x5b8c, 0x9ab2, 0x0, 0x1);
        gbc.writeMem(0xc910, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x2133);
        EXPECT(gbc.pc(), 0xc912);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc910), 0xcb);
        EXPECT(gbc.readMem(0xc911), 0x80);
        // CB 80 0384
        gbc.setState(0xd746, 0xbe14, 0x36a0, 0xf059, 0x3d81, 0xc5fc, 0x1, 0x1);
        gbc.writeMem(0xd746, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xbe14);
        EXPECT(gbc.pc(), 0xd748);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd746), 0xcb);
        EXPECT(gbc.readMem(0xd747), 0x80);
        // CB 80 0385
        gbc.setState(0x4993, 0x283a, 0xe90, 0x5570, 0xd2ba, 0xfc58, 0x0, 0x1);
        gbc.writeMem(0x4993, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x283a);
        EXPECT(gbc.pc(), 0x4995);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0387
        gbc.setState(0x4e33, 0x6aa, 0x77a0, 0x968e, 0xcac5, 0xfa10, 0x0, 0x0);
        gbc.writeMem(0x4e33, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x6aa);
        EXPECT(gbc.pc(), 0x4e35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0388
        gbc.setState(0x3d13, 0xd667, 0x61d0, 0x1714, 0xad30, 0x8c32, 0x1, 0x1);
        gbc.writeMem(0x3d13, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xd667);
        EXPECT(gbc.pc(), 0x3d15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0389
        gbc.setState(0xc6c, 0x35f6, 0x8120, 0xb002, 0x894, 0xa211, 0x1, 0x1);
        gbc.writeMem(0xc6c, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x35f6);
        EXPECT(gbc.pc(), 0xc6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 038B
        gbc.setState(0x92ba, 0xbd5e, 0xe160, 0xb3b9, 0x37e6, 0xbe85, 0x1, 0x0);
        gbc.writeMem(0x92ba, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xbd5e);
        EXPECT(gbc.pc(), 0x92bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92ba), 0xcb);
        EXPECT(gbc.readMem(0x92bb), 0x80);
        // CB 80 038C
        gbc.setState(0xa115, 0x6bcc, 0x64a0, 0xcfa8, 0x919e, 0xe00a, 0x0, 0x0);
        gbc.writeMem(0xa115, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x6bcc);
        EXPECT(gbc.pc(), 0xa117);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa115), 0xcb);
        EXPECT(gbc.readMem(0xa116), 0x80);
        // CB 80 038D
        gbc.setState(0x280e, 0xac4b, 0xa200, 0x20f4, 0xdb0c, 0x76d6, 0x1, 0x1);
        gbc.writeMem(0x280e, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xac4b);
        EXPECT(gbc.pc(), 0x2810);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 038E
        gbc.setState(0x463e, 0xf4d, 0xb680, 0x1ad8, 0x7358, 0xfa23, 0x0, 0x0);
        gbc.writeMem(0x463e, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xf4d);
        EXPECT(gbc.pc(), 0x4640);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 038F
        gbc.setState(0x7382, 0x1c0f, 0xde50, 0x32bd, 0x5464, 0x9a48, 0x1, 0x0);
        gbc.writeMem(0x7382, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x1c0f);
        EXPECT(gbc.pc(), 0x7384);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0390
        gbc.setState(0x6e97, 0x55b3, 0x16d0, 0x19f8, 0xca94, 0x753a, 0x1, 0x0);
        gbc.writeMem(0x6e97, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x55b3);
        EXPECT(gbc.pc(), 0x6e99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0391
        gbc.setState(0x67a, 0x55f9, 0xe380, 0xc682, 0xb787, 0xd1d4, 0x0, 0x1);
        gbc.writeMem(0x67a, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x55f9);
        EXPECT(gbc.pc(), 0x67c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0392
        gbc.setState(0x8f52, 0x22e9, 0x8290, 0x6f9c, 0x3e4f, 0x1b2e, 0x0, 0x0);
        gbc.writeMem(0x8f52, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x22e9);
        EXPECT(gbc.pc(), 0x8f54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f52), 0xcb);
        EXPECT(gbc.readMem(0x8f53), 0x80);
        // CB 80 0393
        gbc.setState(0xa147, 0x476e, 0x91d0, 0x22af, 0xcbf, 0x1012, 0x1, 0x1);
        gbc.writeMem(0xa147, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x476e);
        EXPECT(gbc.pc(), 0xa149);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa147), 0xcb);
        EXPECT(gbc.readMem(0xa148), 0x80);
        // CB 80 0394
        gbc.setState(0x212, 0xf499, 0x48c0, 0x770e, 0x3593, 0xc4bd, 0x1, 0x1);
        gbc.writeMem(0x212, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xf499);
        EXPECT(gbc.pc(), 0x214);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0395
        gbc.setState(0x19e7, 0x9fad, 0xe940, 0xef03, 0x1650, 0x54a, 0x0, 0x1);
        gbc.writeMem(0x19e7, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x9fad);
        EXPECT(gbc.pc(), 0x19e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 0396
        gbc.setState(0xd397, 0xb6ee, 0xf430, 0x3d2d, 0x3f3, 0x5b60, 0x0, 0x1);
        gbc.writeMem(0xd397, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xb6ee);
        EXPECT(gbc.pc(), 0xd399);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd397), 0xcb);
        EXPECT(gbc.readMem(0xd398), 0x80);
        // CB 80 0398
        gbc.setState(0x5fae, 0xcede, 0xf530, 0x53e9, 0x7341, 0x56d1, 0x1, 0x1);
        gbc.writeMem(0x5fae, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xcede);
        EXPECT(gbc.pc(), 0x5fb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 0399
        gbc.setState(0xb046, 0xb640, 0xa200, 0xc8fa, 0xe51e, 0x5c11, 0x1, 0x1);
        gbc.writeMem(0xb046, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xb640);
        EXPECT(gbc.pc(), 0xb048);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb046), 0xcb);
        EXPECT(gbc.readMem(0xb047), 0x80);
        // CB 80 039A
        gbc.setState(0xa01c, 0x9f62, 0x7060, 0x9432, 0xb381, 0xe485, 0x0, 0x0);
        gbc.writeMem(0xa01c, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x9f62);
        EXPECT(gbc.pc(), 0xa01e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa01c), 0xcb);
        EXPECT(gbc.readMem(0xa01d), 0x80);
        // CB 80 039B
        gbc.setState(0x7ef8, 0x4dec, 0x3330, 0x3dad, 0x3240, 0x162b, 0x0, 0x1);
        gbc.writeMem(0x7ef8, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x4dec);
        EXPECT(gbc.pc(), 0x7efa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 039D
        gbc.setState(0x4015, 0xa3ca, 0xfe30, 0x45f, 0x8572, 0x6710, 0x0, 0x0);
        gbc.writeMem(0x4015, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xa3ca);
        EXPECT(gbc.pc(), 0x4017);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 039E
        gbc.setState(0x118, 0x4385, 0xd7e0, 0x56b9, 0xba7d, 0xddc6, 0x1, 0x1);
        gbc.writeMem(0x118, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x4385);
        EXPECT(gbc.pc(), 0x11a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 039F
        gbc.setState(0xb3f6, 0xb1d0, 0xf840, 0xb890, 0xc017, 0x4aa9, 0x1, 0x1);
        gbc.writeMem(0xb3f6, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xb1d0);
        EXPECT(gbc.pc(), 0xb3f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3f6), 0xcb);
        EXPECT(gbc.readMem(0xb3f7), 0x80);
        // CB 80 03A0
        gbc.setState(0xc4aa, 0x8d93, 0x7590, 0x742a, 0x2a8c, 0x88bc, 0x1, 0x1);
        gbc.writeMem(0xc4aa, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x8d93);
        EXPECT(gbc.pc(), 0xc4ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4aa), 0xcb);
        EXPECT(gbc.readMem(0xc4ab), 0x80);
        // CB 80 03A1
        gbc.setState(0x2fa5, 0x214c, 0x4f30, 0x4499, 0x428, 0xd63c, 0x0, 0x1);
        gbc.writeMem(0x2fa5, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x214c);
        EXPECT(gbc.pc(), 0x2fa7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 03A2
        gbc.setState(0x1192, 0xe0c2, 0x1520, 0x3476, 0x5f98, 0x7414, 0x1, 0x1);
        gbc.writeMem(0x1192, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xe0c2);
        EXPECT(gbc.pc(), 0x1194);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 03A3
        gbc.setState(0xbfe6, 0xb0ee, 0xb570, 0x1a05, 0x844f, 0x46c6, 0x1, 0x0);
        gbc.writeMem(0xbfe6, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xb0ee);
        EXPECT(gbc.pc(), 0xbfe8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfe6), 0xcb);
        EXPECT(gbc.readMem(0xbfe7), 0x80);
        // CB 80 03A5
        gbc.setState(0x7418, 0xcc82, 0xe880, 0x725f, 0x2423, 0xf8a0, 0x0, 0x0);
        gbc.writeMem(0x7418, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xcc82);
        EXPECT(gbc.pc(), 0x741a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 03A6
        gbc.setState(0x2f75, 0x605c, 0x50a0, 0xd4ea, 0xff0e, 0xd9b4, 0x1, 0x0);
        gbc.writeMem(0x2f75, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x605c);
        EXPECT(gbc.pc(), 0x2f77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 03A7
        gbc.setState(0x9286, 0x7193, 0x4340, 0xf7d6, 0x712c, 0xef3, 0x1, 0x1);
        gbc.writeMem(0x9286, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x7193);
        EXPECT(gbc.pc(), 0x9288);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9286), 0xcb);
        EXPECT(gbc.readMem(0x9287), 0x80);
        // CB 80 03A8
        gbc.setState(0x7248, 0x43d5, 0x4d00, 0xff48, 0xa241, 0xb662, 0x1, 0x0);
        gbc.writeMem(0x7248, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x43d5);
        EXPECT(gbc.pc(), 0x724a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 03A9
        gbc.setState(0x1fa4, 0x752a, 0xf3a0, 0x136b, 0xcd9d, 0xa57b, 0x0, 0x0);
        gbc.writeMem(0x1fa4, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x752a);
        EXPECT(gbc.pc(), 0x1fa6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 03AA
        gbc.setState(0x4460, 0xf5d0, 0xad50, 0xc7f3, 0x2da, 0x86d1, 0x1, 0x1);
        gbc.writeMem(0x4460, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xf5d0);
        EXPECT(gbc.pc(), 0x4462);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 03AB
        gbc.setState(0xd035, 0xf272, 0x290, 0x8972, 0x81fe, 0xac47, 0x1, 0x1);
        gbc.writeMem(0xd035, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xf272);
        EXPECT(gbc.pc(), 0xd037);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd035), 0xcb);
        EXPECT(gbc.readMem(0xd036), 0x80);
        // CB 80 03AC
        gbc.setState(0x671f, 0xb546, 0x8770, 0xb71, 0x4ec6, 0x8fec, 0x0, 0x1);
        gbc.writeMem(0x671f, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xb546);
        EXPECT(gbc.pc(), 0x6721);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 03AD
        gbc.setState(0xe242, 0x8b9f, 0x9bb0, 0x907b, 0x6abf, 0x658, 0x0, 0x1);
        gbc.writeMem(0xe242, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x8b9f);
        EXPECT(gbc.pc(), 0xe244);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe242), 0xcb);
        EXPECT(gbc.readMem(0xe243), 0x80);
        // CB 80 03AE
        gbc.setState(0xdae7, 0xe991, 0xe3f0, 0xf765, 0xffd6, 0xc72d, 0x1, 0x0);
        gbc.writeMem(0xdae7, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xe991);
        EXPECT(gbc.pc(), 0xdae9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdae7), 0xcb);
        EXPECT(gbc.readMem(0xdae8), 0x80);
        // CB 80 03AF
        gbc.setState(0x9931, 0xcd78, 0x8fa0, 0x140, 0xea19, 0x9583, 0x0, 0x0);
        gbc.writeMem(0x9931, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xcd78);
        EXPECT(gbc.pc(), 0x9933);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9931), 0xcb);
        EXPECT(gbc.readMem(0x9932), 0x80);
        // CB 80 03B0
        gbc.setState(0x9643, 0x7259, 0xb060, 0xac36, 0xf4d9, 0xf03, 0x1, 0x0);
        gbc.writeMem(0x9643, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x7259);
        EXPECT(gbc.pc(), 0x9645);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9643), 0xcb);
        EXPECT(gbc.readMem(0x9644), 0x80);
        // CB 80 03B1
        gbc.setState(0xa1ae, 0x8477, 0xc930, 0x3a78, 0x70b0, 0x2a10, 0x1, 0x0);
        gbc.writeMem(0xa1ae, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x8477);
        EXPECT(gbc.pc(), 0xa1b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1ae), 0xcb);
        EXPECT(gbc.readMem(0xa1af), 0x80);
        // CB 80 03B2
        gbc.setState(0xd6fb, 0x5c92, 0x7ca0, 0x1242, 0x32d3, 0x562d, 0x0, 0x0);
        gbc.writeMem(0xd6fb, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x5c92);
        EXPECT(gbc.pc(), 0xd6fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6fb), 0xcb);
        EXPECT(gbc.readMem(0xd6fc), 0x80);
        // CB 80 03B3
        gbc.setState(0x2d10, 0x178c, 0x14a0, 0x75ec, 0x828b, 0xbe26, 0x1, 0x0);
        gbc.writeMem(0x2d10, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x178c);
        EXPECT(gbc.pc(), 0x2d12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 03B4
        gbc.setState(0xab77, 0xfc70, 0x6eb0, 0xa621, 0x1bfe, 0x9292, 0x0, 0x1);
        gbc.writeMem(0xab77, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xfc70);
        EXPECT(gbc.pc(), 0xab79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab77), 0xcb);
        EXPECT(gbc.readMem(0xab78), 0x80);
        // CB 80 03B5
        gbc.setState(0x2f88, 0x1327, 0x5eb0, 0x4a1b, 0x6611, 0xc0ee, 0x0, 0x1);
        gbc.writeMem(0x2f88, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x1327);
        EXPECT(gbc.pc(), 0x2f8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 03B6
        gbc.setState(0xd505, 0xffb4, 0x3420, 0x73b7, 0x2535, 0x506c, 0x1, 0x1);
        gbc.writeMem(0xd505, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xffb4);
        EXPECT(gbc.pc(), 0xd507);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd505), 0xcb);
        EXPECT(gbc.readMem(0xd506), 0x80);
        // CB 80 03B7
        gbc.setState(0x1e49, 0x5ea4, 0x37b0, 0xeb33, 0xa3a2, 0x459e, 0x1, 0x1);
        gbc.writeMem(0x1e49, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x5ea4);
        EXPECT(gbc.pc(), 0x1e4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 03B8
        gbc.setState(0x8a21, 0xb74, 0xbd90, 0xd83f, 0x28ba, 0x4ee6, 0x0, 0x0);
        gbc.writeMem(0x8a21, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xb74);
        EXPECT(gbc.pc(), 0x8a23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a21), 0xcb);
        EXPECT(gbc.readMem(0x8a22), 0x80);
        // CB 80 03B9
        gbc.setState(0x7d02, 0xa0fe, 0x91a0, 0x9b0c, 0x23d5, 0x5443, 0x1, 0x0);
        gbc.writeMem(0x7d02, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xa0fe);
        EXPECT(gbc.pc(), 0x7d04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 03BA
        gbc.setState(0x5ded, 0x3826, 0x3990, 0x2c9d, 0x7d75, 0x7fce, 0x0, 0x1);
        gbc.writeMem(0x5ded, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x3826);
        EXPECT(gbc.pc(), 0x5def);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 03BC
        gbc.setState(0x8ca7, 0x81f5, 0x94b0, 0xd660, 0xa74e, 0x7351, 0x0, 0x1);
        gbc.writeMem(0x8ca7, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x81f5);
        EXPECT(gbc.pc(), 0x8ca9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ca7), 0xcb);
        EXPECT(gbc.readMem(0x8ca8), 0x80);
        // CB 80 03BD
        gbc.setState(0x4780, 0x45bb, 0x3140, 0xaa77, 0xeef, 0x328d, 0x0, 0x1);
        gbc.writeMem(0x4780, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x45bb);
        EXPECT(gbc.pc(), 0x4782);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 03BE
        gbc.setState(0xaf04, 0x34c1, 0x3260, 0xaedb, 0xfd41, 0x22c4, 0x1, 0x1);
        gbc.writeMem(0xaf04, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x34c1);
        EXPECT(gbc.pc(), 0xaf06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf04), 0xcb);
        EXPECT(gbc.readMem(0xaf05), 0x80);
        // CB 80 03C0
        gbc.setState(0x8915, 0xa8ba, 0xc6a0, 0xfb52, 0x1159, 0x1d70, 0x0, 0x0);
        gbc.writeMem(0x8915, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xa8ba);
        EXPECT(gbc.pc(), 0x8917);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8915), 0xcb);
        EXPECT(gbc.readMem(0x8916), 0x80);
        // CB 80 03C1
        gbc.setState(0xabfd, 0xf624, 0xe80, 0x220f, 0x7005, 0x7fe5, 0x1, 0x1);
        gbc.writeMem(0xabfd, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xf624);
        EXPECT(gbc.pc(), 0xabff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabfd), 0xcb);
        EXPECT(gbc.readMem(0xabfe), 0x80);
        // CB 80 03C2
        gbc.setState(0xbd6c, 0x1ae1, 0x1950, 0x68f5, 0x86c7, 0x10e3, 0x0, 0x0);
        gbc.writeMem(0xbd6c, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x1ae1);
        EXPECT(gbc.pc(), 0xbd6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd6c), 0xcb);
        EXPECT(gbc.readMem(0xbd6d), 0x80);
        // CB 80 03C3
        gbc.setState(0x2811, 0x1b41, 0xfcf0, 0x77cf, 0xca3, 0x605b, 0x0, 0x1);
        gbc.writeMem(0x2811, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x1b41);
        EXPECT(gbc.pc(), 0x2813);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 03C4
        gbc.setState(0x1293, 0x630d, 0xf660, 0x59e, 0x5661, 0x8db5, 0x1, 0x0);
        gbc.writeMem(0x1293, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x630d);
        EXPECT(gbc.pc(), 0x1295);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 03C5
        gbc.setState(0xb199, 0xd1e1, 0xc490, 0x7b65, 0x6c1a, 0x67a5, 0x0, 0x0);
        gbc.writeMem(0xb199, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xd1e1);
        EXPECT(gbc.pc(), 0xb19b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb199), 0xcb);
        EXPECT(gbc.readMem(0xb19a), 0x80);
        // CB 80 03C6
        gbc.setState(0x7775, 0x137c, 0x830, 0xaae6, 0x1a99, 0xf7c7, 0x0, 0x1);
        gbc.writeMem(0x7775, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x137c);
        EXPECT(gbc.pc(), 0x7777);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 03C7
        gbc.setState(0x2a7b, 0x911e, 0x7de0, 0x4dfd, 0x9ba3, 0xaba1, 0x1, 0x1);
        gbc.writeMem(0x2a7b, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x911e);
        EXPECT(gbc.pc(), 0x2a7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 03C8
        gbc.setState(0x5e9e, 0xfdaf, 0xb310, 0xbbfb, 0xc632, 0x781f, 0x1, 0x0);
        gbc.writeMem(0x5e9e, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xfdaf);
        EXPECT(gbc.pc(), 0x5ea0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 03C9
        gbc.setState(0x15f, 0xea4b, 0x3fb0, 0x2bbe, 0x1510, 0xfc11, 0x0, 0x0);
        gbc.writeMem(0x15f, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xea4b);
        EXPECT(gbc.pc(), 0x161);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 03CA
        gbc.setState(0x8ece, 0xa599, 0x870, 0xd4f5, 0xd59f, 0xf13f, 0x0, 0x1);
        gbc.writeMem(0x8ece, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xa599);
        EXPECT(gbc.pc(), 0x8ed0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ece), 0xcb);
        EXPECT(gbc.readMem(0x8ecf), 0x80);
        // CB 80 03CC
        gbc.setState(0x2d63, 0xc517, 0x59a0, 0x9806, 0xf762, 0xc102, 0x1, 0x0);
        gbc.writeMem(0x2d63, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xc517);
        EXPECT(gbc.pc(), 0x2d65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 03CD
        gbc.setState(0x6e9d, 0xecfc, 0x5df0, 0x40aa, 0x8edb, 0x4f99, 0x1, 0x0);
        gbc.writeMem(0x6e9d, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xecfc);
        EXPECT(gbc.pc(), 0x6e9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 03CE
        gbc.setState(0xba21, 0x4cb7, 0x2880, 0xd4a7, 0x7701, 0xe40c, 0x1, 0x1);
        gbc.writeMem(0xba21, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x4cb7);
        EXPECT(gbc.pc(), 0xba23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba21), 0xcb);
        EXPECT(gbc.readMem(0xba22), 0x80);
        // CB 80 03CF
        gbc.setState(0x4344, 0x6073, 0xa5a0, 0x9d32, 0x336b, 0x889f, 0x0, 0x0);
        gbc.writeMem(0x4344, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x6073);
        EXPECT(gbc.pc(), 0x4346);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 03D0
        gbc.setState(0x4b64, 0x4cb8, 0x7660, 0xde0f, 0xa288, 0xa68a, 0x0, 0x1);
        gbc.writeMem(0x4b64, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x4cb8);
        EXPECT(gbc.pc(), 0x4b66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 03D1
        gbc.setState(0x7bcf, 0xf2a, 0xd5b0, 0x6c32, 0x7eec, 0x33fe, 0x1, 0x1);
        gbc.writeMem(0x7bcf, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xf2a);
        EXPECT(gbc.pc(), 0x7bd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 03D2
        gbc.setState(0x2841, 0x5fa1, 0xb760, 0x825c, 0xd012, 0x1fc3, 0x1, 0x1);
        gbc.writeMem(0x2841, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x5fa1);
        EXPECT(gbc.pc(), 0x2843);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 03D3
        gbc.setState(0x5d17, 0xac2e, 0xde30, 0x6154, 0x5afc, 0xb6ae, 0x1, 0x1);
        gbc.writeMem(0x5d17, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xac2e);
        EXPECT(gbc.pc(), 0x5d19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 03D4
        gbc.setState(0xc075, 0x8153, 0x6ad0, 0xefc4, 0x6a06, 0x7d95, 0x1, 0x1);
        gbc.writeMem(0xc075, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x8153);
        EXPECT(gbc.pc(), 0xc077);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc075), 0xcb);
        EXPECT(gbc.readMem(0xc076), 0x80);
        // CB 80 03D5
        gbc.setState(0xb414, 0xe84, 0x3670, 0xc8bb, 0xa5ab, 0x5cc3, 0x0, 0x1);
        gbc.writeMem(0xb414, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xe84);
        EXPECT(gbc.pc(), 0xb416);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb414), 0xcb);
        EXPECT(gbc.readMem(0xb415), 0x80);
        // CB 80 03D6
        gbc.setState(0x7328, 0x41dd, 0xfab0, 0x5231, 0xc434, 0xed2d, 0x0, 0x0);
        gbc.writeMem(0x7328, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x41dd);
        EXPECT(gbc.pc(), 0x732a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 03D7
        gbc.setState(0x18d2, 0x1472, 0xdd60, 0xd5fb, 0x34f9, 0x962d, 0x0, 0x0);
        gbc.writeMem(0x18d2, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x1472);
        EXPECT(gbc.pc(), 0x18d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 03D8
        gbc.setState(0x2159, 0xc2c8, 0xe330, 0xce47, 0x3d88, 0x6bb7, 0x0, 0x0);
        gbc.writeMem(0x2159, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xc2c8);
        EXPECT(gbc.pc(), 0x215b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 03D9
        gbc.setState(0x3765, 0x2adc, 0x30a0, 0x6ce5, 0x4143, 0x1492, 0x1, 0x1);
        gbc.writeMem(0x3765, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x2adc);
        EXPECT(gbc.pc(), 0x3767);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 80 03DA
        gbc.setState(0x800b, 0x6e6a, 0x9fb0, 0x7ea6, 0x2008, 0xc973, 0x1, 0x0);
        gbc.writeMem(0x800b, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x6e6a);
        EXPECT(gbc.pc(), 0x800d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x800b), 0xcb);
        EXPECT(gbc.readMem(0x800c), 0x80);
        // CB 80 03DB
        gbc.setState(0x84df, 0x56a5, 0xbe30, 0xd44c, 0x682c, 0x3a07, 0x0, 0x1);
        gbc.writeMem(0x84df, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x56a5);
        EXPECT(gbc.pc(), 0x84e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84df), 0xcb);
        EXPECT(gbc.readMem(0x84e0), 0x80);
        // CB 80 03DC
        gbc.setState(0x808f, 0xa0fd, 0xa0b0, 0x56c9, 0x6936, 0x6571, 0x1, 0x1);
        gbc.writeMem(0x808f, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xa0fd);
        EXPECT(gbc.pc(), 0x8091);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x808f), 0xcb);
        EXPECT(gbc.readMem(0x8090), 0x80);
        // CB 80 03DD
        gbc.setState(0x5ffb, 0x1715, 0xc670, 0xa45, 0x2c58, 0x7c5, 0x0, 0x0);
        gbc.writeMem(0x5ffb, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x1715);
        EXPECT(gbc.pc(), 0x5ffd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 03DE
        gbc.setState(0xcc58, 0xb506, 0x3e50, 0x8d20, 0x42b5, 0x4bda, 0x0, 0x1);
        gbc.writeMem(0xcc58, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xb506);
        EXPECT(gbc.pc(), 0xcc5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc58), 0xcb);
        EXPECT(gbc.readMem(0xcc59), 0x80);
        // CB 80 03DF
        gbc.setState(0x66c1, 0x6827, 0x3ab0, 0xc7a1, 0xb5bf, 0x8f32, 0x1, 0x1);
        gbc.writeMem(0x66c1, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x6827);
        EXPECT(gbc.pc(), 0x66c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 80 03E0
        gbc.setState(0x2df1, 0x4bf9, 0x2090, 0x9df7, 0x18f6, 0x5df0, 0x1, 0x1);
        gbc.writeMem(0x2df1, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x4bf9);
        EXPECT(gbc.pc(), 0x2df3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 03E2
        gbc.setState(0xbb3, 0x8ade, 0xbfc0, 0xad95, 0x4f77, 0x1ada, 0x1, 0x0);
        gbc.writeMem(0xbb3, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x8ade);
        EXPECT(gbc.pc(), 0xbb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 03E3
        gbc.setState(0xb2b7, 0x21cc, 0x50f0, 0xd811, 0x3bad, 0x1b9f, 0x1, 0x1);
        gbc.writeMem(0xb2b7, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x21cc);
        EXPECT(gbc.pc(), 0xb2b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2b7), 0xcb);
        EXPECT(gbc.readMem(0xb2b8), 0x80);
        // CB 80 03E4
        gbc.setState(0x7770, 0x8d5d, 0x2e10, 0x4154, 0x4162, 0xd853, 0x1, 0x1);
        gbc.writeMem(0x7770, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x8d5d);
        EXPECT(gbc.pc(), 0x7772);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 80 03E5
        gbc.setState(0x1711, 0xb541, 0x4780, 0xcf2a, 0x18bb, 0xb27f, 0x1, 0x1);
        gbc.writeMem(0x1711, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xb541);
        EXPECT(gbc.pc(), 0x1713);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 80 03E7
        gbc.setState(0xaed6, 0x76be, 0xb6c0, 0x7d12, 0x93d0, 0xc823, 0x1, 0x0);
        gbc.writeMem(0xaed6, { 0xcb, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x76be);
        EXPECT(gbc.pc(), 0xaed8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaed6), 0xcb);
        EXPECT(gbc.readMem(0xaed7), 0x80);
    }
}
#endif
