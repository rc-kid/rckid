    TEST(gbcemu, opcode_06) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 06 0000
        gbc.setState(0x131b, 0xcf16, 0x1630, 0xff74, 0x5e03, 0xd5b0, 0x1, 0x0);
        gbc.writeMem(0x131b, { 0x6, 0x21 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xcf16, gbc.sp());
        EXPECT(0x131d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0001
        gbc.setState(0xb6ba, 0xb5a5, 0xcb80, 0x81cf, 0xb216, 0xab8d, 0x1, 0x0);
        gbc.writeMem(0xb6ba, { 0x6, 0xa4 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xb5a5, gbc.sp());
        EXPECT(0xb6bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xb6ba));
        EXPECT(0xa4, gbc.readMem(0xb6bb));
        // 06 0002
        gbc.setState(0x979a, 0x42f6, 0x92f0, 0x235d, 0xae3d, 0xb14a, 0x1, 0x0);
        gbc.writeMem(0x979a, { 0x6, 0x87 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x42f6, gbc.sp());
        EXPECT(0x979c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x979a));
        EXPECT(0x87, gbc.readMem(0x979b));
        // 06 0003
        gbc.setState(0x3f85, 0xfe3d, 0xd2a0, 0x7be7, 0xe459, 0x9d97, 0x0, 0x0);
        gbc.writeMem(0x3f85, { 0x6, 0xb4 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xfe3d, gbc.sp());
        EXPECT(0x3f87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0004
        gbc.setState(0x3683, 0x4d86, 0xbb10, 0x4941, 0x3caf, 0x98d5, 0x0, 0x1);
        gbc.writeMem(0x3683, { 0x6, 0xda });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x4d86, gbc.sp());
        EXPECT(0x3685, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0005
        gbc.setState(0xa60, 0x51a4, 0x7f80, 0x8a57, 0xf6f4, 0xc545, 0x0, 0x1);
        gbc.writeMem(0xa60, { 0x6, 0x50 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x51a4, gbc.sp());
        EXPECT(0xa62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0006
        gbc.setState(0x9034, 0x70d3, 0x3f0, 0x363c, 0x5ec5, 0x78e6, 0x1, 0x1);
        gbc.writeMem(0x9034, { 0x6, 0xa0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x70d3, gbc.sp());
        EXPECT(0x9036, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x9034));
        EXPECT(0xa0, gbc.readMem(0x9035));
        // 06 0007
        gbc.setState(0x427d, 0xe887, 0x3640, 0x6385, 0x4cbe, 0xe4ca, 0x1, 0x0);
        gbc.writeMem(0x427d, { 0x6, 0xa7 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xe887, gbc.sp());
        EXPECT(0x427f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0008
        gbc.setState(0xe210, 0x78e7, 0xf8f0, 0x4ae7, 0xbb82, 0x96d7, 0x1, 0x0);
        gbc.writeMem(0xe210, { 0x6, 0xb });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x78e7, gbc.sp());
        EXPECT(0xe212, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xe210));
        EXPECT(0xb, gbc.readMem(0xe211));
        // 06 0009
        gbc.setState(0x5d60, 0xda18, 0xa1b0, 0x81f3, 0x7a08, 0x779e, 0x0, 0x0);
        gbc.writeMem(0x5d60, { 0x6, 0xa7 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xda18, gbc.sp());
        EXPECT(0x5d62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 000A
        gbc.setState(0x3855, 0x505f, 0x850, 0xf774, 0x3d2d, 0xe1e8, 0x0, 0x1);
        gbc.writeMem(0x3855, { 0x6, 0x22 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x505f, gbc.sp());
        EXPECT(0x3857, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 000C
        gbc.setState(0x1ac2, 0xa808, 0xb1f0, 0x7835, 0xaf5a, 0x5466, 0x1, 0x1);
        gbc.writeMem(0x1ac2, { 0x6, 0xda });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa808, gbc.sp());
        EXPECT(0x1ac4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 000D
        gbc.setState(0x7efb, 0x8a93, 0xab30, 0x95e2, 0x9154, 0x7f6b, 0x0, 0x0);
        gbc.writeMem(0x7efb, { 0x6, 0xb });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x8a93, gbc.sp());
        EXPECT(0x7efd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 000E
        gbc.setState(0x1cbd, 0xf30, 0xfd70, 0x390e, 0xfcc6, 0xb98b, 0x1, 0x1);
        gbc.writeMem(0x1cbd, { 0x6, 0xd3 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf30, gbc.sp());
        EXPECT(0x1cbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 000F
        gbc.setState(0x81e6, 0x2c64, 0xcc10, 0xe908, 0xa963, 0xea40, 0x0, 0x0);
        gbc.writeMem(0x81e6, { 0x6, 0x98 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2c64, gbc.sp());
        EXPECT(0x81e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x81e6));
        EXPECT(0x98, gbc.readMem(0x81e7));
        // 06 0010
        gbc.setState(0x3be8, 0xa594, 0x8310, 0x3ac, 0xbe27, 0xfedc, 0x1, 0x1);
        gbc.writeMem(0x3be8, { 0x6, 0xfa });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xa594, gbc.sp());
        EXPECT(0x3bea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0012
        gbc.setState(0xe06e, 0xfdb3, 0xa530, 0xa36f, 0xf9ed, 0x47a8, 0x0, 0x0);
        gbc.writeMem(0xe06e, { 0x6, 0xa6 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xfdb3, gbc.sp());
        EXPECT(0xe070, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xe06e));
        EXPECT(0xa6, gbc.readMem(0xe06f));
        // 06 0014
        gbc.setState(0x75fb, 0xed54, 0x4950, 0x1cc7, 0x7e6a, 0x6925, 0x1, 0x1);
        gbc.writeMem(0x75fb, { 0x6, 0x8b });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xed54, gbc.sp());
        EXPECT(0x75fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0015
        gbc.setState(0xddc2, 0x3381, 0xd540, 0xfe02, 0x2e6a, 0xe580, 0x0, 0x1);
        gbc.writeMem(0xddc2, { 0x6, 0x3f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3381, gbc.sp());
        EXPECT(0xddc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xddc2));
        EXPECT(0x3f, gbc.readMem(0xddc3));
        // 06 0016
        gbc.setState(0x676, 0xfed1, 0xcf40, 0x1521, 0xc604, 0x6d62, 0x0, 0x0);
        gbc.writeMem(0x676, { 0x6, 0x33 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xfed1, gbc.sp());
        EXPECT(0x678, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0017
        gbc.setState(0x3e03, 0x589d, 0x34a0, 0xa846, 0x5b14, 0x76, 0x0, 0x1);
        gbc.writeMem(0x3e03, { 0x6, 0x8d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x589d, gbc.sp());
        EXPECT(0x3e05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0018
        gbc.setState(0x16f7, 0xbf35, 0xe6b0, 0x772b, 0xbecd, 0x11, 0x0, 0x0);
        gbc.writeMem(0x16f7, { 0x6, 0x79 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xbf35, gbc.sp());
        EXPECT(0x16f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0019
        gbc.setState(0x827e, 0x7725, 0x8590, 0x2ae5, 0xbedb, 0xac0d, 0x0, 0x0);
        gbc.writeMem(0x827e, { 0x6, 0x76 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x7725, gbc.sp());
        EXPECT(0x8280, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x827e));
        EXPECT(0x76, gbc.readMem(0x827f));
        // 06 001A
        gbc.setState(0x6287, 0x960d, 0xc7e0, 0xd7ba, 0x1a60, 0xa4b7, 0x1, 0x1);
        gbc.writeMem(0x6287, { 0x6, 0x7f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x960d, gbc.sp());
        EXPECT(0x6289, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 001B
        gbc.setState(0x75f3, 0x23d1, 0xa360, 0xf1da, 0x86ae, 0x6098, 0x0, 0x0);
        gbc.writeMem(0x75f3, { 0x6, 0x12 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x23d1, gbc.sp());
        EXPECT(0x75f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 001C
        gbc.setState(0x3b0c, 0xbf4e, 0xf050, 0xba5f, 0x7e75, 0xd37c, 0x1, 0x1);
        gbc.writeMem(0x3b0c, { 0x6, 0xbc });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xbf4e, gbc.sp());
        EXPECT(0x3b0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 001D
        gbc.setState(0xc184, 0xe653, 0x4e70, 0x5132, 0xd166, 0xc837, 0x1, 0x1);
        gbc.writeMem(0xc184, { 0x6, 0x58 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe653, gbc.sp());
        EXPECT(0xc186, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xc184));
        EXPECT(0x58, gbc.readMem(0xc185));
        // 06 001E
        gbc.setState(0x50d4, 0x7379, 0xb8a0, 0x4fce, 0x5d47, 0x3769, 0x0, 0x0);
        gbc.writeMem(0x50d4, { 0x6, 0xa4 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x7379, gbc.sp());
        EXPECT(0x50d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 001F
        gbc.setState(0x33f4, 0x4279, 0xb510, 0xf897, 0xd6df, 0x3520, 0x0, 0x0);
        gbc.writeMem(0x33f4, { 0x6, 0xa2 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4279, gbc.sp());
        EXPECT(0x33f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0020
        gbc.setState(0x48e0, 0xc2fd, 0x2ff0, 0xf127, 0xc7a4, 0xa8fd, 0x0, 0x1);
        gbc.writeMem(0x48e0, { 0x6, 0x21 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xc2fd, gbc.sp());
        EXPECT(0x48e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0021
        gbc.setState(0x1dc3, 0x72e0, 0xa350, 0xe80c, 0x9959, 0xb96a, 0x1, 0x0);
        gbc.writeMem(0x1dc3, { 0x6, 0x2 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x72e0, gbc.sp());
        EXPECT(0x1dc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0022
        gbc.setState(0x8675, 0x51ab, 0xc450, 0x2da9, 0x2abb, 0x9c46, 0x0, 0x0);
        gbc.writeMem(0x8675, { 0x6, 0xf2 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x51ab, gbc.sp());
        EXPECT(0x8677, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x8675));
        EXPECT(0xf2, gbc.readMem(0x8676));
        // 06 0023
        gbc.setState(0xa297, 0x3103, 0x3fd0, 0x7990, 0x2cba, 0xf88a, 0x1, 0x1);
        gbc.writeMem(0xa297, { 0x6, 0x46 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x3103, gbc.sp());
        EXPECT(0xa299, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa297));
        EXPECT(0x46, gbc.readMem(0xa298));
        // 06 0024
        gbc.setState(0xa7a9, 0x15bb, 0xa690, 0x84c4, 0x17a6, 0xc768, 0x1, 0x1);
        gbc.writeMem(0xa7a9, { 0x6, 0xe5 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x15bb, gbc.sp());
        EXPECT(0xa7ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa7a9));
        EXPECT(0xe5, gbc.readMem(0xa7aa));
        // 06 0025
        gbc.setState(0x9d11, 0x4cdd, 0x7400, 0x4c83, 0x2238, 0xe0ba, 0x0, 0x1);
        gbc.writeMem(0x9d11, { 0x6, 0xa2 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x4cdd, gbc.sp());
        EXPECT(0x9d13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x9d11));
        EXPECT(0xa2, gbc.readMem(0x9d12));
        // 06 0026
        gbc.setState(0x4388, 0x8b51, 0x4a00, 0x54a8, 0x10a0, 0xa7d1, 0x1, 0x1);
        gbc.writeMem(0x4388, { 0x6, 0x6e });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x8b51, gbc.sp());
        EXPECT(0x438a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0027
        gbc.setState(0x3ecd, 0xda1f, 0x49f0, 0x65c, 0xe97e, 0x3c46, 0x1, 0x1);
        gbc.writeMem(0x3ecd, { 0x6, 0x27 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xda1f, gbc.sp());
        EXPECT(0x3ecf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0028
        gbc.setState(0xa81, 0xa84d, 0xf290, 0x56bd, 0x6134, 0x4da1, 0x0, 0x1);
        gbc.writeMem(0xa81, { 0x6, 0x35 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa84d, gbc.sp());
        EXPECT(0xa83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0029
        gbc.setState(0x165d, 0x531a, 0x4d80, 0xc73a, 0x9b3b, 0x2435, 0x0, 0x0);
        gbc.writeMem(0x165d, { 0x6, 0xed });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x531a, gbc.sp());
        EXPECT(0x165f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 002A
        gbc.setState(0x8f6e, 0x57be, 0x3970, 0x5a3e, 0x6614, 0x2846, 0x1, 0x0);
        gbc.writeMem(0x8f6e, { 0x6, 0x54 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x57be, gbc.sp());
        EXPECT(0x8f70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x8f6e));
        EXPECT(0x54, gbc.readMem(0x8f6f));
        // 06 002B
        gbc.setState(0x3a7f, 0x720f, 0x31c0, 0xfdfe, 0x16bb, 0x7360, 0x1, 0x1);
        gbc.writeMem(0x3a7f, { 0x6, 0xc1 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x720f, gbc.sp());
        EXPECT(0x3a81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 002C
        gbc.setState(0x748d, 0xf470, 0x1070, 0x6217, 0x5d15, 0x8acf, 0x0, 0x1);
        gbc.writeMem(0x748d, { 0x6, 0x22 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xf470, gbc.sp());
        EXPECT(0x748f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 002D
        gbc.setState(0xa4f9, 0x6346, 0x2290, 0x46d, 0x45c8, 0x1be0, 0x1, 0x1);
        gbc.writeMem(0xa4f9, { 0x6, 0x35 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6346, gbc.sp());
        EXPECT(0xa4fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa4f9));
        EXPECT(0x35, gbc.readMem(0xa4fa));
        // 06 002E
        gbc.setState(0xe6a8, 0xfe36, 0x12c0, 0x72c4, 0xa2d1, 0xc80e, 0x1, 0x1);
        gbc.writeMem(0xe6a8, { 0x6, 0x73 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xfe36, gbc.sp());
        EXPECT(0xe6aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xe6a8));
        EXPECT(0x73, gbc.readMem(0xe6a9));
        // 06 002F
        gbc.setState(0x17f3, 0x5089, 0x2a50, 0xff05, 0x11b6, 0x1686, 0x0, 0x1);
        gbc.writeMem(0x17f3, { 0x6, 0x9c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5089, gbc.sp());
        EXPECT(0x17f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0030
        gbc.setState(0xe8a0, 0x3c0d, 0x3c00, 0xe606, 0x71dd, 0xc00c, 0x0, 0x0);
        gbc.writeMem(0xe8a0, { 0x6, 0xad });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x3c0d, gbc.sp());
        EXPECT(0xe8a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xe8a0));
        EXPECT(0xad, gbc.readMem(0xe8a1));
        // 06 0031
        gbc.setState(0x8697, 0xee6, 0xf120, 0xc1f0, 0xd8b3, 0x83fb, 0x0, 0x0);
        gbc.writeMem(0x8697, { 0x6, 0xf0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xee6, gbc.sp());
        EXPECT(0x8699, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x8697));
        EXPECT(0xf0, gbc.readMem(0x8698));
        // 06 0032
        gbc.setState(0x42e9, 0x1af, 0x7410, 0x52c1, 0x3ddb, 0xa0e4, 0x0, 0x0);
        gbc.writeMem(0x42e9, { 0x6, 0x72 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x1af, gbc.sp());
        EXPECT(0x42eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0033
        gbc.setState(0xa20c, 0x5624, 0xd170, 0x910b, 0x4233, 0xa0ec, 0x1, 0x0);
        gbc.writeMem(0xa20c, { 0x6, 0x44 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x5624, gbc.sp());
        EXPECT(0xa20e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa20c));
        EXPECT(0x44, gbc.readMem(0xa20d));
        // 06 0034
        gbc.setState(0x2c3e, 0x7bc0, 0xf1d0, 0xdd69, 0x1fb3, 0x412e, 0x1, 0x0);
        gbc.writeMem(0x2c3e, { 0x6, 0x88 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x7bc0, gbc.sp());
        EXPECT(0x2c40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0035
        gbc.setState(0x99d2, 0x1b4e, 0xbcd0, 0x6742, 0x6f10, 0x20e9, 0x0, 0x1);
        gbc.writeMem(0x99d2, { 0x6, 0xb1 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x1b4e, gbc.sp());
        EXPECT(0x99d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x99d2));
        EXPECT(0xb1, gbc.readMem(0x99d3));
        // 06 0036
        gbc.setState(0x8302, 0xe059, 0x1bb0, 0x5f4d, 0xd6c9, 0x20ab, 0x0, 0x1);
        gbc.writeMem(0x8302, { 0x6, 0x77 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xe059, gbc.sp());
        EXPECT(0x8304, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x8302));
        EXPECT(0x77, gbc.readMem(0x8303));
        // 06 0037
        gbc.setState(0x4bc6, 0xed8b, 0x9de0, 0xd666, 0x4d2e, 0xaa72, 0x1, 0x0);
        gbc.writeMem(0x4bc6, { 0x6, 0xd4 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xed8b, gbc.sp());
        EXPECT(0x4bc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0038
        gbc.setState(0xb61e, 0xd3df, 0x3620, 0x6945, 0xb21e, 0xb78e, 0x1, 0x1);
        gbc.writeMem(0xb61e, { 0x6, 0xea });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xd3df, gbc.sp());
        EXPECT(0xb620, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xb61e));
        EXPECT(0xea, gbc.readMem(0xb61f));
        // 06 0039
        gbc.setState(0xbc21, 0xd807, 0xcd60, 0x2d4b, 0xddce, 0x29b6, 0x0, 0x0);
        gbc.writeMem(0xbc21, { 0x6, 0x8d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xd807, gbc.sp());
        EXPECT(0xbc23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xbc21));
        EXPECT(0x8d, gbc.readMem(0xbc22));
        // 06 003A
        gbc.setState(0xbfcc, 0xd11d, 0x6d50, 0x70a8, 0xbaae, 0x310c, 0x0, 0x1);
        gbc.writeMem(0xbfcc, { 0x6, 0x99 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xd11d, gbc.sp());
        EXPECT(0xbfce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xbfcc));
        EXPECT(0x99, gbc.readMem(0xbfcd));
        // 06 003B
        gbc.setState(0x4515, 0x5f6f, 0xaaf0, 0x4e4b, 0xbae3, 0x646b, 0x1, 0x0);
        gbc.writeMem(0x4515, { 0x6, 0x2f });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x5f6f, gbc.sp());
        EXPECT(0x4517, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 003C
        gbc.setState(0xec30, 0x9ca0, 0x84b0, 0xe02f, 0xe560, 0x452b, 0x1, 0x1);
        gbc.writeMem(0xec30, { 0x6, 0x30 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x9ca0, gbc.sp());
        EXPECT(0xec32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xec30));
        EXPECT(0x30, gbc.readMem(0xec31));
        // 06 003D
        gbc.setState(0x5dd7, 0xc03e, 0x7880, 0x1d0b, 0x55b9, 0x87e4, 0x0, 0x1);
        gbc.writeMem(0x5dd7, { 0x6, 0x80 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xc03e, gbc.sp());
        EXPECT(0x5dd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 003E
        gbc.setState(0x215e, 0xbf10, 0xcb30, 0xb92a, 0xcc30, 0x7988, 0x0, 0x1);
        gbc.writeMem(0x215e, { 0x6, 0xc2 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xbf10, gbc.sp());
        EXPECT(0x2160, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 003F
        gbc.setState(0x6a80, 0x812b, 0xe0f0, 0x7fb, 0x1a26, 0x81e5, 0x1, 0x1);
        gbc.writeMem(0x6a80, { 0x6, 0xf3 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x812b, gbc.sp());
        EXPECT(0x6a82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0040
        gbc.setState(0xd0c0, 0x7719, 0xe840, 0xa3fc, 0xd7fe, 0x4bf1, 0x1, 0x1);
        gbc.writeMem(0xd0c0, { 0x6, 0x88 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x7719, gbc.sp());
        EXPECT(0xd0c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd0c0));
        EXPECT(0x88, gbc.readMem(0xd0c1));
        // 06 0041
        gbc.setState(0x5071, 0x4a56, 0xdca0, 0x23ac, 0xecd8, 0x9fa8, 0x1, 0x1);
        gbc.writeMem(0x5071, { 0x6, 0x95 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x4a56, gbc.sp());
        EXPECT(0x5073, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0042
        gbc.setState(0x3bbf, 0xf39e, 0x8d10, 0x6cd3, 0x5063, 0x614a, 0x0, 0x1);
        gbc.writeMem(0x3bbf, { 0x6, 0x5b });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf39e, gbc.sp());
        EXPECT(0x3bc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0043
        gbc.setState(0x85b7, 0x8ca4, 0x540, 0xf0fb, 0x267b, 0x68e2, 0x0, 0x0);
        gbc.writeMem(0x85b7, { 0x6, 0xc2 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8ca4, gbc.sp());
        EXPECT(0x85b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x85b7));
        EXPECT(0xc2, gbc.readMem(0x85b8));
        // 06 0044
        gbc.setState(0xe8d4, 0x39ca, 0x84f0, 0x45f1, 0x9b77, 0x12dc, 0x0, 0x0);
        gbc.writeMem(0xe8d4, { 0x6, 0x44 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x39ca, gbc.sp());
        EXPECT(0xe8d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xe8d4));
        EXPECT(0x44, gbc.readMem(0xe8d5));
        // 06 0045
        gbc.setState(0x5e6b, 0xf563, 0xf9c0, 0x31d0, 0x8e77, 0x58c1, 0x0, 0x0);
        gbc.writeMem(0x5e6b, { 0x6, 0xb5 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf563, gbc.sp());
        EXPECT(0x5e6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0046
        gbc.setState(0xddb4, 0x80c4, 0x560, 0xeeab, 0x16ae, 0x514, 0x1, 0x0);
        gbc.writeMem(0xddb4, { 0x6, 0xf6 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x80c4, gbc.sp());
        EXPECT(0xddb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xddb4));
        EXPECT(0xf6, gbc.readMem(0xddb5));
        // 06 0047
        gbc.setState(0x2ece, 0x54a, 0x52c0, 0x1435, 0x1fb2, 0xc84b, 0x0, 0x0);
        gbc.writeMem(0x2ece, { 0x6, 0x9f });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x54a, gbc.sp());
        EXPECT(0x2ed0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0048
        gbc.setState(0xe70e, 0x297a, 0x4c80, 0x9a6c, 0xaf9, 0xb575, 0x0, 0x1);
        gbc.writeMem(0xe70e, { 0x6, 0xff });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x297a, gbc.sp());
        EXPECT(0xe710, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xe70e));
        EXPECT(0xff, gbc.readMem(0xe70f));
        // 06 004A
        gbc.setState(0xbd26, 0x97ca, 0x3e80, 0xa89, 0x36c4, 0xd974, 0x1, 0x1);
        gbc.writeMem(0xbd26, { 0x6, 0x7d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x97ca, gbc.sp());
        EXPECT(0xbd28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xbd26));
        EXPECT(0x7d, gbc.readMem(0xbd27));
        // 06 004B
        gbc.setState(0x6992, 0x4cb7, 0x5470, 0xcd24, 0x2fed, 0x23d5, 0x0, 0x1);
        gbc.writeMem(0x6992, { 0x6, 0xa5 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x4cb7, gbc.sp());
        EXPECT(0x6994, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 004C
        gbc.setState(0x4c6a, 0x6973, 0x1390, 0x7eab, 0x50f8, 0x22db, 0x0, 0x1);
        gbc.writeMem(0x4c6a, { 0x6, 0x4 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x6973, gbc.sp());
        EXPECT(0x4c6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 004D
        gbc.setState(0xa7d6, 0x7d2a, 0x9cd0, 0x264f, 0x19af, 0xd0dc, 0x0, 0x1);
        gbc.writeMem(0xa7d6, { 0x6, 0xaf });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x7d2a, gbc.sp());
        EXPECT(0xa7d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa7d6));
        EXPECT(0xaf, gbc.readMem(0xa7d7));
        // 06 004E
        gbc.setState(0xa14d, 0xd50, 0x7730, 0x9807, 0xa951, 0xc51e, 0x0, 0x1);
        gbc.writeMem(0xa14d, { 0x6, 0x53 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xd50, gbc.sp());
        EXPECT(0xa14f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa14d));
        EXPECT(0x53, gbc.readMem(0xa14e));
        // 06 004F
        gbc.setState(0x3887, 0x30b8, 0x9120, 0xda6e, 0xd905, 0xe824, 0x1, 0x0);
        gbc.writeMem(0x3887, { 0x6, 0xcd });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x30b8, gbc.sp());
        EXPECT(0x3889, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0050
        gbc.setState(0x31c6, 0xd365, 0x3fb0, 0xd490, 0xb48e, 0x8ba3, 0x0, 0x0);
        gbc.writeMem(0x31c6, { 0x6, 0x5a });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xd365, gbc.sp());
        EXPECT(0x31c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0052
        gbc.setState(0x2262, 0x802e, 0x7c40, 0xb35d, 0x7943, 0xceff, 0x0, 0x1);
        gbc.writeMem(0x2262, { 0x6, 0xd7 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x802e, gbc.sp());
        EXPECT(0x2264, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0053
        gbc.setState(0x83e1, 0x805c, 0x950, 0xaa63, 0x630e, 0x263b, 0x1, 0x1);
        gbc.writeMem(0x83e1, { 0x6, 0x8d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x805c, gbc.sp());
        EXPECT(0x83e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x83e1));
        EXPECT(0x8d, gbc.readMem(0x83e2));
        // 06 0054
        gbc.setState(0x52f, 0x92b3, 0xc6a0, 0x9877, 0x6323, 0x3efa, 0x0, 0x0);
        gbc.writeMem(0x52f, { 0x6, 0x5d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x92b3, gbc.sp());
        EXPECT(0x531, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0055
        gbc.setState(0x53e5, 0x27a9, 0x6700, 0xb1e6, 0x5245, 0xc6a1, 0x1, 0x0);
        gbc.writeMem(0x53e5, { 0x6, 0x47 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x27a9, gbc.sp());
        EXPECT(0x53e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0056
        gbc.setState(0x110c, 0x9d04, 0xcd90, 0xa59, 0x5687, 0x2ba6, 0x0, 0x1);
        gbc.writeMem(0x110c, { 0x6, 0x6b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x9d04, gbc.sp());
        EXPECT(0x110e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0057
        gbc.setState(0xd58c, 0x7487, 0x6950, 0xaa5c, 0x332, 0x8bc, 0x0, 0x0);
        gbc.writeMem(0xd58c, { 0x6, 0xf6 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x7487, gbc.sp());
        EXPECT(0xd58e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd58c));
        EXPECT(0xf6, gbc.readMem(0xd58d));
        // 06 0058
        gbc.setState(0x6e83, 0x2411, 0x2da0, 0x531, 0xad2, 0x4fd6, 0x1, 0x0);
        gbc.writeMem(0x6e83, { 0x6, 0x8e });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x2411, gbc.sp());
        EXPECT(0x6e85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0059
        gbc.setState(0x662d, 0xceff, 0x4440, 0x20ff, 0x6886, 0x7b11, 0x0, 0x0);
        gbc.writeMem(0x662d, { 0x6, 0x23 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xceff, gbc.sp());
        EXPECT(0x662f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 005A
        gbc.setState(0x4c53, 0xfe2, 0xcd30, 0x3581, 0x186b, 0xf1b2, 0x0, 0x1);
        gbc.writeMem(0x4c53, { 0x6, 0x1a });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xfe2, gbc.sp());
        EXPECT(0x4c55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 005B
        gbc.setState(0xd1fe, 0xe8d5, 0x2240, 0x1b3, 0xb445, 0x437, 0x0, 0x1);
        gbc.writeMem(0xd1fe, { 0x6, 0x63 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe8d5, gbc.sp());
        EXPECT(0xd200, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd1fe));
        EXPECT(0x63, gbc.readMem(0xd1ff));
        // 06 005C
        gbc.setState(0xbb06, 0x1b3c, 0xcb80, 0x4505, 0xef7, 0xc166, 0x1, 0x0);
        gbc.writeMem(0xbb06, { 0x6, 0x83 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x1b3c, gbc.sp());
        EXPECT(0xbb08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xbb06));
        EXPECT(0x83, gbc.readMem(0xbb07));
        // 06 005D
        gbc.setState(0x8e55, 0xaa6, 0x690, 0x6c63, 0xf176, 0xf9cb, 0x1, 0x1);
        gbc.writeMem(0x8e55, { 0x6, 0x1d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xaa6, gbc.sp());
        EXPECT(0x8e57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x8e55));
        EXPECT(0x1d, gbc.readMem(0x8e56));
        // 06 005E
        gbc.setState(0x32cf, 0x1fbf, 0x2ca0, 0x5d1c, 0xf52b, 0x31d, 0x0, 0x0);
        gbc.writeMem(0x32cf, { 0x6, 0xfe });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x1fbf, gbc.sp());
        EXPECT(0x32d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 005F
        gbc.setState(0x7d77, 0xbe74, 0xd8d0, 0x31f6, 0x425b, 0xa068, 0x1, 0x1);
        gbc.writeMem(0x7d77, { 0x6, 0x71 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xbe74, gbc.sp());
        EXPECT(0x7d79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0060
        gbc.setState(0xa8a2, 0x8701, 0xcb90, 0x9695, 0x1a20, 0x2da1, 0x0, 0x0);
        gbc.writeMem(0xa8a2, { 0x6, 0x78 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x8701, gbc.sp());
        EXPECT(0xa8a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa8a2));
        EXPECT(0x78, gbc.readMem(0xa8a3));
        // 06 0061
        gbc.setState(0xc023, 0x7ae3, 0xa4a0, 0xb09e, 0xf226, 0x6c38, 0x1, 0x1);
        gbc.writeMem(0xc023, { 0x6, 0xff });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x7ae3, gbc.sp());
        EXPECT(0xc025, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xc023));
        EXPECT(0xff, gbc.readMem(0xc024));
        // 06 0062
        gbc.setState(0xa1ea, 0x5655, 0x9850, 0xc37a, 0xc046, 0x85e4, 0x0, 0x0);
        gbc.writeMem(0xa1ea, { 0x6, 0xd2 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x5655, gbc.sp());
        EXPECT(0xa1ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa1ea));
        EXPECT(0xd2, gbc.readMem(0xa1eb));
        // 06 0063
        gbc.setState(0x839, 0x8327, 0x69a0, 0x4636, 0x3d43, 0x1ae5, 0x0, 0x1);
        gbc.writeMem(0x839, { 0x6, 0x95 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x8327, gbc.sp());
        EXPECT(0x83b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0064
        gbc.setState(0x156, 0x40cb, 0x2010, 0x2b26, 0xdff8, 0xaf58, 0x1, 0x0);
        gbc.writeMem(0x156, { 0x6, 0x8 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x40cb, gbc.sp());
        EXPECT(0x158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0065
        gbc.setState(0xec9c, 0x71d8, 0x41f0, 0xa343, 0x70b, 0x4b53, 0x1, 0x0);
        gbc.writeMem(0xec9c, { 0x6, 0x66 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x71d8, gbc.sp());
        EXPECT(0xec9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xec9c));
        EXPECT(0x66, gbc.readMem(0xec9d));
        // 06 0067
        gbc.setState(0x82e4, 0xc8cc, 0x5ab0, 0x77c4, 0x94f3, 0x1c02, 0x1, 0x0);
        gbc.writeMem(0x82e4, { 0x6, 0x0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc8cc, gbc.sp());
        EXPECT(0x82e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x82e4));
        EXPECT(0x0, gbc.readMem(0x82e5));
        // 06 0068
        gbc.setState(0x1d54, 0x7647, 0x2ce0, 0xc037, 0xe097, 0xb33a, 0x1, 0x0);
        gbc.writeMem(0x1d54, { 0x6, 0x6a });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x7647, gbc.sp());
        EXPECT(0x1d56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0069
        gbc.setState(0x4083, 0xc0b2, 0x1d00, 0xb5cc, 0xd186, 0x5adc, 0x1, 0x1);
        gbc.writeMem(0x4083, { 0x6, 0x93 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xc0b2, gbc.sp());
        EXPECT(0x4085, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 006A
        gbc.setState(0xa37b, 0x5173, 0xe180, 0x5f14, 0x6913, 0x41ff, 0x0, 0x1);
        gbc.writeMem(0xa37b, { 0x6, 0xbe });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x5173, gbc.sp());
        EXPECT(0xa37d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa37b));
        EXPECT(0xbe, gbc.readMem(0xa37c));
        // 06 006B
        gbc.setState(0x1695, 0x853e, 0xb180, 0xa53e, 0xca97, 0xd3c1, 0x0, 0x1);
        gbc.writeMem(0x1695, { 0x6, 0x6 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x853e, gbc.sp());
        EXPECT(0x1697, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 006C
        gbc.setState(0x3cd1, 0xb349, 0x6100, 0xe32b, 0x4077, 0x727c, 0x1, 0x0);
        gbc.writeMem(0x3cd1, { 0x6, 0x18 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb349, gbc.sp());
        EXPECT(0x3cd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 006D
        gbc.setState(0x8220, 0x2785, 0x4bb0, 0xe741, 0x2f11, 0xae24, 0x1, 0x0);
        gbc.writeMem(0x8220, { 0x6, 0x68 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x2785, gbc.sp());
        EXPECT(0x8222, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x8220));
        EXPECT(0x68, gbc.readMem(0x8221));
        // 06 006F
        gbc.setState(0x6508, 0xde87, 0x6a0, 0xe10b, 0x9508, 0x92a4, 0x0, 0x1);
        gbc.writeMem(0x6508, { 0x6, 0xb3 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xde87, gbc.sp());
        EXPECT(0x650a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0070
        gbc.setState(0x2d93, 0xe7d6, 0x13d0, 0x2690, 0xfe88, 0xe2c4, 0x1, 0x1);
        gbc.writeMem(0x2d93, { 0x6, 0xbd });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xe7d6, gbc.sp());
        EXPECT(0x2d95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0071
        gbc.setState(0x35c4, 0xe049, 0x3020, 0x6514, 0xa8af, 0xdb0d, 0x1, 0x1);
        gbc.writeMem(0x35c4, { 0x6, 0x3e });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xe049, gbc.sp());
        EXPECT(0x35c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0072
        gbc.setState(0x48fc, 0x1c13, 0xee30, 0x2e78, 0x8aba, 0xfaac, 0x1, 0x0);
        gbc.writeMem(0x48fc, { 0x6, 0x5a });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1c13, gbc.sp());
        EXPECT(0x48fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0073
        gbc.setState(0xa798, 0xf56e, 0x3270, 0xd1e2, 0xbc42, 0xb026, 0x1, 0x0);
        gbc.writeMem(0xa798, { 0x6, 0x6a });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf56e, gbc.sp());
        EXPECT(0xa79a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa798));
        EXPECT(0x6a, gbc.readMem(0xa799));
        // 06 0074
        gbc.setState(0xacd5, 0x5df7, 0xfcd0, 0x7b77, 0x2193, 0x9c23, 0x0, 0x1);
        gbc.writeMem(0xacd5, { 0x6, 0xf });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x5df7, gbc.sp());
        EXPECT(0xacd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xacd5));
        EXPECT(0xf, gbc.readMem(0xacd6));
        // 06 0075
        gbc.setState(0xeae7, 0x23bf, 0x7f80, 0x3322, 0xfdea, 0x905e, 0x1, 0x1);
        gbc.writeMem(0xeae7, { 0x6, 0x44 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x23bf, gbc.sp());
        EXPECT(0xeae9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xeae7));
        EXPECT(0x44, gbc.readMem(0xeae8));
        // 06 0077
        gbc.setState(0x637c, 0x126b, 0x9770, 0xa338, 0xd473, 0x8fb5, 0x1, 0x1);
        gbc.writeMem(0x637c, { 0x6, 0xe5 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x126b, gbc.sp());
        EXPECT(0x637e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0078
        gbc.setState(0x4ba2, 0xf1a9, 0x50f0, 0xa401, 0xe1ae, 0x184c, 0x0, 0x0);
        gbc.writeMem(0x4ba2, { 0x6, 0x20 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xf1a9, gbc.sp());
        EXPECT(0x4ba4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0079
        gbc.setState(0xcf08, 0xa446, 0xcb30, 0xe39d, 0xcf79, 0xdd4f, 0x0, 0x0);
        gbc.writeMem(0xcf08, { 0x6, 0x76 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa446, gbc.sp());
        EXPECT(0xcf0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xcf08));
        EXPECT(0x76, gbc.readMem(0xcf09));
        // 06 007A
        gbc.setState(0x123d, 0xa107, 0x3910, 0x6af0, 0x8094, 0xb608, 0x0, 0x1);
        gbc.writeMem(0x123d, { 0x6, 0x61 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xa107, gbc.sp());
        EXPECT(0x123f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 007B
        gbc.setState(0xdfae, 0xbacc, 0x4db0, 0x29c0, 0xe88c, 0x4dac, 0x1, 0x1);
        gbc.writeMem(0xdfae, { 0x6, 0x8b });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xbacc, gbc.sp());
        EXPECT(0xdfb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xdfae));
        EXPECT(0x8b, gbc.readMem(0xdfaf));
        // 06 007D
        gbc.setState(0x432d, 0xe1a5, 0x4790, 0xda6, 0xc253, 0x65a7, 0x1, 0x0);
        gbc.writeMem(0x432d, { 0x6, 0x77 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xe1a5, gbc.sp());
        EXPECT(0x432f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 007E
        gbc.setState(0xa296, 0xd2f, 0x3810, 0x3bd1, 0x45e4, 0x434c, 0x1, 0x1);
        gbc.writeMem(0xa296, { 0x6, 0x9b });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xd2f, gbc.sp());
        EXPECT(0xa298, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa296));
        EXPECT(0x9b, gbc.readMem(0xa297));
        // 06 007F
        gbc.setState(0x1791, 0x3b8c, 0x8a40, 0x7f8a, 0x29c1, 0xfcd5, 0x0, 0x0);
        gbc.writeMem(0x1791, { 0x6, 0xc });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x3b8c, gbc.sp());
        EXPECT(0x1793, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0081
        gbc.setState(0x57fc, 0xc418, 0x2ac0, 0x6bf0, 0xa39f, 0xf590, 0x1, 0x0);
        gbc.writeMem(0x57fc, { 0x6, 0x6f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc418, gbc.sp());
        EXPECT(0x57fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0082
        gbc.setState(0x6927, 0x68b, 0x1560, 0xdb96, 0x611c, 0xf824, 0x0, 0x0);
        gbc.writeMem(0x6927, { 0x6, 0xbb });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x68b, gbc.sp());
        EXPECT(0x6929, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0083
        gbc.setState(0x7077, 0xaa3f, 0x3700, 0xd042, 0x615e, 0x9440, 0x0, 0x0);
        gbc.writeMem(0x7077, { 0x6, 0x2 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xaa3f, gbc.sp());
        EXPECT(0x7079, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0084
        gbc.setState(0x37a5, 0xaf14, 0x3e30, 0x5edf, 0xe93e, 0x6f3c, 0x1, 0x0);
        gbc.writeMem(0x37a5, { 0x6, 0x60 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xaf14, gbc.sp());
        EXPECT(0x37a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0085
        gbc.setState(0x95ec, 0x4e02, 0xfc20, 0x2d69, 0x8d83, 0x1d93, 0x1, 0x1);
        gbc.writeMem(0x95ec, { 0x6, 0x30 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x4e02, gbc.sp());
        EXPECT(0x95ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x95ec));
        EXPECT(0x30, gbc.readMem(0x95ed));
        // 06 0086
        gbc.setState(0x84a8, 0x3111, 0x41a0, 0x1b8, 0x8c86, 0xd991, 0x0, 0x1);
        gbc.writeMem(0x84a8, { 0x6, 0x43 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x3111, gbc.sp());
        EXPECT(0x84aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x84a8));
        EXPECT(0x43, gbc.readMem(0x84a9));
        // 06 0087
        gbc.setState(0x6c54, 0x7d76, 0xe310, 0xf7c7, 0x2266, 0xcdfd, 0x0, 0x0);
        gbc.writeMem(0x6c54, { 0x6, 0xa2 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x7d76, gbc.sp());
        EXPECT(0x6c56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0088
        gbc.setState(0x1f32, 0x8e4c, 0x5550, 0x7516, 0x7e17, 0xee0, 0x0, 0x1);
        gbc.writeMem(0x1f32, { 0x6, 0xf9 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x8e4c, gbc.sp());
        EXPECT(0x1f34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0089
        gbc.setState(0xa26f, 0x5536, 0x74a0, 0x1696, 0x4225, 0xc80a, 0x1, 0x1);
        gbc.writeMem(0xa26f, { 0x6, 0x8d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x5536, gbc.sp());
        EXPECT(0xa271, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa26f));
        EXPECT(0x8d, gbc.readMem(0xa270));
        // 06 008A
        gbc.setState(0x4e73, 0x104e, 0x23a0, 0x8c67, 0xe6cc, 0x4ae6, 0x1, 0x0);
        gbc.writeMem(0x4e73, { 0x6, 0x22 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x104e, gbc.sp());
        EXPECT(0x4e75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 008B
        gbc.setState(0x28cd, 0x4300, 0x75a0, 0xf2da, 0xf80, 0xe8e7, 0x0, 0x1);
        gbc.writeMem(0x28cd, { 0x6, 0xe7 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x4300, gbc.sp());
        EXPECT(0x28cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 008C
        gbc.setState(0xc9e0, 0xf65e, 0x6350, 0x26e0, 0xc34e, 0x16a9, 0x1, 0x1);
        gbc.writeMem(0xc9e0, { 0x6, 0x22 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xf65e, gbc.sp());
        EXPECT(0xc9e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xc9e0));
        EXPECT(0x22, gbc.readMem(0xc9e1));
        // 06 008D
        gbc.setState(0xb1ea, 0x93c3, 0xb310, 0xa7de, 0x4c75, 0x54c6, 0x0, 0x0);
        gbc.writeMem(0xb1ea, { 0x6, 0x5a });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x93c3, gbc.sp());
        EXPECT(0xb1ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xb1ea));
        EXPECT(0x5a, gbc.readMem(0xb1eb));
        // 06 008E
        gbc.setState(0xa2a6, 0x7486, 0xed20, 0xa5b4, 0xa74b, 0xbf95, 0x1, 0x0);
        gbc.writeMem(0xa2a6, { 0x6, 0x92 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x7486, gbc.sp());
        EXPECT(0xa2a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa2a6));
        EXPECT(0x92, gbc.readMem(0xa2a7));
        // 06 008F
        gbc.setState(0xb2bf, 0x8332, 0xcc40, 0x9562, 0x1de, 0xab4c, 0x0, 0x1);
        gbc.writeMem(0xb2bf, { 0x6, 0x90 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8332, gbc.sp());
        EXPECT(0xb2c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xb2bf));
        EXPECT(0x90, gbc.readMem(0xb2c0));
        // 06 0090
        gbc.setState(0x3213, 0x49ff, 0x5930, 0x42b4, 0x14ef, 0xee4d, 0x0, 0x0);
        gbc.writeMem(0x3213, { 0x6, 0x7b });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x49ff, gbc.sp());
        EXPECT(0x3215, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0091
        gbc.setState(0x5acf, 0x3113, 0x3570, 0x26fe, 0x766a, 0x29e9, 0x0, 0x1);
        gbc.writeMem(0x5acf, { 0x6, 0x59 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x3113, gbc.sp());
        EXPECT(0x5ad1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0092
        gbc.setState(0xd330, 0xf934, 0xa130, 0xabc, 0x6987, 0x8230, 0x0, 0x1);
        gbc.writeMem(0xd330, { 0x6, 0xad });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xf934, gbc.sp());
        EXPECT(0xd332, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd330));
        EXPECT(0xad, gbc.readMem(0xd331));
        // 06 0093
        gbc.setState(0x5747, 0xb58b, 0xdb60, 0x6f79, 0xc393, 0xbf17, 0x0, 0x1);
        gbc.writeMem(0x5747, { 0x6, 0x50 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb58b, gbc.sp());
        EXPECT(0x5749, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0094
        gbc.setState(0xe009, 0xec32, 0x940, 0xf87e, 0x12ed, 0xbfdc, 0x0, 0x0);
        gbc.writeMem(0xe009, { 0x6, 0x77 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xec32, gbc.sp());
        EXPECT(0xe00b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xe009));
        EXPECT(0x77, gbc.readMem(0xe00a));
        // 06 0095
        gbc.setState(0x9168, 0x92c3, 0x3210, 0x9817, 0x6906, 0xee8, 0x1, 0x0);
        gbc.writeMem(0x9168, { 0x6, 0xef });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x92c3, gbc.sp());
        EXPECT(0x916a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x9168));
        EXPECT(0xef, gbc.readMem(0x9169));
        // 06 0097
        gbc.setState(0xbc65, 0x2825, 0x36b0, 0xa239, 0x5487, 0x1f9b, 0x1, 0x1);
        gbc.writeMem(0xbc65, { 0x6, 0x21 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x2825, gbc.sp());
        EXPECT(0xbc67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xbc65));
        EXPECT(0x21, gbc.readMem(0xbc66));
        // 06 0098
        gbc.setState(0xa338, 0x76ca, 0x2100, 0x7cdd, 0x5832, 0xed25, 0x1, 0x1);
        gbc.writeMem(0xa338, { 0x6, 0xd4 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x76ca, gbc.sp());
        EXPECT(0xa33a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa338));
        EXPECT(0xd4, gbc.readMem(0xa339));
        // 06 0099
        gbc.setState(0xcf61, 0xe23c, 0x52a0, 0xe79c, 0xda03, 0xb175, 0x1, 0x0);
        gbc.writeMem(0xcf61, { 0x6, 0xba });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xe23c, gbc.sp());
        EXPECT(0xcf63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xcf61));
        EXPECT(0xba, gbc.readMem(0xcf62));
        // 06 009A
        gbc.setState(0xa229, 0xf626, 0x5110, 0xca6c, 0x195, 0xe1fa, 0x0, 0x0);
        gbc.writeMem(0xa229, { 0x6, 0x33 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf626, gbc.sp());
        EXPECT(0xa22b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa229));
        EXPECT(0x33, gbc.readMem(0xa22a));
        // 06 009B
        gbc.setState(0xa4e8, 0x8a3a, 0x7780, 0x3f8c, 0x125, 0x7c68, 0x0, 0x1);
        gbc.writeMem(0xa4e8, { 0x6, 0x4b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8a3a, gbc.sp());
        EXPECT(0xa4ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa4e8));
        EXPECT(0x4b, gbc.readMem(0xa4e9));
        // 06 009C
        gbc.setState(0xa1b4, 0xa84, 0xcce0, 0x29bf, 0x910d, 0x981b, 0x0, 0x1);
        gbc.writeMem(0xa1b4, { 0x6, 0x42 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xa84, gbc.sp());
        EXPECT(0xa1b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa1b4));
        EXPECT(0x42, gbc.readMem(0xa1b5));
        // 06 009D
        gbc.setState(0x230a, 0x774d, 0xf0a0, 0x3bc5, 0x53e8, 0xdaf2, 0x1, 0x0);
        gbc.writeMem(0x230a, { 0x6, 0xdb });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x774d, gbc.sp());
        EXPECT(0x230c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 009E
        gbc.setState(0x1607, 0x169f, 0xfb60, 0x8e76, 0x9804, 0x92cb, 0x0, 0x0);
        gbc.writeMem(0x1607, { 0x6, 0xc1 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x169f, gbc.sp());
        EXPECT(0x1609, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 009F
        gbc.setState(0xb939, 0x6219, 0x3a60, 0x80aa, 0xa944, 0xf07d, 0x0, 0x1);
        gbc.writeMem(0xb939, { 0x6, 0xf3 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x6219, gbc.sp());
        EXPECT(0xb93b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xb939));
        EXPECT(0xf3, gbc.readMem(0xb93a));
        // 06 00A0
        gbc.setState(0xd898, 0x6156, 0x1560, 0x7d53, 0x5774, 0xf6d5, 0x0, 0x0);
        gbc.writeMem(0xd898, { 0x6, 0x7e });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x6156, gbc.sp());
        EXPECT(0xd89a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd898));
        EXPECT(0x7e, gbc.readMem(0xd899));
        // 06 00A1
        gbc.setState(0x1bcd, 0x4e47, 0xce70, 0xb213, 0x6eb8, 0xc8a7, 0x1, 0x1);
        gbc.writeMem(0x1bcd, { 0x6, 0x22 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x4e47, gbc.sp());
        EXPECT(0x1bcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 00A2
        gbc.setState(0xc423, 0xa0ef, 0x5990, 0x9806, 0xf651, 0x1645, 0x1, 0x0);
        gbc.writeMem(0xc423, { 0x6, 0x48 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa0ef, gbc.sp());
        EXPECT(0xc425, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xc423));
        EXPECT(0x48, gbc.readMem(0xc424));
        // 06 00A3
        gbc.setState(0x10a6, 0xbe57, 0x6a0, 0x9d98, 0x7fc8, 0xdac0, 0x1, 0x1);
        gbc.writeMem(0x10a6, { 0x6, 0x16 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xbe57, gbc.sp());
        EXPECT(0x10a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 00A4
        gbc.setState(0x6ef0, 0x4c75, 0x8c30, 0xe240, 0x3adb, 0xdcc9, 0x0, 0x1);
        gbc.writeMem(0x6ef0, { 0x6, 0xba });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x4c75, gbc.sp());
        EXPECT(0x6ef2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 00A5
        gbc.setState(0x7e6, 0xc6f4, 0x1040, 0x85d0, 0x31a1, 0xe64e, 0x1, 0x1);
        gbc.writeMem(0x7e6, { 0x6, 0xb1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xc6f4, gbc.sp());
        EXPECT(0x7e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 00A6
        gbc.setState(0xd669, 0x1d5a, 0x49d0, 0x98e7, 0x45d3, 0xeed7, 0x0, 0x1);
        gbc.writeMem(0xd669, { 0x6, 0xf7 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x1d5a, gbc.sp());
        EXPECT(0xd66b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd669));
        EXPECT(0xf7, gbc.readMem(0xd66a));
        // 06 00A7
        gbc.setState(0x317f, 0x60dd, 0x32a0, 0xb199, 0xad29, 0xd19f, 0x0, 0x1);
        gbc.writeMem(0x317f, { 0x6, 0x3d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x60dd, gbc.sp());
        EXPECT(0x3181, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 00A8
        gbc.setState(0x4cfd, 0xecef, 0x11a0, 0xd69f, 0xace7, 0xdf11, 0x1, 0x0);
        gbc.writeMem(0x4cfd, { 0x6, 0xea });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xecef, gbc.sp());
        EXPECT(0x4cff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 00A9
        gbc.setState(0xbd50, 0x1818, 0x1630, 0x915d, 0x249b, 0xe416, 0x1, 0x1);
        gbc.writeMem(0xbd50, { 0x6, 0xeb });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x1818, gbc.sp());
        EXPECT(0xbd52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xbd50));
        EXPECT(0xeb, gbc.readMem(0xbd51));
        // 06 00AA
        gbc.setState(0xea9d, 0x1e4a, 0xfb10, 0x1f31, 0x5f8a, 0xb92, 0x1, 0x0);
        gbc.writeMem(0xea9d, { 0x6, 0xd });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1e4a, gbc.sp());
        EXPECT(0xea9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xea9d));
        EXPECT(0xd, gbc.readMem(0xea9e));
        // 06 00AB
        gbc.setState(0x4114, 0xf8e5, 0x8e00, 0xd215, 0xae1d, 0x106c, 0x0, 0x1);
        gbc.writeMem(0x4114, { 0x6, 0xfa });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xf8e5, gbc.sp());
        EXPECT(0x4116, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 00AC
        gbc.setState(0xdfb4, 0xbb78, 0xb7a0, 0x57ee, 0x6319, 0xd98a, 0x0, 0x0);
        gbc.writeMem(0xdfb4, { 0x6, 0x1d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xbb78, gbc.sp());
        EXPECT(0xdfb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xdfb4));
        EXPECT(0x1d, gbc.readMem(0xdfb5));
        // 06 00AD
        gbc.setState(0xa6ce, 0x3210, 0x5b0, 0x32ec, 0xf9dd, 0x951c, 0x0, 0x0);
        gbc.writeMem(0xa6ce, { 0x6, 0x85 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x3210, gbc.sp());
        EXPECT(0xa6d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa6ce));
        EXPECT(0x85, gbc.readMem(0xa6cf));
        // 06 00AE
        gbc.setState(0x26bb, 0x808c, 0x92f0, 0x716d, 0x9e, 0xe55f, 0x1, 0x1);
        gbc.writeMem(0x26bb, { 0x6, 0xfe });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x808c, gbc.sp());
        EXPECT(0x26bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 00AF
        gbc.setState(0x572d, 0x5044, 0xe370, 0x7676, 0xa873, 0x3a35, 0x0, 0x0);
        gbc.writeMem(0x572d, { 0x6, 0xf7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x5044, gbc.sp());
        EXPECT(0x572f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 00B0
        gbc.setState(0xdb37, 0x1cee, 0xfae0, 0x5d00, 0xd41, 0x4c23, 0x1, 0x0);
        gbc.writeMem(0xdb37, { 0x6, 0x39 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1cee, gbc.sp());
        EXPECT(0xdb39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xdb37));
        EXPECT(0x39, gbc.readMem(0xdb38));
        // 06 00B1
        gbc.setState(0xa1b3, 0x72d5, 0x2570, 0x39a3, 0xefbd, 0x8d04, 0x0, 0x1);
        gbc.writeMem(0xa1b3, { 0x6, 0xff });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x72d5, gbc.sp());
        EXPECT(0xa1b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa1b3));
        EXPECT(0xff, gbc.readMem(0xa1b4));
        // 06 00B2
        gbc.setState(0xfe7, 0x20fa, 0x1bd0, 0x8a95, 0xe536, 0x4f7f, 0x0, 0x0);
        gbc.writeMem(0xfe7, { 0x6, 0xf5 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x20fa, gbc.sp());
        EXPECT(0xfe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 00B3
        gbc.setState(0xb060, 0xe255, 0x70, 0xbc01, 0xa95d, 0xdeb6, 0x1, 0x0);
        gbc.writeMem(0xb060, { 0x6, 0x91 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xe255, gbc.sp());
        EXPECT(0xb062, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xb060));
        EXPECT(0x91, gbc.readMem(0xb061));
        // 06 00B4
        gbc.setState(0x29e0, 0xc640, 0xa7e0, 0xde94, 0x8edd, 0x64c4, 0x0, 0x0);
        gbc.writeMem(0x29e0, { 0x6, 0xf5 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xc640, gbc.sp());
        EXPECT(0x29e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 00B5
        gbc.setState(0x1f50, 0xdc93, 0xfaa0, 0x791d, 0xde24, 0x9723, 0x0, 0x1);
        gbc.writeMem(0x1f50, { 0x6, 0xb3 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xdc93, gbc.sp());
        EXPECT(0x1f52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 00B6
        gbc.setState(0xd4d9, 0xe126, 0x790, 0xb705, 0x6bf, 0x4eb4, 0x0, 0x0);
        gbc.writeMem(0xd4d9, { 0x6, 0x93 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xe126, gbc.sp());
        EXPECT(0xd4db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd4d9));
        EXPECT(0x93, gbc.readMem(0xd4da));
        // 06 00B7
        gbc.setState(0xd053, 0x4b3b, 0xa610, 0xb9e8, 0x7bbd, 0x9de4, 0x1, 0x0);
        gbc.writeMem(0xd053, { 0x6, 0x21 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x4b3b, gbc.sp());
        EXPECT(0xd055, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd053));
        EXPECT(0x21, gbc.readMem(0xd054));
        // 06 00B8
        gbc.setState(0xb44, 0xfe7d, 0x7090, 0x931d, 0x79eb, 0x207b, 0x1, 0x0);
        gbc.writeMem(0xb44, { 0x6, 0x7e });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xfe7d, gbc.sp());
        EXPECT(0xb46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 00B9
        gbc.setState(0xa0c0, 0x9c15, 0x9ac0, 0x80c6, 0x3eee, 0x5c9b, 0x0, 0x1);
        gbc.writeMem(0xa0c0, { 0x6, 0xe6 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x9c15, gbc.sp());
        EXPECT(0xa0c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa0c0));
        EXPECT(0xe6, gbc.readMem(0xa0c1));
        // 06 00BA
        gbc.setState(0x1936, 0xbac6, 0x8d00, 0x6cf2, 0xa89a, 0x123b, 0x0, 0x0);
        gbc.writeMem(0x1936, { 0x6, 0xc6 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xbac6, gbc.sp());
        EXPECT(0x1938, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 00BB
        gbc.setState(0x2ab2, 0x7a1d, 0xd260, 0xddc6, 0xf446, 0xc1ad, 0x0, 0x1);
        gbc.writeMem(0x2ab2, { 0x6, 0x48 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x7a1d, gbc.sp());
        EXPECT(0x2ab4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 00BC
        gbc.setState(0x4d7b, 0x49da, 0xcd50, 0xb01e, 0xa51d, 0xba0d, 0x0, 0x0);
        gbc.writeMem(0x4d7b, { 0x6, 0x35 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x49da, gbc.sp());
        EXPECT(0x4d7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 00BD
        gbc.setState(0xddf2, 0x5bc1, 0xc310, 0xa1ee, 0x397a, 0xeb5d, 0x1, 0x0);
        gbc.writeMem(0xddf2, { 0x6, 0x1f });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x5bc1, gbc.sp());
        EXPECT(0xddf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xddf2));
        EXPECT(0x1f, gbc.readMem(0xddf3));
        // 06 00BE
        gbc.setState(0x4947, 0x646e, 0xd810, 0x8ba4, 0xb, 0x777e, 0x0, 0x0);
        gbc.writeMem(0x4947, { 0x6, 0x35 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x646e, gbc.sp());
        EXPECT(0x4949, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 00BF
        gbc.setState(0x6eb, 0x22cd, 0xded0, 0x3780, 0x4973, 0x5e4b, 0x0, 0x0);
        gbc.writeMem(0x6eb, { 0x6, 0x18 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x22cd, gbc.sp());
        EXPECT(0x6ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 00C0
        gbc.setState(0x5338, 0x3b28, 0xc160, 0x8ff1, 0x968f, 0x27f4, 0x0, 0x1);
        gbc.writeMem(0x5338, { 0x6, 0x65 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x3b28, gbc.sp());
        EXPECT(0x533a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 00C1
        gbc.setState(0xb741, 0x5c18, 0x7d0, 0x3b8c, 0xc59b, 0xc55d, 0x1, 0x1);
        gbc.writeMem(0xb741, { 0x6, 0xcc });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x5c18, gbc.sp());
        EXPECT(0xb743, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xb741));
        EXPECT(0xcc, gbc.readMem(0xb742));
        // 06 00C3
        gbc.setState(0xe9ca, 0x8436, 0x1c20, 0x95f2, 0xfbd1, 0x955c, 0x0, 0x0);
        gbc.writeMem(0xe9ca, { 0x6, 0xff });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x8436, gbc.sp());
        EXPECT(0xe9cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xe9ca));
        EXPECT(0xff, gbc.readMem(0xe9cb));
        // 06 00C4
        gbc.setState(0x4068, 0x8fe1, 0x4400, 0x6de6, 0x4284, 0x6bbf, 0x0, 0x1);
        gbc.writeMem(0x4068, { 0x6, 0xbb });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x8fe1, gbc.sp());
        EXPECT(0x406a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 00C5
        gbc.setState(0x54c3, 0x6c86, 0x1a10, 0xc5c7, 0xae54, 0xf670, 0x1, 0x1);
        gbc.writeMem(0x54c3, { 0x6, 0xf1 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x6c86, gbc.sp());
        EXPECT(0x54c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 00C6
        gbc.setState(0x71da, 0x52ef, 0xe7d0, 0xc9d9, 0x7922, 0xe028, 0x1, 0x1);
        gbc.writeMem(0x71da, { 0x6, 0xbb });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x52ef, gbc.sp());
        EXPECT(0x71dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 00C7
        gbc.setState(0x40a9, 0x7701, 0x5510, 0x2c60, 0xdb97, 0x8220, 0x1, 0x1);
        gbc.writeMem(0x40a9, { 0x6, 0x2 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7701, gbc.sp());
        EXPECT(0x40ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 00C8
        gbc.setState(0x9005, 0xf9fc, 0x7970, 0xe775, 0x262, 0x98e, 0x0, 0x0);
        gbc.writeMem(0x9005, { 0x6, 0xed });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf9fc, gbc.sp());
        EXPECT(0x9007, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x9005));
        EXPECT(0xed, gbc.readMem(0x9006));
        // 06 00C9
        gbc.setState(0xeb82, 0x6703, 0x6e40, 0xa5c7, 0x9c9e, 0x8424, 0x0, 0x0);
        gbc.writeMem(0xeb82, { 0x6, 0x6d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x6703, gbc.sp());
        EXPECT(0xeb84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xeb82));
        EXPECT(0x6d, gbc.readMem(0xeb83));
        // 06 00CA
        gbc.setState(0x61e8, 0xd445, 0x9e30, 0xc9c3, 0x2fb5, 0x5d97, 0x0, 0x1);
        gbc.writeMem(0x61e8, { 0x6, 0xd8 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xd445, gbc.sp());
        EXPECT(0x61ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 00CB
        gbc.setState(0xa84a, 0x22c0, 0x5980, 0x9a4a, 0xfce8, 0xb55a, 0x1, 0x0);
        gbc.writeMem(0xa84a, { 0x6, 0x96 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x22c0, gbc.sp());
        EXPECT(0xa84c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa84a));
        EXPECT(0x96, gbc.readMem(0xa84b));
        // 06 00CC
        gbc.setState(0x9fb6, 0xb480, 0x65d0, 0xfd90, 0x6ece, 0xfd80, 0x1, 0x1);
        gbc.writeMem(0x9fb6, { 0x6, 0x9f });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb480, gbc.sp());
        EXPECT(0x9fb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x9fb6));
        EXPECT(0x9f, gbc.readMem(0x9fb7));
        // 06 00CD
        gbc.setState(0xcdf2, 0x139e, 0xea90, 0xd912, 0x8eb4, 0xb726, 0x0, 0x1);
        gbc.writeMem(0xcdf2, { 0x6, 0x98 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x139e, gbc.sp());
        EXPECT(0xcdf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xcdf2));
        EXPECT(0x98, gbc.readMem(0xcdf3));
        // 06 00CE
        gbc.setState(0xa9f6, 0x9bd6, 0xb710, 0x2de9, 0xbe58, 0x1575, 0x1, 0x1);
        gbc.writeMem(0xa9f6, { 0x6, 0x52 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x9bd6, gbc.sp());
        EXPECT(0xa9f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa9f6));
        EXPECT(0x52, gbc.readMem(0xa9f7));
        // 06 00CF
        gbc.setState(0xea61, 0x7229, 0xe7b0, 0xb7bd, 0x9b0e, 0x7179, 0x0, 0x0);
        gbc.writeMem(0xea61, { 0x6, 0x2c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x7229, gbc.sp());
        EXPECT(0xea63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xea61));
        EXPECT(0x2c, gbc.readMem(0xea62));
        // 06 00D0
        gbc.setState(0xae49, 0x13d0, 0x35a0, 0x8cc5, 0xe5ef, 0x9a9c, 0x1, 0x1);
        gbc.writeMem(0xae49, { 0x6, 0xdb });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x13d0, gbc.sp());
        EXPECT(0xae4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xae49));
        EXPECT(0xdb, gbc.readMem(0xae4a));
        // 06 00D1
        gbc.setState(0x9aa8, 0xd1bc, 0x60e0, 0xe3a5, 0xee15, 0xf901, 0x0, 0x1);
        gbc.writeMem(0x9aa8, { 0x6, 0x11 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd1bc, gbc.sp());
        EXPECT(0x9aaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x9aa8));
        EXPECT(0x11, gbc.readMem(0x9aa9));
        // 06 00D2
        gbc.setState(0x3c74, 0x4273, 0x2bd0, 0x29f1, 0x6bae, 0xe8e4, 0x1, 0x1);
        gbc.writeMem(0x3c74, { 0x6, 0x1b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x4273, gbc.sp());
        EXPECT(0x3c76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 00D3
        gbc.setState(0x7f46, 0x4c, 0x4240, 0x3a23, 0xd3e, 0x9b6c, 0x1, 0x0);
        gbc.writeMem(0x7f46, { 0x6, 0x8b });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x4c, gbc.sp());
        EXPECT(0x7f48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 00D4
        gbc.setState(0xaf82, 0xc3c4, 0xb000, 0x4da, 0xe2b3, 0xb7da, 0x0, 0x0);
        gbc.writeMem(0xaf82, { 0x6, 0xb3 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc3c4, gbc.sp());
        EXPECT(0xaf84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xaf82));
        EXPECT(0xb3, gbc.readMem(0xaf83));
        // 06 00D5
        gbc.setState(0x1491, 0x8881, 0x2460, 0x6bc, 0x6080, 0xc6da, 0x0, 0x0);
        gbc.writeMem(0x1491, { 0x6, 0xac });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x8881, gbc.sp());
        EXPECT(0x1493, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 00D6
        gbc.setState(0x4331, 0x9303, 0xe060, 0x26b6, 0xa60e, 0x9866, 0x1, 0x1);
        gbc.writeMem(0x4331, { 0x6, 0x74 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x9303, gbc.sp());
        EXPECT(0x4333, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 00D7
        gbc.setState(0x89eb, 0x5519, 0xafe0, 0xeab2, 0x5e25, 0xfeee, 0x0, 0x0);
        gbc.writeMem(0x89eb, { 0x6, 0x13 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x5519, gbc.sp());
        EXPECT(0x89ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x89eb));
        EXPECT(0x13, gbc.readMem(0x89ec));
        // 06 00D8
        gbc.setState(0x8d93, 0xcc41, 0xe370, 0xf8bc, 0x8abe, 0x1067, 0x1, 0x1);
        gbc.writeMem(0x8d93, { 0x6, 0xb3 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xcc41, gbc.sp());
        EXPECT(0x8d95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x8d93));
        EXPECT(0xb3, gbc.readMem(0x8d94));
        // 06 00D9
        gbc.setState(0x1c71, 0x4803, 0x2690, 0xe2a5, 0x263b, 0xcca6, 0x1, 0x0);
        gbc.writeMem(0x1c71, { 0x6, 0x4b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4803, gbc.sp());
        EXPECT(0x1c73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 00DA
        gbc.setState(0x2860, 0x9b6f, 0xc890, 0xc232, 0x72f, 0xb389, 0x1, 0x0);
        gbc.writeMem(0x2860, { 0x6, 0x4 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x9b6f, gbc.sp());
        EXPECT(0x2862, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 00DC
        gbc.setState(0x5be9, 0x8bdb, 0x3e70, 0xdd9f, 0x6dad, 0x2ff6, 0x1, 0x1);
        gbc.writeMem(0x5be9, { 0x6, 0x74 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x8bdb, gbc.sp());
        EXPECT(0x5beb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 00DD
        gbc.setState(0x4db7, 0xfe, 0x60b0, 0xd268, 0x17cd, 0xf5c5, 0x1, 0x0);
        gbc.writeMem(0x4db7, { 0x6, 0x6 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xfe, gbc.sp());
        EXPECT(0x4db9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 00DE
        gbc.setState(0x8023, 0x8e92, 0x5460, 0xa119, 0x1f02, 0xdf5d, 0x0, 0x1);
        gbc.writeMem(0x8023, { 0x6, 0xfe });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x8e92, gbc.sp());
        EXPECT(0x8025, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x8023));
        EXPECT(0xfe, gbc.readMem(0x8024));
        // 06 00DF
        gbc.setState(0x5b11, 0x22f1, 0xe1e0, 0x7818, 0x3764, 0x2fce, 0x1, 0x1);
        gbc.writeMem(0x5b11, { 0x6, 0x8c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x22f1, gbc.sp());
        EXPECT(0x5b13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 00E0
        gbc.setState(0x4a89, 0x7c44, 0xed50, 0xbdd, 0x33be, 0x49cb, 0x1, 0x0);
        gbc.writeMem(0x4a89, { 0x6, 0xef });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x7c44, gbc.sp());
        EXPECT(0x4a8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 00E1
        gbc.setState(0x396e, 0x657f, 0xa200, 0xec8f, 0xd836, 0xdb78, 0x1, 0x1);
        gbc.writeMem(0x396e, { 0x6, 0xc3 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x657f, gbc.sp());
        EXPECT(0x3970, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 00E2
        gbc.setState(0x8df, 0x76fc, 0x400, 0x870b, 0xcefc, 0x2c85, 0x0, 0x1);
        gbc.writeMem(0x8df, { 0x6, 0x4b });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x76fc, gbc.sp());
        EXPECT(0x8e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 00E3
        gbc.setState(0x67f6, 0x9a4a, 0xbd20, 0x4893, 0x6c9, 0xe96, 0x1, 0x0);
        gbc.writeMem(0x67f6, { 0x6, 0xb4 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x9a4a, gbc.sp());
        EXPECT(0x67f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 00E5
        gbc.setState(0xe0f8, 0xf559, 0xbac0, 0x8449, 0xa911, 0x4c06, 0x0, 0x0);
        gbc.writeMem(0xe0f8, { 0x6, 0x55 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf559, gbc.sp());
        EXPECT(0xe0fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xe0f8));
        EXPECT(0x55, gbc.readMem(0xe0f9));
        // 06 00E6
        gbc.setState(0x797e, 0x3d68, 0xa060, 0xe66c, 0x6262, 0x227b, 0x0, 0x0);
        gbc.writeMem(0x797e, { 0x6, 0xe6 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x3d68, gbc.sp());
        EXPECT(0x7980, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 00E7
        gbc.setState(0xed5a, 0x7c4c, 0x4190, 0xfa86, 0x58c0, 0x9f6d, 0x0, 0x1);
        gbc.writeMem(0xed5a, { 0x6, 0xef });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x7c4c, gbc.sp());
        EXPECT(0xed5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xed5a));
        EXPECT(0xef, gbc.readMem(0xed5b));
        // 06 00E8
        gbc.setState(0x1ade, 0x85d0, 0x99e0, 0x8c6, 0xfc14, 0x3af8, 0x1, 0x0);
        gbc.writeMem(0x1ade, { 0x6, 0x98 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x85d0, gbc.sp());
        EXPECT(0x1ae0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 00E9
        gbc.setState(0x8ded, 0x8ee1, 0xcfa0, 0x6d9c, 0x1a56, 0xcc1f, 0x1, 0x0);
        gbc.writeMem(0x8ded, { 0x6, 0x63 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x8ee1, gbc.sp());
        EXPECT(0x8def, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x8ded));
        EXPECT(0x63, gbc.readMem(0x8dee));
        // 06 00EA
        gbc.setState(0x156, 0xe673, 0xd330, 0x2253, 0xb9e0, 0x5f15, 0x1, 0x0);
        gbc.writeMem(0x156, { 0x6, 0x8 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe673, gbc.sp());
        EXPECT(0x158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 00EB
        gbc.setState(0xc9c2, 0xd225, 0x2430, 0xcde6, 0xa915, 0xcf7d, 0x0, 0x0);
        gbc.writeMem(0xc9c2, { 0x6, 0xce });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xd225, gbc.sp());
        EXPECT(0xc9c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xc9c2));
        EXPECT(0xce, gbc.readMem(0xc9c3));
        // 06 00EC
        gbc.setState(0x78b5, 0xe5cd, 0xf0, 0x84b, 0x700c, 0x2da2, 0x0, 0x0);
        gbc.writeMem(0x78b5, { 0x6, 0x17 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xe5cd, gbc.sp());
        EXPECT(0x78b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 00ED
        gbc.setState(0xbd8b, 0x8d05, 0x1430, 0x8e42, 0x1e20, 0x396d, 0x0, 0x0);
        gbc.writeMem(0xbd8b, { 0x6, 0xb2 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x8d05, gbc.sp());
        EXPECT(0xbd8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xbd8b));
        EXPECT(0xb2, gbc.readMem(0xbd8c));
        // 06 00EE
        gbc.setState(0xd3d0, 0x6f32, 0x97e0, 0x9064, 0x7d4d, 0x2854, 0x1, 0x0);
        gbc.writeMem(0xd3d0, { 0x6, 0x3 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x6f32, gbc.sp());
        EXPECT(0xd3d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd3d0));
        EXPECT(0x3, gbc.readMem(0xd3d1));
        // 06 00EF
        gbc.setState(0xc428, 0x67be, 0xcc90, 0xedcf, 0xf736, 0xd2d, 0x0, 0x0);
        gbc.writeMem(0xc428, { 0x6, 0x1b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x67be, gbc.sp());
        EXPECT(0xc42a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xc428));
        EXPECT(0x1b, gbc.readMem(0xc429));
        // 06 00F0
        gbc.setState(0x6d2a, 0x5977, 0x1450, 0xbd15, 0x1131, 0x36ce, 0x0, 0x1);
        gbc.writeMem(0x6d2a, { 0x6, 0xa5 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x5977, gbc.sp());
        EXPECT(0x6d2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 00F1
        gbc.setState(0x5da9, 0xcfe1, 0xe9a0, 0xac9, 0x6242, 0x2336, 0x1, 0x0);
        gbc.writeMem(0x5da9, { 0x6, 0xda });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xcfe1, gbc.sp());
        EXPECT(0x5dab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 00F2
        gbc.setState(0x56e4, 0xacd7, 0x7210, 0xdc36, 0x70ae, 0x535e, 0x1, 0x1);
        gbc.writeMem(0x56e4, { 0x6, 0x41 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xacd7, gbc.sp());
        EXPECT(0x56e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 00F3
        gbc.setState(0xf73, 0xf13c, 0xd790, 0xd654, 0x3a52, 0x440a, 0x0, 0x1);
        gbc.writeMem(0xf73, { 0x6, 0xe3 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xf13c, gbc.sp());
        EXPECT(0xf75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 00F5
        gbc.setState(0xb3ee, 0xc4e, 0x79d0, 0x5c15, 0x604a, 0x3bb3, 0x0, 0x0);
        gbc.writeMem(0xb3ee, { 0x6, 0xeb });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc4e, gbc.sp());
        EXPECT(0xb3f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xb3ee));
        EXPECT(0xeb, gbc.readMem(0xb3ef));
        // 06 00F6
        gbc.setState(0x6dc7, 0x74b, 0xa940, 0x95c3, 0xfc3d, 0x8ecd, 0x1, 0x1);
        gbc.writeMem(0x6dc7, { 0x6, 0x2e });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x74b, gbc.sp());
        EXPECT(0x6dc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 00F7
        gbc.setState(0xa9ef, 0xb87f, 0x5b0, 0x4b38, 0xaf0f, 0x3b60, 0x1, 0x1);
        gbc.writeMem(0xa9ef, { 0x6, 0x3f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xb87f, gbc.sp());
        EXPECT(0xa9f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa9ef));
        EXPECT(0x3f, gbc.readMem(0xa9f0));
        // 06 00F8
        gbc.setState(0x4166, 0x5996, 0x3480, 0xc569, 0x9d8e, 0x43b0, 0x0, 0x1);
        gbc.writeMem(0x4166, { 0x6, 0x7d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x5996, gbc.sp());
        EXPECT(0x4168, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 00F9
        gbc.setState(0x4d45, 0xfc5, 0x2e40, 0x3365, 0x41b9, 0x72d5, 0x1, 0x0);
        gbc.writeMem(0x4d45, { 0x6, 0x36 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xfc5, gbc.sp());
        EXPECT(0x4d47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 00FA
        gbc.setState(0x75c1, 0x6a4d, 0xa850, 0xeaf0, 0x35a8, 0xdc7b, 0x0, 0x0);
        gbc.writeMem(0x75c1, { 0x6, 0x7b });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x6a4d, gbc.sp());
        EXPECT(0x75c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 00FB
        gbc.setState(0xe9f1, 0xe47b, 0x1cc0, 0xf45a, 0x84ef, 0xf56f, 0x1, 0x0);
        gbc.writeMem(0xe9f1, { 0x6, 0x97 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xe47b, gbc.sp());
        EXPECT(0xe9f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xe9f1));
        EXPECT(0x97, gbc.readMem(0xe9f2));
        // 06 00FC
        gbc.setState(0x52b1, 0x2336, 0x7f50, 0xca80, 0xfca7, 0xfe14, 0x1, 0x0);
        gbc.writeMem(0x52b1, { 0x6, 0x6e });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x2336, gbc.sp());
        EXPECT(0x52b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 00FD
        gbc.setState(0x3186, 0x6a09, 0x21c0, 0x1063, 0x17ca, 0x904d, 0x1, 0x1);
        gbc.writeMem(0x3186, { 0x6, 0x8b });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6a09, gbc.sp());
        EXPECT(0x3188, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 00FE
        gbc.setState(0xd369, 0x45b6, 0xacd0, 0x3115, 0x4be1, 0x3033, 0x0, 0x1);
        gbc.writeMem(0xd369, { 0x6, 0xdd });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x45b6, gbc.sp());
        EXPECT(0xd36b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd369));
        EXPECT(0xdd, gbc.readMem(0xd36a));
        // 06 00FF
        gbc.setState(0x6a5b, 0xb012, 0xf290, 0xe4bd, 0x94a0, 0x825, 0x1, 0x0);
        gbc.writeMem(0x6a5b, { 0x6, 0xd8 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb012, gbc.sp());
        EXPECT(0x6a5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0100
        gbc.setState(0xc7d1, 0x842d, 0x7260, 0x83a9, 0x58af, 0xd495, 0x0, 0x1);
        gbc.writeMem(0xc7d1, { 0x6, 0x7a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x842d, gbc.sp());
        EXPECT(0xc7d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xc7d1));
        EXPECT(0x7a, gbc.readMem(0xc7d2));
        // 06 0101
        gbc.setState(0x2488, 0xab88, 0xc090, 0x27ed, 0xe347, 0x375e, 0x1, 0x1);
        gbc.writeMem(0x2488, { 0x6, 0xa });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xab88, gbc.sp());
        EXPECT(0x248a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0102
        gbc.setState(0x28ac, 0x1ca0, 0x2d0, 0x517b, 0x8ca1, 0x484, 0x0, 0x0);
        gbc.writeMem(0x28ac, { 0x6, 0xa7 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x1ca0, gbc.sp());
        EXPECT(0x28ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0103
        gbc.setState(0xb8dc, 0x5458, 0x8c40, 0x906a, 0xd033, 0xa321, 0x1, 0x0);
        gbc.writeMem(0xb8dc, { 0x6, 0xcf });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5458, gbc.sp());
        EXPECT(0xb8de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xb8dc));
        EXPECT(0xcf, gbc.readMem(0xb8dd));
        // 06 0104
        gbc.setState(0xdf6b, 0x53a2, 0x8610, 0xf406, 0x5fc1, 0xb05a, 0x0, 0x0);
        gbc.writeMem(0xdf6b, { 0x6, 0xa9 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x53a2, gbc.sp());
        EXPECT(0xdf6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xdf6b));
        EXPECT(0xa9, gbc.readMem(0xdf6c));
        // 06 0105
        gbc.setState(0x7877, 0xa089, 0x8df0, 0x93ce, 0xb1a, 0x8c78, 0x1, 0x0);
        gbc.writeMem(0x7877, { 0x6, 0xef });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xa089, gbc.sp());
        EXPECT(0x7879, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0106
        gbc.setState(0x7220, 0xf9a6, 0x7b80, 0x5023, 0xcbf8, 0xcdef, 0x1, 0x1);
        gbc.writeMem(0x7220, { 0x6, 0x70 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xf9a6, gbc.sp());
        EXPECT(0x7222, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0107
        gbc.setState(0xd52b, 0xd353, 0xc540, 0x14d9, 0x6afe, 0x25f9, 0x1, 0x0);
        gbc.writeMem(0xd52b, { 0x6, 0x68 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xd353, gbc.sp());
        EXPECT(0xd52d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd52b));
        EXPECT(0x68, gbc.readMem(0xd52c));
        // 06 0108
        gbc.setState(0x85a0, 0x595, 0x5000, 0x85dd, 0xb07, 0xc820, 0x0, 0x1);
        gbc.writeMem(0x85a0, { 0x6, 0x3f });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x595, gbc.sp());
        EXPECT(0x85a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x85a0));
        EXPECT(0x3f, gbc.readMem(0x85a1));
        // 06 0109
        gbc.setState(0x48b6, 0x7f7d, 0x4650, 0x8af1, 0x7ed2, 0xbb21, 0x1, 0x0);
        gbc.writeMem(0x48b6, { 0x6, 0x0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x7f7d, gbc.sp());
        EXPECT(0x48b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 010A
        gbc.setState(0xc82a, 0xffc2, 0xb1f0, 0x81a6, 0x82a5, 0x1752, 0x1, 0x1);
        gbc.writeMem(0xc82a, { 0x6, 0x84 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xffc2, gbc.sp());
        EXPECT(0xc82c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xc82a));
        EXPECT(0x84, gbc.readMem(0xc82b));
        // 06 010B
        gbc.setState(0xe4f0, 0x6949, 0x9e10, 0x3d96, 0x9e18, 0x17f8, 0x1, 0x0);
        gbc.writeMem(0xe4f0, { 0x6, 0x32 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6949, gbc.sp());
        EXPECT(0xe4f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xe4f0));
        EXPECT(0x32, gbc.readMem(0xe4f1));
        // 06 010C
        gbc.setState(0xe5fa, 0xb8ee, 0x5bd0, 0xb6c6, 0x197f, 0x85a5, 0x1, 0x1);
        gbc.writeMem(0xe5fa, { 0x6, 0x5f });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xb8ee, gbc.sp());
        EXPECT(0xe5fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xe5fa));
        EXPECT(0x5f, gbc.readMem(0xe5fb));
        // 06 010E
        gbc.setState(0x23da, 0x941a, 0x6e70, 0x9145, 0x1621, 0x7766, 0x0, 0x1);
        gbc.writeMem(0x23da, { 0x6, 0x86 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x941a, gbc.sp());
        EXPECT(0x23dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0110
        gbc.setState(0x5813, 0x59b, 0x5740, 0x6bea, 0x2ca, 0xcb79, 0x1, 0x1);
        gbc.writeMem(0x5813, { 0x6, 0xd5 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x59b, gbc.sp());
        EXPECT(0x5815, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0111
        gbc.setState(0x732, 0x70dc, 0xd6a0, 0x406a, 0x604c, 0xc8bc, 0x1, 0x1);
        gbc.writeMem(0x732, { 0x6, 0xd3 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x70dc, gbc.sp());
        EXPECT(0x734, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0112
        gbc.setState(0xdb98, 0xc49, 0xb220, 0x64a7, 0xdf56, 0x5d4b, 0x0, 0x0);
        gbc.writeMem(0xdb98, { 0x6, 0xa });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc49, gbc.sp());
        EXPECT(0xdb9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xdb98));
        EXPECT(0xa, gbc.readMem(0xdb99));
        // 06 0113
        gbc.setState(0xdad8, 0x2251, 0x9e90, 0xa91b, 0x3c13, 0xa99f, 0x0, 0x1);
        gbc.writeMem(0xdad8, { 0x6, 0x5f });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x2251, gbc.sp());
        EXPECT(0xdada, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xdad8));
        EXPECT(0x5f, gbc.readMem(0xdad9));
        // 06 0114
        gbc.setState(0x2381, 0x558a, 0x18f0, 0x8c6b, 0x914e, 0x5502, 0x1, 0x0);
        gbc.writeMem(0x2381, { 0x6, 0x43 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x558a, gbc.sp());
        EXPECT(0x2383, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0115
        gbc.setState(0x33e9, 0x7f7, 0xfe60, 0xb9cb, 0x76a4, 0x71f3, 0x0, 0x0);
        gbc.writeMem(0x33e9, { 0x6, 0x5f });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x7f7, gbc.sp());
        EXPECT(0x33eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0116
        gbc.setState(0x26a6, 0x4444, 0xf340, 0x74d9, 0xd57, 0xb835, 0x0, 0x0);
        gbc.writeMem(0x26a6, { 0x6, 0x4a });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x4444, gbc.sp());
        EXPECT(0x26a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0117
        gbc.setState(0x7856, 0x130d, 0x8180, 0x47b5, 0x6f3b, 0x9c27, 0x1, 0x0);
        gbc.writeMem(0x7856, { 0x6, 0x39 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x130d, gbc.sp());
        EXPECT(0x7858, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0118
        gbc.setState(0x6cf5, 0xabd8, 0xc700, 0x274c, 0xb343, 0x5e0, 0x1, 0x0);
        gbc.writeMem(0x6cf5, { 0x6, 0x74 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xabd8, gbc.sp());
        EXPECT(0x6cf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0119
        gbc.setState(0xacf0, 0xb559, 0x3c0, 0x59ba, 0x354f, 0x355d, 0x1, 0x1);
        gbc.writeMem(0xacf0, { 0x6, 0x59 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb559, gbc.sp());
        EXPECT(0xacf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xacf0));
        EXPECT(0x59, gbc.readMem(0xacf1));
        // 06 011A
        gbc.setState(0x4819, 0xa7e4, 0xb010, 0x4501, 0x9ef8, 0x5a8e, 0x1, 0x1);
        gbc.writeMem(0x4819, { 0x6, 0xac });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xa7e4, gbc.sp());
        EXPECT(0x481b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 011B
        gbc.setState(0xa4b5, 0x3f47, 0x60b0, 0x4452, 0xbc76, 0xbb8f, 0x1, 0x1);
        gbc.writeMem(0xa4b5, { 0x6, 0xaf });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x3f47, gbc.sp());
        EXPECT(0xa4b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa4b5));
        EXPECT(0xaf, gbc.readMem(0xa4b6));
        // 06 011C
        gbc.setState(0x46fd, 0xb287, 0xaac0, 0x2d3, 0x6170, 0x82c3, 0x0, 0x1);
        gbc.writeMem(0x46fd, { 0x6, 0x35 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xb287, gbc.sp());
        EXPECT(0x46ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 011D
        gbc.setState(0x1af1, 0x96ea, 0xa470, 0x2871, 0xbe7a, 0xa699, 0x1, 0x0);
        gbc.writeMem(0x1af1, { 0x6, 0x60 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x96ea, gbc.sp());
        EXPECT(0x1af3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 011E
        gbc.setState(0xd84f, 0x4525, 0x3c90, 0x80e0, 0xb11b, 0x36fb, 0x0, 0x1);
        gbc.writeMem(0xd84f, { 0x6, 0x72 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x4525, gbc.sp());
        EXPECT(0xd851, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd84f));
        EXPECT(0x72, gbc.readMem(0xd850));
        // 06 011F
        gbc.setState(0x5a9, 0xa24, 0x3a00, 0xc7d7, 0x98b5, 0x33cc, 0x1, 0x1);
        gbc.writeMem(0x5a9, { 0x6, 0xf5 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xa24, gbc.sp());
        EXPECT(0x5ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0120
        gbc.setState(0x584e, 0x991f, 0x7800, 0x4d3f, 0x216f, 0x5073, 0x0, 0x0);
        gbc.writeMem(0x584e, { 0x6, 0xb5 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x991f, gbc.sp());
        EXPECT(0x5850, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0121
        gbc.setState(0x5fa7, 0x2458, 0xb3e0, 0x57e, 0xb83f, 0xcae7, 0x1, 0x0);
        gbc.writeMem(0x5fa7, { 0x6, 0x65 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x2458, gbc.sp());
        EXPECT(0x5fa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0122
        gbc.setState(0x89d2, 0x576a, 0xcda0, 0x983f, 0xbe65, 0x11d7, 0x1, 0x1);
        gbc.writeMem(0x89d2, { 0x6, 0x20 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x576a, gbc.sp());
        EXPECT(0x89d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x89d2));
        EXPECT(0x20, gbc.readMem(0x89d3));
        // 06 0123
        gbc.setState(0xdf32, 0x81ff, 0xc680, 0x3fa4, 0x7e55, 0x63a8, 0x1, 0x0);
        gbc.writeMem(0xdf32, { 0x6, 0x86 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x81ff, gbc.sp());
        EXPECT(0xdf34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xdf32));
        EXPECT(0x86, gbc.readMem(0xdf33));
        // 06 0124
        gbc.setState(0xaf9d, 0x1163, 0x5ee0, 0xb0b5, 0xce6e, 0x822, 0x1, 0x0);
        gbc.writeMem(0xaf9d, { 0x6, 0x3a });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x1163, gbc.sp());
        EXPECT(0xaf9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xaf9d));
        EXPECT(0x3a, gbc.readMem(0xaf9e));
        // 06 0125
        gbc.setState(0x4c03, 0xbd11, 0x7e40, 0xaddc, 0x50c2, 0x2d12, 0x1, 0x0);
        gbc.writeMem(0x4c03, { 0x6, 0x12 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xbd11, gbc.sp());
        EXPECT(0x4c05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0126
        gbc.setState(0x7463, 0xffc0, 0xb300, 0x4a30, 0x4011, 0x66f0, 0x0, 0x0);
        gbc.writeMem(0x7463, { 0x6, 0x1c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xffc0, gbc.sp());
        EXPECT(0x7465, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0127
        gbc.setState(0x3865, 0x6071, 0x92e0, 0x971c, 0x8eb7, 0xfd09, 0x1, 0x1);
        gbc.writeMem(0x3865, { 0x6, 0xe7 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6071, gbc.sp());
        EXPECT(0x3867, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0128
        gbc.setState(0x50d7, 0x28b, 0x44b0, 0x8309, 0x59, 0xf80d, 0x0, 0x0);
        gbc.writeMem(0x50d7, { 0x6, 0x57 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x28b, gbc.sp());
        EXPECT(0x50d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 012B
        gbc.setState(0x84b4, 0x912d, 0x3630, 0xd543, 0x20bf, 0x8d76, 0x1, 0x0);
        gbc.writeMem(0x84b4, { 0x6, 0x35 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x912d, gbc.sp());
        EXPECT(0x84b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x84b4));
        EXPECT(0x35, gbc.readMem(0x84b5));
        // 06 012D
        gbc.setState(0x4511, 0xccf2, 0x6730, 0xd6eb, 0x9926, 0x8ae9, 0x1, 0x0);
        gbc.writeMem(0x4511, { 0x6, 0x2 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xccf2, gbc.sp());
        EXPECT(0x4513, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 012E
        gbc.setState(0x8201, 0xa479, 0xfe80, 0x31e4, 0x241, 0xcbca, 0x1, 0x0);
        gbc.writeMem(0x8201, { 0x6, 0x37 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xa479, gbc.sp());
        EXPECT(0x8203, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x8201));
        EXPECT(0x37, gbc.readMem(0x8202));
        // 06 012F
        gbc.setState(0xbb41, 0xd85e, 0x8430, 0x7df7, 0x66fa, 0xefd5, 0x0, 0x0);
        gbc.writeMem(0xbb41, { 0x6, 0x1e });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xd85e, gbc.sp());
        EXPECT(0xbb43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xbb41));
        EXPECT(0x1e, gbc.readMem(0xbb42));
        // 06 0130
        gbc.setState(0xeeab, 0x6463, 0x1890, 0x2813, 0x2af1, 0x5216, 0x1, 0x1);
        gbc.writeMem(0xeeab, { 0x6, 0x87 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x6463, gbc.sp());
        EXPECT(0xeead, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xeeab));
        EXPECT(0x87, gbc.readMem(0xeeac));
        // 06 0131
        gbc.setState(0xeda7, 0xa68f, 0xf3b0, 0x3eb9, 0xd10c, 0x9fc7, 0x1, 0x1);
        gbc.writeMem(0xeda7, { 0x6, 0x6d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xa68f, gbc.sp());
        EXPECT(0xeda9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xeda7));
        EXPECT(0x6d, gbc.readMem(0xeda8));
        // 06 0132
        gbc.setState(0xadce, 0xfb56, 0xfc00, 0xa783, 0x2cae, 0xd42f, 0x0, 0x0);
        gbc.writeMem(0xadce, { 0x6, 0x9b });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xfb56, gbc.sp());
        EXPECT(0xadd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xadce));
        EXPECT(0x9b, gbc.readMem(0xadcf));
        // 06 0133
        gbc.setState(0xd686, 0xc94c, 0xa4c0, 0x2129, 0x7e30, 0x4dd9, 0x0, 0x0);
        gbc.writeMem(0xd686, { 0x6, 0x14 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xc94c, gbc.sp());
        EXPECT(0xd688, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd686));
        EXPECT(0x14, gbc.readMem(0xd687));
        // 06 0134
        gbc.setState(0x345a, 0x95fa, 0x37d0, 0x165e, 0x8baf, 0x6e35, 0x0, 0x1);
        gbc.writeMem(0x345a, { 0x6, 0x14 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x95fa, gbc.sp());
        EXPECT(0x345c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0135
        gbc.setState(0x8881, 0x3a09, 0xc6e0, 0x194, 0xeddd, 0x5972, 0x0, 0x0);
        gbc.writeMem(0x8881, { 0x6, 0x72 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x3a09, gbc.sp());
        EXPECT(0x8883, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x8881));
        EXPECT(0x72, gbc.readMem(0x8882));
        // 06 0136
        gbc.setState(0x87d5, 0xac4b, 0x3c50, 0xb5bc, 0x4e18, 0x23d7, 0x1, 0x0);
        gbc.writeMem(0x87d5, { 0x6, 0x32 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xac4b, gbc.sp());
        EXPECT(0x87d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x87d5));
        EXPECT(0x32, gbc.readMem(0x87d6));
        // 06 0137
        gbc.setState(0x2d76, 0x8365, 0xde50, 0x4fb8, 0x4871, 0x9707, 0x0, 0x1);
        gbc.writeMem(0x2d76, { 0x6, 0xaa });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x8365, gbc.sp());
        EXPECT(0x2d78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0138
        gbc.setState(0xa975, 0x741a, 0xf660, 0x6f00, 0xfa21, 0x978d, 0x1, 0x1);
        gbc.writeMem(0xa975, { 0x6, 0x44 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x741a, gbc.sp());
        EXPECT(0xa977, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa975));
        EXPECT(0x44, gbc.readMem(0xa976));
        // 06 013A
        gbc.setState(0xa328, 0xd9a5, 0xed20, 0x86d1, 0xd0b2, 0xfdae, 0x0, 0x1);
        gbc.writeMem(0xa328, { 0x6, 0xa6 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd9a5, gbc.sp());
        EXPECT(0xa32a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa328));
        EXPECT(0xa6, gbc.readMem(0xa329));
        // 06 013B
        gbc.setState(0x5457, 0x31e5, 0xf720, 0xa584, 0xe655, 0x5ac7, 0x1, 0x1);
        gbc.writeMem(0x5457, { 0x6, 0x26 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x31e5, gbc.sp());
        EXPECT(0x5459, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 013C
        gbc.setState(0xdfdf, 0x540c, 0x2b70, 0xc032, 0xdcbe, 0xb226, 0x0, 0x1);
        gbc.writeMem(0xdfdf, { 0x6, 0xf2 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x540c, gbc.sp());
        EXPECT(0xdfe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xdfdf));
        EXPECT(0xf2, gbc.readMem(0xdfe0));
        // 06 013D
        gbc.setState(0x6b50, 0xcb6e, 0xd060, 0x1ded, 0x5212, 0xaa4a, 0x1, 0x0);
        gbc.writeMem(0x6b50, { 0x6, 0xb5 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xcb6e, gbc.sp());
        EXPECT(0x6b52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 013E
        gbc.setState(0x1449, 0x2de7, 0x5040, 0x27c1, 0xbdff, 0x35c6, 0x1, 0x0);
        gbc.writeMem(0x1449, { 0x6, 0x94 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x2de7, gbc.sp());
        EXPECT(0x144b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0140
        gbc.setState(0xeb84, 0xf40f, 0xa200, 0x46af, 0x4199, 0x2afd, 0x0, 0x0);
        gbc.writeMem(0xeb84, { 0x6, 0xe });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xf40f, gbc.sp());
        EXPECT(0xeb86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xeb84));
        EXPECT(0xe, gbc.readMem(0xeb85));
        // 06 0141
        gbc.setState(0xd335, 0x5b1d, 0xc180, 0x593d, 0xf4bf, 0xd4cc, 0x1, 0x0);
        gbc.writeMem(0xd335, { 0x6, 0x27 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x5b1d, gbc.sp());
        EXPECT(0xd337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd335));
        EXPECT(0x27, gbc.readMem(0xd336));
        // 06 0142
        gbc.setState(0xae8c, 0xb790, 0x2080, 0xb8b0, 0x8c65, 0xc170, 0x1, 0x0);
        gbc.writeMem(0xae8c, { 0x6, 0xaa });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xb790, gbc.sp());
        EXPECT(0xae8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xae8c));
        EXPECT(0xaa, gbc.readMem(0xae8d));
        // 06 0144
        gbc.setState(0x9556, 0x4587, 0x13e0, 0xbbf7, 0xa7c5, 0x3e3, 0x0, 0x1);
        gbc.writeMem(0x9556, { 0x6, 0x1f });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4587, gbc.sp());
        EXPECT(0x9558, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x9556));
        EXPECT(0x1f, gbc.readMem(0x9557));
        // 06 0146
        gbc.setState(0x9190, 0xa3b9, 0xa610, 0xb3af, 0xa55a, 0xca7a, 0x0, 0x1);
        gbc.writeMem(0x9190, { 0x6, 0x79 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xa3b9, gbc.sp());
        EXPECT(0x9192, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x9190));
        EXPECT(0x79, gbc.readMem(0x9191));
        // 06 0147
        gbc.setState(0xac80, 0xe100, 0x9cb0, 0xeb71, 0xeada, 0x3aff, 0x1, 0x1);
        gbc.writeMem(0xac80, { 0x6, 0x27 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xe100, gbc.sp());
        EXPECT(0xac82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xac80));
        EXPECT(0x27, gbc.readMem(0xac81));
        // 06 0148
        gbc.setState(0xa695, 0xf7b8, 0x7ef0, 0x8ee0, 0x500b, 0xdb03, 0x1, 0x0);
        gbc.writeMem(0xa695, { 0x6, 0xb4 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf7b8, gbc.sp());
        EXPECT(0xa697, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa695));
        EXPECT(0xb4, gbc.readMem(0xa696));
        // 06 0149
        gbc.setState(0x1d1b, 0xbca, 0x3410, 0xd03e, 0x1536, 0x2316, 0x1, 0x1);
        gbc.writeMem(0x1d1b, { 0x6, 0x44 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xbca, gbc.sp());
        EXPECT(0x1d1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 014A
        gbc.setState(0x182, 0x62e5, 0x4e90, 0xdd77, 0x3ae, 0x6b83, 0x0, 0x0);
        gbc.writeMem(0x182, { 0x6, 0xb4 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x62e5, gbc.sp());
        EXPECT(0x184, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 014B
        gbc.setState(0x30bc, 0x9d3a, 0xa1b0, 0xfd4d, 0xb85d, 0x724d, 0x0, 0x0);
        gbc.writeMem(0x30bc, { 0x6, 0xa });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x9d3a, gbc.sp());
        EXPECT(0x30be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 014C
        gbc.setState(0xe6de, 0x458, 0xe330, 0x147e, 0x8dd4, 0x8843, 0x0, 0x1);
        gbc.writeMem(0xe6de, { 0x6, 0xa7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x458, gbc.sp());
        EXPECT(0xe6e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xe6de));
        EXPECT(0xa7, gbc.readMem(0xe6df));
        // 06 014D
        gbc.setState(0x5a95, 0xaaf5, 0xd5b0, 0xeafe, 0x2a34, 0xca99, 0x1, 0x1);
        gbc.writeMem(0x5a95, { 0x6, 0xc7 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xaaf5, gbc.sp());
        EXPECT(0x5a97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 014E
        gbc.setState(0xd43, 0x6997, 0x6860, 0x2787, 0x912f, 0x4986, 0x1, 0x1);
        gbc.writeMem(0xd43, { 0x6, 0x32 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x6997, gbc.sp());
        EXPECT(0xd45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 014F
        gbc.setState(0x6a40, 0xfafa, 0xfaa0, 0x2fae, 0xbc06, 0x526b, 0x1, 0x0);
        gbc.writeMem(0x6a40, { 0x6, 0x89 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xfafa, gbc.sp());
        EXPECT(0x6a42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0150
        gbc.setState(0xdc63, 0x86b2, 0x7d20, 0x4e42, 0x6fc9, 0xc170, 0x0, 0x0);
        gbc.writeMem(0xdc63, { 0x6, 0xbe });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x86b2, gbc.sp());
        EXPECT(0xdc65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xdc63));
        EXPECT(0xbe, gbc.readMem(0xdc64));
        // 06 0151
        gbc.setState(0xe550, 0x152, 0xd780, 0x4fcb, 0x1918, 0x646f, 0x0, 0x0);
        gbc.writeMem(0xe550, { 0x6, 0x42 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x152, gbc.sp());
        EXPECT(0xe552, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xe550));
        EXPECT(0x42, gbc.readMem(0xe551));
        // 06 0152
        gbc.setState(0x3375, 0x8c93, 0x1ab0, 0xa0cd, 0xaa09, 0xfec3, 0x1, 0x0);
        gbc.writeMem(0x3375, { 0x6, 0xd });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8c93, gbc.sp());
        EXPECT(0x3377, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0154
        gbc.setState(0x5e7f, 0xd8e1, 0x9970, 0xfd72, 0x15a6, 0xf856, 0x0, 0x1);
        gbc.writeMem(0x5e7f, { 0x6, 0xa8 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd8e1, gbc.sp());
        EXPECT(0x5e81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0155
        gbc.setState(0x7dda, 0xb21e, 0x6db0, 0x9568, 0x32a7, 0xb8c3, 0x0, 0x1);
        gbc.writeMem(0x7dda, { 0x6, 0xbf });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xb21e, gbc.sp());
        EXPECT(0x7ddc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0157
        gbc.setState(0xc270, 0x40ab, 0x73d0, 0xef02, 0x152b, 0x4362, 0x1, 0x0);
        gbc.writeMem(0xc270, { 0x6, 0x15 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x40ab, gbc.sp());
        EXPECT(0xc272, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xc270));
        EXPECT(0x15, gbc.readMem(0xc271));
        // 06 0158
        gbc.setState(0x60e6, 0xd843, 0x90c0, 0x2572, 0xd1c2, 0xb0c1, 0x0, 0x0);
        gbc.writeMem(0x60e6, { 0x6, 0x6d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xd843, gbc.sp());
        EXPECT(0x60e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0159
        gbc.setState(0x8fd6, 0x97dc, 0xd7a0, 0x718d, 0xc243, 0x14ee, 0x1, 0x0);
        gbc.writeMem(0x8fd6, { 0x6, 0x41 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x97dc, gbc.sp());
        EXPECT(0x8fd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x8fd6));
        EXPECT(0x41, gbc.readMem(0x8fd7));
        // 06 015A
        gbc.setState(0x6923, 0xdb5c, 0x1d10, 0xaffd, 0x5ded, 0x97e, 0x1, 0x1);
        gbc.writeMem(0x6923, { 0x6, 0xf3 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xdb5c, gbc.sp());
        EXPECT(0x6925, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 015B
        gbc.setState(0xda64, 0x1429, 0x7fd0, 0x6ac7, 0x5abd, 0x8d9e, 0x1, 0x1);
        gbc.writeMem(0xda64, { 0x6, 0x9b });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x1429, gbc.sp());
        EXPECT(0xda66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xda64));
        EXPECT(0x9b, gbc.readMem(0xda65));
        // 06 015C
        gbc.setState(0x29e8, 0x6b56, 0xd400, 0x3433, 0xdc22, 0xa023, 0x0, 0x0);
        gbc.writeMem(0x29e8, { 0x6, 0x13 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x6b56, gbc.sp());
        EXPECT(0x29ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 015D
        gbc.setState(0xd670, 0x86c6, 0xb3c0, 0xde15, 0x1612, 0x3ce, 0x1, 0x1);
        gbc.writeMem(0xd670, { 0x6, 0xcd });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x86c6, gbc.sp());
        EXPECT(0xd672, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd670));
        EXPECT(0xcd, gbc.readMem(0xd671));
        // 06 015E
        gbc.setState(0x894e, 0xcaab, 0x2fd0, 0xa018, 0x3a6f, 0xfc1c, 0x0, 0x0);
        gbc.writeMem(0x894e, { 0x6, 0xd9 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xcaab, gbc.sp());
        EXPECT(0x8950, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x894e));
        EXPECT(0xd9, gbc.readMem(0x894f));
        // 06 015F
        gbc.setState(0x2f3, 0x524b, 0x730, 0x9f3d, 0x9a7c, 0x2cfb, 0x1, 0x1);
        gbc.writeMem(0x2f3, { 0x6, 0xdb });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x524b, gbc.sp());
        EXPECT(0x2f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0160
        gbc.setState(0x4252, 0x2a9, 0xc180, 0xf937, 0xfc98, 0x1803, 0x0, 0x0);
        gbc.writeMem(0x4252, { 0x6, 0x1a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2a9, gbc.sp());
        EXPECT(0x4254, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0161
        gbc.setState(0x70bc, 0xa4c2, 0x6760, 0xccb6, 0xf143, 0x5649, 0x1, 0x0);
        gbc.writeMem(0x70bc, { 0x6, 0x24 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xa4c2, gbc.sp());
        EXPECT(0x70be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0162
        gbc.setState(0xdcbd, 0x22ea, 0xb8f0, 0x26d6, 0x50b6, 0x82e6, 0x1, 0x0);
        gbc.writeMem(0xdcbd, { 0x6, 0xb6 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x22ea, gbc.sp());
        EXPECT(0xdcbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xdcbd));
        EXPECT(0xb6, gbc.readMem(0xdcbe));
        // 06 0164
        gbc.setState(0x2f, 0x9c86, 0x4e50, 0x4637, 0xb9c, 0x2650, 0x0, 0x0);
        gbc.writeMem(0x2f, { 0x6, 0x74 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x9c86, gbc.sp());
        EXPECT(0x31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0165
        gbc.setState(0x35e4, 0xd247, 0xea80, 0xdd9, 0x46b2, 0x7f0a, 0x0, 0x0);
        gbc.writeMem(0x35e4, { 0x6, 0xe4 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xd247, gbc.sp());
        EXPECT(0x35e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0166
        gbc.setState(0x5f21, 0x8cb1, 0xb3a0, 0x4db2, 0x7368, 0xe727, 0x1, 0x0);
        gbc.writeMem(0x5f21, { 0x6, 0xb1 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8cb1, gbc.sp());
        EXPECT(0x5f23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0167
        gbc.setState(0xacb9, 0xf8d3, 0x1090, 0xa159, 0xca57, 0x4ad1, 0x0, 0x0);
        gbc.writeMem(0xacb9, { 0x6, 0x78 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xf8d3, gbc.sp());
        EXPECT(0xacbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xacb9));
        EXPECT(0x78, gbc.readMem(0xacba));
        // 06 0168
        gbc.setState(0xdf56, 0xe5e4, 0x4b80, 0xf1fd, 0xa34c, 0xa95, 0x0, 0x0);
        gbc.writeMem(0xdf56, { 0x6, 0x82 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe5e4, gbc.sp());
        EXPECT(0xdf58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xdf56));
        EXPECT(0x82, gbc.readMem(0xdf57));
        // 06 0169
        gbc.setState(0xadd, 0xc37, 0x5750, 0xd371, 0x3604, 0x4995, 0x0, 0x0);
        gbc.writeMem(0xadd, { 0x6, 0x92 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xc37, gbc.sp());
        EXPECT(0xadf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 016A
        gbc.setState(0x3eec, 0x98d9, 0xe050, 0xdc71, 0xaf88, 0xbcd7, 0x1, 0x1);
        gbc.writeMem(0x3eec, { 0x6, 0x43 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x98d9, gbc.sp());
        EXPECT(0x3eee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 016B
        gbc.setState(0x2a03, 0xc4d4, 0xaef0, 0x22c, 0x1b83, 0x6167, 0x1, 0x1);
        gbc.writeMem(0x2a03, { 0x6, 0x11 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xc4d4, gbc.sp());
        EXPECT(0x2a05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 016C
        gbc.setState(0x8f76, 0x122c, 0x4bd0, 0x2749, 0x5e4e, 0xc740, 0x0, 0x1);
        gbc.writeMem(0x8f76, { 0x6, 0x24 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x122c, gbc.sp());
        EXPECT(0x8f78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x8f76));
        EXPECT(0x24, gbc.readMem(0x8f77));
        // 06 016D
        gbc.setState(0x6c61, 0x985, 0x61d0, 0x9bf7, 0xf055, 0x466e, 0x0, 0x0);
        gbc.writeMem(0x6c61, { 0x6, 0xcf });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x985, gbc.sp());
        EXPECT(0x6c63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 016E
        gbc.setState(0x8fb6, 0x9c04, 0x9a90, 0x7004, 0x7cfd, 0x3b9f, 0x1, 0x0);
        gbc.writeMem(0x8fb6, { 0x6, 0x2c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x9c04, gbc.sp());
        EXPECT(0x8fb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x8fb6));
        EXPECT(0x2c, gbc.readMem(0x8fb7));
        // 06 016F
        gbc.setState(0x77fe, 0xe2ae, 0x2f0, 0xe4e8, 0x92cb, 0xcb43, 0x1, 0x1);
        gbc.writeMem(0x77fe, { 0x6, 0x45 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe2ae, gbc.sp());
        EXPECT(0x7800, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0170
        gbc.setState(0xa858, 0x3ed, 0xb210, 0xe06b, 0xdf60, 0xd025, 0x1, 0x1);
        gbc.writeMem(0xa858, { 0x6, 0xf9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x3ed, gbc.sp());
        EXPECT(0xa85a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa858));
        EXPECT(0xf9, gbc.readMem(0xa859));
        // 06 0171
        gbc.setState(0xc4d1, 0x4f0e, 0x4de0, 0x8f03, 0xf023, 0xa761, 0x0, 0x1);
        gbc.writeMem(0xc4d1, { 0x6, 0x46 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x4f0e, gbc.sp());
        EXPECT(0xc4d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xc4d1));
        EXPECT(0x46, gbc.readMem(0xc4d2));
        // 06 0172
        gbc.setState(0x663b, 0xfcdd, 0xdf50, 0xff56, 0x84fd, 0x9cca, 0x0, 0x1);
        gbc.writeMem(0x663b, { 0x6, 0xb5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xfcdd, gbc.sp());
        EXPECT(0x663d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0173
        gbc.setState(0x5b, 0x114b, 0x1a60, 0xfd2f, 0x3e9b, 0x1b85, 0x1, 0x1);
        gbc.writeMem(0x5b, { 0x6, 0xfa });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x114b, gbc.sp());
        EXPECT(0x5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0174
        gbc.setState(0x23af, 0x1197, 0x88c0, 0x9b50, 0x7b20, 0xceaf, 0x0, 0x1);
        gbc.writeMem(0x23af, { 0x6, 0xea });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x1197, gbc.sp());
        EXPECT(0x23b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0175
        gbc.setState(0x29f4, 0x95b0, 0x1140, 0xe2e0, 0xfca8, 0xb345, 0x1, 0x0);
        gbc.writeMem(0x29f4, { 0x6, 0xee });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x95b0, gbc.sp());
        EXPECT(0x29f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0176
        gbc.setState(0xaf34, 0x6290, 0xd310, 0x3bca, 0xfd98, 0x674f, 0x0, 0x0);
        gbc.writeMem(0xaf34, { 0x6, 0x1 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x6290, gbc.sp());
        EXPECT(0xaf36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xaf34));
        EXPECT(0x1, gbc.readMem(0xaf35));
        // 06 0177
        gbc.setState(0x7341, 0x7cc2, 0xd180, 0xabb0, 0x748a, 0x1fb, 0x1, 0x0);
        gbc.writeMem(0x7341, { 0x6, 0x60 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x7cc2, gbc.sp());
        EXPECT(0x7343, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0178
        gbc.setState(0x9c3d, 0xe802, 0x3260, 0x5324, 0xd2fa, 0x4239, 0x1, 0x1);
        gbc.writeMem(0x9c3d, { 0x6, 0xd9 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xe802, gbc.sp());
        EXPECT(0x9c3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x9c3d));
        EXPECT(0xd9, gbc.readMem(0x9c3e));
        // 06 0179
        gbc.setState(0xa2a1, 0xa803, 0x1050, 0xeede, 0x6fd6, 0x9875, 0x0, 0x0);
        gbc.writeMem(0xa2a1, { 0x6, 0xd });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa803, gbc.sp());
        EXPECT(0xa2a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa2a1));
        EXPECT(0xd, gbc.readMem(0xa2a2));
        // 06 017A
        gbc.setState(0x5935, 0xd7e3, 0xfd40, 0xe759, 0xf41a, 0xcdfe, 0x1, 0x0);
        gbc.writeMem(0x5935, { 0x6, 0xd2 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xd7e3, gbc.sp());
        EXPECT(0x5937, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 017C
        gbc.setState(0xda85, 0xfa46, 0xd6e0, 0x4c0b, 0xda8, 0xcbf, 0x1, 0x1);
        gbc.writeMem(0xda85, { 0x6, 0x77 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xfa46, gbc.sp());
        EXPECT(0xda87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xda85));
        EXPECT(0x77, gbc.readMem(0xda86));
        // 06 017D
        gbc.setState(0x14d8, 0xec2a, 0xa500, 0x7f00, 0x5a4, 0xdf01, 0x0, 0x0);
        gbc.writeMem(0x14d8, { 0x6, 0xf7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xec2a, gbc.sp());
        EXPECT(0x14da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 017E
        gbc.setState(0xc4da, 0x74c2, 0x4870, 0x1d57, 0xb085, 0x85c0, 0x0, 0x0);
        gbc.writeMem(0xc4da, { 0x6, 0x1e });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x74c2, gbc.sp());
        EXPECT(0xc4dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xc4da));
        EXPECT(0x1e, gbc.readMem(0xc4db));
        // 06 017F
        gbc.setState(0xc344, 0x40b8, 0x3f40, 0x4d6e, 0xf9b1, 0x91b0, 0x1, 0x1);
        gbc.writeMem(0xc344, { 0x6, 0x99 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x40b8, gbc.sp());
        EXPECT(0xc346, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xc344));
        EXPECT(0x99, gbc.readMem(0xc345));
        // 06 0180
        gbc.setState(0xc601, 0x2842, 0xea10, 0x17f0, 0xfebb, 0x3167, 0x0, 0x0);
        gbc.writeMem(0xc601, { 0x6, 0xdb });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x2842, gbc.sp());
        EXPECT(0xc603, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xc601));
        EXPECT(0xdb, gbc.readMem(0xc602));
        // 06 0181
        gbc.setState(0xe932, 0xf14c, 0x7280, 0x5719, 0x1c6e, 0x912, 0x0, 0x0);
        gbc.writeMem(0xe932, { 0x6, 0xcd });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf14c, gbc.sp());
        EXPECT(0xe934, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xe932));
        EXPECT(0xcd, gbc.readMem(0xe933));
        // 06 0182
        gbc.setState(0x4de5, 0xb17, 0x7920, 0x22eb, 0xc502, 0x4533, 0x1, 0x1);
        gbc.writeMem(0x4de5, { 0x6, 0x72 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xb17, gbc.sp());
        EXPECT(0x4de7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0183
        gbc.setState(0x7bec, 0x700f, 0x7ab0, 0x60b5, 0x32ef, 0xb1c5, 0x0, 0x1);
        gbc.writeMem(0x7bec, { 0x6, 0xc5 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x700f, gbc.sp());
        EXPECT(0x7bee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0184
        gbc.setState(0xd1d5, 0xe153, 0xeeb0, 0xed26, 0xbbcc, 0xec6b, 0x1, 0x0);
        gbc.writeMem(0xd1d5, { 0x6, 0x3f });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xe153, gbc.sp());
        EXPECT(0xd1d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd1d5));
        EXPECT(0x3f, gbc.readMem(0xd1d6));
        // 06 0185
        gbc.setState(0x61ce, 0xecba, 0x33a0, 0x2bee, 0x41c7, 0x87e6, 0x1, 0x0);
        gbc.writeMem(0x61ce, { 0x6, 0x9 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xecba, gbc.sp());
        EXPECT(0x61d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0186
        gbc.setState(0x6997, 0x2c63, 0xb300, 0x9d91, 0x91d4, 0x4b3e, 0x1, 0x1);
        gbc.writeMem(0x6997, { 0x6, 0xf5 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2c63, gbc.sp());
        EXPECT(0x6999, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0187
        gbc.setState(0xcf9c, 0x15f3, 0x10d0, 0xff89, 0x35c3, 0xf625, 0x1, 0x1);
        gbc.writeMem(0xcf9c, { 0x6, 0x79 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x15f3, gbc.sp());
        EXPECT(0xcf9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xcf9c));
        EXPECT(0x79, gbc.readMem(0xcf9d));
        // 06 0188
        gbc.setState(0x9dad, 0xdf2e, 0x1050, 0xe193, 0x7816, 0x2743, 0x0, 0x0);
        gbc.writeMem(0x9dad, { 0x6, 0x7e });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xdf2e, gbc.sp());
        EXPECT(0x9daf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x9dad));
        EXPECT(0x7e, gbc.readMem(0x9dae));
        // 06 0189
        gbc.setState(0x2d59, 0x3b2d, 0xe450, 0x960c, 0xfee6, 0xc3b3, 0x1, 0x1);
        gbc.writeMem(0x2d59, { 0x6, 0x9c });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x3b2d, gbc.sp());
        EXPECT(0x2d5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 018A
        gbc.setState(0xa427, 0x8b4e, 0x5190, 0x465c, 0xf22b, 0xf724, 0x0, 0x1);
        gbc.writeMem(0xa427, { 0x6, 0x71 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8b4e, gbc.sp());
        EXPECT(0xa429, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa427));
        EXPECT(0x71, gbc.readMem(0xa428));
        // 06 018C
        gbc.setState(0xa099, 0xabad, 0xbc50, 0xf0f7, 0x35e8, 0xd1c2, 0x0, 0x1);
        gbc.writeMem(0xa099, { 0x6, 0xa5 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xabad, gbc.sp());
        EXPECT(0xa09b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa099));
        EXPECT(0xa5, gbc.readMem(0xa09a));
        // 06 018D
        gbc.setState(0xe81e, 0x4e9c, 0x89d0, 0xb62, 0x7ca, 0xe8ff, 0x1, 0x0);
        gbc.writeMem(0xe81e, { 0x6, 0x40 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x4e9c, gbc.sp());
        EXPECT(0xe820, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xe81e));
        EXPECT(0x40, gbc.readMem(0xe81f));
        // 06 018E
        gbc.setState(0xcd1a, 0xc4d1, 0x820, 0x3733, 0x1541, 0x2e33, 0x1, 0x0);
        gbc.writeMem(0xcd1a, { 0x6, 0x14 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc4d1, gbc.sp());
        EXPECT(0xcd1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xcd1a));
        EXPECT(0x14, gbc.readMem(0xcd1b));
        // 06 018F
        gbc.setState(0x940d, 0xef77, 0x3e0, 0x27b4, 0x5f8b, 0x5e06, 0x0, 0x1);
        gbc.writeMem(0x940d, { 0x6, 0xaf });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xef77, gbc.sp());
        EXPECT(0x940f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x940d));
        EXPECT(0xaf, gbc.readMem(0x940e));
        // 06 0190
        gbc.setState(0x8202, 0x1581, 0x9590, 0xf6f2, 0xf386, 0xf910, 0x0, 0x1);
        gbc.writeMem(0x8202, { 0x6, 0x16 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1581, gbc.sp());
        EXPECT(0x8204, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x8202));
        EXPECT(0x16, gbc.readMem(0x8203));
        // 06 0191
        gbc.setState(0xa57f, 0x7f2, 0x32b0, 0x12e7, 0x6e29, 0x50b9, 0x1, 0x0);
        gbc.writeMem(0xa57f, { 0x6, 0xc1 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x7f2, gbc.sp());
        EXPECT(0xa581, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa57f));
        EXPECT(0xc1, gbc.readMem(0xa580));
        // 06 0192
        gbc.setState(0x7c8, 0x6177, 0xfc30, 0xcfac, 0xec64, 0x1a52, 0x1, 0x0);
        gbc.writeMem(0x7c8, { 0x6, 0x57 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x6177, gbc.sp());
        EXPECT(0x7ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0193
        gbc.setState(0x4775, 0x8ef4, 0xb4a0, 0x1be, 0xd952, 0x5fff, 0x1, 0x1);
        gbc.writeMem(0x4775, { 0x6, 0xac });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x8ef4, gbc.sp());
        EXPECT(0x4777, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0194
        gbc.setState(0xa9a7, 0x4936, 0x3910, 0xeb59, 0x62f2, 0xab53, 0x0, 0x1);
        gbc.writeMem(0xa9a7, { 0x6, 0x50 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x4936, gbc.sp());
        EXPECT(0xa9a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa9a7));
        EXPECT(0x50, gbc.readMem(0xa9a8));
        // 06 0195
        gbc.setState(0xcd2, 0x6422, 0x7d20, 0x3c9f, 0x3109, 0xe009, 0x1, 0x1);
        gbc.writeMem(0xcd2, { 0x6, 0x6c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6422, gbc.sp());
        EXPECT(0xcd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0196
        gbc.setState(0x7d9c, 0x77f2, 0xcc10, 0x8875, 0x80c9, 0x5789, 0x1, 0x0);
        gbc.writeMem(0x7d9c, { 0x6, 0x24 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x77f2, gbc.sp());
        EXPECT(0x7d9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0197
        gbc.setState(0xc399, 0xeb50, 0x6a0, 0xd757, 0x3fc6, 0x11a8, 0x0, 0x1);
        gbc.writeMem(0xc399, { 0x6, 0x68 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xeb50, gbc.sp());
        EXPECT(0xc39b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xc399));
        EXPECT(0x68, gbc.readMem(0xc39a));
        // 06 0198
        gbc.setState(0xb36b, 0x3d98, 0x4d20, 0x93cc, 0xaa86, 0x9ef0, 0x1, 0x0);
        gbc.writeMem(0xb36b, { 0x6, 0x79 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x3d98, gbc.sp());
        EXPECT(0xb36d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xb36b));
        EXPECT(0x79, gbc.readMem(0xb36c));
        // 06 0199
        gbc.setState(0xd3b4, 0x913e, 0xbe30, 0xe7ec, 0x19a6, 0x560a, 0x1, 0x1);
        gbc.writeMem(0xd3b4, { 0x6, 0x27 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x913e, gbc.sp());
        EXPECT(0xd3b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd3b4));
        EXPECT(0x27, gbc.readMem(0xd3b5));
        // 06 019A
        gbc.setState(0x2ebb, 0x3a93, 0x1a00, 0x6a4d, 0xcf, 0x545, 0x0, 0x1);
        gbc.writeMem(0x2ebb, { 0x6, 0xb4 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x3a93, gbc.sp());
        EXPECT(0x2ebd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 019B
        gbc.setState(0xd8c3, 0x7d19, 0xea0, 0x6980, 0xcaed, 0xc228, 0x0, 0x0);
        gbc.writeMem(0xd8c3, { 0x6, 0xf });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x7d19, gbc.sp());
        EXPECT(0xd8c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd8c3));
        EXPECT(0xf, gbc.readMem(0xd8c4));
        // 06 019C
        gbc.setState(0xb0ad, 0x11dd, 0x1630, 0x2009, 0x7443, 0x9c76, 0x1, 0x1);
        gbc.writeMem(0xb0ad, { 0x6, 0x43 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x11dd, gbc.sp());
        EXPECT(0xb0af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xb0ad));
        EXPECT(0x43, gbc.readMem(0xb0ae));
        // 06 019D
        gbc.setState(0x2b3f, 0xdfc3, 0x9040, 0xad4d, 0x4748, 0xf13, 0x1, 0x1);
        gbc.writeMem(0x2b3f, { 0x6, 0x2c });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xdfc3, gbc.sp());
        EXPECT(0x2b41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 019E
        gbc.setState(0x9215, 0x8ffd, 0xd020, 0x928a, 0xa036, 0x74f2, 0x1, 0x0);
        gbc.writeMem(0x9215, { 0x6, 0x85 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x8ffd, gbc.sp());
        EXPECT(0x9217, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x9215));
        EXPECT(0x85, gbc.readMem(0x9216));
        // 06 019F
        gbc.setState(0xe342, 0xf97b, 0xb370, 0x6f4a, 0xb362, 0x8b65, 0x0, 0x0);
        gbc.writeMem(0xe342, { 0x6, 0xb4 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xf97b, gbc.sp());
        EXPECT(0xe344, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xe342));
        EXPECT(0xb4, gbc.readMem(0xe343));
        // 06 01A0
        gbc.setState(0xb82a, 0x6680, 0xa230, 0x7fd1, 0x51cc, 0xdef7, 0x1, 0x0);
        gbc.writeMem(0xb82a, { 0x6, 0xb0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6680, gbc.sp());
        EXPECT(0xb82c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xb82a));
        EXPECT(0xb0, gbc.readMem(0xb82b));
        // 06 01A1
        gbc.setState(0x77e6, 0x560, 0xef20, 0x43e5, 0xf1d5, 0x7208, 0x1, 0x1);
        gbc.writeMem(0x77e6, { 0x6, 0xd2 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x560, gbc.sp());
        EXPECT(0x77e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 01A3
        gbc.setState(0xc399, 0x22ea, 0x89c0, 0x4b3e, 0x3cae, 0x8911, 0x0, 0x1);
        gbc.writeMem(0xc399, { 0x6, 0x68 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x22ea, gbc.sp());
        EXPECT(0xc39b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xc399));
        EXPECT(0x68, gbc.readMem(0xc39a));
        // 06 01A4
        gbc.setState(0x4f24, 0x805e, 0xd30, 0xa7d1, 0x193c, 0xe55, 0x1, 0x0);
        gbc.writeMem(0x4f24, { 0x6, 0xea });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x805e, gbc.sp());
        EXPECT(0x4f26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 01A5
        gbc.setState(0xbdf8, 0xb445, 0x4830, 0xb983, 0x63bb, 0x1aba, 0x1, 0x1);
        gbc.writeMem(0xbdf8, { 0x6, 0xb });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb445, gbc.sp());
        EXPECT(0xbdfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xbdf8));
        EXPECT(0xb, gbc.readMem(0xbdf9));
        // 06 01A6
        gbc.setState(0x7e1d, 0xd361, 0xc6c0, 0x368a, 0xab, 0xeeb, 0x1, 0x1);
        gbc.writeMem(0x7e1d, { 0x6, 0x90 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xd361, gbc.sp());
        EXPECT(0x7e1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 01A7
        gbc.setState(0x2c9e, 0x8033, 0xabf0, 0x76c6, 0x737f, 0x4f8b, 0x1, 0x1);
        gbc.writeMem(0x2c9e, { 0x6, 0xf2 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x8033, gbc.sp());
        EXPECT(0x2ca0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 01A8
        gbc.setState(0xec92, 0x6642, 0x5ff0, 0xe538, 0x7b08, 0x6997, 0x0, 0x1);
        gbc.writeMem(0xec92, { 0x6, 0x3f });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x6642, gbc.sp());
        EXPECT(0xec94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xec92));
        EXPECT(0x3f, gbc.readMem(0xec93));
        // 06 01A9
        gbc.setState(0x3653, 0x44d5, 0x9f10, 0x9452, 0x5c8a, 0xef0c, 0x1, 0x1);
        gbc.writeMem(0x3653, { 0x6, 0xc6 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x44d5, gbc.sp());
        EXPECT(0x3655, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 01AA
        gbc.setState(0xb81a, 0xbfb2, 0x3a00, 0xe16, 0x6fa8, 0xe1bb, 0x1, 0x0);
        gbc.writeMem(0xb81a, { 0x6, 0xf0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xbfb2, gbc.sp());
        EXPECT(0xb81c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xb81a));
        EXPECT(0xf0, gbc.readMem(0xb81b));
        // 06 01AB
        gbc.setState(0x6ac9, 0x8730, 0x2480, 0x2d87, 0xd7e3, 0xc02e, 0x1, 0x0);
        gbc.writeMem(0x6ac9, { 0x6, 0x87 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x8730, gbc.sp());
        EXPECT(0x6acb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 01AC
        gbc.setState(0xebfa, 0x8782, 0xe230, 0x6869, 0xd2e6, 0x618c, 0x1, 0x1);
        gbc.writeMem(0xebfa, { 0x6, 0xd8 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8782, gbc.sp());
        EXPECT(0xebfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xebfa));
        EXPECT(0xd8, gbc.readMem(0xebfb));
        // 06 01AD
        gbc.setState(0x4668, 0xd897, 0x4380, 0x383, 0x4d05, 0xa396, 0x0, 0x0);
        gbc.writeMem(0x4668, { 0x6, 0x10 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xd897, gbc.sp());
        EXPECT(0x466a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 01AE
        gbc.setState(0xb41c, 0xaec, 0x51b0, 0x59ea, 0x523b, 0x4d19, 0x1, 0x0);
        gbc.writeMem(0xb41c, { 0x6, 0x63 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xaec, gbc.sp());
        EXPECT(0xb41e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xb41c));
        EXPECT(0x63, gbc.readMem(0xb41d));
        // 06 01AF
        gbc.setState(0x4b3, 0xfa8c, 0xa060, 0xb07a, 0x3c5d, 0xb5fa, 0x1, 0x1);
        gbc.writeMem(0x4b3, { 0x6, 0xc6 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xfa8c, gbc.sp());
        EXPECT(0x4b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 01B0
        gbc.setState(0xac6f, 0x27d9, 0x7600, 0x1aea, 0xe1ad, 0x4d72, 0x0, 0x0);
        gbc.writeMem(0xac6f, { 0x6, 0xbd });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x27d9, gbc.sp());
        EXPECT(0xac71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xac6f));
        EXPECT(0xbd, gbc.readMem(0xac70));
        // 06 01B1
        gbc.setState(0xd887, 0xa5af, 0xd180, 0xf1f3, 0xdf96, 0x2763, 0x0, 0x0);
        gbc.writeMem(0xd887, { 0x6, 0xdb });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xa5af, gbc.sp());
        EXPECT(0xd889, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd887));
        EXPECT(0xdb, gbc.readMem(0xd888));
        // 06 01B3
        gbc.setState(0x2229, 0x7075, 0x28b0, 0x81d1, 0x3b46, 0x4cbf, 0x1, 0x1);
        gbc.writeMem(0x2229, { 0x6, 0x52 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x7075, gbc.sp());
        EXPECT(0x222b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 01B4
        gbc.setState(0xf9c, 0xfbbe, 0x91f0, 0xf043, 0x93db, 0x8c01, 0x1, 0x0);
        gbc.writeMem(0xf9c, { 0x6, 0xb });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xfbbe, gbc.sp());
        EXPECT(0xf9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 01B5
        gbc.setState(0x6d4c, 0xc81b, 0x2e80, 0x6fd1, 0xff69, 0x5f56, 0x1, 0x1);
        gbc.writeMem(0x6d4c, { 0x6, 0x65 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xc81b, gbc.sp());
        EXPECT(0x6d4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 01B6
        gbc.setState(0xab5, 0x2a27, 0x5dc0, 0x372a, 0xcbb3, 0xff25, 0x0, 0x1);
        gbc.writeMem(0xab5, { 0x6, 0x7 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x2a27, gbc.sp());
        EXPECT(0xab7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 01B8
        gbc.setState(0x6cce, 0x9230, 0x910, 0x6e76, 0x5a2c, 0x461e, 0x0, 0x1);
        gbc.writeMem(0x6cce, { 0x6, 0xfb });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x9230, gbc.sp());
        EXPECT(0x6cd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 01B9
        gbc.setState(0xb75d, 0x7ead, 0xdac0, 0x1b72, 0x86d6, 0xd5ab, 0x0, 0x1);
        gbc.writeMem(0xb75d, { 0x6, 0xf1 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7ead, gbc.sp());
        EXPECT(0xb75f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xb75d));
        EXPECT(0xf1, gbc.readMem(0xb75e));
        // 06 01BA
        gbc.setState(0xd198, 0xec86, 0x5450, 0x694e, 0xe6d7, 0x2575, 0x0, 0x0);
        gbc.writeMem(0xd198, { 0x6, 0x84 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xec86, gbc.sp());
        EXPECT(0xd19a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd198));
        EXPECT(0x84, gbc.readMem(0xd199));
        // 06 01BB
        gbc.setState(0x7500, 0x905c, 0x1300, 0x9dc, 0xa005, 0x6166, 0x0, 0x0);
        gbc.writeMem(0x7500, { 0x6, 0xf9 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x905c, gbc.sp());
        EXPECT(0x7502, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 01BC
        gbc.setState(0xd148, 0xffe, 0xf880, 0xe8d4, 0xf014, 0x1644, 0x0, 0x1);
        gbc.writeMem(0xd148, { 0x6, 0xde });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xffe, gbc.sp());
        EXPECT(0xd14a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd148));
        EXPECT(0xde, gbc.readMem(0xd149));
        // 06 01BD
        gbc.setState(0xc7e3, 0x5710, 0x17a0, 0xef4a, 0x4fdc, 0xc39e, 0x1, 0x0);
        gbc.writeMem(0xc7e3, { 0x6, 0x3 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x5710, gbc.sp());
        EXPECT(0xc7e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xc7e3));
        EXPECT(0x3, gbc.readMem(0xc7e4));
        // 06 01BE
        gbc.setState(0x628, 0xe187, 0xc450, 0xb5b0, 0x2a50, 0x8832, 0x0, 0x0);
        gbc.writeMem(0x628, { 0x6, 0xdc });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xe187, gbc.sp());
        EXPECT(0x62a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 01BF
        gbc.setState(0xa2ff, 0x8751, 0xf570, 0x61c1, 0x710e, 0x81a0, 0x1, 0x1);
        gbc.writeMem(0xa2ff, { 0x6, 0xfe });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x8751, gbc.sp());
        EXPECT(0xa301, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa2ff));
        EXPECT(0xfe, gbc.readMem(0xa300));
        // 06 01C0
        gbc.setState(0xb3c3, 0xcb9b, 0xfb80, 0x31b3, 0xde37, 0x2969, 0x0, 0x0);
        gbc.writeMem(0xb3c3, { 0x6, 0x36 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xcb9b, gbc.sp());
        EXPECT(0xb3c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xb3c3));
        EXPECT(0x36, gbc.readMem(0xb3c4));
        // 06 01C1
        gbc.setState(0xe803, 0xaf0c, 0x6f50, 0x3f59, 0x524b, 0xfba6, 0x1, 0x0);
        gbc.writeMem(0xe803, { 0x6, 0xc3 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xaf0c, gbc.sp());
        EXPECT(0xe805, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xe803));
        EXPECT(0xc3, gbc.readMem(0xe804));
        // 06 01C2
        gbc.setState(0x8e1a, 0xefe9, 0x90f0, 0x1776, 0x720a, 0xf9a4, 0x0, 0x1);
        gbc.writeMem(0x8e1a, { 0x6, 0x23 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xefe9, gbc.sp());
        EXPECT(0x8e1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x8e1a));
        EXPECT(0x23, gbc.readMem(0x8e1b));
        // 06 01C3
        gbc.setState(0x3a30, 0xdfd3, 0xd070, 0xf563, 0xc4eb, 0x20a2, 0x0, 0x1);
        gbc.writeMem(0x3a30, { 0x6, 0x70 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xdfd3, gbc.sp());
        EXPECT(0x3a32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 01C4
        gbc.setState(0xd814, 0x699, 0x5280, 0xbd2c, 0x414f, 0xa9b, 0x0, 0x0);
        gbc.writeMem(0xd814, { 0x6, 0x82 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x699, gbc.sp());
        EXPECT(0xd816, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd814));
        EXPECT(0x82, gbc.readMem(0xd815));
        // 06 01C5
        gbc.setState(0x728b, 0xb637, 0xaa90, 0x7eda, 0x619e, 0x27b8, 0x0, 0x0);
        gbc.writeMem(0x728b, { 0x6, 0xf0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb637, gbc.sp());
        EXPECT(0x728d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 01C6
        gbc.setState(0x2027, 0x1923, 0x590, 0x1373, 0xd75, 0xd133, 0x1, 0x1);
        gbc.writeMem(0x2027, { 0x6, 0xd });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x1923, gbc.sp());
        EXPECT(0x2029, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 01C7
        gbc.setState(0x81b4, 0x525e, 0x7200, 0xffe5, 0xa559, 0x52cb, 0x1, 0x1);
        gbc.writeMem(0x81b4, { 0x6, 0xdf });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x525e, gbc.sp());
        EXPECT(0x81b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x81b4));
        EXPECT(0xdf, gbc.readMem(0x81b5));
        // 06 01C8
        gbc.setState(0x729c, 0xfec, 0x2e60, 0xf5cd, 0x9714, 0x86d9, 0x1, 0x1);
        gbc.writeMem(0x729c, { 0x6, 0x38 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xfec, gbc.sp());
        EXPECT(0x729e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 01C9
        gbc.setState(0xc15, 0x17a7, 0xf4c0, 0xcd70, 0x3276, 0xfcc7, 0x1, 0x0);
        gbc.writeMem(0xc15, { 0x6, 0x9a });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x17a7, gbc.sp());
        EXPECT(0xc17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 01CA
        gbc.setState(0x976d, 0x41b6, 0x5c90, 0xb70b, 0x2437, 0xdbe4, 0x1, 0x1);
        gbc.writeMem(0x976d, { 0x6, 0xb0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x41b6, gbc.sp());
        EXPECT(0x976f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x976d));
        EXPECT(0xb0, gbc.readMem(0x976e));
        // 06 01CB
        gbc.setState(0x2ae7, 0x69e7, 0x8a50, 0xb111, 0x3c08, 0x7524, 0x1, 0x1);
        gbc.writeMem(0x2ae7, { 0x6, 0x66 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x69e7, gbc.sp());
        EXPECT(0x2ae9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 01CC
        gbc.setState(0x59d7, 0x58d1, 0xf0c0, 0x414c, 0xce16, 0x628a, 0x1, 0x0);
        gbc.writeMem(0x59d7, { 0x6, 0xa });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x58d1, gbc.sp());
        EXPECT(0x59d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 01CE
        gbc.setState(0x800b, 0xd71d, 0x94e0, 0x2fd8, 0x8ff2, 0xc1e8, 0x0, 0x1);
        gbc.writeMem(0x800b, { 0x6, 0x4f });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xd71d, gbc.sp());
        EXPECT(0x800d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x800b));
        EXPECT(0x4f, gbc.readMem(0x800c));
        // 06 01CF
        gbc.setState(0xd40f, 0x8b3a, 0x86f0, 0xff10, 0xe3fa, 0xde09, 0x1, 0x0);
        gbc.writeMem(0xd40f, { 0x6, 0x28 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8b3a, gbc.sp());
        EXPECT(0xd411, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd40f));
        EXPECT(0x28, gbc.readMem(0xd410));
        // 06 01D0
        gbc.setState(0x588e, 0xbc01, 0x590, 0x240c, 0xf9d, 0x7741, 0x1, 0x0);
        gbc.writeMem(0x588e, { 0x6, 0xa7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xbc01, gbc.sp());
        EXPECT(0x5890, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 01D1
        gbc.setState(0xe8e9, 0x66ce, 0x58e0, 0xc7ec, 0x92af, 0x69fd, 0x0, 0x0);
        gbc.writeMem(0xe8e9, { 0x6, 0x2f });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x66ce, gbc.sp());
        EXPECT(0xe8eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xe8e9));
        EXPECT(0x2f, gbc.readMem(0xe8ea));
        // 06 01D2
        gbc.setState(0xe21b, 0x582b, 0x82f0, 0x8fee, 0x9f64, 0xabbc, 0x0, 0x1);
        gbc.writeMem(0xe21b, { 0x6, 0x32 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x582b, gbc.sp());
        EXPECT(0xe21d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xe21b));
        EXPECT(0x32, gbc.readMem(0xe21c));
        // 06 01D3
        gbc.setState(0x916e, 0x67e, 0xdf10, 0x7a6b, 0x5794, 0x67b, 0x1, 0x0);
        gbc.writeMem(0x916e, { 0x6, 0x5d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x67e, gbc.sp());
        EXPECT(0x9170, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x916e));
        EXPECT(0x5d, gbc.readMem(0x916f));
        // 06 01D4
        gbc.setState(0xed37, 0x850c, 0x55f0, 0xf116, 0x2401, 0x272b, 0x0, 0x1);
        gbc.writeMem(0xed37, { 0x6, 0x36 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x850c, gbc.sp());
        EXPECT(0xed39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xed37));
        EXPECT(0x36, gbc.readMem(0xed38));
        // 06 01D5
        gbc.setState(0x39cc, 0x5a19, 0x8f70, 0x376b, 0xed2b, 0x59a2, 0x1, 0x1);
        gbc.writeMem(0x39cc, { 0x6, 0x30 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5a19, gbc.sp());
        EXPECT(0x39ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 01D6
        gbc.setState(0x8df2, 0x86f7, 0x49c0, 0x36b6, 0x8ba5, 0x4595, 0x0, 0x1);
        gbc.writeMem(0x8df2, { 0x6, 0xca });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x86f7, gbc.sp());
        EXPECT(0x8df4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x8df2));
        EXPECT(0xca, gbc.readMem(0x8df3));
        // 06 01D7
        gbc.setState(0x5696, 0x28ac, 0xc390, 0x656b, 0xa237, 0xafaf, 0x0, 0x1);
        gbc.writeMem(0x5696, { 0x6, 0xbf });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x28ac, gbc.sp());
        EXPECT(0x5698, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 01D8
        gbc.setState(0x14, 0xe3dc, 0xf6c0, 0x4f99, 0x333e, 0x2dea, 0x1, 0x1);
        gbc.writeMem(0x14, { 0x6, 0x33 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xe3dc, gbc.sp());
        EXPECT(0x16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 01D9
        gbc.setState(0x3919, 0x98a3, 0x9290, 0x9986, 0x87ce, 0xa585, 0x1, 0x0);
        gbc.writeMem(0x3919, { 0x6, 0xb4 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x98a3, gbc.sp());
        EXPECT(0x391b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 01DA
        gbc.setState(0x2f1a, 0xe52f, 0x68c0, 0x3f15, 0x90ca, 0x6e3b, 0x1, 0x0);
        gbc.writeMem(0x2f1a, { 0x6, 0x96 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xe52f, gbc.sp());
        EXPECT(0x2f1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 01DC
        gbc.setState(0x2f8a, 0xa961, 0x7ff0, 0xd765, 0x93a5, 0xf4f4, 0x1, 0x1);
        gbc.writeMem(0x2f8a, { 0x6, 0x62 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xa961, gbc.sp());
        EXPECT(0x2f8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 01DD
        gbc.setState(0xb2d2, 0xa9d0, 0xa240, 0x5f2, 0x2ae8, 0xd14b, 0x0, 0x0);
        gbc.writeMem(0xb2d2, { 0x6, 0x4a });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xa9d0, gbc.sp());
        EXPECT(0xb2d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xb2d2));
        EXPECT(0x4a, gbc.readMem(0xb2d3));
        // 06 01DE
        gbc.setState(0xc927, 0xbfb, 0x33c0, 0x9da7, 0xaec7, 0xef06, 0x0, 0x0);
        gbc.writeMem(0xc927, { 0x6, 0x9f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xbfb, gbc.sp());
        EXPECT(0xc929, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xc927));
        EXPECT(0x9f, gbc.readMem(0xc928));
        // 06 01DF
        gbc.setState(0x971a, 0xbb6a, 0x1470, 0xc94e, 0x5633, 0xe1e7, 0x1, 0x1);
        gbc.writeMem(0x971a, { 0x6, 0x1a });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xbb6a, gbc.sp());
        EXPECT(0x971c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x971a));
        EXPECT(0x1a, gbc.readMem(0x971b));
        // 06 01E0
        gbc.setState(0x486, 0x214f, 0xf9d0, 0xd0df, 0x95c, 0x70d5, 0x0, 0x0);
        gbc.writeMem(0x486, { 0x6, 0xec });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x214f, gbc.sp());
        EXPECT(0x488, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 01E1
        gbc.setState(0xc02e, 0x9886, 0xda30, 0xce17, 0xeb65, 0xf096, 0x1, 0x1);
        gbc.writeMem(0xc02e, { 0x6, 0x4b });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x9886, gbc.sp());
        EXPECT(0xc030, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xc02e));
        EXPECT(0x4b, gbc.readMem(0xc02f));
        // 06 01E2
        gbc.setState(0xbb98, 0xe0, 0xa8d0, 0x4bd7, 0x244a, 0x227e, 0x0, 0x1);
        gbc.writeMem(0xbb98, { 0x6, 0x12 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xe0, gbc.sp());
        EXPECT(0xbb9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xbb98));
        EXPECT(0x12, gbc.readMem(0xbb99));
        // 06 01E3
        gbc.setState(0xd08d, 0x4b4f, 0x2630, 0x6cb3, 0x47e9, 0x643, 0x0, 0x1);
        gbc.writeMem(0xd08d, { 0x6, 0xc5 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x4b4f, gbc.sp());
        EXPECT(0xd08f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd08d));
        EXPECT(0xc5, gbc.readMem(0xd08e));
        // 06 01E4
        gbc.setState(0x1fae, 0x54d, 0xa9d0, 0x91d2, 0x897a, 0x5fd, 0x1, 0x0);
        gbc.writeMem(0x1fae, { 0x6, 0xb });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x54d, gbc.sp());
        EXPECT(0x1fb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 01E5
        gbc.setState(0x91fc, 0xaa45, 0x3af0, 0x8725, 0x8c77, 0x9eaf, 0x0, 0x1);
        gbc.writeMem(0x91fc, { 0x6, 0x9f });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xaa45, gbc.sp());
        EXPECT(0x91fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x91fc));
        EXPECT(0x9f, gbc.readMem(0x91fd));
        // 06 01E6
        gbc.setState(0x4a72, 0x2ac7, 0x49a0, 0xa3f8, 0x684c, 0xf2c6, 0x0, 0x1);
        gbc.writeMem(0x4a72, { 0x6, 0x17 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x2ac7, gbc.sp());
        EXPECT(0x4a74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 01E7
        gbc.setState(0xcf11, 0xcdbb, 0x2420, 0x4590, 0x5a56, 0x1ad6, 0x1, 0x1);
        gbc.writeMem(0xcf11, { 0x6, 0xc0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xcdbb, gbc.sp());
        EXPECT(0xcf13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xcf11));
        EXPECT(0xc0, gbc.readMem(0xcf12));
        // 06 01E8
        gbc.setState(0x44c1, 0x4dae, 0x23f0, 0xeee, 0x22b9, 0xb6dd, 0x0, 0x1);
        gbc.writeMem(0x44c1, { 0x6, 0x8d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x4dae, gbc.sp());
        EXPECT(0x44c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 01E9
        gbc.setState(0x76ef, 0xed96, 0x330, 0x7b7b, 0x359a, 0x30e, 0x1, 0x0);
        gbc.writeMem(0x76ef, { 0x6, 0x4b });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xed96, gbc.sp());
        EXPECT(0x76f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 01EA
        gbc.setState(0xc7, 0x6d1a, 0x6ef0, 0xa615, 0x704e, 0x27e2, 0x1, 0x0);
        gbc.writeMem(0xc7, { 0x6, 0x2 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x6d1a, gbc.sp());
        EXPECT(0xc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 01EB
        gbc.setState(0xbcbe, 0xf6dc, 0x3680, 0xe395, 0x6a0b, 0x9ccd, 0x0, 0x0);
        gbc.writeMem(0xbcbe, { 0x6, 0x58 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xf6dc, gbc.sp());
        EXPECT(0xbcc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xbcbe));
        EXPECT(0x58, gbc.readMem(0xbcbf));
        // 06 01EC
        gbc.setState(0xe31, 0x3ee2, 0x9a60, 0x2f65, 0xed65, 0x1e37, 0x1, 0x0);
        gbc.writeMem(0xe31, { 0x6, 0xe });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x3ee2, gbc.sp());
        EXPECT(0xe33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 01ED
        gbc.setState(0x8f72, 0xa81e, 0x8950, 0x9623, 0xcc0d, 0x6902, 0x0, 0x0);
        gbc.writeMem(0x8f72, { 0x6, 0xdd });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xa81e, gbc.sp());
        EXPECT(0x8f74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x8f72));
        EXPECT(0xdd, gbc.readMem(0x8f73));
        // 06 01EE
        gbc.setState(0x5e15, 0x8eca, 0x6c70, 0xb7c9, 0x566, 0xe9c8, 0x0, 0x1);
        gbc.writeMem(0x5e15, { 0x6, 0xa8 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x8eca, gbc.sp());
        EXPECT(0x5e17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 01EF
        gbc.setState(0xe19a, 0x417e, 0x1180, 0x6376, 0xe13b, 0xb445, 0x0, 0x1);
        gbc.writeMem(0xe19a, { 0x6, 0xe0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x417e, gbc.sp());
        EXPECT(0xe19c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xe19a));
        EXPECT(0xe0, gbc.readMem(0xe19b));
        // 06 01F0
        gbc.setState(0xafb5, 0xe7f8, 0xef40, 0xd47c, 0x1623, 0xa29, 0x0, 0x1);
        gbc.writeMem(0xafb5, { 0x6, 0x6d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xe7f8, gbc.sp());
        EXPECT(0xafb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xafb5));
        EXPECT(0x6d, gbc.readMem(0xafb6));
        // 06 01F1
        gbc.setState(0x20c9, 0xa2ec, 0x2ac0, 0xbed1, 0x9e29, 0xf9cb, 0x1, 0x1);
        gbc.writeMem(0x20c9, { 0x6, 0x6 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xa2ec, gbc.sp());
        EXPECT(0x20cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 01F2
        gbc.setState(0x5f4d, 0xf44e, 0x5f0, 0x3cc1, 0x7c7c, 0x780b, 0x1, 0x0);
        gbc.writeMem(0x5f4d, { 0x6, 0xc });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf44e, gbc.sp());
        EXPECT(0x5f4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 01F3
        gbc.setState(0x3f2c, 0x245b, 0x6370, 0x6142, 0x4f07, 0x40df, 0x0, 0x0);
        gbc.writeMem(0x3f2c, { 0x6, 0x32 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x245b, gbc.sp());
        EXPECT(0x3f2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 01F4
        gbc.setState(0xbdda, 0x38a, 0xaeb0, 0xf9fe, 0x4bc1, 0xefa9, 0x1, 0x0);
        gbc.writeMem(0xbdda, { 0x6, 0x5a });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x38a, gbc.sp());
        EXPECT(0xbddc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xbdda));
        EXPECT(0x5a, gbc.readMem(0xbddb));
        // 06 01F5
        gbc.setState(0xa264, 0x80fd, 0x7ad0, 0x28f6, 0xd422, 0xce19, 0x1, 0x1);
        gbc.writeMem(0xa264, { 0x6, 0xb5 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x80fd, gbc.sp());
        EXPECT(0xa266, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa264));
        EXPECT(0xb5, gbc.readMem(0xa265));
        // 06 01F6
        gbc.setState(0x1b18, 0xd352, 0x7660, 0x8b64, 0xaaf9, 0x1a89, 0x1, 0x0);
        gbc.writeMem(0x1b18, { 0x6, 0x1a });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xd352, gbc.sp());
        EXPECT(0x1b1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 01F7
        gbc.setState(0xd3ab, 0x364e, 0x3240, 0x8e9a, 0x7f94, 0x2160, 0x1, 0x0);
        gbc.writeMem(0xd3ab, { 0x6, 0xed });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x364e, gbc.sp());
        EXPECT(0xd3ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd3ab));
        EXPECT(0xed, gbc.readMem(0xd3ac));
        // 06 01F8
        gbc.setState(0xe163, 0x6147, 0x2ec0, 0x2bab, 0xd1dd, 0xd003, 0x0, 0x1);
        gbc.writeMem(0xe163, { 0x6, 0xed });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x6147, gbc.sp());
        EXPECT(0xe165, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xe163));
        EXPECT(0xed, gbc.readMem(0xe164));
        // 06 01F9
        gbc.setState(0xb19e, 0x1b85, 0xb460, 0xc663, 0x61fa, 0x86c7, 0x1, 0x1);
        gbc.writeMem(0xb19e, { 0x6, 0xb1 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x1b85, gbc.sp());
        EXPECT(0xb1a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xb19e));
        EXPECT(0xb1, gbc.readMem(0xb19f));
        // 06 01FA
        gbc.setState(0xd9ed, 0xfa51, 0x4cc0, 0x6998, 0xadf6, 0x671e, 0x1, 0x1);
        gbc.writeMem(0xd9ed, { 0x6, 0x4 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xfa51, gbc.sp());
        EXPECT(0xd9ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd9ed));
        EXPECT(0x4, gbc.readMem(0xd9ee));
        // 06 01FB
        gbc.setState(0x4244, 0x87e, 0x34b0, 0xee33, 0x88af, 0xf7f3, 0x0, 0x1);
        gbc.writeMem(0x4244, { 0x6, 0x87 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x87e, gbc.sp());
        EXPECT(0x4246, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 01FC
        gbc.setState(0xec37, 0x8b24, 0x35b0, 0x947f, 0xf375, 0x697a, 0x1, 0x0);
        gbc.writeMem(0xec37, { 0x6, 0x24 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x8b24, gbc.sp());
        EXPECT(0xec39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xec37));
        EXPECT(0x24, gbc.readMem(0xec38));
        // 06 01FD
        gbc.setState(0x163b, 0xb204, 0x5470, 0x17f8, 0xd2b2, 0x8a9c, 0x1, 0x1);
        gbc.writeMem(0x163b, { 0x6, 0x72 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xb204, gbc.sp());
        EXPECT(0x163d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 01FE
        gbc.setState(0x1576, 0xedd6, 0x83a0, 0x1369, 0xb8b1, 0x4f86, 0x0, 0x0);
        gbc.writeMem(0x1576, { 0x6, 0xde });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xedd6, gbc.sp());
        EXPECT(0x1578, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 01FF
        gbc.setState(0x7763, 0x46f4, 0x8150, 0x50b2, 0x8425, 0xdf68, 0x1, 0x0);
        gbc.writeMem(0x7763, { 0x6, 0xa4 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x46f4, gbc.sp());
        EXPECT(0x7765, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0200
        gbc.setState(0xce78, 0xe218, 0xc6c0, 0x9842, 0x3f99, 0x668b, 0x1, 0x0);
        gbc.writeMem(0xce78, { 0x6, 0x2 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xe218, gbc.sp());
        EXPECT(0xce7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xce78));
        EXPECT(0x2, gbc.readMem(0xce79));
        // 06 0201
        gbc.setState(0x8ff4, 0xa04d, 0x3ec0, 0x9e7f, 0x41a7, 0x55bc, 0x0, 0x0);
        gbc.writeMem(0x8ff4, { 0x6, 0xa9 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa04d, gbc.sp());
        EXPECT(0x8ff6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x8ff4));
        EXPECT(0xa9, gbc.readMem(0x8ff5));
        // 06 0202
        gbc.setState(0x5b4, 0xc5fe, 0x89f0, 0x4fbc, 0xe31d, 0x38d6, 0x1, 0x1);
        gbc.writeMem(0x5b4, { 0x6, 0xae });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xc5fe, gbc.sp());
        EXPECT(0x5b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0203
        gbc.setState(0xc07d, 0xeeb, 0xbf80, 0xd285, 0xbf62, 0x120b, 0x1, 0x0);
        gbc.writeMem(0xc07d, { 0x6, 0x8 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xeeb, gbc.sp());
        EXPECT(0xc07f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xc07d));
        EXPECT(0x8, gbc.readMem(0xc07e));
        // 06 0204
        gbc.setState(0x945, 0x1ee4, 0x9cd0, 0x5501, 0x8730, 0x2d9a, 0x0, 0x1);
        gbc.writeMem(0x945, { 0x6, 0xec });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x1ee4, gbc.sp());
        EXPECT(0x947, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0205
        gbc.setState(0x451a, 0x6106, 0xc800, 0xcd74, 0x8ed5, 0x1199, 0x0, 0x1);
        gbc.writeMem(0x451a, { 0x6, 0xd2 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x6106, gbc.sp());
        EXPECT(0x451c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0206
        gbc.setState(0xb943, 0xa1c3, 0x30d0, 0x348d, 0xe5d9, 0x7c80, 0x0, 0x1);
        gbc.writeMem(0xb943, { 0x6, 0xd1 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xa1c3, gbc.sp());
        EXPECT(0xb945, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xb943));
        EXPECT(0xd1, gbc.readMem(0xb944));
        // 06 0207
        gbc.setState(0x930a, 0x65ec, 0x7b00, 0x81ed, 0xb229, 0x41c4, 0x0, 0x1);
        gbc.writeMem(0x930a, { 0x6, 0x7e });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x65ec, gbc.sp());
        EXPECT(0x930c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x930a));
        EXPECT(0x7e, gbc.readMem(0x930b));
        // 06 0208
        gbc.setState(0xa4a9, 0xf44e, 0x4e60, 0x222, 0x148d, 0x3ce4, 0x1, 0x1);
        gbc.writeMem(0xa4a9, { 0x6, 0xa5 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xf44e, gbc.sp());
        EXPECT(0xa4ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa4a9));
        EXPECT(0xa5, gbc.readMem(0xa4aa));
        // 06 0209
        gbc.setState(0x819b, 0xdd8d, 0x8290, 0x7560, 0x2ed6, 0x54d, 0x1, 0x0);
        gbc.writeMem(0x819b, { 0x6, 0x90 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xdd8d, gbc.sp());
        EXPECT(0x819d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x819b));
        EXPECT(0x90, gbc.readMem(0x819c));
        // 06 020A
        gbc.setState(0x59de, 0xc937, 0xb2f0, 0xa6d6, 0x283f, 0xc152, 0x1, 0x0);
        gbc.writeMem(0x59de, { 0x6, 0xb3 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc937, gbc.sp());
        EXPECT(0x59e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 020B
        gbc.setState(0xc6d7, 0x2d4a, 0x48b0, 0x4bb9, 0xe77c, 0xe296, 0x0, 0x0);
        gbc.writeMem(0xc6d7, { 0x6, 0xb5 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2d4a, gbc.sp());
        EXPECT(0xc6d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xc6d7));
        EXPECT(0xb5, gbc.readMem(0xc6d8));
        // 06 020C
        gbc.setState(0x6191, 0x611, 0x1a80, 0x4d31, 0x98b8, 0x74c, 0x0, 0x0);
        gbc.writeMem(0x6191, { 0x6, 0x8a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x611, gbc.sp());
        EXPECT(0x6193, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 020D
        gbc.setState(0x2bb2, 0x2ae3, 0x940, 0x3952, 0xc4f8, 0xb0ae, 0x0, 0x0);
        gbc.writeMem(0x2bb2, { 0x6, 0x43 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x2ae3, gbc.sp());
        EXPECT(0x2bb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 020E
        gbc.setState(0x8f83, 0x14d6, 0xfa80, 0xc444, 0xee8b, 0x9d39, 0x0, 0x0);
        gbc.writeMem(0x8f83, { 0x6, 0x46 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x14d6, gbc.sp());
        EXPECT(0x8f85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x8f83));
        EXPECT(0x46, gbc.readMem(0x8f84));
        // 06 020F
        gbc.setState(0x29, 0x5d8e, 0x1b90, 0x4e98, 0x166c, 0x70e9, 0x0, 0x1);
        gbc.writeMem(0x29, { 0x6, 0xf9 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x5d8e, gbc.sp());
        EXPECT(0x2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0211
        gbc.setState(0x3c6e, 0x1976, 0x20a0, 0x28c5, 0x6710, 0xf3a7, 0x1, 0x1);
        gbc.writeMem(0x3c6e, { 0x6, 0x82 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x1976, gbc.sp());
        EXPECT(0x3c70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0212
        gbc.setState(0x855b, 0x5b29, 0x3830, 0xbf3f, 0xbdb4, 0xa62b, 0x1, 0x1);
        gbc.writeMem(0x855b, { 0x6, 0x38 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x5b29, gbc.sp());
        EXPECT(0x855d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x855b));
        EXPECT(0x38, gbc.readMem(0x855c));
        // 06 0213
        gbc.setState(0x777, 0x24be, 0xa6e0, 0xae51, 0xe910, 0x6375, 0x0, 0x0);
        gbc.writeMem(0x777, { 0x6, 0xbf });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x24be, gbc.sp());
        EXPECT(0x779, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0214
        gbc.setState(0x93d8, 0xf133, 0x5210, 0x7b8b, 0x1f2, 0x5bff, 0x1, 0x0);
        gbc.writeMem(0x93d8, { 0x6, 0x8 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xf133, gbc.sp());
        EXPECT(0x93da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x93d8));
        EXPECT(0x8, gbc.readMem(0x93d9));
        // 06 0215
        gbc.setState(0x7ec7, 0xe1cf, 0xc050, 0x6f5f, 0x58a7, 0x2ed6, 0x1, 0x0);
        gbc.writeMem(0x7ec7, { 0x6, 0x2a });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xe1cf, gbc.sp());
        EXPECT(0x7ec9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0216
        gbc.setState(0xb81a, 0xe93f, 0xd6e0, 0x31fc, 0x6b1b, 0x79fd, 0x0, 0x0);
        gbc.writeMem(0xb81a, { 0x6, 0xf0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xe93f, gbc.sp());
        EXPECT(0xb81c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xb81a));
        EXPECT(0xf0, gbc.readMem(0xb81b));
        // 06 0217
        gbc.setState(0x1e7a, 0x3c, 0x9810, 0x2a3, 0x3959, 0x8e66, 0x1, 0x0);
        gbc.writeMem(0x1e7a, { 0x6, 0xe8 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x3c, gbc.sp());
        EXPECT(0x1e7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0218
        gbc.setState(0x1de7, 0xe3, 0x7850, 0xb548, 0xb90e, 0x2cb1, 0x0, 0x0);
        gbc.writeMem(0x1de7, { 0x6, 0x58 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xe3, gbc.sp());
        EXPECT(0x1de9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0219
        gbc.setState(0xb9bd, 0x6ee1, 0x8aa0, 0x7008, 0x6392, 0x6800, 0x0, 0x0);
        gbc.writeMem(0xb9bd, { 0x6, 0xf9 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x6ee1, gbc.sp());
        EXPECT(0xb9bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xb9bd));
        EXPECT(0xf9, gbc.readMem(0xb9be));
        // 06 021A
        gbc.setState(0xe7ac, 0x24b9, 0x1050, 0xd973, 0xc2a4, 0xb722, 0x0, 0x1);
        gbc.writeMem(0xe7ac, { 0x6, 0x6f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x24b9, gbc.sp());
        EXPECT(0xe7ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xe7ac));
        EXPECT(0x6f, gbc.readMem(0xe7ad));
        // 06 021B
        gbc.setState(0xc7d3, 0x7c34, 0xbfe0, 0x395c, 0x72b6, 0x11ed, 0x0, 0x1);
        gbc.writeMem(0xc7d3, { 0x6, 0xd1 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7c34, gbc.sp());
        EXPECT(0xc7d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xc7d3));
        EXPECT(0xd1, gbc.readMem(0xc7d4));
        // 06 021C
        gbc.setState(0x4ae8, 0xd938, 0x9620, 0x78f1, 0x3a9b, 0x16e9, 0x1, 0x0);
        gbc.writeMem(0x4ae8, { 0x6, 0x9a });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xd938, gbc.sp());
        EXPECT(0x4aea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 021E
        gbc.setState(0x27da, 0xb94c, 0x5a70, 0x5cfb, 0x5b08, 0x6c42, 0x1, 0x0);
        gbc.writeMem(0x27da, { 0x6, 0x97 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xb94c, gbc.sp());
        EXPECT(0x27dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 021F
        gbc.setState(0xb4de, 0x985c, 0x6e60, 0x5206, 0x7f5, 0x9380, 0x0, 0x0);
        gbc.writeMem(0xb4de, { 0x6, 0xa2 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x985c, gbc.sp());
        EXPECT(0xb4e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xb4de));
        EXPECT(0xa2, gbc.readMem(0xb4df));
        // 06 0220
        gbc.setState(0xe789, 0xedc, 0x7c50, 0x8ca1, 0x5e75, 0x17b1, 0x1, 0x1);
        gbc.writeMem(0xe789, { 0x6, 0x34 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xedc, gbc.sp());
        EXPECT(0xe78b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xe789));
        EXPECT(0x34, gbc.readMem(0xe78a));
        // 06 0221
        gbc.setState(0xa895, 0x87c3, 0x2760, 0xe571, 0xa3ba, 0x7cbc, 0x0, 0x0);
        gbc.writeMem(0xa895, { 0x6, 0xb });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x87c3, gbc.sp());
        EXPECT(0xa897, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa895));
        EXPECT(0xb, gbc.readMem(0xa896));
        // 06 0222
        gbc.setState(0xcbeb, 0xc29b, 0xb400, 0x79e7, 0x7d86, 0xbd8a, 0x1, 0x1);
        gbc.writeMem(0xcbeb, { 0x6, 0x54 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xc29b, gbc.sp());
        EXPECT(0xcbed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xcbeb));
        EXPECT(0x54, gbc.readMem(0xcbec));
        // 06 0223
        gbc.setState(0x789c, 0x49ed, 0x7310, 0xb87e, 0xcc1f, 0xa97f, 0x0, 0x1);
        gbc.writeMem(0x789c, { 0x6, 0xb0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x49ed, gbc.sp());
        EXPECT(0x789e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0224
        gbc.setState(0x9a0c, 0x316a, 0x5690, 0x21a9, 0x282c, 0xff0d, 0x0, 0x0);
        gbc.writeMem(0x9a0c, { 0x6, 0x6 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x316a, gbc.sp());
        EXPECT(0x9a0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x9a0c));
        EXPECT(0x6, gbc.readMem(0x9a0d));
        // 06 0226
        gbc.setState(0x43f, 0x792d, 0xa5e0, 0x77cf, 0x1510, 0x62c2, 0x1, 0x1);
        gbc.writeMem(0x43f, { 0x6, 0x58 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x792d, gbc.sp());
        EXPECT(0x441, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0227
        gbc.setState(0x1d0c, 0xf5b3, 0x2f60, 0x333e, 0x4d8, 0xe6ed, 0x1, 0x0);
        gbc.writeMem(0x1d0c, { 0x6, 0xc3 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xf5b3, gbc.sp());
        EXPECT(0x1d0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0228
        gbc.setState(0xc076, 0x48ee, 0x8400, 0x21f7, 0x4768, 0x8fdb, 0x1, 0x1);
        gbc.writeMem(0xc076, { 0x6, 0xcd });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x48ee, gbc.sp());
        EXPECT(0xc078, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xc076));
        EXPECT(0xcd, gbc.readMem(0xc077));
        // 06 0229
        gbc.setState(0x6d08, 0x78f6, 0x4c00, 0x86ac, 0x8089, 0x7a44, 0x0, 0x1);
        gbc.writeMem(0x6d08, { 0x6, 0xf3 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x78f6, gbc.sp());
        EXPECT(0x6d0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 022A
        gbc.setState(0xa220, 0x7eaf, 0x4810, 0x65f2, 0x738d, 0x790d, 0x1, 0x1);
        gbc.writeMem(0xa220, { 0x6, 0xac });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x7eaf, gbc.sp());
        EXPECT(0xa222, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa220));
        EXPECT(0xac, gbc.readMem(0xa221));
        // 06 022B
        gbc.setState(0x4604, 0x289c, 0x58c0, 0x8f74, 0xd1bf, 0x1856, 0x1, 0x0);
        gbc.writeMem(0x4604, { 0x6, 0xf7 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x289c, gbc.sp());
        EXPECT(0x4606, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 022C
        gbc.setState(0xa18c, 0x736b, 0xe070, 0x8dba, 0x3bab, 0x1b05, 0x0, 0x1);
        gbc.writeMem(0xa18c, { 0x6, 0xbb });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x736b, gbc.sp());
        EXPECT(0xa18e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa18c));
        EXPECT(0xbb, gbc.readMem(0xa18d));
        // 06 022D
        gbc.setState(0xa23, 0x5549, 0x4790, 0xd8e9, 0x3f82, 0x74f8, 0x0, 0x1);
        gbc.writeMem(0xa23, { 0x6, 0xae });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x5549, gbc.sp());
        EXPECT(0xa25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 022E
        gbc.setState(0xa6e8, 0x345b, 0x66c0, 0x8a8e, 0x92b3, 0x9915, 0x1, 0x1);
        gbc.writeMem(0xa6e8, { 0x6, 0x80 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x345b, gbc.sp());
        EXPECT(0xa6ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa6e8));
        EXPECT(0x80, gbc.readMem(0xa6e9));
        // 06 022F
        gbc.setState(0x679a, 0x3911, 0x64a0, 0x3283, 0xc6a7, 0xf455, 0x0, 0x0);
        gbc.writeMem(0x679a, { 0x6, 0xf4 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x3911, gbc.sp());
        EXPECT(0x679c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0230
        gbc.setState(0x161f, 0xccf9, 0xb3d0, 0xd01d, 0xd9ce, 0xe3a6, 0x0, 0x0);
        gbc.writeMem(0x161f, { 0x6, 0x71 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xccf9, gbc.sp());
        EXPECT(0x1621, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0231
        gbc.setState(0x116c, 0xbe3e, 0xf960, 0x24b5, 0xb03b, 0xfe93, 0x1, 0x0);
        gbc.writeMem(0x116c, { 0x6, 0x41 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xbe3e, gbc.sp());
        EXPECT(0x116e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0232
        gbc.setState(0xd529, 0x781, 0x90b0, 0xcc74, 0xc20c, 0x18db, 0x1, 0x0);
        gbc.writeMem(0xd529, { 0x6, 0x2d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x781, gbc.sp());
        EXPECT(0xd52b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd529));
        EXPECT(0x2d, gbc.readMem(0xd52a));
        // 06 0233
        gbc.setState(0x2c33, 0x56e9, 0x8650, 0x15a, 0xf5d2, 0xdd16, 0x1, 0x1);
        gbc.writeMem(0x2c33, { 0x6, 0x27 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x56e9, gbc.sp());
        EXPECT(0x2c35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0234
        gbc.setState(0x6d34, 0xaecf, 0x6180, 0x20b9, 0x87a9, 0x7682, 0x0, 0x1);
        gbc.writeMem(0x6d34, { 0x6, 0xce });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xaecf, gbc.sp());
        EXPECT(0x6d36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0235
        gbc.setState(0xb607, 0xcac1, 0x3980, 0xac15, 0xe457, 0xc196, 0x1, 0x1);
        gbc.writeMem(0xb607, { 0x6, 0x86 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xcac1, gbc.sp());
        EXPECT(0xb609, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xb607));
        EXPECT(0x86, gbc.readMem(0xb608));
        // 06 0236
        gbc.setState(0x5d78, 0x6228, 0xf6e0, 0x3564, 0x898f, 0x2a48, 0x0, 0x0);
        gbc.writeMem(0x5d78, { 0x6, 0x32 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x6228, gbc.sp());
        EXPECT(0x5d7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0237
        gbc.setState(0x9cb5, 0x51bc, 0xf840, 0xfabd, 0xb505, 0x2c8a, 0x1, 0x0);
        gbc.writeMem(0x9cb5, { 0x6, 0x50 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x51bc, gbc.sp());
        EXPECT(0x9cb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x9cb5));
        EXPECT(0x50, gbc.readMem(0x9cb6));
        // 06 0238
        gbc.setState(0x9acb, 0x489a, 0x19b0, 0xc782, 0xaceb, 0x98b5, 0x1, 0x1);
        gbc.writeMem(0x9acb, { 0x6, 0xf6 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x489a, gbc.sp());
        EXPECT(0x9acd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x9acb));
        EXPECT(0xf6, gbc.readMem(0x9acc));
        // 06 023A
        gbc.setState(0xdab8, 0x2fd6, 0xbc10, 0xa26e, 0xac80, 0x2776, 0x1, 0x1);
        gbc.writeMem(0xdab8, { 0x6, 0xa1 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2fd6, gbc.sp());
        EXPECT(0xdaba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xdab8));
        EXPECT(0xa1, gbc.readMem(0xdab9));
        // 06 023B
        gbc.setState(0x7899, 0x13cc, 0xcdb0, 0xb431, 0x66f1, 0xd800, 0x1, 0x1);
        gbc.writeMem(0x7899, { 0x6, 0xe4 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x13cc, gbc.sp());
        EXPECT(0x789b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 023C
        gbc.setState(0x39c2, 0x4842, 0x18d0, 0xa1d2, 0x4383, 0xab21, 0x0, 0x1);
        gbc.writeMem(0x39c2, { 0x6, 0xea });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4842, gbc.sp());
        EXPECT(0x39c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 023D
        gbc.setState(0xafa2, 0x7927, 0xfb20, 0x1ece, 0x9e5a, 0x62f0, 0x1, 0x0);
        gbc.writeMem(0xafa2, { 0x6, 0xb0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x7927, gbc.sp());
        EXPECT(0xafa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xafa2));
        EXPECT(0xb0, gbc.readMem(0xafa3));
        // 06 023E
        gbc.setState(0x9682, 0xcb38, 0xb9f0, 0x4513, 0x117c, 0x985b, 0x0, 0x0);
        gbc.writeMem(0x9682, { 0x6, 0xed });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xcb38, gbc.sp());
        EXPECT(0x9684, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x9682));
        EXPECT(0xed, gbc.readMem(0x9683));
        // 06 023F
        gbc.setState(0xa555, 0xb31e, 0xff00, 0xbd05, 0x5938, 0x77c0, 0x0, 0x1);
        gbc.writeMem(0xa555, { 0x6, 0x41 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xb31e, gbc.sp());
        EXPECT(0xa557, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa555));
        EXPECT(0x41, gbc.readMem(0xa556));
        // 06 0240
        gbc.setState(0x8dec, 0xe213, 0x48b0, 0xccdc, 0x9787, 0x6b14, 0x1, 0x1);
        gbc.writeMem(0x8dec, { 0x6, 0xa0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xe213, gbc.sp());
        EXPECT(0x8dee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x8dec));
        EXPECT(0xa0, gbc.readMem(0x8ded));
        // 06 0241
        gbc.setState(0x5190, 0xec5, 0x3590, 0x1d94, 0xea1a, 0xe8bd, 0x0, 0x0);
        gbc.writeMem(0x5190, { 0x6, 0xaa });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xec5, gbc.sp());
        EXPECT(0x5192, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0242
        gbc.setState(0xd044, 0xce8a, 0xb1a0, 0x4c54, 0x6d44, 0x8026, 0x0, 0x1);
        gbc.writeMem(0xd044, { 0x6, 0x28 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xce8a, gbc.sp());
        EXPECT(0xd046, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd044));
        EXPECT(0x28, gbc.readMem(0xd045));
        // 06 0243
        gbc.setState(0xb866, 0xa18e, 0x9730, 0xc59e, 0x5054, 0xbb19, 0x1, 0x0);
        gbc.writeMem(0xb866, { 0x6, 0xc7 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xa18e, gbc.sp());
        EXPECT(0xb868, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xb866));
        EXPECT(0xc7, gbc.readMem(0xb867));
        // 06 0244
        gbc.setState(0xe45, 0xed81, 0xb6c0, 0x2e9d, 0xa61d, 0x3f41, 0x0, 0x0);
        gbc.writeMem(0xe45, { 0x6, 0xb });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xed81, gbc.sp());
        EXPECT(0xe47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0246
        gbc.setState(0x2258, 0x3303, 0x82a0, 0xcbb8, 0x37a, 0xf2af, 0x1, 0x1);
        gbc.writeMem(0x2258, { 0x6, 0x55 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x3303, gbc.sp());
        EXPECT(0x225a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0247
        gbc.setState(0x909f, 0xfece, 0xb900, 0x766a, 0xfccc, 0x5e6c, 0x0, 0x1);
        gbc.writeMem(0x909f, { 0x6, 0x28 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xfece, gbc.sp());
        EXPECT(0x90a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x909f));
        EXPECT(0x28, gbc.readMem(0x90a0));
        // 06 0248
        gbc.setState(0x4250, 0x79eb, 0x4ce0, 0x7521, 0xb3e9, 0xa4ca, 0x0, 0x1);
        gbc.writeMem(0x4250, { 0x6, 0x3e });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x79eb, gbc.sp());
        EXPECT(0x4252, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0249
        gbc.setState(0xbae, 0x5b51, 0xee30, 0x9aca, 0xc134, 0x6424, 0x0, 0x1);
        gbc.writeMem(0xbae, { 0x6, 0x9a });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x5b51, gbc.sp());
        EXPECT(0xbb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 024A
        gbc.setState(0xa5d, 0xfb9, 0x4e80, 0x8196, 0x9579, 0x233, 0x1, 0x0);
        gbc.writeMem(0xa5d, { 0x6, 0x21 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xfb9, gbc.sp());
        EXPECT(0xa5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 024B
        gbc.setState(0x6f35, 0x6358, 0xdcb0, 0xfbd7, 0x7f9e, 0x6d4a, 0x1, 0x1);
        gbc.writeMem(0x6f35, { 0x6, 0xae });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x6358, gbc.sp());
        EXPECT(0x6f37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 024C
        gbc.setState(0x2e7b, 0x6073, 0xf2e0, 0x7287, 0xc426, 0x15b2, 0x1, 0x0);
        gbc.writeMem(0x2e7b, { 0x6, 0x1b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6073, gbc.sp());
        EXPECT(0x2e7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 024D
        gbc.setState(0x3981, 0x8db2, 0x4bf0, 0x7f18, 0x38fd, 0xd56c, 0x0, 0x1);
        gbc.writeMem(0x3981, { 0x6, 0x60 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x8db2, gbc.sp());
        EXPECT(0x3983, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 024E
        gbc.setState(0xe6a5, 0x1dfa, 0xb720, 0x4385, 0x7276, 0x17fb, 0x1, 0x1);
        gbc.writeMem(0xe6a5, { 0x6, 0xaa });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x1dfa, gbc.sp());
        EXPECT(0xe6a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xe6a5));
        EXPECT(0xaa, gbc.readMem(0xe6a6));
        // 06 024F
        gbc.setState(0x1bfb, 0x67d5, 0xdde0, 0xdcfe, 0x82d7, 0x5a2a, 0x0, 0x1);
        gbc.writeMem(0x1bfb, { 0x6, 0x3a });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x67d5, gbc.sp());
        EXPECT(0x1bfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0250
        gbc.setState(0xa6d4, 0xd8ae, 0x9890, 0x76c4, 0xf992, 0x2af, 0x1, 0x1);
        gbc.writeMem(0xa6d4, { 0x6, 0x39 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xd8ae, gbc.sp());
        EXPECT(0xa6d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa6d4));
        EXPECT(0x39, gbc.readMem(0xa6d5));
        // 06 0251
        gbc.setState(0x532e, 0x4f3c, 0xf8a0, 0x2d2, 0x3ca1, 0xacac, 0x0, 0x1);
        gbc.writeMem(0x532e, { 0x6, 0xe5 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x4f3c, gbc.sp());
        EXPECT(0x5330, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0252
        gbc.setState(0x4024, 0xb7bf, 0x3c50, 0xd543, 0x52d3, 0xdd3d, 0x1, 0x0);
        gbc.writeMem(0x4024, { 0x6, 0xc5 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xb7bf, gbc.sp());
        EXPECT(0x4026, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0253
        gbc.setState(0xa169, 0xd7a2, 0x560, 0xfa18, 0x3c6d, 0x7c5b, 0x1, 0x1);
        gbc.writeMem(0xa169, { 0x6, 0x83 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xd7a2, gbc.sp());
        EXPECT(0xa16b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa169));
        EXPECT(0x83, gbc.readMem(0xa16a));
        // 06 0254
        gbc.setState(0xce3, 0xc177, 0x8750, 0x723a, 0x1594, 0x3b78, 0x0, 0x0);
        gbc.writeMem(0xce3, { 0x6, 0x50 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xc177, gbc.sp());
        EXPECT(0xce5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0255
        gbc.setState(0xeb00, 0x6662, 0xeed0, 0x35fb, 0x6824, 0xb866, 0x0, 0x1);
        gbc.writeMem(0xeb00, { 0x6, 0x4f });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6662, gbc.sp());
        EXPECT(0xeb02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xeb00));
        EXPECT(0x4f, gbc.readMem(0xeb01));
        // 06 0256
        gbc.setState(0xb1b7, 0xbb36, 0xd020, 0x7830, 0xe47d, 0xddab, 0x0, 0x0);
        gbc.writeMem(0xb1b7, { 0x6, 0x5f });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xbb36, gbc.sp());
        EXPECT(0xb1b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xb1b7));
        EXPECT(0x5f, gbc.readMem(0xb1b8));
        // 06 0257
        gbc.setState(0xa3da, 0xb417, 0xcb10, 0x149a, 0xdbe0, 0x8c94, 0x0, 0x1);
        gbc.writeMem(0xa3da, { 0x6, 0x55 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xb417, gbc.sp());
        EXPECT(0xa3dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa3da));
        EXPECT(0x55, gbc.readMem(0xa3db));
        // 06 0258
        gbc.setState(0xba27, 0x33e1, 0xa8b0, 0x3d49, 0xd8cf, 0x1cd2, 0x1, 0x0);
        gbc.writeMem(0xba27, { 0x6, 0x73 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x33e1, gbc.sp());
        EXPECT(0xba29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xba27));
        EXPECT(0x73, gbc.readMem(0xba28));
        // 06 0259
        gbc.setState(0xeb79, 0x59d, 0xf6e0, 0x6174, 0xa1f7, 0x9425, 0x1, 0x0);
        gbc.writeMem(0xeb79, { 0x6, 0x7 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x59d, gbc.sp());
        EXPECT(0xeb7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xeb79));
        EXPECT(0x7, gbc.readMem(0xeb7a));
        // 06 025A
        gbc.setState(0x782b, 0xf71c, 0x6c40, 0xd95e, 0x6ba9, 0x2d38, 0x0, 0x0);
        gbc.writeMem(0x782b, { 0x6, 0xe8 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xf71c, gbc.sp());
        EXPECT(0x782d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 025B
        gbc.setState(0x888f, 0x9dd1, 0xd870, 0xee40, 0x4d55, 0x392d, 0x1, 0x1);
        gbc.writeMem(0x888f, { 0x6, 0xd8 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9dd1, gbc.sp());
        EXPECT(0x8891, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x888f));
        EXPECT(0xd8, gbc.readMem(0x8890));
        // 06 025C
        gbc.setState(0x90b4, 0x6429, 0x88d0, 0xa7c8, 0xafc3, 0x1c77, 0x1, 0x1);
        gbc.writeMem(0x90b4, { 0x6, 0x9a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x6429, gbc.sp());
        EXPECT(0x90b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x90b4));
        EXPECT(0x9a, gbc.readMem(0x90b5));
        // 06 025D
        gbc.setState(0xe67e, 0xdcdd, 0xee0, 0x1707, 0x423f, 0x6615, 0x1, 0x0);
        gbc.writeMem(0xe67e, { 0x6, 0x12 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xdcdd, gbc.sp());
        EXPECT(0xe680, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xe67e));
        EXPECT(0x12, gbc.readMem(0xe67f));
        // 06 025E
        gbc.setState(0x791d, 0x526b, 0xe7e0, 0x2b03, 0x4154, 0x5b2a, 0x1, 0x0);
        gbc.writeMem(0x791d, { 0x6, 0xe6 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x526b, gbc.sp());
        EXPECT(0x791f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 025F
        gbc.setState(0x3eb3, 0x6242, 0xb910, 0x502, 0xdf96, 0x4faf, 0x1, 0x1);
        gbc.writeMem(0x3eb3, { 0x6, 0xdf });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x6242, gbc.sp());
        EXPECT(0x3eb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0260
        gbc.setState(0x758d, 0x7775, 0xb450, 0x95d, 0x96d2, 0x8a1c, 0x1, 0x1);
        gbc.writeMem(0x758d, { 0x6, 0x9d });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x7775, gbc.sp());
        EXPECT(0x758f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0261
        gbc.setState(0xa07e, 0x8e7a, 0x9780, 0x2063, 0x4d4, 0x98c6, 0x1, 0x0);
        gbc.writeMem(0xa07e, { 0x6, 0x7f });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x8e7a, gbc.sp());
        EXPECT(0xa080, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa07e));
        EXPECT(0x7f, gbc.readMem(0xa07f));
        // 06 0262
        gbc.setState(0x30cb, 0x448c, 0x82e0, 0xfd72, 0x6cd, 0xe691, 0x0, 0x0);
        gbc.writeMem(0x30cb, { 0x6, 0xb4 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x448c, gbc.sp());
        EXPECT(0x30cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0263
        gbc.setState(0xb89c, 0x8976, 0x56e0, 0x8f19, 0x1edd, 0x5f63, 0x0, 0x1);
        gbc.writeMem(0xb89c, { 0x6, 0xbf });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x8976, gbc.sp());
        EXPECT(0xb89e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xb89c));
        EXPECT(0xbf, gbc.readMem(0xb89d));
        // 06 0264
        gbc.setState(0x4267, 0x702c, 0x91a0, 0x7652, 0x9387, 0x9b7c, 0x0, 0x0);
        gbc.writeMem(0x4267, { 0x6, 0xa9 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x702c, gbc.sp());
        EXPECT(0x4269, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0265
        gbc.setState(0xbdb7, 0xa7b, 0xe000, 0xb7f, 0xb3df, 0x3d18, 0x0, 0x1);
        gbc.writeMem(0xbdb7, { 0x6, 0x23 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xa7b, gbc.sp());
        EXPECT(0xbdb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xbdb7));
        EXPECT(0x23, gbc.readMem(0xbdb8));
        // 06 0266
        gbc.setState(0xc194, 0xe633, 0xd90, 0xc6d0, 0x991e, 0x8d4a, 0x0, 0x1);
        gbc.writeMem(0xc194, { 0x6, 0xc8 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe633, gbc.sp());
        EXPECT(0xc196, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xc194));
        EXPECT(0xc8, gbc.readMem(0xc195));
        // 06 0267
        gbc.setState(0x56f9, 0xa9c6, 0xfde0, 0x3394, 0x6a0e, 0x62ab, 0x0, 0x0);
        gbc.writeMem(0x56f9, { 0x6, 0xc2 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xa9c6, gbc.sp());
        EXPECT(0x56fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0268
        gbc.setState(0xde86, 0xa6bd, 0xbdc0, 0x78cc, 0x2859, 0xe8d7, 0x1, 0x0);
        gbc.writeMem(0xde86, { 0x6, 0x63 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xa6bd, gbc.sp());
        EXPECT(0xde88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xde86));
        EXPECT(0x63, gbc.readMem(0xde87));
        // 06 0269
        gbc.setState(0xcc3b, 0x8227, 0xbce0, 0xdfc0, 0x50c, 0xc948, 0x0, 0x0);
        gbc.writeMem(0xcc3b, { 0x6, 0x27 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x8227, gbc.sp());
        EXPECT(0xcc3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xcc3b));
        EXPECT(0x27, gbc.readMem(0xcc3c));
        // 06 026A
        gbc.setState(0xd8e6, 0x70e0, 0xeeb0, 0x6f40, 0x8112, 0x41f7, 0x1, 0x1);
        gbc.writeMem(0xd8e6, { 0x6, 0x86 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x70e0, gbc.sp());
        EXPECT(0xd8e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd8e6));
        EXPECT(0x86, gbc.readMem(0xd8e7));
        // 06 026B
        gbc.setState(0x98ee, 0x65de, 0x8f20, 0x187c, 0xd26b, 0xdfbc, 0x0, 0x0);
        gbc.writeMem(0x98ee, { 0x6, 0x44 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x65de, gbc.sp());
        EXPECT(0x98f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x98ee));
        EXPECT(0x44, gbc.readMem(0x98ef));
        // 06 026C
        gbc.setState(0x991d, 0x753c, 0x11e0, 0xceb7, 0x139b, 0xc324, 0x0, 0x1);
        gbc.writeMem(0x991d, { 0x6, 0xe5 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x753c, gbc.sp());
        EXPECT(0x991f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x991d));
        EXPECT(0xe5, gbc.readMem(0x991e));
        // 06 026D
        gbc.setState(0xc6cf, 0x719f, 0xc7e0, 0x7773, 0xcd1f, 0x1a6d, 0x0, 0x1);
        gbc.writeMem(0xc6cf, { 0x6, 0x6d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x719f, gbc.sp());
        EXPECT(0xc6d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xc6cf));
        EXPECT(0x6d, gbc.readMem(0xc6d0));
        // 06 026F
        gbc.setState(0x272a, 0xfa41, 0xca40, 0x8216, 0xea66, 0x6d29, 0x0, 0x1);
        gbc.writeMem(0x272a, { 0x6, 0x11 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xfa41, gbc.sp());
        EXPECT(0x272c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0270
        gbc.setState(0xc931, 0x22d9, 0x6cc0, 0xb011, 0x255a, 0xebea, 0x0, 0x0);
        gbc.writeMem(0xc931, { 0x6, 0x35 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x22d9, gbc.sp());
        EXPECT(0xc933, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xc931));
        EXPECT(0x35, gbc.readMem(0xc932));
        // 06 0271
        gbc.setState(0xe5b5, 0x5bac, 0x9ac0, 0xbd77, 0x2326, 0xfaf5, 0x1, 0x0);
        gbc.writeMem(0xe5b5, { 0x6, 0xac });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5bac, gbc.sp());
        EXPECT(0xe5b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xe5b5));
        EXPECT(0xac, gbc.readMem(0xe5b6));
        // 06 0272
        gbc.setState(0x7747, 0x1521, 0x93a0, 0xaa08, 0x8d57, 0xb10, 0x0, 0x0);
        gbc.writeMem(0x7747, { 0x6, 0xb1 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1521, gbc.sp());
        EXPECT(0x7749, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0273
        gbc.setState(0x5660, 0xeea6, 0xd990, 0xa76f, 0x1e59, 0x4e78, 0x1, 0x1);
        gbc.writeMem(0x5660, { 0x6, 0x7f });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xeea6, gbc.sp());
        EXPECT(0x5662, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0274
        gbc.setState(0x5a0e, 0x4d85, 0x93a0, 0x4d30, 0x2cda, 0x3c10, 0x1, 0x0);
        gbc.writeMem(0x5a0e, { 0x6, 0x71 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x4d85, gbc.sp());
        EXPECT(0x5a10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0275
        gbc.setState(0x9c66, 0xbea2, 0xd550, 0x4e83, 0xb73a, 0x8cdb, 0x0, 0x1);
        gbc.writeMem(0x9c66, { 0x6, 0x94 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xbea2, gbc.sp());
        EXPECT(0x9c68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x9c66));
        EXPECT(0x94, gbc.readMem(0x9c67));
        // 06 0276
        gbc.setState(0xee2a, 0x71e5, 0x23e0, 0xe44d, 0x3956, 0x41d3, 0x1, 0x0);
        gbc.writeMem(0xee2a, { 0x6, 0x5d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x71e5, gbc.sp());
        EXPECT(0xee2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xee2a));
        EXPECT(0x5d, gbc.readMem(0xee2b));
        // 06 0277
        gbc.setState(0x754b, 0x40a7, 0x2140, 0x3324, 0xdc16, 0xd439, 0x0, 0x1);
        gbc.writeMem(0x754b, { 0x6, 0x7f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x40a7, gbc.sp());
        EXPECT(0x754d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0278
        gbc.setState(0x6d58, 0x5b65, 0xe160, 0xd09f, 0xd556, 0xd7a4, 0x1, 0x1);
        gbc.writeMem(0x6d58, { 0x6, 0x4a });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x5b65, gbc.sp());
        EXPECT(0x6d5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 027A
        gbc.setState(0xdf45, 0xe74a, 0x33b0, 0x484c, 0x4173, 0xaa3e, 0x0, 0x0);
        gbc.writeMem(0xdf45, { 0x6, 0xa1 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xe74a, gbc.sp());
        EXPECT(0xdf47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xdf45));
        EXPECT(0xa1, gbc.readMem(0xdf46));
        // 06 027B
        gbc.setState(0xe567, 0xfec3, 0x2810, 0x4571, 0x6b9, 0xc65d, 0x0, 0x0);
        gbc.writeMem(0xe567, { 0x6, 0xcb });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xfec3, gbc.sp());
        EXPECT(0xe569, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xe567));
        EXPECT(0xcb, gbc.readMem(0xe568));
        // 06 027D
        gbc.setState(0x2bef, 0x73c9, 0x3cb0, 0x8095, 0xec3, 0xbb2c, 0x0, 0x1);
        gbc.writeMem(0x2bef, { 0x6, 0xc5 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x73c9, gbc.sp());
        EXPECT(0x2bf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0280
        gbc.setState(0xadfe, 0xdea6, 0x72e0, 0x2441, 0x6d5, 0x705b, 0x1, 0x1);
        gbc.writeMem(0xadfe, { 0x6, 0x31 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xdea6, gbc.sp());
        EXPECT(0xae00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xadfe));
        EXPECT(0x31, gbc.readMem(0xadff));
        // 06 0281
        gbc.setState(0x13cb, 0x3212, 0xf4e0, 0x6e07, 0x180b, 0x8b59, 0x1, 0x1);
        gbc.writeMem(0x13cb, { 0x6, 0x7b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x3212, gbc.sp());
        EXPECT(0x13cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0283
        gbc.setState(0xb8d8, 0x9c1c, 0x4510, 0x439c, 0x6111, 0x1a3d, 0x1, 0x0);
        gbc.writeMem(0xb8d8, { 0x6, 0xcd });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x9c1c, gbc.sp());
        EXPECT(0xb8da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xb8d8));
        EXPECT(0xcd, gbc.readMem(0xb8d9));
        // 06 0284
        gbc.setState(0x4c9c, 0xdc0f, 0x2000, 0xddd, 0x7f92, 0xb78f, 0x0, 0x1);
        gbc.writeMem(0x4c9c, { 0x6, 0xcb });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xdc0f, gbc.sp());
        EXPECT(0x4c9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0285
        gbc.setState(0xddc, 0xef4b, 0xb210, 0xb789, 0x1297, 0x34f3, 0x0, 0x0);
        gbc.writeMem(0xddc, { 0x6, 0x6 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xef4b, gbc.sp());
        EXPECT(0xdde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0286
        gbc.setState(0x207, 0xf339, 0x6660, 0xe035, 0xf5d8, 0x569b, 0x0, 0x0);
        gbc.writeMem(0x207, { 0x6, 0xef });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf339, gbc.sp());
        EXPECT(0x209, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0287
        gbc.setState(0xbe2f, 0xa4, 0x1d70, 0x871c, 0xb6c4, 0xa3e5, 0x1, 0x0);
        gbc.writeMem(0xbe2f, { 0x6, 0xfc });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xa4, gbc.sp());
        EXPECT(0xbe31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xbe2f));
        EXPECT(0xfc, gbc.readMem(0xbe30));
        // 06 0288
        gbc.setState(0x6c74, 0xba40, 0xa40, 0xd66c, 0xd9ed, 0x4b20, 0x1, 0x1);
        gbc.writeMem(0x6c74, { 0x6, 0xef });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xba40, gbc.sp());
        EXPECT(0x6c76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0289
        gbc.setState(0xbcd3, 0xb849, 0x5140, 0x345f, 0xbf57, 0xc8dc, 0x1, 0x0);
        gbc.writeMem(0xbcd3, { 0x6, 0x43 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xb849, gbc.sp());
        EXPECT(0xbcd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xbcd3));
        EXPECT(0x43, gbc.readMem(0xbcd4));
        // 06 028A
        gbc.setState(0x7779, 0x3f59, 0xb1e0, 0x6580, 0x53f1, 0xfc3e, 0x1, 0x1);
        gbc.writeMem(0x7779, { 0x6, 0xb1 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x3f59, gbc.sp());
        EXPECT(0x777b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 028B
        gbc.setState(0x289d, 0x627a, 0x1220, 0x40f8, 0xfcce, 0xad44, 0x1, 0x1);
        gbc.writeMem(0x289d, { 0x6, 0xc0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x627a, gbc.sp());
        EXPECT(0x289f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 028C
        gbc.setState(0xec20, 0xf54b, 0x2d40, 0x21de, 0xd7d2, 0xd463, 0x0, 0x1);
        gbc.writeMem(0xec20, { 0x6, 0x99 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xf54b, gbc.sp());
        EXPECT(0xec22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xec20));
        EXPECT(0x99, gbc.readMem(0xec21));
        // 06 028D
        gbc.setState(0x1407, 0xb36a, 0xf7a0, 0x29ae, 0xce00, 0x6187, 0x0, 0x1);
        gbc.writeMem(0x1407, { 0x6, 0xf9 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xb36a, gbc.sp());
        EXPECT(0x1409, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 028E
        gbc.setState(0xdae1, 0xff53, 0x7be0, 0xf1fe, 0x69d4, 0x3d93, 0x1, 0x1);
        gbc.writeMem(0xdae1, { 0x6, 0x60 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xff53, gbc.sp());
        EXPECT(0xdae3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xdae1));
        EXPECT(0x60, gbc.readMem(0xdae2));
        // 06 0290
        gbc.setState(0x74e7, 0xfe0e, 0x6840, 0x30b1, 0xb3d8, 0x65be, 0x0, 0x0);
        gbc.writeMem(0x74e7, { 0x6, 0xde });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xfe0e, gbc.sp());
        EXPECT(0x74e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0291
        gbc.setState(0xb16e, 0x6483, 0x9930, 0x8525, 0x6e66, 0xdb40, 0x1, 0x1);
        gbc.writeMem(0xb16e, { 0x6, 0x4d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x6483, gbc.sp());
        EXPECT(0xb170, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xb16e));
        EXPECT(0x4d, gbc.readMem(0xb16f));
        // 06 0292
        gbc.setState(0x58c5, 0xb123, 0xd640, 0xb038, 0x61f8, 0x7d2a, 0x0, 0x0);
        gbc.writeMem(0x58c5, { 0x6, 0x6d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xb123, gbc.sp());
        EXPECT(0x58c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0293
        gbc.setState(0xbcff, 0x2b9f, 0xd100, 0xfaff, 0x67a9, 0xb7e7, 0x0, 0x1);
        gbc.writeMem(0xbcff, { 0x6, 0x99 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x2b9f, gbc.sp());
        EXPECT(0xbd01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xbcff));
        EXPECT(0x99, gbc.readMem(0xbd00));
        // 06 0294
        gbc.setState(0x8d4c, 0x2452, 0x3b0, 0xebf7, 0x69a7, 0x66cd, 0x0, 0x1);
        gbc.writeMem(0x8d4c, { 0x6, 0x73 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x2452, gbc.sp());
        EXPECT(0x8d4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x8d4c));
        EXPECT(0x73, gbc.readMem(0x8d4d));
        // 06 0295
        gbc.setState(0xd71c, 0xcbcc, 0x62d0, 0xdfe0, 0x97bf, 0x56af, 0x1, 0x0);
        gbc.writeMem(0xd71c, { 0x6, 0xab });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xcbcc, gbc.sp());
        EXPECT(0xd71e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd71c));
        EXPECT(0xab, gbc.readMem(0xd71d));
        // 06 0296
        gbc.setState(0x9d71, 0x4e46, 0x8cb0, 0x62fd, 0x89e0, 0xfb23, 0x1, 0x1);
        gbc.writeMem(0x9d71, { 0x6, 0x17 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x4e46, gbc.sp());
        EXPECT(0x9d73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x9d71));
        EXPECT(0x17, gbc.readMem(0x9d72));
        // 06 0297
        gbc.setState(0x7342, 0x2a8c, 0x4650, 0x49d9, 0xe479, 0x1dfa, 0x0, 0x0);
        gbc.writeMem(0x7342, { 0x6, 0x7c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x2a8c, gbc.sp());
        EXPECT(0x7344, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0299
        gbc.setState(0xc6bc, 0xeb4e, 0x7280, 0x1724, 0x2aa1, 0xad80, 0x0, 0x0);
        gbc.writeMem(0xc6bc, { 0x6, 0xdf });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xeb4e, gbc.sp());
        EXPECT(0xc6be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xc6bc));
        EXPECT(0xdf, gbc.readMem(0xc6bd));
        // 06 029A
        gbc.setState(0xc861, 0x1aaa, 0xd0, 0x14bd, 0x2496, 0x15dd, 0x1, 0x0);
        gbc.writeMem(0xc861, { 0x6, 0x5 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x1aaa, gbc.sp());
        EXPECT(0xc863, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xc861));
        EXPECT(0x5, gbc.readMem(0xc862));
        // 06 029B
        gbc.setState(0x90b7, 0x5f5a, 0x8b60, 0xd118, 0x516f, 0x6df7, 0x1, 0x1);
        gbc.writeMem(0x90b7, { 0x6, 0x80 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x5f5a, gbc.sp());
        EXPECT(0x90b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x90b7));
        EXPECT(0x80, gbc.readMem(0x90b8));
        // 06 029C
        gbc.setState(0x158f, 0x6285, 0xbbf0, 0xd40f, 0x1c9, 0x27de, 0x1, 0x1);
        gbc.writeMem(0x158f, { 0x6, 0x6f });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x6285, gbc.sp());
        EXPECT(0x1591, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 029D
        gbc.setState(0xbba5, 0xed23, 0x6db0, 0x3a5b, 0x3871, 0xdd9e, 0x1, 0x0);
        gbc.writeMem(0xbba5, { 0x6, 0xac });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xed23, gbc.sp());
        EXPECT(0xbba7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xbba5));
        EXPECT(0xac, gbc.readMem(0xbba6));
        // 06 029E
        gbc.setState(0x9188, 0x160f, 0x15f0, 0xbd, 0x322d, 0xa292, 0x1, 0x0);
        gbc.writeMem(0x9188, { 0x6, 0xb3 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x160f, gbc.sp());
        EXPECT(0x918a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x9188));
        EXPECT(0xb3, gbc.readMem(0x9189));
        // 06 029F
        gbc.setState(0xc48d, 0xd273, 0x9800, 0xcdfa, 0x1324, 0x86c4, 0x1, 0x1);
        gbc.writeMem(0xc48d, { 0x6, 0x7e });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xd273, gbc.sp());
        EXPECT(0xc48f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xc48d));
        EXPECT(0x7e, gbc.readMem(0xc48e));
        // 06 02A0
        gbc.setState(0xd7ef, 0x8306, 0x2ee0, 0x6e2a, 0xdd4e, 0x7f5a, 0x1, 0x1);
        gbc.writeMem(0xd7ef, { 0x6, 0x2f });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8306, gbc.sp());
        EXPECT(0xd7f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd7ef));
        EXPECT(0x2f, gbc.readMem(0xd7f0));
        // 06 02A1
        gbc.setState(0xe91a, 0x9215, 0x7460, 0xf8e3, 0x8657, 0xcf9c, 0x1, 0x1);
        gbc.writeMem(0xe91a, { 0x6, 0xb6 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x9215, gbc.sp());
        EXPECT(0xe91c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xe91a));
        EXPECT(0xb6, gbc.readMem(0xe91b));
        // 06 02A2
        gbc.setState(0x179f, 0x8ce7, 0x8170, 0x4095, 0xe08d, 0x8b37, 0x0, 0x1);
        gbc.writeMem(0x179f, { 0x6, 0x3a });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x8ce7, gbc.sp());
        EXPECT(0x17a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 02A3
        gbc.setState(0x1120, 0x5205, 0xb700, 0xb29f, 0xfa5c, 0x2361, 0x0, 0x1);
        gbc.writeMem(0x1120, { 0x6, 0x3e });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x5205, gbc.sp());
        EXPECT(0x1122, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 02A4
        gbc.setState(0xcd2e, 0x9f1d, 0x6660, 0x351d, 0xfc96, 0x37a2, 0x1, 0x0);
        gbc.writeMem(0xcd2e, { 0x6, 0xef });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x9f1d, gbc.sp());
        EXPECT(0xcd30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xcd2e));
        EXPECT(0xef, gbc.readMem(0xcd2f));
        // 06 02A5
        gbc.setState(0x3523, 0x3005, 0x38d0, 0x9f9, 0xd180, 0xc3a9, 0x0, 0x1);
        gbc.writeMem(0x3523, { 0x6, 0xca });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3005, gbc.sp());
        EXPECT(0x3525, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 02A6
        gbc.setState(0xa9a0, 0xaecc, 0x5390, 0x7fea, 0x9be7, 0x425a, 0x0, 0x0);
        gbc.writeMem(0xa9a0, { 0x6, 0xf });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xaecc, gbc.sp());
        EXPECT(0xa9a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa9a0));
        EXPECT(0xf, gbc.readMem(0xa9a1));
        // 06 02A7
        gbc.setState(0xd826, 0xb5ed, 0x9fa0, 0x402, 0x53ed, 0x6744, 0x1, 0x0);
        gbc.writeMem(0xd826, { 0x6, 0x7e });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xb5ed, gbc.sp());
        EXPECT(0xd828, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd826));
        EXPECT(0x7e, gbc.readMem(0xd827));
        // 06 02A8
        gbc.setState(0x9a7b, 0xe93a, 0x86f0, 0xac22, 0x99fd, 0x1f4c, 0x1, 0x1);
        gbc.writeMem(0x9a7b, { 0x6, 0x92 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe93a, gbc.sp());
        EXPECT(0x9a7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x9a7b));
        EXPECT(0x92, gbc.readMem(0x9a7c));
        // 06 02A9
        gbc.setState(0x2202, 0xc603, 0x4cf0, 0xeb86, 0x7bca, 0xe883, 0x0, 0x1);
        gbc.writeMem(0x2202, { 0x6, 0x2 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc603, gbc.sp());
        EXPECT(0x2204, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 02AA
        gbc.setState(0x938d, 0xdd37, 0x3310, 0xb62d, 0x2bf4, 0x36d8, 0x0, 0x1);
        gbc.writeMem(0x938d, { 0x6, 0x59 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xdd37, gbc.sp());
        EXPECT(0x938f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x938d));
        EXPECT(0x59, gbc.readMem(0x938e));
        // 06 02AB
        gbc.setState(0xc35c, 0x9757, 0x7be0, 0xb6a4, 0x3d0b, 0x640d, 0x0, 0x1);
        gbc.writeMem(0xc35c, { 0x6, 0x2b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9757, gbc.sp());
        EXPECT(0xc35e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xc35c));
        EXPECT(0x2b, gbc.readMem(0xc35d));
        // 06 02AC
        gbc.setState(0x7af4, 0xac5a, 0xbb70, 0x8d83, 0x1873, 0x466b, 0x1, 0x0);
        gbc.writeMem(0x7af4, { 0x6, 0x70 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xac5a, gbc.sp());
        EXPECT(0x7af6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 02AD
        gbc.setState(0xd747, 0x3383, 0x7030, 0xcee6, 0xcf3, 0x1b55, 0x0, 0x1);
        gbc.writeMem(0xd747, { 0x6, 0xe2 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x3383, gbc.sp());
        EXPECT(0xd749, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd747));
        EXPECT(0xe2, gbc.readMem(0xd748));
        // 06 02AE
        gbc.setState(0x7a44, 0x8572, 0x7700, 0xba4d, 0xea80, 0x1478, 0x1, 0x0);
        gbc.writeMem(0x7a44, { 0x6, 0xb7 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x8572, gbc.sp());
        EXPECT(0x7a46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 02AF
        gbc.setState(0xa42a, 0xb546, 0x3220, 0x6d39, 0x9ca, 0xd72, 0x0, 0x1);
        gbc.writeMem(0xa42a, { 0x6, 0x51 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xb546, gbc.sp());
        EXPECT(0xa42c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa42a));
        EXPECT(0x51, gbc.readMem(0xa42b));
        // 06 02B0
        gbc.setState(0x2ec3, 0x99c4, 0x46c0, 0x8fb9, 0x61ed, 0x79a0, 0x0, 0x1);
        gbc.writeMem(0x2ec3, { 0x6, 0xaf });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x99c4, gbc.sp());
        EXPECT(0x2ec5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 02B2
        gbc.setState(0x5737, 0xa3ad, 0xdbd0, 0x348e, 0x593e, 0x806b, 0x1, 0x0);
        gbc.writeMem(0x5737, { 0x6, 0xdc });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xa3ad, gbc.sp());
        EXPECT(0x5739, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 02B3
        gbc.setState(0x1524, 0x6d6d, 0xe480, 0xe7af, 0xd1ee, 0xafcb, 0x1, 0x0);
        gbc.writeMem(0x1524, { 0x6, 0x7 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x6d6d, gbc.sp());
        EXPECT(0x1526, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 02B5
        gbc.setState(0xd5b3, 0x7c11, 0xcb50, 0xb2f, 0x51ca, 0xdee5, 0x1, 0x1);
        gbc.writeMem(0xd5b3, { 0x6, 0xd3 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x7c11, gbc.sp());
        EXPECT(0xd5b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd5b3));
        EXPECT(0xd3, gbc.readMem(0xd5b4));
        // 06 02B6
        gbc.setState(0xc157, 0xd5a4, 0x2ce0, 0xa54f, 0x2876, 0x2c8a, 0x0, 0x0);
        gbc.writeMem(0xc157, { 0x6, 0x80 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xd5a4, gbc.sp());
        EXPECT(0xc159, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xc157));
        EXPECT(0x80, gbc.readMem(0xc158));
        // 06 02B7
        gbc.setState(0x40b4, 0x4c29, 0x4a50, 0xb8d9, 0x8909, 0x730b, 0x0, 0x1);
        gbc.writeMem(0x40b4, { 0x6, 0x90 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4c29, gbc.sp());
        EXPECT(0x40b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 02B8
        gbc.setState(0x77c, 0xe65e, 0xb460, 0x9873, 0xc8eb, 0x9794, 0x1, 0x0);
        gbc.writeMem(0x77c, { 0x6, 0x2f });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xe65e, gbc.sp());
        EXPECT(0x77e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 02B9
        gbc.setState(0xdd80, 0x3dc6, 0x67b0, 0x43b3, 0x5bc3, 0x23de, 0x0, 0x1);
        gbc.writeMem(0xdd80, { 0x6, 0xae });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x3dc6, gbc.sp());
        EXPECT(0xdd82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xdd80));
        EXPECT(0xae, gbc.readMem(0xdd81));
        // 06 02BA
        gbc.setState(0x17ef, 0xf21b, 0x3e60, 0x64d, 0x7f98, 0x35eb, 0x1, 0x0);
        gbc.writeMem(0x17ef, { 0x6, 0x4e });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xf21b, gbc.sp());
        EXPECT(0x17f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 02BB
        gbc.setState(0x7f79, 0x8c8, 0x5240, 0x7a9, 0xd291, 0x97d5, 0x1, 0x1);
        gbc.writeMem(0x7f79, { 0x6, 0x4e });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x8c8, gbc.sp());
        EXPECT(0x7f7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 02BD
        gbc.setState(0x65e0, 0xb421, 0xf870, 0xda61, 0xe4db, 0x8199, 0x0, 0x0);
        gbc.writeMem(0x65e0, { 0x6, 0x8f });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb421, gbc.sp());
        EXPECT(0x65e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 02BE
        gbc.setState(0x95c6, 0x7364, 0xf970, 0x2669, 0xc617, 0x6146, 0x1, 0x1);
        gbc.writeMem(0x95c6, { 0x6, 0xca });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x7364, gbc.sp());
        EXPECT(0x95c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x95c6));
        EXPECT(0xca, gbc.readMem(0x95c7));
        // 06 02BF
        gbc.setState(0xce80, 0x7bf8, 0xad10, 0xdadc, 0xd40f, 0xf9ad, 0x1, 0x1);
        gbc.writeMem(0xce80, { 0x6, 0x4e });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x7bf8, gbc.sp());
        EXPECT(0xce82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xce80));
        EXPECT(0x4e, gbc.readMem(0xce81));
        // 06 02C0
        gbc.setState(0x7371, 0x1808, 0x4250, 0xb64a, 0xf159, 0xda2a, 0x0, 0x1);
        gbc.writeMem(0x7371, { 0x6, 0xe3 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1808, gbc.sp());
        EXPECT(0x7373, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 02C1
        gbc.setState(0x25dc, 0x6f9c, 0x5b0, 0xb71d, 0xfc74, 0x5698, 0x0, 0x0);
        gbc.writeMem(0x25dc, { 0x6, 0x2 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x6f9c, gbc.sp());
        EXPECT(0x25de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 02C2
        gbc.setState(0x12dc, 0xd1e8, 0xec0, 0x6cb2, 0x27a8, 0x2073, 0x0, 0x1);
        gbc.writeMem(0x12dc, { 0x6, 0x8f });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xd1e8, gbc.sp());
        EXPECT(0x12de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 02C3
        gbc.setState(0x854c, 0x16d4, 0xe020, 0x4243, 0xa020, 0x8968, 0x0, 0x1);
        gbc.writeMem(0x854c, { 0x6, 0x3e });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x16d4, gbc.sp());
        EXPECT(0x854e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x854c));
        EXPECT(0x3e, gbc.readMem(0x854d));
        // 06 02C5
        gbc.setState(0xaf4c, 0x5053, 0x4da0, 0x9a2f, 0x40e, 0x830e, 0x0, 0x1);
        gbc.writeMem(0xaf4c, { 0x6, 0x8 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x5053, gbc.sp());
        EXPECT(0xaf4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xaf4c));
        EXPECT(0x8, gbc.readMem(0xaf4d));
        // 06 02C6
        gbc.setState(0x45dd, 0x5722, 0xb590, 0x8ea0, 0xa8c2, 0x5974, 0x0, 0x0);
        gbc.writeMem(0x45dd, { 0x6, 0xa1 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5722, gbc.sp());
        EXPECT(0x45df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 02C8
        gbc.setState(0x8600, 0xbc, 0x8100, 0x8d8f, 0x8e83, 0xe891, 0x0, 0x0);
        gbc.writeMem(0x8600, { 0x6, 0x7f });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xbc, gbc.sp());
        EXPECT(0x8602, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x8600));
        EXPECT(0x7f, gbc.readMem(0x8601));
        // 06 02C9
        gbc.setState(0x569d, 0x9396, 0x7940, 0x91f4, 0xaa34, 0xc1ee, 0x0, 0x0);
        gbc.writeMem(0x569d, { 0x6, 0x9a });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x9396, gbc.sp());
        EXPECT(0x569f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 02CA
        gbc.setState(0x6c05, 0x83c6, 0xa3d0, 0xd2c0, 0xc8, 0xd805, 0x0, 0x1);
        gbc.writeMem(0x6c05, { 0x6, 0xcc });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x83c6, gbc.sp());
        EXPECT(0x6c07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 02CB
        gbc.setState(0x392, 0xa21f, 0x5080, 0x5132, 0xc135, 0xfed4, 0x0, 0x0);
        gbc.writeMem(0x392, { 0x6, 0x5d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa21f, gbc.sp());
        EXPECT(0x394, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 02CC
        gbc.setState(0xf16, 0xa9e0, 0x88e0, 0xf420, 0xaf3, 0x5e5f, 0x0, 0x0);
        gbc.writeMem(0xf16, { 0x6, 0xea });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa9e0, gbc.sp());
        EXPECT(0xf18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 02CD
        gbc.setState(0xe6b8, 0xb555, 0x2dd0, 0x21d6, 0x1ffd, 0x2e8, 0x1, 0x0);
        gbc.writeMem(0xe6b8, { 0x6, 0x39 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb555, gbc.sp());
        EXPECT(0xe6ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xe6b8));
        EXPECT(0x39, gbc.readMem(0xe6b9));
        // 06 02CE
        gbc.setState(0x985a, 0x4d07, 0x47b0, 0x686c, 0x9025, 0x3fc0, 0x0, 0x1);
        gbc.writeMem(0x985a, { 0x6, 0x5c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x4d07, gbc.sp());
        EXPECT(0x985c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x985a));
        EXPECT(0x5c, gbc.readMem(0x985b));
        // 06 02CF
        gbc.setState(0x18e5, 0x3989, 0xf60, 0x9e76, 0xbfa3, 0xd411, 0x1, 0x0);
        gbc.writeMem(0x18e5, { 0x6, 0xc5 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x3989, gbc.sp());
        EXPECT(0x18e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 02D0
        gbc.setState(0x6dca, 0xd783, 0xf490, 0xa6e9, 0x4dae, 0x8064, 0x1, 0x0);
        gbc.writeMem(0x6dca, { 0x6, 0xcc });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd783, gbc.sp());
        EXPECT(0x6dcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 02D1
        gbc.setState(0x8324, 0xbe04, 0x3b70, 0x1cf9, 0xb998, 0x987e, 0x0, 0x0);
        gbc.writeMem(0x8324, { 0x6, 0xf8 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xbe04, gbc.sp());
        EXPECT(0x8326, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x8324));
        EXPECT(0xf8, gbc.readMem(0x8325));
        // 06 02D2
        gbc.setState(0x8398, 0x43d0, 0x4770, 0x73c0, 0xc695, 0xcd55, 0x1, 0x0);
        gbc.writeMem(0x8398, { 0x6, 0x9 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x43d0, gbc.sp());
        EXPECT(0x839a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x8398));
        EXPECT(0x9, gbc.readMem(0x8399));
        // 06 02D3
        gbc.setState(0x453e, 0x1c2e, 0x1710, 0xd519, 0xa96, 0xe0d, 0x1, 0x0);
        gbc.writeMem(0x453e, { 0x6, 0x8 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x1c2e, gbc.sp());
        EXPECT(0x4540, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 02D4
        gbc.setState(0x5d36, 0x7b23, 0xa690, 0xaa13, 0xb1fc, 0x19b0, 0x1, 0x0);
        gbc.writeMem(0x5d36, { 0x6, 0x54 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7b23, gbc.sp());
        EXPECT(0x5d38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 02D5
        gbc.setState(0xec82, 0x712d, 0x3eb0, 0xc239, 0xeb6c, 0x2e70, 0x1, 0x1);
        gbc.writeMem(0xec82, { 0x6, 0x66 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x712d, gbc.sp());
        EXPECT(0xec84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xec82));
        EXPECT(0x66, gbc.readMem(0xec83));
        // 06 02D6
        gbc.setState(0x1eb5, 0x53fb, 0x31f0, 0x70a0, 0x354b, 0x8fa3, 0x0, 0x0);
        gbc.writeMem(0x1eb5, { 0x6, 0x8c });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x53fb, gbc.sp());
        EXPECT(0x1eb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 02D7
        gbc.setState(0xbe05, 0xd5a1, 0x500, 0x46b8, 0x6287, 0x7e1f, 0x0, 0x1);
        gbc.writeMem(0xbe05, { 0x6, 0x1f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xd5a1, gbc.sp());
        EXPECT(0xbe07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xbe05));
        EXPECT(0x1f, gbc.readMem(0xbe06));
        // 06 02D8
        gbc.setState(0xc02a, 0x288c, 0x5560, 0x55ec, 0x23da, 0xfe3e, 0x1, 0x0);
        gbc.writeMem(0xc02a, { 0x6, 0xc1 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x288c, gbc.sp());
        EXPECT(0xc02c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xc02a));
        EXPECT(0xc1, gbc.readMem(0xc02b));
        // 06 02DA
        gbc.setState(0x70df, 0x2b6a, 0x7480, 0xea70, 0x139e, 0x607e, 0x1, 0x0);
        gbc.writeMem(0x70df, { 0x6, 0x3f });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x2b6a, gbc.sp());
        EXPECT(0x70e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 02DB
        gbc.setState(0xd3e2, 0x832b, 0xaad0, 0xd03e, 0xaa4f, 0xbfc2, 0x1, 0x1);
        gbc.writeMem(0xd3e2, { 0x6, 0x7 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x832b, gbc.sp());
        EXPECT(0xd3e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd3e2));
        EXPECT(0x7, gbc.readMem(0xd3e3));
        // 06 02DC
        gbc.setState(0xeba8, 0x7006, 0x2f20, 0xa978, 0x8513, 0x171c, 0x0, 0x1);
        gbc.writeMem(0xeba8, { 0x6, 0x1d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x7006, gbc.sp());
        EXPECT(0xebaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xeba8));
        EXPECT(0x1d, gbc.readMem(0xeba9));
        // 06 02DD
        gbc.setState(0xd19d, 0x7537, 0xf680, 0x4489, 0x51f2, 0x1a5a, 0x0, 0x1);
        gbc.writeMem(0xd19d, { 0x6, 0xbc });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x7537, gbc.sp());
        EXPECT(0xd19f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd19d));
        EXPECT(0xbc, gbc.readMem(0xd19e));
        // 06 02DE
        gbc.setState(0xc423, 0x15e7, 0x4880, 0xcfbc, 0x1ab7, 0xb28, 0x0, 0x1);
        gbc.writeMem(0xc423, { 0x6, 0x48 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x15e7, gbc.sp());
        EXPECT(0xc425, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xc423));
        EXPECT(0x48, gbc.readMem(0xc424));
        // 06 02DF
        gbc.setState(0x7aee, 0xc651, 0xe930, 0x3296, 0x953d, 0xc7f2, 0x1, 0x0);
        gbc.writeMem(0x7aee, { 0x6, 0xb1 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc651, gbc.sp());
        EXPECT(0x7af0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 02E0
        gbc.setState(0xeb49, 0xdfbd, 0x78e0, 0xed2, 0xabe0, 0xc902, 0x1, 0x0);
        gbc.writeMem(0xeb49, { 0x6, 0xf5 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xdfbd, gbc.sp());
        EXPECT(0xeb4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xeb49));
        EXPECT(0xf5, gbc.readMem(0xeb4a));
        // 06 02E1
        gbc.setState(0x8a7, 0xcc0b, 0xf930, 0x320d, 0x7640, 0x91a8, 0x1, 0x1);
        gbc.writeMem(0x8a7, { 0x6, 0x46 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xcc0b, gbc.sp());
        EXPECT(0x8a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 02E2
        gbc.setState(0x8290, 0x3d61, 0xaae0, 0x41e, 0x6331, 0xb3b9, 0x1, 0x0);
        gbc.writeMem(0x8290, { 0x6, 0x7b });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3d61, gbc.sp());
        EXPECT(0x8292, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x8290));
        EXPECT(0x7b, gbc.readMem(0x8291));
        // 06 02E3
        gbc.setState(0x71f9, 0x35a7, 0x6550, 0x5e1, 0x3938, 0x49a6, 0x1, 0x1);
        gbc.writeMem(0x71f9, { 0x6, 0xeb });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x35a7, gbc.sp());
        EXPECT(0x71fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 02E4
        gbc.setState(0x5c6e, 0x15a, 0x2e00, 0x98f7, 0x22eb, 0xee65, 0x1, 0x1);
        gbc.writeMem(0x5c6e, { 0x6, 0xc3 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x15a, gbc.sp());
        EXPECT(0x5c70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 02E5
        gbc.setState(0x2589, 0xec8e, 0xadc0, 0x7f8, 0xea13, 0x9294, 0x1, 0x1);
        gbc.writeMem(0x2589, { 0x6, 0xa6 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xec8e, gbc.sp());
        EXPECT(0x258b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 02E6
        gbc.setState(0xfaf, 0x7614, 0xe090, 0x2d4e, 0xc640, 0x1c7d, 0x1, 0x0);
        gbc.writeMem(0xfaf, { 0x6, 0x41 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7614, gbc.sp());
        EXPECT(0xfb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 02E7
        gbc.setState(0x9409, 0x1c1, 0x4800, 0x39ca, 0xcb40, 0x6237, 0x0, 0x1);
        gbc.writeMem(0x9409, { 0x6, 0x20 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x1c1, gbc.sp());
        EXPECT(0x940b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x9409));
        EXPECT(0x20, gbc.readMem(0x940a));
        // 06 02E8
        gbc.setState(0xe51, 0xe40b, 0x5810, 0xa352, 0x1202, 0x827a, 0x0, 0x0);
        gbc.writeMem(0xe51, { 0x6, 0x2 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe40b, gbc.sp());
        EXPECT(0xe53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 02E9
        gbc.setState(0xcf17, 0xe957, 0xf530, 0x9afd, 0x87eb, 0xec41, 0x0, 0x1);
        gbc.writeMem(0xcf17, { 0x6, 0xe8 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xe957, gbc.sp());
        EXPECT(0xcf19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xcf17));
        EXPECT(0xe8, gbc.readMem(0xcf18));
        // 06 02EA
        gbc.setState(0x39, 0x51d6, 0x2690, 0x2cc8, 0x4770, 0x80c0, 0x1, 0x1);
        gbc.writeMem(0x39, { 0x6, 0x6d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x51d6, gbc.sp());
        EXPECT(0x3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 02EB
        gbc.setState(0x4055, 0xf94b, 0x5610, 0x18d2, 0xeb2b, 0xc27c, 0x1, 0x1);
        gbc.writeMem(0x4055, { 0x6, 0xe8 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf94b, gbc.sp());
        EXPECT(0x4057, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 02EC
        gbc.setState(0x3a7f, 0x3233, 0x1c0, 0x4fd9, 0x6f41, 0xa50, 0x1, 0x0);
        gbc.writeMem(0x3a7f, { 0x6, 0xc1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x3233, gbc.sp());
        EXPECT(0x3a81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 02ED
        gbc.setState(0x8b52, 0x1d15, 0xe030, 0xb272, 0xd6df, 0xb297, 0x1, 0x1);
        gbc.writeMem(0x8b52, { 0x6, 0x47 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x1d15, gbc.sp());
        EXPECT(0x8b54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x8b52));
        EXPECT(0x47, gbc.readMem(0x8b53));
        // 06 02EE
        gbc.setState(0xce18, 0xb22e, 0x4200, 0x8ea5, 0x4dcf, 0x51de, 0x1, 0x1);
        gbc.writeMem(0xce18, { 0x6, 0xc6 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb22e, gbc.sp());
        EXPECT(0xce1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xce18));
        EXPECT(0xc6, gbc.readMem(0xce19));
        // 06 02EF
        gbc.setState(0xc890, 0x5e69, 0xd3d0, 0xf504, 0x9a58, 0x3f5a, 0x0, 0x0);
        gbc.writeMem(0xc890, { 0x6, 0xac });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x5e69, gbc.sp());
        EXPECT(0xc892, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xc890));
        EXPECT(0xac, gbc.readMem(0xc891));
        // 06 02F0
        gbc.setState(0x7ff6, 0x8155, 0x7550, 0x8961, 0x8a07, 0x17bf, 0x1, 0x1);
        gbc.writeMem(0x7ff6, { 0x6, 0x38 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x8155, gbc.sp());
        EXPECT(0x7ff8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 02F1
        gbc.setState(0x12b5, 0xceab, 0x8f0, 0x47c3, 0x211a, 0x6acb, 0x0, 0x1);
        gbc.writeMem(0x12b5, { 0x6, 0x5e });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xceab, gbc.sp());
        EXPECT(0x12b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 02F2
        gbc.setState(0x457f, 0xb765, 0x74c0, 0x10e6, 0x8447, 0x9e48, 0x0, 0x1);
        gbc.writeMem(0x457f, { 0x6, 0x32 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xb765, gbc.sp());
        EXPECT(0x4581, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 02F3
        gbc.setState(0x9453, 0x9604, 0xf8e0, 0x2f88, 0x9c65, 0xb834, 0x0, 0x0);
        gbc.writeMem(0x9453, { 0x6, 0x4 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x9604, gbc.sp());
        EXPECT(0x9455, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x9453));
        EXPECT(0x4, gbc.readMem(0x9454));
        // 06 02F4
        gbc.setState(0x3b2a, 0x4683, 0xcd30, 0x4e22, 0x84e8, 0xce1f, 0x1, 0x1);
        gbc.writeMem(0x3b2a, { 0x6, 0x7f });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x4683, gbc.sp());
        EXPECT(0x3b2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 02F5
        gbc.setState(0xa065, 0x312e, 0x4280, 0x8574, 0x6eeb, 0xdc6e, 0x1, 0x0);
        gbc.writeMem(0xa065, { 0x6, 0x62 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x312e, gbc.sp());
        EXPECT(0xa067, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa065));
        EXPECT(0x62, gbc.readMem(0xa066));
        // 06 02F6
        gbc.setState(0x6418, 0xa33c, 0xe1e0, 0xc0c4, 0x8c68, 0xd57a, 0x1, 0x1);
        gbc.writeMem(0x6418, { 0x6, 0x56 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xa33c, gbc.sp());
        EXPECT(0x641a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 02F8
        gbc.setState(0xb72a, 0x66e2, 0xfc20, 0x16aa, 0x593f, 0x7a13, 0x1, 0x0);
        gbc.writeMem(0xb72a, { 0x6, 0x8f });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x66e2, gbc.sp());
        EXPECT(0xb72c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xb72a));
        EXPECT(0x8f, gbc.readMem(0xb72b));
        // 06 02FA
        gbc.setState(0x44a6, 0x4450, 0x9de0, 0xf6c5, 0xf31c, 0x331d, 0x0, 0x0);
        gbc.writeMem(0x44a6, { 0x6, 0x6f });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x4450, gbc.sp());
        EXPECT(0x44a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 02FC
        gbc.setState(0x4e36, 0x3576, 0x8380, 0x757c, 0x7828, 0x68a0, 0x1, 0x0);
        gbc.writeMem(0x4e36, { 0x6, 0x77 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3576, gbc.sp());
        EXPECT(0x4e38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 02FD
        gbc.setState(0x491c, 0xc7e6, 0x6360, 0xba92, 0xe4d, 0x73e, 0x0, 0x1);
        gbc.writeMem(0x491c, { 0x6, 0x31 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xc7e6, gbc.sp());
        EXPECT(0x491e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0300
        gbc.setState(0x61b0, 0x4c06, 0x9a80, 0x84c4, 0xf439, 0xcd49, 0x1, 0x0);
        gbc.writeMem(0x61b0, { 0x6, 0xe3 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4c06, gbc.sp());
        EXPECT(0x61b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0301
        gbc.setState(0xd94b, 0x5340, 0xf7b0, 0x4f90, 0xaff5, 0x5ec, 0x0, 0x1);
        gbc.writeMem(0xd94b, { 0x6, 0x11 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x5340, gbc.sp());
        EXPECT(0xd94d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd94b));
        EXPECT(0x11, gbc.readMem(0xd94c));
        // 06 0302
        gbc.setState(0x1f6, 0x8452, 0x2850, 0xa536, 0xfb29, 0x71ee, 0x0, 0x1);
        gbc.writeMem(0x1f6, { 0x6, 0x72 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x8452, gbc.sp());
        EXPECT(0x1f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0303
        gbc.setState(0xc7b3, 0xcf7b, 0x7660, 0x494c, 0x22a, 0x8d7b, 0x1, 0x0);
        gbc.writeMem(0xc7b3, { 0x6, 0x57 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xcf7b, gbc.sp());
        EXPECT(0xc7b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xc7b3));
        EXPECT(0x57, gbc.readMem(0xc7b4));
        // 06 0304
        gbc.setState(0x32a1, 0xa0e7, 0xb070, 0x972c, 0xb8d8, 0xe3d3, 0x1, 0x1);
        gbc.writeMem(0x32a1, { 0x6, 0xa1 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xa0e7, gbc.sp());
        EXPECT(0x32a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0305
        gbc.setState(0xd7a3, 0x6557, 0x1d30, 0x928f, 0x6f51, 0x38cc, 0x0, 0x1);
        gbc.writeMem(0xd7a3, { 0x6, 0x8f });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x6557, gbc.sp());
        EXPECT(0xd7a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd7a3));
        EXPECT(0x8f, gbc.readMem(0xd7a4));
        // 06 0306
        gbc.setState(0x93ee, 0x46f9, 0xc020, 0xc26f, 0xf810, 0xc205, 0x1, 0x1);
        gbc.writeMem(0x93ee, { 0x6, 0x46 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x46f9, gbc.sp());
        EXPECT(0x93f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x93ee));
        EXPECT(0x46, gbc.readMem(0x93ef));
        // 06 0308
        gbc.setState(0x1208, 0xfb3a, 0x4da0, 0x5eb1, 0x38c6, 0xa56e, 0x0, 0x1);
        gbc.writeMem(0x1208, { 0x6, 0x61 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xfb3a, gbc.sp());
        EXPECT(0x120a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0309
        gbc.setState(0x9966, 0x72d2, 0x6680, 0x7821, 0xdb77, 0x26cc, 0x0, 0x1);
        gbc.writeMem(0x9966, { 0x6, 0x5b });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x72d2, gbc.sp());
        EXPECT(0x9968, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x9966));
        EXPECT(0x5b, gbc.readMem(0x9967));
        // 06 030A
        gbc.setState(0x15a, 0x25b2, 0x8c50, 0xf72e, 0x4af7, 0xd1a7, 0x1, 0x0);
        gbc.writeMem(0x15a, { 0x6, 0x9b });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x25b2, gbc.sp());
        EXPECT(0x15c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 030B
        gbc.setState(0xd833, 0xf812, 0xcd50, 0x860, 0xd0ed, 0xdfcf, 0x1, 0x1);
        gbc.writeMem(0xd833, { 0x6, 0x47 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xf812, gbc.sp());
        EXPECT(0xd835, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd833));
        EXPECT(0x47, gbc.readMem(0xd834));
        // 06 030C
        gbc.setState(0x7b1b, 0xd356, 0x23c0, 0x1c24, 0x6b42, 0x5462, 0x1, 0x1);
        gbc.writeMem(0x7b1b, { 0x6, 0x4 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xd356, gbc.sp());
        EXPECT(0x7b1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 030D
        gbc.setState(0x1df6, 0x80d2, 0x31d0, 0x720, 0x9f15, 0x3d02, 0x0, 0x0);
        gbc.writeMem(0x1df6, { 0x6, 0x9a });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x80d2, gbc.sp());
        EXPECT(0x1df8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 030E
        gbc.setState(0x284, 0xe2b7, 0xbd90, 0x13ba, 0x5217, 0xca6e, 0x0, 0x1);
        gbc.writeMem(0x284, { 0x6, 0x2d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xe2b7, gbc.sp());
        EXPECT(0x286, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 030F
        gbc.setState(0xb0ab, 0x9a9e, 0x5300, 0xcad, 0xcdf9, 0x2045, 0x1, 0x0);
        gbc.writeMem(0xb0ab, { 0x6, 0xcc });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9a9e, gbc.sp());
        EXPECT(0xb0ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xb0ab));
        EXPECT(0xcc, gbc.readMem(0xb0ac));
        // 06 0310
        gbc.setState(0x24f2, 0x6696, 0x4dc0, 0x2d3e, 0xcca0, 0x62c2, 0x1, 0x0);
        gbc.writeMem(0x24f2, { 0x6, 0x8d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6696, gbc.sp());
        EXPECT(0x24f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0311
        gbc.setState(0xaebd, 0x6822, 0x3040, 0x8225, 0xd73e, 0xefa4, 0x1, 0x1);
        gbc.writeMem(0xaebd, { 0x6, 0x63 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x6822, gbc.sp());
        EXPECT(0xaebf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xaebd));
        EXPECT(0x63, gbc.readMem(0xaebe));
        // 06 0312
        gbc.setState(0xabb8, 0xf156, 0xb800, 0xef78, 0x845c, 0xfa56, 0x1, 0x1);
        gbc.writeMem(0xabb8, { 0x6, 0x1a });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xf156, gbc.sp());
        EXPECT(0xabba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xabb8));
        EXPECT(0x1a, gbc.readMem(0xabb9));
        // 06 0313
        gbc.setState(0x2760, 0xe62f, 0x8770, 0x1292, 0xb265, 0x52f2, 0x0, 0x1);
        gbc.writeMem(0x2760, { 0x6, 0x18 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xe62f, gbc.sp());
        EXPECT(0x2762, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0314
        gbc.setState(0x4952, 0xb60d, 0xbbb0, 0x40f2, 0xe27d, 0x8246, 0x0, 0x0);
        gbc.writeMem(0x4952, { 0x6, 0x6a });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xb60d, gbc.sp());
        EXPECT(0x4954, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0315
        gbc.setState(0x1388, 0x9e2b, 0x2a40, 0x41a9, 0x9ebd, 0x2b38, 0x1, 0x0);
        gbc.writeMem(0x1388, { 0x6, 0xd6 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x9e2b, gbc.sp());
        EXPECT(0x138a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0316
        gbc.setState(0x2d2b, 0x3878, 0x2ea0, 0xe23e, 0xb072, 0x393a, 0x1, 0x1);
        gbc.writeMem(0x2d2b, { 0x6, 0x6 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x3878, gbc.sp());
        EXPECT(0x2d2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0317
        gbc.setState(0x1fbf, 0x6a4e, 0xa850, 0xda46, 0xa359, 0xa90c, 0x0, 0x0);
        gbc.writeMem(0x1fbf, { 0x6, 0xe9 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x6a4e, gbc.sp());
        EXPECT(0x1fc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0318
        gbc.setState(0xc8b9, 0xf30, 0x7300, 0x3213, 0x82f9, 0xab09, 0x0, 0x1);
        gbc.writeMem(0xc8b9, { 0x6, 0xa1 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf30, gbc.sp());
        EXPECT(0xc8bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xc8b9));
        EXPECT(0xa1, gbc.readMem(0xc8ba));
        // 06 0319
        gbc.setState(0x9630, 0xc3ff, 0xba90, 0x26e, 0x68d1, 0x69a4, 0x1, 0x0);
        gbc.writeMem(0x9630, { 0x6, 0x13 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xc3ff, gbc.sp());
        EXPECT(0x9632, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x9630));
        EXPECT(0x13, gbc.readMem(0x9631));
        // 06 031A
        gbc.setState(0x46f6, 0xc90e, 0x90e0, 0xff44, 0x5256, 0x33e7, 0x1, 0x1);
        gbc.writeMem(0x46f6, { 0x6, 0x85 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc90e, gbc.sp());
        EXPECT(0x46f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 031B
        gbc.setState(0x16dc, 0xd6a0, 0x1300, 0x3442, 0xfe54, 0x3f27, 0x0, 0x0);
        gbc.writeMem(0x16dc, { 0x6, 0x11 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd6a0, gbc.sp());
        EXPECT(0x16de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 031C
        gbc.setState(0xeeb0, 0x796a, 0x2c20, 0x187a, 0x2c2d, 0x2f57, 0x0, 0x1);
        gbc.writeMem(0xeeb0, { 0x6, 0x43 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x796a, gbc.sp());
        EXPECT(0xeeb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xeeb0));
        EXPECT(0x43, gbc.readMem(0xeeb1));
        // 06 031D
        gbc.setState(0x13d9, 0x3b87, 0x7f50, 0x8d9e, 0xd4f5, 0xc5b3, 0x0, 0x1);
        gbc.writeMem(0x13d9, { 0x6, 0xd5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x3b87, gbc.sp());
        EXPECT(0x13db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 031E
        gbc.setState(0xb247, 0x400, 0xeec0, 0xb93c, 0x3cf3, 0xaeff, 0x1, 0x1);
        gbc.writeMem(0xb247, { 0x6, 0xb2 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x400, gbc.sp());
        EXPECT(0xb249, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xb247));
        EXPECT(0xb2, gbc.readMem(0xb248));
        // 06 031F
        gbc.setState(0xfb5, 0x59e2, 0xb530, 0xc8b2, 0x6573, 0xe3ba, 0x1, 0x1);
        gbc.writeMem(0xfb5, { 0x6, 0xef });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x59e2, gbc.sp());
        EXPECT(0xfb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0320
        gbc.setState(0x5e07, 0x28c5, 0xfe70, 0x8b33, 0x2e1a, 0xaf0b, 0x0, 0x0);
        gbc.writeMem(0x5e07, { 0x6, 0x3b });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x28c5, gbc.sp());
        EXPECT(0x5e09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0321
        gbc.setState(0xd031, 0xc4be, 0xf660, 0xe40e, 0xd976, 0xfd62, 0x0, 0x0);
        gbc.writeMem(0xd031, { 0x6, 0x7e });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc4be, gbc.sp());
        EXPECT(0xd033, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd031));
        EXPECT(0x7e, gbc.readMem(0xd032));
        // 06 0322
        gbc.setState(0xb987, 0x64df, 0x45e0, 0x65de, 0xfae0, 0xb205, 0x0, 0x1);
        gbc.writeMem(0xb987, { 0x6, 0x25 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x64df, gbc.sp());
        EXPECT(0xb989, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xb987));
        EXPECT(0x25, gbc.readMem(0xb988));
        // 06 0323
        gbc.setState(0x9e12, 0x66b9, 0xab60, 0x4786, 0x73ee, 0xf075, 0x1, 0x1);
        gbc.writeMem(0x9e12, { 0x6, 0x23 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x66b9, gbc.sp());
        EXPECT(0x9e14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x9e12));
        EXPECT(0x23, gbc.readMem(0x9e13));
        // 06 0324
        gbc.setState(0xe255, 0xc176, 0xc450, 0xc618, 0xa4e6, 0xad56, 0x0, 0x0);
        gbc.writeMem(0xe255, { 0x6, 0x9c });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xc176, gbc.sp());
        EXPECT(0xe257, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xe255));
        EXPECT(0x9c, gbc.readMem(0xe256));
        // 06 0325
        gbc.setState(0x4c12, 0x39e6, 0xd740, 0x603a, 0x5434, 0x3ef4, 0x0, 0x1);
        gbc.writeMem(0x4c12, { 0x6, 0x46 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x39e6, gbc.sp());
        EXPECT(0x4c14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0326
        gbc.setState(0xd2d5, 0xe035, 0xebe0, 0x19ab, 0xc041, 0x5576, 0x0, 0x1);
        gbc.writeMem(0xd2d5, { 0x6, 0xef });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xe035, gbc.sp());
        EXPECT(0xd2d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd2d5));
        EXPECT(0xef, gbc.readMem(0xd2d6));
        // 06 0327
        gbc.setState(0x4ef5, 0x536a, 0xdd00, 0xd3a2, 0xfc5, 0x5d57, 0x1, 0x1);
        gbc.writeMem(0x4ef5, { 0x6, 0xb5 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x536a, gbc.sp());
        EXPECT(0x4ef7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0328
        gbc.setState(0xc73, 0xde0d, 0x5660, 0x80bf, 0x5f45, 0x462, 0x1, 0x1);
        gbc.writeMem(0xc73, { 0x6, 0x32 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xde0d, gbc.sp());
        EXPECT(0xc75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0329
        gbc.setState(0xe2c9, 0x5ff3, 0xcfe0, 0xdd0c, 0x7c0e, 0x1b46, 0x1, 0x0);
        gbc.writeMem(0xe2c9, { 0x6, 0xc7 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x5ff3, gbc.sp());
        EXPECT(0xe2cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xe2c9));
        EXPECT(0xc7, gbc.readMem(0xe2ca));
        // 06 032A
        gbc.setState(0x1121, 0x722b, 0xbb80, 0x5ec4, 0xbe02, 0x65b8, 0x0, 0x0);
        gbc.writeMem(0x1121, { 0x6, 0xd0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x722b, gbc.sp());
        EXPECT(0x1123, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 032B
        gbc.setState(0xe958, 0x6d5b, 0x45d0, 0x2798, 0x713d, 0x1116, 0x1, 0x1);
        gbc.writeMem(0xe958, { 0x6, 0x6e });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x6d5b, gbc.sp());
        EXPECT(0xe95a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xe958));
        EXPECT(0x6e, gbc.readMem(0xe959));
        // 06 032C
        gbc.setState(0xdba, 0x436a, 0xb6a0, 0x2903, 0x705c, 0xacce, 0x0, 0x0);
        gbc.writeMem(0xdba, { 0x6, 0x30 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x436a, gbc.sp());
        EXPECT(0xdbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 032E
        gbc.setState(0x7e5a, 0x50e2, 0x80b0, 0xb4af, 0x64a8, 0x56b0, 0x1, 0x1);
        gbc.writeMem(0x7e5a, { 0x6, 0x85 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x50e2, gbc.sp());
        EXPECT(0x7e5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 032F
        gbc.setState(0xd88c, 0x97ba, 0x1f20, 0x2f3d, 0x3ea9, 0xf347, 0x1, 0x1);
        gbc.writeMem(0xd88c, { 0x6, 0x10 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x97ba, gbc.sp());
        EXPECT(0xd88e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd88c));
        EXPECT(0x10, gbc.readMem(0xd88d));
        // 06 0330
        gbc.setState(0x1063, 0xdc6a, 0x8d40, 0xb8f4, 0x175c, 0x361c, 0x1, 0x1);
        gbc.writeMem(0x1063, { 0x6, 0x36 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xdc6a, gbc.sp());
        EXPECT(0x1065, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0331
        gbc.setState(0x46fa, 0xe64e, 0xd000, 0x1690, 0x91a1, 0xdb42, 0x0, 0x1);
        gbc.writeMem(0x46fa, { 0x6, 0xa1 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe64e, gbc.sp());
        EXPECT(0x46fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0332
        gbc.setState(0x6e42, 0xd4de, 0x7990, 0x8dd6, 0xf2e0, 0x2a2e, 0x1, 0x1);
        gbc.writeMem(0x6e42, { 0x6, 0x81 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xd4de, gbc.sp());
        EXPECT(0x6e44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0333
        gbc.setState(0xe77e, 0xf276, 0x4940, 0xb041, 0x5008, 0xe18e, 0x1, 0x1);
        gbc.writeMem(0xe77e, { 0x6, 0x61 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf276, gbc.sp());
        EXPECT(0xe780, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xe77e));
        EXPECT(0x61, gbc.readMem(0xe77f));
        // 06 0335
        gbc.setState(0x4d7e, 0xa1bf, 0xa1b0, 0x536a, 0x4150, 0xe134, 0x1, 0x0);
        gbc.writeMem(0x4d7e, { 0x6, 0xc6 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xa1bf, gbc.sp());
        EXPECT(0x4d80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0336
        gbc.setState(0x5b0b, 0x5167, 0xd100, 0xbf68, 0xce20, 0x140b, 0x1, 0x1);
        gbc.writeMem(0x5b0b, { 0x6, 0x8f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x5167, gbc.sp());
        EXPECT(0x5b0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0337
        gbc.setState(0xba8c, 0x6779, 0xda30, 0x693c, 0x4555, 0xab94, 0x1, 0x0);
        gbc.writeMem(0xba8c, { 0x6, 0x83 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x6779, gbc.sp());
        EXPECT(0xba8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xba8c));
        EXPECT(0x83, gbc.readMem(0xba8d));
        // 06 0338
        gbc.setState(0xa800, 0x64b8, 0xe7f0, 0x2bcc, 0x8360, 0x81ad, 0x1, 0x0);
        gbc.writeMem(0xa800, { 0x6, 0x84 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x64b8, gbc.sp());
        EXPECT(0xa802, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa800));
        EXPECT(0x84, gbc.readMem(0xa801));
        // 06 0339
        gbc.setState(0xc098, 0xe05e, 0x91a0, 0xdee6, 0x9c17, 0x7664, 0x0, 0x1);
        gbc.writeMem(0xc098, { 0x6, 0xae });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xe05e, gbc.sp());
        EXPECT(0xc09a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xc098));
        EXPECT(0xae, gbc.readMem(0xc099));
        // 06 033A
        gbc.setState(0x334b, 0x6e65, 0x4b10, 0x3d85, 0xb07f, 0xdb9d, 0x0, 0x1);
        gbc.writeMem(0x334b, { 0x6, 0x6a });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x6e65, gbc.sp());
        EXPECT(0x334d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 033B
        gbc.setState(0xae63, 0xcb6e, 0xf480, 0xcea2, 0xe753, 0x5a10, 0x1, 0x1);
        gbc.writeMem(0xae63, { 0x6, 0xdf });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xcb6e, gbc.sp());
        EXPECT(0xae65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xae63));
        EXPECT(0xdf, gbc.readMem(0xae64));
        // 06 033C
        gbc.setState(0x6159, 0x5a9, 0x26d0, 0x5de3, 0x507d, 0x1048, 0x0, 0x1);
        gbc.writeMem(0x6159, { 0x6, 0x37 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x5a9, gbc.sp());
        EXPECT(0x615b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 033D
        gbc.setState(0x6186, 0xdbce, 0x22d0, 0xc327, 0x4ff7, 0x83fe, 0x1, 0x1);
        gbc.writeMem(0x6186, { 0x6, 0x74 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xdbce, gbc.sp());
        EXPECT(0x6188, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 033E
        gbc.setState(0x4d04, 0x2c12, 0xd850, 0xb918, 0x6c34, 0x8a5, 0x0, 0x0);
        gbc.writeMem(0x4d04, { 0x6, 0x68 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2c12, gbc.sp());
        EXPECT(0x4d06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 033F
        gbc.setState(0x9c27, 0xf80e, 0x2740, 0x47fd, 0x930, 0xf2af, 0x1, 0x0);
        gbc.writeMem(0x9c27, { 0x6, 0xf0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf80e, gbc.sp());
        EXPECT(0x9c29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x9c27));
        EXPECT(0xf0, gbc.readMem(0x9c28));
        // 06 0340
        gbc.setState(0x3970, 0x211c, 0x1d20, 0xa8dc, 0xd0c9, 0x54b1, 0x0, 0x0);
        gbc.writeMem(0x3970, { 0x6, 0xae });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x211c, gbc.sp());
        EXPECT(0x3972, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0341
        gbc.setState(0x5aca, 0xe19e, 0xc8a0, 0x9200, 0x45ca, 0xb547, 0x1, 0x0);
        gbc.writeMem(0x5aca, { 0x6, 0x56 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe19e, gbc.sp());
        EXPECT(0x5acc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0342
        gbc.setState(0xdfbb, 0x2f8a, 0x5450, 0xb986, 0x63e4, 0xbb9f, 0x0, 0x1);
        gbc.writeMem(0xdfbb, { 0x6, 0xa5 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x2f8a, gbc.sp());
        EXPECT(0xdfbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xdfbb));
        EXPECT(0xa5, gbc.readMem(0xdfbc));
        // 06 0343
        gbc.setState(0x5bb7, 0x85f5, 0xac20, 0x16aa, 0x4f53, 0xc7a1, 0x0, 0x1);
        gbc.writeMem(0x5bb7, { 0x6, 0x7 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x85f5, gbc.sp());
        EXPECT(0x5bb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0344
        gbc.setState(0x3fa8, 0x3dec, 0x67f0, 0x5deb, 0xcf1f, 0xea5d, 0x0, 0x0);
        gbc.writeMem(0x3fa8, { 0x6, 0xc7 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x3dec, gbc.sp());
        EXPECT(0x3faa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0345
        gbc.setState(0xacf2, 0x77d6, 0xead0, 0xd170, 0x9caf, 0xe731, 0x0, 0x0);
        gbc.writeMem(0xacf2, { 0x6, 0x9f });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x77d6, gbc.sp());
        EXPECT(0xacf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xacf2));
        EXPECT(0x9f, gbc.readMem(0xacf3));
        // 06 0346
        gbc.setState(0x6fd4, 0xbb9c, 0x1b80, 0x1d7a, 0xa8b3, 0xa8fa, 0x1, 0x0);
        gbc.writeMem(0x6fd4, { 0x6, 0x9 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xbb9c, gbc.sp());
        EXPECT(0x6fd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0347
        gbc.setState(0xa313, 0x889f, 0xcb70, 0x6ee, 0x1110, 0xb872, 0x0, 0x1);
        gbc.writeMem(0xa313, { 0x6, 0x3b });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x889f, gbc.sp());
        EXPECT(0xa315, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa313));
        EXPECT(0x3b, gbc.readMem(0xa314));
        // 06 0348
        gbc.setState(0xdc3d, 0xe11b, 0xec0, 0xc593, 0x52ef, 0xf99b, 0x0, 0x0);
        gbc.writeMem(0xdc3d, { 0x6, 0xf0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe11b, gbc.sp());
        EXPECT(0xdc3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xdc3d));
        EXPECT(0xf0, gbc.readMem(0xdc3e));
        // 06 0349
        gbc.setState(0x3ec3, 0xcaaa, 0x2600, 0x8305, 0x27b6, 0x21f, 0x1, 0x1);
        gbc.writeMem(0x3ec3, { 0x6, 0x32 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xcaaa, gbc.sp());
        EXPECT(0x3ec5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 034A
        gbc.setState(0x92a8, 0x731b, 0xe2e0, 0xb3fb, 0xebcb, 0x35fc, 0x1, 0x1);
        gbc.writeMem(0x92a8, { 0x6, 0xf0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x731b, gbc.sp());
        EXPECT(0x92aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x92a8));
        EXPECT(0xf0, gbc.readMem(0x92a9));
        // 06 034C
        gbc.setState(0xb51f, 0x623b, 0x8490, 0x909c, 0x8ca1, 0xd42a, 0x0, 0x1);
        gbc.writeMem(0xb51f, { 0x6, 0xd0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x623b, gbc.sp());
        EXPECT(0xb521, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xb51f));
        EXPECT(0xd0, gbc.readMem(0xb520));
        // 06 034D
        gbc.setState(0x1b14, 0xb5ac, 0xeb00, 0xfa99, 0xb0d7, 0x8886, 0x0, 0x1);
        gbc.writeMem(0x1b14, { 0x6, 0xfa });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xb5ac, gbc.sp());
        EXPECT(0x1b16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 034E
        gbc.setState(0x6ead, 0x47c5, 0xc220, 0xdbf0, 0x16e7, 0x217d, 0x1, 0x0);
        gbc.writeMem(0x6ead, { 0x6, 0x60 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x47c5, gbc.sp());
        EXPECT(0x6eaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 034F
        gbc.setState(0x7c99, 0xd413, 0xd1f0, 0x75f4, 0x776f, 0x82ef, 0x0, 0x1);
        gbc.writeMem(0x7c99, { 0x6, 0xc6 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xd413, gbc.sp());
        EXPECT(0x7c9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0350
        gbc.setState(0x4c74, 0xf51c, 0x5010, 0xbb5c, 0xa775, 0x3536, 0x1, 0x1);
        gbc.writeMem(0x4c74, { 0x6, 0x15 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xf51c, gbc.sp());
        EXPECT(0x4c76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0351
        gbc.setState(0xd4bd, 0x7ac7, 0xf870, 0x70c1, 0x99be, 0xb470, 0x0, 0x1);
        gbc.writeMem(0xd4bd, { 0x6, 0xd3 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7ac7, gbc.sp());
        EXPECT(0xd4bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd4bd));
        EXPECT(0xd3, gbc.readMem(0xd4be));
        // 06 0352
        gbc.setState(0x97c8, 0x3c37, 0x3a0, 0x5942, 0x5e7f, 0x7c56, 0x1, 0x0);
        gbc.writeMem(0x97c8, { 0x6, 0xbe });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x3c37, gbc.sp());
        EXPECT(0x97ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x97c8));
        EXPECT(0xbe, gbc.readMem(0x97c9));
        // 06 0353
        gbc.setState(0xf43, 0x7f58, 0xc2d0, 0x1f09, 0x3881, 0xc088, 0x1, 0x0);
        gbc.writeMem(0xf43, { 0x6, 0xd8 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x7f58, gbc.sp());
        EXPECT(0xf45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0354
        gbc.setState(0x3022, 0xef8b, 0xb870, 0x46b7, 0x1594, 0x4cbe, 0x1, 0x0);
        gbc.writeMem(0x3022, { 0x6, 0x57 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xef8b, gbc.sp());
        EXPECT(0x3024, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0355
        gbc.setState(0x632d, 0xdd28, 0x7f80, 0x1ab3, 0xf7fd, 0xa13f, 0x1, 0x0);
        gbc.writeMem(0x632d, { 0x6, 0xa2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xdd28, gbc.sp());
        EXPECT(0x632f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0356
        gbc.setState(0x16ed, 0x32c8, 0x9920, 0xa342, 0x1de8, 0x76d0, 0x1, 0x0);
        gbc.writeMem(0x16ed, { 0x6, 0x72 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x32c8, gbc.sp());
        EXPECT(0x16ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0358
        gbc.setState(0x59fb, 0xc906, 0x68c0, 0xe4f8, 0x7e48, 0x5d44, 0x0, 0x0);
        gbc.writeMem(0x59fb, { 0x6, 0x1c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xc906, gbc.sp());
        EXPECT(0x59fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0359
        gbc.setState(0x7c7d, 0x8251, 0x1db0, 0x15ce, 0xe91e, 0xe12c, 0x0, 0x1);
        gbc.writeMem(0x7c7d, { 0x6, 0x63 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x8251, gbc.sp());
        EXPECT(0x7c7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 035A
        gbc.setState(0x440d, 0x24a4, 0xe2b0, 0x8d9e, 0xc442, 0xc1ce, 0x0, 0x0);
        gbc.writeMem(0x440d, { 0x6, 0x74 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x24a4, gbc.sp());
        EXPECT(0x440f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 035C
        gbc.setState(0x8fac, 0x302e, 0x87a0, 0x1ebc, 0x1c6c, 0xdd8d, 0x0, 0x1);
        gbc.writeMem(0x8fac, { 0x6, 0x79 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x302e, gbc.sp());
        EXPECT(0x8fae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x8fac));
        EXPECT(0x79, gbc.readMem(0x8fad));
        // 06 035D
        gbc.setState(0x2879, 0x6c7f, 0xf430, 0xac13, 0xf90c, 0x204e, 0x1, 0x0);
        gbc.writeMem(0x2879, { 0x6, 0xc4 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x6c7f, gbc.sp());
        EXPECT(0x287b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 035E
        gbc.setState(0xaadc, 0xb849, 0x3590, 0xaef0, 0x515e, 0x8d45, 0x1, 0x0);
        gbc.writeMem(0xaadc, { 0x6, 0x7f });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xb849, gbc.sp());
        EXPECT(0xaade, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xaadc));
        EXPECT(0x7f, gbc.readMem(0xaadd));
        // 06 0360
        gbc.setState(0xa86a, 0x8687, 0xfc00, 0x61db, 0x619d, 0x1bb8, 0x1, 0x1);
        gbc.writeMem(0xa86a, { 0x6, 0xd5 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x8687, gbc.sp());
        EXPECT(0xa86c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa86a));
        EXPECT(0xd5, gbc.readMem(0xa86b));
        // 06 0361
        gbc.setState(0xa3e8, 0xff73, 0x1550, 0xd5e8, 0x3af7, 0x1957, 0x0, 0x0);
        gbc.writeMem(0xa3e8, { 0x6, 0x93 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xff73, gbc.sp());
        EXPECT(0xa3ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa3e8));
        EXPECT(0x93, gbc.readMem(0xa3e9));
        // 06 0362
        gbc.setState(0x47a, 0xfacb, 0xbd40, 0xe9cd, 0x8326, 0x139e, 0x1, 0x1);
        gbc.writeMem(0x47a, { 0x6, 0x7a });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xfacb, gbc.sp());
        EXPECT(0x47c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0363
        gbc.setState(0x242f, 0x41ac, 0xb1c0, 0x84ce, 0xcf86, 0x84b7, 0x1, 0x1);
        gbc.writeMem(0x242f, { 0x6, 0x32 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x41ac, gbc.sp());
        EXPECT(0x2431, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0364
        gbc.setState(0x76bd, 0xb22a, 0x3650, 0x62fb, 0xa900, 0x24c9, 0x0, 0x0);
        gbc.writeMem(0x76bd, { 0x6, 0xd4 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xb22a, gbc.sp());
        EXPECT(0x76bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0365
        gbc.setState(0xba67, 0x1035, 0xa770, 0xb4c, 0x697e, 0x3ebb, 0x0, 0x1);
        gbc.writeMem(0xba67, { 0x6, 0xd6 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x1035, gbc.sp());
        EXPECT(0xba69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xba67));
        EXPECT(0xd6, gbc.readMem(0xba68));
        // 06 0366
        gbc.setState(0x1a69, 0xe266, 0xa410, 0x9c83, 0x2acf, 0x4bbb, 0x1, 0x1);
        gbc.writeMem(0x1a69, { 0x6, 0xd7 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xe266, gbc.sp());
        EXPECT(0x1a6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0367
        gbc.setState(0x8a89, 0x56dd, 0xaf30, 0x4a94, 0x5e26, 0xb705, 0x1, 0x0);
        gbc.writeMem(0x8a89, { 0x6, 0x8f });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x56dd, gbc.sp());
        EXPECT(0x8a8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x8a89));
        EXPECT(0x8f, gbc.readMem(0x8a8a));
        // 06 0368
        gbc.setState(0xe498, 0xafa3, 0x1f90, 0xdd6a, 0xd37e, 0x4b42, 0x0, 0x1);
        gbc.writeMem(0xe498, { 0x6, 0x7 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xafa3, gbc.sp());
        EXPECT(0xe49a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xe498));
        EXPECT(0x7, gbc.readMem(0xe499));
        // 06 0369
        gbc.setState(0x8dd9, 0x1062, 0x4340, 0x5120, 0x5f63, 0x2674, 0x1, 0x0);
        gbc.writeMem(0x8dd9, { 0x6, 0x72 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x1062, gbc.sp());
        EXPECT(0x8ddb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x8dd9));
        EXPECT(0x72, gbc.readMem(0x8dda));
        // 06 036A
        gbc.setState(0xa166, 0x9677, 0xfbe0, 0xdec8, 0x8f56, 0x698d, 0x1, 0x1);
        gbc.writeMem(0xa166, { 0x6, 0x11 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x9677, gbc.sp());
        EXPECT(0xa168, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa166));
        EXPECT(0x11, gbc.readMem(0xa167));
        // 06 036B
        gbc.setState(0x4562, 0x1872, 0xd5a0, 0x47a2, 0x6ab, 0x75ad, 0x0, 0x0);
        gbc.writeMem(0x4562, { 0x6, 0x51 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1872, gbc.sp());
        EXPECT(0x4564, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 036C
        gbc.setState(0x81fa, 0x6fe3, 0x7500, 0xb6a7, 0x61f, 0x749b, 0x0, 0x0);
        gbc.writeMem(0x81fa, { 0x6, 0x67 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6fe3, gbc.sp());
        EXPECT(0x81fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x81fa));
        EXPECT(0x67, gbc.readMem(0x81fb));
        // 06 036D
        gbc.setState(0x8b20, 0x8275, 0xc7b0, 0xc969, 0xd62, 0x6033, 0x1, 0x1);
        gbc.writeMem(0x8b20, { 0x6, 0x7f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x8275, gbc.sp());
        EXPECT(0x8b22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x8b20));
        EXPECT(0x7f, gbc.readMem(0x8b21));
        // 06 036F
        gbc.setState(0x4909, 0x681e, 0x2250, 0x415, 0xa911, 0x8334, 0x0, 0x1);
        gbc.writeMem(0x4909, { 0x6, 0xde });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x681e, gbc.sp());
        EXPECT(0x490b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0370
        gbc.setState(0xf59, 0x5121, 0xfca0, 0x56b2, 0x833b, 0x73ef, 0x0, 0x0);
        gbc.writeMem(0xf59, { 0x6, 0x91 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x5121, gbc.sp());
        EXPECT(0xf5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0371
        gbc.setState(0x43ed, 0x4127, 0x1490, 0x6df7, 0xbccb, 0xf034, 0x0, 0x1);
        gbc.writeMem(0x43ed, { 0x6, 0x4f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4127, gbc.sp());
        EXPECT(0x43ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0372
        gbc.setState(0x1536, 0x3162, 0xd6d0, 0xb846, 0x5374, 0xd61, 0x1, 0x1);
        gbc.writeMem(0x1536, { 0x6, 0xd7 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x3162, gbc.sp());
        EXPECT(0x1538, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0373
        gbc.setState(0x1144, 0x2b5, 0xd7b0, 0x4d3c, 0x6ac1, 0x6496, 0x0, 0x1);
        gbc.writeMem(0x1144, { 0x6, 0x63 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2b5, gbc.sp());
        EXPECT(0x1146, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0374
        gbc.setState(0x5cf, 0xbd60, 0xc7b0, 0x686e, 0xc00, 0x2230, 0x1, 0x0);
        gbc.writeMem(0x5cf, { 0x6, 0x11 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xbd60, gbc.sp());
        EXPECT(0x5d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0375
        gbc.setState(0xd816, 0x1af1, 0xdd60, 0x8eb6, 0x280a, 0xed6c, 0x1, 0x0);
        gbc.writeMem(0xd816, { 0x6, 0xa6 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x1af1, gbc.sp());
        EXPECT(0xd818, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd816));
        EXPECT(0xa6, gbc.readMem(0xd817));
        // 06 0376
        gbc.setState(0xe6b9, 0xbd76, 0x28d0, 0x4a5f, 0x9bf7, 0x501, 0x1, 0x1);
        gbc.writeMem(0xe6b9, { 0x6, 0xb0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xbd76, gbc.sp());
        EXPECT(0xe6bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xe6b9));
        EXPECT(0xb0, gbc.readMem(0xe6ba));
        // 06 0377
        gbc.setState(0xabda, 0x978d, 0x5cb0, 0xc82c, 0x6a95, 0x2e04, 0x1, 0x1);
        gbc.writeMem(0xabda, { 0x6, 0xde });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x978d, gbc.sp());
        EXPECT(0xabdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xabda));
        EXPECT(0xde, gbc.readMem(0xabdb));
        // 06 0378
        gbc.setState(0x49c1, 0x880d, 0xe6d0, 0xe4c4, 0x78dc, 0x706, 0x0, 0x1);
        gbc.writeMem(0x49c1, { 0x6, 0xde });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x880d, gbc.sp());
        EXPECT(0x49c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0379
        gbc.setState(0x14dd, 0xb05a, 0x4b20, 0x152d, 0xf34c, 0xafb7, 0x0, 0x0);
        gbc.writeMem(0x14dd, { 0x6, 0xe3 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xb05a, gbc.sp());
        EXPECT(0x14df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 037A
        gbc.setState(0x6bf1, 0xffb0, 0x36a0, 0x6a61, 0xefab, 0xf2bb, 0x0, 0x1);
        gbc.writeMem(0x6bf1, { 0x6, 0xa7 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xffb0, gbc.sp());
        EXPECT(0x6bf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 037B
        gbc.setState(0x38ee, 0xb137, 0xf110, 0x8d5e, 0x111, 0xf15c, 0x0, 0x0);
        gbc.writeMem(0x38ee, { 0x6, 0xa6 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xb137, gbc.sp());
        EXPECT(0x38f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 037C
        gbc.setState(0xe898, 0xc589, 0xe1a0, 0x788, 0x1500, 0x9909, 0x0, 0x0);
        gbc.writeMem(0xe898, { 0x6, 0x44 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xc589, gbc.sp());
        EXPECT(0xe89a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xe898));
        EXPECT(0x44, gbc.readMem(0xe899));
        // 06 037D
        gbc.setState(0xabff, 0x8039, 0xf5d0, 0x8539, 0xbf43, 0xf8f6, 0x1, 0x1);
        gbc.writeMem(0xabff, { 0x6, 0x72 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x8039, gbc.sp());
        EXPECT(0xac01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xabff));
        EXPECT(0x72, gbc.readMem(0xac00));
        // 06 037E
        gbc.setState(0x28bb, 0x5a90, 0x2be0, 0x9a7b, 0xc6fd, 0x2c53, 0x0, 0x0);
        gbc.writeMem(0x28bb, { 0x6, 0x80 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x5a90, gbc.sp());
        EXPECT(0x28bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 037F
        gbc.setState(0x37d8, 0xd067, 0xd020, 0xf57, 0xc6fb, 0xb8d7, 0x0, 0x0);
        gbc.writeMem(0x37d8, { 0x6, 0x59 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xd067, gbc.sp());
        EXPECT(0x37da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0380
        gbc.setState(0x9f7e, 0xb9de, 0xedc0, 0x9ad, 0xaabb, 0xb00e, 0x1, 0x1);
        gbc.writeMem(0x9f7e, { 0x6, 0x3b });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xb9de, gbc.sp());
        EXPECT(0x9f80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x9f7e));
        EXPECT(0x3b, gbc.readMem(0x9f7f));
        // 06 0381
        gbc.setState(0x6ec7, 0x4509, 0xef80, 0x7a40, 0x9fb4, 0x1dc2, 0x1, 0x0);
        gbc.writeMem(0x6ec7, { 0x6, 0x20 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4509, gbc.sp());
        EXPECT(0x6ec9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0383
        gbc.setState(0x95eb, 0x6752, 0x21d0, 0x9cba, 0xbb05, 0x9d22, 0x1, 0x1);
        gbc.writeMem(0x95eb, { 0x6, 0xf });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x6752, gbc.sp());
        EXPECT(0x95ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x95eb));
        EXPECT(0xf, gbc.readMem(0x95ec));
        // 06 0384
        gbc.setState(0xb930, 0xf3ed, 0x9210, 0xa99e, 0x3643, 0xff7a, 0x0, 0x0);
        gbc.writeMem(0xb930, { 0x6, 0x9f });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf3ed, gbc.sp());
        EXPECT(0xb932, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xb930));
        EXPECT(0x9f, gbc.readMem(0xb931));
        // 06 0385
        gbc.setState(0x9381, 0xb139, 0x8f60, 0xb890, 0xbb12, 0xc02d, 0x1, 0x1);
        gbc.writeMem(0x9381, { 0x6, 0x41 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xb139, gbc.sp());
        EXPECT(0x9383, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x9381));
        EXPECT(0x41, gbc.readMem(0x9382));
        // 06 0386
        gbc.setState(0x11d2, 0xb4eb, 0xe760, 0x6871, 0x6db9, 0x364a, 0x0, 0x1);
        gbc.writeMem(0x11d2, { 0x6, 0x18 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xb4eb, gbc.sp());
        EXPECT(0x11d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0387
        gbc.setState(0xbd7f, 0x8e1e, 0xa490, 0x4836, 0x2042, 0x7fe0, 0x0, 0x0);
        gbc.writeMem(0xbd7f, { 0x6, 0xb9 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x8e1e, gbc.sp());
        EXPECT(0xbd81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xbd7f));
        EXPECT(0xb9, gbc.readMem(0xbd80));
        // 06 0388
        gbc.setState(0x2cf, 0xe34f, 0xc450, 0x1d1d, 0x4827, 0x5c8d, 0x0, 0x0);
        gbc.writeMem(0x2cf, { 0x6, 0x9e });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe34f, gbc.sp());
        EXPECT(0x2d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0389
        gbc.setState(0x2e98, 0xe6c8, 0xa550, 0xa36e, 0xdf90, 0x6e28, 0x0, 0x1);
        gbc.writeMem(0x2e98, { 0x6, 0x92 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xe6c8, gbc.sp());
        EXPECT(0x2e9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 038A
        gbc.setState(0xb6f0, 0x8179, 0xdb80, 0x2ba4, 0xd58d, 0x4d00, 0x1, 0x1);
        gbc.writeMem(0xb6f0, { 0x6, 0x93 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x8179, gbc.sp());
        EXPECT(0xb6f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xb6f0));
        EXPECT(0x93, gbc.readMem(0xb6f1));
        // 06 038B
        gbc.setState(0x78b1, 0xfc4c, 0x9e50, 0x9244, 0xd4b6, 0x1dd0, 0x0, 0x1);
        gbc.writeMem(0x78b1, { 0x6, 0xaf });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xfc4c, gbc.sp());
        EXPECT(0x78b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 038C
        gbc.setState(0xe9d0, 0xacce, 0x2910, 0x73dc, 0x3d52, 0xfe1a, 0x1, 0x0);
        gbc.writeMem(0xe9d0, { 0x6, 0x90 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xacce, gbc.sp());
        EXPECT(0xe9d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xe9d0));
        EXPECT(0x90, gbc.readMem(0xe9d1));
        // 06 038D
        gbc.setState(0x89b9, 0xe149, 0xb900, 0x31bf, 0x5c38, 0xbdd3, 0x0, 0x1);
        gbc.writeMem(0x89b9, { 0x6, 0xd2 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xe149, gbc.sp());
        EXPECT(0x89bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x89b9));
        EXPECT(0xd2, gbc.readMem(0x89ba));
        // 06 038F
        gbc.setState(0x4adf, 0xe689, 0xf4a0, 0x9501, 0x4e5e, 0x9a57, 0x1, 0x1);
        gbc.writeMem(0x4adf, { 0x6, 0xfd });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xe689, gbc.sp());
        EXPECT(0x4ae1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0390
        gbc.setState(0x5c39, 0xf26f, 0x8800, 0x72c0, 0xebce, 0x852b, 0x0, 0x1);
        gbc.writeMem(0x5c39, { 0x6, 0xa0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf26f, gbc.sp());
        EXPECT(0x5c3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0391
        gbc.setState(0x38b1, 0xd14a, 0xaec0, 0xdd44, 0xdf15, 0x3a24, 0x0, 0x0);
        gbc.writeMem(0x38b1, { 0x6, 0x13 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xd14a, gbc.sp());
        EXPECT(0x38b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 0392
        gbc.setState(0xd002, 0x8b48, 0x5640, 0xd5d, 0xd4e3, 0x584e, 0x1, 0x0);
        gbc.writeMem(0xd002, { 0x6, 0x23 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8b48, gbc.sp());
        EXPECT(0xd004, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd002));
        EXPECT(0x23, gbc.readMem(0xd003));
        // 06 0393
        gbc.setState(0x7f64, 0x1c10, 0xa490, 0xdb89, 0x558c, 0x4a28, 0x1, 0x1);
        gbc.writeMem(0x7f64, { 0x6, 0xb8 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x1c10, gbc.sp());
        EXPECT(0x7f66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0394
        gbc.setState(0x4dd9, 0xecbd, 0x7650, 0xc4c6, 0xbf60, 0x1e93, 0x0, 0x0);
        gbc.writeMem(0x4dd9, { 0x6, 0x14 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xecbd, gbc.sp());
        EXPECT(0x4ddb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0395
        gbc.setState(0x871f, 0x3426, 0x4cf0, 0x12dd, 0x1ad8, 0x4807, 0x0, 0x0);
        gbc.writeMem(0x871f, { 0x6, 0xbf });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x3426, gbc.sp());
        EXPECT(0x8721, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x871f));
        EXPECT(0xbf, gbc.readMem(0x8720));
        // 06 0396
        gbc.setState(0xd6e4, 0x50a2, 0xcb00, 0x6d18, 0x68ae, 0xd9e, 0x0, 0x0);
        gbc.writeMem(0xd6e4, { 0x6, 0xca });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x50a2, gbc.sp());
        EXPECT(0xd6e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd6e4));
        EXPECT(0xca, gbc.readMem(0xd6e5));
        // 06 0397
        gbc.setState(0x7234, 0x3ef1, 0x9df0, 0x52fe, 0x9758, 0xb86e, 0x1, 0x1);
        gbc.writeMem(0x7234, { 0x6, 0x70 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x3ef1, gbc.sp());
        EXPECT(0x7236, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 0398
        gbc.setState(0x966d, 0xa9ea, 0x74a0, 0x2384, 0xd12, 0x878c, 0x0, 0x1);
        gbc.writeMem(0x966d, { 0x6, 0x5b });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xa9ea, gbc.sp());
        EXPECT(0x966f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x966d));
        EXPECT(0x5b, gbc.readMem(0x966e));
        // 06 0399
        gbc.setState(0x5105, 0x7951, 0xb8f0, 0xe1f8, 0xc803, 0x6d71, 0x0, 0x1);
        gbc.writeMem(0x5105, { 0x6, 0xb5 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7951, gbc.sp());
        EXPECT(0x5107, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 039A
        gbc.setState(0x8c4b, 0x1d63, 0x35a0, 0xfdcc, 0x8151, 0x453b, 0x0, 0x1);
        gbc.writeMem(0x8c4b, { 0x6, 0x80 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x1d63, gbc.sp());
        EXPECT(0x8c4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x8c4b));
        EXPECT(0x80, gbc.readMem(0x8c4c));
        // 06 039C
        gbc.setState(0x6b07, 0x5bc8, 0x31a0, 0x583d, 0xd0d7, 0x1369, 0x1, 0x0);
        gbc.writeMem(0x6b07, { 0x6, 0x72 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x5bc8, gbc.sp());
        EXPECT(0x6b09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 039D
        gbc.setState(0xdfaa, 0x7905, 0x1a90, 0x51ab, 0x22d0, 0x415b, 0x1, 0x0);
        gbc.writeMem(0xdfaa, { 0x6, 0x6c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7905, gbc.sp());
        EXPECT(0xdfac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xdfaa));
        EXPECT(0x6c, gbc.readMem(0xdfab));
        // 06 039E
        gbc.setState(0x1a59, 0xecb, 0x83a0, 0x8059, 0x9118, 0x5ce9, 0x1, 0x0);
        gbc.writeMem(0x1a59, { 0x6, 0x47 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xecb, gbc.sp());
        EXPECT(0x1a5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 039F
        gbc.setState(0x1fa, 0x5fc0, 0x8680, 0x5a5f, 0xa5ee, 0x6fbc, 0x1, 0x1);
        gbc.writeMem(0x1fa, { 0x6, 0x7b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5fc0, gbc.sp());
        EXPECT(0x1fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 03A0
        gbc.setState(0x421b, 0x8941, 0x6510, 0x65ad, 0x8817, 0x3e23, 0x0, 0x0);
        gbc.writeMem(0x421b, { 0x6, 0xb });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8941, gbc.sp());
        EXPECT(0x421d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 03A1
        gbc.setState(0xe61d, 0x4c5c, 0x3200, 0x5f2c, 0xe1d6, 0xba0c, 0x1, 0x0);
        gbc.writeMem(0xe61d, { 0x6, 0x76 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x4c5c, gbc.sp());
        EXPECT(0xe61f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xe61d));
        EXPECT(0x76, gbc.readMem(0xe61e));
        // 06 03A2
        gbc.setState(0x7609, 0xc511, 0xb860, 0xb924, 0xd396, 0x479f, 0x1, 0x1);
        gbc.writeMem(0x7609, { 0x6, 0x7f });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc511, gbc.sp());
        EXPECT(0x760b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 03A3
        gbc.setState(0x88fb, 0xde1d, 0x1a20, 0x90b2, 0x4aa6, 0x25d5, 0x1, 0x1);
        gbc.writeMem(0x88fb, { 0x6, 0xc7 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xde1d, gbc.sp());
        EXPECT(0x88fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x88fb));
        EXPECT(0xc7, gbc.readMem(0x88fc));
        // 06 03A4
        gbc.setState(0x4767, 0x665d, 0x4e80, 0x656d, 0x594, 0xa1f4, 0x1, 0x1);
        gbc.writeMem(0x4767, { 0x6, 0x42 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x665d, gbc.sp());
        EXPECT(0x4769, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 03A5
        gbc.setState(0xaf51, 0xb844, 0xf890, 0xf8ef, 0x71e3, 0xcc44, 0x0, 0x1);
        gbc.writeMem(0xaf51, { 0x6, 0x3e });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xb844, gbc.sp());
        EXPECT(0xaf53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xaf51));
        EXPECT(0x3e, gbc.readMem(0xaf52));
        // 06 03A6
        gbc.setState(0x28cc, 0x3c76, 0xa3e0, 0x786d, 0xa763, 0x7484, 0x1, 0x1);
        gbc.writeMem(0x28cc, { 0x6, 0x17 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x3c76, gbc.sp());
        EXPECT(0x28ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 03A7
        gbc.setState(0x7e97, 0x8747, 0x60b0, 0x695d, 0xeb87, 0x9d16, 0x1, 0x0);
        gbc.writeMem(0x7e97, { 0x6, 0x4d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x8747, gbc.sp());
        EXPECT(0x7e99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 03A8
        gbc.setState(0x6795, 0x53ee, 0x2e40, 0xb52c, 0xf37d, 0x9734, 0x1, 0x1);
        gbc.writeMem(0x6795, { 0x6, 0x11 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x53ee, gbc.sp());
        EXPECT(0x6797, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 03A9
        gbc.setState(0xad26, 0x1fe5, 0x1010, 0xe76b, 0x9883, 0x525c, 0x1, 0x0);
        gbc.writeMem(0xad26, { 0x6, 0x56 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x1fe5, gbc.sp());
        EXPECT(0xad28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xad26));
        EXPECT(0x56, gbc.readMem(0xad27));
        // 06 03AA
        gbc.setState(0x1091, 0x237a, 0x6390, 0x4b4b, 0x388, 0x7e1b, 0x1, 0x0);
        gbc.writeMem(0x1091, { 0x6, 0x84 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x237a, gbc.sp());
        EXPECT(0x1093, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 03AB
        gbc.setState(0x6aec, 0xbb13, 0xe6a0, 0xa2a9, 0x570b, 0x6fc9, 0x0, 0x0);
        gbc.writeMem(0x6aec, { 0x6, 0x43 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xbb13, gbc.sp());
        EXPECT(0x6aee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 03AC
        gbc.setState(0xa93f, 0x1cb1, 0x4480, 0x63c8, 0x8973, 0x7066, 0x0, 0x1);
        gbc.writeMem(0xa93f, { 0x6, 0xf8 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x1cb1, gbc.sp());
        EXPECT(0xa941, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa93f));
        EXPECT(0xf8, gbc.readMem(0xa940));
        // 06 03AD
        gbc.setState(0x5bbe, 0x56ae, 0x1090, 0x2ce4, 0x47f6, 0xcd1e, 0x0, 0x0);
        gbc.writeMem(0x5bbe, { 0x6, 0x3a });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x56ae, gbc.sp());
        EXPECT(0x5bc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 03AE
        gbc.setState(0x8fae, 0x8359, 0x2420, 0xa0ef, 0xe9b5, 0xcca4, 0x1, 0x1);
        gbc.writeMem(0x8fae, { 0x6, 0xfb });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x8359, gbc.sp());
        EXPECT(0x8fb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x8fae));
        EXPECT(0xfb, gbc.readMem(0x8faf));
        // 06 03AF
        gbc.setState(0x7bf1, 0x1f2d, 0x7950, 0x5bc9, 0xb4b6, 0x7845, 0x1, 0x0);
        gbc.writeMem(0x7bf1, { 0x6, 0xb7 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x1f2d, gbc.sp());
        EXPECT(0x7bf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 03B0
        gbc.setState(0xcd1, 0xf106, 0xfe80, 0x5ae5, 0xffb0, 0x69d1, 0x0, 0x1);
        gbc.writeMem(0xcd1, { 0x6, 0xd8 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xf106, gbc.sp());
        EXPECT(0xcd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 03B1
        gbc.setState(0x11d0, 0x3b58, 0xdc20, 0xb3ea, 0x668a, 0x6429, 0x1, 0x1);
        gbc.writeMem(0x11d0, { 0x6, 0x35 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x3b58, gbc.sp());
        EXPECT(0x11d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 03B2
        gbc.setState(0x3c75, 0x98c0, 0xe2a0, 0x2c9d, 0x2d04, 0x3074, 0x1, 0x1);
        gbc.writeMem(0x3c75, { 0x6, 0xd2 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x98c0, gbc.sp());
        EXPECT(0x3c77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 03B3
        gbc.setState(0xdabb, 0x7110, 0x3230, 0x2d2b, 0x6db0, 0xce67, 0x0, 0x0);
        gbc.writeMem(0xdabb, { 0x6, 0x65 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x7110, gbc.sp());
        EXPECT(0xdabd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xdabb));
        EXPECT(0x65, gbc.readMem(0xdabc));
        // 06 03B4
        gbc.setState(0x9e14, 0x68c8, 0x85c0, 0x476e, 0x1c03, 0x7b57, 0x1, 0x1);
        gbc.writeMem(0x9e14, { 0x6, 0x60 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x68c8, gbc.sp());
        EXPECT(0x9e16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x9e14));
        EXPECT(0x60, gbc.readMem(0x9e15));
        // 06 03B5
        gbc.setState(0x38a6, 0x276c, 0x2730, 0x8297, 0x3fc9, 0x9755, 0x1, 0x0);
        gbc.writeMem(0x38a6, { 0x6, 0xb });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x276c, gbc.sp());
        EXPECT(0x38a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 03B6
        gbc.setState(0xc54d, 0x1b3b, 0x68a0, 0xf0e8, 0xcf29, 0x72fd, 0x0, 0x1);
        gbc.writeMem(0xc54d, { 0x6, 0x43 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x1b3b, gbc.sp());
        EXPECT(0xc54f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xc54d));
        EXPECT(0x43, gbc.readMem(0xc54e));
        // 06 03B7
        gbc.setState(0x9d5f, 0x8ec1, 0xa480, 0x42ef, 0x4ed8, 0xc9e1, 0x1, 0x0);
        gbc.writeMem(0x9d5f, { 0x6, 0xbf });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x8ec1, gbc.sp());
        EXPECT(0x9d61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x9d5f));
        EXPECT(0xbf, gbc.readMem(0x9d60));
        // 06 03B8
        gbc.setState(0xccd, 0xd705, 0x4510, 0x12e7, 0x6c09, 0xed60, 0x1, 0x1);
        gbc.writeMem(0xccd, { 0x6, 0x19 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xd705, gbc.sp());
        EXPECT(0xccf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 03B9
        gbc.setState(0x54ca, 0x6298, 0x2d20, 0x35fe, 0x217d, 0x3d7f, 0x0, 0x1);
        gbc.writeMem(0x54ca, { 0x6, 0x11 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x6298, gbc.sp());
        EXPECT(0x54cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 03BB
        gbc.setState(0x5d2a, 0xdd5c, 0xf3e0, 0xcb56, 0xf320, 0x6efc, 0x1, 0x1);
        gbc.writeMem(0x5d2a, { 0x6, 0xae });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xdd5c, gbc.sp());
        EXPECT(0x5d2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 03BC
        gbc.setState(0x3176, 0x6f4b, 0x160, 0x4056, 0x90f, 0xb38e, 0x1, 0x0);
        gbc.writeMem(0x3176, { 0x6, 0x75 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x6f4b, gbc.sp());
        EXPECT(0x3178, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 03BD
        gbc.setState(0x3945, 0xfaa8, 0x8700, 0xe3da, 0xfa7e, 0xaea8, 0x1, 0x0);
        gbc.writeMem(0x3945, { 0x6, 0x47 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xfaa8, gbc.sp());
        EXPECT(0x3947, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 03BE
        gbc.setState(0xd1a1, 0xc780, 0x4c50, 0x29dc, 0x5fac, 0x98c9, 0x1, 0x1);
        gbc.writeMem(0xd1a1, { 0x6, 0x4b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc780, gbc.sp());
        EXPECT(0xd1a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd1a1));
        EXPECT(0x4b, gbc.readMem(0xd1a2));
        // 06 03BF
        gbc.setState(0xb9ef, 0xcd1, 0x3e60, 0x5381, 0x8d1b, 0xcf73, 0x0, 0x1);
        gbc.writeMem(0xb9ef, { 0x6, 0x77 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xcd1, gbc.sp());
        EXPECT(0xb9f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xb9ef));
        EXPECT(0x77, gbc.readMem(0xb9f0));
        // 06 03C0
        gbc.setState(0x5145, 0xec8f, 0xed20, 0x7ea4, 0x1249, 0x4635, 0x1, 0x0);
        gbc.writeMem(0x5145, { 0x6, 0x71 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xec8f, gbc.sp());
        EXPECT(0x5147, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 03C1
        gbc.setState(0x2185, 0xf6d0, 0x6050, 0x5fed, 0x4b53, 0xfd43, 0x0, 0x1);
        gbc.writeMem(0x2185, { 0x6, 0x2c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf6d0, gbc.sp());
        EXPECT(0x2187, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 03C2
        gbc.setState(0xbe02, 0xef51, 0x4540, 0x8f3f, 0xefbe, 0xee7c, 0x0, 0x1);
        gbc.writeMem(0xbe02, { 0x6, 0x4d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xef51, gbc.sp());
        EXPECT(0xbe04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xbe02));
        EXPECT(0x4d, gbc.readMem(0xbe03));
        // 06 03C3
        gbc.setState(0x7dbb, 0x2b1b, 0x6440, 0x4bcd, 0xb586, 0xafb6, 0x0, 0x1);
        gbc.writeMem(0x7dbb, { 0x6, 0x51 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x2b1b, gbc.sp());
        EXPECT(0x7dbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 03C4
        gbc.setState(0xb1ff, 0x47f, 0x66d0, 0xb85c, 0x3f1a, 0xb133, 0x0, 0x1);
        gbc.writeMem(0xb1ff, { 0x6, 0x59 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x47f, gbc.sp());
        EXPECT(0xb201, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xb1ff));
        EXPECT(0x59, gbc.readMem(0xb200));
        // 06 03C5
        gbc.setState(0xb79d, 0xa314, 0x6bc0, 0x3259, 0xb58, 0x121b, 0x0, 0x1);
        gbc.writeMem(0xb79d, { 0x6, 0xd1 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xa314, gbc.sp());
        EXPECT(0xb79f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xb79d));
        EXPECT(0xd1, gbc.readMem(0xb79e));
        // 06 03C6
        gbc.setState(0xdd88, 0x6fc1, 0x29a0, 0x302b, 0x64b5, 0x8b58, 0x0, 0x1);
        gbc.writeMem(0xdd88, { 0x6, 0x25 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x6fc1, gbc.sp());
        EXPECT(0xdd8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xdd88));
        EXPECT(0x25, gbc.readMem(0xdd89));
        // 06 03C7
        gbc.setState(0xeee9, 0xa507, 0xc070, 0x15af, 0x835e, 0xafc6, 0x1, 0x1);
        gbc.writeMem(0xeee9, { 0x6, 0x52 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xa507, gbc.sp());
        EXPECT(0xeeeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xeee9));
        EXPECT(0x52, gbc.readMem(0xeeea));
        // 06 03C8
        gbc.setState(0x7e34, 0x4e01, 0x6e30, 0xbf47, 0x7024, 0x89e7, 0x1, 0x1);
        gbc.writeMem(0x7e34, { 0x6, 0x5d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x4e01, gbc.sp());
        EXPECT(0x7e36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 03C9
        gbc.setState(0x11e8, 0xf77d, 0x7200, 0xcbc6, 0xed00, 0x7f44, 0x1, 0x1);
        gbc.writeMem(0x11e8, { 0x6, 0xc6 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf77d, gbc.sp());
        EXPECT(0x11ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 03CA
        gbc.setState(0x27cd, 0xbded, 0xfb60, 0x95b7, 0x2105, 0x6f1b, 0x1, 0x0);
        gbc.writeMem(0x27cd, { 0x6, 0x6b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xbded, gbc.sp());
        EXPECT(0x27cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 03CB
        gbc.setState(0x3d1b, 0x12ac, 0x7a40, 0x6ff8, 0x3a73, 0x5388, 0x1, 0x1);
        gbc.writeMem(0x3d1b, { 0x6, 0xc1 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x12ac, gbc.sp());
        EXPECT(0x3d1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 03CC
        gbc.setState(0xddfa, 0xcaa3, 0x9b50, 0xe4c8, 0xc6b, 0xc3bc, 0x1, 0x1);
        gbc.writeMem(0xddfa, { 0x6, 0xb7 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xcaa3, gbc.sp());
        EXPECT(0xddfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xddfa));
        EXPECT(0xb7, gbc.readMem(0xddfb));
        // 06 03CD
        gbc.setState(0xe4f8, 0x3450, 0x99e0, 0x2aab, 0x7294, 0xa1e7, 0x1, 0x1);
        gbc.writeMem(0xe4f8, { 0x6, 0x2 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3450, gbc.sp());
        EXPECT(0xe4fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xe4f8));
        EXPECT(0x2, gbc.readMem(0xe4f9));
        // 06 03CE
        gbc.setState(0x9d8f, 0x4a15, 0x1ae0, 0xb5af, 0xde5b, 0x1fba, 0x1, 0x1);
        gbc.writeMem(0x9d8f, { 0x6, 0x27 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x4a15, gbc.sp());
        EXPECT(0x9d91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x9d8f));
        EXPECT(0x27, gbc.readMem(0x9d90));
        // 06 03CF
        gbc.setState(0xccbf, 0xbb6a, 0x19c0, 0xf6f, 0x367b, 0xc76e, 0x0, 0x0);
        gbc.writeMem(0xccbf, { 0x6, 0xb3 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xbb6a, gbc.sp());
        EXPECT(0xccc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xccbf));
        EXPECT(0xb3, gbc.readMem(0xccc0));
        // 06 03D0
        gbc.setState(0xee8c, 0x8d56, 0xf960, 0xcfd7, 0xb02, 0xb3c3, 0x0, 0x1);
        gbc.writeMem(0xee8c, { 0x6, 0xa7 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8d56, gbc.sp());
        EXPECT(0xee8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xee8c));
        EXPECT(0xa7, gbc.readMem(0xee8d));
        // 06 03D1
        gbc.setState(0x420e, 0xa5a2, 0x6880, 0xbbb7, 0xa84f, 0x9360, 0x0, 0x0);
        gbc.writeMem(0x420e, { 0x6, 0x82 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa5a2, gbc.sp());
        EXPECT(0x4210, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 03D2
        gbc.setState(0x8424, 0x1f82, 0x56d0, 0x953a, 0xe24a, 0xbd84, 0x1, 0x1);
        gbc.writeMem(0x8424, { 0x6, 0x35 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x1f82, gbc.sp());
        EXPECT(0x8426, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x8424));
        EXPECT(0x35, gbc.readMem(0x8425));
        // 06 03D3
        gbc.setState(0x460e, 0x9bb9, 0xc240, 0x47a9, 0x25f5, 0xa71c, 0x1, 0x1);
        gbc.writeMem(0x460e, { 0x6, 0x65 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x9bb9, gbc.sp());
        EXPECT(0x4610, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 03D4
        gbc.setState(0x3e2e, 0x6856, 0x5510, 0x49b2, 0x4aed, 0xfbd, 0x0, 0x0);
        gbc.writeMem(0x3e2e, { 0x6, 0xc5 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x6856, gbc.sp());
        EXPECT(0x3e30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 03D5
        gbc.setState(0xe3ca, 0xc734, 0x14f0, 0x1196, 0xad91, 0xe8e5, 0x0, 0x0);
        gbc.writeMem(0xe3ca, { 0x6, 0xcd });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc734, gbc.sp());
        EXPECT(0xe3cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xe3ca));
        EXPECT(0xcd, gbc.readMem(0xe3cb));
        // 06 03D6
        gbc.setState(0x48f5, 0x807, 0xd090, 0xf4ec, 0x702b, 0x5e2a, 0x1, 0x1);
        gbc.writeMem(0x48f5, { 0x6, 0x25 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x807, gbc.sp());
        EXPECT(0x48f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 03D8
        gbc.setState(0x8ca2, 0x1a29, 0x1660, 0xc084, 0x831a, 0x5a8e, 0x0, 0x0);
        gbc.writeMem(0x8ca2, { 0x6, 0x10 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x1a29, gbc.sp());
        EXPECT(0x8ca4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x8ca2));
        EXPECT(0x10, gbc.readMem(0x8ca3));
        // 06 03D9
        gbc.setState(0x60e4, 0x3485, 0x5c10, 0x25ab, 0x16b3, 0xc53b, 0x0, 0x0);
        gbc.writeMem(0x60e4, { 0x6, 0xb6 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3485, gbc.sp());
        EXPECT(0x60e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 03DA
        gbc.setState(0x388e, 0x3daf, 0x7110, 0xf932, 0xaa37, 0x7e3c, 0x1, 0x1);
        gbc.writeMem(0x388e, { 0x6, 0x1f });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x3daf, gbc.sp());
        EXPECT(0x3890, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 03DB
        gbc.setState(0xc4ec, 0x7e6b, 0xb560, 0x8c7a, 0xf0ec, 0x60e0, 0x1, 0x0);
        gbc.writeMem(0xc4ec, { 0x6, 0xdb });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x7e6b, gbc.sp());
        EXPECT(0xc4ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xc4ec));
        EXPECT(0xdb, gbc.readMem(0xc4ed));
        // 06 03DC
        gbc.setState(0xa32d, 0x494f, 0x4620, 0x300b, 0x6595, 0xb9c8, 0x0, 0x1);
        gbc.writeMem(0xa32d, { 0x6, 0xc6 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x494f, gbc.sp());
        EXPECT(0xa32f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa32d));
        EXPECT(0xc6, gbc.readMem(0xa32e));
        // 06 03DD
        gbc.setState(0x9e80, 0xe57b, 0x1830, 0x8e18, 0x962e, 0xbd2b, 0x0, 0x1);
        gbc.writeMem(0x9e80, { 0x6, 0x96 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xe57b, gbc.sp());
        EXPECT(0x9e82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x9e80));
        EXPECT(0x96, gbc.readMem(0x9e81));
        // 06 03DE
        gbc.setState(0x1fab, 0xb86d, 0x4000, 0x2f64, 0x6d1b, 0x6481, 0x1, 0x1);
        gbc.writeMem(0x1fab, { 0x6, 0xb5 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xb86d, gbc.sp());
        EXPECT(0x1fad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 03DF
        gbc.setState(0x4bdb, 0x5e80, 0x8a90, 0xd2f5, 0xc092, 0xfdc4, 0x0, 0x0);
        gbc.writeMem(0x4bdb, { 0x6, 0xf2 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x5e80, gbc.sp());
        EXPECT(0x4bdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 03E0
        gbc.setState(0x933f, 0xc2ea, 0x8b60, 0x38a8, 0xcae, 0x716c, 0x1, 0x0);
        gbc.writeMem(0x933f, { 0x6, 0xaa });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xc2ea, gbc.sp());
        EXPECT(0x9341, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x933f));
        EXPECT(0xaa, gbc.readMem(0x9340));
        // 06 03E1
        gbc.setState(0x6d5a, 0xa45e, 0x41c0, 0x8d55, 0xed74, 0xb25, 0x1, 0x1);
        gbc.writeMem(0x6d5a, { 0x6, 0x75 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xa45e, gbc.sp());
        EXPECT(0x6d5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 06 03E2
        gbc.setState(0x60c1, 0x12fb, 0xeb0, 0x5654, 0xc8b6, 0x3ee4, 0x1, 0x0);
        gbc.writeMem(0x60c1, { 0x6, 0x90 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x12fb, gbc.sp());
        EXPECT(0x60c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 03E3
        gbc.setState(0x8ed1, 0xc6e8, 0x5c90, 0xacd8, 0x2567, 0x6785, 0x1, 0x1);
        gbc.writeMem(0x8ed1, { 0x6, 0x19 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc6e8, gbc.sp());
        EXPECT(0x8ed3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x8ed1));
        EXPECT(0x19, gbc.readMem(0x8ed2));
        // 06 03E4
        gbc.setState(0xc989, 0xe29b, 0xf070, 0xe82c, 0x2eb8, 0xc518, 0x1, 0x1);
        gbc.writeMem(0xc989, { 0x6, 0xac });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xe29b, gbc.sp());
        EXPECT(0xc98b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xc989));
        EXPECT(0xac, gbc.readMem(0xc98a));
        // 06 03E5
        gbc.setState(0x56e9, 0xf53e, 0x24f0, 0xefa, 0x555e, 0xcc1f, 0x0, 0x1);
        gbc.writeMem(0x56e9, { 0x6, 0x40 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf53e, gbc.sp());
        EXPECT(0x56eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 03E6
        gbc.setState(0x5fed, 0xffe7, 0x72f0, 0x5226, 0x353, 0xb7e2, 0x0, 0x1);
        gbc.writeMem(0x5fed, { 0x6, 0x67 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xffe7, gbc.sp());
        EXPECT(0x5fef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 06 03E7
        gbc.setState(0xa4e9, 0x3e5e, 0xa1d0, 0xad0c, 0x1a68, 0x3a72, 0x0, 0x0);
        gbc.writeMem(0xa4e9, { 0x6, 0x94 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x3e5e, gbc.sp());
        EXPECT(0xa4eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa4e9));
        EXPECT(0x94, gbc.readMem(0xa4ea));
    }
