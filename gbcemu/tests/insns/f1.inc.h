    TEST(gbcemu, opcode_f1) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // F1 0000
        gbc.setState(0x3128, 0x862b, 0x2f10, 0x70e2, 0x935d, 0x9935, 0x1, 0x1);
        gbc.writeMem(0x3128, { 0xf1 });
        gbc.writeMem(0x862b, { 0x5e, 0xb8 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x862d, gbc.sp());
        EXPECT(0x3129, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x862b));
        EXPECT(0xb8, gbc.readMem(0x862c));
        // F1 0001
        gbc.setState(0x8e70, 0xda36, 0x6ec0, 0x28f6, 0x3c78, 0x910e, 0x0, 0x0);
        gbc.writeMem(0x8e70, { 0xf1 });
        gbc.writeMem(0xda36, { 0xb, 0x3d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xda38, gbc.sp());
        EXPECT(0x8e71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8e70));
        EXPECT(0xb, gbc.readMem(0xda36));
        EXPECT(0x3d, gbc.readMem(0xda37));
        // F1 0002
        gbc.setState(0xbf7f, 0x47d5, 0x52e0, 0x7768, 0xf8fc, 0xc4a0, 0x0, 0x1);
        gbc.writeMem(0x47d5, { 0x9c, 0x84 });
        gbc.writeMem(0xbf7f, { 0xf1 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x47d7, gbc.sp());
        EXPECT(0xbf80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xbf7f));
        // F1 0003
        gbc.setState(0x2677, 0xfbfa, 0xeca0, 0xe79a, 0x73a0, 0xb39f, 0x0, 0x0);
        gbc.writeMem(0x2677, { 0xf1 });
        gbc.writeMem(0xfbfa, { 0x9a, 0x42 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xfbfc, gbc.sp());
        EXPECT(0x2678, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xfbfa));
        EXPECT(0x42, gbc.readMem(0xfbfb));
        // F1 0005
        gbc.setState(0x6452, 0x7811, 0x32b0, 0x7e4f, 0xaf77, 0x7ed0, 0x1, 0x1);
        gbc.writeMem(0x6452, { 0xf1 });
        gbc.writeMem(0x7811, { 0xe5, 0x8d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7813, gbc.sp());
        EXPECT(0x6453, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0006
        gbc.setState(0x933b, 0xbad3, 0xe2c0, 0x3322, 0x6f9c, 0xd686, 0x0, 0x0);
        gbc.writeMem(0x933b, { 0xf1 });
        gbc.writeMem(0xbad3, { 0xdf, 0x39 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xbad5, gbc.sp());
        EXPECT(0x933c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x933b));
        EXPECT(0xdf, gbc.readMem(0xbad3));
        EXPECT(0x39, gbc.readMem(0xbad4));
        // F1 0007
        gbc.setState(0xd1c5, 0x625, 0x78d0, 0x2bd4, 0x1328, 0x415b, 0x0, 0x1);
        gbc.writeMem(0x625, { 0xaa, 0xc });
        gbc.writeMem(0xd1c5, { 0xf1 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x627, gbc.sp());
        EXPECT(0xd1c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xd1c5));
        // F1 0008
        gbc.setState(0xe5ad, 0x1be6, 0x9610, 0x9346, 0x6fa9, 0x996a, 0x1, 0x0);
        gbc.writeMem(0x1be6, { 0x5e, 0x25 });
        gbc.writeMem(0xe5ad, { 0xf1 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x1be8, gbc.sp());
        EXPECT(0xe5ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xe5ad));
        // F1 0009
        gbc.setState(0x3bda, 0x372c, 0x93e0, 0x2b59, 0xf448, 0xdbe9, 0x1, 0x1);
        gbc.writeMem(0x372c, { 0x5c, 0xf1 });
        gbc.writeMem(0x3bda, { 0xf1 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x372e, gbc.sp());
        EXPECT(0x3bdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 000A
        gbc.setState(0xbd16, 0x33b5, 0x39d0, 0x50e8, 0xa940, 0x657c, 0x1, 0x1);
        gbc.writeMem(0x33b5, { 0xc2, 0xdf });
        gbc.writeMem(0xbd16, { 0xf1 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x33b7, gbc.sp());
        EXPECT(0xbd17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xbd16));
        // F1 000B
        gbc.setState(0x44ed, 0xf03e, 0x44a0, 0x67b7, 0xaad6, 0x69e0, 0x0, 0x1);
        gbc.writeMem(0x44ed, { 0xf1 });
        gbc.writeMem(0xf03e, { 0x55, 0x35 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xf040, gbc.sp());
        EXPECT(0x44ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xf03e));
        EXPECT(0x35, gbc.readMem(0xf03f));
        // F1 000C
        gbc.setState(0x5268, 0xc51, 0xe850, 0x5f8, 0x644, 0x94f0, 0x0, 0x1);
        gbc.writeMem(0xc51, { 0xfb, 0xbf });
        gbc.writeMem(0x5268, { 0xf1 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc53, gbc.sp());
        EXPECT(0x5269, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 000D
        gbc.setState(0xe84f, 0x132f, 0x28c0, 0x7f50, 0xafe9, 0x7084, 0x0, 0x1);
        gbc.writeMem(0x132f, { 0x3, 0x6c });
        gbc.writeMem(0xe84f, { 0xf1 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x1331, gbc.sp());
        EXPECT(0xe850, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xe84f));
        // F1 000E
        gbc.setState(0x8703, 0x2734, 0x3330, 0x95a7, 0x9866, 0xf59, 0x0, 0x0);
        gbc.writeMem(0x2734, { 0x97, 0xdf });
        gbc.writeMem(0x8703, { 0xf1 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x2736, gbc.sp());
        EXPECT(0x8704, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8703));
        // F1 000F
        gbc.setState(0x2214, 0xd570, 0xe340, 0x6051, 0xc88e, 0x8e88, 0x0, 0x1);
        gbc.writeMem(0x2214, { 0xf1 });
        gbc.writeMem(0xd570, { 0xb2, 0xb5 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xd572, gbc.sp());
        EXPECT(0x2215, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xd570));
        EXPECT(0xb5, gbc.readMem(0xd571));
        // F1 0010
        gbc.setState(0xdb43, 0x7840, 0x74f0, 0x1d8d, 0x25e5, 0x4752, 0x0, 0x1);
        gbc.writeMem(0x7840, { 0xcc, 0x2b });
        gbc.writeMem(0xdb43, { 0xf1 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x7842, gbc.sp());
        EXPECT(0xdb44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xdb43));
        // F1 0011
        gbc.setState(0x5883, 0xddd3, 0x2dd0, 0x8c5a, 0xc999, 0x1cfd, 0x1, 0x0);
        gbc.writeMem(0x5883, { 0xf1 });
        gbc.writeMem(0xddd3, { 0xc, 0x94 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xddd5, gbc.sp());
        EXPECT(0x5884, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xddd3));
        EXPECT(0x94, gbc.readMem(0xddd4));
        // F1 0012
        gbc.setState(0xaccf, 0xfebe, 0xcd40, 0x6ab6, 0x7fd4, 0x23f2, 0x0, 0x0);
        gbc.writeMem(0xaccf, { 0xf1 });
        gbc.writeMem(0xfebe, { 0xc0, 0xfa });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xfec0, gbc.sp());
        EXPECT(0xacd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xaccf));
        EXPECT(0xc0, gbc.readMem(0xfebe));
        EXPECT(0xfa, gbc.readMem(0xfebf));
        // F1 0013
        gbc.setState(0xce5, 0x1153, 0xc9a0, 0x4f37, 0x364b, 0xd853, 0x1, 0x0);
        gbc.writeMem(0xce5, { 0xf1 });
        gbc.writeMem(0x1153, { 0xaf, 0x28 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x1155, gbc.sp());
        EXPECT(0xce6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0014
        gbc.setState(0x9850, 0x4f15, 0x480, 0xf202, 0x3e2f, 0xc539, 0x1, 0x1);
        gbc.writeMem(0x4f15, { 0x43, 0xc8 });
        gbc.writeMem(0x9850, { 0xf1 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x4f17, gbc.sp());
        EXPECT(0x9851, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x9850));
        // F1 0015
        gbc.setState(0xc0a9, 0x70f7, 0xf930, 0xb5e4, 0x4b3e, 0xf96a, 0x1, 0x0);
        gbc.writeMem(0x70f7, { 0x2e, 0x2c });
        gbc.writeMem(0xc0a9, { 0xf1 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x70f9, gbc.sp());
        EXPECT(0xc0aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xc0a9));
        // F1 0016
        gbc.setState(0xdb32, 0xb27d, 0xb9b0, 0x9d1, 0x838f, 0xc21d, 0x0, 0x1);
        gbc.writeMem(0xb27d, { 0xc0, 0xf2 });
        gbc.writeMem(0xdb32, { 0xf1 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xb27f, gbc.sp());
        EXPECT(0xdb33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xb27d));
        EXPECT(0xf2, gbc.readMem(0xb27e));
        EXPECT(0xf1, gbc.readMem(0xdb32));
        // F1 0017
        gbc.setState(0xb264, 0xdb76, 0xd6a0, 0xadcd, 0x2ef6, 0x4903, 0x1, 0x0);
        gbc.writeMem(0xb264, { 0xf1 });
        gbc.writeMem(0xdb76, { 0xf, 0x16 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xdb78, gbc.sp());
        EXPECT(0xb265, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xb264));
        EXPECT(0xf, gbc.readMem(0xdb76));
        EXPECT(0x16, gbc.readMem(0xdb77));
        // F1 0018
        gbc.setState(0x2b2e, 0xfa82, 0xc5a0, 0xf088, 0x2cd9, 0x8422, 0x1, 0x1);
        gbc.writeMem(0x2b2e, { 0xf1 });
        gbc.writeMem(0xfa82, { 0x12, 0x3a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xfa84, gbc.sp());
        EXPECT(0x2b2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xfa82));
        EXPECT(0x3a, gbc.readMem(0xfa83));
        // F1 0019
        gbc.setState(0x8302, 0xcf91, 0x79b0, 0x7f0f, 0x9a63, 0x2557, 0x1, 0x0);
        gbc.writeMem(0x8302, { 0xf1 });
        gbc.writeMem(0xcf91, { 0x13, 0x35 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xcf93, gbc.sp());
        EXPECT(0x8303, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8302));
        EXPECT(0x13, gbc.readMem(0xcf91));
        EXPECT(0x35, gbc.readMem(0xcf92));
        // F1 001A
        gbc.setState(0x6901, 0xbccd, 0x840, 0x940a, 0x3641, 0x106f, 0x1, 0x1);
        gbc.writeMem(0x6901, { 0xf1 });
        gbc.writeMem(0xbccd, { 0x7e, 0x5a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xbccf, gbc.sp());
        EXPECT(0x6902, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xbccd));
        EXPECT(0x5a, gbc.readMem(0xbcce));
        // F1 001B
        gbc.setState(0xe9c6, 0x63eb, 0x8960, 0xaefb, 0x49eb, 0x185b, 0x1, 0x1);
        gbc.writeMem(0x63eb, { 0x8d, 0xa8 });
        gbc.writeMem(0xe9c6, { 0xf1 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x63ed, gbc.sp());
        EXPECT(0xe9c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xe9c6));
        // F1 001C
        gbc.setState(0x5407, 0xe31b, 0x5150, 0x1292, 0x3ed8, 0x6f70, 0x1, 0x1);
        gbc.writeMem(0x5407, { 0xf1 });
        gbc.writeMem(0xe31b, { 0x65, 0x7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe31d, gbc.sp());
        EXPECT(0x5408, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xe31b));
        EXPECT(0x7, gbc.readMem(0xe31c));
        // F1 001D
        gbc.setState(0x109, 0x6ad2, 0xdcf0, 0xbbcd, 0x6b44, 0x2cce, 0x0, 0x0);
        gbc.writeMem(0x109, { 0xf1 });
        gbc.writeMem(0x6ad2, { 0xb5, 0x1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x6ad4, gbc.sp());
        EXPECT(0x10a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 001E
        gbc.setState(0x5742, 0x19e6, 0xe890, 0xff50, 0xe611, 0x436c, 0x1, 0x0);
        gbc.writeMem(0x19e6, { 0xcb, 0x73 });
        gbc.writeMem(0x5742, { 0xf1 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x19e8, gbc.sp());
        EXPECT(0x5743, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 001F
        gbc.setState(0xdc83, 0x1a63, 0x89c0, 0x3df9, 0x66ed, 0x3522, 0x0, 0x1);
        gbc.writeMem(0x1a63, { 0x25, 0xa3 });
        gbc.writeMem(0xdc83, { 0xf1 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x1a65, gbc.sp());
        EXPECT(0xdc84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xdc83));
        // F1 0021
        gbc.setState(0x6bce, 0x10b0, 0xee90, 0xc610, 0x21e5, 0x21b6, 0x0, 0x1);
        gbc.writeMem(0x10b0, { 0x4d, 0x62 });
        gbc.writeMem(0x6bce, { 0xf1 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x10b2, gbc.sp());
        EXPECT(0x6bcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0022
        gbc.setState(0xa2ef, 0xb17b, 0x4340, 0xf47a, 0xf815, 0xba79, 0x0, 0x1);
        gbc.writeMem(0xa2ef, { 0xf1 });
        gbc.writeMem(0xb17b, { 0xd7, 0xc5 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xb17d, gbc.sp());
        EXPECT(0xa2f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xa2ef));
        EXPECT(0xd7, gbc.readMem(0xb17b));
        EXPECT(0xc5, gbc.readMem(0xb17c));
        // F1 0024
        gbc.setState(0xde44, 0xc59d, 0xd360, 0xeab4, 0x9d93, 0xcd47, 0x0, 0x1);
        gbc.writeMem(0xc59d, { 0x4c, 0x36 });
        gbc.writeMem(0xde44, { 0xf1 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xc59f, gbc.sp());
        EXPECT(0xde45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xc59d));
        EXPECT(0x36, gbc.readMem(0xc59e));
        EXPECT(0xf1, gbc.readMem(0xde44));
        // F1 0025
        gbc.setState(0xe803, 0x4274, 0xd2c0, 0xe69d, 0x395a, 0x4269, 0x0, 0x0);
        gbc.writeMem(0x4274, { 0xbb, 0x7d });
        gbc.writeMem(0xe803, { 0xf1 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x4276, gbc.sp());
        EXPECT(0xe804, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xe803));
        // F1 0026
        gbc.setState(0x78c0, 0xb659, 0x5510, 0xc08c, 0x4b6e, 0xf732, 0x1, 0x1);
        gbc.writeMem(0x78c0, { 0xf1 });
        gbc.writeMem(0xb659, { 0xed, 0x6e });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xb65b, gbc.sp());
        EXPECT(0x78c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xb659));
        EXPECT(0x6e, gbc.readMem(0xb65a));
        // F1 0027
        gbc.setState(0xe44b, 0x607, 0x55e0, 0x6bdb, 0x1fd2, 0x8086, 0x0, 0x1);
        gbc.writeMem(0x607, { 0xe3, 0xae });
        gbc.writeMem(0xe44b, { 0xf1 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x609, gbc.sp());
        EXPECT(0xe44c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xe44b));
        // F1 0028
        gbc.setState(0x98ce, 0xda0e, 0xdad0, 0xb725, 0x9696, 0x1e34, 0x0, 0x1);
        gbc.writeMem(0x98ce, { 0xf1 });
        gbc.writeMem(0xda0e, { 0x58, 0xb1 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xda10, gbc.sp());
        EXPECT(0x98cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x98ce));
        EXPECT(0x58, gbc.readMem(0xda0e));
        EXPECT(0xb1, gbc.readMem(0xda0f));
        // F1 0029
        gbc.setState(0xcfe1, 0xf8ec, 0xf830, 0x31d5, 0x4ec8, 0x62ac, 0x0, 0x0);
        gbc.writeMem(0xcfe1, { 0xf1 });
        gbc.writeMem(0xf8ec, { 0x0, 0x5a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xf8ee, gbc.sp());
        EXPECT(0xcfe2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xcfe1));
        EXPECT(0x0, gbc.readMem(0xf8ec));
        EXPECT(0x5a, gbc.readMem(0xf8ed));
        // F1 002A
        gbc.setState(0x9e25, 0xb064, 0xeb10, 0x9fe1, 0xa23a, 0x7455, 0x0, 0x0);
        gbc.writeMem(0x9e25, { 0xf1 });
        gbc.writeMem(0xb064, { 0xcd, 0xcf });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xb066, gbc.sp());
        EXPECT(0x9e26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x9e25));
        EXPECT(0xcd, gbc.readMem(0xb064));
        EXPECT(0xcf, gbc.readMem(0xb065));
        // F1 002B
        gbc.setState(0x7c2c, 0x40fe, 0x6710, 0x88c5, 0x6070, 0x75bb, 0x1, 0x1);
        gbc.writeMem(0x40fe, { 0xa0, 0xb6 });
        gbc.writeMem(0x7c2c, { 0xf1 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x4100, gbc.sp());
        EXPECT(0x7c2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 002C
        gbc.setState(0x3a37, 0xbf1b, 0xcc90, 0x8417, 0xb3da, 0xc1a6, 0x1, 0x0);
        gbc.writeMem(0x3a37, { 0xf1 });
        gbc.writeMem(0xbf1b, { 0x62, 0xa2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xbf1d, gbc.sp());
        EXPECT(0x3a38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xbf1b));
        EXPECT(0xa2, gbc.readMem(0xbf1c));
        // F1 002D
        gbc.setState(0xb08d, 0x8ccf, 0x1620, 0x2b6e, 0xf068, 0x6a9e, 0x1, 0x0);
        gbc.writeMem(0x8ccf, { 0xeb, 0x76 });
        gbc.writeMem(0xb08d, { 0xf1 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x8cd1, gbc.sp());
        EXPECT(0xb08e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0x8ccf));
        EXPECT(0x76, gbc.readMem(0x8cd0));
        EXPECT(0xf1, gbc.readMem(0xb08d));
        // F1 002E
        gbc.setState(0xbfb4, 0xbb9b, 0xe030, 0x62f9, 0x6e08, 0xcc85, 0x0, 0x1);
        gbc.writeMem(0xbb9b, { 0x7e, 0x0 });
        gbc.writeMem(0xbfb4, { 0xf1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xbb9d, gbc.sp());
        EXPECT(0xbfb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xbb9b));
        EXPECT(0x0, gbc.readMem(0xbb9c));
        EXPECT(0xf1, gbc.readMem(0xbfb4));
        // F1 002F
        gbc.setState(0x60a8, 0x1c3d, 0xa7e0, 0x1d8c, 0x4a76, 0xc7dd, 0x0, 0x1);
        gbc.writeMem(0x1c3d, { 0x29, 0x6e });
        gbc.writeMem(0x60a8, { 0xf1 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x1c3f, gbc.sp());
        EXPECT(0x60a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0030
        gbc.setState(0x854c, 0x55c, 0xdcd0, 0xf1a7, 0x55f3, 0x56ee, 0x1, 0x1);
        gbc.writeMem(0x55c, { 0x1d, 0x6 });
        gbc.writeMem(0x854c, { 0xf1 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x55e, gbc.sp());
        EXPECT(0x854d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x854c));
        // F1 0031
        gbc.setState(0xef46, 0xa8cc, 0x3cf0, 0x80db, 0x884b, 0xd6d0, 0x0, 0x1);
        gbc.writeMem(0xa8cc, { 0x66, 0xb5 });
        gbc.writeMem(0xef46, { 0xf1 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xa8ce, gbc.sp());
        EXPECT(0xef47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xa8cc));
        EXPECT(0xb5, gbc.readMem(0xa8cd));
        EXPECT(0xf1, gbc.readMem(0xef46));
        // F1 0032
        gbc.setState(0xe94b, 0x3b5d, 0x67b0, 0x21cc, 0xf4a1, 0xa193, 0x1, 0x0);
        gbc.writeMem(0x3b5d, { 0xfa, 0x7 });
        gbc.writeMem(0xe94b, { 0xf1 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x3b5f, gbc.sp());
        EXPECT(0xe94c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xe94b));
        // F1 0033
        gbc.setState(0x29eb, 0xb90, 0x9100, 0xffe7, 0xb16c, 0x189, 0x0, 0x0);
        gbc.writeMem(0xb90, { 0x43, 0xf3 });
        gbc.writeMem(0x29eb, { 0xf1 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xb92, gbc.sp());
        EXPECT(0x29ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0034
        gbc.setState(0x350, 0x7bdf, 0xda30, 0xea6f, 0xe078, 0x443a, 0x0, 0x1);
        gbc.writeMem(0x350, { 0xf1 });
        gbc.writeMem(0x7bdf, { 0x5b, 0xa9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x7be1, gbc.sp());
        EXPECT(0x351, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 0035
        gbc.setState(0xeb64, 0x5216, 0x4080, 0x1031, 0x2be8, 0x3cd2, 0x1, 0x0);
        gbc.writeMem(0x5216, { 0x86, 0x28 });
        gbc.writeMem(0xeb64, { 0xf1 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x5218, gbc.sp());
        EXPECT(0xeb65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xeb64));
        // F1 0036
        gbc.setState(0x617, 0xc53, 0xdd0, 0x98f6, 0x2126, 0xe1de, 0x1, 0x0);
        gbc.writeMem(0x617, { 0xf1 });
        gbc.writeMem(0xc53, { 0xf9, 0x29 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc55, gbc.sp());
        EXPECT(0x618, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 0037
        gbc.setState(0x75c9, 0xadfa, 0xe2c0, 0xc8d, 0xbebf, 0x8e39, 0x0, 0x0);
        gbc.writeMem(0x75c9, { 0xf1 });
        gbc.writeMem(0xadfa, { 0xa5, 0xaf });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xadfc, gbc.sp());
        EXPECT(0x75ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xadfa));
        EXPECT(0xaf, gbc.readMem(0xadfb));
        // F1 0038
        gbc.setState(0x7795, 0x2501, 0xfdc0, 0x185a, 0xd093, 0xb114, 0x1, 0x1);
        gbc.writeMem(0x2501, { 0x9d, 0x7 });
        gbc.writeMem(0x7795, { 0xf1 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x2503, gbc.sp());
        EXPECT(0x7796, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 0039
        gbc.setState(0x5fe6, 0xe202, 0x7220, 0x3ee0, 0x3e88, 0x50f4, 0x1, 0x1);
        gbc.writeMem(0x5fe6, { 0xf1 });
        gbc.writeMem(0xe202, { 0xa3, 0xa2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xe204, gbc.sp());
        EXPECT(0x5fe7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xe202));
        EXPECT(0xa2, gbc.readMem(0xe203));
        // F1 003A
        gbc.setState(0x2d9e, 0xdd3f, 0x1b90, 0x8a7, 0x7a49, 0xaafc, 0x1, 0x0);
        gbc.writeMem(0x2d9e, { 0xf1 });
        gbc.writeMem(0xdd3f, { 0x78, 0x61 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xdd41, gbc.sp());
        EXPECT(0x2d9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xdd3f));
        EXPECT(0x61, gbc.readMem(0xdd40));
        // F1 003B
        gbc.setState(0x8f56, 0x7346, 0xcf80, 0x9d0a, 0x3535, 0x6c1d, 0x0, 0x0);
        gbc.writeMem(0x7346, { 0x44, 0xbc });
        gbc.writeMem(0x8f56, { 0xf1 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x7348, gbc.sp());
        EXPECT(0x8f57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8f56));
        // F1 003C
        gbc.setState(0xdf7a, 0x6e7a, 0x5890, 0x3bf7, 0x322c, 0x9f18, 0x0, 0x1);
        gbc.writeMem(0x6e7a, { 0x9f, 0xe0 });
        gbc.writeMem(0xdf7a, { 0xf1 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6e7c, gbc.sp());
        EXPECT(0xdf7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xdf7a));
        // F1 003E
        gbc.setState(0x341f, 0xbb17, 0x1530, 0xe27b, 0xc47c, 0x85f1, 0x0, 0x1);
        gbc.writeMem(0x341f, { 0xf1 });
        gbc.writeMem(0xbb17, { 0xe4, 0x53 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xbb19, gbc.sp());
        EXPECT(0x3420, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0xbb17));
        EXPECT(0x53, gbc.readMem(0xbb18));
        // F1 003F
        gbc.setState(0x13e2, 0x7dbd, 0x4420, 0x2493, 0x27f9, 0x3423, 0x0, 0x0);
        gbc.writeMem(0x13e2, { 0xf1 });
        gbc.writeMem(0x7dbd, { 0x1b, 0xff });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x7dbf, gbc.sp());
        EXPECT(0x13e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 0040
        gbc.setState(0xb3f9, 0x7741, 0xeb40, 0x9602, 0x9d1f, 0x9f8a, 0x1, 0x1);
        gbc.writeMem(0x7741, { 0xfe, 0x2e });
        gbc.writeMem(0xb3f9, { 0xf1 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x7743, gbc.sp());
        EXPECT(0xb3fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xb3f9));
        // F1 0041
        gbc.setState(0x52ef, 0x7826, 0x59e0, 0x2e23, 0xc647, 0xef28, 0x1, 0x0);
        gbc.writeMem(0x52ef, { 0xf1 });
        gbc.writeMem(0x7826, { 0x21, 0x22 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x7828, gbc.sp());
        EXPECT(0x52f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0042
        gbc.setState(0xe196, 0xa0b4, 0x81f0, 0x4a7e, 0x6ab, 0xf937, 0x1, 0x1);
        gbc.writeMem(0xa0b4, { 0xdd, 0x8b });
        gbc.writeMem(0xe196, { 0xf1 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xa0b6, gbc.sp());
        EXPECT(0xe197, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xa0b4));
        EXPECT(0x8b, gbc.readMem(0xa0b5));
        EXPECT(0xf1, gbc.readMem(0xe196));
        // F1 0043
        gbc.setState(0x43d5, 0x3198, 0x3df0, 0x8954, 0x3387, 0xabec, 0x0, 0x0);
        gbc.writeMem(0x3198, { 0xa, 0xa8 });
        gbc.writeMem(0x43d5, { 0xf1 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x319a, gbc.sp());
        EXPECT(0x43d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0044
        gbc.setState(0xcd28, 0x5493, 0x47c0, 0x9cb0, 0x9e21, 0x8030, 0x1, 0x1);
        gbc.writeMem(0x5493, { 0x79, 0xd4 });
        gbc.writeMem(0xcd28, { 0xf1 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x5495, gbc.sp());
        EXPECT(0xcd29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xcd28));
        // F1 0045
        gbc.setState(0x3884, 0xd083, 0x7ef0, 0xea7a, 0xd1ca, 0x995a, 0x1, 0x0);
        gbc.writeMem(0x3884, { 0xf1 });
        gbc.writeMem(0xd083, { 0x35, 0x9b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xd085, gbc.sp());
        EXPECT(0x3885, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xd083));
        EXPECT(0x9b, gbc.readMem(0xd084));
        // F1 0046
        gbc.setState(0x5962, 0xd4c2, 0xa20, 0x209d, 0x37b2, 0x8944, 0x1, 0x0);
        gbc.writeMem(0x5962, { 0xf1 });
        gbc.writeMem(0xd4c2, { 0x87, 0xb5 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd4c4, gbc.sp());
        EXPECT(0x5963, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xd4c2));
        EXPECT(0xb5, gbc.readMem(0xd4c3));
        // F1 0047
        gbc.setState(0x1447, 0xac96, 0x3c80, 0xe138, 0xd697, 0x532e, 0x1, 0x0);
        gbc.writeMem(0x1447, { 0xf1 });
        gbc.writeMem(0xac96, { 0xf9, 0x7b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xac98, gbc.sp());
        EXPECT(0x1448, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0xac96));
        EXPECT(0x7b, gbc.readMem(0xac97));
        // F1 0048
        gbc.setState(0xe3d6, 0xd373, 0x2620, 0x9e6f, 0xe5f5, 0xc52d, 0x1, 0x0);
        gbc.writeMem(0xd373, { 0xf4, 0xc6 });
        gbc.writeMem(0xe3d6, { 0xf1 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xd375, gbc.sp());
        EXPECT(0xe3d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xd373));
        EXPECT(0xc6, gbc.readMem(0xd374));
        EXPECT(0xf1, gbc.readMem(0xe3d6));
        // F1 0049
        gbc.setState(0xe1fc, 0x282b, 0x94c0, 0xddeb, 0xcba4, 0xc188, 0x1, 0x1);
        gbc.writeMem(0x282b, { 0xa6, 0x38 });
        gbc.writeMem(0xe1fc, { 0xf1 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x282d, gbc.sp());
        EXPECT(0xe1fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xe1fc));
        // F1 004A
        gbc.setState(0x2e8b, 0xc83, 0x8010, 0x17a4, 0xb392, 0x195f, 0x1, 0x1);
        gbc.writeMem(0xc83, { 0x66, 0x3 });
        gbc.writeMem(0x2e8b, { 0xf1 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xc85, gbc.sp());
        EXPECT(0x2e8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 004B
        gbc.setState(0x4565, 0x3fe5, 0xbfa0, 0xe124, 0xc52f, 0x2dc0, 0x0, 0x1);
        gbc.writeMem(0x3fe5, { 0xcf, 0x84 });
        gbc.writeMem(0x4565, { 0xf1 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x3fe7, gbc.sp());
        EXPECT(0x4566, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 004C
        gbc.setState(0x60c, 0xc3dd, 0x54b0, 0xfc15, 0x68d7, 0x55ca, 0x0, 0x0);
        gbc.writeMem(0x60c, { 0xf1 });
        gbc.writeMem(0xc3dd, { 0xe0, 0x2d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xc3df, gbc.sp());
        EXPECT(0x60d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc3dd));
        EXPECT(0x2d, gbc.readMem(0xc3de));
        // F1 004E
        gbc.setState(0x165, 0x2068, 0xf210, 0xcc50, 0x5f08, 0xc70b, 0x0, 0x0);
        gbc.writeMem(0x165, { 0xf1 });
        gbc.writeMem(0x2068, { 0x20, 0xec });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x206a, gbc.sp());
        EXPECT(0x166, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 004F
        gbc.setState(0x4a38, 0x5bb8, 0x9cb0, 0x1571, 0xc71b, 0x23fb, 0x0, 0x1);
        gbc.writeMem(0x4a38, { 0xf1 });
        gbc.writeMem(0x5bb8, { 0x7, 0xa2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x5bba, gbc.sp());
        EXPECT(0x4a39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0050
        gbc.setState(0x4b0e, 0x792, 0x9140, 0xbcad, 0x5664, 0x6bb5, 0x0, 0x1);
        gbc.writeMem(0x792, { 0x28, 0x70 });
        gbc.writeMem(0x4b0e, { 0xf1 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x794, gbc.sp());
        EXPECT(0x4b0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0051
        gbc.setState(0xabb7, 0xc1da, 0xe5b0, 0x1853, 0x7208, 0x5cef, 0x0, 0x1);
        gbc.writeMem(0xabb7, { 0xf1 });
        gbc.writeMem(0xc1da, { 0x7c, 0x6c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xc1dc, gbc.sp());
        EXPECT(0xabb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xabb7));
        EXPECT(0x7c, gbc.readMem(0xc1da));
        EXPECT(0x6c, gbc.readMem(0xc1db));
        // F1 0052
        gbc.setState(0x9901, 0x6cce, 0xa540, 0x4e3b, 0x883d, 0x9bb3, 0x0, 0x1);
        gbc.writeMem(0x6cce, { 0xa1, 0xfb });
        gbc.writeMem(0x9901, { 0xf1 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x6cd0, gbc.sp());
        EXPECT(0x9902, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x9901));
        // F1 0053
        gbc.setState(0x47a3, 0x1291, 0xb990, 0x1d73, 0x59c3, 0x9fd3, 0x0, 0x1);
        gbc.writeMem(0x1291, { 0x2e, 0xd7 });
        gbc.writeMem(0x47a3, { 0xf1 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x1293, gbc.sp());
        EXPECT(0x47a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0054
        gbc.setState(0xaf54, 0xec35, 0x1ab0, 0xacdf, 0x2f38, 0x413e, 0x1, 0x0);
        gbc.writeMem(0xaf54, { 0xf1 });
        gbc.writeMem(0xec35, { 0xd4, 0x68 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xec37, gbc.sp());
        EXPECT(0xaf55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xaf54));
        EXPECT(0xd4, gbc.readMem(0xec35));
        EXPECT(0x68, gbc.readMem(0xec36));
        // F1 0055
        gbc.setState(0x595f, 0x49bf, 0x98b0, 0xf17b, 0x99c5, 0xfa6, 0x1, 0x1);
        gbc.writeMem(0x49bf, { 0x20, 0xba });
        gbc.writeMem(0x595f, { 0xf1 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x49c1, gbc.sp());
        EXPECT(0x5960, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0056
        gbc.setState(0x8198, 0x74f9, 0x42d0, 0x3f68, 0xb103, 0x847b, 0x0, 0x1);
        gbc.writeMem(0x74f9, { 0x9f, 0x65 });
        gbc.writeMem(0x8198, { 0xf1 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x74fb, gbc.sp());
        EXPECT(0x8199, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8198));
        // F1 0057
        gbc.setState(0xdff8, 0x7f9c, 0xca20, 0xcb2a, 0xb702, 0x8ff2, 0x1, 0x0);
        gbc.writeMem(0x7f9c, { 0x9d, 0xf0 });
        gbc.writeMem(0xdff8, { 0xf1 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x7f9e, gbc.sp());
        EXPECT(0xdff9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xdff8));
        // F1 0058
        gbc.setState(0x504d, 0x89cf, 0xf980, 0xd4db, 0x986c, 0xcda, 0x0, 0x0);
        gbc.writeMem(0x504d, { 0xf1 });
        gbc.writeMem(0x89cf, { 0xe2, 0xec });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x89d1, gbc.sp());
        EXPECT(0x504e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x89cf));
        EXPECT(0xec, gbc.readMem(0x89d0));
        // F1 0059
        gbc.setState(0x9b36, 0x322f, 0xe990, 0xadd0, 0x4017, 0x93bb, 0x1, 0x1);
        gbc.writeMem(0x322f, { 0xa2, 0x4e });
        gbc.writeMem(0x9b36, { 0xf1 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3231, gbc.sp());
        EXPECT(0x9b37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x9b36));
        // F1 005A
        gbc.setState(0x4d28, 0x972a, 0xfd40, 0x867, 0xafcb, 0x97db, 0x0, 0x1);
        gbc.writeMem(0x4d28, { 0xf1 });
        gbc.writeMem(0x972a, { 0x2d, 0x9a });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x972c, gbc.sp());
        EXPECT(0x4d29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x972a));
        EXPECT(0x9a, gbc.readMem(0x972b));
        // F1 005B
        gbc.setState(0x384b, 0xc5c3, 0xe410, 0xe430, 0xddf7, 0xb00a, 0x0, 0x1);
        gbc.writeMem(0x384b, { 0xf1 });
        gbc.writeMem(0xc5c3, { 0xe5, 0xa8 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xc5c5, gbc.sp());
        EXPECT(0x384c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xc5c3));
        EXPECT(0xa8, gbc.readMem(0xc5c4));
        // F1 005C
        gbc.setState(0x973d, 0x2d33, 0xea40, 0xb15b, 0x85a2, 0x91cb, 0x1, 0x1);
        gbc.writeMem(0x2d33, { 0x34, 0x24 });
        gbc.writeMem(0x973d, { 0xf1 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x2d35, gbc.sp());
        EXPECT(0x973e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x973d));
        // F1 005D
        gbc.setState(0x20b0, 0xb0d3, 0xa0, 0x5b5d, 0x120a, 0xef18, 0x0, 0x0);
        gbc.writeMem(0x20b0, { 0xf1 });
        gbc.writeMem(0xb0d3, { 0xc7, 0x98 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xb0d5, gbc.sp());
        EXPECT(0x20b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xb0d3));
        EXPECT(0x98, gbc.readMem(0xb0d4));
        // F1 005F
        gbc.setState(0x203b, 0x5394, 0xc640, 0x923, 0xcaf2, 0x15f0, 0x0, 0x1);
        gbc.writeMem(0x203b, { 0xf1 });
        gbc.writeMem(0x5394, { 0xa1, 0xfa });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x5396, gbc.sp());
        EXPECT(0x203c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0060
        gbc.setState(0x77ce, 0x9616, 0x6bf0, 0x5232, 0xdf1e, 0x896f, 0x1, 0x1);
        gbc.writeMem(0x77ce, { 0xf1 });
        gbc.writeMem(0x9616, { 0x32, 0xa9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9618, gbc.sp());
        EXPECT(0x77cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x9616));
        EXPECT(0xa9, gbc.readMem(0x9617));
        // F1 0061
        gbc.setState(0xee4f, 0xd5af, 0x7110, 0xb43d, 0x4d79, 0x4244, 0x1, 0x0);
        gbc.writeMem(0xd5af, { 0xea, 0x44 });
        gbc.writeMem(0xee4f, { 0xf1 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd5b1, gbc.sp());
        EXPECT(0xee50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xd5af));
        EXPECT(0x44, gbc.readMem(0xd5b0));
        EXPECT(0xf1, gbc.readMem(0xee4f));
        // F1 0062
        gbc.setState(0x7a0d, 0x79bb, 0x98c0, 0xdd74, 0xc4ae, 0x5561, 0x1, 0x0);
        gbc.writeMem(0x79bb, { 0x8b, 0xb });
        gbc.writeMem(0x7a0d, { 0xf1 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x79bd, gbc.sp());
        EXPECT(0x7a0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0063
        gbc.setState(0xed37, 0xd166, 0x9d60, 0x1508, 0xfbda, 0x588c, 0x0, 0x1);
        gbc.writeMem(0xd166, { 0xf8, 0xfd });
        gbc.writeMem(0xed37, { 0xf1 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xd168, gbc.sp());
        EXPECT(0xed38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd166));
        EXPECT(0xfd, gbc.readMem(0xd167));
        EXPECT(0xf1, gbc.readMem(0xed37));
        // F1 0064
        gbc.setState(0x6e36, 0x1eda, 0x9d10, 0xe9a9, 0x55bf, 0x4f4b, 0x0, 0x1);
        gbc.writeMem(0x1eda, { 0xe6, 0x76 });
        gbc.writeMem(0x6e36, { 0xf1 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1edc, gbc.sp());
        EXPECT(0x6e37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0065
        gbc.setState(0xbd3d, 0xfba8, 0x29e0, 0xc2d7, 0xfd7b, 0x5caa, 0x0, 0x1);
        gbc.writeMem(0xbd3d, { 0xf1 });
        gbc.writeMem(0xfba8, { 0x24, 0xae });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xfbaa, gbc.sp());
        EXPECT(0xbd3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xbd3d));
        EXPECT(0x24, gbc.readMem(0xfba8));
        EXPECT(0xae, gbc.readMem(0xfba9));
        // F1 0067
        gbc.setState(0xd32f, 0x6d6f, 0x4a90, 0x7c40, 0x6af5, 0xd41a, 0x0, 0x0);
        gbc.writeMem(0x6d6f, { 0xcb, 0x19 });
        gbc.writeMem(0xd32f, { 0xf1 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x6d71, gbc.sp());
        EXPECT(0xd330, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xd32f));
        // F1 0068
        gbc.setState(0x7e75, 0x5bbf, 0x24b0, 0x10f4, 0x2ba8, 0x847d, 0x1, 0x0);
        gbc.writeMem(0x5bbf, { 0x3a, 0x86 });
        gbc.writeMem(0x7e75, { 0xf1 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x5bc1, gbc.sp());
        EXPECT(0x7e76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 0069
        gbc.setState(0x82c0, 0x89ad, 0xc130, 0x7e2f, 0x7f9b, 0x1929, 0x1, 0x0);
        gbc.writeMem(0x82c0, { 0xf1 });
        gbc.writeMem(0x89ad, { 0x46, 0xcc });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x89af, gbc.sp());
        EXPECT(0x82c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x82c0));
        EXPECT(0x46, gbc.readMem(0x89ad));
        EXPECT(0xcc, gbc.readMem(0x89ae));
        // F1 006A
        gbc.setState(0xd766, 0x77d1, 0x2840, 0xb0a1, 0x7a43, 0x3a45, 0x0, 0x0);
        gbc.writeMem(0x77d1, { 0xca, 0x3a });
        gbc.writeMem(0xd766, { 0xf1 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x77d3, gbc.sp());
        EXPECT(0xd767, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xd766));
        // F1 006B
        gbc.setState(0x203f, 0x8719, 0x6fc0, 0x3670, 0xe5ce, 0x556a, 0x0, 0x1);
        gbc.writeMem(0x203f, { 0xf1 });
        gbc.writeMem(0x8719, { 0xeb, 0xb2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x871b, gbc.sp());
        EXPECT(0x2040, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0x8719));
        EXPECT(0xb2, gbc.readMem(0x871a));
        // F1 006C
        gbc.setState(0xe2b1, 0x47d7, 0xac90, 0xabb9, 0xd19d, 0xed0e, 0x0, 0x0);
        gbc.writeMem(0x47d7, { 0xb, 0x60 });
        gbc.writeMem(0xe2b1, { 0xf1 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x47d9, gbc.sp());
        EXPECT(0xe2b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xe2b1));
        // F1 006D
        gbc.setState(0x6764, 0x82df, 0xe950, 0x9340, 0x1ef0, 0x21ad, 0x0, 0x0);
        gbc.writeMem(0x6764, { 0xf1 });
        gbc.writeMem(0x82df, { 0x43, 0x8f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x82e1, gbc.sp());
        EXPECT(0x6765, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x82df));
        EXPECT(0x8f, gbc.readMem(0x82e0));
        // F1 006E
        gbc.setState(0xdf2d, 0xdc41, 0x9bc0, 0x5bc8, 0x5df7, 0xbcc6, 0x0, 0x0);
        gbc.writeMem(0xdc41, { 0x91, 0x49 });
        gbc.writeMem(0xdf2d, { 0xf1 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xdc43, gbc.sp());
        EXPECT(0xdf2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xdc41));
        EXPECT(0x49, gbc.readMem(0xdc42));
        EXPECT(0xf1, gbc.readMem(0xdf2d));
        // F1 006F
        gbc.setState(0x22fd, 0x7f66, 0x81b0, 0x5a5a, 0xa0f2, 0x1824, 0x0, 0x1);
        gbc.writeMem(0x22fd, { 0xf1 });
        gbc.writeMem(0x7f66, { 0xe4, 0x51 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x7f68, gbc.sp());
        EXPECT(0x22fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0070
        gbc.setState(0xcf4d, 0x2271, 0xc240, 0xaa29, 0x1e39, 0x4978, 0x1, 0x0);
        gbc.writeMem(0x2271, { 0xa3, 0xc3 });
        gbc.writeMem(0xcf4d, { 0xf1 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x2273, gbc.sp());
        EXPECT(0xcf4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xcf4d));
        // F1 0071
        gbc.setState(0xcae5, 0x6605, 0x68a0, 0xfb4b, 0xe5ad, 0x76cd, 0x1, 0x1);
        gbc.writeMem(0x6605, { 0xfb, 0xf0 });
        gbc.writeMem(0xcae5, { 0xf1 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x6607, gbc.sp());
        EXPECT(0xcae6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xcae5));
        // F1 0072
        gbc.setState(0xeb3, 0xa407, 0x4c30, 0x75b8, 0xd413, 0xb9f3, 0x0, 0x1);
        gbc.writeMem(0xeb3, { 0xf1 });
        gbc.writeMem(0xa407, { 0x90, 0xad });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xa409, gbc.sp());
        EXPECT(0xeb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xa407));
        EXPECT(0xad, gbc.readMem(0xa408));
        // F1 0073
        gbc.setState(0x5bc5, 0xfedb, 0xe3e0, 0x55e3, 0x6f54, 0x499f, 0x0, 0x1);
        gbc.writeMem(0x5bc5, { 0xf1 });
        gbc.writeMem(0xfedb, { 0x21, 0x49 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xfedd, gbc.sp());
        EXPECT(0x5bc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xfedb));
        EXPECT(0x49, gbc.readMem(0xfedc));
        // F1 0074
        gbc.setState(0xea32, 0xfe7c, 0x85a0, 0x6648, 0x37b8, 0x95a4, 0x0, 0x0);
        gbc.writeMem(0xea32, { 0xf1 });
        gbc.writeMem(0xfe7c, { 0x70, 0xeb });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xfe7e, gbc.sp());
        EXPECT(0xea33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xea32));
        EXPECT(0x70, gbc.readMem(0xfe7c));
        EXPECT(0xeb, gbc.readMem(0xfe7d));
        // F1 0075
        gbc.setState(0x955f, 0xa6c0, 0xe2f0, 0x56bc, 0x479b, 0xee45, 0x1, 0x0);
        gbc.writeMem(0x955f, { 0xf1 });
        gbc.writeMem(0xa6c0, { 0xfb, 0x89 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa6c2, gbc.sp());
        EXPECT(0x9560, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x955f));
        EXPECT(0xfb, gbc.readMem(0xa6c0));
        EXPECT(0x89, gbc.readMem(0xa6c1));
        // F1 0076
        gbc.setState(0xef0c, 0x7e01, 0x58a0, 0xcdb1, 0x1a17, 0x65dd, 0x0, 0x1);
        gbc.writeMem(0x7e01, { 0xe9, 0x8 });
        gbc.writeMem(0xef0c, { 0xf1 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x7e03, gbc.sp());
        EXPECT(0xef0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xef0c));
        // F1 0077
        gbc.setState(0xd90c, 0xe758, 0x6210, 0x5bdc, 0x7095, 0xd358, 0x1, 0x0);
        gbc.writeMem(0xd90c, { 0xf1 });
        gbc.writeMem(0xe758, { 0xaa, 0x2d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xe75a, gbc.sp());
        EXPECT(0xd90d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xd90c));
        EXPECT(0xaa, gbc.readMem(0xe758));
        EXPECT(0x2d, gbc.readMem(0xe759));
        // F1 0078
        gbc.setState(0xa83c, 0x5675, 0xb890, 0xa221, 0xf962, 0xcc1e, 0x0, 0x0);
        gbc.writeMem(0x5675, { 0xc, 0x72 });
        gbc.writeMem(0xa83c, { 0xf1 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x5677, gbc.sp());
        EXPECT(0xa83d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xa83c));
        // F1 0079
        gbc.setState(0x9b39, 0x71c5, 0x2c30, 0x7e17, 0x2a90, 0xa64a, 0x1, 0x0);
        gbc.writeMem(0x71c5, { 0xf3, 0x61 });
        gbc.writeMem(0x9b39, { 0xf1 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x71c7, gbc.sp());
        EXPECT(0x9b3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x9b39));
        // F1 007A
        gbc.setState(0xd42d, 0x38eb, 0x5bd0, 0x24e, 0x8924, 0xe0da, 0x1, 0x1);
        gbc.writeMem(0x38eb, { 0x1, 0x52 });
        gbc.writeMem(0xd42d, { 0xf1 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x38ed, gbc.sp());
        EXPECT(0xd42e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xd42d));
        // F1 007C
        gbc.setState(0x2c92, 0xad5d, 0x2480, 0x5009, 0xe7d3, 0x9f73, 0x1, 0x0);
        gbc.writeMem(0x2c92, { 0xf1 });
        gbc.writeMem(0xad5d, { 0xcf, 0xf3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xad5f, gbc.sp());
        EXPECT(0x2c93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xad5d));
        EXPECT(0xf3, gbc.readMem(0xad5e));
        // F1 007D
        gbc.setState(0xb992, 0x2837, 0x6d80, 0xdf75, 0x6736, 0x8c57, 0x0, 0x1);
        gbc.writeMem(0x2837, { 0xb7, 0xc2 });
        gbc.writeMem(0xb992, { 0xf1 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x2839, gbc.sp());
        EXPECT(0xb993, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xb992));
        // F1 007E
        gbc.setState(0x9508, 0x4f6, 0x1a00, 0x7bee, 0x9985, 0x8313, 0x1, 0x1);
        gbc.writeMem(0x4f6, { 0x31, 0x56 });
        gbc.writeMem(0x9508, { 0xf1 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x4f8, gbc.sp());
        EXPECT(0x9509, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x9508));
        // F1 007F
        gbc.setState(0x86cd, 0x29e2, 0x2600, 0xb622, 0xdbc4, 0x7d50, 0x0, 0x0);
        gbc.writeMem(0x29e2, { 0x94, 0x8 });
        gbc.writeMem(0x86cd, { 0xf1 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x29e4, gbc.sp());
        EXPECT(0x86ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x86cd));
        // F1 0080
        gbc.setState(0x5bda, 0x180b, 0x480, 0x6a9b, 0x9de7, 0x4c56, 0x1, 0x0);
        gbc.writeMem(0x180b, { 0xe3, 0x5d });
        gbc.writeMem(0x5bda, { 0xf1 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x180d, gbc.sp());
        EXPECT(0x5bdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0081
        gbc.setState(0xce4c, 0x4307, 0xe080, 0x87bc, 0x2824, 0x64df, 0x1, 0x0);
        gbc.writeMem(0x4307, { 0x71, 0x1d });
        gbc.writeMem(0xce4c, { 0xf1 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x4309, gbc.sp());
        EXPECT(0xce4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xce4c));
        // F1 0082
        gbc.setState(0xe2a5, 0x62d, 0xa7d0, 0x1c7c, 0x9deb, 0xb6e5, 0x1, 0x1);
        gbc.writeMem(0x62d, { 0xc8, 0x88 });
        gbc.writeMem(0xe2a5, { 0xf1 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x62f, gbc.sp());
        EXPECT(0xe2a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xe2a5));
        // F1 0083
        gbc.setState(0xcefb, 0x99c8, 0xd030, 0xbbcf, 0x1e45, 0x5b07, 0x1, 0x0);
        gbc.writeMem(0x99c8, { 0x33, 0x10 });
        gbc.writeMem(0xcefb, { 0xf1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x99ca, gbc.sp());
        EXPECT(0xcefc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x99c8));
        EXPECT(0x10, gbc.readMem(0x99c9));
        EXPECT(0xf1, gbc.readMem(0xcefb));
        // F1 0084
        gbc.setState(0xcc4c, 0x1e75, 0x2030, 0x413, 0x11d4, 0x264d, 0x0, 0x1);
        gbc.writeMem(0x1e75, { 0x13, 0x1f });
        gbc.writeMem(0xcc4c, { 0xf1 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x1e77, gbc.sp());
        EXPECT(0xcc4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xcc4c));
        // F1 0085
        gbc.setState(0x8303, 0xa69b, 0xc000, 0x449d, 0x858d, 0xb618, 0x1, 0x1);
        gbc.writeMem(0x8303, { 0xf1 });
        gbc.writeMem(0xa69b, { 0x89, 0x88 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xa69d, gbc.sp());
        EXPECT(0x8304, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8303));
        EXPECT(0x89, gbc.readMem(0xa69b));
        EXPECT(0x88, gbc.readMem(0xa69c));
        // F1 0086
        gbc.setState(0x7d24, 0x10eb, 0x1d60, 0xefa6, 0x20eb, 0x49ec, 0x1, 0x1);
        gbc.writeMem(0x10eb, { 0x53, 0x76 });
        gbc.writeMem(0x7d24, { 0xf1 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x10ed, gbc.sp());
        EXPECT(0x7d25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 0087
        gbc.setState(0xb94e, 0x8ef1, 0x53f0, 0x9dd6, 0xf6a2, 0x3d02, 0x0, 0x0);
        gbc.writeMem(0x8ef1, { 0x2c, 0xb3 });
        gbc.writeMem(0xb94e, { 0xf1 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x8ef3, gbc.sp());
        EXPECT(0xb94f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x8ef1));
        EXPECT(0xb3, gbc.readMem(0x8ef2));
        EXPECT(0xf1, gbc.readMem(0xb94e));
        // F1 0088
        gbc.setState(0xd1da, 0xd07d, 0x5460, 0x3124, 0xbafe, 0x5a04, 0x0, 0x0);
        gbc.writeMem(0xd07d, { 0xd5, 0x52 });
        gbc.writeMem(0xd1da, { 0xf1 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd07f, gbc.sp());
        EXPECT(0xd1db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xd07d));
        EXPECT(0x52, gbc.readMem(0xd07e));
        EXPECT(0xf1, gbc.readMem(0xd1da));
        // F1 0089
        gbc.setState(0xd488, 0xc78a, 0xe2f0, 0xee6d, 0x421d, 0xed83, 0x1, 0x1);
        gbc.writeMem(0xc78a, { 0xff, 0xd0 });
        gbc.writeMem(0xd488, { 0xf1 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc78c, gbc.sp());
        EXPECT(0xd489, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xc78a));
        EXPECT(0xd0, gbc.readMem(0xc78b));
        EXPECT(0xf1, gbc.readMem(0xd488));
        // F1 008A
        gbc.setState(0xd238, 0xe978, 0x4f00, 0x50ef, 0x37ff, 0x30f9, 0x1, 0x0);
        gbc.writeMem(0xd238, { 0xf1 });
        gbc.writeMem(0xe978, { 0xbf, 0xbc });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xe97a, gbc.sp());
        EXPECT(0xd239, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xd238));
        EXPECT(0xbf, gbc.readMem(0xe978));
        EXPECT(0xbc, gbc.readMem(0xe979));
        // F1 008B
        gbc.setState(0x6f52, 0x6ae2, 0xa330, 0x13df, 0x505d, 0x2e8b, 0x1, 0x0);
        gbc.writeMem(0x6ae2, { 0xd0, 0x18 });
        gbc.writeMem(0x6f52, { 0xf1 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x6ae4, gbc.sp());
        EXPECT(0x6f53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 008C
        gbc.setState(0xbb21, 0xc21, 0x5670, 0x709b, 0x2e28, 0xcb53, 0x1, 0x1);
        gbc.writeMem(0xc21, { 0x6a, 0x8e });
        gbc.writeMem(0xbb21, { 0xf1 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xc23, gbc.sp());
        EXPECT(0xbb22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xbb21));
        // F1 008D
        gbc.setState(0xcfd4, 0x7f12, 0xd490, 0x6885, 0x3f8c, 0xe396, 0x1, 0x1);
        gbc.writeMem(0x7f12, { 0xd, 0xf7 });
        gbc.writeMem(0xcfd4, { 0xf1 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x7f14, gbc.sp());
        EXPECT(0xcfd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xcfd4));
        // F1 008E
        gbc.setState(0x46ad, 0x3e7, 0xa810, 0xc384, 0x9b39, 0x868e, 0x0, 0x1);
        gbc.writeMem(0x3e7, { 0x85, 0x9f });
        gbc.writeMem(0x46ad, { 0xf1 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x3e9, gbc.sp());
        EXPECT(0x46ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 008F
        gbc.setState(0x148c, 0xce73, 0x73d0, 0x8ea3, 0xbcde, 0x3e81, 0x0, 0x0);
        gbc.writeMem(0x148c, { 0xf1 });
        gbc.writeMem(0xce73, { 0x89, 0xee });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xce75, gbc.sp());
        EXPECT(0x148d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xce73));
        EXPECT(0xee, gbc.readMem(0xce74));
        // F1 0090
        gbc.setState(0x8012, 0x16b9, 0x18b0, 0x1780, 0x21de, 0xb5a0, 0x1, 0x1);
        gbc.writeMem(0x16b9, { 0xb4, 0x3c });
        gbc.writeMem(0x8012, { 0xf1 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x16bb, gbc.sp());
        EXPECT(0x8013, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8012));
        // F1 0091
        gbc.setState(0xd454, 0xac81, 0x3b70, 0x488c, 0x54a9, 0x46f9, 0x0, 0x1);
        gbc.writeMem(0xac81, { 0x27, 0x6a });
        gbc.writeMem(0xd454, { 0xf1 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xac83, gbc.sp());
        EXPECT(0xd455, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xac81));
        EXPECT(0x6a, gbc.readMem(0xac82));
        EXPECT(0xf1, gbc.readMem(0xd454));
        // F1 0092
        gbc.setState(0xc09e, 0x920, 0x7d40, 0xf8c0, 0xd2ea, 0x8a0e, 0x1, 0x0);
        gbc.writeMem(0x920, { 0x54, 0x4f });
        gbc.writeMem(0xc09e, { 0xf1 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x922, gbc.sp());
        EXPECT(0xc09f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xc09e));
        // F1 0093
        gbc.setState(0xc32, 0x4df0, 0xc5d0, 0x2fd7, 0x1ea6, 0x389, 0x0, 0x1);
        gbc.writeMem(0xc32, { 0xf1 });
        gbc.writeMem(0x4df0, { 0xc8, 0xa6 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x4df2, gbc.sp());
        EXPECT(0xc33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0094
        gbc.setState(0x1b7f, 0xdc57, 0x6280, 0xc908, 0x90e7, 0xa1bb, 0x0, 0x0);
        gbc.writeMem(0x1b7f, { 0xf1 });
        gbc.writeMem(0xdc57, { 0x84, 0x12 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xdc59, gbc.sp());
        EXPECT(0x1b80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xdc57));
        EXPECT(0x12, gbc.readMem(0xdc58));
        // F1 0095
        gbc.setState(0xec4b, 0x1d42, 0x6e10, 0x1787, 0x3801, 0x1090, 0x0, 0x0);
        gbc.writeMem(0x1d42, { 0x46, 0x2f });
        gbc.writeMem(0xec4b, { 0xf1 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x1d44, gbc.sp());
        EXPECT(0xec4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xec4b));
        // F1 0096
        gbc.setState(0x6f02, 0x7fea, 0x3780, 0xef97, 0x9153, 0x1099, 0x0, 0x0);
        gbc.writeMem(0x6f02, { 0xf1 });
        gbc.writeMem(0x7fea, { 0x94, 0x55 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x7fec, gbc.sp());
        EXPECT(0x6f03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 0097
        gbc.setState(0xc00e, 0x753e, 0x9e40, 0x9f5d, 0xd783, 0xb513, 0x0, 0x0);
        gbc.writeMem(0x753e, { 0xe4, 0xe7 });
        gbc.writeMem(0xc00e, { 0xf1 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7540, gbc.sp());
        EXPECT(0xc00f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xc00e));
        // F1 0098
        gbc.setState(0x20b9, 0x9cd0, 0x5090, 0x7a36, 0x227d, 0x1253, 0x0, 0x0);
        gbc.writeMem(0x20b9, { 0xf1 });
        gbc.writeMem(0x9cd0, { 0xbe, 0xb1 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9cd2, gbc.sp());
        EXPECT(0x20ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0x9cd0));
        EXPECT(0xb1, gbc.readMem(0x9cd1));
        // F1 0099
        gbc.setState(0xd221, 0xc011, 0x14a0, 0xf098, 0x29d7, 0xa8b2, 0x1, 0x1);
        gbc.writeMem(0xc011, { 0xd2, 0xe5 });
        gbc.writeMem(0xd221, { 0xf1 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xc013, gbc.sp());
        EXPECT(0xd222, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xc011));
        EXPECT(0xe5, gbc.readMem(0xc012));
        EXPECT(0xf1, gbc.readMem(0xd221));
        // F1 009A
        gbc.setState(0x7cb, 0x2208, 0x1530, 0x6d6e, 0xd707, 0x860a, 0x0, 0x1);
        gbc.writeMem(0x7cb, { 0xf1 });
        gbc.writeMem(0x2208, { 0x23, 0xf1 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x220a, gbc.sp());
        EXPECT(0x7cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 009B
        gbc.setState(0x8939, 0xa6fa, 0xe6c0, 0x6090, 0xc5a9, 0xe52a, 0x1, 0x1);
        gbc.writeMem(0x8939, { 0xf1 });
        gbc.writeMem(0xa6fa, { 0x53, 0x51 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xa6fc, gbc.sp());
        EXPECT(0x893a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8939));
        EXPECT(0x53, gbc.readMem(0xa6fa));
        EXPECT(0x51, gbc.readMem(0xa6fb));
        // F1 009C
        gbc.setState(0x6a0b, 0xfda7, 0x6e90, 0xbbb4, 0x3698, 0x5c40, 0x1, 0x0);
        gbc.writeMem(0x6a0b, { 0xf1 });
        gbc.writeMem(0xfda7, { 0x26, 0xc5 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xfda9, gbc.sp());
        EXPECT(0x6a0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xfda7));
        EXPECT(0xc5, gbc.readMem(0xfda8));
        // F1 009D
        gbc.setState(0x7ca8, 0x6297, 0xa0c0, 0x2d33, 0x93b5, 0x1ad1, 0x0, 0x0);
        gbc.writeMem(0x6297, { 0xa6, 0x72 });
        gbc.writeMem(0x7ca8, { 0xf1 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x6299, gbc.sp());
        EXPECT(0x7ca9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 009E
        gbc.setState(0xdd48, 0x8862, 0xe650, 0x71d6, 0x8ed1, 0x33fd, 0x1, 0x0);
        gbc.writeMem(0x8862, { 0x61, 0x25 });
        gbc.writeMem(0xdd48, { 0xf1 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x8864, gbc.sp());
        EXPECT(0xdd49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8862));
        EXPECT(0x25, gbc.readMem(0x8863));
        EXPECT(0xf1, gbc.readMem(0xdd48));
        // F1 009F
        gbc.setState(0x48ad, 0x5e5e, 0xeaa0, 0x6b6f, 0xb2e9, 0xc192, 0x0, 0x0);
        gbc.writeMem(0x48ad, { 0xf1 });
        gbc.writeMem(0x5e5e, { 0x58, 0x2e });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x5e60, gbc.sp());
        EXPECT(0x48ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 00A2
        gbc.setState(0x6d7f, 0xbe78, 0x830, 0x24c9, 0xed52, 0x27bc, 0x0, 0x0);
        gbc.writeMem(0x6d7f, { 0xf1 });
        gbc.writeMem(0xbe78, { 0xd, 0xd4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xbe7a, gbc.sp());
        EXPECT(0x6d80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xbe78));
        EXPECT(0xd4, gbc.readMem(0xbe79));
        // F1 00A3
        gbc.setState(0xed72, 0xa918, 0xe2f0, 0x1b74, 0x8178, 0x9437, 0x1, 0x1);
        gbc.writeMem(0xa918, { 0x86, 0x8e });
        gbc.writeMem(0xed72, { 0xf1 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xa91a, gbc.sp());
        EXPECT(0xed73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xa918));
        EXPECT(0x8e, gbc.readMem(0xa919));
        EXPECT(0xf1, gbc.readMem(0xed72));
        // F1 00A5
        gbc.setState(0x8e1e, 0x139d, 0xd240, 0xb3b8, 0xab32, 0xa233, 0x1, 0x0);
        gbc.writeMem(0x139d, { 0x30, 0xa4 });
        gbc.writeMem(0x8e1e, { 0xf1 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x139f, gbc.sp());
        EXPECT(0x8e1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8e1e));
        // F1 00A6
        gbc.setState(0xd606, 0x8590, 0x7690, 0x28fd, 0x3560, 0x938d, 0x0, 0x0);
        gbc.writeMem(0x8590, { 0x36, 0x99 });
        gbc.writeMem(0xd606, { 0xf1 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x8592, gbc.sp());
        EXPECT(0xd607, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x8590));
        EXPECT(0x99, gbc.readMem(0x8591));
        EXPECT(0xf1, gbc.readMem(0xd606));
        // F1 00A7
        gbc.setState(0x8eec, 0x9855, 0xcbe0, 0x1a0a, 0x1f07, 0x8ba9, 0x1, 0x1);
        gbc.writeMem(0x8eec, { 0xf1 });
        gbc.writeMem(0x9855, { 0xcb, 0x8f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x9857, gbc.sp());
        EXPECT(0x8eed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8eec));
        EXPECT(0xcb, gbc.readMem(0x9855));
        EXPECT(0x8f, gbc.readMem(0x9856));
        // F1 00A8
        gbc.setState(0x81c, 0x4942, 0xf7f0, 0xfcf1, 0xb60, 0x9795, 0x1, 0x0);
        gbc.writeMem(0x81c, { 0xf1 });
        gbc.writeMem(0x4942, { 0x6d, 0xe9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4944, gbc.sp());
        EXPECT(0x81d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 00A9
        gbc.setState(0xe779, 0xa6ab, 0x2fe0, 0xe17e, 0xf3f9, 0xbd16, 0x0, 0x1);
        gbc.writeMem(0xa6ab, { 0x10, 0xf9 });
        gbc.writeMem(0xe779, { 0xf1 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xa6ad, gbc.sp());
        EXPECT(0xe77a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa6ab));
        EXPECT(0xf9, gbc.readMem(0xa6ac));
        EXPECT(0xf1, gbc.readMem(0xe779));
        // F1 00AA
        gbc.setState(0x4403, 0xbbc2, 0x8520, 0x6212, 0x8347, 0x713c, 0x0, 0x1);
        gbc.writeMem(0x4403, { 0xf1 });
        gbc.writeMem(0xbbc2, { 0x47, 0xfe });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xbbc4, gbc.sp());
        EXPECT(0x4404, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xbbc2));
        EXPECT(0xfe, gbc.readMem(0xbbc3));
        // F1 00AB
        gbc.setState(0xd0bc, 0x87fc, 0xada0, 0xe80d, 0x584c, 0x3426, 0x1, 0x0);
        gbc.writeMem(0x87fc, { 0x7, 0xc2 });
        gbc.writeMem(0xd0bc, { 0xf1 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x87fe, gbc.sp());
        EXPECT(0xd0bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x87fc));
        EXPECT(0xc2, gbc.readMem(0x87fd));
        EXPECT(0xf1, gbc.readMem(0xd0bc));
        // F1 00AC
        gbc.setState(0x491d, 0x676c, 0xf3d0, 0xaa11, 0x59d8, 0x3966, 0x1, 0x0);
        gbc.writeMem(0x491d, { 0xf1 });
        gbc.writeMem(0x676c, { 0xcd, 0x69 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x676e, gbc.sp());
        EXPECT(0x491e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 00AD
        gbc.setState(0x3a78, 0x2e17, 0x8de0, 0x9247, 0x748c, 0x8aa, 0x0, 0x1);
        gbc.writeMem(0x2e17, { 0xfd, 0xd3 });
        gbc.writeMem(0x3a78, { 0xf1 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x2e19, gbc.sp());
        EXPECT(0x3a79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 00AE
        gbc.setState(0x34a, 0x8401, 0x2d90, 0xb6e9, 0x2cf2, 0x6946, 0x1, 0x0);
        gbc.writeMem(0x34a, { 0xf1 });
        gbc.writeMem(0x8401, { 0x86, 0xdc });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8403, gbc.sp());
        EXPECT(0x34b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8401));
        EXPECT(0xdc, gbc.readMem(0x8402));
        // F1 00AF
        gbc.setState(0x79ad, 0xd1d7, 0x93d0, 0x399a, 0xa8f7, 0x7ec, 0x1, 0x1);
        gbc.writeMem(0x79ad, { 0xf1 });
        gbc.writeMem(0xd1d7, { 0x7f, 0x51 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xd1d9, gbc.sp());
        EXPECT(0x79ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xd1d7));
        EXPECT(0x51, gbc.readMem(0xd1d8));
        // F1 00B0
        gbc.setState(0x96e4, 0x324f, 0xf360, 0x8cb7, 0x294c, 0xece5, 0x0, 0x0);
        gbc.writeMem(0x324f, { 0x85, 0x77 });
        gbc.writeMem(0x96e4, { 0xf1 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x3251, gbc.sp());
        EXPECT(0x96e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x96e4));
        // F1 00B1
        gbc.setState(0x89c0, 0xe00b, 0x41c0, 0xc317, 0xdcaa, 0x57c7, 0x0, 0x0);
        gbc.writeMem(0x89c0, { 0xf1 });
        gbc.writeMem(0xe00b, { 0xa1, 0xd8 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xe00d, gbc.sp());
        EXPECT(0x89c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x89c0));
        EXPECT(0xa1, gbc.readMem(0xe00b));
        EXPECT(0xd8, gbc.readMem(0xe00c));
        // F1 00B2
        gbc.setState(0xa68a, 0x857, 0xc580, 0xbe95, 0x720f, 0x5661, 0x0, 0x0);
        gbc.writeMem(0x857, { 0xe7, 0x88 });
        gbc.writeMem(0xa68a, { 0xf1 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x859, gbc.sp());
        EXPECT(0xa68b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xa68a));
        // F1 00B3
        gbc.setState(0x50cf, 0xff99, 0x7ad0, 0x3844, 0x8a89, 0x8aa0, 0x0, 0x0);
        gbc.writeMem(0x50cf, { 0xf1 });
        gbc.writeMem(0xff99, { 0x3d, 0x2f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xff9b, gbc.sp());
        EXPECT(0x50d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xff99));
        EXPECT(0x2f, gbc.readMem(0xff9a));
        // F1 00B4
        gbc.setState(0x8fd3, 0x53e2, 0xc9b0, 0x28f2, 0x9d19, 0x382c, 0x0, 0x1);
        gbc.writeMem(0x53e2, { 0xf4, 0xa8 });
        gbc.writeMem(0x8fd3, { 0xf1 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x53e4, gbc.sp());
        EXPECT(0x8fd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8fd3));
        // F1 00B5
        gbc.setState(0xa29a, 0x9bbb, 0x8340, 0x7644, 0x961d, 0x1eb4, 0x0, 0x1);
        gbc.writeMem(0x9bbb, { 0x6d, 0x3b });
        gbc.writeMem(0xa29a, { 0xf1 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x9bbd, gbc.sp());
        EXPECT(0xa29b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x9bbb));
        EXPECT(0x3b, gbc.readMem(0x9bbc));
        EXPECT(0xf1, gbc.readMem(0xa29a));
        // F1 00B6
        gbc.setState(0x16fb, 0x4509, 0x1750, 0xf380, 0x1a71, 0xee46, 0x1, 0x0);
        gbc.writeMem(0x16fb, { 0xf1 });
        gbc.writeMem(0x4509, { 0x98, 0xa5 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x450b, gbc.sp());
        EXPECT(0x16fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 00B7
        gbc.setState(0x6511, 0x2ea6, 0xf9f0, 0x6c06, 0x2dab, 0x7c90, 0x0, 0x0);
        gbc.writeMem(0x2ea6, { 0x14, 0x15 });
        gbc.writeMem(0x6511, { 0xf1 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x2ea8, gbc.sp());
        EXPECT(0x6512, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 00B8
        gbc.setState(0x4dd6, 0x294d, 0xa860, 0x4062, 0x2de7, 0x525c, 0x1, 0x1);
        gbc.writeMem(0x294d, { 0xde, 0xdc });
        gbc.writeMem(0x4dd6, { 0xf1 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x294f, gbc.sp());
        EXPECT(0x4dd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 00B9
        gbc.setState(0xac7b, 0xebd0, 0xc060, 0xba09, 0x4d6f, 0x2918, 0x0, 0x1);
        gbc.writeMem(0xac7b, { 0xf1 });
        gbc.writeMem(0xebd0, { 0xae, 0xf0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xebd2, gbc.sp());
        EXPECT(0xac7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xac7b));
        EXPECT(0xae, gbc.readMem(0xebd0));
        EXPECT(0xf0, gbc.readMem(0xebd1));
        // F1 00BA
        gbc.setState(0xcb, 0x871b, 0xdb80, 0xbeb4, 0x162a, 0x5480, 0x0, 0x0);
        gbc.writeMem(0xcb, { 0xf1 });
        gbc.writeMem(0x871b, { 0x67, 0x69 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x871d, gbc.sp());
        EXPECT(0xcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0x871b));
        EXPECT(0x69, gbc.readMem(0x871c));
        // F1 00BB
        gbc.setState(0x6bd4, 0x60d9, 0x87a0, 0x882a, 0xb1a5, 0xaa7b, 0x0, 0x1);
        gbc.writeMem(0x60d9, { 0x77, 0x11 });
        gbc.writeMem(0x6bd4, { 0xf1 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x60db, gbc.sp());
        EXPECT(0x6bd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 00BC
        gbc.setState(0xdf5d, 0xbf66, 0x8040, 0xee96, 0xb5d4, 0x22a3, 0x0, 0x0);
        gbc.writeMem(0xbf66, { 0xe8, 0xdf });
        gbc.writeMem(0xdf5d, { 0xf1 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xbf68, gbc.sp());
        EXPECT(0xdf5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xbf66));
        EXPECT(0xdf, gbc.readMem(0xbf67));
        EXPECT(0xf1, gbc.readMem(0xdf5d));
        // F1 00BD
        gbc.setState(0xe447, 0x3668, 0x3e0, 0xd014, 0xb781, 0xc150, 0x0, 0x1);
        gbc.writeMem(0x3668, { 0xd3, 0x6c });
        gbc.writeMem(0xe447, { 0xf1 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x366a, gbc.sp());
        EXPECT(0xe448, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xe447));
        // F1 00BE
        gbc.setState(0xa221, 0x7f7d, 0x3900, 0x3f42, 0x90d3, 0x29a3, 0x0, 0x1);
        gbc.writeMem(0x7f7d, { 0xd2, 0xc2 });
        gbc.writeMem(0xa221, { 0xf1 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x7f7f, gbc.sp());
        EXPECT(0xa222, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xa221));
        // F1 00BF
        gbc.setState(0x6112, 0xba5c, 0x89b0, 0x2058, 0x260e, 0xa649, 0x0, 0x1);
        gbc.writeMem(0x6112, { 0xf1 });
        gbc.writeMem(0xba5c, { 0x1a, 0xe5 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xba5e, gbc.sp());
        EXPECT(0x6113, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xba5c));
        EXPECT(0xe5, gbc.readMem(0xba5d));
        // F1 00C0
        gbc.setState(0x5d51, 0xb2bc, 0xa090, 0x6f34, 0x57b8, 0x83c9, 0x1, 0x0);
        gbc.writeMem(0x5d51, { 0xf1 });
        gbc.writeMem(0xb2bc, { 0x67, 0xbc });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xb2be, gbc.sp());
        EXPECT(0x5d52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0xb2bc));
        EXPECT(0xbc, gbc.readMem(0xb2bd));
        // F1 00C1
        gbc.setState(0xa893, 0xa208, 0x3e40, 0x89c4, 0xaf26, 0x47be, 0x0, 0x0);
        gbc.writeMem(0xa208, { 0x82, 0x8e });
        gbc.writeMem(0xa893, { 0xf1 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xa20a, gbc.sp());
        EXPECT(0xa894, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa208));
        EXPECT(0x8e, gbc.readMem(0xa209));
        EXPECT(0xf1, gbc.readMem(0xa893));
        // F1 00C2
        gbc.setState(0xebc3, 0x2cdb, 0xcbd0, 0x2572, 0xfc6a, 0xa027, 0x1, 0x0);
        gbc.writeMem(0x2cdb, { 0x10, 0x64 });
        gbc.writeMem(0xebc3, { 0xf1 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x2cdd, gbc.sp());
        EXPECT(0xebc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xebc3));
        // F1 00C3
        gbc.setState(0xeb45, 0xd3bf, 0x6fa0, 0x3de8, 0x5711, 0x1c71, 0x1, 0x1);
        gbc.writeMem(0xd3bf, { 0x1f, 0x14 });
        gbc.writeMem(0xeb45, { 0xf1 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd3c1, gbc.sp());
        EXPECT(0xeb46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xd3bf));
        EXPECT(0x14, gbc.readMem(0xd3c0));
        EXPECT(0xf1, gbc.readMem(0xeb45));
        // F1 00C4
        gbc.setState(0x664a, 0xcbb9, 0xd1c0, 0xefe3, 0x326, 0x9d56, 0x0, 0x1);
        gbc.writeMem(0x664a, { 0xf1 });
        gbc.writeMem(0xcbb9, { 0xda, 0xf7 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xcbbb, gbc.sp());
        EXPECT(0x664b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xcbb9));
        EXPECT(0xf7, gbc.readMem(0xcbba));
        // F1 00C5
        gbc.setState(0xe1e, 0xd893, 0x15b0, 0x1012, 0x4719, 0xe862, 0x1, 0x1);
        gbc.writeMem(0xe1e, { 0xf1 });
        gbc.writeMem(0xd893, { 0x5e, 0xa4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xd895, gbc.sp());
        EXPECT(0xe1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xd893));
        EXPECT(0xa4, gbc.readMem(0xd894));
        // F1 00C6
        gbc.setState(0xd2c4, 0x96b, 0xa230, 0xabae, 0x3d79, 0x22c7, 0x0, 0x1);
        gbc.writeMem(0x96b, { 0x9f, 0xb5 });
        gbc.writeMem(0xd2c4, { 0xf1 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x96d, gbc.sp());
        EXPECT(0xd2c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xd2c4));
        // F1 00C7
        gbc.setState(0x1d1, 0xa779, 0xf6f0, 0xf601, 0x1d47, 0x94ce, 0x1, 0x1);
        gbc.writeMem(0x1d1, { 0xf1 });
        gbc.writeMem(0xa779, { 0xd2, 0x81 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xa77b, gbc.sp());
        EXPECT(0x1d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xa779));
        EXPECT(0x81, gbc.readMem(0xa77a));
        // F1 00C8
        gbc.setState(0xe6e3, 0xeb06, 0x1c80, 0x82a, 0xb146, 0x8746, 0x1, 0x1);
        gbc.writeMem(0xe6e3, { 0xf1 });
        gbc.writeMem(0xeb06, { 0x85, 0x66 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xeb08, gbc.sp());
        EXPECT(0xe6e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xe6e3));
        EXPECT(0x85, gbc.readMem(0xeb06));
        EXPECT(0x66, gbc.readMem(0xeb07));
        // F1 00C9
        gbc.setState(0xc1f4, 0xa6e3, 0xe4b0, 0x86a8, 0xdb6d, 0xea47, 0x1, 0x1);
        gbc.writeMem(0xa6e3, { 0xb2, 0xb8 });
        gbc.writeMem(0xc1f4, { 0xf1 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xa6e5, gbc.sp());
        EXPECT(0xc1f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa6e3));
        EXPECT(0xb8, gbc.readMem(0xa6e4));
        EXPECT(0xf1, gbc.readMem(0xc1f4));
        // F1 00CA
        gbc.setState(0x2d13, 0x996e, 0xb4c0, 0xc44d, 0xe782, 0x1513, 0x1, 0x1);
        gbc.writeMem(0x2d13, { 0xf1 });
        gbc.writeMem(0x996e, { 0xd3, 0x73 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x9970, gbc.sp());
        EXPECT(0x2d14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0x996e));
        EXPECT(0x73, gbc.readMem(0x996f));
        // F1 00CB
        gbc.setState(0x5da5, 0xfd94, 0x8280, 0x4fcd, 0x77c8, 0x96ff, 0x0, 0x1);
        gbc.writeMem(0x5da5, { 0xf1 });
        gbc.writeMem(0xfd94, { 0x2b, 0xdc });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xfd96, gbc.sp());
        EXPECT(0x5da6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xfd94));
        EXPECT(0xdc, gbc.readMem(0xfd95));
        // F1 00CC
        gbc.setState(0x4fa8, 0xe080, 0x1810, 0x60c, 0x953b, 0xd1be, 0x1, 0x1);
        gbc.writeMem(0x4fa8, { 0xf1 });
        gbc.writeMem(0xe080, { 0x5e, 0xe0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xe082, gbc.sp());
        EXPECT(0x4fa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xe080));
        EXPECT(0xe0, gbc.readMem(0xe081));
        // F1 00CD
        gbc.setState(0xa140, 0x2cf, 0x6310, 0x268d, 0x5b91, 0xd7bf, 0x0, 0x0);
        gbc.writeMem(0x2cf, { 0xe1, 0x9e });
        gbc.writeMem(0xa140, { 0xf1 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x2d1, gbc.sp());
        EXPECT(0xa141, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xa140));
        // F1 00CE
        gbc.setState(0x833f, 0x5650, 0x9b60, 0xad72, 0x793b, 0xce7, 0x0, 0x1);
        gbc.writeMem(0x5650, { 0xeb, 0x58 });
        gbc.writeMem(0x833f, { 0xf1 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x5652, gbc.sp());
        EXPECT(0x8340, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x833f));
        // F1 00D0
        gbc.setState(0x4c6c, 0x75c9, 0x1680, 0x1d2, 0x7950, 0xced9, 0x0, 0x0);
        gbc.writeMem(0x4c6c, { 0xf1 });
        gbc.writeMem(0x75c9, { 0xa2, 0x99 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x75cb, gbc.sp());
        EXPECT(0x4c6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 00D1
        gbc.setState(0x8d78, 0x6092, 0x8290, 0x9279, 0x71f7, 0xa2f3, 0x1, 0x0);
        gbc.writeMem(0x6092, { 0x71, 0x9e });
        gbc.writeMem(0x8d78, { 0xf1 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x6094, gbc.sp());
        EXPECT(0x8d79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8d78));
        // F1 00D2
        gbc.setState(0x4030, 0xdac5, 0xcd50, 0x357b, 0xa9f1, 0xcf97, 0x0, 0x1);
        gbc.writeMem(0x4030, { 0xf1 });
        gbc.writeMem(0xdac5, { 0x6d, 0xa6 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xdac7, gbc.sp());
        EXPECT(0x4031, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xdac5));
        EXPECT(0xa6, gbc.readMem(0xdac6));
        // F1 00D4
        gbc.setState(0x13c3, 0x547e, 0xd10, 0x1313, 0x20f5, 0x158a, 0x0, 0x1);
        gbc.writeMem(0x13c3, { 0xf1 });
        gbc.writeMem(0x547e, { 0x3a, 0x49 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x5480, gbc.sp());
        EXPECT(0x13c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 00D6
        gbc.setState(0x3581, 0x3339, 0xd710, 0x576e, 0x451d, 0x8fe0, 0x0, 0x0);
        gbc.writeMem(0x3339, { 0xe7, 0x94 });
        gbc.writeMem(0x3581, { 0xf1 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x333b, gbc.sp());
        EXPECT(0x3582, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 00D7
        gbc.setState(0xc457, 0x9008, 0x8470, 0x5376, 0x503d, 0x722b, 0x0, 0x1);
        gbc.writeMem(0x9008, { 0xd8, 0x5 });
        gbc.writeMem(0xc457, { 0xf1 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x900a, gbc.sp());
        EXPECT(0xc458, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0x9008));
        EXPECT(0x5, gbc.readMem(0x9009));
        EXPECT(0xf1, gbc.readMem(0xc457));
        // F1 00D8
        gbc.setState(0x5156, 0x1fff, 0x3a20, 0xc91a, 0x46f6, 0x341b, 0x0, 0x0);
        gbc.writeMem(0x1fff, { 0xf0, 0xb1 });
        gbc.writeMem(0x5156, { 0xf1 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x2001, gbc.sp());
        EXPECT(0x5157, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 00D9
        gbc.setState(0xd116, 0xb1f2, 0xb450, 0xa9be, 0x72ef, 0xe488, 0x1, 0x0);
        gbc.writeMem(0xb1f2, { 0xc7, 0x75 });
        gbc.writeMem(0xd116, { 0xf1 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xb1f4, gbc.sp());
        EXPECT(0xd117, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xb1f2));
        EXPECT(0x75, gbc.readMem(0xb1f3));
        EXPECT(0xf1, gbc.readMem(0xd116));
        // F1 00DA
        gbc.setState(0x2d30, 0x2690, 0x5fe0, 0xf6dc, 0xb2b6, 0xf644, 0x1, 0x1);
        gbc.writeMem(0x2690, { 0x49, 0x61 });
        gbc.writeMem(0x2d30, { 0xf1 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2692, gbc.sp());
        EXPECT(0x2d31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 00DB
        gbc.setState(0x7cdc, 0x5e58, 0x69a0, 0xf375, 0xc23, 0x7a39, 0x1, 0x0);
        gbc.writeMem(0x5e58, { 0x88, 0xe4 });
        gbc.writeMem(0x7cdc, { 0xf1 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5e5a, gbc.sp());
        EXPECT(0x7cdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 00DC
        gbc.setState(0xdf8b, 0x9aae, 0xd860, 0x52fb, 0x789, 0xe9df, 0x1, 0x1);
        gbc.writeMem(0x9aae, { 0x52, 0x5f });
        gbc.writeMem(0xdf8b, { 0xf1 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x9ab0, gbc.sp());
        EXPECT(0xdf8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x9aae));
        EXPECT(0x5f, gbc.readMem(0x9aaf));
        EXPECT(0xf1, gbc.readMem(0xdf8b));
        // F1 00DD
        gbc.setState(0x6e7d, 0x7721, 0xb640, 0xe126, 0xcd7, 0x8c1c, 0x0, 0x1);
        gbc.writeMem(0x6e7d, { 0xf1 });
        gbc.writeMem(0x7721, { 0x99, 0xe5 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x7723, gbc.sp());
        EXPECT(0x6e7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 00DE
        gbc.setState(0xba67, 0x722, 0xbd60, 0x50f0, 0x2370, 0xbf03, 0x1, 0x1);
        gbc.writeMem(0x722, { 0xb0, 0x0 });
        gbc.writeMem(0xba67, { 0xf1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x724, gbc.sp());
        EXPECT(0xba68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xba67));
        // F1 00DF
        gbc.setState(0x445f, 0x13ea, 0x7760, 0xd2e0, 0x5984, 0x2a7f, 0x1, 0x1);
        gbc.writeMem(0x13ea, { 0x73, 0xdc });
        gbc.writeMem(0x445f, { 0xf1 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x13ec, gbc.sp());
        EXPECT(0x4460, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 00E0
        gbc.setState(0xc2a8, 0x32a6, 0x3720, 0x5165, 0x5367, 0x7210, 0x0, 0x0);
        gbc.writeMem(0x32a6, { 0xd2, 0x59 });
        gbc.writeMem(0xc2a8, { 0xf1 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x32a8, gbc.sp());
        EXPECT(0xc2a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xc2a8));
        // F1 00E1
        gbc.setState(0x8fb5, 0x129c, 0xc6f0, 0x405b, 0xa3da, 0x8a29, 0x0, 0x1);
        gbc.writeMem(0x129c, { 0x97, 0xe6 });
        gbc.writeMem(0x8fb5, { 0xf1 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x129e, gbc.sp());
        EXPECT(0x8fb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8fb5));
        // F1 00E2
        gbc.setState(0xc1c, 0xf29, 0xa620, 0x5dd9, 0x9f86, 0x2fc4, 0x0, 0x0);
        gbc.writeMem(0xc1c, { 0xf1 });
        gbc.writeMem(0xf29, { 0x32, 0xd8 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf2b, gbc.sp());
        EXPECT(0xc1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 00E3
        gbc.setState(0x8b07, 0x145, 0xb9c0, 0xe94c, 0x5683, 0x67d4, 0x0, 0x1);
        gbc.writeMem(0x145, { 0x1e, 0x4 });
        gbc.writeMem(0x8b07, { 0xf1 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x147, gbc.sp());
        EXPECT(0x8b08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8b07));
        // F1 00E4
        gbc.setState(0xb0bd, 0x1e10, 0x1f30, 0x5876, 0xcb89, 0x796, 0x0, 0x1);
        gbc.writeMem(0x1e10, { 0x9f, 0x1e });
        gbc.writeMem(0xb0bd, { 0xf1 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x1e12, gbc.sp());
        EXPECT(0xb0be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xb0bd));
        // F1 00E5
        gbc.setState(0x144c, 0xfe99, 0xf2d0, 0x40ec, 0x9989, 0x6f29, 0x0, 0x0);
        gbc.writeMem(0x144c, { 0xf1 });
        gbc.writeMem(0xfe99, { 0xe1, 0x4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xfe9b, gbc.sp());
        EXPECT(0x144d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xfe99));
        EXPECT(0x4, gbc.readMem(0xfe9a));
        // F1 00E6
        gbc.setState(0x43c9, 0x7a6f, 0x1080, 0x408a, 0xbc76, 0x8237, 0x1, 0x1);
        gbc.writeMem(0x43c9, { 0xf1 });
        gbc.writeMem(0x7a6f, { 0x53, 0x71 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x7a71, gbc.sp());
        EXPECT(0x43ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 00E7
        gbc.setState(0xc5ac, 0xf459, 0x9e50, 0xc67c, 0x4db5, 0x911a, 0x0, 0x1);
        gbc.writeMem(0xc5ac, { 0xf1 });
        gbc.writeMem(0xf459, { 0xbb, 0x35 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf45b, gbc.sp());
        EXPECT(0xc5ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xc5ac));
        EXPECT(0xbb, gbc.readMem(0xf459));
        EXPECT(0x35, gbc.readMem(0xf45a));
        // F1 00E8
        gbc.setState(0xad0f, 0x9f4d, 0x4a10, 0x6b92, 0x20d5, 0x1652, 0x1, 0x1);
        gbc.writeMem(0x9f4d, { 0x1, 0x7e });
        gbc.writeMem(0xad0f, { 0xf1 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x9f4f, gbc.sp());
        EXPECT(0xad10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0x9f4d));
        EXPECT(0x7e, gbc.readMem(0x9f4e));
        EXPECT(0xf1, gbc.readMem(0xad0f));
        // F1 00E9
        gbc.setState(0xebca, 0x6f49, 0x5d90, 0xb2c5, 0xb54d, 0x3259, 0x0, 0x1);
        gbc.writeMem(0x6f49, { 0xbc, 0x1e });
        gbc.writeMem(0xebca, { 0xf1 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x6f4b, gbc.sp());
        EXPECT(0xebcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xebca));
        // F1 00EA
        gbc.setState(0x8b58, 0x6b7, 0xb0, 0xcd57, 0xfe11, 0x9bda, 0x0, 0x0);
        gbc.writeMem(0x6b7, { 0xcb, 0x42 });
        gbc.writeMem(0x8b58, { 0xf1 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x6b9, gbc.sp());
        EXPECT(0x8b59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8b58));
        // F1 00EB
        gbc.setState(0x6d20, 0x254e, 0xc6e0, 0x5e3e, 0xb123, 0x1269, 0x0, 0x0);
        gbc.writeMem(0x254e, { 0xbd, 0x4a });
        gbc.writeMem(0x6d20, { 0xf1 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x2550, gbc.sp());
        EXPECT(0x6d21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 00EC
        gbc.setState(0xba42, 0x3e63, 0x1270, 0x90e7, 0xa059, 0x855b, 0x0, 0x0);
        gbc.writeMem(0x3e63, { 0x8, 0x3b });
        gbc.writeMem(0xba42, { 0xf1 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x3e65, gbc.sp());
        EXPECT(0xba43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xba42));
        // F1 00ED
        gbc.setState(0x3194, 0x973b, 0xb820, 0x466d, 0xb478, 0x9de6, 0x1, 0x1);
        gbc.writeMem(0x3194, { 0xf1 });
        gbc.writeMem(0x973b, { 0xb7, 0xcc });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x973d, gbc.sp());
        EXPECT(0x3195, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x973b));
        EXPECT(0xcc, gbc.readMem(0x973c));
        // F1 00EE
        gbc.setState(0x8840, 0x7c44, 0x7700, 0x343f, 0xbc47, 0xa160, 0x0, 0x1);
        gbc.writeMem(0x7c44, { 0x62, 0x67 });
        gbc.writeMem(0x8840, { 0xf1 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x7c46, gbc.sp());
        EXPECT(0x8841, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8840));
        // F1 00F0
        gbc.setState(0xdea, 0x93d2, 0x87d0, 0xa2b8, 0xbeab, 0x65f3, 0x0, 0x1);
        gbc.writeMem(0xdea, { 0xf1 });
        gbc.writeMem(0x93d2, { 0xbb, 0x4e });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x93d4, gbc.sp());
        EXPECT(0xdeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x93d2));
        EXPECT(0x4e, gbc.readMem(0x93d3));
        // F1 00F1
        gbc.setState(0xe7e8, 0x604b, 0xf9c0, 0xb789, 0x88ba, 0xe24b, 0x0, 0x0);
        gbc.writeMem(0x604b, { 0xa4, 0x10 });
        gbc.writeMem(0xe7e8, { 0xf1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x604d, gbc.sp());
        EXPECT(0xe7e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xe7e8));
        // F1 00F2
        gbc.setState(0x5c6d, 0x2531, 0xbad0, 0x9cb4, 0xb4d5, 0x5b1b, 0x0, 0x0);
        gbc.writeMem(0x2531, { 0xad, 0x51 });
        gbc.writeMem(0x5c6d, { 0xf1 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x2533, gbc.sp());
        EXPECT(0x5c6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 00F3
        gbc.setState(0x3d18, 0xe392, 0x31c0, 0x5af9, 0x5f52, 0x8e6c, 0x0, 0x1);
        gbc.writeMem(0x3d18, { 0xf1 });
        gbc.writeMem(0xe392, { 0x15, 0x72 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe394, gbc.sp());
        EXPECT(0x3d19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe392));
        EXPECT(0x72, gbc.readMem(0xe393));
        // F1 00F4
        gbc.setState(0xb6a2, 0x4dec, 0x6570, 0xc900, 0x2852, 0x80b9, 0x1, 0x1);
        gbc.writeMem(0x4dec, { 0x71, 0x6a });
        gbc.writeMem(0xb6a2, { 0xf1 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x4dee, gbc.sp());
        EXPECT(0xb6a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xb6a2));
        // F1 00F5
        gbc.setState(0x3e7d, 0xa05c, 0x4000, 0xb1f3, 0x4253, 0x5b, 0x1, 0x1);
        gbc.writeMem(0x3e7d, { 0xf1 });
        gbc.writeMem(0xa05c, { 0xae, 0x8e });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xa05e, gbc.sp());
        EXPECT(0x3e7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xa05c));
        EXPECT(0x8e, gbc.readMem(0xa05d));
        // F1 00F6
        gbc.setState(0xb18b, 0x4f55, 0x62f0, 0xef6f, 0x53cc, 0x2132, 0x1, 0x0);
        gbc.writeMem(0x4f55, { 0xcc, 0xa2 });
        gbc.writeMem(0xb18b, { 0xf1 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x4f57, gbc.sp());
        EXPECT(0xb18c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xb18b));
        // F1 00F7
        gbc.setState(0x954c, 0x13d6, 0x2200, 0x275, 0xee79, 0xa6a9, 0x1, 0x1);
        gbc.writeMem(0x13d6, { 0x90, 0xf1 });
        gbc.writeMem(0x954c, { 0xf1 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x13d8, gbc.sp());
        EXPECT(0x954d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x954c));
        // F1 00F8
        gbc.setState(0xa59f, 0xf7f2, 0x22f0, 0x27b7, 0xdcf3, 0x5b83, 0x1, 0x0);
        gbc.writeMem(0xa59f, { 0xf1 });
        gbc.writeMem(0xf7f2, { 0x6f, 0x21 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xf7f4, gbc.sp());
        EXPECT(0xa5a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xa59f));
        EXPECT(0x6f, gbc.readMem(0xf7f2));
        EXPECT(0x21, gbc.readMem(0xf7f3));
        // F1 00F9
        gbc.setState(0xc66e, 0x9518, 0xc330, 0xb92b, 0xb584, 0x10ac, 0x1, 0x0);
        gbc.writeMem(0x9518, { 0xca, 0xdb });
        gbc.writeMem(0xc66e, { 0xf1 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x951a, gbc.sp());
        EXPECT(0xc66f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0x9518));
        EXPECT(0xdb, gbc.readMem(0x9519));
        EXPECT(0xf1, gbc.readMem(0xc66e));
        // F1 00FA
        gbc.setState(0x823b, 0x812c, 0xb10, 0xd10a, 0x28c0, 0x5b79, 0x1, 0x1);
        gbc.writeMem(0x812c, { 0x98, 0x5 });
        gbc.writeMem(0x823b, { 0xf1 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x812e, gbc.sp());
        EXPECT(0x823c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x812c));
        EXPECT(0x5, gbc.readMem(0x812d));
        EXPECT(0xf1, gbc.readMem(0x823b));
        // F1 00FB
        gbc.setState(0x28e0, 0xb68b, 0x9ed0, 0x125c, 0xaef6, 0x7993, 0x0, 0x1);
        gbc.writeMem(0x28e0, { 0xf1 });
        gbc.writeMem(0xb68b, { 0x19, 0xc0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb68d, gbc.sp());
        EXPECT(0x28e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xb68b));
        EXPECT(0xc0, gbc.readMem(0xb68c));
        // F1 00FC
        gbc.setState(0x5f9c, 0xaa64, 0x5830, 0x46e0, 0xc49d, 0x60db, 0x0, 0x1);
        gbc.writeMem(0x5f9c, { 0xf1 });
        gbc.writeMem(0xaa64, { 0xdd, 0x10 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xaa66, gbc.sp());
        EXPECT(0x5f9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xaa64));
        EXPECT(0x10, gbc.readMem(0xaa65));
        // F1 00FD
        gbc.setState(0x8b82, 0x8284, 0x1290, 0xe98e, 0x448, 0xda45, 0x0, 0x1);
        gbc.writeMem(0x8284, { 0xd4, 0xce });
        gbc.writeMem(0x8b82, { 0xf1 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x8286, gbc.sp());
        EXPECT(0x8b83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x8284));
        EXPECT(0xce, gbc.readMem(0x8285));
        EXPECT(0xf1, gbc.readMem(0x8b82));
        // F1 00FE
        gbc.setState(0x9bac, 0x6d6, 0x8d40, 0x7d3d, 0xd1be, 0xf76e, 0x1, 0x0);
        gbc.writeMem(0x6d6, { 0x19, 0x8c });
        gbc.writeMem(0x9bac, { 0xf1 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x6d8, gbc.sp());
        EXPECT(0x9bad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x9bac));
        // F1 00FF
        gbc.setState(0x300f, 0x1131, 0xb3a0, 0xc412, 0x452b, 0x8366, 0x1, 0x0);
        gbc.writeMem(0x1131, { 0x5c, 0x9 });
        gbc.writeMem(0x300f, { 0xf1 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x1133, gbc.sp());
        EXPECT(0x3010, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 0100
        gbc.setState(0x9e0e, 0x5bba, 0xf590, 0x8fa1, 0x8139, 0xa5ec, 0x1, 0x0);
        gbc.writeMem(0x5bba, { 0x1f, 0x84 });
        gbc.writeMem(0x9e0e, { 0xf1 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x5bbc, gbc.sp());
        EXPECT(0x9e0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x9e0e));
        // F1 0101
        gbc.setState(0xe898, 0xb0be, 0x2a90, 0x36e3, 0xc3f8, 0x2b29, 0x0, 0x0);
        gbc.writeMem(0xb0be, { 0x94, 0x2c });
        gbc.writeMem(0xe898, { 0xf1 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xb0c0, gbc.sp());
        EXPECT(0xe899, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xb0be));
        EXPECT(0x2c, gbc.readMem(0xb0bf));
        EXPECT(0xf1, gbc.readMem(0xe898));
        // F1 0102
        gbc.setState(0xd70d, 0xc03c, 0xdfa0, 0xbd4a, 0xe03e, 0x2c1e, 0x1, 0x1);
        gbc.writeMem(0xc03c, { 0x9b, 0x75 });
        gbc.writeMem(0xd70d, { 0xf1 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xc03e, gbc.sp());
        EXPECT(0xd70e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xc03c));
        EXPECT(0x75, gbc.readMem(0xc03d));
        EXPECT(0xf1, gbc.readMem(0xd70d));
        // F1 0103
        gbc.setState(0x5e66, 0x37fc, 0xc0f0, 0x577a, 0x7a75, 0x9a0, 0x1, 0x0);
        gbc.writeMem(0x37fc, { 0xc3, 0x20 });
        gbc.writeMem(0x5e66, { 0xf1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x37fe, gbc.sp());
        EXPECT(0x5e67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0104
        gbc.setState(0x49c2, 0xd918, 0xdea0, 0x947a, 0x85dc, 0x89fc, 0x1, 0x0);
        gbc.writeMem(0x49c2, { 0xf1 });
        gbc.writeMem(0xd918, { 0x5e, 0xf0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd91a, gbc.sp());
        EXPECT(0x49c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xd918));
        EXPECT(0xf0, gbc.readMem(0xd919));
        // F1 0105
        gbc.setState(0x6ac0, 0xbba6, 0xc0f0, 0x18aa, 0xa7da, 0x3bd6, 0x0, 0x1);
        gbc.writeMem(0x6ac0, { 0xf1 });
        gbc.writeMem(0xbba6, { 0xac, 0x98 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xbba8, gbc.sp());
        EXPECT(0x6ac1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xbba6));
        EXPECT(0x98, gbc.readMem(0xbba7));
        // F1 0107
        gbc.setState(0xcd8f, 0x9118, 0xbdf0, 0xe6bf, 0x6e47, 0xa0c5, 0x0, 0x0);
        gbc.writeMem(0x9118, { 0x91, 0x16 });
        gbc.writeMem(0xcd8f, { 0xf1 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x911a, gbc.sp());
        EXPECT(0xcd90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9118));
        EXPECT(0x16, gbc.readMem(0x9119));
        EXPECT(0xf1, gbc.readMem(0xcd8f));
        // F1 0108
        gbc.setState(0xd353, 0xf1af, 0xeb0, 0x1615, 0x5e48, 0x7de5, 0x0, 0x1);
        gbc.writeMem(0xd353, { 0xf1 });
        gbc.writeMem(0xf1af, { 0x46, 0x5d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xf1b1, gbc.sp());
        EXPECT(0xd354, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xd353));
        EXPECT(0x46, gbc.readMem(0xf1af));
        EXPECT(0x5d, gbc.readMem(0xf1b0));
        // F1 0109
        gbc.setState(0x3953, 0xeb43, 0x20, 0xda5, 0x90a7, 0x8c5c, 0x1, 0x1);
        gbc.writeMem(0x3953, { 0xf1 });
        gbc.writeMem(0xeb43, { 0x59, 0x97 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xeb45, gbc.sp());
        EXPECT(0x3954, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xeb43));
        EXPECT(0x97, gbc.readMem(0xeb44));
        // F1 010A
        gbc.setState(0x2fef, 0x2482, 0x8ef0, 0x1c7b, 0xf4bb, 0x9344, 0x1, 0x1);
        gbc.writeMem(0x2482, { 0xc4, 0x25 });
        gbc.writeMem(0x2fef, { 0xf1 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2484, gbc.sp());
        EXPECT(0x2ff0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 010B
        gbc.setState(0x8c15, 0x47a3, 0x8e70, 0x9ea3, 0x9c87, 0x11af, 0x0, 0x0);
        gbc.writeMem(0x47a3, { 0xc0, 0x0 });
        gbc.writeMem(0x8c15, { 0xf1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x47a5, gbc.sp());
        EXPECT(0x8c16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8c15));
        // F1 010C
        gbc.setState(0x57b8, 0x206a, 0x7f70, 0xcb37, 0xed8e, 0xab4f, 0x1, 0x1);
        gbc.writeMem(0x206a, { 0x43, 0x30 });
        gbc.writeMem(0x57b8, { 0xf1 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x206c, gbc.sp());
        EXPECT(0x57b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 010D
        gbc.setState(0xaa29, 0xaa4e, 0xa7c0, 0x1569, 0x61a8, 0x56e0, 0x1, 0x1);
        gbc.writeMem(0xaa29, { 0xf1 });
        gbc.writeMem(0xaa4e, { 0xca, 0x17 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xaa50, gbc.sp());
        EXPECT(0xaa2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xaa29));
        EXPECT(0xca, gbc.readMem(0xaa4e));
        EXPECT(0x17, gbc.readMem(0xaa4f));
        // F1 010E
        gbc.setState(0xe98e, 0xf697, 0x68e0, 0x8d5b, 0xd5ae, 0x31b, 0x1, 0x1);
        gbc.writeMem(0xe98e, { 0xf1 });
        gbc.writeMem(0xf697, { 0xa4, 0xa0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xf699, gbc.sp());
        EXPECT(0xe98f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xe98e));
        EXPECT(0xa4, gbc.readMem(0xf697));
        EXPECT(0xa0, gbc.readMem(0xf698));
        // F1 0111
        gbc.setState(0xac43, 0x5a02, 0x69c0, 0x50ef, 0x2797, 0x6f39, 0x1, 0x0);
        gbc.writeMem(0x5a02, { 0x58, 0xa4 });
        gbc.writeMem(0xac43, { 0xf1 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5a04, gbc.sp());
        EXPECT(0xac44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xac43));
        // F1 0112
        gbc.setState(0x1800, 0x103e, 0xdfa0, 0x4fb, 0x73dd, 0xbcc1, 0x0, 0x1);
        gbc.writeMem(0x103e, { 0x6e, 0x25 });
        gbc.writeMem(0x1800, { 0xf1 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x1040, gbc.sp());
        EXPECT(0x1801, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0113
        gbc.setState(0xed1d, 0x1542, 0x7070, 0x9d75, 0x6cf6, 0x252d, 0x1, 0x0);
        gbc.writeMem(0x1542, { 0x4a, 0x12 });
        gbc.writeMem(0xed1d, { 0xf1 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x1544, gbc.sp());
        EXPECT(0xed1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xed1d));
        // F1 0114
        gbc.setState(0x54e8, 0xd3db, 0xf6d0, 0x54f6, 0xc5b7, 0xb7d6, 0x1, 0x1);
        gbc.writeMem(0x54e8, { 0xf1 });
        gbc.writeMem(0xd3db, { 0xd8, 0xd2 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xd3dd, gbc.sp());
        EXPECT(0x54e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xd3db));
        EXPECT(0xd2, gbc.readMem(0xd3dc));
        // F1 0115
        gbc.setState(0x96a9, 0x95a6, 0x82d0, 0xfaa6, 0x7727, 0x9dd0, 0x0, 0x0);
        gbc.writeMem(0x95a6, { 0xec, 0x18 });
        gbc.writeMem(0x96a9, { 0xf1 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x95a8, gbc.sp());
        EXPECT(0x96aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0x95a6));
        EXPECT(0x18, gbc.readMem(0x95a7));
        EXPECT(0xf1, gbc.readMem(0x96a9));
        // F1 0116
        gbc.setState(0x6711, 0x6a36, 0xec00, 0xf808, 0x1d, 0x6f11, 0x1, 0x0);
        gbc.writeMem(0x6711, { 0xf1 });
        gbc.writeMem(0x6a36, { 0x22, 0x8b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x6a38, gbc.sp());
        EXPECT(0x6712, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0117
        gbc.setState(0x4d31, 0x8a86, 0xbf10, 0x1048, 0x343f, 0xb4c7, 0x0, 0x0);
        gbc.writeMem(0x4d31, { 0xf1 });
        gbc.writeMem(0x8a86, { 0x43, 0xe5 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x8a88, gbc.sp());
        EXPECT(0x4d32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8a86));
        EXPECT(0xe5, gbc.readMem(0x8a87));
        // F1 0118
        gbc.setState(0x1bea, 0xf948, 0x3ff0, 0xc510, 0x9d89, 0xb5e6, 0x0, 0x0);
        gbc.writeMem(0x1bea, { 0xf1 });
        gbc.writeMem(0xf948, { 0x43, 0x92 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xf94a, gbc.sp());
        EXPECT(0x1beb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xf948));
        EXPECT(0x92, gbc.readMem(0xf949));
        // F1 0119
        gbc.setState(0xd298, 0x4b99, 0xdfc0, 0x1266, 0x9603, 0xd22b, 0x1, 0x0);
        gbc.writeMem(0x4b99, { 0xc6, 0x3a });
        gbc.writeMem(0xd298, { 0xf1 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x4b9b, gbc.sp());
        EXPECT(0xd299, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xd298));
        // F1 011A
        gbc.setState(0x22f6, 0x64e5, 0x2dd0, 0xc919, 0x55e3, 0xbd62, 0x1, 0x1);
        gbc.writeMem(0x22f6, { 0xf1 });
        gbc.writeMem(0x64e5, { 0xca, 0xdb });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x64e7, gbc.sp());
        EXPECT(0x22f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 011B
        gbc.setState(0x1471, 0xdd72, 0x92f0, 0xf20a, 0xf809, 0x4c65, 0x1, 0x0);
        gbc.writeMem(0x1471, { 0xf1 });
        gbc.writeMem(0xdd72, { 0x57, 0x49 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xdd74, gbc.sp());
        EXPECT(0x1472, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xdd72));
        EXPECT(0x49, gbc.readMem(0xdd73));
        // F1 011C
        gbc.setState(0xd922, 0x57a6, 0x5160, 0xcc15, 0x1132, 0x4be6, 0x1, 0x0);
        gbc.writeMem(0x57a6, { 0x29, 0xbd });
        gbc.writeMem(0xd922, { 0xf1 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x57a8, gbc.sp());
        EXPECT(0xd923, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xd922));
        // F1 011D
        gbc.setState(0xb4d1, 0xfa77, 0xba50, 0x2f45, 0xdd72, 0xabc7, 0x0, 0x1);
        gbc.writeMem(0xb4d1, { 0xf1 });
        gbc.writeMem(0xfa77, { 0x4b, 0xca });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xfa79, gbc.sp());
        EXPECT(0xb4d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xb4d1));
        EXPECT(0x4b, gbc.readMem(0xfa77));
        EXPECT(0xca, gbc.readMem(0xfa78));
        // F1 011E
        gbc.setState(0xe45, 0xaa3c, 0x4550, 0xaa70, 0xc3ab, 0x7ed1, 0x0, 0x0);
        gbc.writeMem(0xe45, { 0xf1 });
        gbc.writeMem(0xaa3c, { 0xa3, 0xec });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xaa3e, gbc.sp());
        EXPECT(0xe46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xaa3c));
        EXPECT(0xec, gbc.readMem(0xaa3d));
        // F1 011F
        gbc.setState(0x5cd1, 0x5b02, 0x27a0, 0x5b74, 0xf369, 0xc8ab, 0x0, 0x0);
        gbc.writeMem(0x5b02, { 0xcc, 0x5a });
        gbc.writeMem(0x5cd1, { 0xf1 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x5b04, gbc.sp());
        EXPECT(0x5cd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0120
        gbc.setState(0x9a44, 0x51db, 0x2cd0, 0xf18, 0xbbf8, 0xe76b, 0x1, 0x0);
        gbc.writeMem(0x51db, { 0xa3, 0xcb });
        gbc.writeMem(0x9a44, { 0xf1 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x51dd, gbc.sp());
        EXPECT(0x9a45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x9a44));
        // F1 0121
        gbc.setState(0x4854, 0x9b37, 0xf120, 0x30e5, 0x1b74, 0x5c21, 0x1, 0x0);
        gbc.writeMem(0x4854, { 0xf1 });
        gbc.writeMem(0x9b37, { 0x2c, 0x58 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x9b39, gbc.sp());
        EXPECT(0x4855, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x9b37));
        EXPECT(0x58, gbc.readMem(0x9b38));
        // F1 0122
        gbc.setState(0xba53, 0x6936, 0xce90, 0x506a, 0x475d, 0x97c8, 0x0, 0x1);
        gbc.writeMem(0x6936, { 0xc2, 0xa8 });
        gbc.writeMem(0xba53, { 0xf1 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x6938, gbc.sp());
        EXPECT(0xba54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xba53));
        // F1 0123
        gbc.setState(0x6c68, 0xe196, 0x12a0, 0xe937, 0x34a9, 0x6c9c, 0x0, 0x1);
        gbc.writeMem(0x6c68, { 0xf1 });
        gbc.writeMem(0xe196, { 0x94, 0x31 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xe198, gbc.sp());
        EXPECT(0x6c69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xe196));
        EXPECT(0x31, gbc.readMem(0xe197));
        // F1 0125
        gbc.setState(0x95b3, 0x9041, 0xfbd0, 0xfd15, 0x90c5, 0x624f, 0x1, 0x0);
        gbc.writeMem(0x9041, { 0xdf, 0xa3 });
        gbc.writeMem(0x95b3, { 0xf1 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x9043, gbc.sp());
        EXPECT(0x95b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0x9041));
        EXPECT(0xa3, gbc.readMem(0x9042));
        EXPECT(0xf1, gbc.readMem(0x95b3));
        // F1 0126
        gbc.setState(0xa13f, 0x3398, 0x9720, 0xe9f3, 0x3c6, 0x2575, 0x1, 0x0);
        gbc.writeMem(0x3398, { 0xb9, 0x85 });
        gbc.writeMem(0xa13f, { 0xf1 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x339a, gbc.sp());
        EXPECT(0xa140, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xa13f));
        // F1 0127
        gbc.setState(0x5cd0, 0xf36, 0x6580, 0xa7d5, 0x46b7, 0x98db, 0x0, 0x0);
        gbc.writeMem(0xf36, { 0x76, 0x1e });
        gbc.writeMem(0x5cd0, { 0xf1 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf38, gbc.sp());
        EXPECT(0x5cd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 0128
        gbc.setState(0x63a9, 0x9a65, 0x2c80, 0x3ca, 0x93be, 0xa15, 0x1, 0x0);
        gbc.writeMem(0x63a9, { 0xf1 });
        gbc.writeMem(0x9a65, { 0xca, 0x24 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x9a67, gbc.sp());
        EXPECT(0x63aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0x9a65));
        EXPECT(0x24, gbc.readMem(0x9a66));
        // F1 012A
        gbc.setState(0x33bd, 0xfd3e, 0xe280, 0xb469, 0xd422, 0x6e61, 0x0, 0x1);
        gbc.writeMem(0x33bd, { 0xf1 });
        gbc.writeMem(0xfd3e, { 0x45, 0xfc });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xfd40, gbc.sp());
        EXPECT(0x33be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xfd3e));
        EXPECT(0xfc, gbc.readMem(0xfd3f));
        // F1 012B
        gbc.setState(0x4af3, 0xd645, 0x6d40, 0x868a, 0xe24a, 0x2a08, 0x0, 0x0);
        gbc.writeMem(0x4af3, { 0xf1 });
        gbc.writeMem(0xd645, { 0xae, 0x21 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xd647, gbc.sp());
        EXPECT(0x4af4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xd645));
        EXPECT(0x21, gbc.readMem(0xd646));
        // F1 012C
        gbc.setState(0xe673, 0x69e2, 0x2cd0, 0x14b1, 0x8cc, 0xf534, 0x1, 0x1);
        gbc.writeMem(0x69e2, { 0xc4, 0xdd });
        gbc.writeMem(0xe673, { 0xf1 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x69e4, gbc.sp());
        EXPECT(0xe674, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xe673));
        // F1 012D
        gbc.setState(0xa59e, 0xb9a7, 0xf280, 0x1f60, 0x3aa2, 0x874e, 0x1, 0x1);
        gbc.writeMem(0xa59e, { 0xf1 });
        gbc.writeMem(0xb9a7, { 0xb2, 0x8e });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xb9a9, gbc.sp());
        EXPECT(0xa59f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xa59e));
        EXPECT(0xb2, gbc.readMem(0xb9a7));
        EXPECT(0x8e, gbc.readMem(0xb9a8));
        // F1 012E
        gbc.setState(0xcf21, 0x2db7, 0x7f50, 0x95e9, 0x3d91, 0x888c, 0x1, 0x0);
        gbc.writeMem(0x2db7, { 0xcd, 0x1 });
        gbc.writeMem(0xcf21, { 0xf1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2db9, gbc.sp());
        EXPECT(0xcf22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xcf21));
        // F1 012F
        gbc.setState(0x177f, 0x3fee, 0x7c40, 0x9e05, 0x9ea, 0x77b7, 0x0, 0x1);
        gbc.writeMem(0x177f, { 0xf1 });
        gbc.writeMem(0x3fee, { 0xc0, 0x2e });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x3ff0, gbc.sp());
        EXPECT(0x1780, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0130
        gbc.setState(0xaf30, 0x1ea3, 0xf260, 0x89bb, 0x55a8, 0xb049, 0x0, 0x0);
        gbc.writeMem(0x1ea3, { 0x9e, 0x62 });
        gbc.writeMem(0xaf30, { 0xf1 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x1ea5, gbc.sp());
        EXPECT(0xaf31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xaf30));
        // F1 0132
        gbc.setState(0x1468, 0xc37d, 0xaea0, 0x2985, 0xe5e5, 0xca7d, 0x0, 0x1);
        gbc.writeMem(0x1468, { 0xf1 });
        gbc.writeMem(0xc37d, { 0xe1, 0x34 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc37f, gbc.sp());
        EXPECT(0x1469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xc37d));
        EXPECT(0x34, gbc.readMem(0xc37e));
        // F1 0133
        gbc.setState(0x8331, 0xfe90, 0x4380, 0xe316, 0x3f54, 0x6fcc, 0x0, 0x0);
        gbc.writeMem(0x8331, { 0xf1 });
        gbc.writeMem(0xfe90, { 0x51, 0x10 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xfe92, gbc.sp());
        EXPECT(0x8332, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8331));
        EXPECT(0x51, gbc.readMem(0xfe90));
        EXPECT(0x10, gbc.readMem(0xfe91));
        // F1 0134
        gbc.setState(0xd1ec, 0xdc09, 0x7be0, 0x71b3, 0x66a8, 0x8ee8, 0x0, 0x1);
        gbc.writeMem(0xd1ec, { 0xf1 });
        gbc.writeMem(0xdc09, { 0xd3, 0x6d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xdc0b, gbc.sp());
        EXPECT(0xd1ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xd1ec));
        EXPECT(0xd3, gbc.readMem(0xdc09));
        EXPECT(0x6d, gbc.readMem(0xdc0a));
        // F1 0135
        gbc.setState(0x31eb, 0x899c, 0xf620, 0xa4ed, 0x1a64, 0x761, 0x0, 0x0);
        gbc.writeMem(0x31eb, { 0xf1 });
        gbc.writeMem(0x899c, { 0x43, 0xd });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x899e, gbc.sp());
        EXPECT(0x31ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x899c));
        EXPECT(0xd, gbc.readMem(0x899d));
        // F1 0136
        gbc.setState(0x4d3b, 0x5164, 0xc790, 0x5606, 0x490f, 0x18be, 0x0, 0x1);
        gbc.writeMem(0x4d3b, { 0xf1 });
        gbc.writeMem(0x5164, { 0x31, 0xcc });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x5166, gbc.sp());
        EXPECT(0x4d3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 0137
        gbc.setState(0x9b25, 0x1e07, 0x50c0, 0x933e, 0xc3ff, 0xd2d6, 0x0, 0x0);
        gbc.writeMem(0x1e07, { 0x75, 0xcc });
        gbc.writeMem(0x9b25, { 0xf1 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x1e09, gbc.sp());
        EXPECT(0x9b26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x9b25));
        // F1 0138
        gbc.setState(0x5287, 0x4021, 0xdc00, 0xbc6f, 0xeb85, 0x8fcb, 0x0, 0x0);
        gbc.writeMem(0x4021, { 0x44, 0x8e });
        gbc.writeMem(0x5287, { 0xf1 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4023, gbc.sp());
        EXPECT(0x5288, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0139
        gbc.setState(0x7f30, 0xfce7, 0x7970, 0x6f80, 0x902, 0x3f91, 0x1, 0x1);
        gbc.writeMem(0x7f30, { 0xf1 });
        gbc.writeMem(0xfce7, { 0xc6, 0x25 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xfce9, gbc.sp());
        EXPECT(0x7f31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xfce7));
        EXPECT(0x25, gbc.readMem(0xfce8));
        // F1 013A
        gbc.setState(0xc80d, 0x4331, 0x4f80, 0x44b1, 0xa054, 0x810b, 0x0, 0x1);
        gbc.writeMem(0x4331, { 0xba, 0x74 });
        gbc.writeMem(0xc80d, { 0xf1 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4333, gbc.sp());
        EXPECT(0xc80e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xc80d));
        // F1 013B
        gbc.setState(0x6083, 0x3a8, 0x9460, 0x96ce, 0xd5bd, 0xac61, 0x0, 0x0);
        gbc.writeMem(0x3a8, { 0xda, 0x28 });
        gbc.writeMem(0x6083, { 0xf1 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x3aa, gbc.sp());
        EXPECT(0x6084, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 013C
        gbc.setState(0x51ee, 0x1552, 0xb350, 0x9713, 0x8ecc, 0x13dc, 0x1, 0x0);
        gbc.writeMem(0x1552, { 0x70, 0xec });
        gbc.writeMem(0x51ee, { 0xf1 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x1554, gbc.sp());
        EXPECT(0x51ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 013D
        gbc.setState(0x71b6, 0xf0de, 0x8210, 0xa672, 0xadf2, 0xa55e, 0x0, 0x1);
        gbc.writeMem(0x71b6, { 0xf1 });
        gbc.writeMem(0xf0de, { 0x76, 0xf0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xf0e0, gbc.sp());
        EXPECT(0x71b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xf0de));
        EXPECT(0xf0, gbc.readMem(0xf0df));
        // F1 0140
        gbc.setState(0x21bc, 0xf639, 0xf2c0, 0xcd4, 0x4c87, 0x793f, 0x1, 0x1);
        gbc.writeMem(0x21bc, { 0xf1 });
        gbc.writeMem(0xf639, { 0xfa, 0xff });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xf63b, gbc.sp());
        EXPECT(0x21bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xf639));
        EXPECT(0xff, gbc.readMem(0xf63a));
        // F1 0141
        gbc.setState(0xb9aa, 0x22fa, 0x25c0, 0xfd7, 0x2c19, 0x93da, 0x1, 0x1);
        gbc.writeMem(0x22fa, { 0x71, 0x36 });
        gbc.writeMem(0xb9aa, { 0xf1 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x22fc, gbc.sp());
        EXPECT(0xb9ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xb9aa));
        // F1 0142
        gbc.setState(0xc3b0, 0x38b, 0xce40, 0x562b, 0xe65f, 0x8a31, 0x1, 0x1);
        gbc.writeMem(0x38b, { 0x9d, 0x25 });
        gbc.writeMem(0xc3b0, { 0xf1 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x38d, gbc.sp());
        EXPECT(0xc3b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xc3b0));
        // F1 0143
        gbc.setState(0x6930, 0x2eee, 0x1430, 0x3460, 0x1b81, 0x109e, 0x1, 0x0);
        gbc.writeMem(0x2eee, { 0xf6, 0x6c });
        gbc.writeMem(0x6930, { 0xf1 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x2ef0, gbc.sp());
        EXPECT(0x6931, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 0144
        gbc.setState(0x660f, 0xef50, 0xf4e0, 0xbbdb, 0xbcc0, 0xe59a, 0x1, 0x0);
        gbc.writeMem(0x660f, { 0xf1 });
        gbc.writeMem(0xef50, { 0x8f, 0x94 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xef52, gbc.sp());
        EXPECT(0x6610, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xef50));
        EXPECT(0x94, gbc.readMem(0xef51));
        // F1 0145
        gbc.setState(0x5ef8, 0x9d97, 0x6b30, 0xf2f, 0xeec1, 0xc69c, 0x0, 0x0);
        gbc.writeMem(0x5ef8, { 0xf1 });
        gbc.writeMem(0x9d97, { 0x41, 0xfa });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x9d99, gbc.sp());
        EXPECT(0x5ef9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0x9d97));
        EXPECT(0xfa, gbc.readMem(0x9d98));
        // F1 0146
        gbc.setState(0x5dff, 0x98e3, 0xc0d0, 0xec8b, 0x9e1, 0x2cc4, 0x1, 0x1);
        gbc.writeMem(0x5dff, { 0xf1 });
        gbc.writeMem(0x98e3, { 0xfa, 0x3e });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x98e5, gbc.sp());
        EXPECT(0x5e00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x98e3));
        EXPECT(0x3e, gbc.readMem(0x98e4));
        // F1 0147
        gbc.setState(0x3cbb, 0xdd, 0xfc70, 0xeef9, 0x815b, 0x3454, 0x0, 0x1);
        gbc.writeMem(0xdd, { 0x49, 0xe0 });
        gbc.writeMem(0x3cbb, { 0xf1 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xdf, gbc.sp());
        EXPECT(0x3cbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0148
        gbc.setState(0x135, 0xc0af, 0x92e0, 0x9acf, 0xa5c7, 0x1790, 0x0, 0x1);
        gbc.writeMem(0x135, { 0xf1 });
        gbc.writeMem(0xc0af, { 0x57, 0x6d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc0b1, gbc.sp());
        EXPECT(0x136, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc0af));
        EXPECT(0x6d, gbc.readMem(0xc0b0));
        // F1 0149
        gbc.setState(0x3ae8, 0xd3e9, 0x1f20, 0x5e75, 0xd9e5, 0x480c, 0x1, 0x0);
        gbc.writeMem(0x3ae8, { 0xf1 });
        gbc.writeMem(0xd3e9, { 0x76, 0x26 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xd3eb, gbc.sp());
        EXPECT(0x3ae9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xd3e9));
        EXPECT(0x26, gbc.readMem(0xd3ea));
        // F1 014A
        gbc.setState(0xaf1e, 0x9f6e, 0xcc20, 0xb1b5, 0x3bd6, 0xd6b1, 0x0, 0x1);
        gbc.writeMem(0x9f6e, { 0xe0, 0xa7 });
        gbc.writeMem(0xaf1e, { 0xf1 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x9f70, gbc.sp());
        EXPECT(0xaf1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9f6e));
        EXPECT(0xa7, gbc.readMem(0x9f6f));
        EXPECT(0xf1, gbc.readMem(0xaf1e));
        // F1 014B
        gbc.setState(0xca5, 0x1457, 0x74c0, 0x770c, 0x561b, 0xc109, 0x0, 0x1);
        gbc.writeMem(0xca5, { 0xf1 });
        gbc.writeMem(0x1457, { 0xd3, 0x65 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x1459, gbc.sp());
        EXPECT(0xca6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 014C
        gbc.setState(0xb087, 0x1c6a, 0x3400, 0xa10f, 0x4159, 0xcfc9, 0x0, 0x1);
        gbc.writeMem(0x1c6a, { 0x25, 0x70 });
        gbc.writeMem(0xb087, { 0xf1 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x1c6c, gbc.sp());
        EXPECT(0xb088, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xb087));
        // F1 014D
        gbc.setState(0x9a6c, 0x599, 0xde50, 0x5d5, 0x2029, 0x1ae9, 0x1, 0x1);
        gbc.writeMem(0x599, { 0xeb, 0xa6 });
        gbc.writeMem(0x9a6c, { 0xf1 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x59b, gbc.sp());
        EXPECT(0x9a6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x9a6c));
        // F1 014E
        gbc.setState(0xc556, 0x392a, 0x30a0, 0x15a9, 0xff3f, 0x5774, 0x0, 0x1);
        gbc.writeMem(0x392a, { 0x3d, 0x21 });
        gbc.writeMem(0xc556, { 0xf1 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x392c, gbc.sp());
        EXPECT(0xc557, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xc556));
        // F1 014F
        gbc.setState(0x7e21, 0xe650, 0xbdd0, 0xd7d8, 0xfb99, 0xd6a9, 0x1, 0x0);
        gbc.writeMem(0x7e21, { 0xf1 });
        gbc.writeMem(0xe650, { 0x2b, 0xc0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe652, gbc.sp());
        EXPECT(0x7e22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xe650));
        EXPECT(0xc0, gbc.readMem(0xe651));
        // F1 0150
        gbc.setState(0x414c, 0x4e4c, 0x6050, 0x8ab4, 0x4851, 0x6993, 0x0, 0x1);
        gbc.writeMem(0x414c, { 0xf1 });
        gbc.writeMem(0x4e4c, { 0x18, 0xcf });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x4e4e, gbc.sp());
        EXPECT(0x414d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 0151
        gbc.setState(0x78e9, 0xf78d, 0x9c80, 0x137f, 0xb24, 0x2058, 0x0, 0x1);
        gbc.writeMem(0x78e9, { 0xf1 });
        gbc.writeMem(0xf78d, { 0xd3, 0x72 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xf78f, gbc.sp());
        EXPECT(0x78ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xf78d));
        EXPECT(0x72, gbc.readMem(0xf78e));
        // F1 0153
        gbc.setState(0x2a1, 0xe5fd, 0x9f00, 0xd814, 0x345f, 0x5f0d, 0x0, 0x1);
        gbc.writeMem(0x2a1, { 0xf1 });
        gbc.writeMem(0xe5fd, { 0x17, 0xe1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xe5ff, gbc.sp());
        EXPECT(0x2a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xe5fd));
        EXPECT(0xe1, gbc.readMem(0xe5fe));
        // F1 0154
        gbc.setState(0xb481, 0xc03c, 0x16e0, 0x407b, 0xec63, 0xc6ea, 0x1, 0x0);
        gbc.writeMem(0xb481, { 0xf1 });
        gbc.writeMem(0xc03c, { 0x9b, 0x75 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xc03e, gbc.sp());
        EXPECT(0xb482, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xb481));
        EXPECT(0x9b, gbc.readMem(0xc03c));
        EXPECT(0x75, gbc.readMem(0xc03d));
        // F1 0155
        gbc.setState(0x3a23, 0xbc22, 0x10e0, 0xa11e, 0x1c6b, 0x701c, 0x0, 0x0);
        gbc.writeMem(0x3a23, { 0xf1 });
        gbc.writeMem(0xbc22, { 0x8d, 0x8c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xbc24, gbc.sp());
        EXPECT(0x3a24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xbc22));
        EXPECT(0x8c, gbc.readMem(0xbc23));
        // F1 0156
        gbc.setState(0xa56e, 0xce57, 0x1ad0, 0x8c1c, 0x15f5, 0xdf57, 0x1, 0x0);
        gbc.writeMem(0xa56e, { 0xf1 });
        gbc.writeMem(0xce57, { 0xcd, 0xcc });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xce59, gbc.sp());
        EXPECT(0xa56f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xa56e));
        EXPECT(0xcd, gbc.readMem(0xce57));
        EXPECT(0xcc, gbc.readMem(0xce58));
        // F1 0157
        gbc.setState(0xa341, 0xe61a, 0x7e10, 0xc318, 0xfcdf, 0x5196, 0x1, 0x0);
        gbc.writeMem(0xa341, { 0xf1 });
        gbc.writeMem(0xe61a, { 0x80, 0x14 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xe61c, gbc.sp());
        EXPECT(0xa342, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xa341));
        EXPECT(0x80, gbc.readMem(0xe61a));
        EXPECT(0x14, gbc.readMem(0xe61b));
        // F1 0158
        gbc.setState(0x4268, 0xe8b7, 0xa7c0, 0xfab1, 0x42aa, 0xbe4c, 0x1, 0x0);
        gbc.writeMem(0x4268, { 0xf1 });
        gbc.writeMem(0xe8b7, { 0xdb, 0x9b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe8b9, gbc.sp());
        EXPECT(0x4269, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xe8b7));
        EXPECT(0x9b, gbc.readMem(0xe8b8));
        // F1 0159
        gbc.setState(0xdbb8, 0x9483, 0xedc0, 0xa911, 0xb5c, 0xb1cb, 0x1, 0x0);
        gbc.writeMem(0x9483, { 0xce, 0xb });
        gbc.writeMem(0xdbb8, { 0xf1 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x9485, gbc.sp());
        EXPECT(0xdbb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0x9483));
        EXPECT(0xb, gbc.readMem(0x9484));
        EXPECT(0xf1, gbc.readMem(0xdbb8));
        // F1 015A
        gbc.setState(0xe889, 0x2a1c, 0x3660, 0x7ab1, 0x4f5f, 0x67b1, 0x1, 0x0);
        gbc.writeMem(0x2a1c, { 0x4e, 0x95 });
        gbc.writeMem(0xe889, { 0xf1 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2a1e, gbc.sp());
        EXPECT(0xe88a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xe889));
        // F1 015B
        gbc.setState(0x1cfa, 0x7fe1, 0x4530, 0x2934, 0x95b, 0x7261, 0x1, 0x1);
        gbc.writeMem(0x1cfa, { 0xf1 });
        gbc.writeMem(0x7fe1, { 0xe3, 0x30 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x7fe3, gbc.sp());
        EXPECT(0x1cfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 015C
        gbc.setState(0x51e3, 0xc84d, 0x4fd0, 0x1679, 0xa4aa, 0xe7e3, 0x0, 0x0);
        gbc.writeMem(0x51e3, { 0xf1 });
        gbc.writeMem(0xc84d, { 0xa7, 0x72 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xc84f, gbc.sp());
        EXPECT(0x51e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc84d));
        EXPECT(0x72, gbc.readMem(0xc84e));
        // F1 015D
        gbc.setState(0x6c4a, 0x590f, 0xc140, 0x621, 0x7f50, 0x99f, 0x0, 0x1);
        gbc.writeMem(0x590f, { 0xd1, 0xec });
        gbc.writeMem(0x6c4a, { 0xf1 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x5911, gbc.sp());
        EXPECT(0x6c4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 015E
        gbc.setState(0xfcc, 0x7946, 0xb750, 0x6539, 0x145, 0xece8, 0x0, 0x1);
        gbc.writeMem(0xfcc, { 0xf1 });
        gbc.writeMem(0x7946, { 0xfb, 0x3a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x7948, gbc.sp());
        EXPECT(0xfcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 015F
        gbc.setState(0x99a4, 0xd410, 0x9580, 0x12e0, 0xaba8, 0xd127, 0x0, 0x1);
        gbc.writeMem(0x99a4, { 0xf1 });
        gbc.writeMem(0xd410, { 0x28, 0xb0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd412, gbc.sp());
        EXPECT(0x99a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x99a4));
        EXPECT(0x28, gbc.readMem(0xd410));
        EXPECT(0xb0, gbc.readMem(0xd411));
        // F1 0160
        gbc.setState(0x4959, 0x3e5, 0x4030, 0x2785, 0x98ed, 0xa1fb, 0x1, 0x1);
        gbc.writeMem(0x3e5, { 0x7d, 0xee });
        gbc.writeMem(0x4959, { 0xf1 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3e7, gbc.sp());
        EXPECT(0x495a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 0161
        gbc.setState(0xa522, 0x1d8, 0x6cd0, 0x1214, 0x177f, 0x5a46, 0x0, 0x0);
        gbc.writeMem(0x1d8, { 0x6f, 0x46 });
        gbc.writeMem(0xa522, { 0xf1 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x1da, gbc.sp());
        EXPECT(0xa523, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xa522));
        // F1 0162
        gbc.setState(0x5722, 0x894f, 0x35b0, 0xd597, 0x510, 0x7c44, 0x1, 0x1);
        gbc.writeMem(0x5722, { 0xf1 });
        gbc.writeMem(0x894f, { 0xd9, 0x91 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x8951, gbc.sp());
        EXPECT(0x5723, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x894f));
        EXPECT(0x91, gbc.readMem(0x8950));
        // F1 0163
        gbc.setState(0xeeaa, 0xb0ad, 0xa280, 0x3d8f, 0x8f50, 0xab25, 0x0, 0x1);
        gbc.writeMem(0xb0ad, { 0xf2, 0x43 });
        gbc.writeMem(0xeeaa, { 0xf1 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb0af, gbc.sp());
        EXPECT(0xeeab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xb0ad));
        EXPECT(0x43, gbc.readMem(0xb0ae));
        EXPECT(0xf1, gbc.readMem(0xeeaa));
        // F1 0164
        gbc.setState(0xef66, 0xfd02, 0xafc0, 0x1b7f, 0xdabc, 0x692e, 0x1, 0x1);
        gbc.writeMem(0xef66, { 0xf1 });
        gbc.writeMem(0xfd02, { 0xfe, 0x5a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xfd04, gbc.sp());
        EXPECT(0xef67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xef66));
        EXPECT(0xfe, gbc.readMem(0xfd02));
        EXPECT(0x5a, gbc.readMem(0xfd03));
        // F1 0165
        gbc.setState(0x149c, 0xacd1, 0xfdc0, 0x70e4, 0x2d35, 0x3d94, 0x0, 0x0);
        gbc.writeMem(0x149c, { 0xf1 });
        gbc.writeMem(0xacd1, { 0x51, 0xf8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xacd3, gbc.sp());
        EXPECT(0x149d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xacd1));
        EXPECT(0xf8, gbc.readMem(0xacd2));
        // F1 0166
        gbc.setState(0xe900, 0x5d02, 0x2130, 0x407b, 0x19a5, 0xd18d, 0x0, 0x0);
        gbc.writeMem(0x5d02, { 0x4c, 0x41 });
        gbc.writeMem(0xe900, { 0xf1 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5d04, gbc.sp());
        EXPECT(0xe901, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xe900));
        // F1 0167
        gbc.setState(0xd25b, 0x9cb6, 0xd10, 0x3477, 0x9819, 0x28a9, 0x1, 0x1);
        gbc.writeMem(0x9cb6, { 0x50, 0x3d });
        gbc.writeMem(0xd25b, { 0xf1 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x9cb8, gbc.sp());
        EXPECT(0xd25c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x9cb6));
        EXPECT(0x3d, gbc.readMem(0x9cb7));
        EXPECT(0xf1, gbc.readMem(0xd25b));
        // F1 0168
        gbc.setState(0x143a, 0xb562, 0xde70, 0x2338, 0x4ab4, 0xd62f, 0x1, 0x0);
        gbc.writeMem(0x143a, { 0xf1 });
        gbc.writeMem(0xb562, { 0xfa, 0xfc });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xb564, gbc.sp());
        EXPECT(0x143b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xb562));
        EXPECT(0xfc, gbc.readMem(0xb563));
        // F1 0169
        gbc.setState(0xec0a, 0x8c4d, 0x6cc0, 0xaee9, 0xfbc1, 0xf7c, 0x1, 0x0);
        gbc.writeMem(0x8c4d, { 0x10, 0xb8 });
        gbc.writeMem(0xec0a, { 0xf1 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x8c4f, gbc.sp());
        EXPECT(0xec0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x8c4d));
        EXPECT(0xb8, gbc.readMem(0x8c4e));
        EXPECT(0xf1, gbc.readMem(0xec0a));
        // F1 016A
        gbc.setState(0x6a33, 0xfef7, 0x2c90, 0x327a, 0x1c99, 0xefdb, 0x1, 0x1);
        gbc.writeMem(0x6a33, { 0xf1 });
        gbc.writeMem(0xfef7, { 0xea, 0xef });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xfef9, gbc.sp());
        EXPECT(0x6a34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xfef7));
        EXPECT(0xef, gbc.readMem(0xfef8));
        // F1 016B
        gbc.setState(0x5b4b, 0x2b35, 0x3700, 0xe3b8, 0x481b, 0xe0eb, 0x1, 0x0);
        gbc.writeMem(0x2b35, { 0x2a, 0xfd });
        gbc.writeMem(0x5b4b, { 0xf1 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x2b37, gbc.sp());
        EXPECT(0x5b4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 016C
        gbc.setState(0x6d3a, 0x32c6, 0xd330, 0x7019, 0xccf5, 0x37d1, 0x0, 0x0);
        gbc.writeMem(0x32c6, { 0x28, 0x44 });
        gbc.writeMem(0x6d3a, { 0xf1 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x32c8, gbc.sp());
        EXPECT(0x6d3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 016D
        gbc.setState(0xd78d, 0x3c3b, 0x25c0, 0xe61a, 0x52e2, 0x6210, 0x0, 0x1);
        gbc.writeMem(0x3c3b, { 0xc4, 0x3a });
        gbc.writeMem(0xd78d, { 0xf1 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x3c3d, gbc.sp());
        EXPECT(0xd78e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xd78d));
        // F1 016E
        gbc.setState(0x3fb4, 0x469a, 0xdad0, 0x6bbc, 0x6967, 0xed94, 0x0, 0x1);
        gbc.writeMem(0x3fb4, { 0xf1 });
        gbc.writeMem(0x469a, { 0x6d, 0xd2 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x469c, gbc.sp());
        EXPECT(0x3fb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 016F
        gbc.setState(0x7c52, 0xd00, 0x6d0, 0x558f, 0xfb2c, 0xab76, 0x1, 0x1);
        gbc.writeMem(0xd00, { 0x8e, 0x65 });
        gbc.writeMem(0x7c52, { 0xf1 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xd02, gbc.sp());
        EXPECT(0x7c53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0170
        gbc.setState(0x7c0d, 0xe251, 0x6200, 0x3604, 0x6f9b, 0x3e77, 0x1, 0x0);
        gbc.writeMem(0x7c0d, { 0xf1 });
        gbc.writeMem(0xe251, { 0x39, 0xa2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xe253, gbc.sp());
        EXPECT(0x7c0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xe251));
        EXPECT(0xa2, gbc.readMem(0xe252));
        // F1 0171
        gbc.setState(0xd6b6, 0xe453, 0xc2e0, 0x411e, 0xae5f, 0x97fd, 0x1, 0x1);
        gbc.writeMem(0xd6b6, { 0xf1 });
        gbc.writeMem(0xe453, { 0x43, 0xeb });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xe455, gbc.sp());
        EXPECT(0xd6b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xd6b6));
        EXPECT(0x43, gbc.readMem(0xe453));
        EXPECT(0xeb, gbc.readMem(0xe454));
        // F1 0172
        gbc.setState(0x4b6a, 0x5593, 0x5d10, 0x3787, 0xeb60, 0x6e96, 0x0, 0x0);
        gbc.writeMem(0x4b6a, { 0xf1 });
        gbc.writeMem(0x5593, { 0x3d, 0xc0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x5595, gbc.sp());
        EXPECT(0x4b6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 0174
        gbc.setState(0x5b17, 0x15cc, 0x4710, 0xdfaf, 0xda31, 0x3456, 0x0, 0x1);
        gbc.writeMem(0x15cc, { 0x97, 0xa3 });
        gbc.writeMem(0x5b17, { 0xf1 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x15ce, gbc.sp());
        EXPECT(0x5b18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 0175
        gbc.setState(0x2035, 0x598d, 0x800, 0x4265, 0x17b8, 0xcd0d, 0x0, 0x0);
        gbc.writeMem(0x2035, { 0xf1 });
        gbc.writeMem(0x598d, { 0x2b, 0x6c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x598f, gbc.sp());
        EXPECT(0x2036, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0176
        gbc.setState(0x61f2, 0x6bcd, 0xd3d0, 0x996b, 0xb1ef, 0x26c1, 0x1, 0x1);
        gbc.writeMem(0x61f2, { 0xf1 });
        gbc.writeMem(0x6bcd, { 0x54, 0x25 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x6bcf, gbc.sp());
        EXPECT(0x61f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 0177
        gbc.setState(0x54c7, 0xe0e6, 0x7e0, 0x85bd, 0xab1e, 0x4374, 0x0, 0x1);
        gbc.writeMem(0x54c7, { 0xf1 });
        gbc.writeMem(0xe0e6, { 0x8c, 0xc8 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xe0e8, gbc.sp());
        EXPECT(0x54c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe0e6));
        EXPECT(0xc8, gbc.readMem(0xe0e7));
        // F1 0178
        gbc.setState(0xca3b, 0xd36b, 0x61b0, 0x10f5, 0xdb48, 0x9268, 0x0, 0x1);
        gbc.writeMem(0xca3b, { 0xf1 });
        gbc.writeMem(0xd36b, { 0x70, 0xbf });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xd36d, gbc.sp());
        EXPECT(0xca3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xca3b));
        EXPECT(0x70, gbc.readMem(0xd36b));
        EXPECT(0xbf, gbc.readMem(0xd36c));
        // F1 0179
        gbc.setState(0xcb0e, 0xb3dc, 0x5560, 0xece2, 0xccff, 0x582c, 0x1, 0x1);
        gbc.writeMem(0xb3dc, { 0xa1, 0xc2 });
        gbc.writeMem(0xcb0e, { 0xf1 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xb3de, gbc.sp());
        EXPECT(0xcb0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xb3dc));
        EXPECT(0xc2, gbc.readMem(0xb3dd));
        EXPECT(0xf1, gbc.readMem(0xcb0e));
        // F1 017B
        gbc.setState(0x361f, 0x6671, 0xf770, 0x806, 0x6709, 0x614d, 0x1, 0x1);
        gbc.writeMem(0x361f, { 0xf1 });
        gbc.writeMem(0x6671, { 0x18, 0x15 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6673, gbc.sp());
        EXPECT(0x3620, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 017C
        gbc.setState(0x8d5d, 0xaf54, 0xdc30, 0x3ad6, 0x93e9, 0x3f80, 0x0, 0x1);
        gbc.writeMem(0x8d5d, { 0xf1 });
        gbc.writeMem(0xaf54, { 0xf5, 0xbb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xaf56, gbc.sp());
        EXPECT(0x8d5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8d5d));
        EXPECT(0xf5, gbc.readMem(0xaf54));
        EXPECT(0xbb, gbc.readMem(0xaf55));
        // F1 017D
        gbc.setState(0x95f7, 0x546a, 0x9b50, 0x6dc5, 0x42de, 0xe794, 0x0, 0x0);
        gbc.writeMem(0x546a, { 0xac, 0x34 });
        gbc.writeMem(0x95f7, { 0xf1 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x546c, gbc.sp());
        EXPECT(0x95f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x95f7));
        // F1 017E
        gbc.setState(0x2fd3, 0x899d, 0xf240, 0xa114, 0xfd6d, 0x4385, 0x0, 0x1);
        gbc.writeMem(0x2fd3, { 0xf1 });
        gbc.writeMem(0x899d, { 0xd, 0x5f });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x899f, gbc.sp());
        EXPECT(0x2fd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0x899d));
        EXPECT(0x5f, gbc.readMem(0x899e));
        // F1 017F
        gbc.setState(0x99d7, 0x95fd, 0xa5c0, 0x2f3f, 0x672e, 0x9a91, 0x1, 0x0);
        gbc.writeMem(0x95fd, { 0x30, 0xb0 });
        gbc.writeMem(0x99d7, { 0xf1 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x95ff, gbc.sp());
        EXPECT(0x99d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0x95fd));
        EXPECT(0xb0, gbc.readMem(0x95fe));
        EXPECT(0xf1, gbc.readMem(0x99d7));
        // F1 0180
        gbc.setState(0xe86b, 0xe2b5, 0x5cf0, 0xaa2f, 0xc5a8, 0x1ef8, 0x0, 0x0);
        gbc.writeMem(0xe2b5, { 0x1, 0x68 });
        gbc.writeMem(0xe86b, { 0xf1 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe2b7, gbc.sp());
        EXPECT(0xe86c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xe2b5));
        EXPECT(0x68, gbc.readMem(0xe2b6));
        EXPECT(0xf1, gbc.readMem(0xe86b));
        // F1 0181
        gbc.setState(0x11c0, 0x87c4, 0x4f0, 0x977c, 0xa747, 0x44f1, 0x0, 0x0);
        gbc.writeMem(0x11c0, { 0xf1 });
        gbc.writeMem(0x87c4, { 0x58, 0xce });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x87c6, gbc.sp());
        EXPECT(0x11c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x87c4));
        EXPECT(0xce, gbc.readMem(0x87c5));
        // F1 0182
        gbc.setState(0xbfd2, 0xacc, 0x6a0, 0xa835, 0xb536, 0xede6, 0x1, 0x1);
        gbc.writeMem(0xacc, { 0x5d, 0xba });
        gbc.writeMem(0xbfd2, { 0xf1 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xace, gbc.sp());
        EXPECT(0xbfd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xbfd2));
        // F1 0183
        gbc.setState(0xe4b0, 0x9e5b, 0xee40, 0x17f8, 0x9c36, 0x5c0d, 0x1, 0x1);
        gbc.writeMem(0x9e5b, { 0xa1, 0xcd });
        gbc.writeMem(0xe4b0, { 0xf1 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9e5d, gbc.sp());
        EXPECT(0xe4b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x9e5b));
        EXPECT(0xcd, gbc.readMem(0x9e5c));
        EXPECT(0xf1, gbc.readMem(0xe4b0));
        // F1 0184
        gbc.setState(0x67c9, 0xa5df, 0x5870, 0x8532, 0x92b8, 0x8aef, 0x1, 0x0);
        gbc.writeMem(0x67c9, { 0xf1 });
        gbc.writeMem(0xa5df, { 0xa7, 0x14 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xa5e1, gbc.sp());
        EXPECT(0x67ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa5df));
        EXPECT(0x14, gbc.readMem(0xa5e0));
        // F1 0185
        gbc.setState(0xce84, 0x9be0, 0x6c30, 0xc4e7, 0xb808, 0x3d3e, 0x1, 0x0);
        gbc.writeMem(0x9be0, { 0xb, 0xf0 });
        gbc.writeMem(0xce84, { 0xf1 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x9be2, gbc.sp());
        EXPECT(0xce85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x9be0));
        EXPECT(0xf0, gbc.readMem(0x9be1));
        EXPECT(0xf1, gbc.readMem(0xce84));
        // F1 0186
        gbc.setState(0x5ca2, 0x979b, 0xd070, 0xa5dc, 0xa6f9, 0x8746, 0x1, 0x1);
        gbc.writeMem(0x5ca2, { 0xf1 });
        gbc.writeMem(0x979b, { 0x87, 0xcf });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x979d, gbc.sp());
        EXPECT(0x5ca3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x979b));
        EXPECT(0xcf, gbc.readMem(0x979c));
        // F1 0187
        gbc.setState(0x7293, 0xb9bf, 0xbf0, 0x34d2, 0xf047, 0x5127, 0x0, 0x1);
        gbc.writeMem(0x7293, { 0xf1 });
        gbc.writeMem(0xb9bf, { 0xbf, 0x8e });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb9c1, gbc.sp());
        EXPECT(0x7294, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xb9bf));
        EXPECT(0x8e, gbc.readMem(0xb9c0));
        // F1 0188
        gbc.setState(0x5914, 0x3053, 0x4f50, 0xfdd1, 0xf30f, 0xacb0, 0x0, 0x0);
        gbc.writeMem(0x3053, { 0xf8, 0xfd });
        gbc.writeMem(0x5914, { 0xf1 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3055, gbc.sp());
        EXPECT(0x5915, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 0189
        gbc.setState(0x3a95, 0x6702, 0x42a0, 0xaa11, 0xf4b8, 0xfce, 0x1, 0x1);
        gbc.writeMem(0x3a95, { 0xf1 });
        gbc.writeMem(0x6702, { 0x57, 0x9e });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x6704, gbc.sp());
        EXPECT(0x3a96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 018A
        gbc.setState(0x563, 0xbb18, 0x4c0, 0x8974, 0xc7d3, 0x632e, 0x0, 0x1);
        gbc.writeMem(0x563, { 0xf1 });
        gbc.writeMem(0xbb18, { 0x53, 0xe });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xbb1a, gbc.sp());
        EXPECT(0x564, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xbb18));
        EXPECT(0xe, gbc.readMem(0xbb19));
        // F1 018B
        gbc.setState(0x19fc, 0xc71e, 0x6670, 0x319c, 0xe3fa, 0x39c, 0x1, 0x1);
        gbc.writeMem(0x19fc, { 0xf1 });
        gbc.writeMem(0xc71e, { 0x5c, 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xc720, gbc.sp());
        EXPECT(0x19fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xc71e));
        EXPECT(0x0, gbc.readMem(0xc71f));
        // F1 018D
        gbc.setState(0x44b2, 0x818e, 0xb210, 0xd1ae, 0x3192, 0x619c, 0x0, 0x1);
        gbc.writeMem(0x44b2, { 0xf1 });
        gbc.writeMem(0x818e, { 0xea, 0xe7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8190, gbc.sp());
        EXPECT(0x44b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0x818e));
        EXPECT(0xe7, gbc.readMem(0x818f));
        // F1 018E
        gbc.setState(0x8aac, 0xbf80, 0x5460, 0x9584, 0xb889, 0x51b7, 0x1, 0x0);
        gbc.writeMem(0x8aac, { 0xf1 });
        gbc.writeMem(0xbf80, { 0x8c, 0xa3 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xbf82, gbc.sp());
        EXPECT(0x8aad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8aac));
        EXPECT(0x8c, gbc.readMem(0xbf80));
        EXPECT(0xa3, gbc.readMem(0xbf81));
        // F1 018F
        gbc.setState(0xfdd, 0x2e41, 0xa050, 0x5b6f, 0xbca8, 0xad14, 0x1, 0x1);
        gbc.writeMem(0xfdd, { 0xf1 });
        gbc.writeMem(0x2e41, { 0xe5, 0xf8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x2e43, gbc.sp());
        EXPECT(0xfde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0190
        gbc.setState(0x3c6f, 0xeb9b, 0x38c0, 0x7822, 0x1d4b, 0x17a, 0x0, 0x1);
        gbc.writeMem(0x3c6f, { 0xf1 });
        gbc.writeMem(0xeb9b, { 0x54, 0x18 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xeb9d, gbc.sp());
        EXPECT(0x3c70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0xeb9b));
        EXPECT(0x18, gbc.readMem(0xeb9c));
        // F1 0191
        gbc.setState(0x8caa, 0x90be, 0xff40, 0x3aab, 0x7232, 0x811d, 0x1, 0x0);
        gbc.writeMem(0x8caa, { 0xf1 });
        gbc.writeMem(0x90be, { 0xa8, 0x65 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x90c0, gbc.sp());
        EXPECT(0x8cab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8caa));
        EXPECT(0xa8, gbc.readMem(0x90be));
        EXPECT(0x65, gbc.readMem(0x90bf));
        // F1 0192
        gbc.setState(0x4405, 0x2c01, 0xc660, 0xf2d4, 0xb6f1, 0x733b, 0x0, 0x1);
        gbc.writeMem(0x2c01, { 0x2a, 0x7a });
        gbc.writeMem(0x4405, { 0xf1 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x2c03, gbc.sp());
        EXPECT(0x4406, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0193
        gbc.setState(0x759c, 0xe21d, 0xea00, 0x79e3, 0x273e, 0x87bc, 0x1, 0x0);
        gbc.writeMem(0x759c, { 0xf1 });
        gbc.writeMem(0xe21d, { 0x4a, 0xdf });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe21f, gbc.sp());
        EXPECT(0x759d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xe21d));
        EXPECT(0xdf, gbc.readMem(0xe21e));
        // F1 0194
        gbc.setState(0xd3e5, 0xe3f8, 0x680, 0x8eca, 0xf5cf, 0xee06, 0x1, 0x0);
        gbc.writeMem(0xd3e5, { 0xf1 });
        gbc.writeMem(0xe3f8, { 0x4, 0x8 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xe3fa, gbc.sp());
        EXPECT(0xd3e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xd3e5));
        EXPECT(0x4, gbc.readMem(0xe3f8));
        EXPECT(0x8, gbc.readMem(0xe3f9));
        // F1 0195
        gbc.setState(0xeefb, 0x8b31, 0x6920, 0x6c36, 0x1302, 0xc885, 0x0, 0x0);
        gbc.writeMem(0x8b31, { 0x53, 0xe1 });
        gbc.writeMem(0xeefb, { 0xf1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x8b33, gbc.sp());
        EXPECT(0xeefc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x8b31));
        EXPECT(0xe1, gbc.readMem(0x8b32));
        EXPECT(0xf1, gbc.readMem(0xeefb));
        // F1 0196
        gbc.setState(0xabcc, 0x8c22, 0x3d10, 0x6045, 0x70bb, 0x9818, 0x1, 0x1);
        gbc.writeMem(0x8c22, { 0xa, 0xae });
        gbc.writeMem(0xabcc, { 0xf1 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x8c24, gbc.sp());
        EXPECT(0xabcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8c22));
        EXPECT(0xae, gbc.readMem(0x8c23));
        EXPECT(0xf1, gbc.readMem(0xabcc));
        // F1 0197
        gbc.setState(0x82f9, 0x9ea2, 0x2b60, 0xf40, 0xe24c, 0x1a1b, 0x1, 0x0);
        gbc.writeMem(0x82f9, { 0xf1 });
        gbc.writeMem(0x9ea2, { 0xf0, 0xeb });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x9ea4, gbc.sp());
        EXPECT(0x82fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x82f9));
        EXPECT(0xf0, gbc.readMem(0x9ea2));
        EXPECT(0xeb, gbc.readMem(0x9ea3));
        // F1 0198
        gbc.setState(0x9f42, 0x9ff3, 0x3c70, 0x5ded, 0xaec0, 0x976d, 0x0, 0x1);
        gbc.writeMem(0x9f42, { 0xf1 });
        gbc.writeMem(0x9ff3, { 0xd9, 0x1a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x9ff5, gbc.sp());
        EXPECT(0x9f43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x9f42));
        EXPECT(0xd9, gbc.readMem(0x9ff3));
        EXPECT(0x1a, gbc.readMem(0x9ff4));
        // F1 0199
        gbc.setState(0x85e0, 0x3f86, 0x14d0, 0xb21f, 0x4b, 0x72ad, 0x1, 0x1);
        gbc.writeMem(0x3f86, { 0xb4, 0xbc });
        gbc.writeMem(0x85e0, { 0xf1 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x3f88, gbc.sp());
        EXPECT(0x85e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x85e0));
        // F1 019A
        gbc.setState(0xa71b, 0x1ef5, 0xed80, 0x5658, 0x402d, 0x6557, 0x0, 0x1);
        gbc.writeMem(0x1ef5, { 0x1c, 0xe8 });
        gbc.writeMem(0xa71b, { 0xf1 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x1ef7, gbc.sp());
        EXPECT(0xa71c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xa71b));
        // F1 019B
        gbc.setState(0xcaeb, 0x2c0d, 0xa3b0, 0x684a, 0x58e9, 0x6ac2, 0x0, 0x1);
        gbc.writeMem(0x2c0d, { 0x4c, 0x69 });
        gbc.writeMem(0xcaeb, { 0xf1 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2c0f, gbc.sp());
        EXPECT(0xcaec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xcaeb));
        // F1 019C
        gbc.setState(0xcb39, 0x5de, 0x9c20, 0x3f5f, 0xb73c, 0xe66e, 0x1, 0x0);
        gbc.writeMem(0x5de, { 0xde, 0xa9 });
        gbc.writeMem(0xcb39, { 0xf1 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x5e0, gbc.sp());
        EXPECT(0xcb3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xcb39));
        // F1 019D
        gbc.setState(0x361, 0x9fac, 0xdd00, 0x449d, 0x6aa9, 0xc41c, 0x1, 0x1);
        gbc.writeMem(0x361, { 0xf1 });
        gbc.writeMem(0x9fac, { 0x48, 0xd2 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x9fae, gbc.sp());
        EXPECT(0x362, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x9fac));
        EXPECT(0xd2, gbc.readMem(0x9fad));
        // F1 019E
        gbc.setState(0x4235, 0x8f94, 0xc600, 0xcf82, 0xd370, 0x4f21, 0x0, 0x0);
        gbc.writeMem(0x4235, { 0xf1 });
        gbc.writeMem(0x8f94, { 0xfa, 0x22 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x8f96, gbc.sp());
        EXPECT(0x4236, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x8f94));
        EXPECT(0x22, gbc.readMem(0x8f95));
        // F1 019F
        gbc.setState(0x2f79, 0xf33e, 0xe220, 0x365c, 0xdcf, 0x187d, 0x1, 0x1);
        gbc.writeMem(0x2f79, { 0xf1 });
        gbc.writeMem(0xf33e, { 0x7a, 0x22 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf340, gbc.sp());
        EXPECT(0x2f7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xf33e));
        EXPECT(0x22, gbc.readMem(0xf33f));
        // F1 01A0
        gbc.setState(0xe113, 0x9da5, 0x4550, 0xedb, 0x9372, 0x230b, 0x1, 0x0);
        gbc.writeMem(0x9da5, { 0x41, 0x3a });
        gbc.writeMem(0xe113, { 0xf1 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x9da7, gbc.sp());
        EXPECT(0xe114, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0x9da5));
        EXPECT(0x3a, gbc.readMem(0x9da6));
        EXPECT(0xf1, gbc.readMem(0xe113));
        // F1 01A1
        gbc.setState(0xa3ce, 0xbec6, 0x5a20, 0x6064, 0xf5ed, 0x2d3f, 0x0, 0x1);
        gbc.writeMem(0xa3ce, { 0xf1 });
        gbc.writeMem(0xbec6, { 0x8f, 0xb6 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xbec8, gbc.sp());
        EXPECT(0xa3cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xa3ce));
        EXPECT(0x8f, gbc.readMem(0xbec6));
        EXPECT(0xb6, gbc.readMem(0xbec7));
        // F1 01A2
        gbc.setState(0xa3e2, 0xe426, 0xac90, 0x1b87, 0x9aff, 0xa228, 0x0, 0x1);
        gbc.writeMem(0xa3e2, { 0xf1 });
        gbc.writeMem(0xe426, { 0xb9, 0xe4 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xe428, gbc.sp());
        EXPECT(0xa3e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xa3e2));
        EXPECT(0xb9, gbc.readMem(0xe426));
        EXPECT(0xe4, gbc.readMem(0xe427));
        // F1 01A3
        gbc.setState(0x2ea9, 0x24f3, 0x25f0, 0xa4a5, 0x8645, 0xb275, 0x1, 0x0);
        gbc.writeMem(0x24f3, { 0x8d, 0xb7 });
        gbc.writeMem(0x2ea9, { 0xf1 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x24f5, gbc.sp());
        EXPECT(0x2eaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 01A4
        gbc.setState(0x2827, 0xf06, 0xcc20, 0x9e4d, 0x25e1, 0xec6f, 0x1, 0x0);
        gbc.writeMem(0xf06, { 0x14, 0x90 });
        gbc.writeMem(0x2827, { 0xf1 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xf08, gbc.sp());
        EXPECT(0x2828, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 01A5
        gbc.setState(0xa8a6, 0x4e21, 0xd600, 0x2bcb, 0xa88d, 0x9a79, 0x1, 0x0);
        gbc.writeMem(0x4e21, { 0xea, 0x55 });
        gbc.writeMem(0xa8a6, { 0xf1 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x4e23, gbc.sp());
        EXPECT(0xa8a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xa8a6));
        // F1 01A6
        gbc.setState(0x917a, 0x11bf, 0xfb10, 0xca18, 0xc767, 0xe8c9, 0x1, 0x0);
        gbc.writeMem(0x11bf, { 0x7a, 0xd9 });
        gbc.writeMem(0x917a, { 0xf1 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x11c1, gbc.sp());
        EXPECT(0x917b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x917a));
        // F1 01A7
        gbc.setState(0x2f54, 0xd55b, 0x7de0, 0x2ef6, 0x1b22, 0xbdbb, 0x0, 0x0);
        gbc.writeMem(0x2f54, { 0xf1 });
        gbc.writeMem(0xd55b, { 0xf2, 0x84 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xd55d, gbc.sp());
        EXPECT(0x2f55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xd55b));
        EXPECT(0x84, gbc.readMem(0xd55c));
        // F1 01A8
        gbc.setState(0x5531, 0x5031, 0xd740, 0xb8e5, 0xae70, 0xa55c, 0x1, 0x0);
        gbc.writeMem(0x5031, { 0x3e, 0x9 });
        gbc.writeMem(0x5531, { 0xf1 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5033, gbc.sp());
        EXPECT(0x5532, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 01A9
        gbc.setState(0x9f27, 0xeb16, 0x1bf0, 0xeca9, 0x61c, 0xbadf, 0x0, 0x0);
        gbc.writeMem(0x9f27, { 0xf1 });
        gbc.writeMem(0xeb16, { 0x59, 0x2d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xeb18, gbc.sp());
        EXPECT(0x9f28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x9f27));
        EXPECT(0x59, gbc.readMem(0xeb16));
        EXPECT(0x2d, gbc.readMem(0xeb17));
        // F1 01AA
        gbc.setState(0xdc9d, 0xbf59, 0xc330, 0xd876, 0x1557, 0xda3, 0x0, 0x0);
        gbc.writeMem(0xbf59, { 0x53, 0x2e });
        gbc.writeMem(0xdc9d, { 0xf1 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xbf5b, gbc.sp());
        EXPECT(0xdc9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xbf59));
        EXPECT(0x2e, gbc.readMem(0xbf5a));
        EXPECT(0xf1, gbc.readMem(0xdc9d));
        // F1 01AB
        gbc.setState(0x38e8, 0x8c3b, 0xc420, 0xbe38, 0xce64, 0x9a47, 0x0, 0x0);
        gbc.writeMem(0x38e8, { 0xf1 });
        gbc.writeMem(0x8c3b, { 0x91, 0xb8 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x8c3d, gbc.sp());
        EXPECT(0x38e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8c3b));
        EXPECT(0xb8, gbc.readMem(0x8c3c));
        // F1 01AC
        gbc.setState(0x7724, 0xa282, 0xbbc0, 0x7e7, 0xe4d, 0xd2e9, 0x1, 0x1);
        gbc.writeMem(0x7724, { 0xf1 });
        gbc.writeMem(0xa282, { 0x54, 0xaf });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa284, gbc.sp());
        EXPECT(0x7725, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0xa282));
        EXPECT(0xaf, gbc.readMem(0xa283));
        // F1 01AD
        gbc.setState(0xa0e7, 0x8012, 0x72c0, 0x71f0, 0xe62e, 0xe510, 0x1, 0x0);
        gbc.writeMem(0x8012, { 0x38, 0x3b });
        gbc.writeMem(0xa0e7, { 0xf1 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8014, gbc.sp());
        EXPECT(0xa0e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8012));
        EXPECT(0x3b, gbc.readMem(0x8013));
        EXPECT(0xf1, gbc.readMem(0xa0e7));
        // F1 01AE
        gbc.setState(0x1414, 0xf2, 0x87a0, 0xf0a4, 0x7ccc, 0x7d37, 0x1, 0x0);
        gbc.writeMem(0xf2, { 0xd4, 0x6c });
        gbc.writeMem(0x1414, { 0xf1 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xf4, gbc.sp());
        EXPECT(0x1415, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 01AF
        gbc.setState(0x6b15, 0xb4f2, 0xf50, 0x5f79, 0xf5b3, 0xccc6, 0x1, 0x0);
        gbc.writeMem(0x6b15, { 0xf1 });
        gbc.writeMem(0xb4f2, { 0x45, 0xf2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb4f4, gbc.sp());
        EXPECT(0x6b16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xb4f2));
        EXPECT(0xf2, gbc.readMem(0xb4f3));
        // F1 01B0
        gbc.setState(0x7638, 0xb29c, 0xf640, 0xdc57, 0x116c, 0x1c2e, 0x1, 0x1);
        gbc.writeMem(0x7638, { 0xf1 });
        gbc.writeMem(0xb29c, { 0x9f, 0x90 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xb29e, gbc.sp());
        EXPECT(0x7639, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xb29c));
        EXPECT(0x90, gbc.readMem(0xb29d));
        // F1 01B1
        gbc.setState(0x9ac, 0x333b, 0x2ac0, 0x5344, 0x86d9, 0xd652, 0x1, 0x1);
        gbc.writeMem(0x9ac, { 0xf1 });
        gbc.writeMem(0x333b, { 0xac, 0x81 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x333d, gbc.sp());
        EXPECT(0x9ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 01B2
        gbc.setState(0x6d62, 0x1c88, 0xa0f0, 0x73d6, 0xb17, 0x7473, 0x0, 0x0);
        gbc.writeMem(0x1c88, { 0x5, 0x42 });
        gbc.writeMem(0x6d62, { 0xf1 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x1c8a, gbc.sp());
        EXPECT(0x6d63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 01B3
        gbc.setState(0x6023, 0xb956, 0x6300, 0xd3c2, 0x571d, 0x91bb, 0x0, 0x0);
        gbc.writeMem(0x6023, { 0xf1 });
        gbc.writeMem(0xb956, { 0xe5, 0x96 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xb958, gbc.sp());
        EXPECT(0x6024, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xb956));
        EXPECT(0x96, gbc.readMem(0xb957));
        // F1 01B4
        gbc.setState(0xdce7, 0x75bf, 0xed50, 0xeea3, 0x29c4, 0xe847, 0x1, 0x0);
        gbc.writeMem(0x75bf, { 0xda, 0x6c });
        gbc.writeMem(0xdce7, { 0xf1 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x75c1, gbc.sp());
        EXPECT(0xdce8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xdce7));
        // F1 01B5
        gbc.setState(0x8971, 0x9a3, 0x4490, 0x1166, 0xc231, 0x632f, 0x0, 0x1);
        gbc.writeMem(0x9a3, { 0xe, 0x22 });
        gbc.writeMem(0x8971, { 0xf1 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9a5, gbc.sp());
        EXPECT(0x8972, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8971));
        // F1 01B6
        gbc.setState(0xac95, 0x975b, 0x3250, 0x90ee, 0xd30a, 0xd0ed, 0x1, 0x1);
        gbc.writeMem(0x975b, { 0xf, 0xc3 });
        gbc.writeMem(0xac95, { 0xf1 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x975d, gbc.sp());
        EXPECT(0xac96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0x975b));
        EXPECT(0xc3, gbc.readMem(0x975c));
        EXPECT(0xf1, gbc.readMem(0xac95));
        // F1 01B7
        gbc.setState(0x701a, 0x2a65, 0x8980, 0xb4bc, 0x68ec, 0xf983, 0x0, 0x1);
        gbc.writeMem(0x2a65, { 0x3d, 0x26 });
        gbc.writeMem(0x701a, { 0xf1 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x2a67, gbc.sp());
        EXPECT(0x701b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 01B8
        gbc.setState(0x1dc3, 0x729f, 0x7c70, 0x3e6, 0xa54c, 0x89b9, 0x1, 0x0);
        gbc.writeMem(0x1dc3, { 0xf1 });
        gbc.writeMem(0x729f, { 0x98, 0x97 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x72a1, gbc.sp());
        EXPECT(0x1dc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 01B9
        gbc.setState(0x3306, 0xa08d, 0x1a00, 0x49a2, 0xbfde, 0x2da8, 0x1, 0x0);
        gbc.writeMem(0x3306, { 0xf1 });
        gbc.writeMem(0xa08d, { 0xcd, 0x8e });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xa08f, gbc.sp());
        EXPECT(0x3307, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xa08d));
        EXPECT(0x8e, gbc.readMem(0xa08e));
        // F1 01BA
        gbc.setState(0xc15c, 0xc375, 0xa020, 0x6e2a, 0xf42b, 0xaa78, 0x0, 0x0);
        gbc.writeMem(0xc15c, { 0xf1 });
        gbc.writeMem(0xc375, { 0x74, 0xd9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xc377, gbc.sp());
        EXPECT(0xc15d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xc15c));
        EXPECT(0x74, gbc.readMem(0xc375));
        EXPECT(0xd9, gbc.readMem(0xc376));
        // F1 01BB
        gbc.setState(0xd7fd, 0x9f66, 0xea20, 0x37ba, 0xf126, 0x7120, 0x1, 0x0);
        gbc.writeMem(0x9f66, { 0xbf, 0x3c });
        gbc.writeMem(0xd7fd, { 0xf1 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9f68, gbc.sp());
        EXPECT(0xd7fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x9f66));
        EXPECT(0x3c, gbc.readMem(0x9f67));
        EXPECT(0xf1, gbc.readMem(0xd7fd));
        // F1 01BC
        gbc.setState(0x26c1, 0x72e4, 0xa0d0, 0x8faa, 0x3961, 0x38fb, 0x0, 0x1);
        gbc.writeMem(0x26c1, { 0xf1 });
        gbc.writeMem(0x72e4, { 0x5, 0xf8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x72e6, gbc.sp());
        EXPECT(0x26c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 01BD
        gbc.setState(0x6be2, 0xf10c, 0xe840, 0xaee6, 0x38e7, 0xb9b8, 0x1, 0x1);
        gbc.writeMem(0x6be2, { 0xf1 });
        gbc.writeMem(0xf10c, { 0xbe, 0x4f });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xf10e, gbc.sp());
        EXPECT(0x6be3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xf10c));
        EXPECT(0x4f, gbc.readMem(0xf10d));
        // F1 01BE
        gbc.setState(0xd6d3, 0xdd52, 0xc120, 0xa816, 0x4435, 0x263c, 0x1, 0x0);
        gbc.writeMem(0xd6d3, { 0xf1 });
        gbc.writeMem(0xdd52, { 0xd1, 0x5f });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xdd54, gbc.sp());
        EXPECT(0xd6d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xd6d3));
        EXPECT(0xd1, gbc.readMem(0xdd52));
        EXPECT(0x5f, gbc.readMem(0xdd53));
        // F1 01BF
        gbc.setState(0x5c8e, 0x71a0, 0xab00, 0x9b0f, 0x8987, 0xab9, 0x1, 0x0);
        gbc.writeMem(0x5c8e, { 0xf1 });
        gbc.writeMem(0x71a0, { 0x80, 0x17 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x71a2, gbc.sp());
        EXPECT(0x5c8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 01C0
        gbc.setState(0x8c9e, 0x4dd8, 0x82b0, 0xdc9b, 0x9a28, 0x8e10, 0x1, 0x0);
        gbc.writeMem(0x4dd8, { 0x2d, 0x1d });
        gbc.writeMem(0x8c9e, { 0xf1 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x4dda, gbc.sp());
        EXPECT(0x8c9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8c9e));
        // F1 01C1
        gbc.setState(0xc44, 0x9750, 0x2cf0, 0x2af, 0x7f47, 0x7c0c, 0x1, 0x0);
        gbc.writeMem(0xc44, { 0xf1 });
        gbc.writeMem(0x9750, { 0xf2, 0x7d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x9752, gbc.sp());
        EXPECT(0xc45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0x9750));
        EXPECT(0x7d, gbc.readMem(0x9751));
        // F1 01C2
        gbc.setState(0x6da, 0x5e08, 0xd410, 0x6f00, 0x9aaf, 0x4788, 0x1, 0x0);
        gbc.writeMem(0x6da, { 0xf1 });
        gbc.writeMem(0x5e08, { 0x3b, 0x6a });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x5e0a, gbc.sp());
        EXPECT(0x6db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 01C3
        gbc.setState(0xcd73, 0x21b6, 0x44c0, 0x82ba, 0xea61, 0x73b1, 0x0, 0x0);
        gbc.writeMem(0x21b6, { 0x14, 0x74 });
        gbc.writeMem(0xcd73, { 0xf1 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x21b8, gbc.sp());
        EXPECT(0xcd74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xcd73));
        // F1 01C4
        gbc.setState(0x701, 0x8696, 0x8bb0, 0x83ed, 0xd987, 0x311b, 0x1, 0x1);
        gbc.writeMem(0x701, { 0xf1 });
        gbc.writeMem(0x8696, { 0x5f, 0x41 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x8698, gbc.sp());
        EXPECT(0x702, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0x8696));
        EXPECT(0x41, gbc.readMem(0x8697));
        // F1 01C5
        gbc.setState(0xd3a2, 0x6d6b, 0x30, 0x8d69, 0x8392, 0x8bc, 0x0, 0x0);
        gbc.writeMem(0x6d6b, { 0x16, 0xc2 });
        gbc.writeMem(0xd3a2, { 0xf1 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x6d6d, gbc.sp());
        EXPECT(0xd3a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xd3a2));
        // F1 01C6
        gbc.setState(0x1b6c, 0xa478, 0x6f40, 0x4db7, 0xd67c, 0x2eb5, 0x1, 0x1);
        gbc.writeMem(0x1b6c, { 0xf1 });
        gbc.writeMem(0xa478, { 0xa0, 0x6e });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xa47a, gbc.sp());
        EXPECT(0x1b6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa478));
        EXPECT(0x6e, gbc.readMem(0xa479));
        // F1 01C7
        gbc.setState(0x16a6, 0x8608, 0xf140, 0x63ca, 0xc7dc, 0xc053, 0x1, 0x1);
        gbc.writeMem(0x16a6, { 0xf1 });
        gbc.writeMem(0x8608, { 0xf1, 0x51 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x860a, gbc.sp());
        EXPECT(0x16a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8608));
        EXPECT(0x51, gbc.readMem(0x8609));
        // F1 01C8
        gbc.setState(0x632c, 0xa100, 0x77d0, 0xb4f7, 0x3591, 0xbf43, 0x1, 0x0);
        gbc.writeMem(0x632c, { 0xf1 });
        gbc.writeMem(0xa100, { 0x94, 0x8c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xa102, gbc.sp());
        EXPECT(0x632d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xa100));
        EXPECT(0x8c, gbc.readMem(0xa101));
        // F1 01C9
        gbc.setState(0x1f67, 0x4e9f, 0x1570, 0x99f1, 0x1262, 0x2062, 0x0, 0x0);
        gbc.writeMem(0x1f67, { 0xf1 });
        gbc.writeMem(0x4e9f, { 0xbd, 0x40 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4ea1, gbc.sp());
        EXPECT(0x1f68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 01CA
        gbc.setState(0x627d, 0x412c, 0xce90, 0xa6b9, 0xe208, 0x61fb, 0x1, 0x0);
        gbc.writeMem(0x412c, { 0x36, 0xe1 });
        gbc.writeMem(0x627d, { 0xf1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x412e, gbc.sp());
        EXPECT(0x627e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 01CB
        gbc.setState(0x1804, 0xc880, 0x8740, 0x4b3, 0x36fb, 0x32c0, 0x0, 0x1);
        gbc.writeMem(0x1804, { 0xf1 });
        gbc.writeMem(0xc880, { 0xae, 0x1f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xc882, gbc.sp());
        EXPECT(0x1805, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xc880));
        EXPECT(0x1f, gbc.readMem(0xc881));
        // F1 01CC
        gbc.setState(0x7176, 0x6ea0, 0xd1c0, 0xb5f0, 0xfebc, 0x7a64, 0x0, 0x1);
        gbc.writeMem(0x6ea0, { 0x47, 0xeb });
        gbc.writeMem(0x7176, { 0xf1 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x6ea2, gbc.sp());
        EXPECT(0x7177, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 01CD
        gbc.setState(0xc9d1, 0x631c, 0xdc10, 0x9e, 0xd225, 0x1e5e, 0x0, 0x0);
        gbc.writeMem(0x631c, { 0x83, 0x90 });
        gbc.writeMem(0xc9d1, { 0xf1 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x631e, gbc.sp());
        EXPECT(0xc9d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xc9d1));
        // F1 01CE
        gbc.setState(0x78f4, 0xda3e, 0xf600, 0xbe90, 0x55dd, 0xe55c, 0x1, 0x1);
        gbc.writeMem(0x78f4, { 0xf1 });
        gbc.writeMem(0xda3e, { 0x90, 0x33 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xda40, gbc.sp());
        EXPECT(0x78f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xda3e));
        EXPECT(0x33, gbc.readMem(0xda3f));
        // F1 01CF
        gbc.setState(0x960f, 0x3e7d, 0x2740, 0xba22, 0x5fb, 0xd05b, 0x0, 0x0);
        gbc.writeMem(0x3e7d, { 0xd9, 0xb1 });
        gbc.writeMem(0x960f, { 0xf1 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x3e7f, gbc.sp());
        EXPECT(0x9610, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x960f));
        // F1 01D0
        gbc.setState(0x6fea, 0xc72b, 0x5a0, 0xc092, 0xbc46, 0xece8, 0x1, 0x0);
        gbc.writeMem(0x6fea, { 0xf1 });
        gbc.writeMem(0xc72b, { 0x8, 0x23 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xc72d, gbc.sp());
        EXPECT(0x6feb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xc72b));
        EXPECT(0x23, gbc.readMem(0xc72c));
        // F1 01D1
        gbc.setState(0xb38a, 0xe139, 0x7430, 0x5a1f, 0x6767, 0x401a, 0x1, 0x0);
        gbc.writeMem(0xb38a, { 0xf1 });
        gbc.writeMem(0xe139, { 0x1b, 0x62 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xe13b, gbc.sp());
        EXPECT(0xb38b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xb38a));
        EXPECT(0x1b, gbc.readMem(0xe139));
        EXPECT(0x62, gbc.readMem(0xe13a));
        // F1 01D2
        gbc.setState(0x3049, 0x97, 0xc950, 0xcd01, 0x865a, 0x7556, 0x0, 0x0);
        gbc.writeMem(0x97, { 0xac, 0xba });
        gbc.writeMem(0x3049, { 0xf1 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x99, gbc.sp());
        EXPECT(0x304a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 01D3
        gbc.setState(0xca1a, 0xfdb9, 0xa550, 0x5e9a, 0xae9d, 0xb8b2, 0x0, 0x0);
        gbc.writeMem(0xca1a, { 0xf1 });
        gbc.writeMem(0xfdb9, { 0xd6, 0x8 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xfdbb, gbc.sp());
        EXPECT(0xca1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xca1a));
        EXPECT(0xd6, gbc.readMem(0xfdb9));
        EXPECT(0x8, gbc.readMem(0xfdba));
        // F1 01D5
        gbc.setState(0xe2ad, 0x2ccc, 0xa180, 0xedf0, 0x2043, 0xf3ff, 0x0, 0x0);
        gbc.writeMem(0x2ccc, { 0x5b, 0xb5 });
        gbc.writeMem(0xe2ad, { 0xf1 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x2cce, gbc.sp());
        EXPECT(0xe2ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xe2ad));
        // F1 01D6
        gbc.setState(0x25bf, 0xd02c, 0x8080, 0x5514, 0x36cc, 0x3c9c, 0x0, 0x0);
        gbc.writeMem(0x25bf, { 0xf1 });
        gbc.writeMem(0xd02c, { 0x9d, 0xb3 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd02e, gbc.sp());
        EXPECT(0x25c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd02c));
        EXPECT(0xb3, gbc.readMem(0xd02d));
        // F1 01D7
        gbc.setState(0x153f, 0xecac, 0xbec0, 0xfb71, 0x9649, 0x5ad0, 0x0, 0x0);
        gbc.writeMem(0x153f, { 0xf1 });
        gbc.writeMem(0xecac, { 0x82, 0x2b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xecae, gbc.sp());
        EXPECT(0x1540, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xecac));
        EXPECT(0x2b, gbc.readMem(0xecad));
        // F1 01D8
        gbc.setState(0x184a, 0x8528, 0x6b80, 0x50b2, 0x1b86, 0xc9cc, 0x0, 0x1);
        gbc.writeMem(0x184a, { 0xf1 });
        gbc.writeMem(0x8528, { 0xba, 0xed });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x852a, gbc.sp());
        EXPECT(0x184b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0x8528));
        EXPECT(0xed, gbc.readMem(0x8529));
        // F1 01D9
        gbc.setState(0x21ae, 0x3be4, 0x9420, 0x4ef8, 0xc397, 0xabeb, 0x0, 0x1);
        gbc.writeMem(0x21ae, { 0xf1 });
        gbc.writeMem(0x3be4, { 0x35, 0x5f });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x3be6, gbc.sp());
        EXPECT(0x21af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 01DA
        gbc.setState(0xd78f, 0x3dc4, 0xda10, 0xa517, 0x468a, 0x6c3e, 0x1, 0x1);
        gbc.writeMem(0x3dc4, { 0x76, 0x9d });
        gbc.writeMem(0xd78f, { 0xf1 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x3dc6, gbc.sp());
        EXPECT(0xd790, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xd78f));
        // F1 01DB
        gbc.setState(0x557, 0xa9d5, 0xb290, 0xdf69, 0x9308, 0x2561, 0x0, 0x1);
        gbc.writeMem(0x557, { 0xf1 });
        gbc.writeMem(0xa9d5, { 0x14, 0xee });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xa9d7, gbc.sp());
        EXPECT(0x558, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xa9d5));
        EXPECT(0xee, gbc.readMem(0xa9d6));
        // F1 01DC
        gbc.setState(0x5f5d, 0x711e, 0x5380, 0xefe9, 0x59ad, 0xde7f, 0x1, 0x0);
        gbc.writeMem(0x5f5d, { 0xf1 });
        gbc.writeMem(0x711e, { 0xe2, 0xd2 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x7120, gbc.sp());
        EXPECT(0x5f5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 01DD
        gbc.setState(0xbe67, 0x8e49, 0xa8c0, 0x3d5b, 0xb6eb, 0xe479, 0x1, 0x0);
        gbc.writeMem(0x8e49, { 0xc9, 0x77 });
        gbc.writeMem(0xbe67, { 0xf1 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x8e4b, gbc.sp());
        EXPECT(0xbe68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x8e49));
        EXPECT(0x77, gbc.readMem(0x8e4a));
        EXPECT(0xf1, gbc.readMem(0xbe67));
        // F1 01DE
        gbc.setState(0xe09a, 0xc6df, 0x5620, 0xbb88, 0x7aa3, 0x39e8, 0x0, 0x1);
        gbc.writeMem(0xc6df, { 0xf0, 0x8f });
        gbc.writeMem(0xe09a, { 0xf1 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xc6e1, gbc.sp());
        EXPECT(0xe09b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc6df));
        EXPECT(0x8f, gbc.readMem(0xc6e0));
        EXPECT(0xf1, gbc.readMem(0xe09a));
        // F1 01DF
        gbc.setState(0x5fe8, 0x320a, 0x81b0, 0xce5e, 0x75e6, 0x4292, 0x0, 0x1);
        gbc.writeMem(0x320a, { 0x5e, 0x22 });
        gbc.writeMem(0x5fe8, { 0xf1 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x320c, gbc.sp());
        EXPECT(0x5fe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 01E0
        gbc.setState(0xcd77, 0xbfe, 0xd460, 0xa8b4, 0x79da, 0x996e, 0x1, 0x1);
        gbc.writeMem(0xbfe, { 0xd3, 0xc3 });
        gbc.writeMem(0xcd77, { 0xf1 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xc00, gbc.sp());
        EXPECT(0xcd78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xcd77));
        // F1 01E1
        gbc.setState(0xcfb0, 0xf9e9, 0xfb00, 0x8436, 0x5d28, 0x9bb0, 0x1, 0x0);
        gbc.writeMem(0xcfb0, { 0xf1 });
        gbc.writeMem(0xf9e9, { 0x23, 0x2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf9eb, gbc.sp());
        EXPECT(0xcfb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xcfb0));
        EXPECT(0x23, gbc.readMem(0xf9e9));
        EXPECT(0x2, gbc.readMem(0xf9ea));
        // F1 01E3
        gbc.setState(0xa663, 0xcc79, 0xa60, 0x971d, 0x2601, 0x46e6, 0x0, 0x1);
        gbc.writeMem(0xa663, { 0xf1 });
        gbc.writeMem(0xcc79, { 0x30, 0xcc });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xcc7b, gbc.sp());
        EXPECT(0xa664, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xa663));
        EXPECT(0x30, gbc.readMem(0xcc79));
        EXPECT(0xcc, gbc.readMem(0xcc7a));
        // F1 01E4
        gbc.setState(0xab5b, 0x1ed, 0xdbc0, 0x2351, 0x7140, 0xc172, 0x1, 0x1);
        gbc.writeMem(0x1ed, { 0xb, 0xa4 });
        gbc.writeMem(0xab5b, { 0xf1 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x1ef, gbc.sp());
        EXPECT(0xab5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xab5b));
        // F1 01E5
        gbc.setState(0xb402, 0x3137, 0xa1d0, 0x23bd, 0x204d, 0xa964, 0x0, 0x1);
        gbc.writeMem(0x3137, { 0x65, 0x30 });
        gbc.writeMem(0xb402, { 0xf1 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x3139, gbc.sp());
        EXPECT(0xb403, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xb402));
        // F1 01E6
        gbc.setState(0x3889, 0xe474, 0x33c0, 0x824d, 0x24e9, 0x1e94, 0x0, 0x0);
        gbc.writeMem(0x3889, { 0xf1 });
        gbc.writeMem(0xe474, { 0xa6, 0x11 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xe476, gbc.sp());
        EXPECT(0x388a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xe474));
        EXPECT(0x11, gbc.readMem(0xe475));
        // F1 01E7
        gbc.setState(0x80bf, 0xbad4, 0x4a30, 0xfdfa, 0x5027, 0xc605, 0x1, 0x1);
        gbc.writeMem(0x80bf, { 0xf1 });
        gbc.writeMem(0xbad4, { 0x39, 0xe1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xbad6, gbc.sp());
        EXPECT(0x80c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x80bf));
        EXPECT(0x39, gbc.readMem(0xbad4));
        EXPECT(0xe1, gbc.readMem(0xbad5));
        // F1 01E8
        gbc.setState(0xdf58, 0x5ee, 0x880, 0x1b77, 0x3ea4, 0xb998, 0x0, 0x0);
        gbc.writeMem(0x5ee, { 0x5d, 0x75 });
        gbc.writeMem(0xdf58, { 0xf1 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x5f0, gbc.sp());
        EXPECT(0xdf59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xdf58));
        // F1 01E9
        gbc.setState(0x3e1e, 0x44c, 0x240, 0x5d02, 0xcc3d, 0xd22d, 0x0, 0x0);
        gbc.writeMem(0x44c, { 0xf0, 0xa5 });
        gbc.writeMem(0x3e1e, { 0xf1 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x44e, gbc.sp());
        EXPECT(0x3e1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 01EA
        gbc.setState(0x6c15, 0xf27e, 0xda0, 0x2f7e, 0x4d9a, 0xee74, 0x1, 0x1);
        gbc.writeMem(0x6c15, { 0xf1 });
        gbc.writeMem(0xf27e, { 0xa2, 0x76 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf280, gbc.sp());
        EXPECT(0x6c16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xf27e));
        EXPECT(0x76, gbc.readMem(0xf27f));
        // F1 01EB
        gbc.setState(0x3454, 0x78b5, 0xca30, 0x8f3c, 0x5a2, 0x7485, 0x1, 0x1);
        gbc.writeMem(0x3454, { 0xf1 });
        gbc.writeMem(0x78b5, { 0x48, 0x17 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x78b7, gbc.sp());
        EXPECT(0x3455, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 01EC
        gbc.setState(0x4f2a, 0x5d93, 0x28d0, 0x79bc, 0x4296, 0x1c0a, 0x0, 0x1);
        gbc.writeMem(0x4f2a, { 0xf1 });
        gbc.writeMem(0x5d93, { 0xa0, 0x15 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x5d95, gbc.sp());
        EXPECT(0x4f2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 01EE
        gbc.setState(0x2831, 0xa10a, 0xafe0, 0x8e17, 0x71da, 0x9c98, 0x1, 0x1);
        gbc.writeMem(0x2831, { 0xf1 });
        gbc.writeMem(0xa10a, { 0x7b, 0x7c });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xa10c, gbc.sp());
        EXPECT(0x2832, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xa10a));
        EXPECT(0x7c, gbc.readMem(0xa10b));
        // F1 01EF
        gbc.setState(0x3f9c, 0x61d2, 0x5290, 0x44cb, 0x7ed0, 0xbcc2, 0x1, 0x1);
        gbc.writeMem(0x3f9c, { 0xf1 });
        gbc.writeMem(0x61d2, { 0xed, 0x75 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x61d4, gbc.sp());
        EXPECT(0x3f9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 01F0
        gbc.setState(0xa202, 0x3d15, 0xd370, 0x697f, 0xb623, 0x580, 0x0, 0x1);
        gbc.writeMem(0x3d15, { 0x2d, 0x18 });
        gbc.writeMem(0xa202, { 0xf1 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3d17, gbc.sp());
        EXPECT(0xa203, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xa202));
        // F1 01F1
        gbc.setState(0x103c, 0x26ad, 0xff30, 0x3380, 0x226d, 0xefa7, 0x1, 0x0);
        gbc.writeMem(0x103c, { 0xf1 });
        gbc.writeMem(0x26ad, { 0x43, 0x50 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x26af, gbc.sp());
        EXPECT(0x103d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 01F2
        gbc.setState(0x25c0, 0x946a, 0xa860, 0x33fe, 0x5b3f, 0xc69c, 0x1, 0x0);
        gbc.writeMem(0x25c0, { 0xf1 });
        gbc.writeMem(0x946a, { 0x6c, 0x26 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x946c, gbc.sp());
        EXPECT(0x25c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x946a));
        EXPECT(0x26, gbc.readMem(0x946b));
        // F1 01F3
        gbc.setState(0x355e, 0xdaf8, 0x5fb0, 0x1246, 0xbaaf, 0x4d8f, 0x0, 0x1);
        gbc.writeMem(0x355e, { 0xf1 });
        gbc.writeMem(0xdaf8, { 0xe1, 0x21 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xdafa, gbc.sp());
        EXPECT(0x355f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xdaf8));
        EXPECT(0x21, gbc.readMem(0xdaf9));
        // F1 01F4
        gbc.setState(0x4ace, 0xd4c1, 0x5a10, 0x4517, 0x275a, 0xe85d, 0x1, 0x0);
        gbc.writeMem(0x4ace, { 0xf1 });
        gbc.writeMem(0xd4c1, { 0xae, 0x87 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xd4c3, gbc.sp());
        EXPECT(0x4acf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xd4c1));
        EXPECT(0x87, gbc.readMem(0xd4c2));
        // F1 01F5
        gbc.setState(0xdd9c, 0x76c0, 0x2240, 0x418d, 0x1b2a, 0x9206, 0x1, 0x1);
        gbc.writeMem(0x76c0, { 0x86, 0xbd });
        gbc.writeMem(0xdd9c, { 0xf1 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x76c2, gbc.sp());
        EXPECT(0xdd9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xdd9c));
        // F1 01F6
        gbc.setState(0xa930, 0x7abc, 0xaa50, 0x4463, 0x1eac, 0x2296, 0x1, 0x0);
        gbc.writeMem(0x7abc, { 0x22, 0xa0 });
        gbc.writeMem(0xa930, { 0xf1 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x7abe, gbc.sp());
        EXPECT(0xa931, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xa930));
        // F1 01F7
        gbc.setState(0xa102, 0x9095, 0xb080, 0xf0b0, 0x1a2a, 0x7f7, 0x0, 0x0);
        gbc.writeMem(0x9095, { 0x5c, 0x35 });
        gbc.writeMem(0xa102, { 0xf1 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x9097, gbc.sp());
        EXPECT(0xa103, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0x9095));
        EXPECT(0x35, gbc.readMem(0x9096));
        EXPECT(0xf1, gbc.readMem(0xa102));
        // F1 01F9
        gbc.setState(0x22b8, 0x780, 0x50f0, 0x831b, 0x70f1, 0x63e2, 0x0, 0x1);
        gbc.writeMem(0x780, { 0x11, 0x15 });
        gbc.writeMem(0x22b8, { 0xf1 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x782, gbc.sp());
        EXPECT(0x22b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 01FA
        gbc.setState(0x7447, 0x721a, 0x7fb0, 0x1b8c, 0x2cb9, 0x82af, 0x1, 0x1);
        gbc.writeMem(0x721a, { 0x9f, 0x90 });
        gbc.writeMem(0x7447, { 0xf1 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x721c, gbc.sp());
        EXPECT(0x7448, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 01FB
        gbc.setState(0x885f, 0xee99, 0x9400, 0xc43c, 0x5028, 0xe0f4, 0x1, 0x0);
        gbc.writeMem(0x885f, { 0xf1 });
        gbc.writeMem(0xee99, { 0x58, 0xed });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xee9b, gbc.sp());
        EXPECT(0x8860, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x885f));
        EXPECT(0x58, gbc.readMem(0xee99));
        EXPECT(0xed, gbc.readMem(0xee9a));
        // F1 01FC
        gbc.setState(0x81b, 0x5ebb, 0x440, 0x133c, 0x7331, 0xc577, 0x0, 0x0);
        gbc.writeMem(0x81b, { 0xf1 });
        gbc.writeMem(0x5ebb, { 0x95, 0xfe });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x5ebd, gbc.sp());
        EXPECT(0x81c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 01FD
        gbc.setState(0x1b5, 0x3d2e, 0x4cb0, 0x3591, 0xc535, 0xc418, 0x1, 0x0);
        gbc.writeMem(0x1b5, { 0xf1 });
        gbc.writeMem(0x3d2e, { 0x68, 0x42 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x3d30, gbc.sp());
        EXPECT(0x1b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 01FE
        gbc.setState(0x7db2, 0xc7ed, 0xb250, 0x3a87, 0x8a37, 0xdab2, 0x1, 0x0);
        gbc.writeMem(0x7db2, { 0xf1 });
        gbc.writeMem(0xc7ed, { 0x9d, 0x4f });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xc7ef, gbc.sp());
        EXPECT(0x7db3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xc7ed));
        EXPECT(0x4f, gbc.readMem(0xc7ee));
        // F1 01FF
        gbc.setState(0x7bad, 0xc4f3, 0xcd90, 0x1f75, 0x48b1, 0xdade, 0x1, 0x1);
        gbc.writeMem(0x7bad, { 0xf1 });
        gbc.writeMem(0xc4f3, { 0x8f, 0x56 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc4f5, gbc.sp());
        EXPECT(0x7bae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xc4f3));
        EXPECT(0x56, gbc.readMem(0xc4f4));
        // F1 0200
        gbc.setState(0x8b59, 0x3e2e, 0x8df0, 0x469d, 0xea2f, 0x1ea5, 0x1, 0x1);
        gbc.writeMem(0x3e2e, { 0x73, 0xc5 });
        gbc.writeMem(0x8b59, { 0xf1 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x3e30, gbc.sp());
        EXPECT(0x8b5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8b59));
        // F1 0201
        gbc.setState(0xad89, 0x5f80, 0x6f20, 0x8678, 0x2b0e, 0xce98, 0x1, 0x1);
        gbc.writeMem(0x5f80, { 0x86, 0xf8 });
        gbc.writeMem(0xad89, { 0xf1 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x5f82, gbc.sp());
        EXPECT(0xad8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xad89));
        // F1 0203
        gbc.setState(0x98b2, 0xffe1, 0x8d50, 0xe4a7, 0x76b7, 0x11b4, 0x1, 0x1);
        gbc.writeMem(0x98b2, { 0xf1 });
        gbc.writeMem(0xffe1, { 0x88, 0xce });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xffe3, gbc.sp());
        EXPECT(0x98b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x98b2));
        EXPECT(0x88, gbc.readMem(0xffe1));
        EXPECT(0xce, gbc.readMem(0xffe2));
        // F1 0204
        gbc.setState(0xd8a, 0xb91a, 0x50d0, 0x2846, 0x72d1, 0x4b42, 0x0, 0x1);
        gbc.writeMem(0xd8a, { 0xf1 });
        gbc.writeMem(0xb91a, { 0x7a, 0xc3 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xb91c, gbc.sp());
        EXPECT(0xd8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb91a));
        EXPECT(0xc3, gbc.readMem(0xb91b));
        // F1 0205
        gbc.setState(0xc1a6, 0xfeca, 0xe0b0, 0xf42c, 0x44d1, 0xdd34, 0x0, 0x1);
        gbc.writeMem(0xc1a6, { 0xf1 });
        gbc.writeMem(0xfeca, { 0x90, 0xbe });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xfecc, gbc.sp());
        EXPECT(0xc1a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xc1a6));
        EXPECT(0x90, gbc.readMem(0xfeca));
        EXPECT(0xbe, gbc.readMem(0xfecb));
        // F1 0206
        gbc.setState(0x7246, 0xa645, 0x52f0, 0xff15, 0x3011, 0xb2c6, 0x0, 0x0);
        gbc.writeMem(0x7246, { 0xf1 });
        gbc.writeMem(0xa645, { 0xe6, 0xa });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xa647, gbc.sp());
        EXPECT(0x7247, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xa645));
        EXPECT(0xa, gbc.readMem(0xa646));
        // F1 0207
        gbc.setState(0xd3bc, 0x541b, 0x3290, 0x1536, 0x66a5, 0xc4a2, 0x1, 0x0);
        gbc.writeMem(0x541b, { 0x48, 0xdb });
        gbc.writeMem(0xd3bc, { 0xf1 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x541d, gbc.sp());
        EXPECT(0xd3bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xd3bc));
        // F1 0208
        gbc.setState(0x451f, 0x2869, 0x3f20, 0xd875, 0x20bd, 0xd746, 0x0, 0x0);
        gbc.writeMem(0x2869, { 0x69, 0x7b });
        gbc.writeMem(0x451f, { 0xf1 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x286b, gbc.sp());
        EXPECT(0x4520, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0209
        gbc.setState(0x7a96, 0xb27a, 0x8870, 0x5ac, 0x3df1, 0x3d28, 0x0, 0x0);
        gbc.writeMem(0x7a96, { 0xf1 });
        gbc.writeMem(0xb27a, { 0xdf, 0x1b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xb27c, gbc.sp());
        EXPECT(0x7a97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xb27a));
        EXPECT(0x1b, gbc.readMem(0xb27b));
        // F1 020A
        gbc.setState(0x2692, 0x2efa, 0x2320, 0x3caa, 0x622d, 0x3110, 0x1, 0x1);
        gbc.writeMem(0x2692, { 0xf1 });
        gbc.writeMem(0x2efa, { 0x62, 0x96 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2efc, gbc.sp());
        EXPECT(0x2693, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 020B
        gbc.setState(0xd6e9, 0xf722, 0x7e70, 0xcebf, 0x6b42, 0x7c7b, 0x0, 0x0);
        gbc.writeMem(0xd6e9, { 0xf1 });
        gbc.writeMem(0xf722, { 0xb5, 0x4e });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf724, gbc.sp());
        EXPECT(0xd6ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xd6e9));
        EXPECT(0xb5, gbc.readMem(0xf722));
        EXPECT(0x4e, gbc.readMem(0xf723));
        // F1 020C
        gbc.setState(0x4082, 0xc603, 0x8800, 0x137e, 0x61ad, 0xce67, 0x0, 0x0);
        gbc.writeMem(0x4082, { 0xf1 });
        gbc.writeMem(0xc603, { 0xee, 0x8e });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xc605, gbc.sp());
        EXPECT(0x4083, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xc603));
        EXPECT(0x8e, gbc.readMem(0xc604));
        // F1 020D
        gbc.setState(0xef12, 0x84c7, 0x1b80, 0x6954, 0x79dc, 0xdf1b, 0x0, 0x1);
        gbc.writeMem(0x84c7, { 0xe8, 0x20 });
        gbc.writeMem(0xef12, { 0xf1 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x84c9, gbc.sp());
        EXPECT(0xef13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0x84c7));
        EXPECT(0x20, gbc.readMem(0x84c8));
        EXPECT(0xf1, gbc.readMem(0xef12));
        // F1 020E
        gbc.setState(0x36ea, 0x4dda, 0xa480, 0x131, 0xc47b, 0x6b29, 0x1, 0x0);
        gbc.writeMem(0x36ea, { 0xf1 });
        gbc.writeMem(0x4dda, { 0x14, 0xf9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x4ddc, gbc.sp());
        EXPECT(0x36eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 020F
        gbc.setState(0x356d, 0xa846, 0xedd0, 0xcafb, 0xe9c4, 0x79c4, 0x0, 0x1);
        gbc.writeMem(0x356d, { 0xf1 });
        gbc.writeMem(0xa846, { 0x97, 0x3c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xa848, gbc.sp());
        EXPECT(0x356e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xa846));
        EXPECT(0x3c, gbc.readMem(0xa847));
        // F1 0210
        gbc.setState(0x42dd, 0x53b9, 0xb970, 0x89a1, 0x6141, 0x21df, 0x1, 0x1);
        gbc.writeMem(0x42dd, { 0xf1 });
        gbc.writeMem(0x53b9, { 0x8d, 0x3d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x53bb, gbc.sp());
        EXPECT(0x42de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0211
        gbc.setState(0x3860, 0x9ad5, 0xe1f0, 0x2437, 0xa581, 0xdff1, 0x0, 0x1);
        gbc.writeMem(0x3860, { 0xf1 });
        gbc.writeMem(0x9ad5, { 0x85, 0xbe });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x9ad7, gbc.sp());
        EXPECT(0x3861, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x9ad5));
        EXPECT(0xbe, gbc.readMem(0x9ad6));
        // F1 0214
        gbc.setState(0xa6e5, 0xe36d, 0xda80, 0xc4b1, 0x2c7e, 0x1864, 0x1, 0x0);
        gbc.writeMem(0xa6e5, { 0xf1 });
        gbc.writeMem(0xe36d, { 0xd9, 0x29 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xe36f, gbc.sp());
        EXPECT(0xa6e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xa6e5));
        EXPECT(0xd9, gbc.readMem(0xe36d));
        EXPECT(0x29, gbc.readMem(0xe36e));
        // F1 0215
        gbc.setState(0xbf92, 0x3672, 0x3b20, 0x5219, 0x5813, 0xc73c, 0x1, 0x1);
        gbc.writeMem(0x3672, { 0xcb, 0xfb });
        gbc.writeMem(0xbf92, { 0xf1 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x3674, gbc.sp());
        EXPECT(0xbf93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xbf92));
        // F1 0216
        gbc.setState(0xc6f2, 0x4a27, 0xbdb0, 0xf555, 0x7e54, 0xcf9b, 0x0, 0x1);
        gbc.writeMem(0x4a27, { 0x6, 0xb8 });
        gbc.writeMem(0xc6f2, { 0xf1 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x4a29, gbc.sp());
        EXPECT(0xc6f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xc6f2));
        // F1 0218
        gbc.setState(0xae65, 0x7660, 0xf9d0, 0x1db6, 0xfd3e, 0x91c2, 0x1, 0x0);
        gbc.writeMem(0x7660, { 0x73, 0xb8 });
        gbc.writeMem(0xae65, { 0xf1 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7662, gbc.sp());
        EXPECT(0xae66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xae65));
        // F1 0219
        gbc.setState(0xa993, 0x2d9c, 0x15a0, 0x74e0, 0x9517, 0x670f, 0x0, 0x0);
        gbc.writeMem(0x2d9c, { 0xeb, 0xf0 });
        gbc.writeMem(0xa993, { 0xf1 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x2d9e, gbc.sp());
        EXPECT(0xa994, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xa993));
        // F1 021A
        gbc.setState(0x3404, 0x81c, 0x67b0, 0x9db3, 0xefb8, 0x81a3, 0x0, 0x0);
        gbc.writeMem(0x81c, { 0x72, 0x65 });
        gbc.writeMem(0x3404, { 0xf1 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x81e, gbc.sp());
        EXPECT(0x3405, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 021B
        gbc.setState(0x6cfb, 0xb9e3, 0x63c0, 0x8da4, 0x7fd1, 0xa607, 0x0, 0x1);
        gbc.writeMem(0x6cfb, { 0xf1 });
        gbc.writeMem(0xb9e3, { 0x62, 0xf7 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xb9e5, gbc.sp());
        EXPECT(0x6cfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xb9e3));
        EXPECT(0xf7, gbc.readMem(0xb9e4));
        // F1 021C
        gbc.setState(0x29b, 0x1d4b, 0x35a0, 0xc05d, 0xcf3e, 0x5a5d, 0x0, 0x0);
        gbc.writeMem(0x29b, { 0xf1 });
        gbc.writeMem(0x1d4b, { 0xc3, 0x18 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x1d4d, gbc.sp());
        EXPECT(0x29c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 021D
        gbc.setState(0x6a09, 0xcf22, 0x1f70, 0xcf82, 0xc23, 0x331a, 0x1, 0x0);
        gbc.writeMem(0x6a09, { 0xf1 });
        gbc.writeMem(0xcf22, { 0x66, 0x18 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xcf24, gbc.sp());
        EXPECT(0x6a0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xcf22));
        EXPECT(0x18, gbc.readMem(0xcf23));
        // F1 021E
        gbc.setState(0xe4a8, 0x2ba5, 0x1fb0, 0x5a08, 0x9a5e, 0xa6c9, 0x0, 0x0);
        gbc.writeMem(0x2ba5, { 0x11, 0x53 });
        gbc.writeMem(0xe4a8, { 0xf1 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x2ba7, gbc.sp());
        EXPECT(0xe4a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xe4a8));
        // F1 021F
        gbc.setState(0x1f3e, 0xd63e, 0xacf0, 0xad35, 0xf65f, 0xda9c, 0x0, 0x1);
        gbc.writeMem(0x1f3e, { 0xf1 });
        gbc.writeMem(0xd63e, { 0xae, 0xf1 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd640, gbc.sp());
        EXPECT(0x1f3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xd63e));
        EXPECT(0xf1, gbc.readMem(0xd63f));
        // F1 0220
        gbc.setState(0xb395, 0x58f8, 0x8400, 0xf636, 0x226d, 0x9af1, 0x1, 0x0);
        gbc.writeMem(0x58f8, { 0xfb, 0xf1 });
        gbc.writeMem(0xb395, { 0xf1 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x58fa, gbc.sp());
        EXPECT(0xb396, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xb395));
        // F1 0221
        gbc.setState(0x1ca2, 0xf00a, 0x9840, 0xd5f2, 0x15ba, 0xbd6a, 0x1, 0x0);
        gbc.writeMem(0x1ca2, { 0xf1 });
        gbc.writeMem(0xf00a, { 0x2f, 0xdb });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf00c, gbc.sp());
        EXPECT(0x1ca3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xf00a));
        EXPECT(0xdb, gbc.readMem(0xf00b));
        // F1 0223
        gbc.setState(0xc890, 0xf3d0, 0xe9d0, 0x310, 0x456b, 0xbdba, 0x1, 0x1);
        gbc.writeMem(0xc890, { 0xf1 });
        gbc.writeMem(0xf3d0, { 0x84, 0x1f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xf3d2, gbc.sp());
        EXPECT(0xc891, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xc890));
        EXPECT(0x84, gbc.readMem(0xf3d0));
        EXPECT(0x1f, gbc.readMem(0xf3d1));
        // F1 0224
        gbc.setState(0x5810, 0x90c7, 0xb6f0, 0x606f, 0x1472, 0xe6c0, 0x1, 0x1);
        gbc.writeMem(0x5810, { 0xf1 });
        gbc.writeMem(0x90c7, { 0xaf, 0x23 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x90c9, gbc.sp());
        EXPECT(0x5811, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0x90c7));
        EXPECT(0x23, gbc.readMem(0x90c8));
        // F1 0225
        gbc.setState(0x7447, 0x3e2e, 0x2e30, 0x63e7, 0xba32, 0x5f4c, 0x0, 0x0);
        gbc.writeMem(0x3e2e, { 0x73, 0xc5 });
        gbc.writeMem(0x7447, { 0xf1 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x3e30, gbc.sp());
        EXPECT(0x7448, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 0226
        gbc.setState(0x576d, 0xaf4d, 0x6b90, 0x552f, 0xf85, 0xdd73, 0x0, 0x1);
        gbc.writeMem(0x576d, { 0xf1 });
        gbc.writeMem(0xaf4d, { 0x8, 0x16 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xaf4f, gbc.sp());
        EXPECT(0x576e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xaf4d));
        EXPECT(0x16, gbc.readMem(0xaf4e));
        // F1 0227
        gbc.setState(0x6e9a, 0x986a, 0xbdb0, 0xb24c, 0x51f2, 0x94f, 0x1, 0x1);
        gbc.writeMem(0x6e9a, { 0xf1 });
        gbc.writeMem(0x986a, { 0xe0, 0x97 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x986c, gbc.sp());
        EXPECT(0x6e9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x986a));
        EXPECT(0x97, gbc.readMem(0x986b));
        // F1 0228
        gbc.setState(0x9523, 0xc189, 0x5e00, 0xe350, 0x3fad, 0xede7, 0x0, 0x1);
        gbc.writeMem(0x9523, { 0xf1 });
        gbc.writeMem(0xc189, { 0xf, 0xf2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc18b, gbc.sp());
        EXPECT(0x9524, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x9523));
        EXPECT(0xf, gbc.readMem(0xc189));
        EXPECT(0xf2, gbc.readMem(0xc18a));
        // F1 0229
        gbc.setState(0xe86a, 0x6599, 0xf0b0, 0x899b, 0xc0e6, 0x9b84, 0x1, 0x0);
        gbc.writeMem(0x6599, { 0x9, 0x13 });
        gbc.writeMem(0xe86a, { 0xf1 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x659b, gbc.sp());
        EXPECT(0xe86b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xe86a));
        // F1 022A
        gbc.setState(0x84a3, 0x315a, 0x9f00, 0xc49f, 0xb271, 0x96da, 0x0, 0x0);
        gbc.writeMem(0x315a, { 0x94, 0x4f });
        gbc.writeMem(0x84a3, { 0xf1 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x315c, gbc.sp());
        EXPECT(0x84a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x84a3));
        // F1 022B
        gbc.setState(0x6105, 0x4f94, 0xabb0, 0xc4fc, 0x2a5a, 0x45ed, 0x1, 0x1);
        gbc.writeMem(0x4f94, { 0xc3, 0xf });
        gbc.writeMem(0x6105, { 0xf1 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x4f96, gbc.sp());
        EXPECT(0x6106, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 022C
        gbc.setState(0x6a11, 0xe83b, 0xa0a0, 0x7a8f, 0x587d, 0xfb1a, 0x0, 0x1);
        gbc.writeMem(0x6a11, { 0xf1 });
        gbc.writeMem(0xe83b, { 0x39, 0xf8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xe83d, gbc.sp());
        EXPECT(0x6a12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xe83b));
        EXPECT(0xf8, gbc.readMem(0xe83c));
        // F1 022D
        gbc.setState(0x9e2c, 0xd57a, 0xfbf0, 0x45c3, 0xa7d6, 0xd54c, 0x1, 0x1);
        gbc.writeMem(0x9e2c, { 0xf1 });
        gbc.writeMem(0xd57a, { 0x39, 0xa5 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xd57c, gbc.sp());
        EXPECT(0x9e2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x9e2c));
        EXPECT(0x39, gbc.readMem(0xd57a));
        EXPECT(0xa5, gbc.readMem(0xd57b));
        // F1 022E
        gbc.setState(0x1f03, 0x8e10, 0x1dd0, 0xf66, 0xf92b, 0xde23, 0x1, 0x1);
        gbc.writeMem(0x1f03, { 0xf1 });
        gbc.writeMem(0x8e10, { 0xd6, 0x53 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8e12, gbc.sp());
        EXPECT(0x1f04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x8e10));
        EXPECT(0x53, gbc.readMem(0x8e11));
        // F1 022F
        gbc.setState(0x87bf, 0xb5b5, 0xb140, 0x3de3, 0x728e, 0x78c0, 0x0, 0x1);
        gbc.writeMem(0x87bf, { 0xf1 });
        gbc.writeMem(0xb5b5, { 0x15, 0xce });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xb5b7, gbc.sp());
        EXPECT(0x87c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x87bf));
        EXPECT(0x15, gbc.readMem(0xb5b5));
        EXPECT(0xce, gbc.readMem(0xb5b6));
        // F1 0230
        gbc.setState(0xd77e, 0xb2bc, 0x6ac0, 0x6419, 0xcfcf, 0xb995, 0x1, 0x1);
        gbc.writeMem(0xb2bc, { 0x67, 0xbc });
        gbc.writeMem(0xd77e, { 0xf1 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xb2be, gbc.sp());
        EXPECT(0xd77f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0xb2bc));
        EXPECT(0xbc, gbc.readMem(0xb2bd));
        EXPECT(0xf1, gbc.readMem(0xd77e));
        // F1 0231
        gbc.setState(0x959a, 0x103b, 0xd6e0, 0xc89c, 0xd3c0, 0xe63a, 0x0, 0x1);
        gbc.writeMem(0x103b, { 0x22, 0x65 });
        gbc.writeMem(0x959a, { 0xf1 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x103d, gbc.sp());
        EXPECT(0x959b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x959a));
        // F1 0232
        gbc.setState(0x42b0, 0xad80, 0x5c10, 0xe411, 0x181c, 0x175c, 0x1, 0x1);
        gbc.writeMem(0x42b0, { 0xf1 });
        gbc.writeMem(0xad80, { 0x1a, 0x1b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xad82, gbc.sp());
        EXPECT(0x42b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xad80));
        EXPECT(0x1b, gbc.readMem(0xad81));
        // F1 0233
        gbc.setState(0x3c75, 0x6e9e, 0xde10, 0x2cbf, 0xe81a, 0xc226, 0x0, 0x1);
        gbc.writeMem(0x3c75, { 0xf1 });
        gbc.writeMem(0x6e9e, { 0xba, 0x87 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x6ea0, gbc.sp());
        EXPECT(0x3c76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 0234
        gbc.setState(0xb2c5, 0x85ea, 0x2e0, 0xca22, 0x4ef2, 0xeff5, 0x1, 0x1);
        gbc.writeMem(0x85ea, { 0xe0, 0x98 });
        gbc.writeMem(0xb2c5, { 0xf1 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x85ec, gbc.sp());
        EXPECT(0xb2c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x85ea));
        EXPECT(0x98, gbc.readMem(0x85eb));
        EXPECT(0xf1, gbc.readMem(0xb2c5));
        // F1 0235
        gbc.setState(0xdce6, 0x3010, 0x45c0, 0x90b2, 0x121d, 0x9591, 0x1, 0x0);
        gbc.writeMem(0x3010, { 0xa5, 0xf6 });
        gbc.writeMem(0xdce6, { 0xf1 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x3012, gbc.sp());
        EXPECT(0xdce7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xdce6));
        // F1 0236
        gbc.setState(0x9de1, 0x12dc, 0xacf0, 0xa0a5, 0xca38, 0xcee9, 0x0, 0x0);
        gbc.writeMem(0x12dc, { 0x1e, 0x8f });
        gbc.writeMem(0x9de1, { 0xf1 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x12de, gbc.sp());
        EXPECT(0x9de2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x9de1));
        // F1 0237
        gbc.setState(0x89f1, 0xb5ab, 0xf5e0, 0xe70c, 0xf372, 0xfd66, 0x0, 0x1);
        gbc.writeMem(0x89f1, { 0xf1 });
        gbc.writeMem(0xb5ab, { 0x90, 0x85 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xb5ad, gbc.sp());
        EXPECT(0x89f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x89f1));
        EXPECT(0x90, gbc.readMem(0xb5ab));
        EXPECT(0x85, gbc.readMem(0xb5ac));
        // F1 0238
        gbc.setState(0xe9b9, 0x3f6, 0x78f0, 0xd352, 0x944f, 0xbc79, 0x1, 0x1);
        gbc.writeMem(0x3f6, { 0xd5, 0xf2 });
        gbc.writeMem(0xe9b9, { 0xf1 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x3f8, gbc.sp());
        EXPECT(0xe9ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xe9b9));
        // F1 0239
        gbc.setState(0x94df, 0xb485, 0x4eb0, 0x9eca, 0x2a08, 0x7af8, 0x0, 0x0);
        gbc.writeMem(0x94df, { 0xf1 });
        gbc.writeMem(0xb485, { 0x99, 0x47 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xb487, gbc.sp());
        EXPECT(0x94e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x94df));
        EXPECT(0x99, gbc.readMem(0xb485));
        EXPECT(0x47, gbc.readMem(0xb486));
        // F1 023A
        gbc.setState(0x12f8, 0x39a1, 0xd140, 0xd86, 0xe72c, 0xac5b, 0x0, 0x1);
        gbc.writeMem(0x12f8, { 0xf1 });
        gbc.writeMem(0x39a1, { 0xdc, 0xc0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x39a3, gbc.sp());
        EXPECT(0x12f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 023B
        gbc.setState(0x6525, 0xa150, 0xd9d0, 0x3a8a, 0x996c, 0xb5ca, 0x0, 0x0);
        gbc.writeMem(0x6525, { 0xf1 });
        gbc.writeMem(0xa150, { 0x5d, 0xea });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xa152, gbc.sp());
        EXPECT(0x6526, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xa150));
        EXPECT(0xea, gbc.readMem(0xa151));
        // F1 023C
        gbc.setState(0x879c, 0x52, 0xb3d0, 0xe097, 0xe5e1, 0x2ea6, 0x0, 0x1);
        gbc.writeMem(0x52, { 0xd3, 0xdd });
        gbc.writeMem(0x879c, { 0xf1 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x54, gbc.sp());
        EXPECT(0x879d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x879c));
        // F1 023D
        gbc.setState(0xe8b3, 0x868f, 0xd400, 0xa47b, 0x78d0, 0x567b, 0x1, 0x1);
        gbc.writeMem(0x868f, { 0xb, 0x2b });
        gbc.writeMem(0xe8b3, { 0xf1 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x8691, gbc.sp());
        EXPECT(0xe8b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x868f));
        EXPECT(0x2b, gbc.readMem(0x8690));
        EXPECT(0xf1, gbc.readMem(0xe8b3));
        // F1 023E
        gbc.setState(0xe44a, 0xe829, 0xbc20, 0xe620, 0xb244, 0x5bce, 0x0, 0x1);
        gbc.writeMem(0xe44a, { 0xf1 });
        gbc.writeMem(0xe829, { 0xfe, 0x87 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xe82b, gbc.sp());
        EXPECT(0xe44b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xe44a));
        EXPECT(0xfe, gbc.readMem(0xe829));
        EXPECT(0x87, gbc.readMem(0xe82a));
        // F1 023F
        gbc.setState(0xaee6, 0x47ac, 0x6c30, 0x50db, 0x457d, 0x31ea, 0x0, 0x1);
        gbc.writeMem(0x47ac, { 0x77, 0xb8 });
        gbc.writeMem(0xaee6, { 0xf1 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x47ae, gbc.sp());
        EXPECT(0xaee7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xaee6));
        // F1 0240
        gbc.setState(0xa269, 0x6fa8, 0xdaf0, 0xb82b, 0xadd4, 0x8c9a, 0x1, 0x0);
        gbc.writeMem(0x6fa8, { 0x2c, 0xa0 });
        gbc.writeMem(0xa269, { 0xf1 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x6faa, gbc.sp());
        EXPECT(0xa26a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xa269));
        // F1 0241
        gbc.setState(0xc6bf, 0x9832, 0xbc90, 0x4549, 0xc69, 0xfbd2, 0x1, 0x1);
        gbc.writeMem(0x9832, { 0xb4, 0x91 });
        gbc.writeMem(0xc6bf, { 0xf1 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x9834, gbc.sp());
        EXPECT(0xc6c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0x9832));
        EXPECT(0x91, gbc.readMem(0x9833));
        EXPECT(0xf1, gbc.readMem(0xc6bf));
        // F1 0242
        gbc.setState(0xa6ce, 0x5af2, 0x8230, 0xec5a, 0x6742, 0x98ca, 0x1, 0x0);
        gbc.writeMem(0x5af2, { 0x7f, 0xc2 });
        gbc.writeMem(0xa6ce, { 0xf1 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x5af4, gbc.sp());
        EXPECT(0xa6cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xa6ce));
        // F1 0243
        gbc.setState(0xe599, 0x41cf, 0xd110, 0x13e7, 0x7a2d, 0xc7fe, 0x1, 0x0);
        gbc.writeMem(0x41cf, { 0x47, 0x17 });
        gbc.writeMem(0xe599, { 0xf1 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x41d1, gbc.sp());
        EXPECT(0xe59a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xe599));
        // F1 0244
        gbc.setState(0xd2c8, 0xec98, 0xd8b0, 0x27ab, 0x1a10, 0xd087, 0x1, 0x1);
        gbc.writeMem(0xd2c8, { 0xf1 });
        gbc.writeMem(0xec98, { 0xa8, 0xf9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xec9a, gbc.sp());
        EXPECT(0xd2c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xd2c8));
        EXPECT(0xa8, gbc.readMem(0xec98));
        EXPECT(0xf9, gbc.readMem(0xec99));
        // F1 0245
        gbc.setState(0x9a09, 0x6d15, 0xd5f0, 0x95f5, 0xf1bb, 0x3b52, 0x0, 0x1);
        gbc.writeMem(0x6d15, { 0x28, 0x9a });
        gbc.writeMem(0x9a09, { 0xf1 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x6d17, gbc.sp());
        EXPECT(0x9a0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x9a09));
        // F1 0246
        gbc.setState(0x6ac0, 0xfb5c, 0x8740, 0x76be, 0x6fa6, 0xc6e0, 0x0, 0x1);
        gbc.writeMem(0x6ac0, { 0xf1 });
        gbc.writeMem(0xfb5c, { 0x6e, 0x9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xfb5e, gbc.sp());
        EXPECT(0x6ac1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xfb5c));
        EXPECT(0x9, gbc.readMem(0xfb5d));
        // F1 0247
        gbc.setState(0x2b52, 0xfa87, 0x7460, 0x8081, 0x1ea0, 0xbf8, 0x0, 0x0);
        gbc.writeMem(0x2b52, { 0xf1 });
        gbc.writeMem(0xfa87, { 0x59, 0xf6 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xfa89, gbc.sp());
        EXPECT(0x2b53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xfa87));
        EXPECT(0xf6, gbc.readMem(0xfa88));
        // F1 0248
        gbc.setState(0x16d8, 0x4857, 0xd4a0, 0x1a27, 0x528d, 0x3f85, 0x0, 0x1);
        gbc.writeMem(0x16d8, { 0xf1 });
        gbc.writeMem(0x4857, { 0x6a, 0x34 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x4859, gbc.sp());
        EXPECT(0x16d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0249
        gbc.setState(0xb132, 0x103d, 0xf060, 0x7034, 0xbc18, 0x8025, 0x1, 0x0);
        gbc.writeMem(0x103d, { 0x8c, 0x6e });
        gbc.writeMem(0xb132, { 0xf1 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x103f, gbc.sp());
        EXPECT(0xb133, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xb132));
        // F1 024A
        gbc.setState(0x703b, 0x1fc6, 0xc000, 0xa7d3, 0xa888, 0xeb8c, 0x1, 0x0);
        gbc.writeMem(0x1fc6, { 0x10, 0x82 });
        gbc.writeMem(0x703b, { 0xf1 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x1fc8, gbc.sp());
        EXPECT(0x703c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 024B
        gbc.setState(0xdccd, 0xcce4, 0x4350, 0xc14d, 0x75ae, 0x1f3b, 0x1, 0x0);
        gbc.writeMem(0xcce4, { 0x84, 0xd });
        gbc.writeMem(0xdccd, { 0xf1 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xcce6, gbc.sp());
        EXPECT(0xdcce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xcce4));
        EXPECT(0xd, gbc.readMem(0xcce5));
        EXPECT(0xf1, gbc.readMem(0xdccd));
        // F1 024C
        gbc.setState(0xa0e2, 0x152d, 0xa10, 0x5a87, 0x7a74, 0x634c, 0x0, 0x0);
        gbc.writeMem(0x152d, { 0x38, 0xb7 });
        gbc.writeMem(0xa0e2, { 0xf1 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x152f, gbc.sp());
        EXPECT(0xa0e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xa0e2));
        // F1 024D
        gbc.setState(0x9f55, 0xfa2c, 0x3760, 0xbffb, 0x67fe, 0x4b12, 0x1, 0x1);
        gbc.writeMem(0x9f55, { 0xf1 });
        gbc.writeMem(0xfa2c, { 0x19, 0x7a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xfa2e, gbc.sp());
        EXPECT(0x9f56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x9f55));
        EXPECT(0x19, gbc.readMem(0xfa2c));
        EXPECT(0x7a, gbc.readMem(0xfa2d));
        // F1 024E
        gbc.setState(0xc511, 0x4a72, 0x6ca0, 0x8986, 0x89bd, 0x8d60, 0x1, 0x0);
        gbc.writeMem(0x4a72, { 0xee, 0x17 });
        gbc.writeMem(0xc511, { 0xf1 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x4a74, gbc.sp());
        EXPECT(0xc512, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xc511));
        // F1 0250
        gbc.setState(0xac51, 0xf2fd, 0xcaa0, 0x9387, 0xa44c, 0xb366, 0x0, 0x0);
        gbc.writeMem(0xac51, { 0xf1 });
        gbc.writeMem(0xf2fd, { 0x5f, 0x92 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf2ff, gbc.sp());
        EXPECT(0xac52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xac51));
        EXPECT(0x5f, gbc.readMem(0xf2fd));
        EXPECT(0x92, gbc.readMem(0xf2fe));
        // F1 0251
        gbc.setState(0x5916, 0xfd7b, 0xf2d0, 0x6055, 0xcca, 0x3a6b, 0x1, 0x0);
        gbc.writeMem(0x5916, { 0xf1 });
        gbc.writeMem(0xfd7b, { 0x8d, 0x90 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xfd7d, gbc.sp());
        EXPECT(0x5917, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xfd7b));
        EXPECT(0x90, gbc.readMem(0xfd7c));
        // F1 0252
        gbc.setState(0x27df, 0x23bc, 0x2840, 0xc8ce, 0x9bec, 0x60a4, 0x1, 0x1);
        gbc.writeMem(0x23bc, { 0x3e, 0xfe });
        gbc.writeMem(0x27df, { 0xf1 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x23be, gbc.sp());
        EXPECT(0x27e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 0253
        gbc.setState(0xedbd, 0xe6e3, 0xe140, 0xb91d, 0xe4d8, 0xd0b7, 0x0, 0x1);
        gbc.writeMem(0xe6e3, { 0x49, 0x15 });
        gbc.writeMem(0xedbd, { 0xf1 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xe6e5, gbc.sp());
        EXPECT(0xedbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe6e3));
        EXPECT(0x15, gbc.readMem(0xe6e4));
        EXPECT(0xf1, gbc.readMem(0xedbd));
        // F1 0254
        gbc.setState(0x8de, 0x4312, 0x2e10, 0xe098, 0x5668, 0xd14a, 0x1, 0x0);
        gbc.writeMem(0x8de, { 0xf1 });
        gbc.writeMem(0x4312, { 0xaf, 0x68 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x4314, gbc.sp());
        EXPECT(0x8df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0255
        gbc.setState(0x9033, 0x9ce2, 0xe430, 0x9ef6, 0xbd06, 0x99ba, 0x1, 0x0);
        gbc.writeMem(0x9033, { 0xf1 });
        gbc.writeMem(0x9ce2, { 0x3e, 0xe1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x9ce4, gbc.sp());
        EXPECT(0x9034, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x9033));
        EXPECT(0x3e, gbc.readMem(0x9ce2));
        EXPECT(0xe1, gbc.readMem(0x9ce3));
        // F1 0256
        gbc.setState(0xcc91, 0xffab, 0xc0c0, 0xd1b, 0xfca6, 0x9d1f, 0x0, 0x1);
        gbc.writeMem(0xcc91, { 0xf1 });
        gbc.writeMem(0xffab, { 0xe7, 0x36 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xffad, gbc.sp());
        EXPECT(0xcc92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xcc91));
        EXPECT(0xe7, gbc.readMem(0xffab));
        EXPECT(0x36, gbc.readMem(0xffac));
        // F1 0257
        gbc.setState(0x1433, 0x3231, 0x9ae0, 0xc7b, 0x8e5c, 0x3917, 0x0, 0x1);
        gbc.writeMem(0x1433, { 0xf1 });
        gbc.writeMem(0x3231, { 0x2d, 0xc6 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3233, gbc.sp());
        EXPECT(0x1434, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0259
        gbc.setState(0x72b5, 0xfa44, 0x3e0, 0x8c60, 0x33d2, 0x3d87, 0x1, 0x1);
        gbc.writeMem(0x72b5, { 0xf1 });
        gbc.writeMem(0xfa44, { 0x72, 0x1c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xfa46, gbc.sp());
        EXPECT(0x72b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xfa44));
        EXPECT(0x1c, gbc.readMem(0xfa45));
        // F1 025A
        gbc.setState(0x5abf, 0x9881, 0x37c0, 0x1e18, 0x38a1, 0xb024, 0x0, 0x0);
        gbc.writeMem(0x5abf, { 0xf1 });
        gbc.writeMem(0x9881, { 0xa8, 0xe });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9883, gbc.sp());
        EXPECT(0x5ac0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0x9881));
        EXPECT(0xe, gbc.readMem(0x9882));
        // F1 025B
        gbc.setState(0xabff, 0xd1b2, 0xb8b0, 0x56e6, 0xb822, 0x8b2c, 0x1, 0x1);
        gbc.writeMem(0xabff, { 0xf1 });
        gbc.writeMem(0xd1b2, { 0x3b, 0x3e });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd1b4, gbc.sp());
        EXPECT(0xac00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xabff));
        EXPECT(0x3b, gbc.readMem(0xd1b2));
        EXPECT(0x3e, gbc.readMem(0xd1b3));
        // F1 025C
        gbc.setState(0x7e8a, 0x2e0f, 0x1990, 0xdd1c, 0x2672, 0xde55, 0x0, 0x1);
        gbc.writeMem(0x2e0f, { 0xbd, 0xbd });
        gbc.writeMem(0x7e8a, { 0xf1 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x2e11, gbc.sp());
        EXPECT(0x7e8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 025D
        gbc.setState(0xbe8a, 0x142e, 0xcae0, 0xcd99, 0xe9de, 0x5100, 0x0, 0x0);
        gbc.writeMem(0x142e, { 0xd3, 0xcc });
        gbc.writeMem(0xbe8a, { 0xf1 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x1430, gbc.sp());
        EXPECT(0xbe8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xbe8a));
        // F1 025E
        gbc.setState(0x2c94, 0x5d3d, 0xf600, 0x7b8e, 0x6f13, 0x5c13, 0x0, 0x1);
        gbc.writeMem(0x2c94, { 0xf1 });
        gbc.writeMem(0x5d3d, { 0x87, 0x82 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x5d3f, gbc.sp());
        EXPECT(0x2c95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 025F
        gbc.setState(0x65d3, 0xcaf1, 0x8200, 0x6ec0, 0x9701, 0x687, 0x0, 0x0);
        gbc.writeMem(0x65d3, { 0xf1 });
        gbc.writeMem(0xcaf1, { 0x7d, 0x67 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xcaf3, gbc.sp());
        EXPECT(0x65d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xcaf1));
        EXPECT(0x67, gbc.readMem(0xcaf2));
        // F1 0260
        gbc.setState(0x35a7, 0xc7c1, 0x34c0, 0x204e, 0xed25, 0xcc23, 0x1, 0x0);
        gbc.writeMem(0x35a7, { 0xf1 });
        gbc.writeMem(0xc7c1, { 0xa3, 0x1f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xc7c3, gbc.sp());
        EXPECT(0x35a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc7c1));
        EXPECT(0x1f, gbc.readMem(0xc7c2));
        // F1 0261
        gbc.setState(0xd954, 0x963, 0x95f0, 0x92e0, 0x9612, 0xb847, 0x1, 0x1);
        gbc.writeMem(0x963, { 0xe5, 0x74 });
        gbc.writeMem(0xd954, { 0xf1 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x965, gbc.sp());
        EXPECT(0xd955, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xd954));
        // F1 0262
        gbc.setState(0x223b, 0x9393, 0xe020, 0x740d, 0x27b4, 0x3fb7, 0x1, 0x1);
        gbc.writeMem(0x223b, { 0xf1 });
        gbc.writeMem(0x9393, { 0xd5, 0xde });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x9395, gbc.sp());
        EXPECT(0x223c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x9393));
        EXPECT(0xde, gbc.readMem(0x9394));
        // F1 0263
        gbc.setState(0x5450, 0x8f1b, 0xb030, 0x124b, 0x125, 0x730a, 0x0, 0x1);
        gbc.writeMem(0x5450, { 0xf1 });
        gbc.writeMem(0x8f1b, { 0x82, 0xed });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x8f1d, gbc.sp());
        EXPECT(0x5451, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x8f1b));
        EXPECT(0xed, gbc.readMem(0x8f1c));
        // F1 0264
        gbc.setState(0x4e10, 0xe6dc, 0xbe40, 0x897f, 0x8dc, 0x1aeb, 0x0, 0x1);
        gbc.writeMem(0x4e10, { 0xf1 });
        gbc.writeMem(0xe6dc, { 0x27, 0x69 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xe6de, gbc.sp());
        EXPECT(0x4e11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xe6dc));
        EXPECT(0x69, gbc.readMem(0xe6dd));
        // F1 0265
        gbc.setState(0x1b6, 0xe92, 0x1f0, 0xd8af, 0x798d, 0x4774, 0x0, 0x0);
        gbc.writeMem(0x1b6, { 0xf1 });
        gbc.writeMem(0xe92, { 0xd, 0xe4 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xe94, gbc.sp());
        EXPECT(0x1b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0266
        gbc.setState(0xa6a3, 0x6890, 0xff70, 0x2c43, 0xd33, 0x4266, 0x0, 0x0);
        gbc.writeMem(0x6890, { 0x38, 0x3b });
        gbc.writeMem(0xa6a3, { 0xf1 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6892, gbc.sp());
        EXPECT(0xa6a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xa6a3));
        // F1 0267
        gbc.setState(0x2969, 0x1a8e, 0x2550, 0xc65b, 0x24a9, 0xb191, 0x1, 0x1);
        gbc.writeMem(0x1a8e, { 0xca, 0x69 });
        gbc.writeMem(0x2969, { 0xf1 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x1a90, gbc.sp());
        EXPECT(0x296a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0268
        gbc.setState(0x9b96, 0x7aa3, 0xf030, 0x7f8c, 0x78c4, 0xba3a, 0x1, 0x0);
        gbc.writeMem(0x7aa3, { 0xf, 0x3d });
        gbc.writeMem(0x9b96, { 0xf1 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x7aa5, gbc.sp());
        EXPECT(0x9b97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x9b96));
        // F1 0269
        gbc.setState(0xdeef, 0x8ac9, 0x1f90, 0x4a51, 0xe929, 0x46ef, 0x1, 0x0);
        gbc.writeMem(0x8ac9, { 0x8, 0x82 });
        gbc.writeMem(0xdeef, { 0xf1 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x8acb, gbc.sp());
        EXPECT(0xdef0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0x8ac9));
        EXPECT(0x82, gbc.readMem(0x8aca));
        EXPECT(0xf1, gbc.readMem(0xdeef));
        // F1 026A
        gbc.setState(0x4ac5, 0x1c5a, 0xe30, 0x2ffa, 0x3e64, 0x3e25, 0x1, 0x1);
        gbc.writeMem(0x1c5a, { 0x9e, 0xa });
        gbc.writeMem(0x4ac5, { 0xf1 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x1c5c, gbc.sp());
        EXPECT(0x4ac6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 026B
        gbc.setState(0x159, 0x46a0, 0xd000, 0x5cfa, 0xe696, 0xb639, 0x1, 0x0);
        gbc.writeMem(0x159, { 0xf1 });
        gbc.writeMem(0x46a0, { 0x4e, 0x18 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x46a2, gbc.sp());
        EXPECT(0x15a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 026D
        gbc.setState(0x3fea, 0x234f, 0xe680, 0x1b14, 0xa03a, 0x6f85, 0x0, 0x1);
        gbc.writeMem(0x234f, { 0x3a, 0xd4 });
        gbc.writeMem(0x3fea, { 0xf1 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x2351, gbc.sp());
        EXPECT(0x3feb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 026F
        gbc.setState(0x169f, 0xbdff, 0xfa50, 0xfa3a, 0xced8, 0x9724, 0x1, 0x0);
        gbc.writeMem(0x169f, { 0xf1 });
        gbc.writeMem(0xbdff, { 0xa7, 0xb5 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xbe01, gbc.sp());
        EXPECT(0x16a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xbdff));
        EXPECT(0xb5, gbc.readMem(0xbe00));
        // F1 0270
        gbc.setState(0x921d, 0xeb6b, 0x9510, 0xb809, 0xe22a, 0xba3a, 0x1, 0x1);
        gbc.writeMem(0x921d, { 0xf1 });
        gbc.writeMem(0xeb6b, { 0x6a, 0xa6 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xeb6d, gbc.sp());
        EXPECT(0x921e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x921d));
        EXPECT(0x6a, gbc.readMem(0xeb6b));
        EXPECT(0xa6, gbc.readMem(0xeb6c));
        // F1 0271
        gbc.setState(0x12af, 0x8f21, 0x12f0, 0x3c5, 0xb7ba, 0xa6cd, 0x0, 0x1);
        gbc.writeMem(0x12af, { 0xf1 });
        gbc.writeMem(0x8f21, { 0x6e, 0x94 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x8f23, gbc.sp());
        EXPECT(0x12b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x8f21));
        EXPECT(0x94, gbc.readMem(0x8f22));
        // F1 0272
        gbc.setState(0xad0d, 0xfabd, 0x7730, 0x6217, 0xda1a, 0x27c0, 0x0, 0x1);
        gbc.writeMem(0xad0d, { 0xf1 });
        gbc.writeMem(0xfabd, { 0xf0, 0x8d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xfabf, gbc.sp());
        EXPECT(0xad0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xad0d));
        EXPECT(0xf0, gbc.readMem(0xfabd));
        EXPECT(0x8d, gbc.readMem(0xfabe));
        // F1 0274
        gbc.setState(0x184d, 0xf4d9, 0x53c0, 0xafba, 0x5e04, 0x4bf2, 0x0, 0x0);
        gbc.writeMem(0x184d, { 0xf1 });
        gbc.writeMem(0xf4d9, { 0x77, 0xcf });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xf4db, gbc.sp());
        EXPECT(0x184e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xf4d9));
        EXPECT(0xcf, gbc.readMem(0xf4da));
        // F1 0275
        gbc.setState(0x6985, 0x769d, 0x6010, 0xc703, 0xa181, 0xda6f, 0x1, 0x1);
        gbc.writeMem(0x6985, { 0xf1 });
        gbc.writeMem(0x769d, { 0xa7, 0x33 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x769f, gbc.sp());
        EXPECT(0x6986, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0276
        gbc.setState(0x1a1, 0x599d, 0xe6a0, 0x824c, 0xfe42, 0xea47, 0x1, 0x1);
        gbc.writeMem(0x1a1, { 0xf1 });
        gbc.writeMem(0x599d, { 0x24, 0xc0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x599f, gbc.sp());
        EXPECT(0x1a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0277
        gbc.setState(0xa398, 0xff96, 0x7f40, 0x59c9, 0x1fd8, 0x357c, 0x0, 0x1);
        gbc.writeMem(0xa398, { 0xf1 });
        gbc.writeMem(0xff96, { 0x72, 0xfa });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xff98, gbc.sp());
        EXPECT(0xa399, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xa398));
        EXPECT(0x72, gbc.readMem(0xff96));
        EXPECT(0xfa, gbc.readMem(0xff97));
        // F1 0278
        gbc.setState(0x91bf, 0x1d4c, 0xc650, 0x5b34, 0x9a3c, 0x32b5, 0x0, 0x1);
        gbc.writeMem(0x1d4c, { 0x18, 0xb8 });
        gbc.writeMem(0x91bf, { 0xf1 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x1d4e, gbc.sp());
        EXPECT(0x91c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x91bf));
        // F1 0279
        gbc.setState(0x5652, 0xaa4d, 0x1bf0, 0x884e, 0xb521, 0xf5ce, 0x0, 0x0);
        gbc.writeMem(0x5652, { 0xf1 });
        gbc.writeMem(0xaa4d, { 0x89, 0xca });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xaa4f, gbc.sp());
        EXPECT(0x5653, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xaa4d));
        EXPECT(0xca, gbc.readMem(0xaa4e));
        // F1 027A
        gbc.setState(0x52bb, 0xcc93, 0x5a30, 0x39d1, 0x125b, 0x19ba, 0x0, 0x1);
        gbc.writeMem(0x52bb, { 0xf1 });
        gbc.writeMem(0xcc93, { 0xe2, 0x92 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xcc95, gbc.sp());
        EXPECT(0x52bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xcc93));
        EXPECT(0x92, gbc.readMem(0xcc94));
        // F1 027B
        gbc.setState(0x78ce, 0x7bd0, 0x8450, 0x8163, 0x1b59, 0x893f, 0x1, 0x0);
        gbc.writeMem(0x78ce, { 0xf1 });
        gbc.writeMem(0x7bd0, { 0xa7, 0xa0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x7bd2, gbc.sp());
        EXPECT(0x78cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 027C
        gbc.setState(0xc842, 0xad94, 0x1ba0, 0xd0df, 0xaa7e, 0x8548, 0x1, 0x0);
        gbc.writeMem(0xad94, { 0xa0, 0x87 });
        gbc.writeMem(0xc842, { 0xf1 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xad96, gbc.sp());
        EXPECT(0xc843, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xad94));
        EXPECT(0x87, gbc.readMem(0xad95));
        EXPECT(0xf1, gbc.readMem(0xc842));
        // F1 027D
        gbc.setState(0x29d7, 0x147d, 0xf3e0, 0x3ba6, 0x7803, 0x2704, 0x1, 0x1);
        gbc.writeMem(0x147d, { 0x5e, 0x43 });
        gbc.writeMem(0x29d7, { 0xf1 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x147f, gbc.sp());
        EXPECT(0x29d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 027E
        gbc.setState(0x14d, 0xf9fd, 0x52b0, 0x85df, 0x7b87, 0x6ac4, 0x0, 0x0);
        gbc.writeMem(0x14d, { 0xf1 });
        gbc.writeMem(0xf9fd, { 0x7e, 0xcd });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf9ff, gbc.sp());
        EXPECT(0x14e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xf9fd));
        EXPECT(0xcd, gbc.readMem(0xf9fe));
        // F1 027F
        gbc.setState(0xc440, 0x69ec, 0xbcd0, 0x374, 0xd048, 0xf436, 0x0, 0x1);
        gbc.writeMem(0x69ec, { 0xd1, 0x6b });
        gbc.writeMem(0xc440, { 0xf1 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x69ee, gbc.sp());
        EXPECT(0xc441, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xc440));
        // F1 0280
        gbc.setState(0xd6fa, 0x2589, 0xc10, 0x333f, 0x706, 0x9cdb, 0x0, 0x1);
        gbc.writeMem(0x2589, { 0x2a, 0xa6 });
        gbc.writeMem(0xd6fa, { 0xf1 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x258b, gbc.sp());
        EXPECT(0xd6fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xd6fa));
        // F1 0281
        gbc.setState(0x148e, 0x795b, 0x5620, 0x28bc, 0x822, 0xdf9d, 0x1, 0x0);
        gbc.writeMem(0x148e, { 0xf1 });
        gbc.writeMem(0x795b, { 0x6b, 0x7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x795d, gbc.sp());
        EXPECT(0x148f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0284
        gbc.setState(0xbb58, 0x5e6b, 0x430, 0x6dca, 0x21b4, 0x6d8b, 0x0, 0x1);
        gbc.writeMem(0x5e6b, { 0xdd, 0xb5 });
        gbc.writeMem(0xbb58, { 0xf1 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5e6d, gbc.sp());
        EXPECT(0xbb59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xbb58));
        // F1 0285
        gbc.setState(0x7239, 0x6759, 0x2970, 0x2bda, 0x715c, 0xb3ca, 0x0, 0x0);
        gbc.writeMem(0x6759, { 0x7f, 0x54 });
        gbc.writeMem(0x7239, { 0xf1 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x675b, gbc.sp());
        EXPECT(0x723a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 0286
        gbc.setState(0x2bac, 0xb315, 0x2410, 0x9ed9, 0xd0e1, 0x6736, 0x0, 0x1);
        gbc.writeMem(0x2bac, { 0xf1 });
        gbc.writeMem(0xb315, { 0x85, 0xd9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xb317, gbc.sp());
        EXPECT(0x2bad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xb315));
        EXPECT(0xd9, gbc.readMem(0xb316));
        // F1 0287
        gbc.setState(0xc033, 0xd399, 0xfc50, 0x17c7, 0xea20, 0xf677, 0x1, 0x1);
        gbc.writeMem(0xc033, { 0xf1 });
        gbc.writeMem(0xd399, { 0xa3, 0xa7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd39b, gbc.sp());
        EXPECT(0xc034, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xc033));
        EXPECT(0xa3, gbc.readMem(0xd399));
        EXPECT(0xa7, gbc.readMem(0xd39a));
        // F1 0288
        gbc.setState(0xd9c5, 0xd4b7, 0x3d00, 0xe421, 0xf716, 0x29c5, 0x1, 0x1);
        gbc.writeMem(0xd4b7, { 0x5e, 0x24 });
        gbc.writeMem(0xd9c5, { 0xf1 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xd4b9, gbc.sp());
        EXPECT(0xd9c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xd4b7));
        EXPECT(0x24, gbc.readMem(0xd4b8));
        EXPECT(0xf1, gbc.readMem(0xd9c5));
        // F1 0289
        gbc.setState(0x961a, 0xb65a, 0xe490, 0x6c98, 0x4f08, 0xdec4, 0x1, 0x1);
        gbc.writeMem(0x961a, { 0xf1 });
        gbc.writeMem(0xb65a, { 0x6e, 0xe4 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xb65c, gbc.sp());
        EXPECT(0x961b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x961a));
        EXPECT(0x6e, gbc.readMem(0xb65a));
        EXPECT(0xe4, gbc.readMem(0xb65b));
        // F1 028A
        gbc.setState(0x4f1f, 0xa677, 0x1370, 0x2f1, 0x28f5, 0xaf7f, 0x1, 0x1);
        gbc.writeMem(0x4f1f, { 0xf1 });
        gbc.writeMem(0xa677, { 0x85, 0xe6 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xa679, gbc.sp());
        EXPECT(0x4f20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xa677));
        EXPECT(0xe6, gbc.readMem(0xa678));
        // F1 028B
        gbc.setState(0x51bb, 0x3a49, 0x5ed0, 0x4fbb, 0x48e3, 0xe060, 0x0, 0x1);
        gbc.writeMem(0x3a49, { 0x83, 0xed });
        gbc.writeMem(0x51bb, { 0xf1 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x3a4b, gbc.sp());
        EXPECT(0x51bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 028D
        gbc.setState(0xacc6, 0x634, 0x33b0, 0x3e2d, 0xb7c8, 0xbd4d, 0x0, 0x1);
        gbc.writeMem(0x634, { 0xa2, 0xc5 });
        gbc.writeMem(0xacc6, { 0xf1 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x636, gbc.sp());
        EXPECT(0xacc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xacc6));
        // F1 028E
        gbc.setState(0x744e, 0xeec, 0xfd70, 0xb210, 0x60f9, 0x5a9e, 0x0, 0x0);
        gbc.writeMem(0xeec, { 0x94, 0x0 });
        gbc.writeMem(0x744e, { 0xf1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xeee, gbc.sp());
        EXPECT(0x744f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 028F
        gbc.setState(0xa450, 0x5665, 0xafb0, 0x4d58, 0x7769, 0xf728, 0x1, 0x1);
        gbc.writeMem(0x5665, { 0x63, 0x8a });
        gbc.writeMem(0xa450, { 0xf1 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x5667, gbc.sp());
        EXPECT(0xa451, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xa450));
        // F1 0290
        gbc.setState(0x57db, 0x15f1, 0x15b0, 0x9cd, 0x56f4, 0x50e7, 0x0, 0x0);
        gbc.writeMem(0x15f1, { 0x94, 0x41 });
        gbc.writeMem(0x57db, { 0xf1 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x15f3, gbc.sp());
        EXPECT(0x57dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 0291
        gbc.setState(0x6f2d, 0xde23, 0x89f0, 0x3b29, 0x3a0f, 0x5f23, 0x0, 0x1);
        gbc.writeMem(0x6f2d, { 0xf1 });
        gbc.writeMem(0xde23, { 0x94, 0x96 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xde25, gbc.sp());
        EXPECT(0x6f2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xde23));
        EXPECT(0x96, gbc.readMem(0xde24));
        // F1 0292
        gbc.setState(0x7e7e, 0x544, 0x1d80, 0xa871, 0x4212, 0xb33a, 0x1, 0x0);
        gbc.writeMem(0x544, { 0x1c, 0xef });
        gbc.writeMem(0x7e7e, { 0xf1 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x546, gbc.sp());
        EXPECT(0x7e7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 0293
        gbc.setState(0x7996, 0x4271, 0x4c40, 0xa7f7, 0xf900, 0x84de, 0x1, 0x0);
        gbc.writeMem(0x4271, { 0x68, 0x12 });
        gbc.writeMem(0x7996, { 0xf1 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x4273, gbc.sp());
        EXPECT(0x7997, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0294
        gbc.setState(0x7849, 0xc313, 0xc670, 0xace6, 0x5411, 0x2a28, 0x1, 0x0);
        gbc.writeMem(0x7849, { 0xf1 });
        gbc.writeMem(0xc313, { 0xea, 0x4e });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc315, gbc.sp());
        EXPECT(0x784a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xc313));
        EXPECT(0x4e, gbc.readMem(0xc314));
        // F1 0295
        gbc.setState(0x1e6, 0x671, 0xcbb0, 0x6423, 0x916c, 0x7390, 0x0, 0x1);
        gbc.writeMem(0x1e6, { 0xf1 });
        gbc.writeMem(0x671, { 0xde, 0x8b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x673, gbc.sp());
        EXPECT(0x1e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 0296
        gbc.setState(0x9be5, 0x6ffb, 0xc50, 0xb2e8, 0x2823, 0xaf5c, 0x1, 0x0);
        gbc.writeMem(0x6ffb, { 0xe8, 0x9c });
        gbc.writeMem(0x9be5, { 0xf1 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x6ffd, gbc.sp());
        EXPECT(0x9be6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x9be5));
        // F1 0297
        gbc.setState(0xc013, 0xbe65, 0x5300, 0xe29, 0x5530, 0x5f80, 0x0, 0x1);
        gbc.writeMem(0xbe65, { 0x6, 0x7a });
        gbc.writeMem(0xc013, { 0xf1 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xbe67, gbc.sp());
        EXPECT(0xc014, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xbe65));
        EXPECT(0x7a, gbc.readMem(0xbe66));
        EXPECT(0xf1, gbc.readMem(0xc013));
        // F1 0298
        gbc.setState(0x5f47, 0xec57, 0x1980, 0x5e08, 0xcab, 0x5473, 0x1, 0x1);
        gbc.writeMem(0x5f47, { 0xf1 });
        gbc.writeMem(0xec57, { 0xa8, 0x2a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xec59, gbc.sp());
        EXPECT(0x5f48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0xec57));
        EXPECT(0x2a, gbc.readMem(0xec58));
        // F1 0299
        gbc.setState(0xd657, 0x8eb1, 0x1fc0, 0xa2d0, 0x4ba5, 0xcf0f, 0x1, 0x1);
        gbc.writeMem(0x8eb1, { 0x4e, 0x54 });
        gbc.writeMem(0xd657, { 0xf1 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8eb3, gbc.sp());
        EXPECT(0xd658, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x8eb1));
        EXPECT(0x54, gbc.readMem(0x8eb2));
        EXPECT(0xf1, gbc.readMem(0xd657));
        // F1 029A
        gbc.setState(0x980, 0xb13e, 0xbd90, 0xdae8, 0x66af, 0xfa7e, 0x0, 0x0);
        gbc.writeMem(0x980, { 0xf1 });
        gbc.writeMem(0xb13e, { 0x47, 0x91 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xb140, gbc.sp());
        EXPECT(0x981, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb13e));
        EXPECT(0x91, gbc.readMem(0xb13f));
        // F1 029B
        gbc.setState(0xbb94, 0xec0c, 0x9e0, 0x713d, 0x4c5f, 0xc181, 0x0, 0x0);
        gbc.writeMem(0xbb94, { 0xf1 });
        gbc.writeMem(0xec0c, { 0x29, 0xa4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xec0e, gbc.sp());
        EXPECT(0xbb95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xbb94));
        EXPECT(0x29, gbc.readMem(0xec0c));
        EXPECT(0xa4, gbc.readMem(0xec0d));
        // F1 029C
        gbc.setState(0xa316, 0x23d6, 0xa470, 0xd2cf, 0x9d07, 0xbcf4, 0x0, 0x0);
        gbc.writeMem(0x23d6, { 0xd7, 0x69 });
        gbc.writeMem(0xa316, { 0xf1 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x23d8, gbc.sp());
        EXPECT(0xa317, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xa316));
        // F1 029D
        gbc.setState(0x941e, 0x3851, 0x4d80, 0x433, 0x50b7, 0x7295, 0x0, 0x1);
        gbc.writeMem(0x3851, { 0xef, 0xfb });
        gbc.writeMem(0x941e, { 0xf1 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x3853, gbc.sp());
        EXPECT(0x941f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x941e));
        // F1 029E
        gbc.setState(0x3a99, 0x6253, 0x5fc0, 0xbb85, 0x31d2, 0x142c, 0x1, 0x1);
        gbc.writeMem(0x3a99, { 0xf1 });
        gbc.writeMem(0x6253, { 0xf4, 0xca });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x6255, gbc.sp());
        EXPECT(0x3a9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 029F
        gbc.setState(0xa1e5, 0x326e, 0x9640, 0xdbb2, 0x7f56, 0xc492, 0x1, 0x0);
        gbc.writeMem(0x326e, { 0xc7, 0x7a });
        gbc.writeMem(0xa1e5, { 0xf1 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x3270, gbc.sp());
        EXPECT(0xa1e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xa1e5));
        // F1 02A0
        gbc.setState(0x98ab, 0xebe0, 0x3640, 0x9837, 0x2b7a, 0xbb47, 0x0, 0x1);
        gbc.writeMem(0x98ab, { 0xf1 });
        gbc.writeMem(0xebe0, { 0x1d, 0x76 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xebe2, gbc.sp());
        EXPECT(0x98ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x98ab));
        EXPECT(0x1d, gbc.readMem(0xebe0));
        EXPECT(0x76, gbc.readMem(0xebe1));
        // F1 02A1
        gbc.setState(0x6e83, 0x3f39, 0xab70, 0x4d8a, 0xfbfa, 0x8e26, 0x1, 0x0);
        gbc.writeMem(0x3f39, { 0x8, 0xdf });
        gbc.writeMem(0x6e83, { 0xf1 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x3f3b, gbc.sp());
        EXPECT(0x6e84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 02A2
        gbc.setState(0xa584, 0xc43d, 0x1410, 0x7b48, 0x819f, 0x4c67, 0x0, 0x1);
        gbc.writeMem(0xa584, { 0xf1 });
        gbc.writeMem(0xc43d, { 0x7, 0xcf });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xc43f, gbc.sp());
        EXPECT(0xa585, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xa584));
        EXPECT(0x7, gbc.readMem(0xc43d));
        EXPECT(0xcf, gbc.readMem(0xc43e));
        // F1 02A3
        gbc.setState(0xacfa, 0xc565, 0xf4f0, 0xbcdd, 0xbf6f, 0x3bcc, 0x1, 0x0);
        gbc.writeMem(0xacfa, { 0xf1 });
        gbc.writeMem(0xc565, { 0x29, 0x11 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc567, gbc.sp());
        EXPECT(0xacfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xacfa));
        EXPECT(0x29, gbc.readMem(0xc565));
        EXPECT(0x11, gbc.readMem(0xc566));
        // F1 02A4
        gbc.setState(0x6165, 0xa7df, 0xd820, 0x7d76, 0x7fd1, 0xc2dc, 0x1, 0x1);
        gbc.writeMem(0x6165, { 0xf1 });
        gbc.writeMem(0xa7df, { 0xe5, 0xce });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xa7e1, gbc.sp());
        EXPECT(0x6166, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xa7df));
        EXPECT(0xce, gbc.readMem(0xa7e0));
        // F1 02A5
        gbc.setState(0x8c16, 0x9abb, 0x400, 0x6b0, 0xed5c, 0x8b50, 0x1, 0x1);
        gbc.writeMem(0x8c16, { 0xf1 });
        gbc.writeMem(0x9abb, { 0x9a, 0xcb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x9abd, gbc.sp());
        EXPECT(0x8c17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8c16));
        EXPECT(0x9a, gbc.readMem(0x9abb));
        EXPECT(0xcb, gbc.readMem(0x9abc));
        // F1 02A6
        gbc.setState(0xd2ab, 0xe127, 0x4600, 0xc542, 0x4162, 0x10ac, 0x1, 0x0);
        gbc.writeMem(0xd2ab, { 0xf1 });
        gbc.writeMem(0xe127, { 0x48, 0x4d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xe129, gbc.sp());
        EXPECT(0xd2ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xd2ab));
        EXPECT(0x48, gbc.readMem(0xe127));
        EXPECT(0x4d, gbc.readMem(0xe128));
        // F1 02A7
        gbc.setState(0x6c76, 0xc900, 0xb770, 0xe18b, 0xc4e9, 0xd4de, 0x1, 0x1);
        gbc.writeMem(0x6c76, { 0xf1 });
        gbc.writeMem(0xc900, { 0x95, 0x2f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc902, gbc.sp());
        EXPECT(0x6c77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc900));
        EXPECT(0x2f, gbc.readMem(0xc901));
        // F1 02A8
        gbc.setState(0xec07, 0x4854, 0x380, 0x1963, 0x4145, 0x9a48, 0x1, 0x0);
        gbc.writeMem(0x4854, { 0x2d, 0x5f });
        gbc.writeMem(0xec07, { 0xf1 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x4856, gbc.sp());
        EXPECT(0xec08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xec07));
        // F1 02A9
        gbc.setState(0x51ac, 0x753f, 0xe2b0, 0x6a9, 0xe5a4, 0x346a, 0x1, 0x1);
        gbc.writeMem(0x51ac, { 0xf1 });
        gbc.writeMem(0x753f, { 0xe7, 0xd9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x7541, gbc.sp());
        EXPECT(0x51ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 02AA
        gbc.setState(0xbce8, 0x5357, 0xb540, 0xe4, 0x99a7, 0x77ab, 0x1, 0x0);
        gbc.writeMem(0x5357, { 0x66, 0xff });
        gbc.writeMem(0xbce8, { 0xf1 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x5359, gbc.sp());
        EXPECT(0xbce9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xbce8));
        // F1 02AB
        gbc.setState(0xe476, 0x7e51, 0xbe90, 0x9867, 0x929, 0x9be0, 0x1, 0x1);
        gbc.writeMem(0x7e51, { 0x40, 0xf9 });
        gbc.writeMem(0xe476, { 0xf1 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x7e53, gbc.sp());
        EXPECT(0xe477, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xe476));
        // F1 02AC
        gbc.setState(0x8132, 0xfe68, 0xc5d0, 0xa5cd, 0x9177, 0xddba, 0x1, 0x0);
        gbc.writeMem(0x8132, { 0xf1 });
        gbc.writeMem(0xfe68, { 0xc, 0xcb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xfe6a, gbc.sp());
        EXPECT(0x8133, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8132));
        EXPECT(0xc, gbc.readMem(0xfe68));
        EXPECT(0xcb, gbc.readMem(0xfe69));
        // F1 02AD
        gbc.setState(0xd27, 0x5429, 0x5630, 0xab23, 0x385f, 0xabd, 0x0, 0x0);
        gbc.writeMem(0xd27, { 0xf1 });
        gbc.writeMem(0x5429, { 0xe2, 0xd });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x542b, gbc.sp());
        EXPECT(0xd28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 02AE
        gbc.setState(0x4aed, 0x90aa, 0x43d0, 0xf455, 0x8593, 0x423a, 0x0, 0x1);
        gbc.writeMem(0x4aed, { 0xf1 });
        gbc.writeMem(0x90aa, { 0x6e, 0x59 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x90ac, gbc.sp());
        EXPECT(0x4aee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x90aa));
        EXPECT(0x59, gbc.readMem(0x90ab));
        // F1 02AF
        gbc.setState(0xd9a6, 0x55fe, 0xf1f0, 0x9049, 0xefff, 0xc41e, 0x0, 0x0);
        gbc.writeMem(0x55fe, { 0x66, 0xad });
        gbc.writeMem(0xd9a6, { 0xf1 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x5600, gbc.sp());
        EXPECT(0xd9a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xd9a6));
        // F1 02B0
        gbc.setState(0x8f74, 0x33d4, 0x1260, 0xcb3c, 0x8fda, 0xfd52, 0x1, 0x0);
        gbc.writeMem(0x33d4, { 0xf9, 0x45 });
        gbc.writeMem(0x8f74, { 0xf1 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x33d6, gbc.sp());
        EXPECT(0x8f75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8f74));
        // F1 02B1
        gbc.setState(0x3f6c, 0x1d8c, 0x1010, 0xd5e8, 0xccb1, 0xb4e7, 0x0, 0x0);
        gbc.writeMem(0x1d8c, { 0x1f, 0xaf });
        gbc.writeMem(0x3f6c, { 0xf1 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1d8e, gbc.sp());
        EXPECT(0x3f6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 02B2
        gbc.setState(0x787c, 0xb61b, 0xbb20, 0x2096, 0x927, 0xfb40, 0x0, 0x1);
        gbc.writeMem(0x787c, { 0xf1 });
        gbc.writeMem(0xb61b, { 0xa5, 0xe1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xb61d, gbc.sp());
        EXPECT(0x787d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xb61b));
        EXPECT(0xe1, gbc.readMem(0xb61c));
        // F1 02B3
        gbc.setState(0x7a87, 0xb16f, 0x2af0, 0xd918, 0x8544, 0xa2e, 0x1, 0x0);
        gbc.writeMem(0x7a87, { 0xf1 });
        gbc.writeMem(0xb16f, { 0x4d, 0xc7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xb171, gbc.sp());
        EXPECT(0x7a88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xb16f));
        EXPECT(0xc7, gbc.readMem(0xb170));
        // F1 02B4
        gbc.setState(0x4a37, 0xeb6d, 0x8d40, 0x6bc3, 0x2fd1, 0xbbcc, 0x0, 0x1);
        gbc.writeMem(0x4a37, { 0xf1 });
        gbc.writeMem(0xeb6d, { 0xdf, 0xa7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xeb6f, gbc.sp());
        EXPECT(0x4a38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xeb6d));
        EXPECT(0xa7, gbc.readMem(0xeb6e));
        // F1 02B5
        gbc.setState(0x1041, 0xe801, 0xd4c0, 0x6ad8, 0xd26b, 0xa28d, 0x1, 0x1);
        gbc.writeMem(0x1041, { 0xf1 });
        gbc.writeMem(0xe801, { 0xca, 0xc8 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe803, gbc.sp());
        EXPECT(0x1042, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xe801));
        EXPECT(0xc8, gbc.readMem(0xe802));
        // F1 02B6
        gbc.setState(0x8f21, 0x66b7, 0x2800, 0x34d6, 0x3fe7, 0x319a, 0x0, 0x1);
        gbc.writeMem(0x66b7, { 0x27, 0xa0 });
        gbc.writeMem(0x8f21, { 0xf1 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x66b9, gbc.sp());
        EXPECT(0x8f22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8f21));
        // F1 02B7
        gbc.setState(0x53a7, 0xf49e, 0x29e0, 0xd596, 0x6c81, 0xf433, 0x0, 0x1);
        gbc.writeMem(0x53a7, { 0xf1 });
        gbc.writeMem(0xf49e, { 0x2f, 0x60 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xf4a0, gbc.sp());
        EXPECT(0x53a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xf49e));
        EXPECT(0x60, gbc.readMem(0xf49f));
        // F1 02B8
        gbc.setState(0x8991, 0xebf8, 0x2110, 0xa53, 0xe31f, 0xfbc, 0x0, 0x0);
        gbc.writeMem(0x8991, { 0xf1 });
        gbc.writeMem(0xebf8, { 0x5d, 0xfc });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xebfa, gbc.sp());
        EXPECT(0x8992, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8991));
        EXPECT(0x5d, gbc.readMem(0xebf8));
        EXPECT(0xfc, gbc.readMem(0xebf9));
        // F1 02B9
        gbc.setState(0xab, 0x9dbd, 0xc900, 0x2665, 0xf4db, 0x377b, 0x0, 0x1);
        gbc.writeMem(0xab, { 0xf1 });
        gbc.writeMem(0x9dbd, { 0x24, 0xe8 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x9dbf, gbc.sp());
        EXPECT(0xac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0x9dbd));
        EXPECT(0xe8, gbc.readMem(0x9dbe));
        // F1 02BA
        gbc.setState(0x8a3a, 0x5e2, 0xd0, 0xa57d, 0xf5e1, 0x3a06, 0x0, 0x0);
        gbc.writeMem(0x5e2, { 0xe1, 0xb6 });
        gbc.writeMem(0x8a3a, { 0xf1 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x5e4, gbc.sp());
        EXPECT(0x8a3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8a3a));
        // F1 02BB
        gbc.setState(0xa5b, 0x4dec, 0x1e0, 0xc1b8, 0x1fd3, 0xe91e, 0x1, 0x0);
        gbc.writeMem(0xa5b, { 0xf1 });
        gbc.writeMem(0x4dec, { 0x71, 0x6a });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x4dee, gbc.sp());
        EXPECT(0xa5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 02BC
        gbc.setState(0x45d1, 0x3119, 0x6000, 0xd09f, 0xcd95, 0x5de1, 0x0, 0x0);
        gbc.writeMem(0x3119, { 0x21, 0x57 });
        gbc.writeMem(0x45d1, { 0xf1 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x311b, gbc.sp());
        EXPECT(0x45d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 02BD
        gbc.setState(0xbcbc, 0xfab0, 0xb5a0, 0x4a45, 0x4c80, 0xb218, 0x1, 0x1);
        gbc.writeMem(0xbcbc, { 0xf1 });
        gbc.writeMem(0xfab0, { 0xab, 0xc5 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xfab2, gbc.sp());
        EXPECT(0xbcbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xbcbc));
        EXPECT(0xab, gbc.readMem(0xfab0));
        EXPECT(0xc5, gbc.readMem(0xfab1));
        // F1 02BE
        gbc.setState(0xa10e, 0xffcb, 0x8940, 0x46, 0xa95f, 0x550b, 0x0, 0x1);
        gbc.writeMem(0xa10e, { 0xf1 });
        gbc.writeMem(0xffcb, { 0x64, 0x8d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xffcd, gbc.sp());
        EXPECT(0xa10f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xa10e));
        EXPECT(0x64, gbc.readMem(0xffcb));
        EXPECT(0x8d, gbc.readMem(0xffcc));
        // F1 02BF
        gbc.setState(0x6c37, 0x63d9, 0x6ac0, 0x221c, 0x869, 0xe1a1, 0x0, 0x0);
        gbc.writeMem(0x63d9, { 0x80, 0x25 });
        gbc.writeMem(0x6c37, { 0xf1 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x63db, gbc.sp());
        EXPECT(0x6c38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 02C0
        gbc.setState(0x125b, 0x3c1, 0x4bc0, 0x2c98, 0x6278, 0x5a79, 0x1, 0x0);
        gbc.writeMem(0x3c1, { 0xf5, 0x85 });
        gbc.writeMem(0x125b, { 0xf1 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x3c3, gbc.sp());
        EXPECT(0x125c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 02C1
        gbc.setState(0x1b97, 0x1d4d, 0x4190, 0x1542, 0x70ff, 0x588f, 0x0, 0x0);
        gbc.writeMem(0x1b97, { 0xf1 });
        gbc.writeMem(0x1d4d, { 0xb8, 0xa9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x1d4f, gbc.sp());
        EXPECT(0x1b98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 02C2
        gbc.setState(0x5e59, 0x3d08, 0xc780, 0x9154, 0x4793, 0x7d07, 0x0, 0x1);
        gbc.writeMem(0x3d08, { 0xfa, 0xfa });
        gbc.writeMem(0x5e59, { 0xf1 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x3d0a, gbc.sp());
        EXPECT(0x5e5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 02C3
        gbc.setState(0x98ec, 0xcd0c, 0x7af0, 0x84c4, 0xa890, 0x78a6, 0x0, 0x1);
        gbc.writeMem(0x98ec, { 0xf1 });
        gbc.writeMem(0xcd0c, { 0xed, 0xc4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xcd0e, gbc.sp());
        EXPECT(0x98ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x98ec));
        EXPECT(0xed, gbc.readMem(0xcd0c));
        EXPECT(0xc4, gbc.readMem(0xcd0d));
        // F1 02C4
        gbc.setState(0x168f, 0x497b, 0x4010, 0x7181, 0xe47b, 0x532e, 0x1, 0x1);
        gbc.writeMem(0x168f, { 0xf1 });
        gbc.writeMem(0x497b, { 0x3c, 0xa6 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x497d, gbc.sp());
        EXPECT(0x1690, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 02C5
        gbc.setState(0x9722, 0x7bcc, 0xe9c0, 0xbb19, 0xf8bb, 0x2be1, 0x1, 0x1);
        gbc.writeMem(0x7bcc, { 0x18, 0x5b });
        gbc.writeMem(0x9722, { 0xf1 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x7bce, gbc.sp());
        EXPECT(0x9723, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x9722));
        // F1 02C6
        gbc.setState(0xd927, 0x57f4, 0x6e20, 0x6faa, 0x75fd, 0x19e0, 0x0, 0x1);
        gbc.writeMem(0x57f4, { 0x86, 0x7 });
        gbc.writeMem(0xd927, { 0xf1 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x57f6, gbc.sp());
        EXPECT(0xd928, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xd927));
        // F1 02C7
        gbc.setState(0x998e, 0x4b2f, 0x78e0, 0x5e51, 0xf6a3, 0x31c1, 0x1, 0x1);
        gbc.writeMem(0x4b2f, { 0xd6, 0xd5 });
        gbc.writeMem(0x998e, { 0xf1 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4b31, gbc.sp());
        EXPECT(0x998f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x998e));
        // F1 02C8
        gbc.setState(0x85e7, 0xa018, 0x5710, 0xa6e8, 0xadff, 0x31cc, 0x1, 0x1);
        gbc.writeMem(0x85e7, { 0xf1 });
        gbc.writeMem(0xa018, { 0xff, 0xef });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xa01a, gbc.sp());
        EXPECT(0x85e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x85e7));
        EXPECT(0xff, gbc.readMem(0xa018));
        EXPECT(0xef, gbc.readMem(0xa019));
        // F1 02C9
        gbc.setState(0x537e, 0xefaa, 0xa560, 0x8783, 0xe266, 0x376f, 0x0, 0x0);
        gbc.writeMem(0x537e, { 0xf1 });
        gbc.writeMem(0xefaa, { 0x8c, 0x74 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xefac, gbc.sp());
        EXPECT(0x537f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xefaa));
        EXPECT(0x74, gbc.readMem(0xefab));
        // F1 02CB
        gbc.setState(0x81e, 0x8e2a, 0xa2e0, 0xb2fa, 0x7e86, 0x3d7c, 0x0, 0x0);
        gbc.writeMem(0x81e, { 0xf1 });
        gbc.writeMem(0x8e2a, { 0x49, 0x15 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x8e2c, gbc.sp());
        EXPECT(0x81f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x8e2a));
        EXPECT(0x15, gbc.readMem(0x8e2b));
        // F1 02CC
        gbc.setState(0x6919, 0xffd2, 0xb8d0, 0xff37, 0xe6eb, 0x7a48, 0x1, 0x1);
        gbc.writeMem(0x6919, { 0xf1 });
        gbc.writeMem(0xffd2, { 0x31, 0xbb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xffd4, gbc.sp());
        EXPECT(0x691a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xffd2));
        EXPECT(0xbb, gbc.readMem(0xffd3));
        // F1 02CD
        gbc.setState(0x7762, 0xdda8, 0x5050, 0x77b6, 0x42e7, 0x4a2a, 0x0, 0x1);
        gbc.writeMem(0x7762, { 0xf1 });
        gbc.writeMem(0xdda8, { 0x93, 0x3c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xddaa, gbc.sp());
        EXPECT(0x7763, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xdda8));
        EXPECT(0x3c, gbc.readMem(0xdda9));
        // F1 02CE
        gbc.setState(0x99a6, 0x909e, 0x87d0, 0x4499, 0xe8bd, 0x27c3, 0x0, 0x1);
        gbc.writeMem(0x909e, { 0xb2, 0x36 });
        gbc.writeMem(0x99a6, { 0xf1 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x90a0, gbc.sp());
        EXPECT(0x99a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x909e));
        EXPECT(0x36, gbc.readMem(0x909f));
        EXPECT(0xf1, gbc.readMem(0x99a6));
        // F1 02CF
        gbc.setState(0xd0a8, 0x2f1e, 0x9cb0, 0xc5c, 0x2aaf, 0xa235, 0x0, 0x1);
        gbc.writeMem(0x2f1e, { 0xd1, 0xa7 });
        gbc.writeMem(0xd0a8, { 0xf1 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x2f20, gbc.sp());
        EXPECT(0xd0a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xd0a8));
        // F1 02D0
        gbc.setState(0x8fa7, 0xd9d1, 0x78b0, 0xc67c, 0xfc8, 0x69fd, 0x1, 0x0);
        gbc.writeMem(0x8fa7, { 0xf1 });
        gbc.writeMem(0xd9d1, { 0x92, 0x13 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd9d3, gbc.sp());
        EXPECT(0x8fa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8fa7));
        EXPECT(0x92, gbc.readMem(0xd9d1));
        EXPECT(0x13, gbc.readMem(0xd9d2));
        // F1 02D1
        gbc.setState(0x99ec, 0x374, 0xffc0, 0xf817, 0x292e, 0x4de1, 0x0, 0x0);
        gbc.writeMem(0x374, { 0xfa, 0x7c });
        gbc.writeMem(0x99ec, { 0xf1 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x376, gbc.sp());
        EXPECT(0x99ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x99ec));
        // F1 02D2
        gbc.setState(0x2f71, 0xb6ef, 0xba00, 0xec7e, 0x9350, 0x9ece, 0x0, 0x0);
        gbc.writeMem(0x2f71, { 0xf1 });
        gbc.writeMem(0xb6ef, { 0xf9, 0x21 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb6f1, gbc.sp());
        EXPECT(0x2f72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0xb6ef));
        EXPECT(0x21, gbc.readMem(0xb6f0));
        // F1 02D3
        gbc.setState(0xe7a2, 0xbe3b, 0x6350, 0xc4ce, 0x7ee6, 0x3917, 0x1, 0x0);
        gbc.writeMem(0xbe3b, { 0x4d, 0xfe });
        gbc.writeMem(0xe7a2, { 0xf1 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xbe3d, gbc.sp());
        EXPECT(0xe7a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xbe3b));
        EXPECT(0xfe, gbc.readMem(0xbe3c));
        EXPECT(0xf1, gbc.readMem(0xe7a2));
        // F1 02D4
        gbc.setState(0x9e4, 0xbf32, 0xaa60, 0x15e0, 0xb265, 0xc974, 0x1, 0x0);
        gbc.writeMem(0x9e4, { 0xf1 });
        gbc.writeMem(0xbf32, { 0x32, 0x8c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xbf34, gbc.sp());
        EXPECT(0x9e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xbf32));
        EXPECT(0x8c, gbc.readMem(0xbf33));
        // F1 02D5
        gbc.setState(0x8fb4, 0xa426, 0x4050, 0xf2c1, 0x9758, 0x73af, 0x1, 0x0);
        gbc.writeMem(0x8fb4, { 0xf1 });
        gbc.writeMem(0xa426, { 0x16, 0xed });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa428, gbc.sp());
        EXPECT(0x8fb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8fb4));
        EXPECT(0x16, gbc.readMem(0xa426));
        EXPECT(0xed, gbc.readMem(0xa427));
        // F1 02D6
        gbc.setState(0x992, 0xccc9, 0x7cd0, 0x5015, 0x99fb, 0x60c7, 0x1, 0x0);
        gbc.writeMem(0x992, { 0xf1 });
        gbc.writeMem(0xccc9, { 0x2, 0x32 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xcccb, gbc.sp());
        EXPECT(0x993, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xccc9));
        EXPECT(0x32, gbc.readMem(0xccca));
        // F1 02D7
        gbc.setState(0x89df, 0x78be, 0x600, 0xf3ea, 0xa20d, 0x616b, 0x0, 0x1);
        gbc.writeMem(0x78be, { 0x7c, 0xb7 });
        gbc.writeMem(0x89df, { 0xf1 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x78c0, gbc.sp());
        EXPECT(0x89e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x89df));
        // F1 02D8
        gbc.setState(0xb63b, 0xea8f, 0xf480, 0x56c6, 0x42ec, 0xc955, 0x0, 0x0);
        gbc.writeMem(0xb63b, { 0xf1 });
        gbc.writeMem(0xea8f, { 0x41, 0x53 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xea91, gbc.sp());
        EXPECT(0xb63c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xb63b));
        EXPECT(0x41, gbc.readMem(0xea8f));
        EXPECT(0x53, gbc.readMem(0xea90));
        // F1 02D9
        gbc.setState(0x1c8c, 0x8c16, 0x6840, 0x8822, 0xc76f, 0x3fb0, 0x1, 0x0);
        gbc.writeMem(0x1c8c, { 0xf1 });
        gbc.writeMem(0x8c16, { 0x30, 0x36 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x8c18, gbc.sp());
        EXPECT(0x1c8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0x8c16));
        EXPECT(0x36, gbc.readMem(0x8c17));
        // F1 02DA
        gbc.setState(0x9673, 0x72a, 0xc250, 0x9401, 0xecbc, 0xfba4, 0x0, 0x1);
        gbc.writeMem(0x72a, { 0x54, 0x49 });
        gbc.writeMem(0x9673, { 0xf1 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x72c, gbc.sp());
        EXPECT(0x9674, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x9673));
        // F1 02DB
        gbc.setState(0xbf1b, 0xee25, 0x9750, 0x80d6, 0x5768, 0xae6c, 0x0, 0x0);
        gbc.writeMem(0xbf1b, { 0xf1 });
        gbc.writeMem(0xee25, { 0x5, 0x5e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xee27, gbc.sp());
        EXPECT(0xbf1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xbf1b));
        EXPECT(0x5, gbc.readMem(0xee25));
        EXPECT(0x5e, gbc.readMem(0xee26));
        // F1 02DC
        gbc.setState(0x3351, 0x2f44, 0xa790, 0xa2a5, 0x81b3, 0xc2fd, 0x1, 0x0);
        gbc.writeMem(0x2f44, { 0xc5, 0x1 });
        gbc.writeMem(0x3351, { 0xf1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2f46, gbc.sp());
        EXPECT(0x3352, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 02DD
        gbc.setState(0x64e, 0x2391, 0xad80, 0x448b, 0x8b7f, 0x9191, 0x0, 0x0);
        gbc.writeMem(0x64e, { 0xf1 });
        gbc.writeMem(0x2391, { 0xb2, 0xeb });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x2393, gbc.sp());
        EXPECT(0x64f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 02DE
        gbc.setState(0xe697, 0x68f5, 0x3160, 0x29cd, 0xa32, 0x394e, 0x1, 0x0);
        gbc.writeMem(0x68f5, { 0x42, 0x19 });
        gbc.writeMem(0xe697, { 0xf1 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x68f7, gbc.sp());
        EXPECT(0xe698, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xe697));
        // F1 02DF
        gbc.setState(0xbf19, 0xcc5b, 0x6080, 0x5a0a, 0xb5a9, 0xf19c, 0x1, 0x0);
        gbc.writeMem(0xbf19, { 0xf1 });
        gbc.writeMem(0xcc5b, { 0x72, 0x21 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xcc5d, gbc.sp());
        EXPECT(0xbf1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xbf19));
        EXPECT(0x72, gbc.readMem(0xcc5b));
        EXPECT(0x21, gbc.readMem(0xcc5c));
        // F1 02E0
        gbc.setState(0x4ec3, 0xa740, 0xab70, 0xade0, 0x71d9, 0x3363, 0x1, 0x1);
        gbc.writeMem(0x4ec3, { 0xf1 });
        gbc.writeMem(0xa740, { 0x24, 0xcb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xa742, gbc.sp());
        EXPECT(0x4ec4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xa740));
        EXPECT(0xcb, gbc.readMem(0xa741));
        // F1 02E1
        gbc.setState(0x4cbe, 0x5fd, 0x5a70, 0xf14a, 0x68e0, 0xba55, 0x1, 0x0);
        gbc.writeMem(0x5fd, { 0x2e, 0x17 });
        gbc.writeMem(0x4cbe, { 0xf1 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x5ff, gbc.sp());
        EXPECT(0x4cbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 02E2
        gbc.setState(0x2351, 0x3298, 0xd020, 0xa1a7, 0xf5c5, 0xc1a7, 0x0, 0x1);
        gbc.writeMem(0x2351, { 0xf1 });
        gbc.writeMem(0x3298, { 0x56, 0x43 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x329a, gbc.sp());
        EXPECT(0x2352, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 02E3
        gbc.setState(0x5e4d, 0xb378, 0x17c0, 0x2177, 0x9da3, 0x24aa, 0x0, 0x0);
        gbc.writeMem(0x5e4d, { 0xf1 });
        gbc.writeMem(0xb378, { 0x2f, 0x3f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb37a, gbc.sp());
        EXPECT(0x5e4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xb378));
        EXPECT(0x3f, gbc.readMem(0xb379));
        // F1 02E4
        gbc.setState(0x23f1, 0x557d, 0x3700, 0xe793, 0xb13e, 0xd2b9, 0x1, 0x1);
        gbc.writeMem(0x23f1, { 0xf1 });
        gbc.writeMem(0x557d, { 0x33, 0xcd });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x557f, gbc.sp());
        EXPECT(0x23f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 02E5
        gbc.setState(0xa57c, 0xea35, 0x4510, 0xdd34, 0x1e26, 0x6e4b, 0x0, 0x0);
        gbc.writeMem(0xa57c, { 0xf1 });
        gbc.writeMem(0xea35, { 0xcd, 0xad });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xea37, gbc.sp());
        EXPECT(0xa57d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xa57c));
        EXPECT(0xcd, gbc.readMem(0xea35));
        EXPECT(0xad, gbc.readMem(0xea36));
        // F1 02E6
        gbc.setState(0xe307, 0xa590, 0x9df0, 0xaef6, 0xac76, 0x3bd8, 0x0, 0x0);
        gbc.writeMem(0xa590, { 0x49, 0x82 });
        gbc.writeMem(0xe307, { 0xf1 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xa592, gbc.sp());
        EXPECT(0xe308, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xa590));
        EXPECT(0x82, gbc.readMem(0xa591));
        EXPECT(0xf1, gbc.readMem(0xe307));
        // F1 02E7
        gbc.setState(0xd9d4, 0x9780, 0x69f0, 0x217f, 0xf21e, 0xfffa, 0x0, 0x0);
        gbc.writeMem(0x9780, { 0xe4, 0xbf });
        gbc.writeMem(0xd9d4, { 0xf1 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x9782, gbc.sp());
        EXPECT(0xd9d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0x9780));
        EXPECT(0xbf, gbc.readMem(0x9781));
        EXPECT(0xf1, gbc.readMem(0xd9d4));
        // F1 02E9
        gbc.setState(0x199a, 0xaec, 0x8f30, 0x3485, 0x5b4a, 0xb190, 0x1, 0x0);
        gbc.writeMem(0xaec, { 0x70, 0x99 });
        gbc.writeMem(0x199a, { 0xf1 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xaee, gbc.sp());
        EXPECT(0x199b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 02EA
        gbc.setState(0xba73, 0x3c53, 0xdd20, 0x36b0, 0x2d34, 0x1046, 0x0, 0x0);
        gbc.writeMem(0x3c53, { 0x5d, 0x97 });
        gbc.writeMem(0xba73, { 0xf1 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x3c55, gbc.sp());
        EXPECT(0xba74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xba73));
        // F1 02EB
        gbc.setState(0xe84b, 0x145f, 0x6730, 0x2cac, 0x78df, 0x9a91, 0x0, 0x1);
        gbc.writeMem(0x145f, { 0x7d, 0x34 });
        gbc.writeMem(0xe84b, { 0xf1 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x1461, gbc.sp());
        EXPECT(0xe84c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xe84b));
        // F1 02EC
        gbc.setState(0x3f4c, 0x4e9c, 0x6280, 0x9262, 0xfd2e, 0x5c00, 0x0, 0x0);
        gbc.writeMem(0x3f4c, { 0xf1 });
        gbc.writeMem(0x4e9c, { 0xc0, 0xb });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x4e9e, gbc.sp());
        EXPECT(0x3f4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 02ED
        gbc.setState(0xc845, 0x468e, 0x4720, 0xcf15, 0xfb0, 0xaeac, 0x0, 0x1);
        gbc.writeMem(0x468e, { 0xeb, 0x2f });
        gbc.writeMem(0xc845, { 0xf1 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x4690, gbc.sp());
        EXPECT(0xc846, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xc845));
        // F1 02EE
        gbc.setState(0xd2b1, 0x3c04, 0x1120, 0x4bc8, 0x3a49, 0x6e9c, 0x0, 0x1);
        gbc.writeMem(0x3c04, { 0x4e, 0xf });
        gbc.writeMem(0xd2b1, { 0xf1 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x3c06, gbc.sp());
        EXPECT(0xd2b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xd2b1));
        // F1 02EF
        gbc.setState(0x6e5c, 0x455e, 0xd030, 0xe82e, 0xbb6b, 0x5c34, 0x1, 0x0);
        gbc.writeMem(0x455e, { 0x32, 0xab });
        gbc.writeMem(0x6e5c, { 0xf1 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4560, gbc.sp());
        EXPECT(0x6e5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 02F0
        gbc.setState(0x5831, 0x4d4c, 0x6f60, 0x33bd, 0xfbd3, 0xb9e2, 0x1, 0x1);
        gbc.writeMem(0x4d4c, { 0x9, 0x43 });
        gbc.writeMem(0x5831, { 0xf1 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4d4e, gbc.sp());
        EXPECT(0x5832, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 02F1
        gbc.setState(0x6757, 0x53c4, 0x62b0, 0x9419, 0x3ea5, 0x8102, 0x1, 0x0);
        gbc.writeMem(0x53c4, { 0xb1, 0xab });
        gbc.writeMem(0x6757, { 0xf1 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x53c6, gbc.sp());
        EXPECT(0x6758, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 02F2
        gbc.setState(0xdfdc, 0xa458, 0x3140, 0xe185, 0x3e62, 0x8284, 0x1, 0x0);
        gbc.writeMem(0xa458, { 0xe0, 0x9c });
        gbc.writeMem(0xdfdc, { 0xf1 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xa45a, gbc.sp());
        EXPECT(0xdfdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa458));
        EXPECT(0x9c, gbc.readMem(0xa459));
        EXPECT(0xf1, gbc.readMem(0xdfdc));
        // F1 02F3
        gbc.setState(0xb114, 0x9586, 0xf4e0, 0x44e9, 0x5a3a, 0x57ef, 0x1, 0x0);
        gbc.writeMem(0x9586, { 0x4a, 0x46 });
        gbc.writeMem(0xb114, { 0xf1 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9588, gbc.sp());
        EXPECT(0xb115, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0x9586));
        EXPECT(0x46, gbc.readMem(0x9587));
        EXPECT(0xf1, gbc.readMem(0xb114));
        // F1 02F4
        gbc.setState(0x8e, 0xbc16, 0x40a0, 0x16fc, 0xc540, 0xd99d, 0x0, 0x0);
        gbc.writeMem(0x8e, { 0xf1 });
        gbc.writeMem(0xbc16, { 0x7a, 0x9b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xbc18, gbc.sp());
        EXPECT(0x8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xbc16));
        EXPECT(0x9b, gbc.readMem(0xbc17));
        // F1 02F5
        gbc.setState(0x201, 0x7d50, 0xe130, 0xbcfe, 0x7f9c, 0x64a3, 0x1, 0x0);
        gbc.writeMem(0x201, { 0xf1 });
        gbc.writeMem(0x7d50, { 0x8, 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x7d52, gbc.sp());
        EXPECT(0x202, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 02F6
        gbc.setState(0xc0cb, 0x9ac8, 0xc270, 0xb935, 0x74c5, 0x2fc5, 0x1, 0x1);
        gbc.writeMem(0x9ac8, { 0x7b, 0xc8 });
        gbc.writeMem(0xc0cb, { 0xf1 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x9aca, gbc.sp());
        EXPECT(0xc0cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9ac8));
        EXPECT(0xc8, gbc.readMem(0x9ac9));
        EXPECT(0xf1, gbc.readMem(0xc0cb));
        // F1 02F7
        gbc.setState(0x4589, 0xaa4d, 0xa800, 0xc4aa, 0xd159, 0xbe72, 0x0, 0x0);
        gbc.writeMem(0x4589, { 0xf1 });
        gbc.writeMem(0xaa4d, { 0x89, 0xca });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xaa4f, gbc.sp());
        EXPECT(0x458a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xaa4d));
        EXPECT(0xca, gbc.readMem(0xaa4e));
        // F1 02F8
        gbc.setState(0x1670, 0x4ed4, 0x4c60, 0x5cf0, 0xaea9, 0xd94d, 0x1, 0x0);
        gbc.writeMem(0x1670, { 0xf1 });
        gbc.writeMem(0x4ed4, { 0xc1, 0x87 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x4ed6, gbc.sp());
        EXPECT(0x1671, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 02F9
        gbc.setState(0x30ef, 0x7883, 0xbe10, 0xdd5a, 0xbc9e, 0xf85, 0x0, 0x1);
        gbc.writeMem(0x30ef, { 0xf1 });
        gbc.writeMem(0x7883, { 0x57, 0x8 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x7885, gbc.sp());
        EXPECT(0x30f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 02FA
        gbc.setState(0xad9f, 0x6171, 0x3010, 0xf32b, 0x45ef, 0xd95, 0x0, 0x1);
        gbc.writeMem(0x6171, { 0x83, 0x6c });
        gbc.writeMem(0xad9f, { 0xf1 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x6173, gbc.sp());
        EXPECT(0xada0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xad9f));
        // F1 02FB
        gbc.setState(0xa5ca, 0xd848, 0xae00, 0x9d34, 0x9170, 0x6139, 0x1, 0x1);
        gbc.writeMem(0xa5ca, { 0xf1 });
        gbc.writeMem(0xd848, { 0x30, 0x79 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xd84a, gbc.sp());
        EXPECT(0xa5cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xa5ca));
        EXPECT(0x30, gbc.readMem(0xd848));
        EXPECT(0x79, gbc.readMem(0xd849));
        // F1 02FC
        gbc.setState(0xb101, 0x62e7, 0x5340, 0xc07a, 0x3de6, 0xc9ea, 0x1, 0x0);
        gbc.writeMem(0x62e7, { 0xaf, 0xdf });
        gbc.writeMem(0xb101, { 0xf1 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x62e9, gbc.sp());
        EXPECT(0xb102, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xb101));
        // F1 02FD
        gbc.setState(0x1a5e, 0x64db, 0xedb0, 0x3a33, 0x3e2a, 0xbc40, 0x0, 0x1);
        gbc.writeMem(0x1a5e, { 0xf1 });
        gbc.writeMem(0x64db, { 0xf0, 0xdf });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x64dd, gbc.sp());
        EXPECT(0x1a5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 02FE
        gbc.setState(0x674e, 0xeee2, 0xea00, 0x3dd7, 0xa64b, 0xa576, 0x1, 0x1);
        gbc.writeMem(0x674e, { 0xf1 });
        gbc.writeMem(0xeee2, { 0x3d, 0xde });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xeee4, gbc.sp());
        EXPECT(0x674f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xeee2));
        EXPECT(0xde, gbc.readMem(0xeee3));
        // F1 02FF
        gbc.setState(0xfe9, 0x8de7, 0xba10, 0x66b, 0x434b, 0x2257, 0x1, 0x1);
        gbc.writeMem(0xfe9, { 0xf1 });
        gbc.writeMem(0x8de7, { 0x16, 0x56 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x8de9, gbc.sp());
        EXPECT(0xfea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x8de7));
        EXPECT(0x56, gbc.readMem(0x8de8));
        // F1 0300
        gbc.setState(0x1c3c, 0xb6a0, 0xe660, 0x2c5f, 0x23e3, 0x1b99, 0x0, 0x1);
        gbc.writeMem(0x1c3c, { 0xf1 });
        gbc.writeMem(0xb6a0, { 0xdc, 0x2c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb6a2, gbc.sp());
        EXPECT(0x1c3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xb6a0));
        EXPECT(0x2c, gbc.readMem(0xb6a1));
        // F1 0301
        gbc.setState(0x590e, 0x97f, 0xfcc0, 0x433, 0xcb56, 0x4b06, 0x1, 0x0);
        gbc.writeMem(0x97f, { 0xd9, 0x1d });
        gbc.writeMem(0x590e, { 0xf1 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x981, gbc.sp());
        EXPECT(0x590f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 0302
        gbc.setState(0x2220, 0xd122, 0xf2d0, 0xd80c, 0xd092, 0x9ede, 0x1, 0x1);
        gbc.writeMem(0x2220, { 0xf1 });
        gbc.writeMem(0xd122, { 0x1b, 0x13 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xd124, gbc.sp());
        EXPECT(0x2221, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xd122));
        EXPECT(0x13, gbc.readMem(0xd123));
        // F1 0303
        gbc.setState(0xc477, 0x974c, 0x4a20, 0x766b, 0x8b07, 0x7058, 0x0, 0x0);
        gbc.writeMem(0x974c, { 0x3c, 0x8 });
        gbc.writeMem(0xc477, { 0xf1 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x974e, gbc.sp());
        EXPECT(0xc478, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x974c));
        EXPECT(0x8, gbc.readMem(0x974d));
        EXPECT(0xf1, gbc.readMem(0xc477));
        // F1 0304
        gbc.setState(0xbe92, 0xcc4e, 0x4060, 0x5eae, 0xa90d, 0x8c58, 0x0, 0x0);
        gbc.writeMem(0xbe92, { 0xf1 });
        gbc.writeMem(0xcc4e, { 0x27, 0xd9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xcc50, gbc.sp());
        EXPECT(0xbe93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xbe92));
        EXPECT(0x27, gbc.readMem(0xcc4e));
        EXPECT(0xd9, gbc.readMem(0xcc4f));
        // F1 0305
        gbc.setState(0xbcf, 0x8aec, 0x38e0, 0x5e0e, 0x7bc3, 0x1c65, 0x1, 0x0);
        gbc.writeMem(0xbcf, { 0xf1 });
        gbc.writeMem(0x8aec, { 0x97, 0x96 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8aee, gbc.sp());
        EXPECT(0xbd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8aec));
        EXPECT(0x96, gbc.readMem(0x8aed));
        // F1 0306
        gbc.setState(0x5386, 0x151f, 0x5030, 0xb131, 0x3630, 0x6de4, 0x1, 0x1);
        gbc.writeMem(0x151f, { 0x42, 0x61 });
        gbc.writeMem(0x5386, { 0xf1 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x1521, gbc.sp());
        EXPECT(0x5387, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0307
        gbc.setState(0x103b, 0xe5f3, 0xb0d0, 0xc955, 0xd17e, 0x2d2f, 0x0, 0x0);
        gbc.writeMem(0x103b, { 0xf1 });
        gbc.writeMem(0xe5f3, { 0xe9, 0x70 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xe5f5, gbc.sp());
        EXPECT(0x103c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xe5f3));
        EXPECT(0x70, gbc.readMem(0xe5f4));
        // F1 0308
        gbc.setState(0xe422, 0x9b6a, 0xb680, 0xf2a, 0x89be, 0x5d98, 0x1, 0x0);
        gbc.writeMem(0x9b6a, { 0x6f, 0xa });
        gbc.writeMem(0xe422, { 0xf1 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9b6c, gbc.sp());
        EXPECT(0xe423, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0x9b6a));
        EXPECT(0xa, gbc.readMem(0x9b6b));
        EXPECT(0xf1, gbc.readMem(0xe422));
        // F1 0309
        gbc.setState(0x811d, 0xc2c1, 0x1b10, 0xc8ff, 0xf68d, 0x718a, 0x0, 0x1);
        gbc.writeMem(0x811d, { 0xf1 });
        gbc.writeMem(0xc2c1, { 0x20, 0x3d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xc2c3, gbc.sp());
        EXPECT(0x811e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x811d));
        EXPECT(0x20, gbc.readMem(0xc2c1));
        EXPECT(0x3d, gbc.readMem(0xc2c2));
        // F1 030A
        gbc.setState(0x3a4e, 0x1830, 0xc470, 0x86df, 0x4b48, 0xbb18, 0x1, 0x0);
        gbc.writeMem(0x1830, { 0xad, 0x52 });
        gbc.writeMem(0x3a4e, { 0xf1 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x1832, gbc.sp());
        EXPECT(0x3a4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 030B
        gbc.setState(0xdbb4, 0x4c80, 0x72d0, 0x4444, 0x9500, 0xa6c9, 0x1, 0x1);
        gbc.writeMem(0x4c80, { 0x46, 0x41 });
        gbc.writeMem(0xdbb4, { 0xf1 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x4c82, gbc.sp());
        EXPECT(0xdbb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xdbb4));
        // F1 030C
        gbc.setState(0xbf3c, 0x459c, 0x5770, 0xa541, 0xa2d1, 0x630d, 0x1, 0x0);
        gbc.writeMem(0x459c, { 0x90, 0x18 });
        gbc.writeMem(0xbf3c, { 0xf1 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x459e, gbc.sp());
        EXPECT(0xbf3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xbf3c));
        // F1 030D
        gbc.setState(0x7c2c, 0xf010, 0xf4c0, 0x914f, 0xaaf2, 0x8fe2, 0x0, 0x1);
        gbc.writeMem(0x7c2c, { 0xf1 });
        gbc.writeMem(0xf010, { 0x77, 0xe1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xf012, gbc.sp());
        EXPECT(0x7c2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xf010));
        EXPECT(0xe1, gbc.readMem(0xf011));
        // F1 030E
        gbc.setState(0x142d, 0x363e, 0xf9b0, 0xe4c7, 0x21ec, 0xd8e6, 0x0, 0x1);
        gbc.writeMem(0x142d, { 0xf1 });
        gbc.writeMem(0x363e, { 0xd, 0xcb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x3640, gbc.sp());
        EXPECT(0x142e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 030F
        gbc.setState(0x5e66, 0xd362, 0x5320, 0xc8a9, 0xf39a, 0xaaa0, 0x1, 0x1);
        gbc.writeMem(0x5e66, { 0xf1 });
        gbc.writeMem(0xd362, { 0x35, 0x71 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd364, gbc.sp());
        EXPECT(0x5e67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xd362));
        EXPECT(0x71, gbc.readMem(0xd363));
        // F1 0310
        gbc.setState(0xe53, 0x1247, 0xfa10, 0x3463, 0xa02b, 0x8b07, 0x0, 0x1);
        gbc.writeMem(0xe53, { 0xf1 });
        gbc.writeMem(0x1247, { 0xc1, 0xfc });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x1249, gbc.sp());
        EXPECT(0xe54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0311
        gbc.setState(0xcb21, 0x97fa, 0xaac0, 0x3906, 0x907a, 0x6b38, 0x1, 0x0);
        gbc.writeMem(0x97fa, { 0x2a, 0x55 });
        gbc.writeMem(0xcb21, { 0xf1 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x97fc, gbc.sp());
        EXPECT(0xcb22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0x97fa));
        EXPECT(0x55, gbc.readMem(0x97fb));
        EXPECT(0xf1, gbc.readMem(0xcb21));
        // F1 0312
        gbc.setState(0x82a8, 0x6074, 0x7b10, 0x1fab, 0xf678, 0x2658, 0x1, 0x1);
        gbc.writeMem(0x6074, { 0x95, 0x2f });
        gbc.writeMem(0x82a8, { 0xf1 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x6076, gbc.sp());
        EXPECT(0x82a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x82a8));
        // F1 0313
        gbc.setState(0x80e8, 0xbdc0, 0x7630, 0x69e8, 0xbff3, 0xdf62, 0x0, 0x1);
        gbc.writeMem(0x80e8, { 0xf1 });
        gbc.writeMem(0xbdc0, { 0x80, 0xd6 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xbdc2, gbc.sp());
        EXPECT(0x80e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x80e8));
        EXPECT(0x80, gbc.readMem(0xbdc0));
        EXPECT(0xd6, gbc.readMem(0xbdc1));
        // F1 0314
        gbc.setState(0x645c, 0xab68, 0x2b60, 0x3f33, 0xc75a, 0x529e, 0x1, 0x0);
        gbc.writeMem(0x645c, { 0xf1 });
        gbc.writeMem(0xab68, { 0xbc, 0x4c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xab6a, gbc.sp());
        EXPECT(0x645d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xab68));
        EXPECT(0x4c, gbc.readMem(0xab69));
        // F1 0315
        gbc.setState(0x41c9, 0xe575, 0x92a0, 0x4ee0, 0x4281, 0x7df, 0x1, 0x0);
        gbc.writeMem(0x41c9, { 0xf1 });
        gbc.writeMem(0xe575, { 0xf5, 0x4f });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xe577, gbc.sp());
        EXPECT(0x41ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xe575));
        EXPECT(0x4f, gbc.readMem(0xe576));
        // F1 0316
        gbc.setState(0xd60d, 0xd511, 0x9470, 0x4f43, 0xaff1, 0x9b93, 0x0, 0x0);
        gbc.writeMem(0xd511, { 0x81, 0x4c });
        gbc.writeMem(0xd60d, { 0xf1 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd513, gbc.sp());
        EXPECT(0xd60e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd511));
        EXPECT(0x4c, gbc.readMem(0xd512));
        EXPECT(0xf1, gbc.readMem(0xd60d));
        // F1 0317
        gbc.setState(0x4aa6, 0x14c2, 0x16c0, 0x11ba, 0xfffe, 0x2911, 0x0, 0x1);
        gbc.writeMem(0x14c2, { 0xea, 0x69 });
        gbc.writeMem(0x4aa6, { 0xf1 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x14c4, gbc.sp());
        EXPECT(0x4aa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0318
        gbc.setState(0x37c7, 0xa12, 0x65b0, 0xd560, 0x62cc, 0xf59, 0x0, 0x1);
        gbc.writeMem(0xa12, { 0xdd, 0xbf });
        gbc.writeMem(0x37c7, { 0xf1 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xa14, gbc.sp());
        EXPECT(0x37c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 0319
        gbc.setState(0x9683, 0x4056, 0x8330, 0xcdc8, 0x441a, 0x819a, 0x0, 0x1);
        gbc.writeMem(0x4056, { 0xe8, 0x8d });
        gbc.writeMem(0x9683, { 0xf1 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x4058, gbc.sp());
        EXPECT(0x9684, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x9683));
        // F1 031A
        gbc.setState(0x348a, 0xb072, 0x3cc0, 0xb8ef, 0xd8ab, 0x9de7, 0x0, 0x1);
        gbc.writeMem(0x348a, { 0xf1 });
        gbc.writeMem(0xb072, { 0xe5, 0xfb });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb074, gbc.sp());
        EXPECT(0x348b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xb072));
        EXPECT(0xfb, gbc.readMem(0xb073));
        // F1 031B
        gbc.setState(0x2f8a, 0x5cb5, 0xdc20, 0xb395, 0xb80c, 0xb7ce, 0x1, 0x0);
        gbc.writeMem(0x2f8a, { 0xf1 });
        gbc.writeMem(0x5cb5, { 0xce, 0xa2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x5cb7, gbc.sp());
        EXPECT(0x2f8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 031C
        gbc.setState(0xd97f, 0x4dff, 0x7550, 0x8dbf, 0x95f8, 0x317f, 0x0, 0x1);
        gbc.writeMem(0x4dff, { 0x53, 0x7f });
        gbc.writeMem(0xd97f, { 0xf1 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x4e01, gbc.sp());
        EXPECT(0xd980, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xd97f));
        // F1 031D
        gbc.setState(0xa5e7, 0x9bb, 0x33b0, 0x7c3e, 0x5421, 0xe073, 0x1, 0x1);
        gbc.writeMem(0x9bb, { 0x90, 0x90 });
        gbc.writeMem(0xa5e7, { 0xf1 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9bd, gbc.sp());
        EXPECT(0xa5e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xa5e7));
        // F1 031E
        gbc.setState(0x83cf, 0x8571, 0xea90, 0xa134, 0x76e1, 0x8c64, 0x1, 0x0);
        gbc.writeMem(0x83cf, { 0xf1 });
        gbc.writeMem(0x8571, { 0x12, 0xc4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x8573, gbc.sp());
        EXPECT(0x83d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x83cf));
        EXPECT(0x12, gbc.readMem(0x8571));
        EXPECT(0xc4, gbc.readMem(0x8572));
        // F1 031F
        gbc.setState(0x276, 0x516c, 0xc60, 0xfdde, 0xba32, 0x5f96, 0x0, 0x1);
        gbc.writeMem(0x276, { 0xf1 });
        gbc.writeMem(0x516c, { 0xfc, 0x9c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x516e, gbc.sp());
        EXPECT(0x277, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 0320
        gbc.setState(0xbefa, 0x1926, 0x99b0, 0xb7ec, 0x76c2, 0xd4eb, 0x0, 0x1);
        gbc.writeMem(0x1926, { 0xbd, 0x9f });
        gbc.writeMem(0xbefa, { 0xf1 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x1928, gbc.sp());
        EXPECT(0xbefb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xbefa));
        // F1 0321
        gbc.setState(0x5dbb, 0x53bd, 0x4770, 0x11e2, 0x67f5, 0x4e04, 0x1, 0x1);
        gbc.writeMem(0x53bd, { 0x64, 0xb5 });
        gbc.writeMem(0x5dbb, { 0xf1 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x53bf, gbc.sp());
        EXPECT(0x5dbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0322
        gbc.setState(0x9329, 0x17bb, 0x6cf0, 0xec83, 0xfa51, 0xdcda, 0x1, 0x0);
        gbc.writeMem(0x17bb, { 0xf, 0x2a });
        gbc.writeMem(0x9329, { 0xf1 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x17bd, gbc.sp());
        EXPECT(0x932a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x9329));
        // F1 0323
        gbc.setState(0xc778, 0xea80, 0xde60, 0x170, 0xe285, 0x2ea2, 0x0, 0x1);
        gbc.writeMem(0xc778, { 0xf1 });
        gbc.writeMem(0xea80, { 0x5f, 0xd7 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xea82, gbc.sp());
        EXPECT(0xc779, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xc778));
        EXPECT(0x5f, gbc.readMem(0xea80));
        EXPECT(0xd7, gbc.readMem(0xea81));
        // F1 0324
        gbc.setState(0x7911, 0xee5c, 0xec0, 0x546f, 0xc0d4, 0xd673, 0x1, 0x1);
        gbc.writeMem(0x7911, { 0xf1 });
        gbc.writeMem(0xee5c, { 0xa6, 0x3c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xee5e, gbc.sp());
        EXPECT(0x7912, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xee5c));
        EXPECT(0x3c, gbc.readMem(0xee5d));
        // F1 0325
        gbc.setState(0x929f, 0x8eeb, 0x4c60, 0x6129, 0x174a, 0x53c7, 0x0, 0x1);
        gbc.writeMem(0x8eeb, { 0x60, 0x83 });
        gbc.writeMem(0x929f, { 0xf1 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x8eed, gbc.sp());
        EXPECT(0x92a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0x8eeb));
        EXPECT(0x83, gbc.readMem(0x8eec));
        EXPECT(0xf1, gbc.readMem(0x929f));
        // F1 0326
        gbc.setState(0x2e51, 0xc68d, 0x54f0, 0x9f61, 0xd121, 0xddb2, 0x1, 0x0);
        gbc.writeMem(0x2e51, { 0xf1 });
        gbc.writeMem(0xc68d, { 0xd5, 0x13 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xc68f, gbc.sp());
        EXPECT(0x2e52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xc68d));
        EXPECT(0x13, gbc.readMem(0xc68e));
        // F1 0327
        gbc.setState(0x2d4e, 0xc0dd, 0x67a0, 0x97fc, 0x8427, 0x1118, 0x0, 0x1);
        gbc.writeMem(0x2d4e, { 0xf1 });
        gbc.writeMem(0xc0dd, { 0x5c, 0x3 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xc0df, gbc.sp());
        EXPECT(0x2d4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xc0dd));
        EXPECT(0x3, gbc.readMem(0xc0de));
        // F1 0328
        gbc.setState(0x39c5, 0xa217, 0x61c0, 0x3100, 0xea52, 0xa9ac, 0x1, 0x1);
        gbc.writeMem(0x39c5, { 0xf1 });
        gbc.writeMem(0xa217, { 0x69, 0xf4 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xa219, gbc.sp());
        EXPECT(0x39c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa217));
        EXPECT(0xf4, gbc.readMem(0xa218));
        // F1 0329
        gbc.setState(0xbc39, 0xda96, 0x7a0, 0xef04, 0x155e, 0xf588, 0x1, 0x1);
        gbc.writeMem(0xbc39, { 0xf1 });
        gbc.writeMem(0xda96, { 0xa9, 0x3c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xda98, gbc.sp());
        EXPECT(0xbc3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xbc39));
        EXPECT(0xa9, gbc.readMem(0xda96));
        EXPECT(0x3c, gbc.readMem(0xda97));
        // F1 032A
        gbc.setState(0x572f, 0x905d, 0x77d0, 0x841f, 0xc18f, 0x24a0, 0x0, 0x1);
        gbc.writeMem(0x572f, { 0xf1 });
        gbc.writeMem(0x905d, { 0xbf, 0xfb });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x905f, gbc.sp());
        EXPECT(0x5730, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x905d));
        EXPECT(0xfb, gbc.readMem(0x905e));
        // F1 032B
        gbc.setState(0xcfc3, 0xb33a, 0xddf0, 0x98bb, 0x3de9, 0xfdba, 0x1, 0x0);
        gbc.writeMem(0xb33a, { 0xe, 0x2c });
        gbc.writeMem(0xcfc3, { 0xf1 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb33c, gbc.sp());
        EXPECT(0xcfc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xb33a));
        EXPECT(0x2c, gbc.readMem(0xb33b));
        EXPECT(0xf1, gbc.readMem(0xcfc3));
        // F1 032C
        gbc.setState(0x4234, 0xbf33, 0xc330, 0x9c82, 0xbaa3, 0x3aa2, 0x1, 0x0);
        gbc.writeMem(0x4234, { 0xf1 });
        gbc.writeMem(0xbf33, { 0x8c, 0x7a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xbf35, gbc.sp());
        EXPECT(0x4235, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xbf33));
        EXPECT(0x7a, gbc.readMem(0xbf34));
        // F1 032D
        gbc.setState(0x4ad0, 0xbfac, 0x3c10, 0xd2d, 0x6fef, 0xe1c8, 0x0, 0x1);
        gbc.writeMem(0x4ad0, { 0xf1 });
        gbc.writeMem(0xbfac, { 0x84, 0xb });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xbfae, gbc.sp());
        EXPECT(0x4ad1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xbfac));
        EXPECT(0xb, gbc.readMem(0xbfad));
        // F1 032E
        gbc.setState(0xa1a3, 0x4bda, 0xba50, 0x7b77, 0x9ac5, 0xfa5e, 0x0, 0x0);
        gbc.writeMem(0x4bda, { 0xb7, 0xce });
        gbc.writeMem(0xa1a3, { 0xf1 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4bdc, gbc.sp());
        EXPECT(0xa1a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xa1a3));
        // F1 032F
        gbc.setState(0xca05, 0x2623, 0x1430, 0xf247, 0x93df, 0x2f3f, 0x0, 0x0);
        gbc.writeMem(0x2623, { 0xad, 0x86 });
        gbc.writeMem(0xca05, { 0xf1 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x2625, gbc.sp());
        EXPECT(0xca06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xca05));
        // F1 0330
        gbc.setState(0xbf63, 0x3ff, 0xdac0, 0x6a5e, 0xd926, 0x16a7, 0x0, 0x1);
        gbc.writeMem(0x3ff, { 0x77, 0x9b });
        gbc.writeMem(0xbf63, { 0xf1 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x401, gbc.sp());
        EXPECT(0xbf64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xbf63));
        // F1 0331
        gbc.setState(0xb7d5, 0xc1dd, 0x1270, 0x22d6, 0x1e2c, 0xdfeb, 0x0, 0x0);
        gbc.writeMem(0xb7d5, { 0xf1 });
        gbc.writeMem(0xc1dd, { 0x8, 0xd });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xc1df, gbc.sp());
        EXPECT(0xb7d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xb7d5));
        EXPECT(0x8, gbc.readMem(0xc1dd));
        EXPECT(0xd, gbc.readMem(0xc1de));
        // F1 0332
        gbc.setState(0x221f, 0xb532, 0x6680, 0xe804, 0xcbd7, 0x3403, 0x1, 0x1);
        gbc.writeMem(0x221f, { 0xf1 });
        gbc.writeMem(0xb532, { 0xb, 0xe1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xb534, gbc.sp());
        EXPECT(0x2220, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb532));
        EXPECT(0xe1, gbc.readMem(0xb533));
        // F1 0333
        gbc.setState(0x4cea, 0xe622, 0x44d0, 0x20c0, 0x4676, 0x9d27, 0x0, 0x0);
        gbc.writeMem(0x4cea, { 0xf1 });
        gbc.writeMem(0xe622, { 0x5c, 0xcd });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xe624, gbc.sp());
        EXPECT(0x4ceb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xe622));
        EXPECT(0xcd, gbc.readMem(0xe623));
        // F1 0334
        gbc.setState(0x3f8d, 0x46a2, 0x5a00, 0x69e7, 0x6157, 0x53b7, 0x0, 0x0);
        gbc.writeMem(0x3f8d, { 0xf1 });
        gbc.writeMem(0x46a2, { 0x50, 0x63 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x46a4, gbc.sp());
        EXPECT(0x3f8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 0335
        gbc.setState(0xd629, 0x4b6c, 0xa710, 0x6bfb, 0xa235, 0xdca1, 0x1, 0x1);
        gbc.writeMem(0x4b6c, { 0xba, 0x2d });
        gbc.writeMem(0xd629, { 0xf1 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4b6e, gbc.sp());
        EXPECT(0xd62a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xd629));
        // F1 0336
        gbc.setState(0xd57a, 0x2c47, 0xf870, 0x7964, 0x6ecd, 0xcfb0, 0x0, 0x0);
        gbc.writeMem(0x2c47, { 0x82, 0xa3 });
        gbc.writeMem(0xd57a, { 0xf1 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2c49, gbc.sp());
        EXPECT(0xd57b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xd57a));
        // F1 0338
        gbc.setState(0x9326, 0xd533, 0x7f90, 0x6102, 0xe3dd, 0x3e72, 0x0, 0x0);
        gbc.writeMem(0x9326, { 0xf1 });
        gbc.writeMem(0xd533, { 0xb7, 0x5c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xd535, gbc.sp());
        EXPECT(0x9327, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x9326));
        EXPECT(0xb7, gbc.readMem(0xd533));
        EXPECT(0x5c, gbc.readMem(0xd534));
        // F1 0339
        gbc.setState(0xf5e, 0x903a, 0x6320, 0x49ce, 0x45ce, 0xe486, 0x0, 0x1);
        gbc.writeMem(0xf5e, { 0xf1 });
        gbc.writeMem(0x903a, { 0x25, 0xd6 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x903c, gbc.sp());
        EXPECT(0xf5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x903a));
        EXPECT(0xd6, gbc.readMem(0x903b));
        // F1 033A
        gbc.setState(0x814e, 0xdb8e, 0xdb10, 0xea70, 0x3730, 0xbe85, 0x1, 0x0);
        gbc.writeMem(0x814e, { 0xf1 });
        gbc.writeMem(0xdb8e, { 0xd3, 0xca });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xdb90, gbc.sp());
        EXPECT(0x814f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x814e));
        EXPECT(0xd3, gbc.readMem(0xdb8e));
        EXPECT(0xca, gbc.readMem(0xdb8f));
        // F1 033B
        gbc.setState(0x65e5, 0x264c, 0x8c40, 0xc82f, 0x183d, 0x4cf7, 0x0, 0x0);
        gbc.writeMem(0x264c, { 0x7d, 0xc0 });
        gbc.writeMem(0x65e5, { 0xf1 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x264e, gbc.sp());
        EXPECT(0x65e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 033C
        gbc.setState(0xf6f, 0xab4d, 0xece0, 0x949d, 0x2d88, 0x8b2b, 0x1, 0x0);
        gbc.writeMem(0xf6f, { 0xf1 });
        gbc.writeMem(0xab4d, { 0x5, 0x16 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xab4f, gbc.sp());
        EXPECT(0xf70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xab4d));
        EXPECT(0x16, gbc.readMem(0xab4e));
        // F1 033D
        gbc.setState(0x2ea7, 0x591e, 0xd3a0, 0x16fd, 0xdfe8, 0x5be, 0x1, 0x0);
        gbc.writeMem(0x2ea7, { 0xf1 });
        gbc.writeMem(0x591e, { 0x5d, 0x2c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x5920, gbc.sp());
        EXPECT(0x2ea8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 033E
        gbc.setState(0xb8d2, 0xa8a4, 0x1bf0, 0xbd5f, 0xc34c, 0xefae, 0x0, 0x0);
        gbc.writeMem(0xa8a4, { 0x6d, 0xc7 });
        gbc.writeMem(0xb8d2, { 0xf1 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa8a6, gbc.sp());
        EXPECT(0xb8d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xa8a4));
        EXPECT(0xc7, gbc.readMem(0xa8a5));
        EXPECT(0xf1, gbc.readMem(0xb8d2));
        // F1 033F
        gbc.setState(0x41a9, 0x427d, 0xfe50, 0x1271, 0xdbd6, 0x62f9, 0x0, 0x0);
        gbc.writeMem(0x41a9, { 0xf1 });
        gbc.writeMem(0x427d, { 0xf8, 0xa7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x427f, gbc.sp());
        EXPECT(0x41aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 0340
        gbc.setState(0x1fca, 0x8a6d, 0x2fa0, 0x7783, 0xd044, 0xac92, 0x1, 0x1);
        gbc.writeMem(0x1fca, { 0xf1 });
        gbc.writeMem(0x8a6d, { 0x7a, 0x60 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x8a6f, gbc.sp());
        EXPECT(0x1fcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x8a6d));
        EXPECT(0x60, gbc.readMem(0x8a6e));
        // F1 0341
        gbc.setState(0xbaaa, 0x461d, 0x1f90, 0x728, 0x9099, 0xc314, 0x1, 0x0);
        gbc.writeMem(0x461d, { 0x1f, 0x6d });
        gbc.writeMem(0xbaaa, { 0xf1 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x461f, gbc.sp());
        EXPECT(0xbaab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xbaaa));
        // F1 0342
        gbc.setState(0x4ec2, 0xe395, 0xa6a0, 0xb8dd, 0x904c, 0xce5f, 0x1, 0x1);
        gbc.writeMem(0x4ec2, { 0xf1 });
        gbc.writeMem(0xe395, { 0x5e, 0x68 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xe397, gbc.sp());
        EXPECT(0x4ec3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xe395));
        EXPECT(0x68, gbc.readMem(0xe396));
        // F1 0344
        gbc.setState(0x8a76, 0x4a8d, 0xc050, 0x6f8c, 0xd1d4, 0x1791, 0x0, 0x0);
        gbc.writeMem(0x4a8d, { 0x7e, 0x73 });
        gbc.writeMem(0x8a76, { 0xf1 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x4a8f, gbc.sp());
        EXPECT(0x8a77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8a76));
        // F1 0345
        gbc.setState(0x2f28, 0x7b87, 0x9690, 0xcc88, 0x4718, 0x3313, 0x0, 0x0);
        gbc.writeMem(0x2f28, { 0xf1 });
        gbc.writeMem(0x7b87, { 0xe4, 0xad });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7b89, gbc.sp());
        EXPECT(0x2f29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0346
        gbc.setState(0xaeb8, 0x638e, 0xd6e0, 0xe8dc, 0xfaaf, 0xc7ef, 0x1, 0x0);
        gbc.writeMem(0x638e, { 0x92, 0x8a });
        gbc.writeMem(0xaeb8, { 0xf1 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x6390, gbc.sp());
        EXPECT(0xaeb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xaeb8));
        // F1 0347
        gbc.setState(0x4e1d, 0xa9ab, 0x43d0, 0x11ae, 0x667a, 0xcae3, 0x1, 0x1);
        gbc.writeMem(0x4e1d, { 0xf1 });
        gbc.writeMem(0xa9ab, { 0x4, 0x8 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa9ad, gbc.sp());
        EXPECT(0x4e1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xa9ab));
        EXPECT(0x8, gbc.readMem(0xa9ac));
        // F1 0348
        gbc.setState(0xaedf, 0xf267, 0x6490, 0x1d32, 0x34a7, 0x498a, 0x0, 0x0);
        gbc.writeMem(0xaedf, { 0xf1 });
        gbc.writeMem(0xf267, { 0xb1, 0x24 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf269, gbc.sp());
        EXPECT(0xaee0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xaedf));
        EXPECT(0xb1, gbc.readMem(0xf267));
        EXPECT(0x24, gbc.readMem(0xf268));
        // F1 0349
        gbc.setState(0x1b9a, 0xf376, 0x9840, 0xd8b1, 0x6d57, 0x4784, 0x0, 0x0);
        gbc.writeMem(0x1b9a, { 0xf1 });
        gbc.writeMem(0xf376, { 0xd1, 0x19 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xf378, gbc.sp());
        EXPECT(0x1b9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xf376));
        EXPECT(0x19, gbc.readMem(0xf377));
        // F1 034A
        gbc.setState(0x35cc, 0x8f2a, 0x6fe0, 0x90da, 0xf291, 0xf373, 0x1, 0x1);
        gbc.writeMem(0x35cc, { 0xf1 });
        gbc.writeMem(0x8f2a, { 0x63, 0xf9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x8f2c, gbc.sp());
        EXPECT(0x35cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0x8f2a));
        EXPECT(0xf9, gbc.readMem(0x8f2b));
        // F1 034B
        gbc.setState(0xd171, 0x18ff, 0x7ef0, 0xa6cb, 0xbe15, 0xf21c, 0x0, 0x1);
        gbc.writeMem(0x18ff, { 0x1a, 0x11 });
        gbc.writeMem(0xd171, { 0xf1 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x1901, gbc.sp());
        EXPECT(0xd172, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xd171));
        // F1 034C
        gbc.setState(0xa7a2, 0x1f1d, 0x7120, 0xa5f5, 0xf310, 0xa027, 0x0, 0x1);
        gbc.writeMem(0x1f1d, { 0xc4, 0xa6 });
        gbc.writeMem(0xa7a2, { 0xf1 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x1f1f, gbc.sp());
        EXPECT(0xa7a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xa7a2));
        // F1 034D
        gbc.setState(0x26e9, 0x1e4a, 0xa2e0, 0x315b, 0x6ed4, 0x9c9d, 0x1, 0x1);
        gbc.writeMem(0x1e4a, { 0xf8, 0x1f });
        gbc.writeMem(0x26e9, { 0xf1 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x1e4c, gbc.sp());
        EXPECT(0x26ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 034E
        gbc.setState(0xbb44, 0xf097, 0xe190, 0x2c7b, 0xf839, 0x89b0, 0x1, 0x0);
        gbc.writeMem(0xbb44, { 0xf1 });
        gbc.writeMem(0xf097, { 0xe6, 0xa7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf099, gbc.sp());
        EXPECT(0xbb45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xbb44));
        EXPECT(0xe6, gbc.readMem(0xf097));
        EXPECT(0xa7, gbc.readMem(0xf098));
        // F1 034F
        gbc.setState(0xa088, 0xd418, 0x9130, 0xfa69, 0xcec9, 0x6f70, 0x1, 0x0);
        gbc.writeMem(0xa088, { 0xf1 });
        gbc.writeMem(0xd418, { 0x9c, 0x69 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xd41a, gbc.sp());
        EXPECT(0xa089, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xa088));
        EXPECT(0x9c, gbc.readMem(0xd418));
        EXPECT(0x69, gbc.readMem(0xd419));
        // F1 0350
        gbc.setState(0x96e1, 0xbdf8, 0x8b90, 0xfaa7, 0xd634, 0x22f8, 0x1, 0x0);
        gbc.writeMem(0x96e1, { 0xf1 });
        gbc.writeMem(0xbdf8, { 0x29, 0xb });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xbdfa, gbc.sp());
        EXPECT(0x96e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x96e1));
        EXPECT(0x29, gbc.readMem(0xbdf8));
        EXPECT(0xb, gbc.readMem(0xbdf9));
        // F1 0351
        gbc.setState(0xed58, 0x1e61, 0xfed0, 0x7fac, 0xe3ba, 0x7473, 0x1, 0x1);
        gbc.writeMem(0x1e61, { 0x25, 0x89 });
        gbc.writeMem(0xed58, { 0xf1 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x1e63, gbc.sp());
        EXPECT(0xed59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xed58));
        // F1 0352
        gbc.setState(0xc2cb, 0x6ba2, 0x910, 0x2c9d, 0x94b, 0x5184, 0x1, 0x1);
        gbc.writeMem(0x6ba2, { 0x8a, 0x43 });
        gbc.writeMem(0xc2cb, { 0xf1 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6ba4, gbc.sp());
        EXPECT(0xc2cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xc2cb));
        // F1 0353
        gbc.setState(0x3617, 0x8774, 0x7500, 0x370e, 0x45fe, 0xf4a0, 0x1, 0x0);
        gbc.writeMem(0x3617, { 0xf1 });
        gbc.writeMem(0x8774, { 0xaf, 0x36 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x8776, gbc.sp());
        EXPECT(0x3618, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0x8774));
        EXPECT(0x36, gbc.readMem(0x8775));
        // F1 0354
        gbc.setState(0x6dbe, 0x217, 0x6870, 0xb80d, 0xf02f, 0x85cf, 0x0, 0x0);
        gbc.writeMem(0x217, { 0xcb, 0x3d });
        gbc.writeMem(0x6dbe, { 0xf1 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x219, gbc.sp());
        EXPECT(0x6dbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0355
        gbc.setState(0xa563, 0xf194, 0xf7d0, 0x656b, 0x9ae1, 0x515, 0x0, 0x0);
        gbc.writeMem(0xa563, { 0xf1 });
        gbc.writeMem(0xf194, { 0x5b, 0x56 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xf196, gbc.sp());
        EXPECT(0xa564, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xa563));
        EXPECT(0x5b, gbc.readMem(0xf194));
        EXPECT(0x56, gbc.readMem(0xf195));
        // F1 0356
        gbc.setState(0xa97e, 0x30ff, 0x59d0, 0x713f, 0x598e, 0xb094, 0x0, 0x1);
        gbc.writeMem(0x30ff, { 0x2a, 0xae });
        gbc.writeMem(0xa97e, { 0xf1 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x3101, gbc.sp());
        EXPECT(0xa97f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xa97e));
        // F1 0357
        gbc.setState(0x927b, 0x4c19, 0x5740, 0xb199, 0xab3c, 0xae56, 0x0, 0x0);
        gbc.writeMem(0x4c19, { 0xcc, 0x49 });
        gbc.writeMem(0x927b, { 0xf1 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x4c1b, gbc.sp());
        EXPECT(0x927c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x927b));
        // F1 0358
        gbc.setState(0xb26c, 0x1cd6, 0xae10, 0x869b, 0x6244, 0xc88c, 0x0, 0x1);
        gbc.writeMem(0x1cd6, { 0x1b, 0xca });
        gbc.writeMem(0xb26c, { 0xf1 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x1cd8, gbc.sp());
        EXPECT(0xb26d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xb26c));
        // F1 0359
        gbc.setState(0x4bb1, 0xf70f, 0x8430, 0xa668, 0xc24e, 0x689d, 0x0, 0x0);
        gbc.writeMem(0x4bb1, { 0xf1 });
        gbc.writeMem(0xf70f, { 0x78, 0x33 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xf711, gbc.sp());
        EXPECT(0x4bb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xf70f));
        EXPECT(0x33, gbc.readMem(0xf710));
        // F1 035A
        gbc.setState(0x351f, 0xe934, 0x5130, 0x37aa, 0x6dda, 0x5c12, 0x0, 0x0);
        gbc.writeMem(0x351f, { 0xf1 });
        gbc.writeMem(0xe934, { 0x1d, 0xc8 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe936, gbc.sp());
        EXPECT(0x3520, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xe934));
        EXPECT(0xc8, gbc.readMem(0xe935));
        // F1 035B
        gbc.setState(0xd5d7, 0xcb0a, 0xbc70, 0x46a5, 0xa37c, 0xd904, 0x1, 0x1);
        gbc.writeMem(0xcb0a, { 0x5b, 0xa7 });
        gbc.writeMem(0xd5d7, { 0xf1 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xcb0c, gbc.sp());
        EXPECT(0xd5d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xcb0a));
        EXPECT(0xa7, gbc.readMem(0xcb0b));
        EXPECT(0xf1, gbc.readMem(0xd5d7));
        // F1 035C
        gbc.setState(0x301, 0xe96, 0x14b0, 0x9a1d, 0x79d5, 0x142b, 0x1, 0x0);
        gbc.writeMem(0x301, { 0xf1 });
        gbc.writeMem(0xe96, { 0x35, 0x10 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xe98, gbc.sp());
        EXPECT(0x302, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 035E
        gbc.setState(0x71df, 0x155b, 0x6f0, 0x6b81, 0x52eb, 0x805c, 0x1, 0x0);
        gbc.writeMem(0x155b, { 0x43, 0xf2 });
        gbc.writeMem(0x71df, { 0xf1 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x155d, gbc.sp());
        EXPECT(0x71e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0360
        gbc.setState(0xdec1, 0x3a63, 0x9810, 0x12b5, 0x6a06, 0x825f, 0x0, 0x0);
        gbc.writeMem(0x3a63, { 0xdd, 0x94 });
        gbc.writeMem(0xdec1, { 0xf1 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x3a65, gbc.sp());
        EXPECT(0xdec2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xdec1));
        // F1 0361
        gbc.setState(0x67fc, 0xc11e, 0xe720, 0x9a49, 0x368c, 0x69a8, 0x0, 0x1);
        gbc.writeMem(0x67fc, { 0xf1 });
        gbc.writeMem(0xc11e, { 0x6d, 0xae });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xc120, gbc.sp());
        EXPECT(0x67fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xc11e));
        EXPECT(0xae, gbc.readMem(0xc11f));
        // F1 0362
        gbc.setState(0x79dd, 0xebd8, 0x41a0, 0xe088, 0x67ce, 0xd099, 0x0, 0x0);
        gbc.writeMem(0x79dd, { 0xf1 });
        gbc.writeMem(0xebd8, { 0x10, 0x65 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xebda, gbc.sp());
        EXPECT(0x79de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xebd8));
        EXPECT(0x65, gbc.readMem(0xebd9));
        // F1 0363
        gbc.setState(0x54b3, 0xf0b4, 0x4a60, 0x20e0, 0xbce2, 0x6326, 0x0, 0x1);
        gbc.writeMem(0x54b3, { 0xf1 });
        gbc.writeMem(0xf0b4, { 0xd8, 0xc7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf0b6, gbc.sp());
        EXPECT(0x54b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xf0b4));
        EXPECT(0xc7, gbc.readMem(0xf0b5));
        // F1 0364
        gbc.setState(0x8ede, 0xa92c, 0x32a0, 0x8277, 0x9c16, 0xcaf0, 0x0, 0x0);
        gbc.writeMem(0x8ede, { 0xf1 });
        gbc.writeMem(0xa92c, { 0xc5, 0x8c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa92e, gbc.sp());
        EXPECT(0x8edf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8ede));
        EXPECT(0xc5, gbc.readMem(0xa92c));
        EXPECT(0x8c, gbc.readMem(0xa92d));
        // F1 0366
        gbc.setState(0xbcaf, 0x31b3, 0x6750, 0x62c0, 0xbeb8, 0xbb69, 0x0, 0x1);
        gbc.writeMem(0x31b3, { 0xd1, 0x35 });
        gbc.writeMem(0xbcaf, { 0xf1 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x31b5, gbc.sp());
        EXPECT(0xbcb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xbcaf));
        // F1 0367
        gbc.setState(0x7f89, 0x2363, 0xb570, 0x26ac, 0x1c55, 0x1db7, 0x0, 0x1);
        gbc.writeMem(0x2363, { 0x8e, 0x65 });
        gbc.writeMem(0x7f89, { 0xf1 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x2365, gbc.sp());
        EXPECT(0x7f8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0368
        gbc.setState(0x7287, 0x8299, 0x8dd0, 0xb1ac, 0x7ee3, 0xe281, 0x0, 0x0);
        gbc.writeMem(0x7287, { 0xf1 });
        gbc.writeMem(0x8299, { 0xc4, 0xcb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x829b, gbc.sp());
        EXPECT(0x7288, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0x8299));
        EXPECT(0xcb, gbc.readMem(0x829a));
        // F1 0369
        gbc.setState(0xe998, 0x2368, 0xad20, 0xa2e8, 0x1e9a, 0x4365, 0x1, 0x1);
        gbc.writeMem(0x2368, { 0xe3, 0x69 });
        gbc.writeMem(0xe998, { 0xf1 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x236a, gbc.sp());
        EXPECT(0xe999, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xe998));
        // F1 036A
        gbc.setState(0x3cda, 0x5835, 0x5cc0, 0xa3cb, 0x316b, 0xa06e, 0x0, 0x1);
        gbc.writeMem(0x3cda, { 0xf1 });
        gbc.writeMem(0x5835, { 0xe6, 0x5f });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x5837, gbc.sp());
        EXPECT(0x3cdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 036D
        gbc.setState(0xc61f, 0x56a0, 0xcad0, 0x95ac, 0x6648, 0x313c, 0x1, 0x1);
        gbc.writeMem(0x56a0, { 0xcc, 0xb });
        gbc.writeMem(0xc61f, { 0xf1 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x56a2, gbc.sp());
        EXPECT(0xc620, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xc61f));
        // F1 036E
        gbc.setState(0x9bde, 0xe728, 0x2450, 0x8694, 0x96e0, 0xe92a, 0x1, 0x0);
        gbc.writeMem(0x9bde, { 0xf1 });
        gbc.writeMem(0xe728, { 0xe5, 0x9d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xe72a, gbc.sp());
        EXPECT(0x9bdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x9bde));
        EXPECT(0xe5, gbc.readMem(0xe728));
        EXPECT(0x9d, gbc.readMem(0xe729));
        // F1 036F
        gbc.setState(0x7d85, 0xb015, 0xaf30, 0x83c7, 0xa6e0, 0xddc3, 0x1, 0x0);
        gbc.writeMem(0x7d85, { 0xf1 });
        gbc.writeMem(0xb015, { 0xb2, 0xe0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xb017, gbc.sp());
        EXPECT(0x7d86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xb015));
        EXPECT(0xe0, gbc.readMem(0xb016));
        // F1 0370
        gbc.setState(0x602f, 0x62af, 0x800, 0x8b50, 0x583d, 0x722c, 0x1, 0x1);
        gbc.writeMem(0x602f, { 0xf1 });
        gbc.writeMem(0x62af, { 0xf5, 0x9d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x62b1, gbc.sp());
        EXPECT(0x6030, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 0371
        gbc.setState(0xd222, 0x3279, 0xa810, 0x5ab7, 0x253f, 0x891, 0x0, 0x1);
        gbc.writeMem(0x3279, { 0x40, 0x74 });
        gbc.writeMem(0xd222, { 0xf1 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x327b, gbc.sp());
        EXPECT(0xd223, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xd222));
        // F1 0372
        gbc.setState(0x87b3, 0x4147, 0x3c60, 0xe151, 0xa243, 0x3ff6, 0x1, 0x1);
        gbc.writeMem(0x4147, { 0x5a, 0xad });
        gbc.writeMem(0x87b3, { 0xf1 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x4149, gbc.sp());
        EXPECT(0x87b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x87b3));
        // F1 0373
        gbc.setState(0xcb94, 0xadf1, 0x5a20, 0xa2ea, 0x690e, 0x20ff, 0x0, 0x1);
        gbc.writeMem(0xadf1, { 0xa7, 0x7b });
        gbc.writeMem(0xcb94, { 0xf1 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xadf3, gbc.sp());
        EXPECT(0xcb95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xadf1));
        EXPECT(0x7b, gbc.readMem(0xadf2));
        EXPECT(0xf1, gbc.readMem(0xcb94));
        // F1 0374
        gbc.setState(0x51de, 0x390e, 0x72d0, 0xa92, 0xc60a, 0x39bb, 0x1, 0x0);
        gbc.writeMem(0x390e, { 0x7, 0x2f });
        gbc.writeMem(0x51de, { 0xf1 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3910, gbc.sp());
        EXPECT(0x51df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0375
        gbc.setState(0xd57a, 0x65f8, 0x4b30, 0x733f, 0x75e, 0xe491, 0x0, 0x1);
        gbc.writeMem(0x65f8, { 0x5b, 0xcb });
        gbc.writeMem(0xd57a, { 0xf1 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x65fa, gbc.sp());
        EXPECT(0xd57b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xd57a));
        // F1 0376
        gbc.setState(0xdf5e, 0x256f, 0xb7c0, 0xda70, 0xc18e, 0xe0d9, 0x1, 0x0);
        gbc.writeMem(0x256f, { 0x58, 0x83 });
        gbc.writeMem(0xdf5e, { 0xf1 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x2571, gbc.sp());
        EXPECT(0xdf5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xdf5e));
        // F1 0377
        gbc.setState(0x8a99, 0x17b0, 0x9ca0, 0x5832, 0x91d5, 0x362b, 0x0, 0x0);
        gbc.writeMem(0x17b0, { 0x63, 0x33 });
        gbc.writeMem(0x8a99, { 0xf1 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x17b2, gbc.sp());
        EXPECT(0x8a9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8a99));
        // F1 0378
        gbc.setState(0x450a, 0x719, 0xdef0, 0x5289, 0xa4f2, 0x5898, 0x1, 0x1);
        gbc.writeMem(0x719, { 0x13, 0x1f });
        gbc.writeMem(0x450a, { 0xf1 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x71b, gbc.sp());
        EXPECT(0x450b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 0379
        gbc.setState(0xd653, 0x4556, 0x4b80, 0x1fe2, 0xb809, 0x9bd9, 0x0, 0x0);
        gbc.writeMem(0x4556, { 0xcf, 0x3 });
        gbc.writeMem(0xd653, { 0xf1 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x4558, gbc.sp());
        EXPECT(0xd654, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xd653));
        // F1 037A
        gbc.setState(0x23ff, 0xddeb, 0xc520, 0x195c, 0xc3bf, 0x2604, 0x1, 0x1);
        gbc.writeMem(0x23ff, { 0xf1 });
        gbc.writeMem(0xddeb, { 0x5, 0xa4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xdded, gbc.sp());
        EXPECT(0x2400, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xddeb));
        EXPECT(0xa4, gbc.readMem(0xddec));
        // F1 037B
        gbc.setState(0xc564, 0xe483, 0xee30, 0xe0ec, 0xa294, 0xe79, 0x1, 0x0);
        gbc.writeMem(0xc564, { 0xf1 });
        gbc.writeMem(0xe483, { 0xde, 0x68 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xe485, gbc.sp());
        EXPECT(0xc565, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xc564));
        EXPECT(0xde, gbc.readMem(0xe483));
        EXPECT(0x68, gbc.readMem(0xe484));
        // F1 037C
        gbc.setState(0xc3bc, 0x117c, 0x6d60, 0xf781, 0xb426, 0xb726, 0x1, 0x1);
        gbc.writeMem(0x117c, { 0x34, 0x32 });
        gbc.writeMem(0xc3bc, { 0xf1 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x117e, gbc.sp());
        EXPECT(0xc3bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xc3bc));
        // F1 037D
        gbc.setState(0x1db9, 0xde21, 0xef80, 0xed3a, 0x2468, 0x8d6c, 0x1, 0x1);
        gbc.writeMem(0x1db9, { 0xf1 });
        gbc.writeMem(0xde21, { 0xc7, 0x20 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xde23, gbc.sp());
        EXPECT(0x1dba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xde21));
        EXPECT(0x20, gbc.readMem(0xde22));
        // F1 037E
        gbc.setState(0x1594, 0xece3, 0x38d0, 0xec3e, 0xc806, 0xab52, 0x1, 0x1);
        gbc.writeMem(0x1594, { 0xf1 });
        gbc.writeMem(0xece3, { 0x66, 0xf8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xece5, gbc.sp());
        EXPECT(0x1595, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xece3));
        EXPECT(0xf8, gbc.readMem(0xece4));
        // F1 037F
        gbc.setState(0x727e, 0xd449, 0xf80, 0xc2f9, 0xbc1, 0x6942, 0x1, 0x0);
        gbc.writeMem(0x727e, { 0xf1 });
        gbc.writeMem(0xd449, { 0xbb, 0x72 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xd44b, gbc.sp());
        EXPECT(0x727f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xd449));
        EXPECT(0x72, gbc.readMem(0xd44a));
        // F1 0380
        gbc.setState(0x395d, 0x9cb5, 0x9730, 0xaf9c, 0xd376, 0xf20d, 0x1, 0x1);
        gbc.writeMem(0x395d, { 0xf1 });
        gbc.writeMem(0x9cb5, { 0xbc, 0x50 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9cb7, gbc.sp());
        EXPECT(0x395e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9cb5));
        EXPECT(0x50, gbc.readMem(0x9cb6));
        // F1 0381
        gbc.setState(0x3ddc, 0x5709, 0xa5a0, 0xe059, 0x3487, 0x4752, 0x1, 0x1);
        gbc.writeMem(0x3ddc, { 0xf1 });
        gbc.writeMem(0x5709, { 0xb2, 0x1b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x570b, gbc.sp());
        EXPECT(0x3ddd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 0382
        gbc.setState(0xab63, 0x1c9a, 0xc5b0, 0xfac4, 0x5a4a, 0x277, 0x0, 0x1);
        gbc.writeMem(0x1c9a, { 0xa4, 0xd3 });
        gbc.writeMem(0xab63, { 0xf1 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x1c9c, gbc.sp());
        EXPECT(0xab64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xab63));
        // F1 0383
        gbc.setState(0x5ef7, 0x649a, 0xb9d0, 0x7113, 0x66c5, 0x3389, 0x1, 0x1);
        gbc.writeMem(0x5ef7, { 0xf1 });
        gbc.writeMem(0x649a, { 0x66, 0x86 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x649c, gbc.sp());
        EXPECT(0x5ef8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0384
        gbc.setState(0x648d, 0xc8f0, 0x5d10, 0x64ac, 0xfd2f, 0x3da4, 0x1, 0x1);
        gbc.writeMem(0x648d, { 0xf1 });
        gbc.writeMem(0xc8f0, { 0xa1, 0xa0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xc8f2, gbc.sp());
        EXPECT(0x648e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xc8f0));
        EXPECT(0xa0, gbc.readMem(0xc8f1));
        // F1 0385
        gbc.setState(0x120c, 0xe838, 0x4640, 0x3849, 0xf397, 0x3cf, 0x0, 0x0);
        gbc.writeMem(0x120c, { 0xf1 });
        gbc.writeMem(0xe838, { 0xcf, 0x46 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xe83a, gbc.sp());
        EXPECT(0x120d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xe838));
        EXPECT(0x46, gbc.readMem(0xe839));
        // F1 0386
        gbc.setState(0x1996, 0x78b3, 0x1ce0, 0x1d6f, 0x6c72, 0x9a2b, 0x0, 0x0);
        gbc.writeMem(0x1996, { 0xf1 });
        gbc.writeMem(0x78b3, { 0xda, 0xae });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x78b5, gbc.sp());
        EXPECT(0x1997, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 0387
        gbc.setState(0x15a5, 0x158e, 0xf820, 0xf545, 0xa153, 0xb88a, 0x0, 0x0);
        gbc.writeMem(0x158e, { 0xb0, 0x6b });
        gbc.writeMem(0x15a5, { 0xf1 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x1590, gbc.sp());
        EXPECT(0x15a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 0388
        gbc.setState(0x404d, 0x7fb0, 0x1050, 0x281f, 0xbdb4, 0x206a, 0x0, 0x1);
        gbc.writeMem(0x404d, { 0xf1 });
        gbc.writeMem(0x7fb0, { 0x81, 0x60 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x7fb2, gbc.sp());
        EXPECT(0x404e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0389
        gbc.setState(0x3b8c, 0xdf0d, 0xd240, 0xbea8, 0xe7fd, 0xf3c7, 0x0, 0x0);
        gbc.writeMem(0x3b8c, { 0xf1 });
        gbc.writeMem(0xdf0d, { 0xc3, 0xab });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xdf0f, gbc.sp());
        EXPECT(0x3b8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xdf0d));
        EXPECT(0xab, gbc.readMem(0xdf0e));
        // F1 038A
        gbc.setState(0xc25f, 0x4c15, 0xb410, 0x426b, 0x38b7, 0x9d95, 0x0, 0x0);
        gbc.writeMem(0x4c15, { 0x8, 0x9a });
        gbc.writeMem(0xc25f, { 0xf1 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4c17, gbc.sp());
        EXPECT(0xc260, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xc25f));
        // F1 038B
        gbc.setState(0xbed6, 0x3e57, 0x2440, 0x9794, 0x1e38, 0x7f65, 0x1, 0x1);
        gbc.writeMem(0x3e57, { 0x7, 0xc3 });
        gbc.writeMem(0xbed6, { 0xf1 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x3e59, gbc.sp());
        EXPECT(0xbed7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xbed6));
        // F1 038C
        gbc.setState(0x6df8, 0x2401, 0x3ed0, 0xcaaa, 0xacf0, 0x2df6, 0x1, 0x0);
        gbc.writeMem(0x2401, { 0xed, 0xd5 });
        gbc.writeMem(0x6df8, { 0xf1 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x2403, gbc.sp());
        EXPECT(0x6df9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 038F
        gbc.setState(0xee8e, 0xd9d2, 0xa580, 0xefa, 0x4868, 0xab54, 0x1, 0x0);
        gbc.writeMem(0xd9d2, { 0x13, 0xab });
        gbc.writeMem(0xee8e, { 0xf1 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xd9d4, gbc.sp());
        EXPECT(0xee8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xd9d2));
        EXPECT(0xab, gbc.readMem(0xd9d3));
        EXPECT(0xf1, gbc.readMem(0xee8e));
        // F1 0390
        gbc.setState(0xee51, 0x902f, 0x66a0, 0x6f9d, 0x697a, 0xba23, 0x1, 0x1);
        gbc.writeMem(0x902f, { 0x31, 0xb6 });
        gbc.writeMem(0xee51, { 0xf1 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x9031, gbc.sp());
        EXPECT(0xee52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x902f));
        EXPECT(0xb6, gbc.readMem(0x9030));
        EXPECT(0xf1, gbc.readMem(0xee51));
        // F1 0391
        gbc.setState(0x8ebe, 0x4907, 0xcfe0, 0xb597, 0x3846, 0xaf41, 0x0, 0x0);
        gbc.writeMem(0x4907, { 0x9, 0xa6 });
        gbc.writeMem(0x8ebe, { 0xf1 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x4909, gbc.sp());
        EXPECT(0x8ebf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8ebe));
        // F1 0392
        gbc.setState(0xe57c, 0xf36d, 0x5b00, 0xe7f0, 0x3109, 0xf0fb, 0x1, 0x0);
        gbc.writeMem(0xe57c, { 0xf1 });
        gbc.writeMem(0xf36d, { 0xdc, 0x5e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf36f, gbc.sp());
        EXPECT(0xe57d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xe57c));
        EXPECT(0xdc, gbc.readMem(0xf36d));
        EXPECT(0x5e, gbc.readMem(0xf36e));
        // F1 0393
        gbc.setState(0x5586, 0x50f9, 0xa350, 0x49ee, 0x1216, 0xcb1, 0x0, 0x0);
        gbc.writeMem(0x50f9, { 0x24, 0x65 });
        gbc.writeMem(0x5586, { 0xf1 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x50fb, gbc.sp());
        EXPECT(0x5587, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0394
        gbc.setState(0xa0b4, 0x967c, 0xf0b0, 0x89a2, 0xe028, 0x2e71, 0x0, 0x1);
        gbc.writeMem(0x967c, { 0x5c, 0xd8 });
        gbc.writeMem(0xa0b4, { 0xf1 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x967e, gbc.sp());
        EXPECT(0xa0b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0x967c));
        EXPECT(0xd8, gbc.readMem(0x967d));
        EXPECT(0xf1, gbc.readMem(0xa0b4));
        // F1 0395
        gbc.setState(0xe0e3, 0x56a4, 0xf140, 0xed, 0xcd55, 0xc81b, 0x1, 0x1);
        gbc.writeMem(0x56a4, { 0x6e, 0x72 });
        gbc.writeMem(0xe0e3, { 0xf1 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x56a6, gbc.sp());
        EXPECT(0xe0e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xe0e3));
        // F1 0396
        gbc.setState(0xb69b, 0x19f9, 0xf6e0, 0x74f9, 0x225e, 0x4a25, 0x1, 0x0);
        gbc.writeMem(0x19f9, { 0x5a, 0xc4 });
        gbc.writeMem(0xb69b, { 0xf1 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x19fb, gbc.sp());
        EXPECT(0xb69c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xb69b));
        // F1 0397
        gbc.setState(0x5946, 0xfbd2, 0x4cf0, 0xd431, 0x78d9, 0x7b3c, 0x1, 0x1);
        gbc.writeMem(0x5946, { 0xf1 });
        gbc.writeMem(0xfbd2, { 0xfc, 0x44 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xfbd4, gbc.sp());
        EXPECT(0x5947, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xfbd2));
        EXPECT(0x44, gbc.readMem(0xfbd3));
        // F1 0398
        gbc.setState(0x623d, 0x5212, 0x9c00, 0x4b21, 0xc41c, 0x8fe3, 0x1, 0x1);
        gbc.writeMem(0x5212, { 0xca, 0xd3 });
        gbc.writeMem(0x623d, { 0xf1 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x5214, gbc.sp());
        EXPECT(0x623e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 0399
        gbc.setState(0x4609, 0x3aa4, 0xcb90, 0x3b92, 0x682f, 0x32bb, 0x0, 0x1);
        gbc.writeMem(0x3aa4, { 0xe8, 0x53 });
        gbc.writeMem(0x4609, { 0xf1 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3aa6, gbc.sp());
        EXPECT(0x460a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 039B
        gbc.setState(0xcee, 0xcc50, 0x6950, 0xc507, 0xa2bf, 0x841f, 0x0, 0x0);
        gbc.writeMem(0xcee, { 0xf1 });
        gbc.writeMem(0xcc50, { 0x6e, 0x1d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xcc52, gbc.sp());
        EXPECT(0xcef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xcc50));
        EXPECT(0x1d, gbc.readMem(0xcc51));
        // F1 039C
        gbc.setState(0xc6b5, 0xdc36, 0xc320, 0x7d97, 0x1ecb, 0x22ea, 0x0, 0x1);
        gbc.writeMem(0xc6b5, { 0xf1 });
        gbc.writeMem(0xdc36, { 0xd1, 0x38 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xdc38, gbc.sp());
        EXPECT(0xc6b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xc6b5));
        EXPECT(0xd1, gbc.readMem(0xdc36));
        EXPECT(0x38, gbc.readMem(0xdc37));
        // F1 039E
        gbc.setState(0x586c, 0x9528, 0xffa0, 0xd5f, 0xb896, 0xee64, 0x1, 0x1);
        gbc.writeMem(0x586c, { 0xf1 });
        gbc.writeMem(0x9528, { 0xf5, 0x12 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x952a, gbc.sp());
        EXPECT(0x586d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x9528));
        EXPECT(0x12, gbc.readMem(0x9529));
        // F1 039F
        gbc.setState(0xe16f, 0x4a23, 0x5f10, 0x85ad, 0xa4e5, 0xf057, 0x1, 0x0);
        gbc.writeMem(0x4a23, { 0x75, 0x5a });
        gbc.writeMem(0xe16f, { 0xf1 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x4a25, gbc.sp());
        EXPECT(0xe170, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xe16f));
        // F1 03A2
        gbc.setState(0x4ae3, 0xcf49, 0xcd20, 0x1002, 0x79e0, 0x6cd3, 0x1, 0x1);
        gbc.writeMem(0x4ae3, { 0xf1 });
        gbc.writeMem(0xcf49, { 0xd3, 0x21 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xcf4b, gbc.sp());
        EXPECT(0x4ae4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xcf49));
        EXPECT(0x21, gbc.readMem(0xcf4a));
        // F1 03A4
        gbc.setState(0x537, 0x8d8c, 0x9540, 0xe85c, 0x7cf2, 0xb09d, 0x0, 0x1);
        gbc.writeMem(0x537, { 0xf1 });
        gbc.writeMem(0x8d8c, { 0xee, 0xdd });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x8d8e, gbc.sp());
        EXPECT(0x538, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0x8d8c));
        EXPECT(0xdd, gbc.readMem(0x8d8d));
        // F1 03A5
        gbc.setState(0xa4dc, 0x329a, 0xf6a0, 0x1c8b, 0x77a0, 0x3646, 0x0, 0x0);
        gbc.writeMem(0x329a, { 0xd3, 0x43 });
        gbc.writeMem(0xa4dc, { 0xf1 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x329c, gbc.sp());
        EXPECT(0xa4dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xa4dc));
        // F1 03A6
        gbc.setState(0x67fb, 0x5898, 0xee80, 0x4ccd, 0xff3c, 0xf9f2, 0x0, 0x1);
        gbc.writeMem(0x5898, { 0xe5, 0xa9 });
        gbc.writeMem(0x67fb, { 0xf1 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x589a, gbc.sp());
        EXPECT(0x67fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 03A7
        gbc.setState(0x4fb7, 0xc378, 0xda60, 0xab23, 0x29f8, 0xce48, 0x1, 0x0);
        gbc.writeMem(0x4fb7, { 0xf1 });
        gbc.writeMem(0xc378, { 0x1a, 0x2e });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xc37a, gbc.sp());
        EXPECT(0x4fb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xc378));
        EXPECT(0x2e, gbc.readMem(0xc379));
        // F1 03A8
        gbc.setState(0xc5f7, 0x95b, 0x46b0, 0xa980, 0x3605, 0xc0c0, 0x1, 0x0);
        gbc.writeMem(0x95b, { 0x59, 0xd7 });
        gbc.writeMem(0xc5f7, { 0xf1 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x95d, gbc.sp());
        EXPECT(0xc5f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xc5f7));
        // F1 03A9
        gbc.setState(0x49ea, 0x3929, 0x9670, 0x7fb5, 0xc49b, 0x165a, 0x1, 0x1);
        gbc.writeMem(0x3929, { 0xf1, 0x3d });
        gbc.writeMem(0x49ea, { 0xf1 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x392b, gbc.sp());
        EXPECT(0x49eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 03AA
        gbc.setState(0x32f3, 0x169, 0x9fd0, 0xffbd, 0xdbfa, 0x6063, 0x0, 0x0);
        gbc.writeMem(0x169, { 0xe1, 0xe6 });
        gbc.writeMem(0x32f3, { 0xf1 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x16b, gbc.sp());
        EXPECT(0x32f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 03AB
        gbc.setState(0x8b94, 0x46ef, 0xdac0, 0xe8e5, 0x8d4a, 0xf9b8, 0x1, 0x1);
        gbc.writeMem(0x46ef, { 0x29, 0xdc });
        gbc.writeMem(0x8b94, { 0xf1 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x46f1, gbc.sp());
        EXPECT(0x8b95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8b94));
        // F1 03AC
        gbc.setState(0xe202, 0xbd81, 0xdd40, 0x309f, 0xaf69, 0x828a, 0x0, 0x1);
        gbc.writeMem(0xbd81, { 0xe6, 0x3b });
        gbc.writeMem(0xe202, { 0xf1 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xbd83, gbc.sp());
        EXPECT(0xe203, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xbd81));
        EXPECT(0x3b, gbc.readMem(0xbd82));
        EXPECT(0xf1, gbc.readMem(0xe202));
        // F1 03AD
        gbc.setState(0xd44b, 0xf825, 0x9c30, 0x33a9, 0x4e2d, 0xcb55, 0x0, 0x1);
        gbc.writeMem(0xd44b, { 0xf1 });
        gbc.writeMem(0xf825, { 0xf2, 0x68 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf827, gbc.sp());
        EXPECT(0xd44c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xd44b));
        EXPECT(0xf2, gbc.readMem(0xf825));
        EXPECT(0x68, gbc.readMem(0xf826));
        // F1 03AE
        gbc.setState(0x251f, 0x19e8, 0x5610, 0x76e4, 0x829f, 0x2f51, 0x1, 0x0);
        gbc.writeMem(0x19e8, { 0xc3, 0x1a });
        gbc.writeMem(0x251f, { 0xf1 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x19ea, gbc.sp());
        EXPECT(0x2520, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 03AF
        gbc.setState(0xbfd0, 0x579f, 0xe360, 0x1845, 0xc2c7, 0x890d, 0x0, 0x1);
        gbc.writeMem(0x579f, { 0xb9, 0x43 });
        gbc.writeMem(0xbfd0, { 0xf1 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x57a1, gbc.sp());
        EXPECT(0xbfd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xbfd0));
        // F1 03B0
        gbc.setState(0x2e19, 0x27cd, 0x20, 0xe18b, 0x4a1b, 0xb7d2, 0x1, 0x1);
        gbc.writeMem(0x27cd, { 0xf0, 0x6b });
        gbc.writeMem(0x2e19, { 0xf1 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x27cf, gbc.sp());
        EXPECT(0x2e1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 03B1
        gbc.setState(0xae56, 0x3221, 0xc2b0, 0xab47, 0x16b3, 0xf73f, 0x1, 0x1);
        gbc.writeMem(0x3221, { 0xd8, 0x5b });
        gbc.writeMem(0xae56, { 0xf1 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x3223, gbc.sp());
        EXPECT(0xae57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xae56));
        // F1 03B2
        gbc.setState(0xb7df, 0x2c8f, 0xdd70, 0xf4ca, 0xaaa9, 0xa375, 0x1, 0x0);
        gbc.writeMem(0x2c8f, { 0x42, 0xe8 });
        gbc.writeMem(0xb7df, { 0xf1 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2c91, gbc.sp());
        EXPECT(0xb7e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xb7df));
        // F1 03B4
        gbc.setState(0xd74e, 0x89d8, 0xbd70, 0x52c9, 0xefe2, 0x6c7a, 0x0, 0x1);
        gbc.writeMem(0x89d8, { 0xc0, 0x61 });
        gbc.writeMem(0xd74e, { 0xf1 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x89da, gbc.sp());
        EXPECT(0xd74f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0x89d8));
        EXPECT(0x61, gbc.readMem(0x89d9));
        EXPECT(0xf1, gbc.readMem(0xd74e));
        // F1 03B5
        gbc.setState(0x88e, 0x2725, 0xd310, 0x9429, 0x9961, 0xa59e, 0x1, 0x1);
        gbc.writeMem(0x88e, { 0xf1 });
        gbc.writeMem(0x2725, { 0xda, 0x11 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x2727, gbc.sp());
        EXPECT(0x88f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 03B6
        gbc.setState(0x88a, 0x5ec6, 0xca20, 0x556a, 0x6e7f, 0x9c06, 0x0, 0x1);
        gbc.writeMem(0x88a, { 0xf1 });
        gbc.writeMem(0x5ec6, { 0xc7, 0x38 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x5ec8, gbc.sp());
        EXPECT(0x88b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 03B7
        gbc.setState(0xd831, 0xa206, 0x36f0, 0x8fad, 0x9962, 0xf3ca, 0x1, 0x0);
        gbc.writeMem(0xa206, { 0x11, 0x5a });
        gbc.writeMem(0xd831, { 0xf1 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xa208, gbc.sp());
        EXPECT(0xd832, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xa206));
        EXPECT(0x5a, gbc.readMem(0xa207));
        EXPECT(0xf1, gbc.readMem(0xd831));
        // F1 03B8
        gbc.setState(0x6dd2, 0x986e, 0xdbb0, 0xa49b, 0x21b0, 0x1842, 0x1, 0x0);
        gbc.writeMem(0x6dd2, { 0xf1 });
        gbc.writeMem(0x986e, { 0xb7, 0x50 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x9870, gbc.sp());
        EXPECT(0x6dd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x986e));
        EXPECT(0x50, gbc.readMem(0x986f));
        // F1 03B9
        gbc.setState(0x2a15, 0xf080, 0xab70, 0xbab1, 0xb231, 0x28ae, 0x1, 0x0);
        gbc.writeMem(0x2a15, { 0xf1 });
        gbc.writeMem(0xf080, { 0x9f, 0xf8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf082, gbc.sp());
        EXPECT(0x2a16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xf080));
        EXPECT(0xf8, gbc.readMem(0xf081));
        // F1 03BA
        gbc.setState(0xede4, 0xa9bb, 0x6e60, 0xeec7, 0xc0d6, 0xd98d, 0x1, 0x0);
        gbc.writeMem(0xa9bb, { 0x1e, 0xf9 });
        gbc.writeMem(0xede4, { 0xf1 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa9bd, gbc.sp());
        EXPECT(0xede5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xa9bb));
        EXPECT(0xf9, gbc.readMem(0xa9bc));
        EXPECT(0xf1, gbc.readMem(0xede4));
        // F1 03BB
        gbc.setState(0xbd7b, 0x38f5, 0xe5c0, 0xadf4, 0xc4d2, 0x890c, 0x0, 0x0);
        gbc.writeMem(0x38f5, { 0x69, 0xee });
        gbc.writeMem(0xbd7b, { 0xf1 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x38f7, gbc.sp());
        EXPECT(0xbd7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xbd7b));
        // F1 03BC
        gbc.setState(0x9db, 0x2c46, 0x22e0, 0xaeb5, 0xd532, 0xeac6, 0x1, 0x0);
        gbc.writeMem(0x9db, { 0xf1 });
        gbc.writeMem(0x2c46, { 0xa9, 0x82 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x2c48, gbc.sp());
        EXPECT(0x9dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 03BD
        gbc.setState(0x1d, 0x232b, 0xf6a0, 0xaf03, 0x30e7, 0x5b28, 0x0, 0x1);
        gbc.writeMem(0x1d, { 0xf1 });
        gbc.writeMem(0x232b, { 0xcc, 0x65 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x232d, gbc.sp());
        EXPECT(0x1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 03BE
        gbc.setState(0x8907, 0x722, 0x7160, 0x5716, 0x2e27, 0x58, 0x1, 0x0);
        gbc.writeMem(0x722, { 0xb0, 0x0 });
        gbc.writeMem(0x8907, { 0xf1 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x724, gbc.sp());
        EXPECT(0x8908, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8907));
        // F1 03C0
        gbc.setState(0x225b, 0x439f, 0x8bf0, 0xb9b9, 0x25e, 0x598c, 0x0, 0x1);
        gbc.writeMem(0x225b, { 0xf1 });
        gbc.writeMem(0x439f, { 0x5e, 0x3b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x43a1, gbc.sp());
        EXPECT(0x225c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 03C1
        gbc.setState(0x11d0, 0xc2af, 0xc990, 0x10b0, 0xb278, 0x8c4f, 0x1, 0x0);
        gbc.writeMem(0x11d0, { 0xf1 });
        gbc.writeMem(0xc2af, { 0xff, 0x61 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xc2b1, gbc.sp());
        EXPECT(0x11d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xc2af));
        EXPECT(0x61, gbc.readMem(0xc2b0));
        // F1 03C2
        gbc.setState(0x7e94, 0x3707, 0x5a40, 0x7244, 0x55c8, 0xa528, 0x0, 0x1);
        gbc.writeMem(0x3707, { 0x9d, 0x43 });
        gbc.writeMem(0x7e94, { 0xf1 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3709, gbc.sp());
        EXPECT(0x7e95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 03C3
        gbc.setState(0xe084, 0x512e, 0x24d0, 0xf55f, 0xee94, 0xc015, 0x1, 0x0);
        gbc.writeMem(0x512e, { 0x20, 0x6a });
        gbc.writeMem(0xe084, { 0xf1 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x5130, gbc.sp());
        EXPECT(0xe085, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xe084));
        // F1 03C4
        gbc.setState(0xf6a, 0xce4f, 0xa720, 0x6f64, 0x96e9, 0xc52c, 0x0, 0x0);
        gbc.writeMem(0xf6a, { 0xf1 });
        gbc.writeMem(0xce4f, { 0xbc, 0x95 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xce51, gbc.sp());
        EXPECT(0xf6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xce4f));
        EXPECT(0x95, gbc.readMem(0xce50));
        // F1 03C5
        gbc.setState(0x4051, 0x4d6d, 0xa700, 0x835, 0x406c, 0x1327, 0x1, 0x1);
        gbc.writeMem(0x4051, { 0xf1 });
        gbc.writeMem(0x4d6d, { 0xe1, 0x32 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x4d6f, gbc.sp());
        EXPECT(0x4052, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 03C6
        gbc.setState(0x31d6, 0xcbc, 0xbf0, 0x6dbb, 0x8d07, 0x65fb, 0x1, 0x0);
        gbc.writeMem(0xcbc, { 0xaa, 0x36 });
        gbc.writeMem(0x31d6, { 0xf1 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xcbe, gbc.sp());
        EXPECT(0x31d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 03C7
        gbc.setState(0x8a7d, 0x3e4, 0x7860, 0x54b3, 0x51fe, 0x4f99, 0x0, 0x1);
        gbc.writeMem(0x3e4, { 0xd1, 0x7d });
        gbc.writeMem(0x8a7d, { 0xf1 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x3e6, gbc.sp());
        EXPECT(0x8a7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8a7d));
        // F1 03C8
        gbc.setState(0x1c0d, 0x8c9c, 0x56c0, 0x29e0, 0xd0d8, 0x6d99, 0x1, 0x0);
        gbc.writeMem(0x1c0d, { 0xf1 });
        gbc.writeMem(0x8c9c, { 0xfc, 0xc9 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x8c9e, gbc.sp());
        EXPECT(0x1c0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0x8c9c));
        EXPECT(0xc9, gbc.readMem(0x8c9d));
        // F1 03C9
        gbc.setState(0x1280, 0x6623, 0x3630, 0x2b36, 0x55a9, 0x1345, 0x1, 0x0);
        gbc.writeMem(0x1280, { 0xf1 });
        gbc.writeMem(0x6623, { 0x8f, 0xec });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x6625, gbc.sp());
        EXPECT(0x1281, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 03CA
        gbc.setState(0xe8e6, 0x6b74, 0xe420, 0x63bf, 0x9be4, 0x1954, 0x1, 0x0);
        gbc.writeMem(0x6b74, { 0x72, 0xf });
        gbc.writeMem(0xe8e6, { 0xf1 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x6b76, gbc.sp());
        EXPECT(0xe8e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xe8e6));
        // F1 03CB
        gbc.setState(0xe436, 0xb7b3, 0xbb50, 0x6a12, 0xa622, 0x5c14, 0x1, 0x0);
        gbc.writeMem(0xb7b3, { 0x2d, 0x33 });
        gbc.writeMem(0xe436, { 0xf1 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb7b5, gbc.sp());
        EXPECT(0xe437, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb7b3));
        EXPECT(0x33, gbc.readMem(0xb7b4));
        EXPECT(0xf1, gbc.readMem(0xe436));
        // F1 03CC
        gbc.setState(0x2932, 0x74ab, 0xd820, 0x44ce, 0x750b, 0x95dc, 0x1, 0x1);
        gbc.writeMem(0x2932, { 0xf1 });
        gbc.writeMem(0x74ab, { 0xc0, 0xdf });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x74ad, gbc.sp());
        EXPECT(0x2933, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 03CD
        gbc.setState(0xa789, 0xda8b, 0x4bd0, 0x6fd5, 0x2e6c, 0xe9a7, 0x0, 0x1);
        gbc.writeMem(0xa789, { 0xf1 });
        gbc.writeMem(0xda8b, { 0xe, 0x46 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xda8d, gbc.sp());
        EXPECT(0xa78a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xa789));
        EXPECT(0xe, gbc.readMem(0xda8b));
        EXPECT(0x46, gbc.readMem(0xda8c));
        // F1 03CE
        gbc.setState(0xef8e, 0x5c43, 0xdad0, 0x86f5, 0x5ea7, 0x7d08, 0x1, 0x0);
        gbc.writeMem(0x5c43, { 0x5d, 0xe7 });
        gbc.writeMem(0xef8e, { 0xf1 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x5c45, gbc.sp());
        EXPECT(0xef8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xef8e));
        // F1 03CF
        gbc.setState(0xb870, 0x9f0a, 0x5290, 0x328, 0xb4d2, 0xda02, 0x0, 0x0);
        gbc.writeMem(0x9f0a, { 0xd5, 0xc8 });
        gbc.writeMem(0xb870, { 0xf1 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x9f0c, gbc.sp());
        EXPECT(0xb871, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x9f0a));
        EXPECT(0xc8, gbc.readMem(0x9f0b));
        EXPECT(0xf1, gbc.readMem(0xb870));
        // F1 03D0
        gbc.setState(0x2f35, 0xe417, 0x8c60, 0x1d0d, 0x2a4f, 0x9f7e, 0x1, 0x0);
        gbc.writeMem(0x2f35, { 0xf1 });
        gbc.writeMem(0xe417, { 0x24, 0x27 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xe419, gbc.sp());
        EXPECT(0x2f36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xe417));
        EXPECT(0x27, gbc.readMem(0xe418));
        // F1 03D1
        gbc.setState(0x4adc, 0xf019, 0x1cd0, 0x3a9c, 0xb328, 0x1a7f, 0x0, 0x1);
        gbc.writeMem(0x4adc, { 0xf1 });
        gbc.writeMem(0xf019, { 0xc2, 0x6e });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf01b, gbc.sp());
        EXPECT(0x4add, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xf019));
        EXPECT(0x6e, gbc.readMem(0xf01a));
        // F1 03D2
        gbc.setState(0x946d, 0x71e1, 0x1c10, 0x81d8, 0x9294, 0x4232, 0x0, 0x0);
        gbc.writeMem(0x71e1, { 0x17, 0x48 });
        gbc.writeMem(0x946d, { 0xf1 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x71e3, gbc.sp());
        EXPECT(0x946e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x946d));
        // F1 03D3
        gbc.setState(0x7f19, 0x3188, 0x620, 0x7a6, 0x2dab, 0x839, 0x1, 0x0);
        gbc.writeMem(0x3188, { 0x63, 0x15 });
        gbc.writeMem(0x7f19, { 0xf1 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x318a, gbc.sp());
        EXPECT(0x7f1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // F1 03D4
        gbc.setState(0xbfa3, 0x67e8, 0x5e10, 0x5f38, 0x8a1d, 0xbde0, 0x1, 0x1);
        gbc.writeMem(0x67e8, { 0xd3, 0xf0 });
        gbc.writeMem(0xbfa3, { 0xf1 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x67ea, gbc.sp());
        EXPECT(0xbfa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xbfa3));
        // F1 03D5
        gbc.setState(0xd002, 0x5af6, 0x8c00, 0x9bf9, 0x78e0, 0x7e2b, 0x1, 0x0);
        gbc.writeMem(0x5af6, { 0x82, 0xc8 });
        gbc.writeMem(0xd002, { 0xf1 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x5af8, gbc.sp());
        EXPECT(0xd003, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xd002));
        // F1 03D6
        gbc.setState(0x8b6c, 0xd32b, 0x2df0, 0x10c5, 0x98d9, 0xa141, 0x1, 0x1);
        gbc.writeMem(0x8b6c, { 0xf1 });
        gbc.writeMem(0xd32b, { 0x71, 0xa2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xd32d, gbc.sp());
        EXPECT(0x8b6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8b6c));
        EXPECT(0x71, gbc.readMem(0xd32b));
        EXPECT(0xa2, gbc.readMem(0xd32c));
        // F1 03D7
        gbc.setState(0x843f, 0x244a, 0xdc90, 0xbfb2, 0x8dec, 0x3d9b, 0x1, 0x1);
        gbc.writeMem(0x244a, { 0x3c, 0x8e });
        gbc.writeMem(0x843f, { 0xf1 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x244c, gbc.sp());
        EXPECT(0x8440, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x843f));
        // F1 03D8
        gbc.setState(0x3276, 0x998e, 0x3ce0, 0xa806, 0x7a27, 0x4cd8, 0x1, 0x1);
        gbc.writeMem(0x3276, { 0xf1 });
        gbc.writeMem(0x998e, { 0x9e, 0x11 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x9990, gbc.sp());
        EXPECT(0x3277, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x998e));
        EXPECT(0x11, gbc.readMem(0x998f));
        // F1 03D9
        gbc.setState(0xbf31, 0x8ffa, 0xf830, 0xbc48, 0x180b, 0x3fa6, 0x1, 0x0);
        gbc.writeMem(0x8ffa, { 0xc6, 0x95 });
        gbc.writeMem(0xbf31, { 0xf1 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x8ffc, gbc.sp());
        EXPECT(0xbf32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x8ffa));
        EXPECT(0x95, gbc.readMem(0x8ffb));
        EXPECT(0xf1, gbc.readMem(0xbf31));
        // F1 03DA
        gbc.setState(0x91b5, 0x2ea2, 0xc830, 0xee8f, 0xaf87, 0xb6ce, 0x0, 0x1);
        gbc.writeMem(0x2ea2, { 0xad, 0xbd });
        gbc.writeMem(0x91b5, { 0xf1 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x2ea4, gbc.sp());
        EXPECT(0x91b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x91b5));
        // F1 03DB
        gbc.setState(0xe2c3, 0x8d40, 0x4ae0, 0x9832, 0xdc65, 0x39aa, 0x0, 0x0);
        gbc.writeMem(0x8d40, { 0x23, 0xed });
        gbc.writeMem(0xe2c3, { 0xf1 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8d42, gbc.sp());
        EXPECT(0xe2c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0x8d40));
        EXPECT(0xed, gbc.readMem(0x8d41));
        EXPECT(0xf1, gbc.readMem(0xe2c3));
        // F1 03DC
        gbc.setState(0x3dfa, 0xce6a, 0x3700, 0x56cf, 0x7ad0, 0x7a70, 0x1, 0x1);
        gbc.writeMem(0x3dfa, { 0xf1 });
        gbc.writeMem(0xce6a, { 0x4, 0xf2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xce6c, gbc.sp());
        EXPECT(0x3dfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xce6a));
        EXPECT(0xf2, gbc.readMem(0xce6b));
        // F1 03DD
        gbc.setState(0x176, 0x4636, 0xa550, 0x7d15, 0xe13f, 0x7eb3, 0x1, 0x1);
        gbc.writeMem(0x176, { 0xf1 });
        gbc.writeMem(0x4636, { 0x7e, 0xba });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4638, gbc.sp());
        EXPECT(0x177, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 03DF
        gbc.setState(0xad0, 0x3440, 0x440, 0xea0a, 0x8dd9, 0x6357, 0x1, 0x1);
        gbc.writeMem(0xad0, { 0xf1 });
        gbc.writeMem(0x3440, { 0xbe, 0x55 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3442, gbc.sp());
        EXPECT(0xad1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 03E0
        gbc.setState(0x3a09, 0xaa74, 0xeae0, 0xdb0e, 0x99c8, 0x7202, 0x0, 0x1);
        gbc.writeMem(0x3a09, { 0xf1 });
        gbc.writeMem(0xaa74, { 0x6a, 0x82 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xaa76, gbc.sp());
        EXPECT(0x3a0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xaa74));
        EXPECT(0x82, gbc.readMem(0xaa75));
        // F1 03E1
        gbc.setState(0xdb5, 0x12ab, 0x51a0, 0xe222, 0x5547, 0xaacc, 0x1, 0x0);
        gbc.writeMem(0xdb5, { 0xf1 });
        gbc.writeMem(0x12ab, { 0xf4, 0x5f });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x12ad, gbc.sp());
        EXPECT(0xdb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // F1 03E2
        gbc.setState(0xb08a, 0x97dc, 0xae70, 0x3585, 0x1eef, 0x12d7, 0x1, 0x1);
        gbc.writeMem(0x97dc, { 0xb7, 0x30 });
        gbc.writeMem(0xb08a, { 0xf1 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x97de, gbc.sp());
        EXPECT(0xb08b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x97dc));
        EXPECT(0x30, gbc.readMem(0x97dd));
        EXPECT(0xf1, gbc.readMem(0xb08a));
        // F1 03E3
        gbc.setState(0x40d0, 0xbaec, 0x7450, 0x2c93, 0x5c47, 0x4bed, 0x1, 0x1);
        gbc.writeMem(0x40d0, { 0xf1 });
        gbc.writeMem(0xbaec, { 0x6b, 0xcb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xbaee, gbc.sp());
        EXPECT(0x40d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xbaec));
        EXPECT(0xcb, gbc.readMem(0xbaed));
        // F1 03E4
        gbc.setState(0xe0c4, 0x9d03, 0x33c0, 0x26e4, 0x2487, 0xf61e, 0x0, 0x0);
        gbc.writeMem(0x9d03, { 0xd7, 0xaa });
        gbc.writeMem(0xe0c4, { 0xf1 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x9d05, gbc.sp());
        EXPECT(0xe0c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0x9d03));
        EXPECT(0xaa, gbc.readMem(0x9d04));
        EXPECT(0xf1, gbc.readMem(0xe0c4));
        // F1 03E5
        gbc.setState(0xd0bc, 0xf66b, 0x87b0, 0x1e1f, 0xca7b, 0x3b84, 0x0, 0x1);
        gbc.writeMem(0xd0bc, { 0xf1 });
        gbc.writeMem(0xf66b, { 0xe2, 0xdf });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xf66d, gbc.sp());
        EXPECT(0xd0bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xd0bc));
        EXPECT(0xe2, gbc.readMem(0xf66b));
        EXPECT(0xdf, gbc.readMem(0xf66c));
        // F1 03E6
        gbc.setState(0xe88f, 0xb9f0, 0x98c0, 0xf7f3, 0xaef5, 0xe7c1, 0x1, 0x1);
        gbc.writeMem(0xb9f0, { 0x77, 0x59 });
        gbc.writeMem(0xe88f, { 0xf1 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xb9f2, gbc.sp());
        EXPECT(0xe890, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xb9f0));
        EXPECT(0x59, gbc.readMem(0xb9f1));
        EXPECT(0xf1, gbc.readMem(0xe88f));
        // F1 03E7
        gbc.setState(0xb4a1, 0xc49d, 0x3030, 0x226b, 0x8535, 0xd85a, 0x0, 0x1);
        gbc.writeMem(0xb4a1, { 0xf1 });
        gbc.writeMem(0xc49d, { 0x10, 0x3b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc49f, gbc.sp());
        EXPECT(0xb4a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xb4a1));
        EXPECT(0x10, gbc.readMem(0xc49d));
        EXPECT(0x3b, gbc.readMem(0xc49e));
    }
