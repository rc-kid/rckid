    TEST(gbcemu, opcode_bf) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // BF 0000
        gbc.setState(0xd436, 0xb4e7, 0x6140, 0xb2a0, 0x8a47, 0x2df, 0x1, 0x1);
        gbc.writeMem(0xd436, { 0xbf });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb4e7, gbc.sp());
        EXPECT(0xd437, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xd436));
        // BF 0001
        gbc.setState(0x8a8c, 0x5d23, 0x3c10, 0x6ca5, 0x477f, 0x38e4, 0x0, 0x1);
        gbc.writeMem(0x8a8c, { 0xbf });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x5d23, gbc.sp());
        EXPECT(0x8a8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x8a8c));
        // BF 0002
        gbc.setState(0x5203, 0xa045, 0xe100, 0x9361, 0xa24a, 0xe8e1, 0x0, 0x1);
        gbc.writeMem(0x5203, { 0xbf });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa045, gbc.sp());
        EXPECT(0x5204, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0003
        gbc.setState(0x8155, 0xe8af, 0xfe50, 0xb84c, 0x56ca, 0x6ab4, 0x0, 0x1);
        gbc.writeMem(0x8155, { 0xbf });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xe8af, gbc.sp());
        EXPECT(0x8156, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x8155));
        // BF 0004
        gbc.setState(0xec15, 0xbf5e, 0x8980, 0x9fca, 0x9eef, 0xa18b, 0x1, 0x0);
        gbc.writeMem(0xec15, { 0xbf });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xbf5e, gbc.sp());
        EXPECT(0xec16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xec15));
        // BF 0005
        gbc.setState(0x7a92, 0x1a7a, 0xc4b0, 0x7f4a, 0x2e91, 0x7796, 0x1, 0x1);
        gbc.writeMem(0x7a92, { 0xbf });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x1a7a, gbc.sp());
        EXPECT(0x7a93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0006
        gbc.setState(0x120b, 0x8eb1, 0x4100, 0xe353, 0xe67e, 0xc84c, 0x0, 0x0);
        gbc.writeMem(0x120b, { 0xbf });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8eb1, gbc.sp());
        EXPECT(0x120c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0007
        gbc.setState(0xa8da, 0x3266, 0x3d80, 0x433f, 0x4a05, 0xb9b7, 0x0, 0x0);
        gbc.writeMem(0xa8da, { 0xbf });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x3266, gbc.sp());
        EXPECT(0xa8db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xa8da));
        // BF 0008
        gbc.setState(0x9def, 0xf20d, 0x89a0, 0x21cd, 0x103c, 0x6c5d, 0x1, 0x1);
        gbc.writeMem(0x9def, { 0xbf });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf20d, gbc.sp());
        EXPECT(0x9df0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x9def));
        // BF 0009
        gbc.setState(0xc565, 0x1e26, 0xdfe0, 0x388f, 0xb5c1, 0x8741, 0x1, 0x0);
        gbc.writeMem(0xc565, { 0xbf });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1e26, gbc.sp());
        EXPECT(0xc566, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc565));
        // BF 000B
        gbc.setState(0x4e03, 0xd12c, 0xd130, 0xa74a, 0x784a, 0x604e, 0x1, 0x1);
        gbc.writeMem(0x4e03, { 0xbf });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xd12c, gbc.sp());
        EXPECT(0x4e04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 000C
        gbc.setState(0xa35, 0xcd86, 0x9d00, 0x6b66, 0xcdb1, 0xe70e, 0x0, 0x0);
        gbc.writeMem(0xa35, { 0xbf });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xcd86, gbc.sp());
        EXPECT(0xa36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 000D
        gbc.setState(0x5f82, 0xcaf7, 0x80b0, 0x6bf5, 0xe5db, 0xadbe, 0x0, 0x0);
        gbc.writeMem(0x5f82, { 0xbf });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xcaf7, gbc.sp());
        EXPECT(0x5f83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 000E
        gbc.setState(0xeb9e, 0x3742, 0x7740, 0xd263, 0x1424, 0x10b2, 0x1, 0x0);
        gbc.writeMem(0xeb9e, { 0xbf });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x3742, gbc.sp());
        EXPECT(0xeb9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xeb9e));
        // BF 000F
        gbc.setState(0x4e84, 0x1498, 0x58a0, 0x2600, 0x5ff3, 0x386c, 0x1, 0x0);
        gbc.writeMem(0x4e84, { 0xbf });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x1498, gbc.sp());
        EXPECT(0x4e85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0010
        gbc.setState(0x9ce7, 0x21c4, 0x9020, 0x8824, 0x4170, 0x85ed, 0x1, 0x1);
        gbc.writeMem(0x9ce7, { 0xbf });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x21c4, gbc.sp());
        EXPECT(0x9ce8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x9ce7));
        // BF 0011
        gbc.setState(0x4885, 0x3ca9, 0xabd0, 0xe7f5, 0x4e28, 0xb8a6, 0x1, 0x0);
        gbc.writeMem(0x4885, { 0xbf });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3ca9, gbc.sp());
        EXPECT(0x4886, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0012
        gbc.setState(0x28ee, 0xb426, 0x6a80, 0x488a, 0xf158, 0x5d88, 0x0, 0x0);
        gbc.writeMem(0x28ee, { 0xbf });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xb426, gbc.sp());
        EXPECT(0x28ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0013
        gbc.setState(0xbe2c, 0xcfe5, 0x2f30, 0xc4f1, 0x3684, 0x1a72, 0x1, 0x1);
        gbc.writeMem(0xbe2c, { 0xbf });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xcfe5, gbc.sp());
        EXPECT(0xbe2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xbe2c));
        // BF 0014
        gbc.setState(0xa10e, 0x2d5e, 0xc0c0, 0xbaff, 0xf0e7, 0xfd16, 0x0, 0x0);
        gbc.writeMem(0xa10e, { 0xbf });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x2d5e, gbc.sp());
        EXPECT(0xa10f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xa10e));
        // BF 0015
        gbc.setState(0xe100, 0x5562, 0xde80, 0xb676, 0x953c, 0xd19f, 0x0, 0x1);
        gbc.writeMem(0xe100, { 0xbf });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x5562, gbc.sp());
        EXPECT(0xe101, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xe100));
        // BF 0016
        gbc.setState(0x7462, 0x7cda, 0x3310, 0x6a6e, 0xfe90, 0x24c4, 0x0, 0x0);
        gbc.writeMem(0x7462, { 0xbf });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x7cda, gbc.sp());
        EXPECT(0x7463, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0017
        gbc.setState(0x2cda, 0xe38b, 0x27c0, 0xdb7b, 0xac26, 0x8c87, 0x0, 0x0);
        gbc.writeMem(0x2cda, { 0xbf });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe38b, gbc.sp());
        EXPECT(0x2cdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0018
        gbc.setState(0xbd7c, 0x3ff1, 0xd4e0, 0x6b32, 0x544b, 0xea87, 0x0, 0x1);
        gbc.writeMem(0xbd7c, { 0xbf });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x3ff1, gbc.sp());
        EXPECT(0xbd7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xbd7c));
        // BF 0019
        gbc.setState(0xeca7, 0xb0df, 0x69f0, 0x5469, 0xd0be, 0x68bc, 0x1, 0x0);
        gbc.writeMem(0xeca7, { 0xbf });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xb0df, gbc.sp());
        EXPECT(0xeca8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xeca7));
        // BF 001A
        gbc.setState(0xdc16, 0x4764, 0xd640, 0xed9, 0x3c4b, 0xb3e, 0x0, 0x0);
        gbc.writeMem(0xdc16, { 0xbf });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x4764, gbc.sp());
        EXPECT(0xdc17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xdc16));
        // BF 001B
        gbc.setState(0x9fed, 0xfe40, 0x5cb0, 0xcab2, 0x8719, 0x8c4, 0x0, 0x0);
        gbc.writeMem(0x9fed, { 0xbf });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xfe40, gbc.sp());
        EXPECT(0x9fee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x9fed));
        // BF 001C
        gbc.setState(0x64b, 0x6fc9, 0xa0, 0x9740, 0x11e7, 0xe96e, 0x0, 0x1);
        gbc.writeMem(0x64b, { 0xbf });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x6fc9, gbc.sp());
        EXPECT(0x64c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 001D
        gbc.setState(0xaf2b, 0x242c, 0x8540, 0xb40, 0xb46a, 0x68c1, 0x0, 0x1);
        gbc.writeMem(0xaf2b, { 0xbf });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x242c, gbc.sp());
        EXPECT(0xaf2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xaf2b));
        // BF 001E
        gbc.setState(0x5470, 0x30e9, 0xf950, 0xfb35, 0x92f, 0x52cc, 0x0, 0x1);
        gbc.writeMem(0x5470, { 0xbf });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x30e9, gbc.sp());
        EXPECT(0x5471, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 001F
        gbc.setState(0xbc4f, 0xd6d5, 0xb4c0, 0xee9, 0x7bea, 0x2e64, 0x1, 0x1);
        gbc.writeMem(0xbc4f, { 0xbf });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd6d5, gbc.sp());
        EXPECT(0xbc50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xbc4f));
        // BF 0020
        gbc.setState(0xdaf6, 0xa4f0, 0x7740, 0x4869, 0x521a, 0x5890, 0x1, 0x1);
        gbc.writeMem(0xdaf6, { 0xbf });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xa4f0, gbc.sp());
        EXPECT(0xdaf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xdaf6));
        // BF 0021
        gbc.setState(0x4c66, 0x5b3, 0xfde0, 0x878f, 0x10ee, 0x3ad6, 0x1, 0x1);
        gbc.writeMem(0x4c66, { 0xbf });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x5b3, gbc.sp());
        EXPECT(0x4c67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0022
        gbc.setState(0xd8aa, 0xfdb, 0xbd0, 0x390b, 0x9e08, 0xe3a8, 0x1, 0x1);
        gbc.writeMem(0xd8aa, { 0xbf });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xfdb, gbc.sp());
        EXPECT(0xd8ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xd8aa));
        // BF 0023
        gbc.setState(0xb3f8, 0x964e, 0x6f20, 0xa033, 0x2004, 0xad0, 0x1, 0x0);
        gbc.writeMem(0xb3f8, { 0xbf });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x964e, gbc.sp());
        EXPECT(0xb3f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xb3f8));
        // BF 0024
        gbc.setState(0x8d25, 0xd309, 0xf330, 0x67a1, 0xfe93, 0xa8af, 0x0, 0x0);
        gbc.writeMem(0x8d25, { 0xbf });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xd309, gbc.sp());
        EXPECT(0x8d26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x8d25));
        // BF 0025
        gbc.setState(0x4c7b, 0xfef7, 0xee70, 0x82c5, 0x13ed, 0xaabd, 0x1, 0x0);
        gbc.writeMem(0x4c7b, { 0xbf });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xfef7, gbc.sp());
        EXPECT(0x4c7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0026
        gbc.setState(0x58a4, 0xcbb0, 0x94a0, 0xefb0, 0x6237, 0x6ad3, 0x0, 0x0);
        gbc.writeMem(0x58a4, { 0xbf });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xcbb0, gbc.sp());
        EXPECT(0x58a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0028
        gbc.setState(0x78d1, 0xff73, 0xe930, 0xc1e8, 0x110e, 0x8a3d, 0x0, 0x1);
        gbc.writeMem(0x78d1, { 0xbf });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xff73, gbc.sp());
        EXPECT(0x78d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0029
        gbc.setState(0xc3c8, 0x830, 0xaca0, 0x5f31, 0x1e9c, 0x8dea, 0x0, 0x0);
        gbc.writeMem(0xc3c8, { 0xbf });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x830, gbc.sp());
        EXPECT(0xc3c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc3c8));
        // BF 002A
        gbc.setState(0x10c7, 0x8d85, 0x2690, 0x8619, 0x3316, 0x77ca, 0x0, 0x1);
        gbc.writeMem(0x10c7, { 0xbf });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8d85, gbc.sp());
        EXPECT(0x10c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 002B
        gbc.setState(0x1445, 0xdd0c, 0x6cb0, 0x280b, 0x7e35, 0x54a2, 0x1, 0x1);
        gbc.writeMem(0x1445, { 0xbf });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xdd0c, gbc.sp());
        EXPECT(0x1446, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 002C
        gbc.setState(0x139e, 0xf516, 0x2070, 0x2917, 0x9d67, 0x9425, 0x0, 0x1);
        gbc.writeMem(0x139e, { 0xbf });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xf516, gbc.sp());
        EXPECT(0x139f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 002D
        gbc.setState(0x31b, 0xc6d6, 0xd6b0, 0xfd3, 0x6593, 0x5cbc, 0x0, 0x1);
        gbc.writeMem(0x31b, { 0xbf });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xc6d6, gbc.sp());
        EXPECT(0x31c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 002E
        gbc.setState(0x6a6d, 0xeff5, 0x2e60, 0x60f4, 0x7a3c, 0xa530, 0x0, 0x1);
        gbc.writeMem(0x6a6d, { 0xbf });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xeff5, gbc.sp());
        EXPECT(0x6a6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 002F
        gbc.setState(0x7b57, 0xae6a, 0x5980, 0xe86a, 0x2cb7, 0xdb0e, 0x1, 0x0);
        gbc.writeMem(0x7b57, { 0xbf });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xae6a, gbc.sp());
        EXPECT(0x7b58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0030
        gbc.setState(0xa8a9, 0x52ef, 0x9a90, 0x39e3, 0x8d67, 0x92d3, 0x0, 0x0);
        gbc.writeMem(0xa8a9, { 0xbf });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x52ef, gbc.sp());
        EXPECT(0xa8aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xa8a9));
        // BF 0031
        gbc.setState(0x934b, 0x5573, 0x9150, 0x5dfa, 0x4a03, 0x95e9, 0x0, 0x0);
        gbc.writeMem(0x934b, { 0xbf });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x5573, gbc.sp());
        EXPECT(0x934c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x934b));
        // BF 0032
        gbc.setState(0xbfba, 0x340f, 0x3960, 0xe458, 0xd77a, 0xd88c, 0x0, 0x0);
        gbc.writeMem(0xbfba, { 0xbf });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x340f, gbc.sp());
        EXPECT(0xbfbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xbfba));
        // BF 0033
        gbc.setState(0x1469, 0xa320, 0x4d10, 0x443f, 0x486b, 0x7ced, 0x1, 0x0);
        gbc.writeMem(0x1469, { 0xbf });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xa320, gbc.sp());
        EXPECT(0x146a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0034
        gbc.setState(0xe528, 0xaff3, 0xe310, 0xc306, 0x46c6, 0x4796, 0x1, 0x0);
        gbc.writeMem(0xe528, { 0xbf });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xaff3, gbc.sp());
        EXPECT(0xe529, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xe528));
        // BF 0035
        gbc.setState(0xac64, 0xaa30, 0xa8a0, 0x2d5c, 0xe6ac, 0x454c, 0x1, 0x0);
        gbc.writeMem(0xac64, { 0xbf });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xaa30, gbc.sp());
        EXPECT(0xac65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xac64));
        // BF 0036
        gbc.setState(0x4126, 0xbc63, 0xa6e0, 0xa9d9, 0xdb03, 0xf72d, 0x0, 0x1);
        gbc.writeMem(0x4126, { 0xbf });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xbc63, gbc.sp());
        EXPECT(0x4127, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0038
        gbc.setState(0x6fe, 0x982d, 0x2150, 0x60bd, 0xe3b9, 0x2e5d, 0x0, 0x1);
        gbc.writeMem(0x6fe, { 0xbf });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x982d, gbc.sp());
        EXPECT(0x6ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0039
        gbc.setState(0x2236, 0xd3bc, 0x51d0, 0xcc9d, 0x9bbc, 0x635d, 0x0, 0x0);
        gbc.writeMem(0x2236, { 0xbf });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xd3bc, gbc.sp());
        EXPECT(0x2237, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 003A
        gbc.setState(0xd695, 0xab17, 0x2460, 0x1f1a, 0x6517, 0xad1d, 0x0, 0x0);
        gbc.writeMem(0xd695, { 0xbf });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xab17, gbc.sp());
        EXPECT(0xd696, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xd695));
        // BF 003B
        gbc.setState(0x32b0, 0xb35, 0xee80, 0x118e, 0xe764, 0x4a8d, 0x1, 0x1);
        gbc.writeMem(0x32b0, { 0xbf });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xb35, gbc.sp());
        EXPECT(0x32b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 003C
        gbc.setState(0x4af9, 0x8616, 0xc1a0, 0xcb57, 0xd71d, 0x63ee, 0x0, 0x1);
        gbc.writeMem(0x4af9, { 0xbf });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x8616, gbc.sp());
        EXPECT(0x4afa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 003D
        gbc.setState(0xab31, 0x8530, 0x4370, 0x219, 0x7134, 0xbd48, 0x1, 0x1);
        gbc.writeMem(0xab31, { 0xbf });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x8530, gbc.sp());
        EXPECT(0xab32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xab31));
        // BF 003E
        gbc.setState(0xbd1a, 0x26df, 0x2390, 0x6243, 0xe5ce, 0x6f5e, 0x1, 0x0);
        gbc.writeMem(0xbd1a, { 0xbf });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x26df, gbc.sp());
        EXPECT(0xbd1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xbd1a));
        // BF 003F
        gbc.setState(0xb745, 0x6bab, 0xff00, 0x76d, 0xab8c, 0x3be9, 0x0, 0x1);
        gbc.writeMem(0xb745, { 0xbf });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x6bab, gbc.sp());
        EXPECT(0xb746, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xb745));
        // BF 0040
        gbc.setState(0xc836, 0xd8b1, 0xdc50, 0xf602, 0x2442, 0xd8e2, 0x1, 0x0);
        gbc.writeMem(0xc836, { 0xbf });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xd8b1, gbc.sp());
        EXPECT(0xc837, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc836));
        // BF 0041
        gbc.setState(0xa80f, 0xc80e, 0xc1b0, 0x306e, 0x6d67, 0xcbba, 0x1, 0x0);
        gbc.writeMem(0xa80f, { 0xbf });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xc80e, gbc.sp());
        EXPECT(0xa810, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xa80f));
        // BF 0042
        gbc.setState(0xee0c, 0xcd66, 0x1e80, 0x9b25, 0x41d8, 0x3044, 0x0, 0x0);
        gbc.writeMem(0xee0c, { 0xbf });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xcd66, gbc.sp());
        EXPECT(0xee0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xee0c));
        // BF 0043
        gbc.setState(0xb972, 0x3cc6, 0x1fb0, 0x8043, 0xcfc3, 0xee87, 0x1, 0x0);
        gbc.writeMem(0xb972, { 0xbf });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x3cc6, gbc.sp());
        EXPECT(0xb973, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xb972));
        // BF 0044
        gbc.setState(0x9887, 0x9e7e, 0xb570, 0xe7b, 0x30f4, 0x1662, 0x0, 0x0);
        gbc.writeMem(0x9887, { 0xbf });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x9e7e, gbc.sp());
        EXPECT(0x9888, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x9887));
        // BF 0045
        gbc.setState(0x982d, 0x58ff, 0xbcc0, 0x452b, 0x5268, 0x9995, 0x1, 0x0);
        gbc.writeMem(0x982d, { 0xbf });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x58ff, gbc.sp());
        EXPECT(0x982e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x982d));
        // BF 0046
        gbc.setState(0x5e11, 0xf021, 0xac70, 0x5f75, 0xe46b, 0xe806, 0x0, 0x1);
        gbc.writeMem(0x5e11, { 0xbf });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf021, gbc.sp());
        EXPECT(0x5e12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0047
        gbc.setState(0x5b57, 0x2b48, 0xaf80, 0xc566, 0x5746, 0xc27a, 0x1, 0x0);
        gbc.writeMem(0x5b57, { 0xbf });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x2b48, gbc.sp());
        EXPECT(0x5b58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0048
        gbc.setState(0x36b6, 0x5f39, 0x280, 0x5c99, 0x13fc, 0xc676, 0x0, 0x0);
        gbc.writeMem(0x36b6, { 0xbf });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x5f39, gbc.sp());
        EXPECT(0x36b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0049
        gbc.setState(0xe67c, 0x5ab2, 0x79e0, 0xbb0d, 0x77f4, 0x33c7, 0x0, 0x1);
        gbc.writeMem(0xe67c, { 0xbf });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x5ab2, gbc.sp());
        EXPECT(0xe67d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xe67c));
        // BF 004A
        gbc.setState(0xbbe7, 0xd139, 0xa980, 0x8d48, 0xc2df, 0x559, 0x0, 0x1);
        gbc.writeMem(0xbbe7, { 0xbf });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd139, gbc.sp());
        EXPECT(0xbbe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xbbe7));
        // BF 004B
        gbc.setState(0x662d, 0xa30f, 0x7c60, 0xf6c4, 0x5e83, 0x2583, 0x0, 0x1);
        gbc.writeMem(0x662d, { 0xbf });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa30f, gbc.sp());
        EXPECT(0x662e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 004C
        gbc.setState(0xa44b, 0x25c3, 0x40b0, 0x436e, 0xe43, 0x4803, 0x0, 0x1);
        gbc.writeMem(0xa44b, { 0xbf });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x25c3, gbc.sp());
        EXPECT(0xa44c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xa44b));
        // BF 004D
        gbc.setState(0x80b9, 0x9c84, 0x2a30, 0x73c4, 0x59c5, 0x1ddc, 0x1, 0x1);
        gbc.writeMem(0x80b9, { 0xbf });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x9c84, gbc.sp());
        EXPECT(0x80ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x80b9));
        // BF 004E
        gbc.setState(0xc54f, 0x1a42, 0x90f0, 0xbdc6, 0x27a7, 0xe947, 0x1, 0x0);
        gbc.writeMem(0xc54f, { 0xbf });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1a42, gbc.sp());
        EXPECT(0xc550, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc54f));
        // BF 004F
        gbc.setState(0xc2ea, 0x50a5, 0x7bf0, 0x1e83, 0x745c, 0x8736, 0x0, 0x1);
        gbc.writeMem(0xc2ea, { 0xbf });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x50a5, gbc.sp());
        EXPECT(0xc2eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc2ea));
        // BF 0050
        gbc.setState(0x6ec1, 0x58f, 0x9370, 0x609f, 0xfd4, 0xab4e, 0x1, 0x1);
        gbc.writeMem(0x6ec1, { 0xbf });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x58f, gbc.sp());
        EXPECT(0x6ec2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0052
        gbc.setState(0x8165, 0x2c6, 0xd340, 0x964f, 0x30c1, 0x22ad, 0x0, 0x0);
        gbc.writeMem(0x8165, { 0xbf });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x2c6, gbc.sp());
        EXPECT(0x8166, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x8165));
        // BF 0053
        gbc.setState(0x7488, 0x1ffa, 0x5ad0, 0xc6cd, 0xac25, 0x2115, 0x1, 0x1);
        gbc.writeMem(0x7488, { 0xbf });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1ffa, gbc.sp());
        EXPECT(0x7489, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0054
        gbc.setState(0xb0a6, 0xae1, 0x5e70, 0x269f, 0xcd81, 0x5da7, 0x1, 0x1);
        gbc.writeMem(0xb0a6, { 0xbf });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xae1, gbc.sp());
        EXPECT(0xb0a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xb0a6));
        // BF 0055
        gbc.setState(0xc733, 0x147f, 0xdea0, 0x1204, 0x83c4, 0xf4c3, 0x0, 0x1);
        gbc.writeMem(0xc733, { 0xbf });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x147f, gbc.sp());
        EXPECT(0xc734, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc733));
        // BF 0056
        gbc.setState(0x9cce, 0xfd35, 0x9a10, 0x51, 0x2166, 0x3a9f, 0x0, 0x0);
        gbc.writeMem(0x9cce, { 0xbf });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xfd35, gbc.sp());
        EXPECT(0x9ccf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x9cce));
        // BF 0057
        gbc.setState(0x5d42, 0xc61c, 0x9860, 0xb1cc, 0x1330, 0x91b4, 0x0, 0x0);
        gbc.writeMem(0x5d42, { 0xbf });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xc61c, gbc.sp());
        EXPECT(0x5d43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0058
        gbc.setState(0xc8c8, 0x44e1, 0x9790, 0x1a89, 0xb865, 0x2641, 0x1, 0x0);
        gbc.writeMem(0xc8c8, { 0xbf });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x44e1, gbc.sp());
        EXPECT(0xc8c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc8c8));
        // BF 0059
        gbc.setState(0x5c52, 0x7c09, 0x90a0, 0xb79, 0x1b51, 0x7510, 0x0, 0x0);
        gbc.writeMem(0x5c52, { 0xbf });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x7c09, gbc.sp());
        EXPECT(0x5c53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 005A
        gbc.setState(0xa021, 0xd7a0, 0xea30, 0xa27b, 0x1a5e, 0x11d2, 0x1, 0x0);
        gbc.writeMem(0xa021, { 0xbf });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xd7a0, gbc.sp());
        EXPECT(0xa022, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xa021));
        // BF 005B
        gbc.setState(0xd5c4, 0xff94, 0x41b0, 0x756e, 0x160c, 0xdf57, 0x1, 0x1);
        gbc.writeMem(0xd5c4, { 0xbf });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xff94, gbc.sp());
        EXPECT(0xd5c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xd5c4));
        // BF 005C
        gbc.setState(0x9f5c, 0x4363, 0x76f0, 0x9dd7, 0xce6c, 0x89fc, 0x1, 0x1);
        gbc.writeMem(0x9f5c, { 0xbf });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4363, gbc.sp());
        EXPECT(0x9f5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x9f5c));
        // BF 005D
        gbc.setState(0x4546, 0xa984, 0xbc20, 0x74dc, 0x8cdc, 0x1eec, 0x0, 0x1);
        gbc.writeMem(0x4546, { 0xbf });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xa984, gbc.sp());
        EXPECT(0x4547, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 005E
        gbc.setState(0x4e60, 0xca3b, 0x5040, 0x18c8, 0xd4b1, 0x6950, 0x0, 0x1);
        gbc.writeMem(0x4e60, { 0xbf });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xca3b, gbc.sp());
        EXPECT(0x4e61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 005F
        gbc.setState(0x957f, 0x3834, 0xebd0, 0x8b12, 0xe271, 0xe254, 0x1, 0x1);
        gbc.writeMem(0x957f, { 0xbf });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x3834, gbc.sp());
        EXPECT(0x9580, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x957f));
        // BF 0060
        gbc.setState(0xc287, 0x4f47, 0xc2e0, 0xb6b8, 0x11de, 0x666c, 0x1, 0x0);
        gbc.writeMem(0xc287, { 0xbf });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x4f47, gbc.sp());
        EXPECT(0xc288, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc287));
        // BF 0061
        gbc.setState(0xebf1, 0xe01, 0x8240, 0xe9e5, 0xee7b, 0x7547, 0x0, 0x1);
        gbc.writeMem(0xebf1, { 0xbf });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe01, gbc.sp());
        EXPECT(0xebf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xebf1));
        // BF 0062
        gbc.setState(0xcb41, 0xbf98, 0xa0e0, 0xa272, 0xf812, 0xb3e3, 0x1, 0x0);
        gbc.writeMem(0xcb41, { 0xbf });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xbf98, gbc.sp());
        EXPECT(0xcb42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xcb41));
        // BF 0063
        gbc.setState(0xd09, 0x7162, 0x6030, 0xa362, 0xf32a, 0x473c, 0x0, 0x0);
        gbc.writeMem(0xd09, { 0xbf });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x7162, gbc.sp());
        EXPECT(0xd0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0064
        gbc.setState(0x8f2c, 0xf291, 0x4f30, 0x5d3d, 0x8503, 0x591, 0x1, 0x1);
        gbc.writeMem(0x8f2c, { 0xbf });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xf291, gbc.sp());
        EXPECT(0x8f2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x8f2c));
        // BF 0065
        gbc.setState(0xaa57, 0xa93f, 0x5730, 0xb7c8, 0xd263, 0x3f8, 0x0, 0x1);
        gbc.writeMem(0xaa57, { 0xbf });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xa93f, gbc.sp());
        EXPECT(0xaa58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xaa57));
        // BF 0066
        gbc.setState(0x2432, 0x4b3c, 0x1090, 0x446b, 0x2632, 0x776a, 0x1, 0x1);
        gbc.writeMem(0x2432, { 0xbf });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4b3c, gbc.sp());
        EXPECT(0x2433, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0067
        gbc.setState(0x32fb, 0x50c6, 0x9780, 0x6d5e, 0xf68b, 0xd094, 0x0, 0x1);
        gbc.writeMem(0x32fb, { 0xbf });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x50c6, gbc.sp());
        EXPECT(0x32fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0068
        gbc.setState(0xae6d, 0xa386, 0x8850, 0xfac8, 0x4ad2, 0x7bb7, 0x0, 0x0);
        gbc.writeMem(0xae6d, { 0xbf });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa386, gbc.sp());
        EXPECT(0xae6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xae6d));
        // BF 0069
        gbc.setState(0x96c, 0x1aea, 0xa100, 0x9a49, 0x8a17, 0x8a85, 0x1, 0x0);
        gbc.writeMem(0x96c, { 0xbf });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x1aea, gbc.sp());
        EXPECT(0x96d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 006A
        gbc.setState(0xc4c2, 0x8622, 0xb0, 0x62a7, 0x5cb6, 0xb469, 0x0, 0x1);
        gbc.writeMem(0xc4c2, { 0xbf });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x8622, gbc.sp());
        EXPECT(0xc4c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc4c2));
        // BF 006B
        gbc.setState(0x743f, 0x879d, 0x6d0, 0x51c5, 0xe6c8, 0xd66a, 0x0, 0x0);
        gbc.writeMem(0x743f, { 0xbf });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x879d, gbc.sp());
        EXPECT(0x7440, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 006C
        gbc.setState(0xffa, 0x3391, 0x6b00, 0xf21c, 0xfa01, 0x2ce, 0x1, 0x0);
        gbc.writeMem(0xffa, { 0xbf });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x3391, gbc.sp());
        EXPECT(0xffb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 006D
        gbc.setState(0xb0d8, 0x5ef8, 0x52d0, 0x23fc, 0x5157, 0x36bf, 0x0, 0x1);
        gbc.writeMem(0xb0d8, { 0xbf });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x5ef8, gbc.sp());
        EXPECT(0xb0d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xb0d8));
        // BF 006E
        gbc.setState(0x4660, 0xab02, 0x2f80, 0x72d2, 0xf726, 0xffc3, 0x0, 0x0);
        gbc.writeMem(0x4660, { 0xbf });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xab02, gbc.sp());
        EXPECT(0x4661, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 006F
        gbc.setState(0x34d1, 0x5271, 0x40d0, 0xa6b9, 0x5e7a, 0x3af5, 0x0, 0x0);
        gbc.writeMem(0x34d1, { 0xbf });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5271, gbc.sp());
        EXPECT(0x34d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0070
        gbc.setState(0xe6f3, 0x52c0, 0x51f0, 0x2dad, 0x99bc, 0xfcab, 0x1, 0x1);
        gbc.writeMem(0xe6f3, { 0xbf });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x52c0, gbc.sp());
        EXPECT(0xe6f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xe6f3));
        // BF 0071
        gbc.setState(0xb37e, 0x6f5b, 0x2ca0, 0xecba, 0x8ee4, 0xf081, 0x1, 0x0);
        gbc.writeMem(0xb37e, { 0xbf });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6f5b, gbc.sp());
        EXPECT(0xb37f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xb37e));
        // BF 0073
        gbc.setState(0xe144, 0x2e98, 0x2120, 0xdb0d, 0xdac4, 0xe99, 0x0, 0x1);
        gbc.writeMem(0xe144, { 0xbf });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x2e98, gbc.sp());
        EXPECT(0xe145, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xe144));
        // BF 0074
        gbc.setState(0x82ff, 0x55f7, 0x3530, 0x4785, 0x5e77, 0x5184, 0x1, 0x1);
        gbc.writeMem(0x82ff, { 0xbf });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x55f7, gbc.sp());
        EXPECT(0x8300, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x82ff));
        // BF 0075
        gbc.setState(0x9f49, 0xd6b4, 0x3d60, 0xcc4d, 0x5f7e, 0x3a3f, 0x1, 0x1);
        gbc.writeMem(0x9f49, { 0xbf });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xd6b4, gbc.sp());
        EXPECT(0x9f4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x9f49));
        // BF 0076
        gbc.setState(0x24be, 0x4941, 0x5cd0, 0x5537, 0xa7b8, 0x3192, 0x0, 0x0);
        gbc.writeMem(0x24be, { 0xbf });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4941, gbc.sp());
        EXPECT(0x24bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0077
        gbc.setState(0xe19a, 0xeef9, 0x2f0, 0xcc47, 0x9140, 0x9534, 0x0, 0x0);
        gbc.writeMem(0xe19a, { 0xbf });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xeef9, gbc.sp());
        EXPECT(0xe19b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xe19a));
        // BF 0078
        gbc.setState(0xaf9, 0xfce1, 0x9e20, 0xf6d2, 0xe3a0, 0xb9b, 0x0, 0x1);
        gbc.writeMem(0xaf9, { 0xbf });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xfce1, gbc.sp());
        EXPECT(0xafa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0079
        gbc.setState(0x8998, 0xa718, 0x69e0, 0xe8a8, 0xe571, 0xae9a, 0x0, 0x0);
        gbc.writeMem(0x8998, { 0xbf });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xa718, gbc.sp());
        EXPECT(0x8999, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x8998));
        // BF 007B
        gbc.setState(0x5292, 0x556c, 0xb370, 0xb620, 0xe1d9, 0xd8c9, 0x1, 0x0);
        gbc.writeMem(0x5292, { 0xbf });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x556c, gbc.sp());
        EXPECT(0x5293, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 007C
        gbc.setState(0x3432, 0xa06, 0xfc00, 0x3255, 0xb9b8, 0x3af1, 0x1, 0x0);
        gbc.writeMem(0x3432, { 0xbf });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xa06, gbc.sp());
        EXPECT(0x3433, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 007E
        gbc.setState(0x1696, 0x4699, 0x730, 0xdebf, 0xc438, 0x721, 0x0, 0x0);
        gbc.writeMem(0x1696, { 0xbf });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4699, gbc.sp());
        EXPECT(0x1697, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 007F
        gbc.setState(0x6234, 0xba65, 0x1ef0, 0xb669, 0x7884, 0xf535, 0x1, 0x1);
        gbc.writeMem(0x6234, { 0xbf });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xba65, gbc.sp());
        EXPECT(0x6235, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0080
        gbc.setState(0xedb1, 0x153e, 0xea20, 0x6eea, 0xb915, 0xe6a8, 0x1, 0x0);
        gbc.writeMem(0xedb1, { 0xbf });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x153e, gbc.sp());
        EXPECT(0xedb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xedb1));
        // BF 0081
        gbc.setState(0x38a4, 0xd02a, 0x4340, 0xa528, 0xc52, 0x9003, 0x1, 0x0);
        gbc.writeMem(0x38a4, { 0xbf });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xd02a, gbc.sp());
        EXPECT(0x38a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0082
        gbc.setState(0x9c73, 0x891b, 0xc4f0, 0x6417, 0x79d, 0x2652, 0x1, 0x0);
        gbc.writeMem(0x9c73, { 0xbf });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x891b, gbc.sp());
        EXPECT(0x9c74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x9c73));
        // BF 0083
        gbc.setState(0xdbaa, 0x7479, 0xa220, 0x2098, 0xf687, 0x69b8, 0x1, 0x1);
        gbc.writeMem(0xdbaa, { 0xbf });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x7479, gbc.sp());
        EXPECT(0xdbab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xdbaa));
        // BF 0084
        gbc.setState(0x4686, 0x4686, 0xdca0, 0x7a05, 0xd051, 0x6880, 0x1, 0x0);
        gbc.writeMem(0x4686, { 0xbf });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x4686, gbc.sp());
        EXPECT(0x4687, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0085
        gbc.setState(0x92ed, 0xe85f, 0x2890, 0x2107, 0x9504, 0x6957, 0x1, 0x0);
        gbc.writeMem(0x92ed, { 0xbf });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xe85f, gbc.sp());
        EXPECT(0x92ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x92ed));
        // BF 0086
        gbc.setState(0x60ac, 0x8997, 0x4980, 0x1467, 0xf98, 0xd9c7, 0x1, 0x0);
        gbc.writeMem(0x60ac, { 0xbf });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x8997, gbc.sp());
        EXPECT(0x60ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0087
        gbc.setState(0xd717, 0x8f43, 0xb720, 0xbc83, 0x1623, 0xbc38, 0x1, 0x1);
        gbc.writeMem(0xd717, { 0xbf });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x8f43, gbc.sp());
        EXPECT(0xd718, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xd717));
        // BF 0088
        gbc.setState(0x2199, 0x9857, 0xe690, 0x16c0, 0x2b6, 0xbd6a, 0x1, 0x0);
        gbc.writeMem(0x2199, { 0xbf });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x9857, gbc.sp());
        EXPECT(0x219a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0089
        gbc.setState(0x6167, 0x6a48, 0x4740, 0x76fa, 0x63b3, 0x4fe1, 0x0, 0x1);
        gbc.writeMem(0x6167, { 0xbf });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x6a48, gbc.sp());
        EXPECT(0x6168, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 008A
        gbc.setState(0xc7b1, 0x2e96, 0xb6d0, 0x639a, 0xb55e, 0xc649, 0x0, 0x0);
        gbc.writeMem(0xc7b1, { 0xbf });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x2e96, gbc.sp());
        EXPECT(0xc7b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc7b1));
        // BF 008B
        gbc.setState(0x353b, 0x2f6, 0x9d70, 0x4a1, 0xbcfc, 0x5de5, 0x1, 0x0);
        gbc.writeMem(0x353b, { 0xbf });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x2f6, gbc.sp());
        EXPECT(0x353c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 008C
        gbc.setState(0xd902, 0x743f, 0xfef0, 0xd42e, 0x6e86, 0x1659, 0x1, 0x0);
        gbc.writeMem(0xd902, { 0xbf });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x743f, gbc.sp());
        EXPECT(0xd903, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xd902));
        // BF 008D
        gbc.setState(0x326a, 0xf894, 0x8310, 0x6db3, 0xebcc, 0xf9f, 0x0, 0x0);
        gbc.writeMem(0x326a, { 0xbf });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xf894, gbc.sp());
        EXPECT(0x326b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 008E
        gbc.setState(0x94d0, 0xabf1, 0x2880, 0x3eec, 0xad7c, 0x4ad7, 0x1, 0x0);
        gbc.writeMem(0x94d0, { 0xbf });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xabf1, gbc.sp());
        EXPECT(0x94d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x94d0));
        // BF 008F
        gbc.setState(0x1e04, 0xa27f, 0x9f10, 0xf457, 0x7670, 0xd642, 0x0, 0x0);
        gbc.writeMem(0x1e04, { 0xbf });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xa27f, gbc.sp());
        EXPECT(0x1e05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0090
        gbc.setState(0xa8e1, 0x1ebc, 0x90e0, 0xbed0, 0x2696, 0x39e5, 0x1, 0x0);
        gbc.writeMem(0xa8e1, { 0xbf });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x1ebc, gbc.sp());
        EXPECT(0xa8e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xa8e1));
        // BF 0091
        gbc.setState(0xde3f, 0x4498, 0x7620, 0x9be, 0xff39, 0x1be3, 0x1, 0x0);
        gbc.writeMem(0xde3f, { 0xbf });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4498, gbc.sp());
        EXPECT(0xde40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xde3f));
        // BF 0092
        gbc.setState(0x522e, 0x69d5, 0x7980, 0xaf47, 0x1b5c, 0x54df, 0x1, 0x1);
        gbc.writeMem(0x522e, { 0xbf });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x69d5, gbc.sp());
        EXPECT(0x522f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0093
        gbc.setState(0xf49, 0xb68b, 0xe150, 0x9889, 0xa657, 0xa283, 0x1, 0x1);
        gbc.writeMem(0xf49, { 0xbf });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xb68b, gbc.sp());
        EXPECT(0xf4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0095
        gbc.setState(0xdf00, 0xc5c2, 0x6ac0, 0x5299, 0x6955, 0xf605, 0x0, 0x0);
        gbc.writeMem(0xdf00, { 0xbf });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xc5c2, gbc.sp());
        EXPECT(0xdf01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xdf00));
        // BF 0096
        gbc.setState(0xcd7, 0xf2b, 0xec90, 0x7d5f, 0xe41f, 0x8cf6, 0x1, 0x1);
        gbc.writeMem(0xcd7, { 0xbf });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xf2b, gbc.sp());
        EXPECT(0xcd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0097
        gbc.setState(0x301f, 0x8be8, 0x4770, 0xe515, 0x12be, 0xec36, 0x0, 0x0);
        gbc.writeMem(0x301f, { 0xbf });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x8be8, gbc.sp());
        EXPECT(0x3020, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0098
        gbc.setState(0x5b47, 0x5412, 0xfbf0, 0x8fa4, 0xa45, 0x7a39, 0x1, 0x1);
        gbc.writeMem(0x5b47, { 0xbf });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5412, gbc.sp());
        EXPECT(0x5b48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0099
        gbc.setState(0x6f0d, 0x1263, 0xfbe0, 0xffc7, 0xfa0, 0x446c, 0x1, 0x1);
        gbc.writeMem(0x6f0d, { 0xbf });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x1263, gbc.sp());
        EXPECT(0x6f0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 009A
        gbc.setState(0x1f4, 0x9593, 0x7250, 0xdee6, 0x2bfd, 0xe25f, 0x1, 0x0);
        gbc.writeMem(0x1f4, { 0xbf });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x9593, gbc.sp());
        EXPECT(0x1f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 009B
        gbc.setState(0x89bd, 0x6038, 0xb3f0, 0xce4c, 0x25de, 0xd312, 0x0, 0x0);
        gbc.writeMem(0x89bd, { 0xbf });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x6038, gbc.sp());
        EXPECT(0x89be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x89bd));
        // BF 009C
        gbc.setState(0xdf49, 0xfd8c, 0x3620, 0xaf62, 0xcfab, 0xbe09, 0x0, 0x1);
        gbc.writeMem(0xdf49, { 0xbf });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xfd8c, gbc.sp());
        EXPECT(0xdf4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xdf49));
        // BF 009D
        gbc.setState(0x56bd, 0x3c80, 0x64a0, 0x1c98, 0xe988, 0x6904, 0x0, 0x0);
        gbc.writeMem(0x56bd, { 0xbf });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3c80, gbc.sp());
        EXPECT(0x56be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 009E
        gbc.setState(0xb7b1, 0x4f01, 0xcc60, 0xcfe4, 0x1a21, 0x68c0, 0x0, 0x1);
        gbc.writeMem(0xb7b1, { 0xbf });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x4f01, gbc.sp());
        EXPECT(0xb7b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xb7b1));
        // BF 009F
        gbc.setState(0xb437, 0xf898, 0x7ae0, 0x396, 0x1f7c, 0x11af, 0x0, 0x1);
        gbc.writeMem(0xb437, { 0xbf });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf898, gbc.sp());
        EXPECT(0xb438, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xb437));
        // BF 00A0
        gbc.setState(0xbf09, 0x8d06, 0x8510, 0xfe70, 0x8da8, 0x633e, 0x1, 0x0);
        gbc.writeMem(0xbf09, { 0xbf });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x8d06, gbc.sp());
        EXPECT(0xbf0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xbf09));
        // BF 00A1
        gbc.setState(0x9839, 0x189a, 0x1c40, 0x1151, 0x909, 0x357e, 0x1, 0x1);
        gbc.writeMem(0x9839, { 0xbf });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x189a, gbc.sp());
        EXPECT(0x983a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x9839));
        // BF 00A2
        gbc.setState(0x67d3, 0x754a, 0x9050, 0x3ff7, 0xda6d, 0x5620, 0x0, 0x0);
        gbc.writeMem(0x67d3, { 0xbf });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x754a, gbc.sp());
        EXPECT(0x67d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 00A3
        gbc.setState(0x293a, 0x9ea2, 0x5e0, 0x928c, 0xf0e7, 0xa6ae, 0x0, 0x0);
        gbc.writeMem(0x293a, { 0xbf });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x9ea2, gbc.sp());
        EXPECT(0x293b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 00A4
        gbc.setState(0xbc9a, 0x9294, 0xa950, 0x3b65, 0xb2f5, 0xa019, 0x1, 0x1);
        gbc.writeMem(0xbc9a, { 0xbf });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9294, gbc.sp());
        EXPECT(0xbc9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xbc9a));
        // BF 00A5
        gbc.setState(0xc624, 0x638b, 0x67f0, 0x8601, 0x2d15, 0xabc6, 0x1, 0x1);
        gbc.writeMem(0xc624, { 0xbf });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x638b, gbc.sp());
        EXPECT(0xc625, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc624));
        // BF 00A6
        gbc.setState(0xf8f, 0xb408, 0xb000, 0xb68f, 0x6dc2, 0x81bd, 0x1, 0x0);
        gbc.writeMem(0xf8f, { 0xbf });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xb408, gbc.sp());
        EXPECT(0xf90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 00A7
        gbc.setState(0x4385, 0xbb49, 0x7490, 0xaf41, 0x7555, 0xb89e, 0x0, 0x0);
        gbc.writeMem(0x4385, { 0xbf });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xbb49, gbc.sp());
        EXPECT(0x4386, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 00A8
        gbc.setState(0x6dde, 0x8acb, 0x5100, 0x3a86, 0xe428, 0x5393, 0x0, 0x0);
        gbc.writeMem(0x6dde, { 0xbf });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8acb, gbc.sp());
        EXPECT(0x6ddf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 00A9
        gbc.setState(0xe114, 0x71de, 0x92b0, 0x4a15, 0x4afb, 0x74cf, 0x0, 0x1);
        gbc.writeMem(0xe114, { 0xbf });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x71de, gbc.sp());
        EXPECT(0xe115, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xe114));
        // BF 00AA
        gbc.setState(0xcdc3, 0xb233, 0x8bf0, 0x2c91, 0xce7b, 0x87a8, 0x1, 0x0);
        gbc.writeMem(0xcdc3, { 0xbf });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xb233, gbc.sp());
        EXPECT(0xcdc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xcdc3));
        // BF 00AB
        gbc.setState(0xde65, 0xee8c, 0x82a0, 0xd6f8, 0x2c0c, 0x5b93, 0x1, 0x1);
        gbc.writeMem(0xde65, { 0xbf });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xee8c, gbc.sp());
        EXPECT(0xde66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xde65));
        // BF 00AC
        gbc.setState(0x8f18, 0xd327, 0x7b00, 0x5442, 0xd309, 0x3855, 0x1, 0x1);
        gbc.writeMem(0x8f18, { 0xbf });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xd327, gbc.sp());
        EXPECT(0x8f19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x8f18));
        // BF 00AD
        gbc.setState(0xaf1, 0x45ad, 0x3250, 0xe52f, 0xb4e9, 0x4ec7, 0x1, 0x1);
        gbc.writeMem(0xaf1, { 0xbf });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x45ad, gbc.sp());
        EXPECT(0xaf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 00AE
        gbc.setState(0xef08, 0x4970, 0x1fa0, 0x131c, 0xa643, 0x10f1, 0x1, 0x1);
        gbc.writeMem(0xef08, { 0xbf });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x4970, gbc.sp());
        EXPECT(0xef09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xef08));
        // BF 00AF
        gbc.setState(0x1d6d, 0xb7cd, 0xc2f0, 0xea93, 0x86db, 0xae61, 0x1, 0x1);
        gbc.writeMem(0x1d6d, { 0xbf });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xb7cd, gbc.sp());
        EXPECT(0x1d6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 00B0
        gbc.setState(0xc00a, 0x83e0, 0xbeb0, 0xc715, 0xe45a, 0x6d33, 0x0, 0x1);
        gbc.writeMem(0xc00a, { 0xbf });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x83e0, gbc.sp());
        EXPECT(0xc00b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc00a));
        // BF 00B1
        gbc.setState(0x63bd, 0xd6e4, 0x7a80, 0xfb97, 0x29b5, 0x2874, 0x1, 0x1);
        gbc.writeMem(0x63bd, { 0xbf });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xd6e4, gbc.sp());
        EXPECT(0x63be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 00B3
        gbc.setState(0x6c95, 0x954b, 0x68b0, 0x518c, 0x9d5d, 0x92ef, 0x1, 0x0);
        gbc.writeMem(0x6c95, { 0xbf });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x954b, gbc.sp());
        EXPECT(0x6c96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 00B4
        gbc.setState(0x689f, 0x8c2, 0x26c0, 0x7827, 0x67f4, 0x9a1e, 0x0, 0x0);
        gbc.writeMem(0x689f, { 0xbf });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x8c2, gbc.sp());
        EXPECT(0x68a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 00B5
        gbc.setState(0x26e0, 0xb0d5, 0x5680, 0x9ebc, 0xc681, 0xbbc8, 0x0, 0x1);
        gbc.writeMem(0x26e0, { 0xbf });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xb0d5, gbc.sp());
        EXPECT(0x26e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 00B6
        gbc.setState(0x89f9, 0x8f07, 0xdf70, 0x8dfa, 0x4d5, 0x62b7, 0x1, 0x0);
        gbc.writeMem(0x89f9, { 0xbf });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x8f07, gbc.sp());
        EXPECT(0x89fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x89f9));
        // BF 00B7
        gbc.setState(0x7e94, 0x2eb2, 0x5e10, 0x365d, 0x897, 0x659b, 0x0, 0x0);
        gbc.writeMem(0x7e94, { 0xbf });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x2eb2, gbc.sp());
        EXPECT(0x7e95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 00B8
        gbc.setState(0x2467, 0xa40d, 0xa880, 0xdd9a, 0x31dc, 0x3549, 0x1, 0x0);
        gbc.writeMem(0x2467, { 0xbf });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xa40d, gbc.sp());
        EXPECT(0x2468, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 00B9
        gbc.setState(0x9974, 0xdcb5, 0xed00, 0xa7ae, 0x2efe, 0x8eb9, 0x0, 0x1);
        gbc.writeMem(0x9974, { 0xbf });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xdcb5, gbc.sp());
        EXPECT(0x9975, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x9974));
        // BF 00BA
        gbc.setState(0xaeaf, 0x8675, 0x6150, 0xf8be, 0x6e7a, 0xd05f, 0x0, 0x1);
        gbc.writeMem(0xaeaf, { 0xbf });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x8675, gbc.sp());
        EXPECT(0xaeb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xaeaf));
        // BF 00BB
        gbc.setState(0x12c, 0x944e, 0x6e70, 0x955d, 0xef8b, 0x3834, 0x0, 0x0);
        gbc.writeMem(0x12c, { 0xbf });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x944e, gbc.sp());
        EXPECT(0x12d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 00BC
        gbc.setState(0x185c, 0x8070, 0xf430, 0x7d03, 0x144a, 0x6c6, 0x0, 0x1);
        gbc.writeMem(0x185c, { 0xbf });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x8070, gbc.sp());
        EXPECT(0x185d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 00BD
        gbc.setState(0xc336, 0x9c1, 0x33a0, 0x426, 0xb20f, 0x3942, 0x1, 0x0);
        gbc.writeMem(0xc336, { 0xbf });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x9c1, gbc.sp());
        EXPECT(0xc337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc336));
        // BF 00BE
        gbc.setState(0x3586, 0xeee5, 0x6640, 0x6266, 0x5711, 0x93a1, 0x0, 0x0);
        gbc.writeMem(0x3586, { 0xbf });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xeee5, gbc.sp());
        EXPECT(0x3587, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 00BF
        gbc.setState(0x7519, 0x76c8, 0x4a60, 0x40e6, 0x5b7e, 0x40b1, 0x1, 0x0);
        gbc.writeMem(0x7519, { 0xbf });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x76c8, gbc.sp());
        EXPECT(0x751a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 00C1
        gbc.setState(0xc153, 0xa253, 0x1240, 0x6d08, 0x9eaa, 0x99a8, 0x0, 0x0);
        gbc.writeMem(0xc153, { 0xbf });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xa253, gbc.sp());
        EXPECT(0xc154, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc153));
        // BF 00C2
        gbc.setState(0xdd53, 0x2e3, 0x27b0, 0xa14b, 0xd4ee, 0x515f, 0x1, 0x1);
        gbc.writeMem(0xdd53, { 0xbf });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x2e3, gbc.sp());
        EXPECT(0xdd54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xdd53));
        // BF 00C3
        gbc.setState(0xba64, 0xd241, 0x90d0, 0xd853, 0x5eca, 0x312d, 0x1, 0x1);
        gbc.writeMem(0xba64, { 0xbf });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xd241, gbc.sp());
        EXPECT(0xba65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xba64));
        // BF 00C4
        gbc.setState(0xbfeb, 0x7a28, 0xebc0, 0x651b, 0xc72e, 0xfd18, 0x0, 0x0);
        gbc.writeMem(0xbfeb, { 0xbf });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x7a28, gbc.sp());
        EXPECT(0xbfec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xbfeb));
        // BF 00C5
        gbc.setState(0x7743, 0xa901, 0x5680, 0x1e3c, 0xeafd, 0x9504, 0x0, 0x0);
        gbc.writeMem(0x7743, { 0xbf });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa901, gbc.sp());
        EXPECT(0x7744, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 00C6
        gbc.setState(0xebcb, 0x28b9, 0xd740, 0x494, 0x28c9, 0xc59e, 0x1, 0x0);
        gbc.writeMem(0xebcb, { 0xbf });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x28b9, gbc.sp());
        EXPECT(0xebcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xebcb));
        // BF 00C7
        gbc.setState(0x81de, 0xfb51, 0x8850, 0x3a13, 0xdb76, 0x4a02, 0x1, 0x1);
        gbc.writeMem(0x81de, { 0xbf });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xfb51, gbc.sp());
        EXPECT(0x81df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x81de));
        // BF 00C8
        gbc.setState(0x723e, 0x50b8, 0x31a0, 0xe2b, 0xc624, 0xd1e5, 0x0, 0x1);
        gbc.writeMem(0x723e, { 0xbf });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x50b8, gbc.sp());
        EXPECT(0x723f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 00C9
        gbc.setState(0x2100, 0x31cb, 0x1420, 0x4a0b, 0x6f11, 0x7ad7, 0x0, 0x0);
        gbc.writeMem(0x2100, { 0xbf });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x31cb, gbc.sp());
        EXPECT(0x2101, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 00CB
        gbc.setState(0x304a, 0x1de7, 0x8ab0, 0x310f, 0x513b, 0xc27e, 0x1, 0x1);
        gbc.writeMem(0x304a, { 0xbf });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x1de7, gbc.sp());
        EXPECT(0x304b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 00CC
        gbc.setState(0xce40, 0x3300, 0x55a0, 0x318, 0xd27b, 0x9ba9, 0x0, 0x0);
        gbc.writeMem(0xce40, { 0xbf });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3300, gbc.sp());
        EXPECT(0xce41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xce40));
        // BF 00CD
        gbc.setState(0xca8a, 0xeb8e, 0x4d90, 0x9167, 0xe459, 0x3072, 0x1, 0x0);
        gbc.writeMem(0xca8a, { 0xbf });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xeb8e, gbc.sp());
        EXPECT(0xca8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xca8a));
        // BF 00CF
        gbc.setState(0x6514, 0xcbcc, 0x1730, 0x8871, 0xb271, 0x4e29, 0x1, 0x0);
        gbc.writeMem(0x6514, { 0xbf });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xcbcc, gbc.sp());
        EXPECT(0x6515, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 00D0
        gbc.setState(0x22f9, 0xbf87, 0xc650, 0x53ce, 0xd013, 0x31e4, 0x1, 0x1);
        gbc.writeMem(0x22f9, { 0xbf });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xbf87, gbc.sp());
        EXPECT(0x22fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 00D1
        gbc.setState(0x64b4, 0x7466, 0xdd50, 0xf506, 0x46ac, 0xb5a9, 0x1, 0x0);
        gbc.writeMem(0x64b4, { 0xbf });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x7466, gbc.sp());
        EXPECT(0x64b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 00D2
        gbc.setState(0x96d9, 0x223f, 0xfb70, 0xfc1, 0x8173, 0x4da, 0x1, 0x1);
        gbc.writeMem(0x96d9, { 0xbf });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x223f, gbc.sp());
        EXPECT(0x96da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x96d9));
        // BF 00D3
        gbc.setState(0x3d38, 0x9624, 0xfd50, 0xf09, 0xb382, 0xff55, 0x0, 0x1);
        gbc.writeMem(0x3d38, { 0xbf });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x9624, gbc.sp());
        EXPECT(0x3d39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 00D5
        gbc.setState(0x1473, 0x9a31, 0xa700, 0x7c42, 0x4f8b, 0x4916, 0x0, 0x0);
        gbc.writeMem(0x1473, { 0xbf });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9a31, gbc.sp());
        EXPECT(0x1474, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 00D6
        gbc.setState(0x763, 0x85e4, 0xd750, 0x5dbc, 0xcc80, 0xa445, 0x1, 0x0);
        gbc.writeMem(0x763, { 0xbf });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x85e4, gbc.sp());
        EXPECT(0x764, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 00D7
        gbc.setState(0x5f30, 0x2357, 0xac20, 0x8fb1, 0x41fa, 0xa735, 0x1, 0x0);
        gbc.writeMem(0x5f30, { 0xbf });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x2357, gbc.sp());
        EXPECT(0x5f31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 00D8
        gbc.setState(0x2e75, 0x36d3, 0x2620, 0xb710, 0xddf5, 0xfe86, 0x0, 0x0);
        gbc.writeMem(0x2e75, { 0xbf });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x36d3, gbc.sp());
        EXPECT(0x2e76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 00D9
        gbc.setState(0x1e09, 0xd576, 0x3dc0, 0xbb55, 0xbe45, 0xae7f, 0x1, 0x1);
        gbc.writeMem(0x1e09, { 0xbf });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd576, gbc.sp());
        EXPECT(0x1e0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 00DA
        gbc.setState(0x23d3, 0x3dc8, 0xb840, 0x6a03, 0x9e11, 0xf23a, 0x1, 0x0);
        gbc.writeMem(0x23d3, { 0xbf });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x3dc8, gbc.sp());
        EXPECT(0x23d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 00DB
        gbc.setState(0xe022, 0xd8c1, 0x920, 0xb3e, 0x9264, 0xff0b, 0x0, 0x1);
        gbc.writeMem(0xe022, { 0xbf });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xd8c1, gbc.sp());
        EXPECT(0xe023, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xe022));
        // BF 00DC
        gbc.setState(0x8ac3, 0xc50, 0xd710, 0x9a8d, 0xbef0, 0x7509, 0x1, 0x0);
        gbc.writeMem(0x8ac3, { 0xbf });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xc50, gbc.sp());
        EXPECT(0x8ac4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x8ac3));
        // BF 00DD
        gbc.setState(0xaa3d, 0xfa08, 0xee90, 0xefe3, 0x2800, 0x4ff6, 0x0, 0x1);
        gbc.writeMem(0xaa3d, { 0xbf });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xfa08, gbc.sp());
        EXPECT(0xaa3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xaa3d));
        // BF 00DE
        gbc.setState(0x8c87, 0x68c5, 0xbfe0, 0x6cc7, 0x15d2, 0x6d2b, 0x0, 0x1);
        gbc.writeMem(0x8c87, { 0xbf });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x68c5, gbc.sp());
        EXPECT(0x8c88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x8c87));
        // BF 00DF
        gbc.setState(0xcd9f, 0xb3c8, 0x3950, 0x8edc, 0x96c6, 0xf970, 0x1, 0x1);
        gbc.writeMem(0xcd9f, { 0xbf });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xb3c8, gbc.sp());
        EXPECT(0xcda0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xcd9f));
        // BF 00E0
        gbc.setState(0xce4a, 0xa8d8, 0xc100, 0xb3a8, 0xa8e, 0x4b4d, 0x1, 0x1);
        gbc.writeMem(0xce4a, { 0xbf });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xa8d8, gbc.sp());
        EXPECT(0xce4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xce4a));
        // BF 00E1
        gbc.setState(0x42c7, 0xf60e, 0x6d60, 0x6bd, 0xbff0, 0xee62, 0x0, 0x1);
        gbc.writeMem(0x42c7, { 0xbf });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf60e, gbc.sp());
        EXPECT(0x42c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 00E3
        gbc.setState(0x1b32, 0x15b9, 0xfee0, 0x544e, 0x1bf0, 0xb6c9, 0x0, 0x0);
        gbc.writeMem(0x1b32, { 0xbf });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x15b9, gbc.sp());
        EXPECT(0x1b33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 00E4
        gbc.setState(0x4167, 0xa55, 0x8f10, 0x6888, 0x3c71, 0x6d71, 0x1, 0x1);
        gbc.writeMem(0x4167, { 0xbf });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa55, gbc.sp());
        EXPECT(0x4168, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 00E5
        gbc.setState(0x108, 0xd2f8, 0xc1b0, 0xd789, 0x4507, 0x1d2d, 0x1, 0x1);
        gbc.writeMem(0x108, { 0xbf });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xd2f8, gbc.sp());
        EXPECT(0x109, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 00E6
        gbc.setState(0x9836, 0x1713, 0xfa40, 0x1497, 0xc697, 0xf0b8, 0x1, 0x0);
        gbc.writeMem(0x9836, { 0xbf });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x1713, gbc.sp());
        EXPECT(0x9837, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x9836));
        // BF 00E7
        gbc.setState(0x74a, 0xac03, 0x6050, 0x202d, 0x5423, 0xdd90, 0x1, 0x0);
        gbc.writeMem(0x74a, { 0xbf });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xac03, gbc.sp());
        EXPECT(0x74b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 00E8
        gbc.setState(0xe222, 0x39e8, 0xc850, 0xb34c, 0x70e, 0x47c7, 0x1, 0x1);
        gbc.writeMem(0xe222, { 0xbf });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x39e8, gbc.sp());
        EXPECT(0xe223, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xe222));
        // BF 00E9
        gbc.setState(0x379, 0x6985, 0x7b40, 0xa191, 0xaa81, 0xd4ca, 0x1, 0x1);
        gbc.writeMem(0x379, { 0xbf });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x6985, gbc.sp());
        EXPECT(0x37a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 00EA
        gbc.setState(0xcc68, 0xa58d, 0x65a0, 0xbc72, 0xac79, 0x8955, 0x0, 0x1);
        gbc.writeMem(0xcc68, { 0xbf });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa58d, gbc.sp());
        EXPECT(0xcc69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xcc68));
        // BF 00EB
        gbc.setState(0x1c28, 0xec69, 0xfa0, 0xb0cd, 0x9033, 0xb38c, 0x0, 0x0);
        gbc.writeMem(0x1c28, { 0xbf });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xec69, gbc.sp());
        EXPECT(0x1c29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 00EC
        gbc.setState(0xaa8e, 0x5f6f, 0x4c0, 0x901c, 0xdc6e, 0x2d38, 0x1, 0x0);
        gbc.writeMem(0xaa8e, { 0xbf });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x5f6f, gbc.sp());
        EXPECT(0xaa8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xaa8e));
        // BF 00ED
        gbc.setState(0xe5d8, 0xfb6a, 0x7a40, 0x4713, 0xaf4e, 0x4565, 0x0, 0x1);
        gbc.writeMem(0xe5d8, { 0xbf });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xfb6a, gbc.sp());
        EXPECT(0xe5d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xe5d8));
        // BF 00EE
        gbc.setState(0x9388, 0x34a9, 0x8d40, 0x591, 0xbe6f, 0x4494, 0x0, 0x0);
        gbc.writeMem(0x9388, { 0xbf });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x34a9, gbc.sp());
        EXPECT(0x9389, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x9388));
        // BF 00F0
        gbc.setState(0xba4, 0x13c8, 0xd80, 0x78f5, 0x2d32, 0xab3a, 0x1, 0x1);
        gbc.writeMem(0xba4, { 0xbf });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x13c8, gbc.sp());
        EXPECT(0xba5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 00F1
        gbc.setState(0x37a, 0x5790, 0x8ab0, 0x90c9, 0xf397, 0x2855, 0x0, 0x0);
        gbc.writeMem(0x37a, { 0xbf });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x5790, gbc.sp());
        EXPECT(0x37b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 00F2
        gbc.setState(0xc8fa, 0xb2c7, 0x3ef0, 0x8d5d, 0xeeb3, 0x18df, 0x1, 0x0);
        gbc.writeMem(0xc8fa, { 0xbf });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb2c7, gbc.sp());
        EXPECT(0xc8fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc8fa));
        // BF 00F3
        gbc.setState(0x918d, 0x80fa, 0x8df0, 0x1dda, 0xbbd6, 0xe63e, 0x1, 0x1);
        gbc.writeMem(0x918d, { 0xbf });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x80fa, gbc.sp());
        EXPECT(0x918e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x918d));
        // BF 00F4
        gbc.setState(0x2b4e, 0x1dad, 0xd120, 0x1086, 0xa987, 0x5a37, 0x0, 0x0);
        gbc.writeMem(0x2b4e, { 0xbf });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x1dad, gbc.sp());
        EXPECT(0x2b4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 00F5
        gbc.setState(0x24a9, 0xeff0, 0xbf20, 0x1e04, 0xba6, 0xe1e4, 0x0, 0x1);
        gbc.writeMem(0x24a9, { 0xbf });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xeff0, gbc.sp());
        EXPECT(0x24aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 00F6
        gbc.setState(0xd54c, 0xc792, 0xc530, 0xc7f7, 0x72c8, 0xc791, 0x0, 0x0);
        gbc.writeMem(0xd54c, { 0xbf });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xc792, gbc.sp());
        EXPECT(0xd54d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xd54c));
        // BF 00F7
        gbc.setState(0xd67c, 0x869a, 0xd750, 0x5985, 0x130f, 0x215b, 0x1, 0x1);
        gbc.writeMem(0xd67c, { 0xbf });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x869a, gbc.sp());
        EXPECT(0xd67d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xd67c));
        // BF 00F8
        gbc.setState(0x1b60, 0xde83, 0x9e30, 0x2d46, 0x6c48, 0xcd38, 0x1, 0x0);
        gbc.writeMem(0x1b60, { 0xbf });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xde83, gbc.sp());
        EXPECT(0x1b61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 00FA
        gbc.setState(0xb3e, 0xaf1, 0x8950, 0xe8cf, 0xde94, 0x8cba, 0x1, 0x1);
        gbc.writeMem(0xb3e, { 0xbf });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xaf1, gbc.sp());
        EXPECT(0xb3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 00FB
        gbc.setState(0x5fe9, 0x55b2, 0x1a70, 0x3e88, 0xd71d, 0x9497, 0x0, 0x0);
        gbc.writeMem(0x5fe9, { 0xbf });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x55b2, gbc.sp());
        EXPECT(0x5fea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 00FC
        gbc.setState(0xe3e2, 0x630f, 0x8f60, 0x976c, 0x669b, 0x3592, 0x1, 0x0);
        gbc.writeMem(0xe3e2, { 0xbf });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x630f, gbc.sp());
        EXPECT(0xe3e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xe3e2));
        // BF 00FD
        gbc.setState(0xdc73, 0xfe81, 0x26e0, 0x2dc5, 0x4e85, 0x1801, 0x0, 0x0);
        gbc.writeMem(0xdc73, { 0xbf });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xfe81, gbc.sp());
        EXPECT(0xdc74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xdc73));
        // BF 00FE
        gbc.setState(0x799a, 0xd864, 0xfae0, 0x1688, 0x754e, 0x24a7, 0x1, 0x0);
        gbc.writeMem(0x799a, { 0xbf });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd864, gbc.sp());
        EXPECT(0x799b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 00FF
        gbc.setState(0x8018, 0xdfde, 0x5220, 0xb9e6, 0xb4ab, 0x55d5, 0x1, 0x1);
        gbc.writeMem(0x8018, { 0xbf });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xdfde, gbc.sp());
        EXPECT(0x8019, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x8018));
        // BF 0100
        gbc.setState(0x2a52, 0x4326, 0xb520, 0x8e4e, 0x3f4, 0x1d8e, 0x1, 0x0);
        gbc.writeMem(0x2a52, { 0xbf });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4326, gbc.sp());
        EXPECT(0x2a53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0101
        gbc.setState(0x3b96, 0x4c5e, 0xbf80, 0x5f02, 0x2853, 0xe912, 0x1, 0x0);
        gbc.writeMem(0x3b96, { 0xbf });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x4c5e, gbc.sp());
        EXPECT(0x3b97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0102
        gbc.setState(0xa415, 0xddc9, 0x6740, 0x7051, 0x9f8c, 0x7765, 0x0, 0x1);
        gbc.writeMem(0xa415, { 0xbf });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xddc9, gbc.sp());
        EXPECT(0xa416, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xa415));
        // BF 0103
        gbc.setState(0x2fdf, 0xca1c, 0xfb80, 0x1c3a, 0xeaf7, 0x38bb, 0x0, 0x0);
        gbc.writeMem(0x2fdf, { 0xbf });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xca1c, gbc.sp());
        EXPECT(0x2fe0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0104
        gbc.setState(0xa573, 0x478a, 0x2b90, 0xa2c4, 0x521, 0xe5ac, 0x0, 0x1);
        gbc.writeMem(0xa573, { 0xbf });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x478a, gbc.sp());
        EXPECT(0xa574, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xa573));
        // BF 0105
        gbc.setState(0xa9b8, 0xabd3, 0xbbf0, 0xcfcd, 0x9450, 0xb4f3, 0x1, 0x0);
        gbc.writeMem(0xa9b8, { 0xbf });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xabd3, gbc.sp());
        EXPECT(0xa9b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xa9b8));
        // BF 0106
        gbc.setState(0x893d, 0x370b, 0xec00, 0x2c5c, 0xde82, 0x602e, 0x1, 0x1);
        gbc.writeMem(0x893d, { 0xbf });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x370b, gbc.sp());
        EXPECT(0x893e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x893d));
        // BF 0107
        gbc.setState(0x325e, 0x6265, 0x7dc0, 0x63bb, 0xec78, 0x4a9c, 0x0, 0x1);
        gbc.writeMem(0x325e, { 0xbf });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6265, gbc.sp());
        EXPECT(0x325f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0108
        gbc.setState(0x491e, 0xfa1c, 0xff20, 0x56a9, 0xee8f, 0xc4f9, 0x1, 0x0);
        gbc.writeMem(0x491e, { 0xbf });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xfa1c, gbc.sp());
        EXPECT(0x491f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0109
        gbc.setState(0x90a0, 0xafbd, 0x3b70, 0xce7d, 0x841f, 0x7d68, 0x0, 0x1);
        gbc.writeMem(0x90a0, { 0xbf });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xafbd, gbc.sp());
        EXPECT(0x90a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x90a0));
        // BF 010A
        gbc.setState(0x2f63, 0x9e1e, 0x3ff0, 0xbc51, 0xa316, 0xe9d, 0x1, 0x1);
        gbc.writeMem(0x2f63, { 0xbf });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x9e1e, gbc.sp());
        EXPECT(0x2f64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 010B
        gbc.setState(0x7cf5, 0x6be1, 0x1510, 0x1149, 0xa591, 0xbff7, 0x1, 0x1);
        gbc.writeMem(0x7cf5, { 0xbf });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6be1, gbc.sp());
        EXPECT(0x7cf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 010C
        gbc.setState(0x9db, 0x2e92, 0x4a30, 0x508a, 0x1f95, 0x59bc, 0x0, 0x1);
        gbc.writeMem(0x9db, { 0xbf });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x2e92, gbc.sp());
        EXPECT(0x9dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 010D
        gbc.setState(0x1137, 0x4b33, 0x5140, 0x6c0, 0x9fd4, 0x9aee, 0x1, 0x1);
        gbc.writeMem(0x1137, { 0xbf });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x4b33, gbc.sp());
        EXPECT(0x1138, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 010E
        gbc.setState(0x50fd, 0x888f, 0x2490, 0x88ce, 0xc588, 0xdab4, 0x1, 0x0);
        gbc.writeMem(0x50fd, { 0xbf });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x888f, gbc.sp());
        EXPECT(0x50fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 010F
        gbc.setState(0xc332, 0x8c59, 0x51b0, 0x31cc, 0xcbc7, 0x37af, 0x1, 0x1);
        gbc.writeMem(0xc332, { 0xbf });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8c59, gbc.sp());
        EXPECT(0xc333, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc332));
        // BF 0110
        gbc.setState(0x8779, 0xea79, 0x3b00, 0x1d3a, 0xd1f8, 0x15f4, 0x0, 0x0);
        gbc.writeMem(0x8779, { 0xbf });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xea79, gbc.sp());
        EXPECT(0x877a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x8779));
        // BF 0111
        gbc.setState(0x841d, 0x9639, 0xcf30, 0xc905, 0x618d, 0x478a, 0x0, 0x1);
        gbc.writeMem(0x841d, { 0xbf });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x9639, gbc.sp());
        EXPECT(0x841e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x841d));
        // BF 0112
        gbc.setState(0x9d4d, 0xe79b, 0x9b0, 0x58d2, 0xe074, 0x6ea6, 0x0, 0x0);
        gbc.writeMem(0x9d4d, { 0xbf });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xe79b, gbc.sp());
        EXPECT(0x9d4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x9d4d));
        // BF 0113
        gbc.setState(0xf58, 0xbd82, 0xb7d0, 0xe570, 0xbfb9, 0x3656, 0x0, 0x1);
        gbc.writeMem(0xf58, { 0xbf });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xbd82, gbc.sp());
        EXPECT(0xf59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0114
        gbc.setState(0xd506, 0x7575, 0x5710, 0x25fa, 0x43f3, 0xe67f, 0x0, 0x0);
        gbc.writeMem(0xd506, { 0xbf });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x7575, gbc.sp());
        EXPECT(0xd507, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xd506));
        // BF 0115
        gbc.setState(0xcf3a, 0xe611, 0x57c0, 0x7a63, 0x41d5, 0x8451, 0x1, 0x1);
        gbc.writeMem(0xcf3a, { 0xbf });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe611, gbc.sp());
        EXPECT(0xcf3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xcf3a));
        // BF 0116
        gbc.setState(0x877, 0x3119, 0x63f0, 0x2156, 0x8b95, 0xcf00, 0x1, 0x0);
        gbc.writeMem(0x877, { 0xbf });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x3119, gbc.sp());
        EXPECT(0x878, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0117
        gbc.setState(0xd646, 0x3f3b, 0x39c0, 0xfc4, 0x3cf3, 0x1a6b, 0x0, 0x0);
        gbc.writeMem(0xd646, { 0xbf });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x3f3b, gbc.sp());
        EXPECT(0xd647, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xd646));
        // BF 0118
        gbc.setState(0x8771, 0x63c1, 0x9560, 0x7e27, 0xf455, 0xdb3, 0x0, 0x0);
        gbc.writeMem(0x8771, { 0xbf });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x63c1, gbc.sp());
        EXPECT(0x8772, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x8771));
        // BF 0119
        gbc.setState(0x2fa7, 0xb015, 0x2030, 0xc4f1, 0x2b3b, 0x1b50, 0x1, 0x1);
        gbc.writeMem(0x2fa7, { 0xbf });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xb015, gbc.sp());
        EXPECT(0x2fa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 011A
        gbc.setState(0x38bb, 0x3cc7, 0xa00, 0x2ad9, 0x3de3, 0x3c89, 0x0, 0x1);
        gbc.writeMem(0x38bb, { 0xbf });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3cc7, gbc.sp());
        EXPECT(0x38bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 011C
        gbc.setState(0x470f, 0x737f, 0xd370, 0x2ef3, 0xe8bb, 0x4c0a, 0x1, 0x1);
        gbc.writeMem(0x470f, { 0xbf });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x737f, gbc.sp());
        EXPECT(0x4710, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 011D
        gbc.setState(0x7a7e, 0x6c07, 0x4600, 0xacaa, 0x7c92, 0xdd7c, 0x0, 0x0);
        gbc.writeMem(0x7a7e, { 0xbf });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x6c07, gbc.sp());
        EXPECT(0x7a7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 011E
        gbc.setState(0x6745, 0x35fd, 0xc000, 0x67c7, 0x9b15, 0xe431, 0x0, 0x0);
        gbc.writeMem(0x6745, { 0xbf });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x35fd, gbc.sp());
        EXPECT(0x6746, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 011F
        gbc.setState(0xa771, 0xfbab, 0x8120, 0x4ba8, 0xe7d2, 0x2514, 0x1, 0x1);
        gbc.writeMem(0xa771, { 0xbf });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xfbab, gbc.sp());
        EXPECT(0xa772, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xa771));
        // BF 0120
        gbc.setState(0x714f, 0x5d55, 0x35c0, 0x7429, 0xa275, 0x4383, 0x0, 0x0);
        gbc.writeMem(0x714f, { 0xbf });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x5d55, gbc.sp());
        EXPECT(0x7150, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0121
        gbc.setState(0x5c7f, 0x72f8, 0x16e0, 0xffeb, 0x75ec, 0xa119, 0x0, 0x1);
        gbc.writeMem(0x5c7f, { 0xbf });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x72f8, gbc.sp());
        EXPECT(0x5c80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0122
        gbc.setState(0x7a24, 0xacbe, 0x5fb0, 0x3ae0, 0x274b, 0x1483, 0x0, 0x0);
        gbc.writeMem(0x7a24, { 0xbf });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xacbe, gbc.sp());
        EXPECT(0x7a25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0123
        gbc.setState(0xa4f6, 0x48e5, 0xa10, 0x8f28, 0x693d, 0xca0c, 0x1, 0x0);
        gbc.writeMem(0xa4f6, { 0xbf });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x48e5, gbc.sp());
        EXPECT(0xa4f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xa4f6));
        // BF 0124
        gbc.setState(0xb78d, 0x9f71, 0x3930, 0xcf21, 0x9450, 0xb19b, 0x1, 0x1);
        gbc.writeMem(0xb78d, { 0xbf });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x9f71, gbc.sp());
        EXPECT(0xb78e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xb78d));
        // BF 0125
        gbc.setState(0x31b9, 0x2bd, 0xb860, 0x922d, 0x7820, 0x1cde, 0x0, 0x1);
        gbc.writeMem(0x31b9, { 0xbf });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x2bd, gbc.sp());
        EXPECT(0x31ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0126
        gbc.setState(0xa33e, 0x3176, 0x4dd0, 0xda4e, 0x800f, 0xcfe9, 0x0, 0x0);
        gbc.writeMem(0xa33e, { 0xbf });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x3176, gbc.sp());
        EXPECT(0xa33f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xa33e));
        // BF 0127
        gbc.setState(0xe063, 0x68cc, 0x1970, 0x4fc8, 0xdf22, 0x63d3, 0x1, 0x1);
        gbc.writeMem(0xe063, { 0xbf });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x68cc, gbc.sp());
        EXPECT(0xe064, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xe063));
        // BF 0128
        gbc.setState(0xa6fb, 0x606, 0xc530, 0x40a9, 0x4784, 0x2827, 0x1, 0x0);
        gbc.writeMem(0xa6fb, { 0xbf });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x606, gbc.sp());
        EXPECT(0xa6fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xa6fb));
        // BF 0129
        gbc.setState(0xc4fc, 0xf413, 0x5290, 0x956, 0xc6ec, 0x14f7, 0x1, 0x0);
        gbc.writeMem(0xc4fc, { 0xbf });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xf413, gbc.sp());
        EXPECT(0xc4fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc4fc));
        // BF 012A
        gbc.setState(0x678e, 0xd43e, 0x5cc0, 0x2b0b, 0x669e, 0xfe47, 0x1, 0x1);
        gbc.writeMem(0x678e, { 0xbf });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd43e, gbc.sp());
        EXPECT(0x678f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 012B
        gbc.setState(0xd93, 0x2f36, 0x3ed0, 0x4ef8, 0xc3ff, 0xbbaa, 0x1, 0x0);
        gbc.writeMem(0xd93, { 0xbf });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x2f36, gbc.sp());
        EXPECT(0xd94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 012D
        gbc.setState(0xe0da, 0xd476, 0xad10, 0x684a, 0xa78f, 0xc6ad, 0x1, 0x0);
        gbc.writeMem(0xe0da, { 0xbf });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd476, gbc.sp());
        EXPECT(0xe0db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xe0da));
        // BF 012E
        gbc.setState(0x2577, 0xe09a, 0xc140, 0xdd0a, 0x1ef9, 0xf04d, 0x1, 0x0);
        gbc.writeMem(0x2577, { 0xbf });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xe09a, gbc.sp());
        EXPECT(0x2578, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 012F
        gbc.setState(0xcce1, 0x8813, 0xe600, 0xe746, 0x783a, 0xd55a, 0x0, 0x0);
        gbc.writeMem(0xcce1, { 0xbf });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8813, gbc.sp());
        EXPECT(0xcce2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xcce1));
        // BF 0130
        gbc.setState(0x70ae, 0xec8f, 0x4210, 0x9eab, 0xdb49, 0xa5cc, 0x0, 0x1);
        gbc.writeMem(0x70ae, { 0xbf });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xec8f, gbc.sp());
        EXPECT(0x70af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0131
        gbc.setState(0x3fab, 0xdb59, 0xf170, 0xa826, 0x674d, 0x340d, 0x1, 0x0);
        gbc.writeMem(0x3fab, { 0xbf });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xdb59, gbc.sp());
        EXPECT(0x3fac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0132
        gbc.setState(0x27a6, 0x17c7, 0x6be0, 0x53a4, 0x9e2a, 0x334a, 0x0, 0x0);
        gbc.writeMem(0x27a6, { 0xbf });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x17c7, gbc.sp());
        EXPECT(0x27a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0133
        gbc.setState(0x7361, 0x4996, 0xebf0, 0x589, 0xf601, 0xe769, 0x0, 0x1);
        gbc.writeMem(0x7361, { 0xbf });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x4996, gbc.sp());
        EXPECT(0x7362, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0134
        gbc.setState(0x7e47, 0x9794, 0x3330, 0xf444, 0xd6d5, 0xe93c, 0x0, 0x0);
        gbc.writeMem(0x7e47, { 0xbf });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x9794, gbc.sp());
        EXPECT(0x7e48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0135
        gbc.setState(0xa315, 0xd4b0, 0xe3e0, 0x1414, 0xe6f2, 0xaea1, 0x1, 0x1);
        gbc.writeMem(0xa315, { 0xbf });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xd4b0, gbc.sp());
        EXPECT(0xa316, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xa315));
        // BF 0136
        gbc.setState(0xb53e, 0x374c, 0x7360, 0xbde8, 0x1b7e, 0x2168, 0x1, 0x0);
        gbc.writeMem(0xb53e, { 0xbf });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x374c, gbc.sp());
        EXPECT(0xb53f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xb53e));
        // BF 0137
        gbc.setState(0x58b5, 0xbdbb, 0xf350, 0x7701, 0x8fd6, 0xcde8, 0x0, 0x1);
        gbc.writeMem(0x58b5, { 0xbf });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xbdbb, gbc.sp());
        EXPECT(0x58b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0138
        gbc.setState(0x819b, 0xe632, 0xa4b0, 0xed23, 0x69ef, 0x6467, 0x1, 0x1);
        gbc.writeMem(0x819b, { 0xbf });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xe632, gbc.sp());
        EXPECT(0x819c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x819b));
        // BF 013A
        gbc.setState(0xa9dc, 0x3a8c, 0xa2a0, 0xd6e8, 0x7abb, 0x28c, 0x0, 0x0);
        gbc.writeMem(0xa9dc, { 0xbf });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x3a8c, gbc.sp());
        EXPECT(0xa9dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xa9dc));
        // BF 013B
        gbc.setState(0x212d, 0x7384, 0xec80, 0x3d5e, 0x46, 0x6310, 0x1, 0x1);
        gbc.writeMem(0x212d, { 0xbf });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x7384, gbc.sp());
        EXPECT(0x212e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 013C
        gbc.setState(0x3a8e, 0x3adb, 0xc260, 0xfb8c, 0x42ac, 0xb159, 0x0, 0x0);
        gbc.writeMem(0x3a8e, { 0xbf });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x3adb, gbc.sp());
        EXPECT(0x3a8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 013D
        gbc.setState(0x874b, 0x46fa, 0x7ab0, 0xc1a, 0x20b8, 0x5ddd, 0x0, 0x0);
        gbc.writeMem(0x874b, { 0xbf });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x46fa, gbc.sp());
        EXPECT(0x874c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x874b));
        // BF 013E
        gbc.setState(0xaafb, 0x888f, 0xaea0, 0x42b5, 0xe11e, 0x4335, 0x1, 0x0);
        gbc.writeMem(0xaafb, { 0xbf });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x888f, gbc.sp());
        EXPECT(0xaafc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xaafb));
        // BF 013F
        gbc.setState(0xc4c0, 0x8592, 0x6470, 0x70df, 0xd9c0, 0x8d24, 0x1, 0x1);
        gbc.writeMem(0xc4c0, { 0xbf });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8592, gbc.sp());
        EXPECT(0xc4c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc4c0));
        // BF 0140
        gbc.setState(0x1806, 0x4db, 0x2a60, 0x208f, 0x1889, 0xc1b9, 0x0, 0x0);
        gbc.writeMem(0x1806, { 0xbf });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x4db, gbc.sp());
        EXPECT(0x1807, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0141
        gbc.setState(0x21f6, 0x3f5d, 0xf10, 0x9d63, 0x4262, 0xf3a9, 0x1, 0x0);
        gbc.writeMem(0x21f6, { 0xbf });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3f5d, gbc.sp());
        EXPECT(0x21f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0142
        gbc.setState(0x8652, 0xa172, 0xca90, 0x4901, 0xb26c, 0xab22, 0x1, 0x0);
        gbc.writeMem(0x8652, { 0xbf });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xa172, gbc.sp());
        EXPECT(0x8653, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x8652));
        // BF 0143
        gbc.setState(0xdcbf, 0xcd31, 0xfa00, 0xf844, 0x86ce, 0x3098, 0x0, 0x0);
        gbc.writeMem(0xdcbf, { 0xbf });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xcd31, gbc.sp());
        EXPECT(0xdcc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xdcbf));
        // BF 0144
        gbc.setState(0x972f, 0x6783, 0x7900, 0x6cee, 0xa2fe, 0xbc3, 0x0, 0x1);
        gbc.writeMem(0x972f, { 0xbf });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x6783, gbc.sp());
        EXPECT(0x9730, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x972f));
        // BF 0145
        gbc.setState(0x882e, 0x70f0, 0xc9a0, 0x2c5e, 0x51b1, 0x6189, 0x0, 0x1);
        gbc.writeMem(0x882e, { 0xbf });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x70f0, gbc.sp());
        EXPECT(0x882f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x882e));
        // BF 0146
        gbc.setState(0x2f58, 0xb58b, 0xd950, 0x962c, 0xf158, 0x6b93, 0x0, 0x1);
        gbc.writeMem(0x2f58, { 0xbf });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb58b, gbc.sp());
        EXPECT(0x2f59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0147
        gbc.setState(0xba29, 0xe871, 0x56a0, 0x7f64, 0x54f0, 0xe99d, 0x1, 0x1);
        gbc.writeMem(0xba29, { 0xbf });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xe871, gbc.sp());
        EXPECT(0xba2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xba29));
        // BF 0148
        gbc.setState(0x84e, 0x17ab, 0xa450, 0xac67, 0xb500, 0x5137, 0x0, 0x0);
        gbc.writeMem(0x84e, { 0xbf });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x17ab, gbc.sp());
        EXPECT(0x84f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0149
        gbc.setState(0x557a, 0x933f, 0x8c20, 0xca8b, 0xa124, 0x2570, 0x0, 0x1);
        gbc.writeMem(0x557a, { 0xbf });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x933f, gbc.sp());
        EXPECT(0x557b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 014A
        gbc.setState(0xcfe0, 0x6e2f, 0xb1f0, 0xea9, 0xf9de, 0xb3c5, 0x1, 0x0);
        gbc.writeMem(0xcfe0, { 0xbf });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x6e2f, gbc.sp());
        EXPECT(0xcfe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xcfe0));
        // BF 014B
        gbc.setState(0x4b5d, 0x9978, 0x9470, 0xfdc5, 0x1e14, 0x75bd, 0x0, 0x1);
        gbc.writeMem(0x4b5d, { 0xbf });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x9978, gbc.sp());
        EXPECT(0x4b5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 014C
        gbc.setState(0xcdc, 0x29d, 0x2b20, 0xd37f, 0x78f, 0x974d, 0x0, 0x0);
        gbc.writeMem(0xcdc, { 0xbf });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x29d, gbc.sp());
        EXPECT(0xcdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 014D
        gbc.setState(0xed63, 0xef6a, 0x8560, 0x14e3, 0xb5b2, 0x4fa8, 0x0, 0x0);
        gbc.writeMem(0xed63, { 0xbf });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xef6a, gbc.sp());
        EXPECT(0xed64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xed63));
        // BF 014E
        gbc.setState(0x894c, 0x2d6, 0xf390, 0xf9f0, 0x61b0, 0x7397, 0x0, 0x0);
        gbc.writeMem(0x894c, { 0xbf });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x2d6, gbc.sp());
        EXPECT(0x894d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x894c));
        // BF 014F
        gbc.setState(0x4914, 0xab3b, 0xdca0, 0xd6f2, 0x956b, 0xb6c7, 0x0, 0x0);
        gbc.writeMem(0x4914, { 0xbf });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xab3b, gbc.sp());
        EXPECT(0x4915, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0150
        gbc.setState(0xebd2, 0xc0de, 0x9250, 0xd8f, 0x9345, 0x1726, 0x1, 0x0);
        gbc.writeMem(0xebd2, { 0xbf });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc0de, gbc.sp());
        EXPECT(0xebd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xebd2));
        // BF 0151
        gbc.setState(0x188e, 0x3f58, 0xa860, 0xcc1b, 0x6e7e, 0x28f5, 0x1, 0x0);
        gbc.writeMem(0x188e, { 0xbf });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x3f58, gbc.sp());
        EXPECT(0x188f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0152
        gbc.setState(0x115f, 0xfd6b, 0xd7f0, 0x711, 0xcafc, 0x4dd0, 0x0, 0x0);
        gbc.writeMem(0x115f, { 0xbf });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xfd6b, gbc.sp());
        EXPECT(0x1160, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0153
        gbc.setState(0x8270, 0x2b6e, 0x470, 0x8632, 0xe73e, 0x1fd9, 0x1, 0x1);
        gbc.writeMem(0x8270, { 0xbf });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x2b6e, gbc.sp());
        EXPECT(0x8271, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x8270));
        // BF 0154
        gbc.setState(0xc990, 0xf238, 0xcf0, 0x4eb9, 0x1db3, 0xa97b, 0x1, 0x0);
        gbc.writeMem(0xc990, { 0xbf });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf238, gbc.sp());
        EXPECT(0xc991, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc990));
        // BF 0155
        gbc.setState(0x2fd7, 0xccf0, 0x1ce0, 0x4aea, 0x4333, 0x7c80, 0x0, 0x1);
        gbc.writeMem(0x2fd7, { 0xbf });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xccf0, gbc.sp());
        EXPECT(0x2fd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0156
        gbc.setState(0xbf78, 0x9db1, 0x8600, 0x50b7, 0x7b6c, 0x4b94, 0x0, 0x0);
        gbc.writeMem(0xbf78, { 0xbf });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x9db1, gbc.sp());
        EXPECT(0xbf79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xbf78));
        // BF 0157
        gbc.setState(0x3f4b, 0x460, 0xb6e0, 0x5541, 0x1969, 0x1a4b, 0x0, 0x1);
        gbc.writeMem(0x3f4b, { 0xbf });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x460, gbc.sp());
        EXPECT(0x3f4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0158
        gbc.setState(0x692e, 0x8192, 0x8440, 0x17f7, 0xd788, 0x5553, 0x0, 0x0);
        gbc.writeMem(0x692e, { 0xbf });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x8192, gbc.sp());
        EXPECT(0x692f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0159
        gbc.setState(0xe7e1, 0xa746, 0x2870, 0x8c27, 0x47bb, 0x2066, 0x1, 0x0);
        gbc.writeMem(0xe7e1, { 0xbf });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa746, gbc.sp());
        EXPECT(0xe7e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xe7e1));
        // BF 015B
        gbc.setState(0xe4a6, 0x9d59, 0xbfa0, 0x7dcc, 0xd2, 0xecca, 0x1, 0x0);
        gbc.writeMem(0xe4a6, { 0xbf });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x9d59, gbc.sp());
        EXPECT(0xe4a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xe4a6));
        // BF 015C
        gbc.setState(0x717e, 0xeda, 0x3d60, 0x4bf9, 0xb19f, 0xb0c8, 0x1, 0x1);
        gbc.writeMem(0x717e, { 0xbf });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xeda, gbc.sp());
        EXPECT(0x717f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 015D
        gbc.setState(0xdcb8, 0x91cc, 0xdf50, 0xb8d4, 0xa198, 0x7390, 0x1, 0x1);
        gbc.writeMem(0xdcb8, { 0xbf });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x91cc, gbc.sp());
        EXPECT(0xdcb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xdcb8));
        // BF 015E
        gbc.setState(0x177f, 0xb1ef, 0x6420, 0xe3c3, 0x6789, 0xcf74, 0x1, 0x0);
        gbc.writeMem(0x177f, { 0xbf });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xb1ef, gbc.sp());
        EXPECT(0x1780, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 015F
        gbc.setState(0x1d61, 0xf53c, 0xe610, 0xf961, 0x608e, 0x5904, 0x1, 0x0);
        gbc.writeMem(0x1d61, { 0xbf });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xf53c, gbc.sp());
        EXPECT(0x1d62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0160
        gbc.setState(0x9102, 0xe0fd, 0xd270, 0xe689, 0x9593, 0x1dc6, 0x0, 0x0);
        gbc.writeMem(0x9102, { 0xbf });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe0fd, gbc.sp());
        EXPECT(0x9103, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x9102));
        // BF 0161
        gbc.setState(0xbf14, 0x3a87, 0x1fe0, 0x10db, 0x6116, 0x8225, 0x0, 0x1);
        gbc.writeMem(0xbf14, { 0xbf });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x3a87, gbc.sp());
        EXPECT(0xbf15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xbf14));
        // BF 0162
        gbc.setState(0x7af5, 0x344c, 0x7c60, 0x7a3f, 0x8af7, 0x57d, 0x1, 0x1);
        gbc.writeMem(0x7af5, { 0xbf });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x344c, gbc.sp());
        EXPECT(0x7af6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0163
        gbc.setState(0x9875, 0xf168, 0xf500, 0x811b, 0xa7d5, 0x5fb, 0x1, 0x0);
        gbc.writeMem(0x9875, { 0xbf });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf168, gbc.sp());
        EXPECT(0x9876, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x9875));
        // BF 0165
        gbc.setState(0x4367, 0xc628, 0x7b0, 0x4bcb, 0x2821, 0x7dfc, 0x0, 0x0);
        gbc.writeMem(0x4367, { 0xbf });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc628, gbc.sp());
        EXPECT(0x4368, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0166
        gbc.setState(0xb8f4, 0xe70a, 0x91c0, 0x5c97, 0x5472, 0x4972, 0x1, 0x1);
        gbc.writeMem(0xb8f4, { 0xbf });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xe70a, gbc.sp());
        EXPECT(0xb8f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xb8f4));
        // BF 0167
        gbc.setState(0x1681, 0x5459, 0xbeb0, 0xb8c2, 0x6e5, 0x25df, 0x1, 0x1);
        gbc.writeMem(0x1681, { 0xbf });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x5459, gbc.sp());
        EXPECT(0x1682, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0168
        gbc.setState(0x3c47, 0xfc6c, 0xc2b0, 0x3147, 0x6966, 0xc6bf, 0x1, 0x1);
        gbc.writeMem(0x3c47, { 0xbf });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xfc6c, gbc.sp());
        EXPECT(0x3c48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0169
        gbc.setState(0xdc40, 0x9f94, 0x4bb0, 0x5a92, 0xff0a, 0xc456, 0x0, 0x0);
        gbc.writeMem(0xdc40, { 0xbf });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x9f94, gbc.sp());
        EXPECT(0xdc41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xdc40));
        // BF 016A
        gbc.setState(0xc2e0, 0x2f81, 0x1fc0, 0x3dc5, 0x688b, 0x74e9, 0x1, 0x1);
        gbc.writeMem(0xc2e0, { 0xbf });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x2f81, gbc.sp());
        EXPECT(0xc2e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc2e0));
        // BF 016B
        gbc.setState(0x887c, 0x14a7, 0x9510, 0xc56a, 0xecd1, 0xe148, 0x0, 0x0);
        gbc.writeMem(0x887c, { 0xbf });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x14a7, gbc.sp());
        EXPECT(0x887d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x887c));
        // BF 016C
        gbc.setState(0x81cb, 0x8bc, 0x40d0, 0x704a, 0x3461, 0x39f7, 0x1, 0x1);
        gbc.writeMem(0x81cb, { 0xbf });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x8bc, gbc.sp());
        EXPECT(0x81cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x81cb));
        // BF 016D
        gbc.setState(0xa3b1, 0xf34d, 0xa680, 0xb131, 0x3d55, 0xd282, 0x0, 0x0);
        gbc.writeMem(0xa3b1, { 0xbf });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xf34d, gbc.sp());
        EXPECT(0xa3b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xa3b1));
        // BF 016F
        gbc.setState(0x91d4, 0x5627, 0x2c70, 0x7a0b, 0xa673, 0xf103, 0x1, 0x0);
        gbc.writeMem(0x91d4, { 0xbf });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x5627, gbc.sp());
        EXPECT(0x91d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x91d4));
        // BF 0170
        gbc.setState(0x3248, 0x2ff3, 0x8e00, 0xa35a, 0xff6d, 0xfb2d, 0x0, 0x1);
        gbc.writeMem(0x3248, { 0xbf });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x2ff3, gbc.sp());
        EXPECT(0x3249, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0171
        gbc.setState(0xb353, 0xcec9, 0x5570, 0xd63c, 0xb5b8, 0xc2ab, 0x0, 0x1);
        gbc.writeMem(0xb353, { 0xbf });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xcec9, gbc.sp());
        EXPECT(0xb354, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xb353));
        // BF 0172
        gbc.setState(0x1da, 0xcfe9, 0x3690, 0x5ae8, 0xbcae, 0xd0d2, 0x0, 0x1);
        gbc.writeMem(0x1da, { 0xbf });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xcfe9, gbc.sp());
        EXPECT(0x1db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0173
        gbc.setState(0x6581, 0x8c80, 0x3ef0, 0x99df, 0x1273, 0xa509, 0x1, 0x1);
        gbc.writeMem(0x6581, { 0xbf });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8c80, gbc.sp());
        EXPECT(0x6582, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0174
        gbc.setState(0x3c83, 0x32e1, 0xca0, 0xc9d0, 0x403c, 0x2dd9, 0x1, 0x1);
        gbc.writeMem(0x3c83, { 0xbf });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x32e1, gbc.sp());
        EXPECT(0x3c84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0175
        gbc.setState(0xdcf5, 0x9fd7, 0xa3d0, 0x2ee6, 0xb7c7, 0x681, 0x1, 0x1);
        gbc.writeMem(0xdcf5, { 0xbf });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x9fd7, gbc.sp());
        EXPECT(0xdcf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xdcf5));
        // BF 0176
        gbc.setState(0x65cc, 0x3929, 0xd580, 0x993f, 0x531d, 0x3a1a, 0x1, 0x1);
        gbc.writeMem(0x65cc, { 0xbf });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x3929, gbc.sp());
        EXPECT(0x65cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0177
        gbc.setState(0xd36a, 0xd449, 0xf1c0, 0xa648, 0x1000, 0x86e, 0x0, 0x0);
        gbc.writeMem(0xd36a, { 0xbf });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xd449, gbc.sp());
        EXPECT(0xd36b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xd36a));
        // BF 0178
        gbc.setState(0x296c, 0x3580, 0xc350, 0x795c, 0xfab, 0xde6a, 0x0, 0x0);
        gbc.writeMem(0x296c, { 0xbf });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x3580, gbc.sp());
        EXPECT(0x296d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0179
        gbc.setState(0x2e55, 0x9c88, 0xcd50, 0x229e, 0xb6af, 0xd7d9, 0x0, 0x0);
        gbc.writeMem(0x2e55, { 0xbf });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x9c88, gbc.sp());
        EXPECT(0x2e56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 017A
        gbc.setState(0x7d2, 0xc2c6, 0x6230, 0x8f8f, 0xf8d5, 0xf7fe, 0x1, 0x1);
        gbc.writeMem(0x7d2, { 0xbf });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc2c6, gbc.sp());
        EXPECT(0x7d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 017C
        gbc.setState(0xd1fd, 0x44ea, 0xa500, 0xa868, 0xeb83, 0xf5aa, 0x0, 0x1);
        gbc.writeMem(0xd1fd, { 0xbf });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x44ea, gbc.sp());
        EXPECT(0xd1fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xd1fd));
        // BF 017E
        gbc.setState(0x11c8, 0x41a4, 0x8170, 0x4773, 0x15c4, 0x6ec0, 0x0, 0x1);
        gbc.writeMem(0x11c8, { 0xbf });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x41a4, gbc.sp());
        EXPECT(0x11c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 017F
        gbc.setState(0x24ad, 0x663b, 0xf560, 0xa41a, 0xb4f3, 0x6d07, 0x1, 0x1);
        gbc.writeMem(0x24ad, { 0xbf });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x663b, gbc.sp());
        EXPECT(0x24ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0180
        gbc.setState(0x1d2, 0xb7af, 0xcbf0, 0xf229, 0x9a0e, 0x194c, 0x1, 0x1);
        gbc.writeMem(0x1d2, { 0xbf });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xb7af, gbc.sp());
        EXPECT(0x1d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0182
        gbc.setState(0x89fa, 0xcc59, 0xe6c0, 0x993, 0x3069, 0x6843, 0x0, 0x1);
        gbc.writeMem(0x89fa, { 0xbf });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xcc59, gbc.sp());
        EXPECT(0x89fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x89fa));
        // BF 0183
        gbc.setState(0x3595, 0x32b5, 0xa030, 0xabda, 0xe71c, 0xb9a5, 0x1, 0x1);
        gbc.writeMem(0x3595, { 0xbf });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x32b5, gbc.sp());
        EXPECT(0x3596, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0184
        gbc.setState(0xc786, 0x44b1, 0x86f0, 0x4d51, 0xcf58, 0xd8da, 0x1, 0x0);
        gbc.writeMem(0xc786, { 0xbf });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x44b1, gbc.sp());
        EXPECT(0xc787, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc786));
        // BF 0185
        gbc.setState(0xdda3, 0x4dfc, 0xd4a0, 0x5a0d, 0xe61a, 0xfe6f, 0x1, 0x0);
        gbc.writeMem(0xdda3, { 0xbf });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x4dfc, gbc.sp());
        EXPECT(0xdda4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xdda3));
        // BF 0186
        gbc.setState(0x2259, 0x5108, 0xd540, 0xddcd, 0xe187, 0xacab, 0x1, 0x1);
        gbc.writeMem(0x2259, { 0xbf });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x5108, gbc.sp());
        EXPECT(0x225a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0187
        gbc.setState(0x26b2, 0x6093, 0x2e70, 0x206e, 0xb8f0, 0x40c1, 0x1, 0x0);
        gbc.writeMem(0x26b2, { 0xbf });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x6093, gbc.sp());
        EXPECT(0x26b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0188
        gbc.setState(0xb84, 0xb281, 0x8900, 0xcdc4, 0xc05a, 0x73c0, 0x0, 0x1);
        gbc.writeMem(0xb84, { 0xbf });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xb281, gbc.sp());
        EXPECT(0xb85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0189
        gbc.setState(0x2069, 0xf036, 0xf710, 0x903, 0x7666, 0x368d, 0x1, 0x1);
        gbc.writeMem(0x2069, { 0xbf });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xf036, gbc.sp());
        EXPECT(0x206a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 018A
        gbc.setState(0x11f5, 0x12fe, 0xb930, 0xdd8f, 0x9e84, 0xeecf, 0x0, 0x1);
        gbc.writeMem(0x11f5, { 0xbf });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x12fe, gbc.sp());
        EXPECT(0x11f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 018B
        gbc.setState(0x1ce3, 0xfa7a, 0xe160, 0x9dc3, 0x12fd, 0xf0ee, 0x0, 0x0);
        gbc.writeMem(0x1ce3, { 0xbf });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xfa7a, gbc.sp());
        EXPECT(0x1ce4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 018D
        gbc.setState(0x54b3, 0xcf78, 0x3fd0, 0xd628, 0x13ca, 0x7ce2, 0x1, 0x0);
        gbc.writeMem(0x54b3, { 0xbf });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xcf78, gbc.sp());
        EXPECT(0x54b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 018E
        gbc.setState(0x84db, 0xda96, 0xfb30, 0x3846, 0x4cba, 0xa55, 0x1, 0x0);
        gbc.writeMem(0x84db, { 0xbf });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xda96, gbc.sp());
        EXPECT(0x84dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x84db));
        // BF 018F
        gbc.setState(0xd497, 0xcb56, 0x55b0, 0x6140, 0x4127, 0xab98, 0x0, 0x0);
        gbc.writeMem(0xd497, { 0xbf });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xcb56, gbc.sp());
        EXPECT(0xd498, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xd497));
        // BF 0190
        gbc.setState(0x1db8, 0xa51c, 0x4320, 0xa683, 0xeca2, 0x1a1e, 0x1, 0x0);
        gbc.writeMem(0x1db8, { 0xbf });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xa51c, gbc.sp());
        EXPECT(0x1db9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0191
        gbc.setState(0xc870, 0x794b, 0xd0f0, 0xf159, 0xb1ba, 0x4443, 0x1, 0x0);
        gbc.writeMem(0xc870, { 0xbf });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x794b, gbc.sp());
        EXPECT(0xc871, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc870));
        // BF 0192
        gbc.setState(0x3dba, 0x3be6, 0x73d0, 0x1a4f, 0x624f, 0x3510, 0x1, 0x1);
        gbc.writeMem(0x3dba, { 0xbf });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x3be6, gbc.sp());
        EXPECT(0x3dbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0193
        gbc.setState(0x72b1, 0xd1b9, 0x8af0, 0xafef, 0x5878, 0xf63b, 0x0, 0x0);
        gbc.writeMem(0x72b1, { 0xbf });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd1b9, gbc.sp());
        EXPECT(0x72b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0194
        gbc.setState(0x45f0, 0xc3f2, 0xe710, 0x9f44, 0xddeb, 0xa1a3, 0x1, 0x1);
        gbc.writeMem(0x45f0, { 0xbf });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc3f2, gbc.sp());
        EXPECT(0x45f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0195
        gbc.setState(0x8ce1, 0x7dd4, 0x1220, 0xd45d, 0xb8c, 0xd49, 0x1, 0x0);
        gbc.writeMem(0x8ce1, { 0xbf });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x7dd4, gbc.sp());
        EXPECT(0x8ce2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x8ce1));
        // BF 0196
        gbc.setState(0x5963, 0xb74, 0xfea0, 0xd1d9, 0x76dc, 0xe52d, 0x0, 0x0);
        gbc.writeMem(0x5963, { 0xbf });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xb74, gbc.sp());
        EXPECT(0x5964, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0197
        gbc.setState(0x8129, 0x2b34, 0xbd0, 0xfe8f, 0xb978, 0x2580, 0x0, 0x1);
        gbc.writeMem(0x8129, { 0xbf });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x2b34, gbc.sp());
        EXPECT(0x812a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x8129));
        // BF 0198
        gbc.setState(0x6ba3, 0x406a, 0x7ef0, 0x12e0, 0x12bd, 0xd3a0, 0x1, 0x1);
        gbc.writeMem(0x6ba3, { 0xbf });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x406a, gbc.sp());
        EXPECT(0x6ba4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0199
        gbc.setState(0x4813, 0xd143, 0x4f00, 0xde0c, 0x1527, 0xa5f, 0x1, 0x1);
        gbc.writeMem(0x4813, { 0xbf });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xd143, gbc.sp());
        EXPECT(0x4814, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 019A
        gbc.setState(0x1156, 0x1e22, 0x2040, 0x8f12, 0x4048, 0x1052, 0x1, 0x1);
        gbc.writeMem(0x1156, { 0xbf });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x1e22, gbc.sp());
        EXPECT(0x1157, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 019B
        gbc.setState(0xe980, 0xb14e, 0xbde0, 0xae7c, 0xc6c3, 0x34c4, 0x0, 0x1);
        gbc.writeMem(0xe980, { 0xbf });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xb14e, gbc.sp());
        EXPECT(0xe981, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xe980));
        // BF 019C
        gbc.setState(0xe62a, 0x8ff8, 0x2ea0, 0xaeda, 0x15c0, 0x163b, 0x0, 0x1);
        gbc.writeMem(0xe62a, { 0xbf });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x8ff8, gbc.sp());
        EXPECT(0xe62b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xe62a));
        // BF 019D
        gbc.setState(0x9a5, 0x8b7d, 0x69b0, 0x9232, 0x4e15, 0x5afd, 0x1, 0x1);
        gbc.writeMem(0x9a5, { 0xbf });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x8b7d, gbc.sp());
        EXPECT(0x9a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 019E
        gbc.setState(0x775f, 0xf5cc, 0xf4f0, 0xa14e, 0x8eaf, 0x16dd, 0x1, 0x0);
        gbc.writeMem(0x775f, { 0xbf });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xf5cc, gbc.sp());
        EXPECT(0x7760, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 019F
        gbc.setState(0xb2ba, 0xc466, 0xf680, 0x99db, 0xb177, 0x18c1, 0x0, 0x1);
        gbc.writeMem(0xb2ba, { 0xbf });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xc466, gbc.sp());
        EXPECT(0xb2bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xb2ba));
        // BF 01A0
        gbc.setState(0x35de, 0x33cf, 0x7320, 0x80a3, 0x13de, 0x5f7, 0x0, 0x1);
        gbc.writeMem(0x35de, { 0xbf });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x33cf, gbc.sp());
        EXPECT(0x35df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 01A1
        gbc.setState(0x6e6e, 0xd9df, 0xf2c0, 0xa198, 0xc2c9, 0x22b5, 0x0, 0x0);
        gbc.writeMem(0x6e6e, { 0xbf });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xd9df, gbc.sp());
        EXPECT(0x6e6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 01A2
        gbc.setState(0x22ff, 0x35e5, 0x38d0, 0x316e, 0x6d2d, 0x59c6, 0x1, 0x0);
        gbc.writeMem(0x22ff, { 0xbf });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x35e5, gbc.sp());
        EXPECT(0x2300, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 01A3
        gbc.setState(0xa83, 0xd551, 0x5df0, 0xe487, 0x4577, 0x473b, 0x1, 0x0);
        gbc.writeMem(0xa83, { 0xbf });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd551, gbc.sp());
        EXPECT(0xa84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 01A4
        gbc.setState(0x1698, 0x4e2a, 0x50e0, 0x85b3, 0x7db7, 0x5bd, 0x0, 0x0);
        gbc.writeMem(0x1698, { 0xbf });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4e2a, gbc.sp());
        EXPECT(0x1699, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 01A5
        gbc.setState(0xc5b9, 0x9025, 0xa660, 0x2b43, 0xc5cc, 0xa6bd, 0x0, 0x1);
        gbc.writeMem(0xc5b9, { 0xbf });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x9025, gbc.sp());
        EXPECT(0xc5ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc5b9));
        // BF 01A6
        gbc.setState(0x9c10, 0xd67, 0xc30, 0x1c7, 0xd910, 0x657c, 0x1, 0x1);
        gbc.writeMem(0x9c10, { 0xbf });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xd67, gbc.sp());
        EXPECT(0x9c11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x9c10));
        // BF 01A7
        gbc.setState(0xaead, 0xc60b, 0x8b70, 0x6515, 0x98bc, 0xf48d, 0x0, 0x0);
        gbc.writeMem(0xaead, { 0xbf });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc60b, gbc.sp());
        EXPECT(0xaeae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xaead));
        // BF 01A8
        gbc.setState(0x976, 0xde7, 0xe240, 0x14e5, 0xa80, 0x5d16, 0x1, 0x0);
        gbc.writeMem(0x976, { 0xbf });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xde7, gbc.sp());
        EXPECT(0x977, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 01A9
        gbc.setState(0xc2ba, 0x91ba, 0x3640, 0xe52c, 0x8604, 0xb553, 0x0, 0x1);
        gbc.writeMem(0xc2ba, { 0xbf });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x91ba, gbc.sp());
        EXPECT(0xc2bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc2ba));
        // BF 01AA
        gbc.setState(0xc1b1, 0x6d2d, 0xcf40, 0x1289, 0xbdb5, 0xc693, 0x1, 0x0);
        gbc.writeMem(0xc1b1, { 0xbf });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x6d2d, gbc.sp());
        EXPECT(0xc1b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc1b1));
        // BF 01AB
        gbc.setState(0x338d, 0x5eaf, 0x68d0, 0x1d7a, 0x6b87, 0x3a5c, 0x1, 0x0);
        gbc.writeMem(0x338d, { 0xbf });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5eaf, gbc.sp());
        EXPECT(0x338e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 01AC
        gbc.setState(0x5354, 0xe1ac, 0x4b30, 0xc36, 0x2f82, 0x47c7, 0x0, 0x0);
        gbc.writeMem(0x5354, { 0xbf });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xe1ac, gbc.sp());
        EXPECT(0x5355, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 01AD
        gbc.setState(0x85ae, 0x2bb5, 0x180, 0xe3a0, 0x417a, 0xc776, 0x0, 0x0);
        gbc.writeMem(0x85ae, { 0xbf });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2bb5, gbc.sp());
        EXPECT(0x85af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x85ae));
        // BF 01AF
        gbc.setState(0x11d9, 0x8a8c, 0xec50, 0xa6f1, 0x838b, 0x7583, 0x0, 0x1);
        gbc.writeMem(0x11d9, { 0xbf });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x8a8c, gbc.sp());
        EXPECT(0x11da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 01B0
        gbc.setState(0x3ef2, 0xb9db, 0xae10, 0x76f1, 0xc7a2, 0x861b, 0x0, 0x0);
        gbc.writeMem(0x3ef2, { 0xbf });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xb9db, gbc.sp());
        EXPECT(0x3ef3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 01B1
        gbc.setState(0xaba3, 0x89be, 0xbb20, 0xe93e, 0x2fc, 0xacd4, 0x0, 0x0);
        gbc.writeMem(0xaba3, { 0xbf });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x89be, gbc.sp());
        EXPECT(0xaba4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xaba3));
        // BF 01B2
        gbc.setState(0x9580, 0xcc5b, 0xb950, 0x7fe9, 0xad3d, 0x5089, 0x1, 0x1);
        gbc.writeMem(0x9580, { 0xbf });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xcc5b, gbc.sp());
        EXPECT(0x9581, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x9580));
        // BF 01B3
        gbc.setState(0x3d3a, 0x2905, 0x8520, 0x7693, 0x855f, 0x41d7, 0x0, 0x1);
        gbc.writeMem(0x3d3a, { 0xbf });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x2905, gbc.sp());
        EXPECT(0x3d3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 01B4
        gbc.setState(0x403b, 0x31df, 0x5a30, 0x328c, 0xd5e5, 0xaf70, 0x0, 0x0);
        gbc.writeMem(0x403b, { 0xbf });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x31df, gbc.sp());
        EXPECT(0x403c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 01B5
        gbc.setState(0x281f, 0x2a7e, 0xc470, 0x446, 0x220b, 0x4457, 0x0, 0x0);
        gbc.writeMem(0x281f, { 0xbf });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x2a7e, gbc.sp());
        EXPECT(0x2820, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 01B6
        gbc.setState(0xaae5, 0x4ce, 0xd100, 0x7f35, 0x7295, 0x4106, 0x0, 0x0);
        gbc.writeMem(0xaae5, { 0xbf });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4ce, gbc.sp());
        EXPECT(0xaae6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xaae5));
        // BF 01B7
        gbc.setState(0x958, 0x15a1, 0x1160, 0x15bd, 0x7695, 0xe6fb, 0x0, 0x1);
        gbc.writeMem(0x958, { 0xbf });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x15a1, gbc.sp());
        EXPECT(0x959, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 01B8
        gbc.setState(0xa6ae, 0x86ec, 0x12c0, 0xaf8c, 0x8eea, 0x6fe7, 0x0, 0x1);
        gbc.writeMem(0xa6ae, { 0xbf });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x86ec, gbc.sp());
        EXPECT(0xa6af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xa6ae));
        // BF 01BA
        gbc.setState(0xb829, 0x8050, 0xfc90, 0x4cb6, 0x4ea, 0x5274, 0x1, 0x0);
        gbc.writeMem(0xb829, { 0xbf });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x8050, gbc.sp());
        EXPECT(0xb82a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xb829));
        // BF 01BB
        gbc.setState(0x5160, 0xcd75, 0x3230, 0x3804, 0x2011, 0xeff7, 0x0, 0x1);
        gbc.writeMem(0x5160, { 0xbf });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xcd75, gbc.sp());
        EXPECT(0x5161, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 01BC
        gbc.setState(0x6937, 0x485c, 0xb690, 0xd17b, 0x7d6d, 0x3da1, 0x1, 0x0);
        gbc.writeMem(0x6937, { 0xbf });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x485c, gbc.sp());
        EXPECT(0x6938, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 01BD
        gbc.setState(0xcf52, 0x448c, 0x5810, 0x6ff9, 0x7e60, 0x608e, 0x1, 0x1);
        gbc.writeMem(0xcf52, { 0xbf });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x448c, gbc.sp());
        EXPECT(0xcf53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xcf52));
        // BF 01BE
        gbc.setState(0xd139, 0x194e, 0xaa50, 0xd40b, 0xe651, 0x6ce6, 0x0, 0x1);
        gbc.writeMem(0xd139, { 0xbf });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x194e, gbc.sp());
        EXPECT(0xd13a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xd139));
        // BF 01BF
        gbc.setState(0xdbe9, 0xfaaa, 0x2010, 0x5b83, 0x8707, 0x1e3a, 0x0, 0x0);
        gbc.writeMem(0xdbe9, { 0xbf });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xfaaa, gbc.sp());
        EXPECT(0xdbea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xdbe9));
        // BF 01C0
        gbc.setState(0xc834, 0x2f14, 0x8fd0, 0xab6d, 0x5d39, 0x3898, 0x0, 0x0);
        gbc.writeMem(0xc834, { 0xbf });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x2f14, gbc.sp());
        EXPECT(0xc835, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc834));
        // BF 01C1
        gbc.setState(0xef02, 0xed7b, 0xe380, 0x75aa, 0xfc5c, 0x77bc, 0x1, 0x0);
        gbc.writeMem(0xef02, { 0xbf });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xed7b, gbc.sp());
        EXPECT(0xef03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xef02));
        // BF 01C2
        gbc.setState(0x581, 0x95db, 0x61f0, 0x795f, 0x53e7, 0x92e0, 0x0, 0x0);
        gbc.writeMem(0x581, { 0xbf });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x95db, gbc.sp());
        EXPECT(0x582, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 01C3
        gbc.setState(0x2a9e, 0x6959, 0x9310, 0x5383, 0x7e55, 0xcd89, 0x1, 0x1);
        gbc.writeMem(0x2a9e, { 0xbf });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x6959, gbc.sp());
        EXPECT(0x2a9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 01C4
        gbc.setState(0xc11f, 0x6106, 0x1a40, 0x3f39, 0x537, 0x873d, 0x1, 0x1);
        gbc.writeMem(0xc11f, { 0xbf });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x6106, gbc.sp());
        EXPECT(0xc120, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc11f));
        // BF 01C5
        gbc.setState(0x9e72, 0xadd5, 0xf8d0, 0x8c45, 0xfac4, 0xa72, 0x1, 0x0);
        gbc.writeMem(0x9e72, { 0xbf });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xadd5, gbc.sp());
        EXPECT(0x9e73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x9e72));
        // BF 01C6
        gbc.setState(0xdd55, 0x1094, 0xcb20, 0x13c6, 0x9593, 0x22d3, 0x0, 0x0);
        gbc.writeMem(0xdd55, { 0xbf });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x1094, gbc.sp());
        EXPECT(0xdd56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xdd55));
        // BF 01C7
        gbc.setState(0xcb9, 0x8ba8, 0x95f0, 0x729c, 0x64ee, 0xd981, 0x1, 0x0);
        gbc.writeMem(0xcb9, { 0xbf });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x8ba8, gbc.sp());
        EXPECT(0xcba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 01C8
        gbc.setState(0xfbc, 0x549c, 0xb680, 0x89c4, 0x42b2, 0xacf0, 0x0, 0x1);
        gbc.writeMem(0xfbc, { 0xbf });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x549c, gbc.sp());
        EXPECT(0xfbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 01C9
        gbc.setState(0x2379, 0x5622, 0xcd50, 0x186b, 0x157c, 0xad38, 0x1, 0x1);
        gbc.writeMem(0x2379, { 0xbf });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x5622, gbc.sp());
        EXPECT(0x237a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 01CA
        gbc.setState(0xdfe1, 0xd655, 0x6370, 0xf1f, 0xaca5, 0x3c45, 0x1, 0x0);
        gbc.writeMem(0xdfe1, { 0xbf });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xd655, gbc.sp());
        EXPECT(0xdfe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xdfe1));
        // BF 01CB
        gbc.setState(0x2b1c, 0x8def, 0x7870, 0x779, 0xf2c6, 0x2ec6, 0x0, 0x1);
        gbc.writeMem(0x2b1c, { 0xbf });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x8def, gbc.sp());
        EXPECT(0x2b1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 01CC
        gbc.setState(0x94e9, 0x217a, 0xdab0, 0x21c9, 0x77d6, 0xe298, 0x0, 0x0);
        gbc.writeMem(0x94e9, { 0xbf });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x217a, gbc.sp());
        EXPECT(0x94ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x94e9));
        // BF 01CD
        gbc.setState(0x1934, 0x419, 0x3d20, 0xc593, 0x566c, 0x574e, 0x1, 0x0);
        gbc.writeMem(0x1934, { 0xbf });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x419, gbc.sp());
        EXPECT(0x1935, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 01CE
        gbc.setState(0xaadc, 0x54ed, 0x7c30, 0x45c9, 0x2129, 0x46ee, 0x1, 0x1);
        gbc.writeMem(0xaadc, { 0xbf });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x54ed, gbc.sp());
        EXPECT(0xaadd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xaadc));
        // BF 01CF
        gbc.setState(0xc1ed, 0x4460, 0x3850, 0x5fd2, 0x506e, 0xdab9, 0x1, 0x0);
        gbc.writeMem(0xc1ed, { 0xbf });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x4460, gbc.sp());
        EXPECT(0xc1ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc1ed));
        // BF 01D0
        gbc.setState(0x6ff8, 0xf6c5, 0x26b0, 0x7979, 0x10a4, 0x246c, 0x0, 0x1);
        gbc.writeMem(0x6ff8, { 0xbf });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xf6c5, gbc.sp());
        EXPECT(0x6ff9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 01D1
        gbc.setState(0x2672, 0xc910, 0xe7c0, 0xb10b, 0xd0cc, 0xb32d, 0x1, 0x1);
        gbc.writeMem(0x2672, { 0xbf });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xc910, gbc.sp());
        EXPECT(0x2673, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 01D2
        gbc.setState(0x9058, 0x67c5, 0x58c0, 0xdaa1, 0xde4a, 0xc0da, 0x0, 0x0);
        gbc.writeMem(0x9058, { 0xbf });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x67c5, gbc.sp());
        EXPECT(0x9059, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x9058));
        // BF 01D3
        gbc.setState(0x1af5, 0x4875, 0xa200, 0x836c, 0xb043, 0x504c, 0x0, 0x0);
        gbc.writeMem(0x1af5, { 0xbf });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4875, gbc.sp());
        EXPECT(0x1af6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 01D4
        gbc.setState(0x8309, 0xc9b0, 0xa870, 0xcf10, 0x9960, 0xacff, 0x1, 0x1);
        gbc.writeMem(0x8309, { 0xbf });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xc9b0, gbc.sp());
        EXPECT(0x830a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x8309));
        // BF 01D5
        gbc.setState(0x75ed, 0x17ac, 0xea30, 0x9c54, 0xcdee, 0x8f5, 0x0, 0x1);
        gbc.writeMem(0x75ed, { 0xbf });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x17ac, gbc.sp());
        EXPECT(0x75ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 01D6
        gbc.setState(0x4f88, 0xad0c, 0x5eb0, 0xd228, 0xe1e, 0xe27c, 0x0, 0x1);
        gbc.writeMem(0x4f88, { 0xbf });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xad0c, gbc.sp());
        EXPECT(0x4f89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 01D7
        gbc.setState(0xde90, 0x8573, 0x26d0, 0xb6f4, 0x5089, 0x3121, 0x0, 0x1);
        gbc.writeMem(0xde90, { 0xbf });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x8573, gbc.sp());
        EXPECT(0xde91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xde90));
        // BF 01D8
        gbc.setState(0xa4c1, 0x865f, 0x9450, 0x71d, 0x3f65, 0x76ef, 0x0, 0x0);
        gbc.writeMem(0xa4c1, { 0xbf });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x865f, gbc.sp());
        EXPECT(0xa4c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xa4c1));
        // BF 01D9
        gbc.setState(0x1706, 0x2c82, 0xed20, 0x6e58, 0xaa14, 0x46a, 0x1, 0x0);
        gbc.writeMem(0x1706, { 0xbf });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x2c82, gbc.sp());
        EXPECT(0x1707, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 01DA
        gbc.setState(0xba9f, 0x72c5, 0x3b40, 0xb695, 0x9b91, 0xcff3, 0x1, 0x0);
        gbc.writeMem(0xba9f, { 0xbf });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x72c5, gbc.sp());
        EXPECT(0xbaa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xba9f));
        // BF 01DB
        gbc.setState(0x2ea7, 0xebe1, 0x4ad0, 0xea10, 0x1d4c, 0x1aab, 0x1, 0x0);
        gbc.writeMem(0x2ea7, { 0xbf });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xebe1, gbc.sp());
        EXPECT(0x2ea8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 01DC
        gbc.setState(0x488c, 0xb72f, 0x9790, 0xd80e, 0x32c5, 0x31e4, 0x1, 0x1);
        gbc.writeMem(0x488c, { 0xbf });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xb72f, gbc.sp());
        EXPECT(0x488d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 01DD
        gbc.setState(0x8cc9, 0x5d29, 0xb520, 0xe56, 0x6e5f, 0x112e, 0x1, 0x0);
        gbc.writeMem(0x8cc9, { 0xbf });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x5d29, gbc.sp());
        EXPECT(0x8cca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x8cc9));
        // BF 01DE
        gbc.setState(0xd6b4, 0xca30, 0xa9b0, 0xbc6c, 0xffc2, 0xee91, 0x1, 0x0);
        gbc.writeMem(0xd6b4, { 0xbf });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xca30, gbc.sp());
        EXPECT(0xd6b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xd6b4));
        // BF 01DF
        gbc.setState(0xd975, 0x7c3e, 0xcb00, 0x9135, 0xb854, 0xe730, 0x1, 0x1);
        gbc.writeMem(0xd975, { 0xbf });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x7c3e, gbc.sp());
        EXPECT(0xd976, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xd975));
        // BF 01E0
        gbc.setState(0xd181, 0xed10, 0xec70, 0xab11, 0xb4e5, 0x3eec, 0x1, 0x1);
        gbc.writeMem(0xd181, { 0xbf });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xed10, gbc.sp());
        EXPECT(0xd182, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xd181));
        // BF 01E1
        gbc.setState(0x63cc, 0xc1d2, 0xd9e0, 0x81d8, 0xdb94, 0xc3ae, 0x0, 0x0);
        gbc.writeMem(0x63cc, { 0xbf });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xc1d2, gbc.sp());
        EXPECT(0x63cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 01E2
        gbc.setState(0xe95f, 0x1531, 0xfcd0, 0x5e20, 0xa0dd, 0xfee0, 0x1, 0x0);
        gbc.writeMem(0xe95f, { 0xbf });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x1531, gbc.sp());
        EXPECT(0xe960, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xe95f));
        // BF 01E3
        gbc.setState(0x6762, 0xefae, 0x5be0, 0x5be5, 0x2f80, 0x6dc7, 0x0, 0x0);
        gbc.writeMem(0x6762, { 0xbf });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xefae, gbc.sp());
        EXPECT(0x6763, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 01E4
        gbc.setState(0xde69, 0x9e15, 0x9e80, 0xfa33, 0xc943, 0xef8b, 0x0, 0x1);
        gbc.writeMem(0xde69, { 0xbf });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x9e15, gbc.sp());
        EXPECT(0xde6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xde69));
        // BF 01E5
        gbc.setState(0x28fd, 0x9f41, 0x5670, 0xf635, 0x9ada, 0xb2a7, 0x1, 0x0);
        gbc.writeMem(0x28fd, { 0xbf });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x9f41, gbc.sp());
        EXPECT(0x28fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 01E6
        gbc.setState(0xcd9a, 0x67d7, 0xcf70, 0x5484, 0x2898, 0x71c7, 0x0, 0x0);
        gbc.writeMem(0xcd9a, { 0xbf });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x67d7, gbc.sp());
        EXPECT(0xcd9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xcd9a));
        // BF 01E7
        gbc.setState(0xef03, 0xff62, 0xa880, 0x424f, 0x28fd, 0x707c, 0x1, 0x0);
        gbc.writeMem(0xef03, { 0xbf });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xff62, gbc.sp());
        EXPECT(0xef04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xef03));
        // BF 01E8
        gbc.setState(0x32cd, 0xe05a, 0x31f0, 0x58df, 0x5be, 0xf4bc, 0x1, 0x1);
        gbc.writeMem(0x32cd, { 0xbf });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe05a, gbc.sp());
        EXPECT(0x32ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 01E9
        gbc.setState(0x1a4b, 0x2900, 0xcdf0, 0x15a5, 0x64b1, 0x98bf, 0x0, 0x1);
        gbc.writeMem(0x1a4b, { 0xbf });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x2900, gbc.sp());
        EXPECT(0x1a4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 01EA
        gbc.setState(0xbe9c, 0x63a4, 0x3b00, 0xe450, 0x96c6, 0x809b, 0x0, 0x1);
        gbc.writeMem(0xbe9c, { 0xbf });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x63a4, gbc.sp());
        EXPECT(0xbe9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xbe9c));
        // BF 01EB
        gbc.setState(0xeab7, 0x3d57, 0x4b70, 0xb9b2, 0x1f8d, 0x8415, 0x1, 0x1);
        gbc.writeMem(0xeab7, { 0xbf });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x3d57, gbc.sp());
        EXPECT(0xeab8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xeab7));
        // BF 01EC
        gbc.setState(0x3abd, 0xb602, 0x6a90, 0x3759, 0x63f0, 0xa2e0, 0x0, 0x0);
        gbc.writeMem(0x3abd, { 0xbf });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xb602, gbc.sp());
        EXPECT(0x3abe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 01ED
        gbc.setState(0x6dfb, 0x86e1, 0x2550, 0xc2b6, 0xde00, 0x5295, 0x0, 0x1);
        gbc.writeMem(0x6dfb, { 0xbf });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x86e1, gbc.sp());
        EXPECT(0x6dfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 01EE
        gbc.setState(0xbeee, 0xb0ee, 0xe5a0, 0xcaf, 0x9345, 0x655e, 0x1, 0x0);
        gbc.writeMem(0xbeee, { 0xbf });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xb0ee, gbc.sp());
        EXPECT(0xbeef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xbeee));
        // BF 01EF
        gbc.setState(0xa7d8, 0xced7, 0x70f0, 0xdf02, 0x93d5, 0xb007, 0x1, 0x0);
        gbc.writeMem(0xa7d8, { 0xbf });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xced7, gbc.sp());
        EXPECT(0xa7d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xa7d8));
        // BF 01F0
        gbc.setState(0x9fb8, 0xd297, 0xd070, 0x5abb, 0x3e0b, 0x9441, 0x0, 0x1);
        gbc.writeMem(0x9fb8, { 0xbf });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xd297, gbc.sp());
        EXPECT(0x9fb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x9fb8));
        // BF 01F1
        gbc.setState(0x9b08, 0xe358, 0xbb60, 0xb8a1, 0x7d76, 0x611f, 0x1, 0x1);
        gbc.writeMem(0x9b08, { 0xbf });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xe358, gbc.sp());
        EXPECT(0x9b09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x9b08));
        // BF 01F2
        gbc.setState(0xa883, 0xef3a, 0xac70, 0xdf9f, 0x5b8d, 0x1834, 0x1, 0x0);
        gbc.writeMem(0xa883, { 0xbf });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xef3a, gbc.sp());
        EXPECT(0xa884, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xa883));
        // BF 01F3
        gbc.setState(0xdb96, 0xfbc, 0xec90, 0x47d7, 0x954e, 0x7c8b, 0x0, 0x0);
        gbc.writeMem(0xdb96, { 0xbf });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xfbc, gbc.sp());
        EXPECT(0xdb97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xdb96));
        // BF 01F4
        gbc.setState(0xbeb5, 0x251, 0x36e0, 0x4df5, 0xcbf3, 0x765, 0x1, 0x0);
        gbc.writeMem(0xbeb5, { 0xbf });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x251, gbc.sp());
        EXPECT(0xbeb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xbeb5));
        // BF 01F5
        gbc.setState(0x16e8, 0xc50d, 0x630, 0xdf5c, 0x95f8, 0x4104, 0x1, 0x1);
        gbc.writeMem(0x16e8, { 0xbf });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc50d, gbc.sp());
        EXPECT(0x16e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 01F6
        gbc.setState(0xb048, 0x6cc5, 0x5fa0, 0xa2da, 0xaa7e, 0x38d, 0x1, 0x0);
        gbc.writeMem(0xb048, { 0xbf });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x6cc5, gbc.sp());
        EXPECT(0xb049, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xb048));
        // BF 01F7
        gbc.setState(0x1578, 0x3b00, 0x8590, 0x67ed, 0x57d2, 0x3302, 0x0, 0x0);
        gbc.writeMem(0x1578, { 0xbf });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x3b00, gbc.sp());
        EXPECT(0x1579, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 01F8
        gbc.setState(0x93d2, 0x646b, 0xf3b0, 0xe0fa, 0x7db0, 0xb36a, 0x0, 0x0);
        gbc.writeMem(0x93d2, { 0xbf });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x646b, gbc.sp());
        EXPECT(0x93d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x93d2));
        // BF 01F9
        gbc.setState(0x2845, 0x4c73, 0x3a30, 0xb836, 0x3f40, 0x7154, 0x0, 0x0);
        gbc.writeMem(0x2845, { 0xbf });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x4c73, gbc.sp());
        EXPECT(0x2846, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 01FA
        gbc.setState(0xcc27, 0xa41f, 0x7f60, 0xc1c, 0x73db, 0x1c98, 0x1, 0x0);
        gbc.writeMem(0xcc27, { 0xbf });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xa41f, gbc.sp());
        EXPECT(0xcc28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xcc27));
        // BF 01FB
        gbc.setState(0x3fe6, 0x585a, 0x80, 0x3031, 0x2996, 0x62a5, 0x0, 0x0);
        gbc.writeMem(0x3fe6, { 0xbf });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x585a, gbc.sp());
        EXPECT(0x3fe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 01FC
        gbc.setState(0xbe91, 0xa4c9, 0xb7f0, 0x8279, 0xc87e, 0x9e79, 0x1, 0x0);
        gbc.writeMem(0xbe91, { 0xbf });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xa4c9, gbc.sp());
        EXPECT(0xbe92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xbe91));
        // BF 01FD
        gbc.setState(0xda12, 0xf451, 0xc3c0, 0xb291, 0xbddc, 0x1d03, 0x1, 0x0);
        gbc.writeMem(0xda12, { 0xbf });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf451, gbc.sp());
        EXPECT(0xda13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xda12));
        // BF 01FE
        gbc.setState(0x84aa, 0xcb0a, 0xadc0, 0xbbee, 0xb841, 0xca2c, 0x1, 0x1);
        gbc.writeMem(0x84aa, { 0xbf });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xcb0a, gbc.sp());
        EXPECT(0x84ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x84aa));
        // BF 01FF
        gbc.setState(0xcc06, 0xd16e, 0xabe0, 0x530b, 0x570c, 0xb46e, 0x0, 0x1);
        gbc.writeMem(0xcc06, { 0xbf });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xd16e, gbc.sp());
        EXPECT(0xcc07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xcc06));
        // BF 0200
        gbc.setState(0xb2ea, 0x179a, 0x82b0, 0x2d2d, 0xdfc6, 0x74d2, 0x0, 0x0);
        gbc.writeMem(0xb2ea, { 0xbf });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x179a, gbc.sp());
        EXPECT(0xb2eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xb2ea));
        // BF 0201
        gbc.setState(0x3676, 0x7c5f, 0x3a00, 0xa163, 0x81b1, 0xf3c2, 0x0, 0x0);
        gbc.writeMem(0x3676, { 0xbf });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7c5f, gbc.sp());
        EXPECT(0x3677, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0202
        gbc.setState(0x591d, 0x6343, 0x6990, 0xc23f, 0x354c, 0x30e, 0x1, 0x1);
        gbc.writeMem(0x591d, { 0xbf });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x6343, gbc.sp());
        EXPECT(0x591e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0203
        gbc.setState(0xe55d, 0xc85f, 0x2430, 0xcad, 0x9b4d, 0x2bdb, 0x1, 0x1);
        gbc.writeMem(0xe55d, { 0xbf });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xc85f, gbc.sp());
        EXPECT(0xe55e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xe55d));
        // BF 0204
        gbc.setState(0xecff, 0xb701, 0x3e0, 0x50c8, 0x8c6e, 0xa75, 0x1, 0x0);
        gbc.writeMem(0xecff, { 0xbf });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xb701, gbc.sp());
        EXPECT(0xed00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xecff));
        // BF 0205
        gbc.setState(0x3be6, 0x370e, 0x3f90, 0x6f88, 0x4b3e, 0x9158, 0x0, 0x0);
        gbc.writeMem(0x3be6, { 0xbf });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x370e, gbc.sp());
        EXPECT(0x3be7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0206
        gbc.setState(0x6dec, 0x4ade, 0x2ad0, 0x52e3, 0x7734, 0xa8d1, 0x1, 0x0);
        gbc.writeMem(0x6dec, { 0xbf });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x4ade, gbc.sp());
        EXPECT(0x6ded, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0207
        gbc.setState(0x3627, 0xe257, 0xeba0, 0xf7b4, 0x39d6, 0x8adb, 0x0, 0x0);
        gbc.writeMem(0x3627, { 0xbf });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xe257, gbc.sp());
        EXPECT(0x3628, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0208
        gbc.setState(0xe775, 0xb2c3, 0x8a90, 0x14fd, 0x12f0, 0xad62, 0x1, 0x0);
        gbc.writeMem(0xe775, { 0xbf });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb2c3, gbc.sp());
        EXPECT(0xe776, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xe775));
        // BF 0209
        gbc.setState(0x62da, 0x2b7c, 0x320, 0xa711, 0x4a71, 0xb8d1, 0x1, 0x1);
        gbc.writeMem(0x62da, { 0xbf });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2b7c, gbc.sp());
        EXPECT(0x62db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 020A
        gbc.setState(0xca15, 0xd7e2, 0x6f60, 0x7642, 0xf671, 0xed5a, 0x0, 0x0);
        gbc.writeMem(0xca15, { 0xbf });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xd7e2, gbc.sp());
        EXPECT(0xca16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xca15));
        // BF 020B
        gbc.setState(0xc1db, 0xf47b, 0x7e00, 0x84d8, 0x68aa, 0x2bc, 0x1, 0x0);
        gbc.writeMem(0xc1db, { 0xbf });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf47b, gbc.sp());
        EXPECT(0xc1dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc1db));
        // BF 020C
        gbc.setState(0x7820, 0xcb72, 0xe260, 0xce3d, 0x82ce, 0xb1f0, 0x1, 0x0);
        gbc.writeMem(0x7820, { 0xbf });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xcb72, gbc.sp());
        EXPECT(0x7821, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 020D
        gbc.setState(0xfda, 0x91a6, 0xb8f0, 0x1868, 0xb8ad, 0xd9e7, 0x1, 0x1);
        gbc.writeMem(0xfda, { 0xbf });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x91a6, gbc.sp());
        EXPECT(0xfdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 020E
        gbc.setState(0x5ad1, 0x3704, 0x5c90, 0x6343, 0x9813, 0x597a, 0x0, 0x0);
        gbc.writeMem(0x5ad1, { 0xbf });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x3704, gbc.sp());
        EXPECT(0x5ad2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 020F
        gbc.setState(0xd0ef, 0x9506, 0x9420, 0xe230, 0x7268, 0x82f0, 0x0, 0x1);
        gbc.writeMem(0xd0ef, { 0xbf });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x9506, gbc.sp());
        EXPECT(0xd0f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xd0ef));
        // BF 0210
        gbc.setState(0x6a86, 0x508c, 0xbfc0, 0xfbe6, 0x3911, 0x4253, 0x0, 0x1);
        gbc.writeMem(0x6a86, { 0xbf });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x508c, gbc.sp());
        EXPECT(0x6a87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0211
        gbc.setState(0x4888, 0x457c, 0x20d0, 0xcf20, 0x91ea, 0x9940, 0x1, 0x0);
        gbc.writeMem(0x4888, { 0xbf });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x457c, gbc.sp());
        EXPECT(0x4889, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0212
        gbc.setState(0xe2f0, 0xd27, 0x4cc0, 0x2467, 0xc79d, 0x9f22, 0x1, 0x0);
        gbc.writeMem(0xe2f0, { 0xbf });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xd27, gbc.sp());
        EXPECT(0xe2f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xe2f0));
        // BF 0213
        gbc.setState(0x7465, 0x173f, 0xfd40, 0xc778, 0x4ce9, 0xb1a3, 0x1, 0x1);
        gbc.writeMem(0x7465, { 0xbf });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x173f, gbc.sp());
        EXPECT(0x7466, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0214
        gbc.setState(0xc464, 0x2ccb, 0x94f0, 0xaf6b, 0x3033, 0xccb5, 0x1, 0x1);
        gbc.writeMem(0xc464, { 0xbf });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2ccb, gbc.sp());
        EXPECT(0xc465, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc464));
        // BF 0216
        gbc.setState(0x7727, 0x4187, 0x71c0, 0xccf6, 0x69b, 0xbdae, 0x1, 0x0);
        gbc.writeMem(0x7727, { 0xbf });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x4187, gbc.sp());
        EXPECT(0x7728, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0217
        gbc.setState(0xbbf3, 0x36a9, 0xdd0, 0xb6bf, 0xbfab, 0x9661, 0x1, 0x0);
        gbc.writeMem(0xbbf3, { 0xbf });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x36a9, gbc.sp());
        EXPECT(0xbbf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xbbf3));
        // BF 0218
        gbc.setState(0x3557, 0x1e3b, 0xc320, 0xc8b7, 0xdb3e, 0xce48, 0x1, 0x0);
        gbc.writeMem(0x3557, { 0xbf });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x1e3b, gbc.sp());
        EXPECT(0x3558, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0219
        gbc.setState(0x4604, 0xfd27, 0xb370, 0x4b05, 0x1196, 0x89cc, 0x0, 0x1);
        gbc.writeMem(0x4604, { 0xbf });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xfd27, gbc.sp());
        EXPECT(0x4605, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 021A
        gbc.setState(0x7647, 0x3eb7, 0xa530, 0xf8d7, 0xdb91, 0x6f76, 0x0, 0x1);
        gbc.writeMem(0x7647, { 0xbf });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x3eb7, gbc.sp());
        EXPECT(0x7648, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 021B
        gbc.setState(0x5472, 0x19d3, 0x23e0, 0xdd3d, 0xaa18, 0x64d9, 0x0, 0x1);
        gbc.writeMem(0x5472, { 0xbf });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x19d3, gbc.sp());
        EXPECT(0x5473, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 021C
        gbc.setState(0xc5d2, 0xb2e7, 0x4800, 0xf7e7, 0x40d, 0x2e9, 0x0, 0x1);
        gbc.writeMem(0xc5d2, { 0xbf });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xb2e7, gbc.sp());
        EXPECT(0xc5d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc5d2));
        // BF 021D
        gbc.setState(0xc68b, 0xf96a, 0xb270, 0x2b00, 0x41f3, 0x85e7, 0x1, 0x0);
        gbc.writeMem(0xc68b, { 0xbf });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xf96a, gbc.sp());
        EXPECT(0xc68c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc68b));
        // BF 021E
        gbc.setState(0x9dc, 0xef8f, 0x5a40, 0xf976, 0x2af6, 0xd4cb, 0x0, 0x1);
        gbc.writeMem(0x9dc, { 0xbf });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xef8f, gbc.sp());
        EXPECT(0x9dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 021F
        gbc.setState(0x1710, 0xaa3f, 0x3a20, 0x72d9, 0x13dd, 0xcddf, 0x1, 0x0);
        gbc.writeMem(0x1710, { 0xbf });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xaa3f, gbc.sp());
        EXPECT(0x1711, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0220
        gbc.setState(0x9ebc, 0xfbbe, 0xb450, 0xec32, 0x8f60, 0xe76f, 0x1, 0x1);
        gbc.writeMem(0x9ebc, { 0xbf });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xfbbe, gbc.sp());
        EXPECT(0x9ebd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x9ebc));
        // BF 0221
        gbc.setState(0x3f9a, 0x47c3, 0xafd0, 0x22bd, 0x7778, 0x1776, 0x1, 0x1);
        gbc.writeMem(0x3f9a, { 0xbf });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x47c3, gbc.sp());
        EXPECT(0x3f9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0222
        gbc.setState(0x8bbc, 0x721b, 0x25a0, 0x3aa3, 0xf0b6, 0xa6e0, 0x0, 0x1);
        gbc.writeMem(0x8bbc, { 0xbf });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x721b, gbc.sp());
        EXPECT(0x8bbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x8bbc));
        // BF 0223
        gbc.setState(0x1690, 0xedcc, 0x9560, 0x56f, 0xb3c5, 0x6b66, 0x1, 0x1);
        gbc.writeMem(0x1690, { 0xbf });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xedcc, gbc.sp());
        EXPECT(0x1691, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0224
        gbc.setState(0xb005, 0xfdfa, 0xcc10, 0x6ea2, 0xaff4, 0x56fb, 0x0, 0x0);
        gbc.writeMem(0xb005, { 0xbf });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xfdfa, gbc.sp());
        EXPECT(0xb006, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xb005));
        // BF 0225
        gbc.setState(0x74c9, 0x5f27, 0x43f0, 0x8ba, 0x12ba, 0xd1ff, 0x1, 0x0);
        gbc.writeMem(0x74c9, { 0xbf });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x5f27, gbc.sp());
        EXPECT(0x74ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0226
        gbc.setState(0x8259, 0xdef3, 0x76e0, 0x34c, 0x8a0c, 0xbb76, 0x0, 0x1);
        gbc.writeMem(0x8259, { 0xbf });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xdef3, gbc.sp());
        EXPECT(0x825a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x8259));
        // BF 0227
        gbc.setState(0x38d0, 0xb08f, 0xe200, 0x8f24, 0x2e00, 0x633e, 0x0, 0x1);
        gbc.writeMem(0x38d0, { 0xbf });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xb08f, gbc.sp());
        EXPECT(0x38d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0228
        gbc.setState(0x5dbf, 0x94b1, 0x8730, 0x5501, 0x7535, 0xec5, 0x1, 0x1);
        gbc.writeMem(0x5dbf, { 0xbf });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x94b1, gbc.sp());
        EXPECT(0x5dc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0229
        gbc.setState(0xa8a4, 0x4cd8, 0xcbc0, 0xaf37, 0xf2b9, 0x1045, 0x1, 0x0);
        gbc.writeMem(0xa8a4, { 0xbf });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x4cd8, gbc.sp());
        EXPECT(0xa8a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xa8a4));
        // BF 022A
        gbc.setState(0x8ab5, 0x8f5d, 0x5030, 0x8c3d, 0x9954, 0x362d, 0x0, 0x0);
        gbc.writeMem(0x8ab5, { 0xbf });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x8f5d, gbc.sp());
        EXPECT(0x8ab6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x8ab5));
        // BF 022B
        gbc.setState(0x4889, 0x2040, 0xd1a0, 0x923e, 0x9a1e, 0x6564, 0x1, 0x0);
        gbc.writeMem(0x4889, { 0xbf });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x2040, gbc.sp());
        EXPECT(0x488a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 022C
        gbc.setState(0x3b18, 0x242e, 0x42c0, 0x35b2, 0x69dd, 0x235, 0x1, 0x1);
        gbc.writeMem(0x3b18, { 0xbf });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x242e, gbc.sp());
        EXPECT(0x3b19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 022D
        gbc.setState(0xdcbe, 0xd294, 0x6650, 0x2556, 0xf791, 0x6f2f, 0x0, 0x0);
        gbc.writeMem(0xdcbe, { 0xbf });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xd294, gbc.sp());
        EXPECT(0xdcbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xdcbe));
        // BF 022E
        gbc.setState(0x2d13, 0x8e0, 0x4bd0, 0x8129, 0xaedb, 0xcfe1, 0x0, 0x1);
        gbc.writeMem(0x2d13, { 0xbf });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x8e0, gbc.sp());
        EXPECT(0x2d14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 022F
        gbc.setState(0x8c7f, 0x8d26, 0x0, 0x1fcd, 0x2b81, 0xca0, 0x0, 0x1);
        gbc.writeMem(0x8c7f, { 0xbf });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x8d26, gbc.sp());
        EXPECT(0x8c80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x8c7f));
        // BF 0231
        gbc.setState(0x642e, 0x660b, 0x29e0, 0x2e5b, 0x5663, 0xec15, 0x0, 0x0);
        gbc.writeMem(0x642e, { 0xbf });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x660b, gbc.sp());
        EXPECT(0x642f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0232
        gbc.setState(0x4068, 0x9d59, 0x67d0, 0x478, 0x30a1, 0x3a3, 0x1, 0x0);
        gbc.writeMem(0x4068, { 0xbf });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x9d59, gbc.sp());
        EXPECT(0x4069, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0233
        gbc.setState(0x970e, 0x2832, 0xe8d0, 0x4232, 0xd58d, 0xfdbe, 0x1, 0x1);
        gbc.writeMem(0x970e, { 0xbf });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x2832, gbc.sp());
        EXPECT(0x970f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x970e));
        // BF 0234
        gbc.setState(0xa43c, 0x809d, 0x67d0, 0xf4cf, 0xa177, 0x28ef, 0x1, 0x1);
        gbc.writeMem(0xa43c, { 0xbf });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x809d, gbc.sp());
        EXPECT(0xa43d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xa43c));
        // BF 0235
        gbc.setState(0x848c, 0x6de, 0x5330, 0xb3af, 0x8e26, 0x76e3, 0x1, 0x1);
        gbc.writeMem(0x848c, { 0xbf });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x6de, gbc.sp());
        EXPECT(0x848d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x848c));
        // BF 0236
        gbc.setState(0xed5f, 0xc832, 0xce60, 0xb536, 0x7261, 0x9162, 0x0, 0x1);
        gbc.writeMem(0xed5f, { 0xbf });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc832, gbc.sp());
        EXPECT(0xed60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xed5f));
        // BF 0237
        gbc.setState(0xb95b, 0xfc43, 0xbd20, 0x599a, 0xe50a, 0x13f, 0x0, 0x1);
        gbc.writeMem(0xb95b, { 0xbf });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xfc43, gbc.sp());
        EXPECT(0xb95c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xb95b));
        // BF 0238
        gbc.setState(0xee56, 0x6542, 0x8a40, 0x2d04, 0x96fb, 0x56a4, 0x0, 0x0);
        gbc.writeMem(0xee56, { 0xbf });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x6542, gbc.sp());
        EXPECT(0xee57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xee56));
        // BF 0239
        gbc.setState(0xe15a, 0xc2f5, 0x2950, 0xd85a, 0x91d7, 0x312f, 0x1, 0x0);
        gbc.writeMem(0xe15a, { 0xbf });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xc2f5, gbc.sp());
        EXPECT(0xe15b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xe15a));
        // BF 023A
        gbc.setState(0x1f7c, 0x99e0, 0x900, 0x94de, 0x6ad0, 0x96ad, 0x1, 0x0);
        gbc.writeMem(0x1f7c, { 0xbf });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x99e0, gbc.sp());
        EXPECT(0x1f7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 023B
        gbc.setState(0xa8b0, 0xa5d1, 0x3570, 0x21e2, 0x6cc0, 0xccc3, 0x0, 0x0);
        gbc.writeMem(0xa8b0, { 0xbf });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xa5d1, gbc.sp());
        EXPECT(0xa8b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xa8b0));
        // BF 023C
        gbc.setState(0xbf7e, 0xe31f, 0xa1e0, 0x5804, 0x4404, 0xa397, 0x0, 0x0);
        gbc.writeMem(0xbf7e, { 0xbf });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xe31f, gbc.sp());
        EXPECT(0xbf7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xbf7e));
        // BF 023D
        gbc.setState(0x5080, 0xd069, 0xf7d0, 0x9df8, 0x635a, 0xf791, 0x0, 0x0);
        gbc.writeMem(0x5080, { 0xbf });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xd069, gbc.sp());
        EXPECT(0x5081, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 023E
        gbc.setState(0xb548, 0x10e4, 0x8180, 0x3c7, 0xed28, 0x4f61, 0x0, 0x1);
        gbc.writeMem(0xb548, { 0xbf });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x10e4, gbc.sp());
        EXPECT(0xb549, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xb548));
        // BF 023F
        gbc.setState(0x303d, 0xaa0d, 0xf5a0, 0x3d6e, 0xe064, 0xeb7e, 0x0, 0x0);
        gbc.writeMem(0x303d, { 0xbf });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xaa0d, gbc.sp());
        EXPECT(0x303e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0240
        gbc.setState(0x23f3, 0x5476, 0xe980, 0xa447, 0x1af, 0x8f7c, 0x0, 0x0);
        gbc.writeMem(0x23f3, { 0xbf });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x5476, gbc.sp());
        EXPECT(0x23f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0241
        gbc.setState(0x3f18, 0xf0e0, 0x7030, 0x521d, 0xf9a1, 0xa5d7, 0x1, 0x0);
        gbc.writeMem(0x3f18, { 0xbf });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf0e0, gbc.sp());
        EXPECT(0x3f19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0243
        gbc.setState(0x8374, 0x7fe9, 0x7360, 0xca64, 0x1434, 0x6f5e, 0x0, 0x0);
        gbc.writeMem(0x8374, { 0xbf });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x7fe9, gbc.sp());
        EXPECT(0x8375, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x8374));
        // BF 0244
        gbc.setState(0xe693, 0xb8bb, 0xb060, 0x6890, 0x3abe, 0xf8b9, 0x0, 0x1);
        gbc.writeMem(0xe693, { 0xbf });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xb8bb, gbc.sp());
        EXPECT(0xe694, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xe693));
        // BF 0245
        gbc.setState(0x223d, 0x472b, 0xa510, 0x99b9, 0xda0d, 0x9904, 0x1, 0x0);
        gbc.writeMem(0x223d, { 0xbf });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x472b, gbc.sp());
        EXPECT(0x223e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0246
        gbc.setState(0x24eb, 0xe41d, 0x7c30, 0xe7c5, 0xdf43, 0x6da5, 0x1, 0x1);
        gbc.writeMem(0x24eb, { 0xbf });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xe41d, gbc.sp());
        EXPECT(0x24ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0247
        gbc.setState(0x725c, 0x73ae, 0x53a0, 0xd8f7, 0x9e9d, 0x5ec5, 0x0, 0x1);
        gbc.writeMem(0x725c, { 0xbf });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x73ae, gbc.sp());
        EXPECT(0x725d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0248
        gbc.setState(0x11d0, 0x9825, 0x8a0, 0x5aa8, 0x2d68, 0x81eb, 0x0, 0x0);
        gbc.writeMem(0x11d0, { 0xbf });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x9825, gbc.sp());
        EXPECT(0x11d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0249
        gbc.setState(0x834b, 0x9fa1, 0x6ed0, 0x17, 0xec69, 0xe8f7, 0x0, 0x1);
        gbc.writeMem(0x834b, { 0xbf });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x9fa1, gbc.sp());
        EXPECT(0x834c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x834b));
        // BF 024A
        gbc.setState(0x4391, 0xcfbb, 0x5b0, 0x8b8, 0xcead, 0x3ad3, 0x1, 0x0);
        gbc.writeMem(0x4391, { 0xbf });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xcfbb, gbc.sp());
        EXPECT(0x4392, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 024B
        gbc.setState(0xa62a, 0x709b, 0x49d0, 0xdded, 0x720, 0xc006, 0x1, 0x0);
        gbc.writeMem(0xa62a, { 0xbf });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x709b, gbc.sp());
        EXPECT(0xa62b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xa62a));
        // BF 024C
        gbc.setState(0xb0cd, 0xe8a8, 0x86a0, 0x9d05, 0x6f12, 0x35b5, 0x1, 0x0);
        gbc.writeMem(0xb0cd, { 0xbf });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xe8a8, gbc.sp());
        EXPECT(0xb0ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xb0cd));
        // BF 024D
        gbc.setState(0x685c, 0xa00b, 0x54e0, 0x5bdd, 0xd120, 0x2e17, 0x0, 0x0);
        gbc.writeMem(0x685c, { 0xbf });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa00b, gbc.sp());
        EXPECT(0x685d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 024E
        gbc.setState(0x5c6d, 0x8f24, 0x3670, 0x179c, 0x4df, 0x85fd, 0x1, 0x1);
        gbc.writeMem(0x5c6d, { 0xbf });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x8f24, gbc.sp());
        EXPECT(0x5c6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 024F
        gbc.setState(0x56a6, 0xe30f, 0x96d0, 0x492e, 0x2f36, 0x263, 0x1, 0x1);
        gbc.writeMem(0x56a6, { 0xbf });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe30f, gbc.sp());
        EXPECT(0x56a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0250
        gbc.setState(0xd733, 0xba67, 0x9c40, 0x6b1e, 0xbf30, 0xc7fc, 0x1, 0x0);
        gbc.writeMem(0xd733, { 0xbf });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xba67, gbc.sp());
        EXPECT(0xd734, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xd733));
        // BF 0251
        gbc.setState(0xeb1, 0xde86, 0x8420, 0x5e1, 0x6e6b, 0x7da2, 0x0, 0x0);
        gbc.writeMem(0xeb1, { 0xbf });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xde86, gbc.sp());
        EXPECT(0xeb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0253
        gbc.setState(0x8b07, 0x39bd, 0xf510, 0x594a, 0xb72e, 0xa41d, 0x0, 0x1);
        gbc.writeMem(0x8b07, { 0xbf });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x39bd, gbc.sp());
        EXPECT(0x8b08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x8b07));
        // BF 0255
        gbc.setState(0x8740, 0x572, 0x2ad0, 0x790, 0xc87d, 0x8159, 0x0, 0x0);
        gbc.writeMem(0x8740, { 0xbf });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x572, gbc.sp());
        EXPECT(0x8741, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x8740));
        // BF 0256
        gbc.setState(0x2ba5, 0x3fe0, 0xcdb0, 0x6aff, 0xa51d, 0xf1c3, 0x1, 0x1);
        gbc.writeMem(0x2ba5, { 0xbf });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3fe0, gbc.sp());
        EXPECT(0x2ba6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0257
        gbc.setState(0x55db, 0xb3de, 0xb190, 0x6162, 0x41a7, 0x1837, 0x1, 0x0);
        gbc.writeMem(0x55db, { 0xbf });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xb3de, gbc.sp());
        EXPECT(0x55dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0258
        gbc.setState(0xc942, 0xe80, 0xcee0, 0x6d9b, 0xd004, 0x41b0, 0x1, 0x0);
        gbc.writeMem(0xc942, { 0xbf });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xe80, gbc.sp());
        EXPECT(0xc943, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc942));
        // BF 0259
        gbc.setState(0xb0eb, 0x6327, 0x2860, 0x48ed, 0xe78, 0xc5ca, 0x0, 0x1);
        gbc.writeMem(0xb0eb, { 0xbf });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x6327, gbc.sp());
        EXPECT(0xb0ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xb0eb));
        // BF 025A
        gbc.setState(0x8c8f, 0x7ec1, 0xf960, 0xb168, 0x8eda, 0xc7d0, 0x1, 0x0);
        gbc.writeMem(0x8c8f, { 0xbf });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7ec1, gbc.sp());
        EXPECT(0x8c90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x8c8f));
        // BF 025B
        gbc.setState(0xd323, 0xccb1, 0x6e80, 0x3646, 0xeca9, 0x1867, 0x1, 0x0);
        gbc.writeMem(0xd323, { 0xbf });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xccb1, gbc.sp());
        EXPECT(0xd324, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xd323));
        // BF 025C
        gbc.setState(0xddb, 0xe033, 0x66b0, 0x19fe, 0xef6d, 0x1703, 0x1, 0x1);
        gbc.writeMem(0xddb, { 0xbf });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xe033, gbc.sp());
        EXPECT(0xddc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 025D
        gbc.setState(0xae45, 0x48e0, 0xb7a0, 0xcff, 0x5960, 0xc762, 0x1, 0x1);
        gbc.writeMem(0xae45, { 0xbf });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x48e0, gbc.sp());
        EXPECT(0xae46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xae45));
        // BF 025E
        gbc.setState(0x46f0, 0xe74e, 0x6b60, 0x8db, 0x4a9b, 0xf9c7, 0x1, 0x0);
        gbc.writeMem(0x46f0, { 0xbf });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xe74e, gbc.sp());
        EXPECT(0x46f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 025F
        gbc.setState(0x67d6, 0xaf47, 0xb370, 0xf48, 0x2652, 0x70bc, 0x0, 0x0);
        gbc.writeMem(0x67d6, { 0xbf });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xaf47, gbc.sp());
        EXPECT(0x67d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0260
        gbc.setState(0x4e9a, 0x2f9, 0xdce0, 0x530f, 0x3f7b, 0x5743, 0x1, 0x1);
        gbc.writeMem(0x4e9a, { 0xbf });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2f9, gbc.sp());
        EXPECT(0x4e9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0261
        gbc.setState(0xc3d4, 0xa0f8, 0xe460, 0xd56f, 0x6b10, 0xe6b9, 0x0, 0x0);
        gbc.writeMem(0xc3d4, { 0xbf });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa0f8, gbc.sp());
        EXPECT(0xc3d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc3d4));
        // BF 0262
        gbc.setState(0xc5ce, 0x6840, 0x57c0, 0x3285, 0x1ba6, 0xdcde, 0x1, 0x0);
        gbc.writeMem(0xc5ce, { 0xbf });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x6840, gbc.sp());
        EXPECT(0xc5cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc5ce));
        // BF 0263
        gbc.setState(0x7819, 0xe738, 0xf060, 0xc2cc, 0x37c2, 0xd9ce, 0x0, 0x1);
        gbc.writeMem(0x7819, { 0xbf });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xe738, gbc.sp());
        EXPECT(0x781a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0264
        gbc.setState(0x3d4d, 0xcd4a, 0x5700, 0x33c9, 0x6122, 0xc00f, 0x0, 0x1);
        gbc.writeMem(0x3d4d, { 0xbf });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xcd4a, gbc.sp());
        EXPECT(0x3d4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0265
        gbc.setState(0xe734, 0x804a, 0x5ef0, 0xebea, 0x7b47, 0x648e, 0x0, 0x0);
        gbc.writeMem(0xe734, { 0xbf });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x804a, gbc.sp());
        EXPECT(0xe735, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xe734));
        // BF 0266
        gbc.setState(0x182b, 0xad1f, 0xe850, 0x8dfc, 0x8420, 0x5ec4, 0x0, 0x1);
        gbc.writeMem(0x182b, { 0xbf });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xad1f, gbc.sp());
        EXPECT(0x182c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0267
        gbc.setState(0xd3e8, 0x70ea, 0x3410, 0x357f, 0xe7c0, 0x26c2, 0x1, 0x0);
        gbc.writeMem(0xd3e8, { 0xbf });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x70ea, gbc.sp());
        EXPECT(0xd3e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xd3e8));
        // BF 0268
        gbc.setState(0xacdc, 0x9cd, 0xba60, 0x5715, 0x6759, 0x9365, 0x1, 0x1);
        gbc.writeMem(0xacdc, { 0xbf });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9cd, gbc.sp());
        EXPECT(0xacdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xacdc));
        // BF 0269
        gbc.setState(0x2e, 0x4cb8, 0x4c50, 0x32b7, 0x6dc0, 0xdfff, 0x0, 0x0);
        gbc.writeMem(0x2e, { 0xbf });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x4cb8, gbc.sp());
        EXPECT(0x2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 026B
        gbc.setState(0x840b, 0x7606, 0xb610, 0xfbaa, 0x4c9d, 0xd02b, 0x0, 0x1);
        gbc.writeMem(0x840b, { 0xbf });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x7606, gbc.sp());
        EXPECT(0x840c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x840b));
        // BF 026C
        gbc.setState(0x4704, 0xf0e7, 0x950, 0xe274, 0xe45b, 0x9bb3, 0x1, 0x0);
        gbc.writeMem(0x4704, { 0xbf });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf0e7, gbc.sp());
        EXPECT(0x4705, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 026D
        gbc.setState(0x6b89, 0x4396, 0xe1f0, 0x62e9, 0xa341, 0x6aed, 0x0, 0x1);
        gbc.writeMem(0x6b89, { 0xbf });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x4396, gbc.sp());
        EXPECT(0x6b8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 026E
        gbc.setState(0x1749, 0xfd34, 0xc0, 0x4aee, 0xac4a, 0xfaa3, 0x1, 0x1);
        gbc.writeMem(0x1749, { 0xbf });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xfd34, gbc.sp());
        EXPECT(0x174a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 026F
        gbc.setState(0xd1be, 0xb46, 0xb860, 0xcb9d, 0xb151, 0x2d42, 0x1, 0x1);
        gbc.writeMem(0xd1be, { 0xbf });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xb46, gbc.sp());
        EXPECT(0xd1bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xd1be));
        // BF 0270
        gbc.setState(0xec10, 0xb09f, 0xce90, 0x6f1a, 0x816a, 0xffd8, 0x0, 0x0);
        gbc.writeMem(0xec10, { 0xbf });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xb09f, gbc.sp());
        EXPECT(0xec11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xec10));
        // BF 0271
        gbc.setState(0xc464, 0x5a92, 0x370, 0x8a7d, 0x81d7, 0x739b, 0x0, 0x0);
        gbc.writeMem(0xc464, { 0xbf });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x5a92, gbc.sp());
        EXPECT(0xc465, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc464));
        // BF 0272
        gbc.setState(0x76d7, 0x2320, 0x8a0, 0xe4dc, 0x9a5b, 0xaa67, 0x0, 0x0);
        gbc.writeMem(0x76d7, { 0xbf });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x2320, gbc.sp());
        EXPECT(0x76d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0273
        gbc.setState(0x42ab, 0xe1d3, 0x7170, 0x15e0, 0x3ffd, 0x3d9b, 0x1, 0x0);
        gbc.writeMem(0x42ab, { 0xbf });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe1d3, gbc.sp());
        EXPECT(0x42ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0274
        gbc.setState(0x9967, 0x7507, 0x7100, 0x8ae4, 0x7c72, 0xd758, 0x1, 0x0);
        gbc.writeMem(0x9967, { 0xbf });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x7507, gbc.sp());
        EXPECT(0x9968, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x9967));
        // BF 0275
        gbc.setState(0x47d2, 0x91a4, 0x2870, 0x5708, 0xf9d7, 0xbf1, 0x1, 0x0);
        gbc.writeMem(0x47d2, { 0xbf });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x91a4, gbc.sp());
        EXPECT(0x47d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0276
        gbc.setState(0x55c4, 0x7208, 0x630, 0xe975, 0xed46, 0x9228, 0x1, 0x0);
        gbc.writeMem(0x55c4, { 0xbf });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x7208, gbc.sp());
        EXPECT(0x55c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0277
        gbc.setState(0x9ff3, 0x5b42, 0x8a50, 0x98e5, 0x26a7, 0x6a26, 0x0, 0x0);
        gbc.writeMem(0x9ff3, { 0xbf });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x5b42, gbc.sp());
        EXPECT(0x9ff4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x9ff3));
        // BF 0279
        gbc.setState(0x8d56, 0x68c, 0x9f10, 0x248f, 0x48cb, 0x2e60, 0x1, 0x0);
        gbc.writeMem(0x8d56, { 0xbf });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x68c, gbc.sp());
        EXPECT(0x8d57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x8d56));
        // BF 027A
        gbc.setState(0xc861, 0xfcc1, 0x5b80, 0x235e, 0xb423, 0x5c2e, 0x1, 0x0);
        gbc.writeMem(0xc861, { 0xbf });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xfcc1, gbc.sp());
        EXPECT(0xc862, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc861));
        // BF 027B
        gbc.setState(0x7b2c, 0x6f91, 0x86b0, 0x3f04, 0x4a33, 0xcc8f, 0x0, 0x1);
        gbc.writeMem(0x7b2c, { 0xbf });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x6f91, gbc.sp());
        EXPECT(0x7b2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 027D
        gbc.setState(0xbe75, 0xed99, 0xbb50, 0x9421, 0xcdb6, 0x8a37, 0x0, 0x1);
        gbc.writeMem(0xbe75, { 0xbf });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xed99, gbc.sp());
        EXPECT(0xbe76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xbe75));
        // BF 027E
        gbc.setState(0x4a55, 0x6a34, 0xd0f0, 0x6e9, 0x5cd0, 0x92af, 0x0, 0x0);
        gbc.writeMem(0x4a55, { 0xbf });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x6a34, gbc.sp());
        EXPECT(0x4a56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 027F
        gbc.setState(0xacb8, 0xe3a4, 0x2a10, 0x8896, 0x7494, 0xbd43, 0x0, 0x0);
        gbc.writeMem(0xacb8, { 0xbf });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe3a4, gbc.sp());
        EXPECT(0xacb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xacb8));
        // BF 0280
        gbc.setState(0xe83e, 0xc9e1, 0x86f0, 0xd9e7, 0xbc88, 0x760, 0x0, 0x1);
        gbc.writeMem(0xe83e, { 0xbf });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xc9e1, gbc.sp());
        EXPECT(0xe83f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xe83e));
        // BF 0281
        gbc.setState(0x5a08, 0xbc9, 0x7270, 0x8147, 0xe5dc, 0x990b, 0x0, 0x0);
        gbc.writeMem(0x5a08, { 0xbf });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xbc9, gbc.sp());
        EXPECT(0x5a09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0282
        gbc.setState(0x9503, 0x82f7, 0x830, 0x6611, 0xffeb, 0x2b1d, 0x0, 0x0);
        gbc.writeMem(0x9503, { 0xbf });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x82f7, gbc.sp());
        EXPECT(0x9504, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x9503));
        // BF 0283
        gbc.setState(0x966f, 0x6d1c, 0x56e0, 0x24ae, 0x1366, 0x25aa, 0x0, 0x1);
        gbc.writeMem(0x966f, { 0xbf });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x6d1c, gbc.sp());
        EXPECT(0x9670, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x966f));
        // BF 0284
        gbc.setState(0x51e6, 0x92dd, 0x5e70, 0x11f8, 0x13f7, 0x6806, 0x1, 0x0);
        gbc.writeMem(0x51e6, { 0xbf });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x92dd, gbc.sp());
        EXPECT(0x51e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0285
        gbc.setState(0xca3, 0x488b, 0x2210, 0x797c, 0x998d, 0xa8c9, 0x1, 0x1);
        gbc.writeMem(0xca3, { 0xbf });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x488b, gbc.sp());
        EXPECT(0xca4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0287
        gbc.setState(0xd46c, 0x30f1, 0x6ad0, 0x6a39, 0xb5a7, 0x80ab, 0x0, 0x1);
        gbc.writeMem(0xd46c, { 0xbf });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x30f1, gbc.sp());
        EXPECT(0xd46d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xd46c));
        // BF 0288
        gbc.setState(0x243e, 0xf384, 0x690, 0x996f, 0x4c92, 0xdbb2, 0x1, 0x1);
        gbc.writeMem(0x243e, { 0xbf });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf384, gbc.sp());
        EXPECT(0x243f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0289
        gbc.setState(0x5001, 0x3e37, 0x3aa0, 0xf83f, 0xd8e8, 0x55f0, 0x0, 0x1);
        gbc.writeMem(0x5001, { 0xbf });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x3e37, gbc.sp());
        EXPECT(0x5002, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 028A
        gbc.setState(0x37f3, 0x1a29, 0x1c90, 0x2d9d, 0x4362, 0x97c8, 0x1, 0x1);
        gbc.writeMem(0x37f3, { 0xbf });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x1a29, gbc.sp());
        EXPECT(0x37f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 028B
        gbc.setState(0x2239, 0xa2d6, 0xbd60, 0xd857, 0x30a2, 0x36a9, 0x1, 0x0);
        gbc.writeMem(0x2239, { 0xbf });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xa2d6, gbc.sp());
        EXPECT(0x223a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 028C
        gbc.setState(0x604, 0x2762, 0x9460, 0xa287, 0x80f6, 0xea1d, 0x1, 0x0);
        gbc.writeMem(0x604, { 0xbf });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2762, gbc.sp());
        EXPECT(0x605, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 028D
        gbc.setState(0xec2b, 0xb018, 0x93d0, 0xa867, 0x7a80, 0x2c6a, 0x1, 0x1);
        gbc.writeMem(0xec2b, { 0xbf });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb018, gbc.sp());
        EXPECT(0xec2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xec2b));
        // BF 028E
        gbc.setState(0xb1cd, 0xd8bd, 0x2e60, 0xceec, 0x44fa, 0xc946, 0x1, 0x0);
        gbc.writeMem(0xb1cd, { 0xbf });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xd8bd, gbc.sp());
        EXPECT(0xb1ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xb1cd));
        // BF 028F
        gbc.setState(0x309b, 0x3ec1, 0x1720, 0xd74f, 0xa397, 0x1989, 0x1, 0x1);
        gbc.writeMem(0x309b, { 0xbf });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3ec1, gbc.sp());
        EXPECT(0x309c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0290
        gbc.setState(0x7148, 0x32a4, 0xf730, 0x23de, 0x62ae, 0x6923, 0x0, 0x0);
        gbc.writeMem(0x7148, { 0xbf });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x32a4, gbc.sp());
        EXPECT(0x7149, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0291
        gbc.setState(0x5d19, 0x1582, 0xa90, 0xa45b, 0x579f, 0xc3d3, 0x1, 0x1);
        gbc.writeMem(0x5d19, { 0xbf });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x1582, gbc.sp());
        EXPECT(0x5d1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0292
        gbc.setState(0x9760, 0x5f8e, 0x5120, 0x9fdf, 0x5b4c, 0xcf9c, 0x0, 0x0);
        gbc.writeMem(0x9760, { 0xbf });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x5f8e, gbc.sp());
        EXPECT(0x9761, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x9760));
        // BF 0293
        gbc.setState(0x5fb5, 0xb390, 0xdfd0, 0xb22, 0xc5e, 0xc917, 0x0, 0x1);
        gbc.writeMem(0x5fb5, { 0xbf });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb390, gbc.sp());
        EXPECT(0x5fb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0294
        gbc.setState(0x1baf, 0x90c4, 0x2ba0, 0xf4cb, 0x476c, 0xd99c, 0x0, 0x0);
        gbc.writeMem(0x1baf, { 0xbf });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x90c4, gbc.sp());
        EXPECT(0x1bb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0295
        gbc.setState(0xdf92, 0xdd3f, 0xcda0, 0x4ab0, 0x2012, 0xe0b5, 0x1, 0x0);
        gbc.writeMem(0xdf92, { 0xbf });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xdd3f, gbc.sp());
        EXPECT(0xdf93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xdf92));
        // BF 0296
        gbc.setState(0x7c0a, 0x6868, 0x48e0, 0x77ed, 0xe579, 0x8e7e, 0x0, 0x1);
        gbc.writeMem(0x7c0a, { 0xbf });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x6868, gbc.sp());
        EXPECT(0x7c0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0297
        gbc.setState(0x8af3, 0xdc15, 0xa980, 0xdae, 0x95c1, 0x964e, 0x1, 0x0);
        gbc.writeMem(0x8af3, { 0xbf });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xdc15, gbc.sp());
        EXPECT(0x8af4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x8af3));
        // BF 0298
        gbc.setState(0x687e, 0x9b9a, 0xaf90, 0x83d2, 0xd492, 0xec18, 0x0, 0x0);
        gbc.writeMem(0x687e, { 0xbf });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9b9a, gbc.sp());
        EXPECT(0x687f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0299
        gbc.setState(0x66c5, 0xd7bd, 0xd250, 0x8419, 0xb0e2, 0xd912, 0x1, 0x0);
        gbc.writeMem(0x66c5, { 0xbf });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xd7bd, gbc.sp());
        EXPECT(0x66c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 029A
        gbc.setState(0xc6e8, 0x62f5, 0xeab0, 0xe1ae, 0x3dfb, 0x60e2, 0x1, 0x1);
        gbc.writeMem(0xc6e8, { 0xbf });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x62f5, gbc.sp());
        EXPECT(0xc6e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc6e8));
        // BF 029B
        gbc.setState(0x3626, 0x5c4c, 0x940, 0x45d6, 0xf09a, 0x5218, 0x1, 0x1);
        gbc.writeMem(0x3626, { 0xbf });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x5c4c, gbc.sp());
        EXPECT(0x3627, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 029C
        gbc.setState(0xb2e, 0x2190, 0xe050, 0x3917, 0x5145, 0x4c7, 0x1, 0x0);
        gbc.writeMem(0xb2e, { 0xbf });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x2190, gbc.sp());
        EXPECT(0xb2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 029D
        gbc.setState(0x7a80, 0xf112, 0x6680, 0xe55e, 0x5ab0, 0x6947, 0x0, 0x1);
        gbc.writeMem(0x7a80, { 0xbf });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xf112, gbc.sp());
        EXPECT(0x7a81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 029E
        gbc.setState(0x2bde, 0x3871, 0x7be0, 0x74da, 0x7aed, 0x71f7, 0x0, 0x1);
        gbc.writeMem(0x2bde, { 0xbf });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x3871, gbc.sp());
        EXPECT(0x2bdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 029F
        gbc.setState(0x3a93, 0xc60, 0x89f0, 0xe564, 0xef21, 0x39ee, 0x0, 0x1);
        gbc.writeMem(0x3a93, { 0xbf });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xc60, gbc.sp());
        EXPECT(0x3a94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02A0
        gbc.setState(0x48c1, 0x3082, 0x8670, 0xe33f, 0xfb73, 0xef7d, 0x1, 0x1);
        gbc.writeMem(0x48c1, { 0xbf });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x3082, gbc.sp());
        EXPECT(0x48c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02A1
        gbc.setState(0x3650, 0x8a6b, 0x6a90, 0xd04f, 0x18e9, 0x3893, 0x1, 0x1);
        gbc.writeMem(0x3650, { 0xbf });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8a6b, gbc.sp());
        EXPECT(0x3651, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02A2
        gbc.setState(0x3dc1, 0x2016, 0x1ad0, 0x7490, 0x77f9, 0x4489, 0x0, 0x0);
        gbc.writeMem(0x3dc1, { 0xbf });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x2016, gbc.sp());
        EXPECT(0x3dc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02A3
        gbc.setState(0xe3f5, 0x5dfd, 0x9560, 0x5904, 0x46a9, 0x36c5, 0x1, 0x1);
        gbc.writeMem(0xe3f5, { 0xbf });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5dfd, gbc.sp());
        EXPECT(0xe3f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xe3f5));
        // BF 02A4
        gbc.setState(0x5aec, 0x717d, 0xf390, 0x9bd2, 0x58b, 0x2a12, 0x0, 0x0);
        gbc.writeMem(0x5aec, { 0xbf });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x717d, gbc.sp());
        EXPECT(0x5aed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02A6
        gbc.setState(0x287c, 0x1cbb, 0xa7c0, 0xb80f, 0xba80, 0xfa4e, 0x1, 0x1);
        gbc.writeMem(0x287c, { 0xbf });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x1cbb, gbc.sp());
        EXPECT(0x287d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02A7
        gbc.setState(0x679, 0x8f3b, 0x18d0, 0x2e0b, 0x1446, 0x812b, 0x1, 0x0);
        gbc.writeMem(0x679, { 0xbf });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x8f3b, gbc.sp());
        EXPECT(0x67a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02A8
        gbc.setState(0x7ea2, 0x78fd, 0x65f0, 0xf417, 0x9751, 0xcde3, 0x1, 0x1);
        gbc.writeMem(0x7ea2, { 0xbf });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x78fd, gbc.sp());
        EXPECT(0x7ea3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02A9
        gbc.setState(0x6496, 0x9760, 0x5660, 0xbcdc, 0x6bf3, 0xef50, 0x0, 0x1);
        gbc.writeMem(0x6496, { 0xbf });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x9760, gbc.sp());
        EXPECT(0x6497, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02AA
        gbc.setState(0x1632, 0xcc9c, 0x66b0, 0x1384, 0x66be, 0x4b98, 0x0, 0x1);
        gbc.writeMem(0x1632, { 0xbf });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xcc9c, gbc.sp());
        EXPECT(0x1633, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02AB
        gbc.setState(0xa93d, 0x20b5, 0x8220, 0x633c, 0x1c61, 0x802e, 0x1, 0x0);
        gbc.writeMem(0xa93d, { 0xbf });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x20b5, gbc.sp());
        EXPECT(0xa93e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xa93d));
        // BF 02AC
        gbc.setState(0x25e4, 0x2ef0, 0x6990, 0x9d2b, 0x9e2f, 0xbda, 0x0, 0x0);
        gbc.writeMem(0x25e4, { 0xbf });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x2ef0, gbc.sp());
        EXPECT(0x25e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02AE
        gbc.setState(0x9ca7, 0xfa11, 0x82d0, 0xb191, 0xc99d, 0x73f2, 0x1, 0x0);
        gbc.writeMem(0x9ca7, { 0xbf });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xfa11, gbc.sp());
        EXPECT(0x9ca8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x9ca7));
        // BF 02AF
        gbc.setState(0xa34d, 0xf8b1, 0x1960, 0x4cce, 0x9d3e, 0x62fc, 0x1, 0x1);
        gbc.writeMem(0xa34d, { 0xbf });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xf8b1, gbc.sp());
        EXPECT(0xa34e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xa34d));
        // BF 02B0
        gbc.setState(0xc5e7, 0x1cce, 0x1f40, 0x4ca2, 0x23ba, 0x6c26, 0x1, 0x0);
        gbc.writeMem(0xc5e7, { 0xbf });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x1cce, gbc.sp());
        EXPECT(0xc5e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc5e7));
        // BF 02B1
        gbc.setState(0xd0d6, 0xfb2c, 0x7a30, 0xb9cb, 0x6181, 0x65ac, 0x1, 0x1);
        gbc.writeMem(0xd0d6, { 0xbf });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xfb2c, gbc.sp());
        EXPECT(0xd0d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xd0d6));
        // BF 02B2
        gbc.setState(0x2d14, 0x3daa, 0xa0c0, 0xf051, 0xb54, 0xa938, 0x0, 0x1);
        gbc.writeMem(0x2d14, { 0xbf });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x3daa, gbc.sp());
        EXPECT(0x2d15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02B3
        gbc.setState(0x7b3b, 0x6344, 0x78a0, 0xb8c8, 0xe68b, 0x5244, 0x0, 0x0);
        gbc.writeMem(0x7b3b, { 0xbf });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6344, gbc.sp());
        EXPECT(0x7b3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02B4
        gbc.setState(0x644b, 0xd3d2, 0xe0f0, 0x1517, 0x180e, 0xb071, 0x0, 0x1);
        gbc.writeMem(0x644b, { 0xbf });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd3d2, gbc.sp());
        EXPECT(0x644c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02B5
        gbc.setState(0x8cf6, 0x33f0, 0x8ad0, 0x1c3d, 0xc9cf, 0x6af6, 0x0, 0x0);
        gbc.writeMem(0x8cf6, { 0xbf });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x33f0, gbc.sp());
        EXPECT(0x8cf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x8cf6));
        // BF 02B6
        gbc.setState(0x5b52, 0x7b39, 0xffd0, 0x21ef, 0x4bac, 0x6b3f, 0x1, 0x1);
        gbc.writeMem(0x5b52, { 0xbf });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x7b39, gbc.sp());
        EXPECT(0x5b53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02B7
        gbc.setState(0x4378, 0x7909, 0x8010, 0x7d25, 0x2f96, 0x18ef, 0x0, 0x1);
        gbc.writeMem(0x4378, { 0xbf });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x7909, gbc.sp());
        EXPECT(0x4379, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02B8
        gbc.setState(0x5a34, 0xe649, 0x1d70, 0xbaf4, 0xd096, 0x7965, 0x0, 0x0);
        gbc.writeMem(0x5a34, { 0xbf });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xe649, gbc.sp());
        EXPECT(0x5a35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02B9
        gbc.setState(0x49, 0x8018, 0xf740, 0x191f, 0x7725, 0x4519, 0x0, 0x1);
        gbc.writeMem(0x49, { 0xbf });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8018, gbc.sp());
        EXPECT(0x4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02BA
        gbc.setState(0x1454, 0xb60a, 0xc030, 0x2b8a, 0x47ca, 0xe747, 0x0, 0x1);
        gbc.writeMem(0x1454, { 0xbf });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb60a, gbc.sp());
        EXPECT(0x1455, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02BB
        gbc.setState(0xc98c, 0x93a8, 0xc2e0, 0xef78, 0x17b8, 0x609, 0x1, 0x1);
        gbc.writeMem(0xc98c, { 0xbf });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x93a8, gbc.sp());
        EXPECT(0xc98d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc98c));
        // BF 02BC
        gbc.setState(0x223d, 0xc75d, 0xc960, 0x47ee, 0x4f5d, 0xc668, 0x0, 0x0);
        gbc.writeMem(0x223d, { 0xbf });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc75d, gbc.sp());
        EXPECT(0x223e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02BD
        gbc.setState(0xaa47, 0xe723, 0xe7a0, 0xf8c7, 0xc986, 0x9b80, 0x1, 0x1);
        gbc.writeMem(0xaa47, { 0xbf });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xe723, gbc.sp());
        EXPECT(0xaa48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xaa47));
        // BF 02BE
        gbc.setState(0xb1c7, 0x190b, 0x49b0, 0xdc07, 0x5da0, 0x78fe, 0x1, 0x0);
        gbc.writeMem(0xb1c7, { 0xbf });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x190b, gbc.sp());
        EXPECT(0xb1c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xb1c7));
        // BF 02BF
        gbc.setState(0xcb4a, 0xbc6c, 0x5470, 0x8d2a, 0xcbbf, 0x30ba, 0x0, 0x1);
        gbc.writeMem(0xcb4a, { 0xbf });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xbc6c, gbc.sp());
        EXPECT(0xcb4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xcb4a));
        // BF 02C0
        gbc.setState(0x2dc, 0x835e, 0xf340, 0x3d3c, 0xa91c, 0xf689, 0x1, 0x1);
        gbc.writeMem(0x2dc, { 0xbf });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x835e, gbc.sp());
        EXPECT(0x2dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02C1
        gbc.setState(0x3b47, 0xd21f, 0x1ae0, 0x79a4, 0x759d, 0x62a3, 0x0, 0x0);
        gbc.writeMem(0x3b47, { 0xbf });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xd21f, gbc.sp());
        EXPECT(0x3b48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02C2
        gbc.setState(0xaf36, 0xa49d, 0xaf10, 0x348c, 0x7fae, 0xc30c, 0x1, 0x0);
        gbc.writeMem(0xaf36, { 0xbf });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xa49d, gbc.sp());
        EXPECT(0xaf37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xaf36));
        // BF 02C3
        gbc.setState(0xec8a, 0x95ad, 0xc230, 0xa52a, 0x9916, 0xced9, 0x0, 0x1);
        gbc.writeMem(0xec8a, { 0xbf });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x95ad, gbc.sp());
        EXPECT(0xec8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xec8a));
        // BF 02C4
        gbc.setState(0x26df, 0x8bcf, 0xeef0, 0x887, 0xd428, 0x3c74, 0x1, 0x1);
        gbc.writeMem(0x26df, { 0xbf });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x8bcf, gbc.sp());
        EXPECT(0x26e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02C5
        gbc.setState(0xb5a8, 0xe6b8, 0x56c0, 0xdea6, 0x468a, 0xdbdb, 0x1, 0x0);
        gbc.writeMem(0xb5a8, { 0xbf });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xe6b8, gbc.sp());
        EXPECT(0xb5a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xb5a8));
        // BF 02C6
        gbc.setState(0xa78c, 0xde3, 0xcea0, 0xfec1, 0xab4a, 0xbc1, 0x0, 0x1);
        gbc.writeMem(0xa78c, { 0xbf });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xde3, gbc.sp());
        EXPECT(0xa78d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xa78c));
        // BF 02C7
        gbc.setState(0xb00, 0x442, 0x91e0, 0xecd8, 0x3f51, 0xfc9, 0x1, 0x0);
        gbc.writeMem(0xb00, { 0xbf });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x442, gbc.sp());
        EXPECT(0xb01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02C8
        gbc.setState(0xee9a, 0x250b, 0xde70, 0xc477, 0xe0fe, 0x4e87, 0x0, 0x0);
        gbc.writeMem(0xee9a, { 0xbf });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x250b, gbc.sp());
        EXPECT(0xee9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xee9a));
        // BF 02C9
        gbc.setState(0x57d6, 0x52b1, 0x44d0, 0x8470, 0xc218, 0x5000, 0x0, 0x0);
        gbc.writeMem(0x57d6, { 0xbf });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x52b1, gbc.sp());
        EXPECT(0x57d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02CA
        gbc.setState(0x3462, 0x76a, 0x23f0, 0xb874, 0x2ecd, 0x87d9, 0x0, 0x1);
        gbc.writeMem(0x3462, { 0xbf });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x76a, gbc.sp());
        EXPECT(0x3463, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02CB
        gbc.setState(0x41cf, 0x1022, 0x4990, 0x35a6, 0x27e8, 0xd027, 0x1, 0x1);
        gbc.writeMem(0x41cf, { 0xbf });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x1022, gbc.sp());
        EXPECT(0x41d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02CC
        gbc.setState(0x4e64, 0x3852, 0xa430, 0x9833, 0xf230, 0xce0c, 0x0, 0x0);
        gbc.writeMem(0x4e64, { 0xbf });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x3852, gbc.sp());
        EXPECT(0x4e65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02CD
        gbc.setState(0xd36, 0x479a, 0x6610, 0x25e, 0xc942, 0xe12b, 0x0, 0x0);
        gbc.writeMem(0xd36, { 0xbf });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x479a, gbc.sp());
        EXPECT(0xd37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02CE
        gbc.setState(0x1bbb, 0x2afb, 0x90e0, 0xcbb3, 0xf8f2, 0x6a56, 0x1, 0x1);
        gbc.writeMem(0x1bbb, { 0xbf });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x2afb, gbc.sp());
        EXPECT(0x1bbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02CF
        gbc.setState(0x7eb, 0x40d, 0xc6c0, 0xadfa, 0x3703, 0x7853, 0x0, 0x0);
        gbc.writeMem(0x7eb, { 0xbf });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x40d, gbc.sp());
        EXPECT(0x7ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02D0
        gbc.setState(0x9da3, 0xd75a, 0x5200, 0x5a49, 0x388d, 0xeafd, 0x1, 0x0);
        gbc.writeMem(0x9da3, { 0xbf });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd75a, gbc.sp());
        EXPECT(0x9da4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x9da3));
        // BF 02D1
        gbc.setState(0xe73a, 0xd485, 0x1a10, 0x59c7, 0xb21b, 0xfb20, 0x1, 0x0);
        gbc.writeMem(0xe73a, { 0xbf });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xd485, gbc.sp());
        EXPECT(0xe73b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xe73a));
        // BF 02D3
        gbc.setState(0xb031, 0xb6ad, 0xc500, 0x7d8f, 0x840, 0x1de6, 0x1, 0x1);
        gbc.writeMem(0xb031, { 0xbf });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb6ad, gbc.sp());
        EXPECT(0xb032, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xb031));
        // BF 02D5
        gbc.setState(0x5059, 0x62ce, 0x5b30, 0x83d1, 0x5d7e, 0x63a3, 0x1, 0x1);
        gbc.writeMem(0x5059, { 0xbf });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x62ce, gbc.sp());
        EXPECT(0x505a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02D6
        gbc.setState(0x250, 0xeb2, 0xa840, 0xf48d, 0x6900, 0x4c30, 0x1, 0x1);
        gbc.writeMem(0x250, { 0xbf });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xeb2, gbc.sp());
        EXPECT(0x251, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02D7
        gbc.setState(0x356d, 0x52a5, 0xdbd0, 0xb8b9, 0x158f, 0x99a0, 0x1, 0x1);
        gbc.writeMem(0x356d, { 0xbf });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x52a5, gbc.sp());
        EXPECT(0x356e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02D8
        gbc.setState(0xb36e, 0x2293, 0x95e0, 0xfafe, 0xf4ac, 0x5450, 0x1, 0x1);
        gbc.writeMem(0xb36e, { 0xbf });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x2293, gbc.sp());
        EXPECT(0xb36f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xb36e));
        // BF 02D9
        gbc.setState(0x4ee8, 0x1cdd, 0x9dd0, 0xe686, 0x5e2d, 0xe1e4, 0x0, 0x0);
        gbc.writeMem(0x4ee8, { 0xbf });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x1cdd, gbc.sp());
        EXPECT(0x4ee9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02DA
        gbc.setState(0x7f42, 0xa3ac, 0xbc10, 0xc6a3, 0x766b, 0x7ae0, 0x1, 0x1);
        gbc.writeMem(0x7f42, { 0xbf });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xa3ac, gbc.sp());
        EXPECT(0x7f43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02DB
        gbc.setState(0xd917, 0x4d18, 0xc310, 0x631, 0xf551, 0x5bfa, 0x0, 0x0);
        gbc.writeMem(0xd917, { 0xbf });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x4d18, gbc.sp());
        EXPECT(0xd918, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xd917));
        // BF 02DC
        gbc.setState(0x61f8, 0xc047, 0xfa00, 0xd2e3, 0xfae0, 0xa940, 0x0, 0x1);
        gbc.writeMem(0x61f8, { 0xbf });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc047, gbc.sp());
        EXPECT(0x61f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02DD
        gbc.setState(0xb8dd, 0x8f2, 0xeb10, 0xdc8, 0xf0b1, 0xe6e9, 0x1, 0x1);
        gbc.writeMem(0xb8dd, { 0xbf });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x8f2, gbc.sp());
        EXPECT(0xb8de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xb8dd));
        // BF 02DE
        gbc.setState(0x588b, 0x62f0, 0x9140, 0x48f7, 0x4415, 0xfc44, 0x1, 0x1);
        gbc.writeMem(0x588b, { 0xbf });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x62f0, gbc.sp());
        EXPECT(0x588c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02DF
        gbc.setState(0xc797, 0xa367, 0x18a0, 0xc516, 0xc316, 0x4ef4, 0x0, 0x0);
        gbc.writeMem(0xc797, { 0xbf });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xa367, gbc.sp());
        EXPECT(0xc798, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc797));
        // BF 02E0
        gbc.setState(0x2a4e, 0x78d1, 0xcca0, 0x6f76, 0x5923, 0x7f8f, 0x0, 0x0);
        gbc.writeMem(0x2a4e, { 0xbf });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x78d1, gbc.sp());
        EXPECT(0x2a4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02E1
        gbc.setState(0xbb52, 0x4124, 0x6e0, 0xf14a, 0x6b8e, 0x9916, 0x1, 0x1);
        gbc.writeMem(0xbb52, { 0xbf });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x4124, gbc.sp());
        EXPECT(0xbb53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xbb52));
        // BF 02E3
        gbc.setState(0xb29e, 0x516f, 0x9030, 0xaf38, 0xaf60, 0x991d, 0x1, 0x1);
        gbc.writeMem(0xb29e, { 0xbf });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x516f, gbc.sp());
        EXPECT(0xb29f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xb29e));
        // BF 02E4
        gbc.setState(0x8227, 0x883c, 0xdc70, 0xe5d0, 0x841f, 0xe3e5, 0x1, 0x1);
        gbc.writeMem(0x8227, { 0xbf });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x883c, gbc.sp());
        EXPECT(0x8228, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x8227));
        // BF 02E6
        gbc.setState(0xc08, 0xd511, 0xc160, 0xcb57, 0x5062, 0x472c, 0x1, 0x1);
        gbc.writeMem(0xc08, { 0xbf });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd511, gbc.sp());
        EXPECT(0xc09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02E7
        gbc.setState(0x6bf1, 0x3cb4, 0x56c0, 0x8685, 0x7ad2, 0x71ae, 0x0, 0x1);
        gbc.writeMem(0x6bf1, { 0xbf });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x3cb4, gbc.sp());
        EXPECT(0x6bf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02E8
        gbc.setState(0x5daf, 0x3ee2, 0x23a0, 0xb248, 0x899b, 0x6474, 0x1, 0x0);
        gbc.writeMem(0x5daf, { 0xbf });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x3ee2, gbc.sp());
        EXPECT(0x5db0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02E9
        gbc.setState(0xeb53, 0xa4e9, 0x1710, 0x615a, 0xf870, 0x32d, 0x0, 0x0);
        gbc.writeMem(0xeb53, { 0xbf });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xa4e9, gbc.sp());
        EXPECT(0xeb54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xeb53));
        // BF 02EA
        gbc.setState(0x387b, 0x1045, 0x6e90, 0xbb7c, 0x9642, 0x4df1, 0x1, 0x1);
        gbc.writeMem(0x387b, { 0xbf });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1045, gbc.sp());
        EXPECT(0x387c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02EB
        gbc.setState(0x8161, 0x8b4, 0x23e0, 0xd69b, 0x47ac, 0x564d, 0x1, 0x0);
        gbc.writeMem(0x8161, { 0xbf });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x8b4, gbc.sp());
        EXPECT(0x8162, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x8161));
        // BF 02EC
        gbc.setState(0x289b, 0x1b45, 0xafc0, 0x2849, 0x92f, 0xe6b8, 0x0, 0x1);
        gbc.writeMem(0x289b, { 0xbf });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x1b45, gbc.sp());
        EXPECT(0x289c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02ED
        gbc.setState(0xa2f3, 0x551c, 0xcc60, 0xe3da, 0xbee9, 0xf972, 0x1, 0x0);
        gbc.writeMem(0xa2f3, { 0xbf });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x551c, gbc.sp());
        EXPECT(0xa2f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xa2f3));
        // BF 02EE
        gbc.setState(0x5a45, 0xdb04, 0x6700, 0x809d, 0x6da2, 0xd21a, 0x1, 0x1);
        gbc.writeMem(0x5a45, { 0xbf });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xdb04, gbc.sp());
        EXPECT(0x5a46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02EF
        gbc.setState(0x6471, 0xe6c, 0x150, 0xa23a, 0x554, 0xf297, 0x0, 0x0);
        gbc.writeMem(0x6471, { 0xbf });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xe6c, gbc.sp());
        EXPECT(0x6472, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02F0
        gbc.setState(0xbde1, 0xa319, 0x1770, 0x3de6, 0xa8d6, 0x8547, 0x0, 0x1);
        gbc.writeMem(0xbde1, { 0xbf });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xa319, gbc.sp());
        EXPECT(0xbde2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xbde1));
        // BF 02F1
        gbc.setState(0x735f, 0x5ba8, 0xa950, 0x4086, 0x8ff3, 0x1a6c, 0x0, 0x1);
        gbc.writeMem(0x735f, { 0xbf });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5ba8, gbc.sp());
        EXPECT(0x7360, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02F2
        gbc.setState(0x32c1, 0x9dab, 0x6d30, 0x98a5, 0xa62, 0x7f51, 0x0, 0x0);
        gbc.writeMem(0x32c1, { 0xbf });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x9dab, gbc.sp());
        EXPECT(0x32c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02F3
        gbc.setState(0x792a, 0x4d7d, 0x4800, 0xc22c, 0xf733, 0x42c5, 0x1, 0x1);
        gbc.writeMem(0x792a, { 0xbf });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x4d7d, gbc.sp());
        EXPECT(0x792b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02F4
        gbc.setState(0x884c, 0x9434, 0x4f80, 0x2ea0, 0x4e2c, 0x4598, 0x0, 0x0);
        gbc.writeMem(0x884c, { 0xbf });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9434, gbc.sp());
        EXPECT(0x884d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x884c));
        // BF 02F5
        gbc.setState(0xbfcf, 0x1c5a, 0x1c30, 0x75b9, 0x9946, 0xc4b9, 0x1, 0x0);
        gbc.writeMem(0xbfcf, { 0xbf });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x1c5a, gbc.sp());
        EXPECT(0xbfd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xbfcf));
        // BF 02F6
        gbc.setState(0xea36, 0xbef3, 0x2e30, 0x1ad2, 0x3819, 0x452, 0x0, 0x1);
        gbc.writeMem(0xea36, { 0xbf });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xbef3, gbc.sp());
        EXPECT(0xea37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xea36));
        // BF 02F7
        gbc.setState(0x99b9, 0x526d, 0x9a50, 0xfc10, 0xd77b, 0xb682, 0x0, 0x1);
        gbc.writeMem(0x99b9, { 0xbf });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x526d, gbc.sp());
        EXPECT(0x99ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x99b9));
        // BF 02F8
        gbc.setState(0xc7bc, 0x340e, 0xe4c0, 0x54fd, 0x6ca5, 0xd963, 0x1, 0x0);
        gbc.writeMem(0xc7bc, { 0xbf });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x340e, gbc.sp());
        EXPECT(0xc7bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc7bc));
        // BF 02F9
        gbc.setState(0x46c4, 0xa8fb, 0x8450, 0xa960, 0xa663, 0x370f, 0x1, 0x1);
        gbc.writeMem(0x46c4, { 0xbf });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa8fb, gbc.sp());
        EXPECT(0x46c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02FA
        gbc.setState(0x9c01, 0xe551, 0x91c0, 0xabc4, 0x1e5d, 0xcd49, 0x1, 0x1);
        gbc.writeMem(0x9c01, { 0xbf });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xe551, gbc.sp());
        EXPECT(0x9c02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x9c01));
        // BF 02FB
        gbc.setState(0x7aa8, 0x9c66, 0x2fd0, 0xbafe, 0x9774, 0x24e1, 0x0, 0x1);
        gbc.writeMem(0x7aa8, { 0xbf });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x9c66, gbc.sp());
        EXPECT(0x7aa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02FC
        gbc.setState(0x7c8f, 0xfd72, 0x8860, 0x122d, 0x97c6, 0xf971, 0x1, 0x1);
        gbc.writeMem(0x7c8f, { 0xbf });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xfd72, gbc.sp());
        EXPECT(0x7c90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02FD
        gbc.setState(0x42fd, 0x7cf4, 0x41b0, 0x23d5, 0xf737, 0xd879, 0x1, 0x0);
        gbc.writeMem(0x42fd, { 0xbf });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x7cf4, gbc.sp());
        EXPECT(0x42fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02FE
        gbc.setState(0x47b7, 0xd783, 0x2350, 0xa90b, 0x13cf, 0x62be, 0x1, 0x0);
        gbc.writeMem(0x47b7, { 0xbf });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xd783, gbc.sp());
        EXPECT(0x47b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 02FF
        gbc.setState(0xcf10, 0xbf9, 0x9050, 0x80e8, 0xa8ae, 0x2af7, 0x0, 0x0);
        gbc.writeMem(0xcf10, { 0xbf });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xbf9, gbc.sp());
        EXPECT(0xcf11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xcf10));
        // BF 0300
        gbc.setState(0x8e00, 0xee5c, 0xbea0, 0x439b, 0x697a, 0x2299, 0x1, 0x1);
        gbc.writeMem(0x8e00, { 0xbf });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xee5c, gbc.sp());
        EXPECT(0x8e01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x8e00));
        // BF 0301
        gbc.setState(0x5b20, 0x7d81, 0x8e80, 0x61f1, 0xfb39, 0x5bb1, 0x1, 0x0);
        gbc.writeMem(0x5b20, { 0xbf });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x7d81, gbc.sp());
        EXPECT(0x5b21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0302
        gbc.setState(0xcf00, 0x1813, 0x3ae0, 0xb58a, 0x1fb7, 0xd497, 0x1, 0x0);
        gbc.writeMem(0xcf00, { 0xbf });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x1813, gbc.sp());
        EXPECT(0xcf01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xcf00));
        // BF 0303
        gbc.setState(0xab6, 0x892d, 0x2ac0, 0x4362, 0x5cfe, 0x97b4, 0x0, 0x1);
        gbc.writeMem(0xab6, { 0xbf });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x892d, gbc.sp());
        EXPECT(0xab7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0304
        gbc.setState(0x114d, 0xe1da, 0x1580, 0x25ab, 0xd916, 0x9c98, 0x0, 0x1);
        gbc.writeMem(0x114d, { 0xbf });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xe1da, gbc.sp());
        EXPECT(0x114e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0305
        gbc.setState(0x4ef, 0x8aff, 0xf020, 0x461, 0xea6, 0x259d, 0x1, 0x1);
        gbc.writeMem(0x4ef, { 0xbf });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x8aff, gbc.sp());
        EXPECT(0x4f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0306
        gbc.setState(0x49ee, 0xaf58, 0x1770, 0x8ce4, 0x3c21, 0x891a, 0x1, 0x1);
        gbc.writeMem(0x49ee, { 0xbf });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xaf58, gbc.sp());
        EXPECT(0x49ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0307
        gbc.setState(0x96, 0xbf34, 0x1db0, 0x36ab, 0x9ae8, 0x8328, 0x0, 0x1);
        gbc.writeMem(0x96, { 0xbf });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xbf34, gbc.sp());
        EXPECT(0x97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0308
        gbc.setState(0x3605, 0xcc27, 0x7c90, 0xf7d3, 0xc030, 0x304d, 0x0, 0x1);
        gbc.writeMem(0x3605, { 0xbf });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xcc27, gbc.sp());
        EXPECT(0x3606, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0309
        gbc.setState(0x680b, 0x4262, 0x1380, 0xde16, 0xae42, 0xafb8, 0x0, 0x0);
        gbc.writeMem(0x680b, { 0xbf });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x4262, gbc.sp());
        EXPECT(0x680c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 030A
        gbc.setState(0x216e, 0xe884, 0x30b0, 0x2826, 0xa5c7, 0x1e28, 0x1, 0x1);
        gbc.writeMem(0x216e, { 0xbf });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xe884, gbc.sp());
        EXPECT(0x216f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 030B
        gbc.setState(0xaf6d, 0x27a0, 0xd0d0, 0x2ee3, 0xa977, 0x70cb, 0x1, 0x0);
        gbc.writeMem(0xaf6d, { 0xbf });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x27a0, gbc.sp());
        EXPECT(0xaf6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xaf6d));
        // BF 030C
        gbc.setState(0x2345, 0xe5f9, 0x4a0, 0xcd0c, 0xcbc9, 0x6bc5, 0x1, 0x1);
        gbc.writeMem(0x2345, { 0xbf });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe5f9, gbc.sp());
        EXPECT(0x2346, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 030D
        gbc.setState(0xad9f, 0xa70c, 0x9300, 0x2b01, 0x7fc1, 0x594d, 0x0, 0x1);
        gbc.writeMem(0xad9f, { 0xbf });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xa70c, gbc.sp());
        EXPECT(0xada0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xad9f));
        // BF 030E
        gbc.setState(0xc2c1, 0x53ec, 0xe30, 0x5202, 0xd064, 0xe3d9, 0x1, 0x1);
        gbc.writeMem(0xc2c1, { 0xbf });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x53ec, gbc.sp());
        EXPECT(0xc2c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc2c1));
        // BF 030F
        gbc.setState(0x12e8, 0xd759, 0xbdd0, 0xaafc, 0x6894, 0xf5a4, 0x1, 0x1);
        gbc.writeMem(0x12e8, { 0xbf });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xd759, gbc.sp());
        EXPECT(0x12e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0310
        gbc.setState(0x6b7b, 0x635d, 0xc230, 0xe0cf, 0x6775, 0xd615, 0x1, 0x0);
        gbc.writeMem(0x6b7b, { 0xbf });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x635d, gbc.sp());
        EXPECT(0x6b7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0311
        gbc.setState(0xdc3f, 0xe741, 0x2760, 0x9290, 0x8c46, 0x7492, 0x1, 0x1);
        gbc.writeMem(0xdc3f, { 0xbf });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xe741, gbc.sp());
        EXPECT(0xdc40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xdc3f));
        // BF 0312
        gbc.setState(0xc3d8, 0xacf4, 0x1590, 0xd954, 0x17b0, 0xb547, 0x1, 0x1);
        gbc.writeMem(0xc3d8, { 0xbf });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xacf4, gbc.sp());
        EXPECT(0xc3d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc3d8));
        // BF 0313
        gbc.setState(0x61b1, 0x4ad3, 0x7690, 0x2fb, 0x4c68, 0x92b6, 0x1, 0x1);
        gbc.writeMem(0x61b1, { 0xbf });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x4ad3, gbc.sp());
        EXPECT(0x61b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0314
        gbc.setState(0xebb3, 0xa863, 0xf870, 0xc53b, 0xed79, 0xb927, 0x1, 0x0);
        gbc.writeMem(0xebb3, { 0xbf });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xa863, gbc.sp());
        EXPECT(0xebb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xebb3));
        // BF 0315
        gbc.setState(0x2726, 0xc83f, 0x9f60, 0x7be0, 0x6e30, 0x6015, 0x0, 0x1);
        gbc.writeMem(0x2726, { 0xbf });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xc83f, gbc.sp());
        EXPECT(0x2727, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0316
        gbc.setState(0x7507, 0x9aa8, 0x2720, 0x6655, 0x5901, 0x8739, 0x1, 0x0);
        gbc.writeMem(0x7507, { 0xbf });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x9aa8, gbc.sp());
        EXPECT(0x7508, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0318
        gbc.setState(0x2e7d, 0xe085, 0x77d0, 0x2368, 0xaa45, 0xc76b, 0x0, 0x0);
        gbc.writeMem(0x2e7d, { 0xbf });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xe085, gbc.sp());
        EXPECT(0x2e7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0319
        gbc.setState(0x280d, 0x912, 0x71c0, 0x1349, 0xf464, 0x271b, 0x1, 0x0);
        gbc.writeMem(0x280d, { 0xbf });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x912, gbc.sp());
        EXPECT(0x280e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 031A
        gbc.setState(0x7617, 0x3fb4, 0xc4b0, 0xe106, 0x90a9, 0xcb99, 0x1, 0x0);
        gbc.writeMem(0x7617, { 0xbf });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x3fb4, gbc.sp());
        EXPECT(0x7618, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 031C
        gbc.setState(0x49ea, 0x335d, 0x3f50, 0x6682, 0xe584, 0xf8bf, 0x1, 0x1);
        gbc.writeMem(0x49ea, { 0xbf });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x335d, gbc.sp());
        EXPECT(0x49eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 031D
        gbc.setState(0x2503, 0x299, 0xa6e0, 0xb476, 0x6879, 0x4a5d, 0x1, 0x1);
        gbc.writeMem(0x2503, { 0xbf });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x299, gbc.sp());
        EXPECT(0x2504, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 031E
        gbc.setState(0x7eb0, 0xc945, 0x8ba0, 0x4adb, 0x9fb3, 0x1b96, 0x0, 0x1);
        gbc.writeMem(0x7eb0, { 0xbf });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xc945, gbc.sp());
        EXPECT(0x7eb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 031F
        gbc.setState(0x149, 0x640e, 0x8980, 0x342e, 0xa6a7, 0x65fc, 0x0, 0x0);
        gbc.writeMem(0x149, { 0xbf });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x640e, gbc.sp());
        EXPECT(0x14a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0321
        gbc.setState(0x339b, 0xde82, 0x5fc0, 0xedf3, 0xfd70, 0xf1ea, 0x1, 0x1);
        gbc.writeMem(0x339b, { 0xbf });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xde82, gbc.sp());
        EXPECT(0x339c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0322
        gbc.setState(0x4b8e, 0xe940, 0x7310, 0x33cd, 0x3a60, 0x79bc, 0x0, 0x0);
        gbc.writeMem(0x4b8e, { 0xbf });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe940, gbc.sp());
        EXPECT(0x4b8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0323
        gbc.setState(0x8ac9, 0x748a, 0xe110, 0x1df1, 0x1f57, 0x291b, 0x1, 0x0);
        gbc.writeMem(0x8ac9, { 0xbf });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x748a, gbc.sp());
        EXPECT(0x8aca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x8ac9));
        // BF 0324
        gbc.setState(0xa9f4, 0x2a13, 0xcb60, 0xa9cb, 0x2f11, 0x72e6, 0x1, 0x0);
        gbc.writeMem(0xa9f4, { 0xbf });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2a13, gbc.sp());
        EXPECT(0xa9f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xa9f4));
        // BF 0325
        gbc.setState(0xc69d, 0x4e9b, 0xb1c0, 0x59ba, 0xe2b, 0xb1b9, 0x0, 0x0);
        gbc.writeMem(0xc69d, { 0xbf });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x4e9b, gbc.sp());
        EXPECT(0xc69e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc69d));
        // BF 0326
        gbc.setState(0xbcec, 0x6259, 0x64a0, 0xb1c0, 0x620, 0x6d01, 0x1, 0x0);
        gbc.writeMem(0xbcec, { 0xbf });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x6259, gbc.sp());
        EXPECT(0xbced, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xbcec));
        // BF 0327
        gbc.setState(0x31c0, 0x4c06, 0xe8f0, 0x4450, 0xaf47, 0xe6ce, 0x0, 0x0);
        gbc.writeMem(0x31c0, { 0xbf });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x4c06, gbc.sp());
        EXPECT(0x31c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0328
        gbc.setState(0xa805, 0xb336, 0x43b0, 0xdc79, 0xffe4, 0x426c, 0x1, 0x1);
        gbc.writeMem(0xa805, { 0xbf });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xb336, gbc.sp());
        EXPECT(0xa806, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xa805));
        // BF 0329
        gbc.setState(0x74a0, 0x45c2, 0x1c20, 0x4ba4, 0x1aed, 0xa40b, 0x0, 0x0);
        gbc.writeMem(0x74a0, { 0xbf });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x45c2, gbc.sp());
        EXPECT(0x74a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 032B
        gbc.setState(0x68b3, 0x75a6, 0x6390, 0x6914, 0xe850, 0x5ca0, 0x0, 0x0);
        gbc.writeMem(0x68b3, { 0xbf });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x75a6, gbc.sp());
        EXPECT(0x68b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 032C
        gbc.setState(0x8635, 0x6492, 0x2eb0, 0x915c, 0xfdd2, 0x922c, 0x0, 0x1);
        gbc.writeMem(0x8635, { 0xbf });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x6492, gbc.sp());
        EXPECT(0x8636, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x8635));
        // BF 032D
        gbc.setState(0x84ba, 0x278b, 0xee0, 0xd8ca, 0x7e77, 0xfde8, 0x0, 0x1);
        gbc.writeMem(0x84ba, { 0xbf });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x278b, gbc.sp());
        EXPECT(0x84bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x84ba));
        // BF 032E
        gbc.setState(0x4575, 0xf224, 0xf4f0, 0x8b29, 0x765c, 0x4b47, 0x0, 0x1);
        gbc.writeMem(0x4575, { 0xbf });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xf224, gbc.sp());
        EXPECT(0x4576, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 032F
        gbc.setState(0x6b4f, 0xcdd9, 0xadf0, 0x5abd, 0x1a8c, 0xd496, 0x1, 0x1);
        gbc.writeMem(0x6b4f, { 0xbf });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xcdd9, gbc.sp());
        EXPECT(0x6b50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0330
        gbc.setState(0x942f, 0x20bb, 0xd410, 0x53b6, 0x26d2, 0xc23c, 0x0, 0x1);
        gbc.writeMem(0x942f, { 0xbf });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x20bb, gbc.sp());
        EXPECT(0x9430, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x942f));
        // BF 0331
        gbc.setState(0x3b4f, 0x4d95, 0x89d0, 0xaada, 0xa1d1, 0x3334, 0x0, 0x1);
        gbc.writeMem(0x3b4f, { 0xbf });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4d95, gbc.sp());
        EXPECT(0x3b50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0333
        gbc.setState(0x9828, 0x9fb8, 0xa300, 0x5b36, 0xa81d, 0xfad9, 0x1, 0x1);
        gbc.writeMem(0x9828, { 0xbf });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x9fb8, gbc.sp());
        EXPECT(0x9829, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x9828));
        // BF 0334
        gbc.setState(0x3ae2, 0x2f85, 0xb830, 0x1352, 0x2b6b, 0x258e, 0x0, 0x1);
        gbc.writeMem(0x3ae2, { 0xbf });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x2f85, gbc.sp());
        EXPECT(0x3ae3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0335
        gbc.setState(0x4184, 0x11c4, 0x67a0, 0x6f8d, 0x5e24, 0x1019, 0x0, 0x0);
        gbc.writeMem(0x4184, { 0xbf });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x11c4, gbc.sp());
        EXPECT(0x4185, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0336
        gbc.setState(0x6390, 0xc1c7, 0x6360, 0x96fe, 0x350c, 0x5338, 0x1, 0x0);
        gbc.writeMem(0x6390, { 0xbf });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xc1c7, gbc.sp());
        EXPECT(0x6391, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0337
        gbc.setState(0x8761, 0xed22, 0x8f20, 0x24d1, 0xec8f, 0x5f4d, 0x0, 0x1);
        gbc.writeMem(0x8761, { 0xbf });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xed22, gbc.sp());
        EXPECT(0x8762, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x8761));
        // BF 0338
        gbc.setState(0x8829, 0xfad6, 0xde30, 0xfbb1, 0x20ad, 0xa557, 0x0, 0x1);
        gbc.writeMem(0x8829, { 0xbf });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xfad6, gbc.sp());
        EXPECT(0x882a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x8829));
        // BF 0339
        gbc.setState(0x1cf0, 0xcdac, 0xdb00, 0xed39, 0x4656, 0xab19, 0x1, 0x1);
        gbc.writeMem(0x1cf0, { 0xbf });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xcdac, gbc.sp());
        EXPECT(0x1cf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 033A
        gbc.setState(0xd923, 0x8303, 0x9110, 0xc308, 0x2dcf, 0x9257, 0x0, 0x0);
        gbc.writeMem(0xd923, { 0xbf });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x8303, gbc.sp());
        EXPECT(0xd924, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xd923));
        // BF 033B
        gbc.setState(0xce59, 0x9867, 0x37a0, 0x8ede, 0x5233, 0x1519, 0x1, 0x0);
        gbc.writeMem(0xce59, { 0xbf });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9867, gbc.sp());
        EXPECT(0xce5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xce59));
        // BF 033D
        gbc.setState(0x21d8, 0xe6f6, 0xe100, 0xf9aa, 0xfc00, 0x2062, 0x0, 0x0);
        gbc.writeMem(0x21d8, { 0xbf });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xe6f6, gbc.sp());
        EXPECT(0x21d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 033E
        gbc.setState(0x4087, 0xadb2, 0xbc70, 0x9708, 0x22cc, 0x7bd4, 0x1, 0x1);
        gbc.writeMem(0x4087, { 0xbf });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xadb2, gbc.sp());
        EXPECT(0x4088, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 033F
        gbc.setState(0x6618, 0x2d3f, 0xf300, 0xa647, 0x57fa, 0xb89b, 0x1, 0x1);
        gbc.writeMem(0x6618, { 0xbf });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x2d3f, gbc.sp());
        EXPECT(0x6619, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0340
        gbc.setState(0x4321, 0xc99e, 0xabd0, 0x1944, 0x6b56, 0x4380, 0x1, 0x0);
        gbc.writeMem(0x4321, { 0xbf });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xc99e, gbc.sp());
        EXPECT(0x4322, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0341
        gbc.setState(0x9a41, 0xf737, 0x3690, 0x6e43, 0x50c0, 0x1c7e, 0x1, 0x0);
        gbc.writeMem(0x9a41, { 0xbf });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xf737, gbc.sp());
        EXPECT(0x9a42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x9a41));
        // BF 0342
        gbc.setState(0x5c60, 0x9757, 0x2a90, 0x3101, 0xce72, 0x58b1, 0x0, 0x0);
        gbc.writeMem(0x5c60, { 0xbf });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x9757, gbc.sp());
        EXPECT(0x5c61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0343
        gbc.setState(0x9295, 0x8e2a, 0x7220, 0xa756, 0x26ca, 0x28b2, 0x0, 0x0);
        gbc.writeMem(0x9295, { 0xbf });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x8e2a, gbc.sp());
        EXPECT(0x9296, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x9295));
        // BF 0344
        gbc.setState(0xe681, 0xe255, 0x1260, 0xad55, 0x9e46, 0x5455, 0x0, 0x1);
        gbc.writeMem(0xe681, { 0xbf });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xe255, gbc.sp());
        EXPECT(0xe682, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xe681));
        // BF 0345
        gbc.setState(0xb2a0, 0xb3fe, 0x1240, 0x4e69, 0xe2fe, 0x90ab, 0x1, 0x0);
        gbc.writeMem(0xb2a0, { 0xbf });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xb3fe, gbc.sp());
        EXPECT(0xb2a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xb2a0));
        // BF 0348
        gbc.setState(0x90dd, 0xbbbd, 0xd4a0, 0xf399, 0xa5f5, 0xaac, 0x0, 0x1);
        gbc.writeMem(0x90dd, { 0xbf });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xbbbd, gbc.sp());
        EXPECT(0x90de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x90dd));
        // BF 0349
        gbc.setState(0x8492, 0x7e62, 0x4210, 0x3a7a, 0xd451, 0x15eb, 0x0, 0x0);
        gbc.writeMem(0x8492, { 0xbf });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x7e62, gbc.sp());
        EXPECT(0x8493, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x8492));
        // BF 034A
        gbc.setState(0x167d, 0x974c, 0x8ad0, 0xb3d2, 0x2459, 0x38fa, 0x0, 0x1);
        gbc.writeMem(0x167d, { 0xbf });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x974c, gbc.sp());
        EXPECT(0x167e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 034B
        gbc.setState(0x705e, 0xaf9, 0x9eb0, 0xc05a, 0xc226, 0xc73, 0x0, 0x1);
        gbc.writeMem(0x705e, { 0xbf });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xaf9, gbc.sp());
        EXPECT(0x705f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 034C
        gbc.setState(0xb789, 0x5a87, 0x20e0, 0x4b4, 0xbe5d, 0xa7fc, 0x1, 0x1);
        gbc.writeMem(0xb789, { 0xbf });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x5a87, gbc.sp());
        EXPECT(0xb78a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xb789));
        // BF 034D
        gbc.setState(0x3412, 0x83ba, 0x21c0, 0x8a65, 0x4cd0, 0x9e8a, 0x1, 0x0);
        gbc.writeMem(0x3412, { 0xbf });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x83ba, gbc.sp());
        EXPECT(0x3413, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 034E
        gbc.setState(0x50de, 0x322e, 0x5ee0, 0x7ce4, 0x75c, 0xd4fe, 0x1, 0x0);
        gbc.writeMem(0x50de, { 0xbf });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x322e, gbc.sp());
        EXPECT(0x50df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0351
        gbc.setState(0x9da9, 0x90f3, 0x8d0, 0x78bb, 0x2346, 0xabae, 0x1, 0x1);
        gbc.writeMem(0x9da9, { 0xbf });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x90f3, gbc.sp());
        EXPECT(0x9daa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x9da9));
        // BF 0352
        gbc.setState(0xc789, 0xdc06, 0xf0b0, 0xa965, 0x5d6c, 0xef6c, 0x0, 0x1);
        gbc.writeMem(0xc789, { 0xbf });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xdc06, gbc.sp());
        EXPECT(0xc78a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc789));
        // BF 0353
        gbc.setState(0x3ae6, 0x3641, 0xbd30, 0xb2d8, 0xc49b, 0x60c1, 0x1, 0x1);
        gbc.writeMem(0x3ae6, { 0xbf });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x3641, gbc.sp());
        EXPECT(0x3ae7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0354
        gbc.setState(0x4ba0, 0x6a01, 0x2aa0, 0xce5, 0x2255, 0xcd7e, 0x0, 0x0);
        gbc.writeMem(0x4ba0, { 0xbf });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x6a01, gbc.sp());
        EXPECT(0x4ba1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0355
        gbc.setState(0x55c9, 0x14ed, 0xedc0, 0x41, 0xa080, 0x683e, 0x0, 0x0);
        gbc.writeMem(0x55c9, { 0xbf });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x14ed, gbc.sp());
        EXPECT(0x55ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0356
        gbc.setState(0x55d4, 0x5761, 0x15a0, 0x685a, 0xc9ba, 0xfe65, 0x1, 0x0);
        gbc.writeMem(0x55d4, { 0xbf });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x5761, gbc.sp());
        EXPECT(0x55d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0357
        gbc.setState(0x1805, 0x6ddd, 0x6d40, 0x3350, 0x4077, 0x2676, 0x0, 0x1);
        gbc.writeMem(0x1805, { 0xbf });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6ddd, gbc.sp());
        EXPECT(0x1806, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0358
        gbc.setState(0xa52, 0x7662, 0x1990, 0x37c8, 0xb55f, 0xed42, 0x1, 0x1);
        gbc.writeMem(0xa52, { 0xbf });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x7662, gbc.sp());
        EXPECT(0xa53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0359
        gbc.setState(0x6d73, 0x2df4, 0xf980, 0x8efc, 0x1ce9, 0xe994, 0x0, 0x0);
        gbc.writeMem(0x6d73, { 0xbf });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2df4, gbc.sp());
        EXPECT(0x6d74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 035A
        gbc.setState(0x4b5c, 0xe93b, 0x7d70, 0x12c2, 0xa956, 0xad8e, 0x1, 0x1);
        gbc.writeMem(0x4b5c, { 0xbf });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xe93b, gbc.sp());
        EXPECT(0x4b5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 035B
        gbc.setState(0xdb1e, 0x74bd, 0x8420, 0xa2c7, 0x78bf, 0x8534, 0x1, 0x1);
        gbc.writeMem(0xdb1e, { 0xbf });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x74bd, gbc.sp());
        EXPECT(0xdb1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xdb1e));
        // BF 035C
        gbc.setState(0x2f62, 0x1bf7, 0x4820, 0x1e41, 0x303e, 0x55a9, 0x1, 0x0);
        gbc.writeMem(0x2f62, { 0xbf });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x1bf7, gbc.sp());
        EXPECT(0x2f63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 035D
        gbc.setState(0x419c, 0x575a, 0xd650, 0x5d75, 0x9592, 0x79b7, 0x0, 0x0);
        gbc.writeMem(0x419c, { 0xbf });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x575a, gbc.sp());
        EXPECT(0x419d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 035E
        gbc.setState(0xedc3, 0xc100, 0xf730, 0x679c, 0x896d, 0xd2ed, 0x1, 0x0);
        gbc.writeMem(0xedc3, { 0xbf });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xc100, gbc.sp());
        EXPECT(0xedc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xedc3));
        // BF 035F
        gbc.setState(0xdf56, 0x8033, 0x1550, 0x5e11, 0x8897, 0x82ae, 0x1, 0x1);
        gbc.writeMem(0xdf56, { 0xbf });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x8033, gbc.sp());
        EXPECT(0xdf57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xdf56));
        // BF 0360
        gbc.setState(0xa64e, 0x2b59, 0x9640, 0x1e8b, 0x7201, 0xc19, 0x1, 0x1);
        gbc.writeMem(0xa64e, { 0xbf });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x2b59, gbc.sp());
        EXPECT(0xa64f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xa64e));
        // BF 0361
        gbc.setState(0x2fe3, 0xd42e, 0x7860, 0x34ff, 0xfa00, 0x6076, 0x1, 0x1);
        gbc.writeMem(0x2fe3, { 0xbf });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xd42e, gbc.sp());
        EXPECT(0x2fe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0362
        gbc.setState(0xd68b, 0x9163, 0x5a90, 0xa0bf, 0x2fe0, 0x2519, 0x1, 0x1);
        gbc.writeMem(0xd68b, { 0xbf });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9163, gbc.sp());
        EXPECT(0xd68c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xd68b));
        // BF 0363
        gbc.setState(0x366c, 0x91f7, 0xa2b0, 0x14f6, 0x4b17, 0x4c3a, 0x0, 0x0);
        gbc.writeMem(0x366c, { 0xbf });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x91f7, gbc.sp());
        EXPECT(0x366d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0364
        gbc.setState(0x5029, 0xe1fb, 0x8f20, 0x6097, 0x38d, 0x69ae, 0x0, 0x1);
        gbc.writeMem(0x5029, { 0xbf });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe1fb, gbc.sp());
        EXPECT(0x502a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0365
        gbc.setState(0x4e89, 0x1525, 0x1820, 0x235b, 0x869a, 0x5897, 0x0, 0x0);
        gbc.writeMem(0x4e89, { 0xbf });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x1525, gbc.sp());
        EXPECT(0x4e8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0366
        gbc.setState(0x37ce, 0xfecd, 0x7810, 0x12ca, 0x4042, 0x3426, 0x1, 0x0);
        gbc.writeMem(0x37ce, { 0xbf });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xfecd, gbc.sp());
        EXPECT(0x37cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0367
        gbc.setState(0x612d, 0x1528, 0xd2d0, 0x9c3a, 0xa682, 0x4a96, 0x1, 0x1);
        gbc.writeMem(0x612d, { 0xbf });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x1528, gbc.sp());
        EXPECT(0x612e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0368
        gbc.setState(0x1932, 0xefba, 0x4600, 0xd51c, 0x511f, 0xc178, 0x0, 0x1);
        gbc.writeMem(0x1932, { 0xbf });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xefba, gbc.sp());
        EXPECT(0x1933, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0369
        gbc.setState(0xb7a3, 0x730a, 0x32f0, 0x21dd, 0xe5dc, 0xf14c, 0x0, 0x0);
        gbc.writeMem(0xb7a3, { 0xbf });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x730a, gbc.sp());
        EXPECT(0xb7a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xb7a3));
        // BF 036A
        gbc.setState(0x1af3, 0xdf24, 0xc0c0, 0x29a, 0x8e2c, 0xdb79, 0x1, 0x1);
        gbc.writeMem(0x1af3, { 0xbf });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xdf24, gbc.sp());
        EXPECT(0x1af4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 036B
        gbc.setState(0xb43a, 0xa9d8, 0x1950, 0xc318, 0xb589, 0x9b30, 0x1, 0x0);
        gbc.writeMem(0xb43a, { 0xbf });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xa9d8, gbc.sp());
        EXPECT(0xb43b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xb43a));
        // BF 036C
        gbc.setState(0xaa80, 0x5150, 0x8470, 0x688, 0xb12c, 0x1d10, 0x1, 0x0);
        gbc.writeMem(0xaa80, { 0xbf });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x5150, gbc.sp());
        EXPECT(0xaa81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xaa80));
        // BF 036D
        gbc.setState(0x9fd1, 0xd879, 0xb000, 0x4b83, 0xdfb9, 0x16e1, 0x0, 0x0);
        gbc.writeMem(0x9fd1, { 0xbf });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xd879, gbc.sp());
        EXPECT(0x9fd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x9fd1));
        // BF 036E
        gbc.setState(0xe62f, 0x551b, 0x6dd0, 0x364f, 0x64ae, 0x13a9, 0x0, 0x1);
        gbc.writeMem(0xe62f, { 0xbf });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x551b, gbc.sp());
        EXPECT(0xe630, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xe62f));
        // BF 036F
        gbc.setState(0x38e7, 0x7d35, 0x2a60, 0x71a4, 0x962e, 0x1339, 0x1, 0x1);
        gbc.writeMem(0x38e7, { 0xbf });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7d35, gbc.sp());
        EXPECT(0x38e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0370
        gbc.setState(0x1e44, 0x4414, 0x7c60, 0x574, 0x3e6c, 0x9ad8, 0x1, 0x0);
        gbc.writeMem(0x1e44, { 0xbf });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x4414, gbc.sp());
        EXPECT(0x1e45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0371
        gbc.setState(0x710b, 0xf81d, 0x6630, 0xb6fd, 0xf7dd, 0xd42d, 0x0, 0x1);
        gbc.writeMem(0x710b, { 0xbf });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xf81d, gbc.sp());
        EXPECT(0x710c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0372
        gbc.setState(0xd677, 0x80ba, 0x1370, 0x34f3, 0x3c3, 0x1065, 0x0, 0x0);
        gbc.writeMem(0xd677, { 0xbf });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x80ba, gbc.sp());
        EXPECT(0xd678, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xd677));
        // BF 0373
        gbc.setState(0x3726, 0xa153, 0x3a00, 0xc542, 0xe6dc, 0xde6, 0x0, 0x0);
        gbc.writeMem(0x3726, { 0xbf });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xa153, gbc.sp());
        EXPECT(0x3727, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0374
        gbc.setState(0x633d, 0xba9c, 0x1600, 0xb92, 0xfd6c, 0x220, 0x1, 0x0);
        gbc.writeMem(0x633d, { 0xbf });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xba9c, gbc.sp());
        EXPECT(0x633e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0375
        gbc.setState(0xc8e1, 0x2550, 0x2210, 0x83d4, 0xd700, 0xb751, 0x0, 0x0);
        gbc.writeMem(0xc8e1, { 0xbf });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x2550, gbc.sp());
        EXPECT(0xc8e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc8e1));
        // BF 0376
        gbc.setState(0x69ef, 0x7481, 0xcad0, 0xe382, 0xa028, 0x7a5b, 0x1, 0x1);
        gbc.writeMem(0x69ef, { 0xbf });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7481, gbc.sp());
        EXPECT(0x69f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0377
        gbc.setState(0xc52, 0x9e87, 0xc2a0, 0x22dc, 0x1c37, 0x5cec, 0x0, 0x0);
        gbc.writeMem(0xc52, { 0xbf });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9e87, gbc.sp());
        EXPECT(0xc53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0378
        gbc.setState(0x1a07, 0x85a0, 0xa360, 0xee2e, 0x7c69, 0x1623, 0x0, 0x0);
        gbc.writeMem(0x1a07, { 0xbf });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x85a0, gbc.sp());
        EXPECT(0x1a08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0379
        gbc.setState(0x9b, 0xb4b0, 0x9400, 0xa7fa, 0x6a3c, 0xd2a2, 0x0, 0x1);
        gbc.writeMem(0x9b, { 0xbf });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xb4b0, gbc.sp());
        EXPECT(0x9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 037A
        gbc.setState(0x246, 0xf985, 0x98e0, 0xb4e, 0x60b5, 0x825c, 0x0, 0x1);
        gbc.writeMem(0x246, { 0xbf });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf985, gbc.sp());
        EXPECT(0x247, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 037B
        gbc.setState(0x1836, 0x8cb1, 0x5100, 0x8290, 0xf8a1, 0x64ee, 0x1, 0x0);
        gbc.writeMem(0x1836, { 0xbf });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x8cb1, gbc.sp());
        EXPECT(0x1837, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 037C
        gbc.setState(0xb0d9, 0x6864, 0xda60, 0xa500, 0xcd77, 0x7290, 0x1, 0x1);
        gbc.writeMem(0xb0d9, { 0xbf });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x6864, gbc.sp());
        EXPECT(0xb0da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xb0d9));
        // BF 037D
        gbc.setState(0xc894, 0xe384, 0x4a00, 0x27e0, 0xa06e, 0xd478, 0x0, 0x0);
        gbc.writeMem(0xc894, { 0xbf });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe384, gbc.sp());
        EXPECT(0xc895, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc894));
        // BF 037E
        gbc.setState(0x9868, 0xbe9, 0x68c0, 0x8b3f, 0x6c0f, 0x397, 0x0, 0x1);
        gbc.writeMem(0x9868, { 0xbf });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xbe9, gbc.sp());
        EXPECT(0x9869, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x9868));
        // BF 037F
        gbc.setState(0x1880, 0xea0e, 0xa540, 0x7d42, 0x960e, 0xe606, 0x1, 0x0);
        gbc.writeMem(0x1880, { 0xbf });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xea0e, gbc.sp());
        EXPECT(0x1881, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0380
        gbc.setState(0x177, 0x7de8, 0x1f40, 0x227d, 0xc428, 0xdeb7, 0x0, 0x1);
        gbc.writeMem(0x177, { 0xbf });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x7de8, gbc.sp());
        EXPECT(0x178, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0381
        gbc.setState(0x86d0, 0xa0a7, 0x2ee0, 0xef0f, 0xd7ed, 0x6622, 0x0, 0x0);
        gbc.writeMem(0x86d0, { 0xbf });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xa0a7, gbc.sp());
        EXPECT(0x86d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x86d0));
        // BF 0382
        gbc.setState(0x75f4, 0x4170, 0xe7d0, 0xcbb2, 0x5261, 0xdcd8, 0x1, 0x1);
        gbc.writeMem(0x75f4, { 0xbf });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x4170, gbc.sp());
        EXPECT(0x75f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0383
        gbc.setState(0xa2b, 0x159, 0x6780, 0x3414, 0x2c4b, 0xda92, 0x0, 0x1);
        gbc.writeMem(0xa2b, { 0xbf });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x159, gbc.sp());
        EXPECT(0xa2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0384
        gbc.setState(0xd136, 0xd9e6, 0x2ab0, 0x520a, 0xbc7, 0x6bea, 0x1, 0x1);
        gbc.writeMem(0xd136, { 0xbf });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xd9e6, gbc.sp());
        EXPECT(0xd137, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xd136));
        // BF 0386
        gbc.setState(0x75ba, 0xf44b, 0x3060, 0xa21f, 0x86d, 0xb30c, 0x0, 0x0);
        gbc.writeMem(0x75ba, { 0xbf });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xf44b, gbc.sp());
        EXPECT(0x75bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0387
        gbc.setState(0x8c28, 0xa6c, 0x4b60, 0x653d, 0xb45a, 0x9fa9, 0x0, 0x1);
        gbc.writeMem(0x8c28, { 0xbf });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xa6c, gbc.sp());
        EXPECT(0x8c29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x8c28));
        // BF 0388
        gbc.setState(0x789e, 0xabd5, 0x2030, 0x3c93, 0x91c4, 0x55c1, 0x1, 0x0);
        gbc.writeMem(0x789e, { 0xbf });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xabd5, gbc.sp());
        EXPECT(0x789f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0389
        gbc.setState(0xaebb, 0x37dd, 0x2430, 0x14d1, 0x2e3d, 0xcad3, 0x0, 0x0);
        gbc.writeMem(0xaebb, { 0xbf });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x37dd, gbc.sp());
        EXPECT(0xaebc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xaebb));
        // BF 038A
        gbc.setState(0x8ac2, 0x6379, 0x1900, 0x36d1, 0x3ce8, 0xca38, 0x0, 0x1);
        gbc.writeMem(0x8ac2, { 0xbf });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x6379, gbc.sp());
        EXPECT(0x8ac3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x8ac2));
        // BF 038B
        gbc.setState(0xe8ff, 0xd6cb, 0xedb0, 0xd2be, 0xd841, 0x2bbd, 0x1, 0x0);
        gbc.writeMem(0xe8ff, { 0xbf });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd6cb, gbc.sp());
        EXPECT(0xe900, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xe8ff));
        // BF 038C
        gbc.setState(0xd251, 0xb033, 0xcff0, 0x7b0f, 0x914b, 0xb0b3, 0x1, 0x0);
        gbc.writeMem(0xd251, { 0xbf });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xb033, gbc.sp());
        EXPECT(0xd252, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xd251));
        // BF 038D
        gbc.setState(0x565f, 0xe2e1, 0xca00, 0x7460, 0xc7ec, 0x2fc3, 0x0, 0x0);
        gbc.writeMem(0x565f, { 0xbf });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xe2e1, gbc.sp());
        EXPECT(0x5660, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 038E
        gbc.setState(0x42d6, 0x50c7, 0xfb0, 0x7f6, 0xa9b1, 0xb7ae, 0x1, 0x0);
        gbc.writeMem(0x42d6, { 0xbf });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x50c7, gbc.sp());
        EXPECT(0x42d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0390
        gbc.setState(0x32a8, 0x5b98, 0x5960, 0xbfd2, 0x4159, 0xdf55, 0x1, 0x1);
        gbc.writeMem(0x32a8, { 0xbf });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x5b98, gbc.sp());
        EXPECT(0x32a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0391
        gbc.setState(0x71e9, 0xf471, 0x7e70, 0x8e5a, 0x2f21, 0x904d, 0x0, 0x1);
        gbc.writeMem(0x71e9, { 0xbf });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xf471, gbc.sp());
        EXPECT(0x71ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0392
        gbc.setState(0x23ed, 0x4981, 0xf940, 0xa2eb, 0x4c05, 0xb4ac, 0x1, 0x1);
        gbc.writeMem(0x23ed, { 0xbf });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x4981, gbc.sp());
        EXPECT(0x23ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0393
        gbc.setState(0xc0a2, 0x4f75, 0x20c0, 0x5b36, 0x9951, 0x8bce, 0x0, 0x1);
        gbc.writeMem(0xc0a2, { 0xbf });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x4f75, gbc.sp());
        EXPECT(0xc0a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc0a2));
        // BF 0394
        gbc.setState(0x651, 0xba25, 0xf5b0, 0xbafb, 0x2c7, 0x84f8, 0x0, 0x1);
        gbc.writeMem(0x651, { 0xbf });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xba25, gbc.sp());
        EXPECT(0x652, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0395
        gbc.setState(0x7112, 0xa285, 0xddf0, 0xa8d3, 0xfb7d, 0x128f, 0x0, 0x0);
        gbc.writeMem(0x7112, { 0xbf });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xa285, gbc.sp());
        EXPECT(0x7113, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0396
        gbc.setState(0x4da2, 0xe2ba, 0x1f60, 0x96c8, 0x888e, 0xc988, 0x0, 0x0);
        gbc.writeMem(0x4da2, { 0xbf });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe2ba, gbc.sp());
        EXPECT(0x4da3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0397
        gbc.setState(0x7c47, 0xcc80, 0xa6f0, 0x8cd4, 0x3927, 0xa76e, 0x1, 0x1);
        gbc.writeMem(0x7c47, { 0xbf });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xcc80, gbc.sp());
        EXPECT(0x7c48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0398
        gbc.setState(0x55c3, 0x8fa4, 0xa1d0, 0xbc68, 0x84d0, 0x3671, 0x1, 0x1);
        gbc.writeMem(0x55c3, { 0xbf });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x8fa4, gbc.sp());
        EXPECT(0x55c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 0399
        gbc.setState(0x6fe2, 0x5dd, 0x5f90, 0x6a36, 0x72c3, 0x1fb, 0x1, 0x0);
        gbc.writeMem(0x6fe2, { 0xbf });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x5dd, gbc.sp());
        EXPECT(0x6fe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 039A
        gbc.setState(0x5c41, 0xdf4, 0x69d0, 0xc6e2, 0x2fd9, 0xba5d, 0x0, 0x0);
        gbc.writeMem(0x5c41, { 0xbf });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xdf4, gbc.sp());
        EXPECT(0x5c42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 039B
        gbc.setState(0x26fe, 0xa0af, 0x90, 0xacd8, 0xccb5, 0x4b9d, 0x0, 0x0);
        gbc.writeMem(0x26fe, { 0xbf });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xa0af, gbc.sp());
        EXPECT(0x26ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 039C
        gbc.setState(0x6ac3, 0xb8b2, 0xb450, 0xc0ec, 0x906f, 0x67ce, 0x0, 0x0);
        gbc.writeMem(0x6ac3, { 0xbf });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb8b2, gbc.sp());
        EXPECT(0x6ac4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 039D
        gbc.setState(0x11b9, 0xb075, 0x4e20, 0x214f, 0x8b4d, 0x4997, 0x0, 0x0);
        gbc.writeMem(0x11b9, { 0xbf });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb075, gbc.sp());
        EXPECT(0x11ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 039E
        gbc.setState(0x83ea, 0x12f9, 0x7de0, 0xabc7, 0xb795, 0x4228, 0x0, 0x1);
        gbc.writeMem(0x83ea, { 0xbf });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x12f9, gbc.sp());
        EXPECT(0x83eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x83ea));
        // BF 039F
        gbc.setState(0x7da5, 0xc626, 0xe5c0, 0x55cc, 0xf628, 0x1f8c, 0x0, 0x0);
        gbc.writeMem(0x7da5, { 0xbf });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xc626, gbc.sp());
        EXPECT(0x7da6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 03A0
        gbc.setState(0x9d09, 0xbaef, 0x8240, 0xf7ca, 0xd62, 0xc29c, 0x0, 0x1);
        gbc.writeMem(0x9d09, { 0xbf });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xbaef, gbc.sp());
        EXPECT(0x9d0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x9d09));
        // BF 03A1
        gbc.setState(0xafc4, 0x9845, 0x8d90, 0xb599, 0x788a, 0x1faf, 0x1, 0x0);
        gbc.writeMem(0xafc4, { 0xbf });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x9845, gbc.sp());
        EXPECT(0xafc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xafc4));
        // BF 03A2
        gbc.setState(0x8a7, 0x7e21, 0xc820, 0xd6ee, 0xe73d, 0xf58b, 0x0, 0x0);
        gbc.writeMem(0x8a7, { 0xbf });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x7e21, gbc.sp());
        EXPECT(0x8a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 03A3
        gbc.setState(0x84a2, 0x236a, 0x4120, 0x68ce, 0x8c53, 0x5719, 0x0, 0x1);
        gbc.writeMem(0x84a2, { 0xbf });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x236a, gbc.sp());
        EXPECT(0x84a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x84a2));
        // BF 03A4
        gbc.setState(0xc325, 0x2d23, 0x37b0, 0x3695, 0xc39e, 0xec4e, 0x0, 0x0);
        gbc.writeMem(0xc325, { 0xbf });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x2d23, gbc.sp());
        EXPECT(0xc326, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc325));
        // BF 03A5
        gbc.setState(0x9f1c, 0xcfbd, 0x1b90, 0x169, 0xfe53, 0x9649, 0x0, 0x1);
        gbc.writeMem(0x9f1c, { 0xbf });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xcfbd, gbc.sp());
        EXPECT(0x9f1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x9f1c));
        // BF 03A6
        gbc.setState(0x5ca1, 0x4690, 0x3af0, 0xfaa9, 0x796c, 0x9155, 0x0, 0x0);
        gbc.writeMem(0x5ca1, { 0xbf });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x4690, gbc.sp());
        EXPECT(0x5ca2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 03A7
        gbc.setState(0x7dcd, 0x37c0, 0x3de0, 0x5344, 0x224, 0xe2ca, 0x1, 0x1);
        gbc.writeMem(0x7dcd, { 0xbf });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x37c0, gbc.sp());
        EXPECT(0x7dce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 03A8
        gbc.setState(0x992e, 0x6e24, 0x19f0, 0x9085, 0xd7ad, 0xe082, 0x1, 0x0);
        gbc.writeMem(0x992e, { 0xbf });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x6e24, gbc.sp());
        EXPECT(0x992f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x992e));
        // BF 03A9
        gbc.setState(0x23d9, 0xff0a, 0x8ad0, 0xee9c, 0x53de, 0xb255, 0x1, 0x1);
        gbc.writeMem(0x23d9, { 0xbf });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xff0a, gbc.sp());
        EXPECT(0x23da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 03AA
        gbc.setState(0x2ad8, 0x941f, 0xfe40, 0xcbc1, 0xe558, 0x1da, 0x0, 0x0);
        gbc.writeMem(0x2ad8, { 0xbf });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x941f, gbc.sp());
        EXPECT(0x2ad9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 03AB
        gbc.setState(0xd01a, 0x83af, 0xb440, 0xc86b, 0x4911, 0x71de, 0x0, 0x1);
        gbc.writeMem(0xd01a, { 0xbf });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x83af, gbc.sp());
        EXPECT(0xd01b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xd01a));
        // BF 03AC
        gbc.setState(0xdde1, 0x1671, 0xaf20, 0xfc66, 0x19ad, 0x6823, 0x0, 0x1);
        gbc.writeMem(0xdde1, { 0xbf });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1671, gbc.sp());
        EXPECT(0xdde2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xdde1));
        // BF 03AD
        gbc.setState(0x4049, 0x51c0, 0xfde0, 0x9323, 0xa83f, 0x8ecf, 0x1, 0x0);
        gbc.writeMem(0x4049, { 0xbf });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x51c0, gbc.sp());
        EXPECT(0x404a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 03AE
        gbc.setState(0x9637, 0xfdb, 0x6c00, 0x43d4, 0x318c, 0x8630, 0x1, 0x0);
        gbc.writeMem(0x9637, { 0xbf });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xfdb, gbc.sp());
        EXPECT(0x9638, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x9637));
        // BF 03AF
        gbc.setState(0x8bfc, 0x9dda, 0xc450, 0x9bf4, 0x5827, 0x88b4, 0x1, 0x0);
        gbc.writeMem(0x8bfc, { 0xbf });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x9dda, gbc.sp());
        EXPECT(0x8bfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x8bfc));
        // BF 03B0
        gbc.setState(0x2fc0, 0xc875, 0xff40, 0x38c8, 0xd336, 0xb216, 0x1, 0x0);
        gbc.writeMem(0x2fc0, { 0xbf });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc875, gbc.sp());
        EXPECT(0x2fc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 03B1
        gbc.setState(0x23cb, 0x93a, 0x8940, 0xe568, 0x50fa, 0x3353, 0x1, 0x1);
        gbc.writeMem(0x23cb, { 0xbf });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x93a, gbc.sp());
        EXPECT(0x23cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 03B2
        gbc.setState(0x4b6a, 0x914c, 0x8540, 0x15b1, 0x6234, 0x3804, 0x1, 0x0);
        gbc.writeMem(0x4b6a, { 0xbf });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x914c, gbc.sp());
        EXPECT(0x4b6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 03B3
        gbc.setState(0xdbb, 0x11e7, 0x63b0, 0x6e34, 0xd894, 0x33de, 0x1, 0x1);
        gbc.writeMem(0xdbb, { 0xbf });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x11e7, gbc.sp());
        EXPECT(0xdbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 03B4
        gbc.setState(0x39bf, 0xb902, 0x20, 0xb231, 0x8b62, 0x742e, 0x1, 0x1);
        gbc.writeMem(0x39bf, { 0xbf });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xb902, gbc.sp());
        EXPECT(0x39c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 03B5
        gbc.setState(0x9bd6, 0x3665, 0xa780, 0xdd31, 0x73b, 0xe0a, 0x1, 0x1);
        gbc.writeMem(0x9bd6, { 0xbf });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3665, gbc.sp());
        EXPECT(0x9bd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x9bd6));
        // BF 03B6
        gbc.setState(0xcc1d, 0x24b2, 0x2ca0, 0x4769, 0xe7b6, 0xafbe, 0x0, 0x1);
        gbc.writeMem(0xcc1d, { 0xbf });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x24b2, gbc.sp());
        EXPECT(0xcc1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xcc1d));
        // BF 03B7
        gbc.setState(0xdc8d, 0x297, 0xd050, 0x8528, 0x5c43, 0x2f61, 0x0, 0x0);
        gbc.writeMem(0xdc8d, { 0xbf });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x297, gbc.sp());
        EXPECT(0xdc8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xdc8d));
        // BF 03B8
        gbc.setState(0xbd19, 0xf8d5, 0x7430, 0xbed1, 0x8e43, 0xce29, 0x0, 0x0);
        gbc.writeMem(0xbd19, { 0xbf });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf8d5, gbc.sp());
        EXPECT(0xbd1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xbd19));
        // BF 03B9
        gbc.setState(0x6a46, 0x1f6a, 0x5940, 0xfebf, 0xa1a2, 0x72c8, 0x1, 0x0);
        gbc.writeMem(0x6a46, { 0xbf });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x1f6a, gbc.sp());
        EXPECT(0x6a47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 03BA
        gbc.setState(0xac1e, 0xbdb1, 0xf180, 0xad49, 0x848e, 0x5be5, 0x0, 0x0);
        gbc.writeMem(0xac1e, { 0xbf });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xbdb1, gbc.sp());
        EXPECT(0xac1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xac1e));
        // BF 03BB
        gbc.setState(0x4234, 0xfc2f, 0x7bb0, 0x3a33, 0x7f62, 0x9168, 0x0, 0x0);
        gbc.writeMem(0x4234, { 0xbf });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xfc2f, gbc.sp());
        EXPECT(0x4235, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 03BC
        gbc.setState(0x283a, 0xcea7, 0x450, 0xff16, 0xc3b8, 0xcf47, 0x1, 0x0);
        gbc.writeMem(0x283a, { 0xbf });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xcea7, gbc.sp());
        EXPECT(0x283b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 03BD
        gbc.setState(0x4041, 0x690b, 0x7d70, 0x237c, 0xd589, 0x43dd, 0x1, 0x1);
        gbc.writeMem(0x4041, { 0xbf });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x690b, gbc.sp());
        EXPECT(0x4042, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 03BE
        gbc.setState(0x2839, 0x277f, 0x6110, 0x8b90, 0xbf53, 0xd798, 0x0, 0x1);
        gbc.writeMem(0x2839, { 0xbf });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x277f, gbc.sp());
        EXPECT(0x283a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 03BF
        gbc.setState(0xc19a, 0x2268, 0x6b0, 0x8c4f, 0x3409, 0xfa1e, 0x0, 0x1);
        gbc.writeMem(0xc19a, { 0xbf });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x2268, gbc.sp());
        EXPECT(0xc19b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc19a));
        // BF 03C0
        gbc.setState(0x4e3d, 0xd1a, 0xbb20, 0x4eb3, 0x24fd, 0xf6d5, 0x0, 0x0);
        gbc.writeMem(0x4e3d, { 0xbf });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xd1a, gbc.sp());
        EXPECT(0x4e3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 03C1
        gbc.setState(0x4559, 0xe0e5, 0x8b70, 0xd4b3, 0x7e9a, 0x1b6d, 0x1, 0x1);
        gbc.writeMem(0x4559, { 0xbf });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe0e5, gbc.sp());
        EXPECT(0x455a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 03C2
        gbc.setState(0x4e2d, 0xbf60, 0xdc10, 0x98d5, 0xb27d, 0xf8ab, 0x0, 0x1);
        gbc.writeMem(0x4e2d, { 0xbf });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xbf60, gbc.sp());
        EXPECT(0x4e2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 03C3
        gbc.setState(0x6048, 0x26e, 0xd240, 0xca63, 0xcaa6, 0x132f, 0x1, 0x1);
        gbc.writeMem(0x6048, { 0xbf });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x26e, gbc.sp());
        EXPECT(0x6049, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 03C4
        gbc.setState(0x91fb, 0x4ba7, 0xe2b0, 0x3f3c, 0x6a31, 0x9c50, 0x1, 0x1);
        gbc.writeMem(0x91fb, { 0xbf });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x4ba7, gbc.sp());
        EXPECT(0x91fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x91fb));
        // BF 03C5
        gbc.setState(0x6cbc, 0xf47d, 0x6f70, 0xdbc7, 0x1648, 0xfc8f, 0x1, 0x0);
        gbc.writeMem(0x6cbc, { 0xbf });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xf47d, gbc.sp());
        EXPECT(0x6cbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 03C6
        gbc.setState(0xce8d, 0x1696, 0xca30, 0x8dcd, 0x36dd, 0x535e, 0x0, 0x0);
        gbc.writeMem(0xce8d, { 0xbf });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x1696, gbc.sp());
        EXPECT(0xce8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xce8d));
        // BF 03C7
        gbc.setState(0x8968, 0xf09c, 0x3810, 0xec38, 0xbbec, 0x213b, 0x1, 0x0);
        gbc.writeMem(0x8968, { 0xbf });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xf09c, gbc.sp());
        EXPECT(0x8969, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x8968));
        // BF 03C8
        gbc.setState(0xa81d, 0xe18f, 0x7a40, 0x9f81, 0x4850, 0x3316, 0x0, 0x1);
        gbc.writeMem(0xa81d, { 0xbf });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe18f, gbc.sp());
        EXPECT(0xa81e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xa81d));
        // BF 03C9
        gbc.setState(0x2d54, 0x3f62, 0x15f0, 0xc14e, 0x4313, 0xc1ea, 0x1, 0x1);
        gbc.writeMem(0x2d54, { 0xbf });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x3f62, gbc.sp());
        EXPECT(0x2d55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 03CA
        gbc.setState(0x35c, 0x7428, 0x18e0, 0xfd41, 0xc41, 0xac91, 0x0, 0x0);
        gbc.writeMem(0x35c, { 0xbf });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x7428, gbc.sp());
        EXPECT(0x35d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 03CB
        gbc.setState(0xac1, 0x2d14, 0xcaa0, 0xeebc, 0x4a28, 0xa38, 0x1, 0x0);
        gbc.writeMem(0xac1, { 0xbf });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x2d14, gbc.sp());
        EXPECT(0xac2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 03CC
        gbc.setState(0x321a, 0x90cf, 0x69d0, 0xa523, 0x752, 0x2246, 0x1, 0x1);
        gbc.writeMem(0x321a, { 0xbf });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x90cf, gbc.sp());
        EXPECT(0x321b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 03CD
        gbc.setState(0xeae9, 0x45f7, 0x16d0, 0x6afa, 0x15ad, 0xf0a4, 0x1, 0x0);
        gbc.writeMem(0xeae9, { 0xbf });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x45f7, gbc.sp());
        EXPECT(0xeaea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xeae9));
        // BF 03CE
        gbc.setState(0x9078, 0xfa27, 0xc270, 0xa160, 0xe1f9, 0x2dd4, 0x1, 0x1);
        gbc.writeMem(0x9078, { 0xbf });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xfa27, gbc.sp());
        EXPECT(0x9079, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x9078));
        // BF 03CF
        gbc.setState(0x5f7c, 0xb8a5, 0xafd0, 0x7ac8, 0xb4ef, 0xf015, 0x0, 0x0);
        gbc.writeMem(0x5f7c, { 0xbf });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb8a5, gbc.sp());
        EXPECT(0x5f7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 03D1
        gbc.setState(0x5196, 0x17cf, 0x5750, 0xe60c, 0x5ada, 0x4439, 0x0, 0x1);
        gbc.writeMem(0x5196, { 0xbf });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x17cf, gbc.sp());
        EXPECT(0x5197, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 03D2
        gbc.setState(0xa903, 0x4304, 0xb680, 0xc684, 0x75d2, 0xd0c6, 0x0, 0x1);
        gbc.writeMem(0xa903, { 0xbf });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4304, gbc.sp());
        EXPECT(0xa904, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xa903));
        // BF 03D3
        gbc.setState(0x2ff5, 0xc58, 0xd9e0, 0x9548, 0x8285, 0x6124, 0x0, 0x1);
        gbc.writeMem(0x2ff5, { 0xbf });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xc58, gbc.sp());
        EXPECT(0x2ff6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 03D5
        gbc.setState(0x9867, 0xa74f, 0xb630, 0xe2d4, 0xbdc, 0x39e4, 0x1, 0x1);
        gbc.writeMem(0x9867, { 0xbf });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xa74f, gbc.sp());
        EXPECT(0x9868, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x9867));
        // BF 03D6
        gbc.setState(0x8a0d, 0xe6ce, 0x2e70, 0x7aaa, 0x2f34, 0x9a71, 0x1, 0x0);
        gbc.writeMem(0x8a0d, { 0xbf });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xe6ce, gbc.sp());
        EXPECT(0x8a0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x8a0d));
        // BF 03D7
        gbc.setState(0x1167, 0x9ef5, 0x15d0, 0x6ea9, 0x78d, 0xc942, 0x0, 0x0);
        gbc.writeMem(0x1167, { 0xbf });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x9ef5, gbc.sp());
        EXPECT(0x1168, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 03D8
        gbc.setState(0x6c6e, 0x8124, 0x1fa0, 0x2c4, 0x9eb9, 0x69d9, 0x0, 0x1);
        gbc.writeMem(0x6c6e, { 0xbf });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x8124, gbc.sp());
        EXPECT(0x6c6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 03D9
        gbc.setState(0x524e, 0x7c4a, 0xa0a0, 0xc965, 0xee03, 0x62bd, 0x1, 0x0);
        gbc.writeMem(0x524e, { 0xbf });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x7c4a, gbc.sp());
        EXPECT(0x524f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 03DA
        gbc.setState(0xae54, 0xe947, 0x9b0, 0x4d43, 0xe84e, 0x663e, 0x0, 0x1);
        gbc.writeMem(0xae54, { 0xbf });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xe947, gbc.sp());
        EXPECT(0xae55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xae54));
        // BF 03DB
        gbc.setState(0x4559, 0x890f, 0xa7c0, 0xe976, 0xa8d5, 0x9340, 0x1, 0x1);
        gbc.writeMem(0x4559, { 0xbf });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x890f, gbc.sp());
        EXPECT(0x455a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 03DC
        gbc.setState(0xe1a7, 0x5842, 0xf890, 0xa6c9, 0xc135, 0xb1fe, 0x1, 0x1);
        gbc.writeMem(0xe1a7, { 0xbf });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x5842, gbc.sp());
        EXPECT(0xe1a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xe1a7));
        // BF 03DD
        gbc.setState(0x58db, 0x9d93, 0x70d0, 0x4379, 0xed19, 0xed62, 0x1, 0x0);
        gbc.writeMem(0x58db, { 0xbf });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x9d93, gbc.sp());
        EXPECT(0x58dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 03DE
        gbc.setState(0x64d7, 0xf252, 0xd7f0, 0xc0de, 0x1fe2, 0x161, 0x0, 0x1);
        gbc.writeMem(0x64d7, { 0xbf });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf252, gbc.sp());
        EXPECT(0x64d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 03DF
        gbc.setState(0xcc54, 0x8373, 0x5670, 0x6884, 0x16e7, 0xd089, 0x1, 0x0);
        gbc.writeMem(0xcc54, { 0xbf });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8373, gbc.sp());
        EXPECT(0xcc55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xcc54));
        // BF 03E0
        gbc.setState(0x7fec, 0x182b, 0xdd50, 0x71e4, 0x4f62, 0xdd96, 0x0, 0x0);
        gbc.writeMem(0x7fec, { 0xbf });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x182b, gbc.sp());
        EXPECT(0x7fed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 03E2
        gbc.setState(0xcfe, 0x88e8, 0xb500, 0x6243, 0x41c7, 0x1406, 0x1, 0x0);
        gbc.writeMem(0xcfe, { 0xbf });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x88e8, gbc.sp());
        EXPECT(0xcff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 03E3
        gbc.setState(0xea84, 0x2433, 0x4930, 0xad38, 0xc09b, 0xf8c5, 0x1, 0x1);
        gbc.writeMem(0xea84, { 0xbf });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x2433, gbc.sp());
        EXPECT(0xea85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xea84));
        // BF 03E4
        gbc.setState(0xbff9, 0x8fc5, 0xf000, 0x7e1, 0x7643, 0x480c, 0x1, 0x0);
        gbc.writeMem(0xbff9, { 0xbf });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x8fc5, gbc.sp());
        EXPECT(0xbffa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xbff9));
        // BF 03E5
        gbc.setState(0x55fb, 0x3ffa, 0x4e70, 0xf517, 0xd7fe, 0xc7af, 0x1, 0x1);
        gbc.writeMem(0x55fb, { 0xbf });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x3ffa, gbc.sp());
        EXPECT(0x55fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BF 03E6
        gbc.setState(0xa13a, 0x8ba4, 0x7a50, 0xe1d7, 0x192f, 0x8576, 0x1, 0x1);
        gbc.writeMem(0xa13a, { 0xbf });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x8ba4, gbc.sp());
        EXPECT(0xa13b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xa13a));
        // BF 03E7
        gbc.setState(0x8b24, 0xca, 0x2060, 0x7c3d, 0x326, 0xefd4, 0x0, 0x0);
        gbc.writeMem(0x8b24, { 0xbf });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xca, gbc.sp());
        EXPECT(0x8b25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x8b24));
    }
