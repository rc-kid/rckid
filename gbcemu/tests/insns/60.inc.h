    TEST(gbcemu, opcode_60) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 60 0000
        gbc.setState(0xc5a6, 0x1458, 0x3ef0, 0x1b4a, 0x193c, 0xb496, 0x1, 0x1);
        gbc.writeMem(0xc5a6, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x1458);
        EXPECT(gbc.pc(), 0xc5a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5a6), 0x60);
        // 60 0001
        gbc.setState(0x7de6, 0x18fc, 0xb020, 0xa483, 0x7a55, 0xf744, 0x1, 0x0);
        gbc.writeMem(0x7de6, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x18fc);
        EXPECT(gbc.pc(), 0x7de7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0002
        gbc.setState(0x6ccd, 0xa9d8, 0x7370, 0x82f8, 0xc551, 0xaf94, 0x1, 0x1);
        gbc.writeMem(0x6ccd, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xa9d8);
        EXPECT(gbc.pc(), 0x6cce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0003
        gbc.setState(0xe19d, 0x5426, 0xadd0, 0x8763, 0x4d35, 0x1991, 0x0, 0x1);
        gbc.writeMem(0xe19d, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x5426);
        EXPECT(gbc.pc(), 0xe19e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe19d), 0x60);
        // 60 0004
        gbc.setState(0x39e3, 0x539, 0x9da0, 0xa33b, 0xf032, 0x8635, 0x1, 0x1);
        gbc.writeMem(0x39e3, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x539);
        EXPECT(gbc.pc(), 0x39e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0005
        gbc.setState(0x5a6b, 0x63f8, 0xff60, 0xafe2, 0x86d7, 0x35e1, 0x1, 0x1);
        gbc.writeMem(0x5a6b, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x63f8);
        EXPECT(gbc.pc(), 0x5a6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0006
        gbc.setState(0xa548, 0x1bbd, 0xece0, 0xfd7d, 0x5ac0, 0x6f4c, 0x1, 0x1);
        gbc.writeMem(0xa548, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x1bbd);
        EXPECT(gbc.pc(), 0xa549);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa548), 0x60);
        // 60 0007
        gbc.setState(0x8390, 0xcd94, 0xc7a0, 0xb6b4, 0x71e7, 0x4abe, 0x0, 0x1);
        gbc.writeMem(0x8390, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xcd94);
        EXPECT(gbc.pc(), 0x8391);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8390), 0x60);
        // 60 0008
        gbc.setState(0xdc28, 0x32a6, 0xaa80, 0x5b31, 0x8d26, 0x1671, 0x0, 0x1);
        gbc.writeMem(0xdc28, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x32a6);
        EXPECT(gbc.pc(), 0xdc29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc28), 0x60);
        // 60 0009
        gbc.setState(0x61f0, 0xbe06, 0x7020, 0xc2ec, 0xe035, 0xc201, 0x1, 0x0);
        gbc.writeMem(0x61f0, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xbe06);
        EXPECT(gbc.pc(), 0x61f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 000A
        gbc.setState(0xec78, 0xa6fa, 0xd0a0, 0xab89, 0xc404, 0xb4e, 0x1, 0x1);
        gbc.writeMem(0xec78, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xa6fa);
        EXPECT(gbc.pc(), 0xec79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec78), 0x60);
        // 60 000B
        gbc.setState(0x7725, 0x48ea, 0x5a80, 0xce97, 0x730f, 0x43ff, 0x1, 0x0);
        gbc.writeMem(0x7725, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x48ea);
        EXPECT(gbc.pc(), 0x7726);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 000C
        gbc.setState(0x4ae3, 0xc7ef, 0x1a0, 0x907a, 0x68a5, 0xf1ba, 0x0, 0x0);
        gbc.writeMem(0x4ae3, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xc7ef);
        EXPECT(gbc.pc(), 0x4ae4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 000D
        gbc.setState(0x78ed, 0x1238, 0xeb20, 0xff3a, 0xb4d, 0xbd37, 0x1, 0x0);
        gbc.writeMem(0x78ed, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x1238);
        EXPECT(gbc.pc(), 0x78ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 000E
        gbc.setState(0x70a1, 0xecd9, 0xb0a0, 0x47c8, 0xaaf, 0x9576, 0x0, 0x0);
        gbc.writeMem(0x70a1, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xecd9);
        EXPECT(gbc.pc(), 0x70a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 000F
        gbc.setState(0xaf1b, 0x20bc, 0x8750, 0xc966, 0x8c2a, 0x24b2, 0x1, 0x0);
        gbc.writeMem(0xaf1b, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x20bc);
        EXPECT(gbc.pc(), 0xaf1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf1b), 0x60);
        // 60 0010
        gbc.setState(0x69f, 0x51c3, 0x87e0, 0x8305, 0x9d01, 0x4864, 0x1, 0x1);
        gbc.writeMem(0x69f, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x51c3);
        EXPECT(gbc.pc(), 0x6a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0011
        gbc.setState(0xa6cf, 0xe44a, 0x3480, 0x5fd2, 0xa1e1, 0x6de2, 0x1, 0x0);
        gbc.writeMem(0xa6cf, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xe44a);
        EXPECT(gbc.pc(), 0xa6d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6cf), 0x60);
        // 60 0012
        gbc.setState(0xb752, 0x6ec4, 0xba60, 0x7e12, 0x917e, 0x9a31, 0x1, 0x0);
        gbc.writeMem(0xb752, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x6ec4);
        EXPECT(gbc.pc(), 0xb753);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb752), 0x60);
        // 60 0013
        gbc.setState(0xd17f, 0x82c1, 0xe460, 0xe3c3, 0x5adc, 0xbaf6, 0x1, 0x0);
        gbc.writeMem(0xd17f, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x82c1);
        EXPECT(gbc.pc(), 0xd180);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd17f), 0x60);
        // 60 0014
        gbc.setState(0x28d4, 0x8b0d, 0xcd0, 0xf358, 0x5790, 0x2113, 0x1, 0x0);
        gbc.writeMem(0x28d4, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x8b0d);
        EXPECT(gbc.pc(), 0x28d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 0015
        gbc.setState(0x84fe, 0x8ea7, 0xbb60, 0x11b5, 0x1550, 0x8c46, 0x0, 0x1);
        gbc.writeMem(0x84fe, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x8ea7);
        EXPECT(gbc.pc(), 0x84ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84fe), 0x60);
        // 60 0016
        gbc.setState(0xc39, 0x74c0, 0xe530, 0xe37c, 0x8da2, 0x2d20, 0x1, 0x1);
        gbc.writeMem(0xc39, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x74c0);
        EXPECT(gbc.pc(), 0xc3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0017
        gbc.setState(0x8c26, 0x38c6, 0xf600, 0x9433, 0x835c, 0xc613, 0x1, 0x0);
        gbc.writeMem(0x8c26, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x38c6);
        EXPECT(gbc.pc(), 0x8c27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c26), 0x60);
        // 60 0018
        gbc.setState(0xccd4, 0x50a1, 0x34d0, 0x9b37, 0x9438, 0xf126, 0x0, 0x0);
        gbc.writeMem(0xccd4, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x50a1);
        EXPECT(gbc.pc(), 0xccd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccd4), 0x60);
        // 60 0019
        gbc.setState(0xd365, 0x195c, 0x9660, 0xbf9a, 0x305, 0xd5e1, 0x0, 0x1);
        gbc.writeMem(0xd365, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x195c);
        EXPECT(gbc.pc(), 0xd366);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd365), 0x60);
        // 60 001A
        gbc.setState(0xd137, 0x9f06, 0xbca0, 0x455d, 0x92f8, 0x461d, 0x0, 0x1);
        gbc.writeMem(0xd137, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x9f06);
        EXPECT(gbc.pc(), 0xd138);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd137), 0x60);
        // 60 001B
        gbc.setState(0x2656, 0x16a5, 0x5a0, 0xa717, 0x7e0, 0x9c1c, 0x1, 0x1);
        gbc.writeMem(0x2656, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x16a5);
        EXPECT(gbc.pc(), 0x2657);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 001C
        gbc.setState(0x2209, 0x9f50, 0xf970, 0xf73a, 0xdf4d, 0x69a4, 0x1, 0x0);
        gbc.writeMem(0x2209, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x9f50);
        EXPECT(gbc.pc(), 0x220a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 001D
        gbc.setState(0x7442, 0x38ba, 0xe550, 0x2594, 0x68f7, 0xff76, 0x1, 0x0);
        gbc.writeMem(0x7442, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x38ba);
        EXPECT(gbc.pc(), 0x7443);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 001E
        gbc.setState(0x3bf0, 0x1393, 0xfca0, 0xa61d, 0xe4e4, 0x63e7, 0x0, 0x1);
        gbc.writeMem(0x3bf0, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x1393);
        EXPECT(gbc.pc(), 0x3bf1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 001F
        gbc.setState(0x6e49, 0x9387, 0xa40, 0x7a78, 0x8fce, 0x2047, 0x1, 0x0);
        gbc.writeMem(0x6e49, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x9387);
        EXPECT(gbc.pc(), 0x6e4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 0020
        gbc.setState(0x8680, 0x6213, 0x31e0, 0x7a31, 0xad20, 0x39ff, 0x1, 0x0);
        gbc.writeMem(0x8680, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x6213);
        EXPECT(gbc.pc(), 0x8681);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8680), 0x60);
        // 60 0021
        gbc.setState(0x3e9c, 0x600c, 0xbd10, 0xa072, 0xa172, 0x3d4d, 0x1, 0x0);
        gbc.writeMem(0x3e9c, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x600c);
        EXPECT(gbc.pc(), 0x3e9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 0022
        gbc.setState(0xdcad, 0x3bd6, 0xd220, 0xec1f, 0x9364, 0x5b6a, 0x0, 0x1);
        gbc.writeMem(0xdcad, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x3bd6);
        EXPECT(gbc.pc(), 0xdcae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcad), 0x60);
        // 60 0023
        gbc.setState(0x51b7, 0x8c29, 0x21f0, 0x6852, 0x272f, 0x8021, 0x1, 0x0);
        gbc.writeMem(0x51b7, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x8c29);
        EXPECT(gbc.pc(), 0x51b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0024
        gbc.setState(0x1c92, 0x2303, 0x4140, 0xe98, 0x9472, 0xc51b, 0x1, 0x0);
        gbc.writeMem(0x1c92, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x2303);
        EXPECT(gbc.pc(), 0x1c93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 0025
        gbc.setState(0x17a2, 0x6a14, 0x8d00, 0x7986, 0x372f, 0xb56d, 0x0, 0x1);
        gbc.writeMem(0x17a2, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x6a14);
        EXPECT(gbc.pc(), 0x17a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 0026
        gbc.setState(0x26f4, 0x8e30, 0xe7d0, 0x28c3, 0x973c, 0x3ec9, 0x1, 0x0);
        gbc.writeMem(0x26f4, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x8e30);
        EXPECT(gbc.pc(), 0x26f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 0027
        gbc.setState(0x6ffe, 0x26a, 0xcd80, 0xc73e, 0x8a98, 0xad3f, 0x1, 0x0);
        gbc.writeMem(0x6ffe, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x26a);
        EXPECT(gbc.pc(), 0x6fff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 0028
        gbc.setState(0x4208, 0x3edd, 0xdc0, 0x670e, 0x2a30, 0x9a56, 0x1, 0x0);
        gbc.writeMem(0x4208, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x3edd);
        EXPECT(gbc.pc(), 0x4209);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 0029
        gbc.setState(0xf39, 0xc881, 0xbfa0, 0x7154, 0xcdbc, 0x4e6b, 0x1, 0x1);
        gbc.writeMem(0xf39, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xc881);
        EXPECT(gbc.pc(), 0xf3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 002A
        gbc.setState(0x5c0, 0x7492, 0x7f80, 0xb7e1, 0x332d, 0x218c, 0x0, 0x1);
        gbc.writeMem(0x5c0, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x7492);
        EXPECT(gbc.pc(), 0x5c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 002B
        gbc.setState(0x470c, 0xe11f, 0xd5e0, 0x96fd, 0x4d41, 0xaee0, 0x1, 0x1);
        gbc.writeMem(0x470c, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xe11f);
        EXPECT(gbc.pc(), 0x470d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 002D
        gbc.setState(0xd9dc, 0x956d, 0x8ee0, 0x93e, 0xed9f, 0xc6a0, 0x1, 0x1);
        gbc.writeMem(0xd9dc, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x956d);
        EXPECT(gbc.pc(), 0xd9dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9dc), 0x60);
        // 60 002E
        gbc.setState(0xe196, 0xfd36, 0xbc80, 0x8ea5, 0xea2c, 0xbcd8, 0x1, 0x1);
        gbc.writeMem(0xe196, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xfd36);
        EXPECT(gbc.pc(), 0xe197);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe196), 0x60);
        // 60 002F
        gbc.setState(0x4a0d, 0x1ce6, 0x10c0, 0xb564, 0xa232, 0xc295, 0x1, 0x1);
        gbc.writeMem(0x4a0d, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x1ce6);
        EXPECT(gbc.pc(), 0x4a0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 0030
        gbc.setState(0x6399, 0x7a9b, 0x1c00, 0xf091, 0xa730, 0x880b, 0x1, 0x1);
        gbc.writeMem(0x6399, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x7a9b);
        EXPECT(gbc.pc(), 0x639a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 0031
        gbc.setState(0xa145, 0x15e8, 0x5fb0, 0xbbed, 0xd11c, 0xb885, 0x1, 0x1);
        gbc.writeMem(0xa145, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x15e8);
        EXPECT(gbc.pc(), 0xa146);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa145), 0x60);
        // 60 0032
        gbc.setState(0x674a, 0xeb4a, 0x3ba0, 0x632c, 0x9937, 0x740c, 0x1, 0x1);
        gbc.writeMem(0x674a, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xeb4a);
        EXPECT(gbc.pc(), 0x674b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0033
        gbc.setState(0xaab7, 0xef68, 0x8c40, 0x321f, 0xdcc7, 0x68cf, 0x0, 0x0);
        gbc.writeMem(0xaab7, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xef68);
        EXPECT(gbc.pc(), 0xaab8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaab7), 0x60);
        // 60 0034
        gbc.setState(0xb159, 0xcd9f, 0x5cd0, 0xac70, 0x8b8e, 0x4d00, 0x0, 0x1);
        gbc.writeMem(0xb159, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xcd9f);
        EXPECT(gbc.pc(), 0xb15a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb159), 0x60);
        // 60 0035
        gbc.setState(0xf81, 0xfe4, 0xbb70, 0xd076, 0x2d9f, 0xec6c, 0x1, 0x1);
        gbc.writeMem(0xf81, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xfe4);
        EXPECT(gbc.pc(), 0xf82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0036
        gbc.setState(0xa778, 0xd878, 0x2f70, 0xcc5e, 0xd11d, 0xa8c, 0x1, 0x1);
        gbc.writeMem(0xa778, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xd878);
        EXPECT(gbc.pc(), 0xa779);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa778), 0x60);
        // 60 0037
        gbc.setState(0x3151, 0xe4fb, 0xf100, 0xdbe1, 0x502d, 0xb437, 0x0, 0x0);
        gbc.writeMem(0x3151, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xe4fb);
        EXPECT(gbc.pc(), 0x3152);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 0038
        gbc.setState(0x8cec, 0xf13f, 0xdd90, 0xdb, 0xfb97, 0x535e, 0x1, 0x1);
        gbc.writeMem(0x8cec, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xf13f);
        EXPECT(gbc.pc(), 0x8ced);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cec), 0x60);
        // 60 0039
        gbc.setState(0x7f2b, 0x734b, 0x9bd0, 0x4917, 0xe317, 0x273d, 0x1, 0x0);
        gbc.writeMem(0x7f2b, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x734b);
        EXPECT(gbc.pc(), 0x7f2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 003A
        gbc.setState(0x3081, 0x51b, 0x7a90, 0xea78, 0xe14e, 0x9951, 0x1, 0x1);
        gbc.writeMem(0x3081, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x51b);
        EXPECT(gbc.pc(), 0x3082);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 003B
        gbc.setState(0x139b, 0xa837, 0xe1e0, 0x5d54, 0x6fe8, 0x3c82, 0x1, 0x0);
        gbc.writeMem(0x139b, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xa837);
        EXPECT(gbc.pc(), 0x139c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 003C
        gbc.setState(0xc75e, 0x5948, 0xf420, 0x97a9, 0x72d8, 0xc3a0, 0x0, 0x1);
        gbc.writeMem(0xc75e, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x5948);
        EXPECT(gbc.pc(), 0xc75f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc75e), 0x60);
        // 60 003D
        gbc.setState(0x7d67, 0xf898, 0xffa0, 0x9547, 0xcd2d, 0xc76c, 0x1, 0x0);
        gbc.writeMem(0x7d67, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xf898);
        EXPECT(gbc.pc(), 0x7d68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 003F
        gbc.setState(0x49f1, 0xdec, 0x4160, 0x6b16, 0xfa3c, 0x9c11, 0x1, 0x0);
        gbc.writeMem(0x49f1, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xdec);
        EXPECT(gbc.pc(), 0x49f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0040
        gbc.setState(0x8232, 0x28be, 0x1210, 0x387, 0x79c9, 0xbbf8, 0x1, 0x0);
        gbc.writeMem(0x8232, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x28be);
        EXPECT(gbc.pc(), 0x8233);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8232), 0x60);
        // 60 0041
        gbc.setState(0x9902, 0x798d, 0xe710, 0x7ba3, 0x4443, 0xeace, 0x1, 0x1);
        gbc.writeMem(0x9902, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x798d);
        EXPECT(gbc.pc(), 0x9903);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9902), 0x60);
        // 60 0042
        gbc.setState(0xc033, 0xfcdf, 0xc120, 0x1e4a, 0x2780, 0xe84c, 0x1, 0x0);
        gbc.writeMem(0xc033, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xfcdf);
        EXPECT(gbc.pc(), 0xc034);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc033), 0x60);
        // 60 0043
        gbc.setState(0xa4b, 0x57b1, 0xd010, 0x4a1a, 0x8231, 0x7827, 0x1, 0x1);
        gbc.writeMem(0xa4b, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x57b1);
        EXPECT(gbc.pc(), 0xa4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 0044
        gbc.setState(0x612e, 0xedbe, 0xccf0, 0xdae5, 0x1fdd, 0x9430, 0x0, 0x1);
        gbc.writeMem(0x612e, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xedbe);
        EXPECT(gbc.pc(), 0x612f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0045
        gbc.setState(0x19a8, 0x8447, 0x2cd0, 0x9abe, 0xc771, 0x9d9a, 0x0, 0x1);
        gbc.writeMem(0x19a8, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x8447);
        EXPECT(gbc.pc(), 0x19a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 0046
        gbc.setState(0x65af, 0x8fff, 0xd0, 0x6bb5, 0x9f78, 0xc93a, 0x0, 0x0);
        gbc.writeMem(0x65af, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x8fff);
        EXPECT(gbc.pc(), 0x65b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 0047
        gbc.setState(0x14f7, 0x704e, 0x3b10, 0xfac3, 0x71c4, 0xd820, 0x0, 0x0);
        gbc.writeMem(0x14f7, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x704e);
        EXPECT(gbc.pc(), 0x14f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 0048
        gbc.setState(0x2731, 0x6be8, 0xeae0, 0x975a, 0x5c4a, 0xa9e8, 0x0, 0x1);
        gbc.writeMem(0x2731, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x6be8);
        EXPECT(gbc.pc(), 0x2732);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 004A
        gbc.setState(0xbd24, 0xc042, 0xf540, 0x30b3, 0x5a5b, 0xd181, 0x1, 0x0);
        gbc.writeMem(0xbd24, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xc042);
        EXPECT(gbc.pc(), 0xbd25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd24), 0x60);
        // 60 004B
        gbc.setState(0x6abc, 0xbc33, 0x59a0, 0x1fd3, 0x70ac, 0xe6ea, 0x0, 0x1);
        gbc.writeMem(0x6abc, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xbc33);
        EXPECT(gbc.pc(), 0x6abd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 004C
        gbc.setState(0xb51, 0x362, 0xb3a0, 0xcd77, 0xb09f, 0x5ed0, 0x1, 0x1);
        gbc.writeMem(0xb51, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x362);
        EXPECT(gbc.pc(), 0xb52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 004D
        gbc.setState(0xc906, 0xdb08, 0x35f0, 0xde8f, 0xdb2d, 0x998c, 0x1, 0x0);
        gbc.writeMem(0xc906, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xdb08);
        EXPECT(gbc.pc(), 0xc907);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc906), 0x60);
        // 60 004E
        gbc.setState(0xc524, 0x34b2, 0xb6a0, 0x7a84, 0xce7f, 0x6c60, 0x1, 0x0);
        gbc.writeMem(0xc524, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x34b2);
        EXPECT(gbc.pc(), 0xc525);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc524), 0x60);
        // 60 004F
        gbc.setState(0x36d3, 0x1d97, 0xb090, 0xbf1e, 0xf902, 0x7e28, 0x0, 0x0);
        gbc.writeMem(0x36d3, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x1d97);
        EXPECT(gbc.pc(), 0x36d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 0050
        gbc.setState(0xe8f4, 0x9e57, 0x72e0, 0x7858, 0xab0b, 0xcb73, 0x1, 0x1);
        gbc.writeMem(0xe8f4, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x9e57);
        EXPECT(gbc.pc(), 0xe8f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8f4), 0x60);
        // 60 0051
        gbc.setState(0x2cb6, 0xe686, 0x9360, 0xec41, 0x160c, 0x8044, 0x1, 0x1);
        gbc.writeMem(0x2cb6, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xe686);
        EXPECT(gbc.pc(), 0x2cb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0052
        gbc.setState(0xeb97, 0x7889, 0x7b80, 0xf28b, 0xa5bf, 0xaa17, 0x0, 0x0);
        gbc.writeMem(0xeb97, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x7889);
        EXPECT(gbc.pc(), 0xeb98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb97), 0x60);
        // 60 0053
        gbc.setState(0x2c39, 0x4cc9, 0x6be0, 0x36f2, 0xcfc1, 0xab7b, 0x0, 0x0);
        gbc.writeMem(0x2c39, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x4cc9);
        EXPECT(gbc.pc(), 0x2c3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0054
        gbc.setState(0x3978, 0x2b4f, 0x6f30, 0xfba3, 0xcaa8, 0xe17a, 0x0, 0x0);
        gbc.writeMem(0x3978, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x2b4f);
        EXPECT(gbc.pc(), 0x3979);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0055
        gbc.setState(0xcc6, 0xa9ab, 0xd400, 0x2158, 0xac75, 0x7366, 0x0, 0x1);
        gbc.writeMem(0xcc6, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xa9ab);
        EXPECT(gbc.pc(), 0xcc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 0056
        gbc.setState(0x5bbb, 0xb7d7, 0xa680, 0x3dcb, 0x6952, 0x1168, 0x0, 0x0);
        gbc.writeMem(0x5bbb, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xb7d7);
        EXPECT(gbc.pc(), 0x5bbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 0057
        gbc.setState(0x8d0f, 0x7824, 0xb7a0, 0x2b88, 0x7746, 0x774b, 0x1, 0x0);
        gbc.writeMem(0x8d0f, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x7824);
        EXPECT(gbc.pc(), 0x8d10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d0f), 0x60);
        // 60 0058
        gbc.setState(0xd9cf, 0x8995, 0xb4b0, 0xd76f, 0x726f, 0x2e7e, 0x0, 0x0);
        gbc.writeMem(0xd9cf, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x8995);
        EXPECT(gbc.pc(), 0xd9d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9cf), 0x60);
        // 60 0059
        gbc.setState(0xd5a2, 0x836c, 0x8870, 0x9286, 0x1fa3, 0x431c, 0x1, 0x1);
        gbc.writeMem(0xd5a2, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x836c);
        EXPECT(gbc.pc(), 0xd5a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5a2), 0x60);
        // 60 005A
        gbc.setState(0x2964, 0x5ccc, 0xe250, 0x75d0, 0x1b2f, 0xb9e2, 0x0, 0x1);
        gbc.writeMem(0x2964, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x5ccc);
        EXPECT(gbc.pc(), 0x2965);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 005B
        gbc.setState(0x172f, 0x92be, 0xa1d0, 0x615b, 0xbd0e, 0x7f67, 0x1, 0x1);
        gbc.writeMem(0x172f, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x92be);
        EXPECT(gbc.pc(), 0x1730);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 005C
        gbc.setState(0x4b28, 0x86f4, 0xd900, 0x393, 0x5930, 0x2b4c, 0x0, 0x1);
        gbc.writeMem(0x4b28, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x86f4);
        EXPECT(gbc.pc(), 0x4b29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 005D
        gbc.setState(0x95d5, 0x4bf2, 0x2330, 0xfa9a, 0x9cf0, 0xce41, 0x1, 0x0);
        gbc.writeMem(0x95d5, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x4bf2);
        EXPECT(gbc.pc(), 0x95d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95d5), 0x60);
        // 60 005E
        gbc.setState(0x33a8, 0x8afb, 0x7920, 0x29e5, 0xa6dc, 0xe035, 0x0, 0x1);
        gbc.writeMem(0x33a8, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x8afb);
        EXPECT(gbc.pc(), 0x33a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0060
        gbc.setState(0x8393, 0xb9ff, 0x8da0, 0xae2a, 0x9e92, 0x8b7c, 0x0, 0x1);
        gbc.writeMem(0x8393, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xb9ff);
        EXPECT(gbc.pc(), 0x8394);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8393), 0x60);
        // 60 0061
        gbc.setState(0x8016, 0xc724, 0x45c0, 0xcf69, 0x2512, 0x39c7, 0x1, 0x0);
        gbc.writeMem(0x8016, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xc724);
        EXPECT(gbc.pc(), 0x8017);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8016), 0x60);
        // 60 0062
        gbc.setState(0xde5a, 0x5227, 0xa1c0, 0x9855, 0x6c6d, 0x336, 0x0, 0x1);
        gbc.writeMem(0xde5a, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x5227);
        EXPECT(gbc.pc(), 0xde5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde5a), 0x60);
        // 60 0063
        gbc.setState(0xb510, 0x65f2, 0x5290, 0x7fe0, 0xc2fd, 0xecef, 0x0, 0x0);
        gbc.writeMem(0xb510, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x65f2);
        EXPECT(gbc.pc(), 0xb511);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb510), 0x60);
        // 60 0064
        gbc.setState(0x654c, 0xb555, 0x66a0, 0xd08c, 0xa235, 0x6f51, 0x1, 0x1);
        gbc.writeMem(0x654c, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xb555);
        EXPECT(gbc.pc(), 0x654d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0065
        gbc.setState(0xa17, 0x1f31, 0xebb0, 0x7763, 0xbc46, 0xe3c8, 0x1, 0x1);
        gbc.writeMem(0xa17, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x1f31);
        EXPECT(gbc.pc(), 0xa18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0066
        gbc.setState(0x5fe2, 0xd55a, 0xd110, 0x8a85, 0xaf68, 0x7e6b, 0x1, 0x1);
        gbc.writeMem(0x5fe2, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xd55a);
        EXPECT(gbc.pc(), 0x5fe3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 0067
        gbc.setState(0xd8d9, 0x9a28, 0xf140, 0xe3fb, 0x6178, 0x84d, 0x1, 0x0);
        gbc.writeMem(0xd8d9, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x9a28);
        EXPECT(gbc.pc(), 0xd8da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8d9), 0x60);
        // 60 0068
        gbc.setState(0x92d5, 0xeee9, 0xa5b0, 0xa78, 0xf125, 0x31bb, 0x0, 0x1);
        gbc.writeMem(0x92d5, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xeee9);
        EXPECT(gbc.pc(), 0x92d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92d5), 0x60);
        // 60 0069
        gbc.setState(0x856a, 0x1dbc, 0x6f90, 0x65fc, 0x9133, 0xb47b, 0x1, 0x1);
        gbc.writeMem(0x856a, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x1dbc);
        EXPECT(gbc.pc(), 0x856b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x856a), 0x60);
        // 60 006A
        gbc.setState(0x5805, 0x488, 0x31a0, 0xfe4d, 0xe968, 0x6e0d, 0x1, 0x1);
        gbc.writeMem(0x5805, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x488);
        EXPECT(gbc.pc(), 0x5806);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 006B
        gbc.setState(0x2816, 0x7528, 0xe350, 0x52e5, 0x5117, 0xaac2, 0x1, 0x1);
        gbc.writeMem(0x2816, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x7528);
        EXPECT(gbc.pc(), 0x2817);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 006C
        gbc.setState(0xccb, 0x14ea, 0x1530, 0x52df, 0xefc6, 0x4c5c, 0x1, 0x1);
        gbc.writeMem(0xccb, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x14ea);
        EXPECT(gbc.pc(), 0xccc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 006D
        gbc.setState(0x89d3, 0x1b3f, 0x7bc0, 0x1caa, 0xcf6f, 0xc58, 0x1, 0x0);
        gbc.writeMem(0x89d3, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x1b3f);
        EXPECT(gbc.pc(), 0x89d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89d3), 0x60);
        // 60 006E
        gbc.setState(0x2336, 0x1e6a, 0x9040, 0x4340, 0x5fe6, 0xa41a, 0x1, 0x0);
        gbc.writeMem(0x2336, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x1e6a);
        EXPECT(gbc.pc(), 0x2337);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 006F
        gbc.setState(0xe62, 0x6290, 0x4220, 0xe0e0, 0xaaf7, 0x93c4, 0x0, 0x1);
        gbc.writeMem(0xe62, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x6290);
        EXPECT(gbc.pc(), 0xe63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0070
        gbc.setState(0xa02a, 0x550c, 0x4f90, 0xa120, 0x6598, 0x679c, 0x1, 0x1);
        gbc.writeMem(0xa02a, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x550c);
        EXPECT(gbc.pc(), 0xa02b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa02a), 0x60);
        // 60 0071
        gbc.setState(0x7c6a, 0xfeb7, 0x5770, 0xfaee, 0xfad0, 0x1398, 0x1, 0x1);
        gbc.writeMem(0x7c6a, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xfeb7);
        EXPECT(gbc.pc(), 0x7c6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0072
        gbc.setState(0xdb97, 0xe9f5, 0xd00, 0x4735, 0xe0d3, 0x8521, 0x1, 0x0);
        gbc.writeMem(0xdb97, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xe9f5);
        EXPECT(gbc.pc(), 0xdb98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb97), 0x60);
        // 60 0073
        gbc.setState(0x81a4, 0xabe1, 0x4ae0, 0x414e, 0x7526, 0xc55f, 0x1, 0x1);
        gbc.writeMem(0x81a4, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xabe1);
        EXPECT(gbc.pc(), 0x81a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81a4), 0x60);
        // 60 0074
        gbc.setState(0x8db5, 0xd375, 0x27f0, 0x358c, 0x6a1c, 0x7b3a, 0x0, 0x1);
        gbc.writeMem(0x8db5, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xd375);
        EXPECT(gbc.pc(), 0x8db6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8db5), 0x60);
        // 60 0075
        gbc.setState(0x48c4, 0x50e9, 0xdb70, 0x6dc3, 0x8824, 0x292a, 0x1, 0x1);
        gbc.writeMem(0x48c4, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x50e9);
        EXPECT(gbc.pc(), 0x48c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0076
        gbc.setState(0xc313, 0x8a5f, 0x900, 0xe379, 0x273a, 0xd29a, 0x0, 0x1);
        gbc.writeMem(0xc313, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x8a5f);
        EXPECT(gbc.pc(), 0xc314);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc313), 0x60);
        // 60 0077
        gbc.setState(0x5972, 0xc2dd, 0xcb30, 0x5522, 0xa1a3, 0xb274, 0x0, 0x1);
        gbc.writeMem(0x5972, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xc2dd);
        EXPECT(gbc.pc(), 0x5973);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0078
        gbc.setState(0xc694, 0x685b, 0xb910, 0xc69, 0x78cb, 0xd464, 0x1, 0x1);
        gbc.writeMem(0xc694, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x685b);
        EXPECT(gbc.pc(), 0xc695);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc694), 0x60);
        // 60 0079
        gbc.setState(0x9b51, 0x1b01, 0x80b0, 0x7da1, 0xe7da, 0x5b49, 0x0, 0x0);
        gbc.writeMem(0x9b51, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x1b01);
        EXPECT(gbc.pc(), 0x9b52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b51), 0x60);
        // 60 007A
        gbc.setState(0xcc3e, 0x8135, 0xff50, 0x8f9d, 0x4c2f, 0x7042, 0x1, 0x0);
        gbc.writeMem(0xcc3e, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x8135);
        EXPECT(gbc.pc(), 0xcc3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc3e), 0x60);
        // 60 007B
        gbc.setState(0xc8c7, 0x5dc0, 0x1d60, 0x1aa7, 0xeafa, 0x91e, 0x1, 0x0);
        gbc.writeMem(0xc8c7, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x5dc0);
        EXPECT(gbc.pc(), 0xc8c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8c7), 0x60);
        // 60 007C
        gbc.setState(0x26c0, 0xb320, 0x2680, 0xf271, 0x952, 0xe545, 0x1, 0x1);
        gbc.writeMem(0x26c0, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xb320);
        EXPECT(gbc.pc(), 0x26c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 007D
        gbc.setState(0xe76, 0x665c, 0x7c50, 0x1945, 0x1232, 0xc854, 0x0, 0x1);
        gbc.writeMem(0xe76, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x665c);
        EXPECT(gbc.pc(), 0xe77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 007E
        gbc.setState(0x98fa, 0xcc8d, 0x5a0, 0x5e41, 0x321a, 0xd550, 0x0, 0x0);
        gbc.writeMem(0x98fa, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xcc8d);
        EXPECT(gbc.pc(), 0x98fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98fa), 0x60);
        // 60 0080
        gbc.setState(0x8b32, 0x7d00, 0x8450, 0xb9c, 0xc8b7, 0xd3a1, 0x1, 0x0);
        gbc.writeMem(0x8b32, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x7d00);
        EXPECT(gbc.pc(), 0x8b33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b32), 0x60);
        // 60 0081
        gbc.setState(0xaf58, 0xd73, 0x8840, 0x67af, 0xf6a7, 0x5656, 0x0, 0x1);
        gbc.writeMem(0xaf58, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xd73);
        EXPECT(gbc.pc(), 0xaf59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf58), 0x60);
        // 60 0082
        gbc.setState(0x84a0, 0xa0f6, 0xeb00, 0x4949, 0x6df6, 0xe3c5, 0x0, 0x0);
        gbc.writeMem(0x84a0, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xa0f6);
        EXPECT(gbc.pc(), 0x84a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84a0), 0x60);
        // 60 0083
        gbc.setState(0x6df0, 0xc599, 0x8350, 0x3cb4, 0xcbe9, 0xcd71, 0x1, 0x0);
        gbc.writeMem(0x6df0, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xc599);
        EXPECT(gbc.pc(), 0x6df1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 0084
        gbc.setState(0x811a, 0xf545, 0x6490, 0x64d, 0x96af, 0x8fdb, 0x0, 0x1);
        gbc.writeMem(0x811a, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xf545);
        EXPECT(gbc.pc(), 0x811b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x811a), 0x60);
        // 60 0085
        gbc.setState(0x3a15, 0xa123, 0x7500, 0xc2a5, 0xd4ed, 0x69d3, 0x1, 0x1);
        gbc.writeMem(0x3a15, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xa123);
        EXPECT(gbc.pc(), 0x3a16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 0086
        gbc.setState(0xd7ab, 0xbee1, 0xfb40, 0x7330, 0x404e, 0xce82, 0x0, 0x0);
        gbc.writeMem(0xd7ab, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xbee1);
        EXPECT(gbc.pc(), 0xd7ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7ab), 0x60);
        // 60 0087
        gbc.setState(0xec2a, 0x257c, 0x5db0, 0xda6, 0x962f, 0x451a, 0x0, 0x0);
        gbc.writeMem(0xec2a, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x257c);
        EXPECT(gbc.pc(), 0xec2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec2a), 0x60);
        // 60 0088
        gbc.setState(0x7e06, 0x7365, 0xfb40, 0x4017, 0xe532, 0x115c, 0x1, 0x0);
        gbc.writeMem(0x7e06, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x7365);
        EXPECT(gbc.pc(), 0x7e07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 0089
        gbc.setState(0x8fc, 0x11ee, 0x8160, 0xd2e7, 0xb133, 0x8924, 0x0, 0x1);
        gbc.writeMem(0x8fc, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x11ee);
        EXPECT(gbc.pc(), 0x8fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 008A
        gbc.setState(0x6198, 0x288b, 0x2fb0, 0xae9f, 0xabf8, 0xeed8, 0x1, 0x1);
        gbc.writeMem(0x6198, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x288b);
        EXPECT(gbc.pc(), 0x6199);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 008C
        gbc.setState(0x14d7, 0xe01, 0x9c80, 0x3184, 0xd489, 0xc1f9, 0x1, 0x0);
        gbc.writeMem(0x14d7, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xe01);
        EXPECT(gbc.pc(), 0x14d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 008D
        gbc.setState(0x6aa7, 0x549a, 0xe700, 0xd52e, 0x809b, 0xbc54, 0x1, 0x0);
        gbc.writeMem(0x6aa7, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x549a);
        EXPECT(gbc.pc(), 0x6aa8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 008E
        gbc.setState(0x90bf, 0x6007, 0x7cf0, 0xdec0, 0x94a1, 0xd3de, 0x0, 0x1);
        gbc.writeMem(0x90bf, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x6007);
        EXPECT(gbc.pc(), 0x90c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90bf), 0x60);
        // 60 008F
        gbc.setState(0x61e2, 0xb1ef, 0x97f0, 0xeb02, 0xf953, 0x3685, 0x1, 0x0);
        gbc.writeMem(0x61e2, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xb1ef);
        EXPECT(gbc.pc(), 0x61e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0090
        gbc.setState(0xd76f, 0x4b87, 0xa900, 0x40f3, 0x3567, 0x998a, 0x0, 0x0);
        gbc.writeMem(0xd76f, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x4b87);
        EXPECT(gbc.pc(), 0xd770);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd76f), 0x60);
        // 60 0091
        gbc.setState(0x7958, 0xe681, 0x93b0, 0x7868, 0x9f15, 0x3a3a, 0x1, 0x0);
        gbc.writeMem(0x7958, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xe681);
        EXPECT(gbc.pc(), 0x7959);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0092
        gbc.setState(0x499, 0x4b5e, 0x21e0, 0xdc4b, 0x5a33, 0xd4ad, 0x1, 0x1);
        gbc.writeMem(0x499, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x4b5e);
        EXPECT(gbc.pc(), 0x49a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0093
        gbc.setState(0x3a6d, 0x7819, 0x9950, 0x16ed, 0x8bf4, 0xa9fa, 0x0, 0x0);
        gbc.writeMem(0x3a6d, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x7819);
        EXPECT(gbc.pc(), 0x3a6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 0094
        gbc.setState(0xb6f7, 0x8122, 0xd220, 0x78c0, 0xbfcc, 0xcad5, 0x1, 0x1);
        gbc.writeMem(0xb6f7, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x8122);
        EXPECT(gbc.pc(), 0xb6f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6f7), 0x60);
        // 60 0096
        gbc.setState(0x3604, 0x9932, 0xb7c0, 0xf62a, 0xdc3a, 0xa5c4, 0x0, 0x0);
        gbc.writeMem(0x3604, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x9932);
        EXPECT(gbc.pc(), 0x3605);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 0097
        gbc.setState(0x973e, 0xe046, 0x92f0, 0x12d9, 0xea76, 0x2728, 0x1, 0x0);
        gbc.writeMem(0x973e, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xe046);
        EXPECT(gbc.pc(), 0x973f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x973e), 0x60);
        // 60 0098
        gbc.setState(0x599a, 0xf6a5, 0xb930, 0x8763, 0x5545, 0xb3db, 0x0, 0x1);
        gbc.writeMem(0x599a, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xf6a5);
        EXPECT(gbc.pc(), 0x599b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0099
        gbc.setState(0x427a, 0xfdeb, 0x4770, 0x5158, 0x314a, 0x3ff6, 0x1, 0x0);
        gbc.writeMem(0x427a, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xfdeb);
        EXPECT(gbc.pc(), 0x427b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 009A
        gbc.setState(0xeed1, 0xe772, 0x22d0, 0x42f1, 0xa0e1, 0x6dd, 0x0, 0x1);
        gbc.writeMem(0xeed1, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xe772);
        EXPECT(gbc.pc(), 0xeed2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeed1), 0x60);
        // 60 009B
        gbc.setState(0x7b12, 0xb5af, 0xfc80, 0xbc75, 0x9dff, 0x3cdf, 0x0, 0x1);
        gbc.writeMem(0x7b12, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xb5af);
        EXPECT(gbc.pc(), 0x7b13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 009C
        gbc.setState(0x8f9d, 0x10a7, 0x47b0, 0xee6e, 0x41d9, 0x26b2, 0x1, 0x0);
        gbc.writeMem(0x8f9d, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x10a7);
        EXPECT(gbc.pc(), 0x8f9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f9d), 0x60);
        // 60 009D
        gbc.setState(0xb2e7, 0x9bf8, 0x4e80, 0x66bc, 0xff55, 0xcf77, 0x0, 0x1);
        gbc.writeMem(0xb2e7, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x9bf8);
        EXPECT(gbc.pc(), 0xb2e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2e7), 0x60);
        // 60 009E
        gbc.setState(0x7097, 0xe87f, 0x6b90, 0xa670, 0x463a, 0xf501, 0x1, 0x1);
        gbc.writeMem(0x7097, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xe87f);
        EXPECT(gbc.pc(), 0x7098);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 009F
        gbc.setState(0x8887, 0x63f7, 0xe2d0, 0xce98, 0x2d03, 0xff11, 0x0, 0x1);
        gbc.writeMem(0x8887, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x63f7);
        EXPECT(gbc.pc(), 0x8888);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8887), 0x60);
        // 60 00A0
        gbc.setState(0x7176, 0x7b0a, 0x5db0, 0xd33, 0x676f, 0xeea7, 0x1, 0x1);
        gbc.writeMem(0x7176, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x7b0a);
        EXPECT(gbc.pc(), 0x7177);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 00A1
        gbc.setState(0x2fe0, 0x21ae, 0x8010, 0xf166, 0xc154, 0xb228, 0x0, 0x1);
        gbc.writeMem(0x2fe0, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x21ae);
        EXPECT(gbc.pc(), 0x2fe1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 00A2
        gbc.setState(0x28e, 0x85ef, 0xa5c0, 0x29db, 0x9c10, 0x28a6, 0x1, 0x0);
        gbc.writeMem(0x28e, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x85ef);
        EXPECT(gbc.pc(), 0x28f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 00A3
        gbc.setState(0x1077, 0x6fd4, 0xb820, 0xe8f0, 0x5e0f, 0x570a, 0x0, 0x1);
        gbc.writeMem(0x1077, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x6fd4);
        EXPECT(gbc.pc(), 0x1078);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 00A4
        gbc.setState(0x5d74, 0x6fa7, 0xa280, 0x8679, 0x5983, 0x569a, 0x1, 0x0);
        gbc.writeMem(0x5d74, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x6fa7);
        EXPECT(gbc.pc(), 0x5d75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 00A5
        gbc.setState(0x81d2, 0x6755, 0x6410, 0x4f0f, 0xca05, 0xe0e5, 0x1, 0x0);
        gbc.writeMem(0x81d2, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x6755);
        EXPECT(gbc.pc(), 0x81d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81d2), 0x60);
        // 60 00A6
        gbc.setState(0xcd90, 0x5600, 0x2ff0, 0xba3f, 0x4512, 0x9c9f, 0x1, 0x0);
        gbc.writeMem(0xcd90, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x5600);
        EXPECT(gbc.pc(), 0xcd91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd90), 0x60);
        // 60 00A7
        gbc.setState(0xd91c, 0xef32, 0xb7e0, 0x7ece, 0x4aa8, 0x9dac, 0x1, 0x0);
        gbc.writeMem(0xd91c, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xef32);
        EXPECT(gbc.pc(), 0xd91d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd91c), 0x60);
        // 60 00A8
        gbc.setState(0x97f1, 0xdd05, 0x36d0, 0x4a3a, 0xebd4, 0x52c7, 0x0, 0x0);
        gbc.writeMem(0x97f1, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xdd05);
        EXPECT(gbc.pc(), 0x97f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97f1), 0x60);
        // 60 00A9
        gbc.setState(0xc077, 0x4cad, 0xbb0, 0x7582, 0x5f7a, 0xe3bc, 0x1, 0x1);
        gbc.writeMem(0xc077, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x4cad);
        EXPECT(gbc.pc(), 0xc078);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc077), 0x60);
        // 60 00AA
        gbc.setState(0x2111, 0x25cd, 0xcef0, 0x87f7, 0x7c75, 0xf927, 0x1, 0x0);
        gbc.writeMem(0x2111, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x25cd);
        EXPECT(gbc.pc(), 0x2112);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 00AB
        gbc.setState(0x9e6a, 0x1566, 0xf160, 0x8f0d, 0x1769, 0x20d6, 0x1, 0x0);
        gbc.writeMem(0x9e6a, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x1566);
        EXPECT(gbc.pc(), 0x9e6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e6a), 0x60);
        // 60 00AC
        gbc.setState(0x3247, 0x8fd9, 0xec20, 0x433b, 0x8e42, 0x2747, 0x1, 0x0);
        gbc.writeMem(0x3247, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x8fd9);
        EXPECT(gbc.pc(), 0x3248);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 00AD
        gbc.setState(0x91f4, 0x5495, 0x5120, 0xc81b, 0x204d, 0x61ba, 0x0, 0x0);
        gbc.writeMem(0x91f4, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x5495);
        EXPECT(gbc.pc(), 0x91f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91f4), 0x60);
        // 60 00AE
        gbc.setState(0x48b8, 0x5b2e, 0x240, 0x2e8a, 0x96f8, 0xd8b3, 0x0, 0x0);
        gbc.writeMem(0x48b8, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x5b2e);
        EXPECT(gbc.pc(), 0x48b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 00AF
        gbc.setState(0x5d18, 0x29ba, 0xc980, 0xd2e4, 0xe5bb, 0xfe42, 0x1, 0x1);
        gbc.writeMem(0x5d18, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x29ba);
        EXPECT(gbc.pc(), 0x5d19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 00B0
        gbc.setState(0xaa76, 0x1a56, 0x6970, 0x894c, 0x5bb7, 0xaf60, 0x1, 0x0);
        gbc.writeMem(0xaa76, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x1a56);
        EXPECT(gbc.pc(), 0xaa77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa76), 0x60);
        // 60 00B1
        gbc.setState(0xb8f7, 0xb02a, 0x24d0, 0x615b, 0xcb3b, 0x1d9f, 0x1, 0x0);
        gbc.writeMem(0xb8f7, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xb02a);
        EXPECT(gbc.pc(), 0xb8f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8f7), 0x60);
        // 60 00B2
        gbc.setState(0x7dea, 0xa22b, 0xa7c0, 0x5dd3, 0x7530, 0xcf76, 0x0, 0x0);
        gbc.writeMem(0x7dea, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xa22b);
        EXPECT(gbc.pc(), 0x7deb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 00B3
        gbc.setState(0xaa, 0x3901, 0x79c0, 0x50a0, 0x3b30, 0xb8e0, 0x1, 0x1);
        gbc.writeMem(0xaa, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x3901);
        EXPECT(gbc.pc(), 0xab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 00B4
        gbc.setState(0x907b, 0xd48b, 0x9140, 0xe1ba, 0xf0dc, 0x18d0, 0x0, 0x0);
        gbc.writeMem(0x907b, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xd48b);
        EXPECT(gbc.pc(), 0x907c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x907b), 0x60);
        // 60 00B5
        gbc.setState(0xc6f4, 0x6b9a, 0x5200, 0x8b32, 0x2cb0, 0xa95, 0x1, 0x0);
        gbc.writeMem(0xc6f4, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x6b9a);
        EXPECT(gbc.pc(), 0xc6f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6f4), 0x60);
        // 60 00B6
        gbc.setState(0x82b8, 0xa645, 0x6030, 0x7ae7, 0x7209, 0xf1c2, 0x0, 0x0);
        gbc.writeMem(0x82b8, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xa645);
        EXPECT(gbc.pc(), 0x82b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82b8), 0x60);
        // 60 00B7
        gbc.setState(0xa7, 0x679d, 0x9940, 0xd16e, 0x481a, 0x5529, 0x0, 0x0);
        gbc.writeMem(0xa7, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x679d);
        EXPECT(gbc.pc(), 0xa8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 00B8
        gbc.setState(0xbebf, 0x8f54, 0x9b90, 0xfcc9, 0xa55b, 0xeea9, 0x1, 0x0);
        gbc.writeMem(0xbebf, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x8f54);
        EXPECT(gbc.pc(), 0xbec0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbebf), 0x60);
        // 60 00B9
        gbc.setState(0x9474, 0x3ac4, 0x5900, 0x8bfb, 0xe8ef, 0xfd0b, 0x1, 0x0);
        gbc.writeMem(0x9474, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x3ac4);
        EXPECT(gbc.pc(), 0x9475);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9474), 0x60);
        // 60 00BA
        gbc.setState(0x333, 0xcea8, 0xec00, 0xaa3f, 0x9b61, 0x447a, 0x0, 0x0);
        gbc.writeMem(0x333, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xcea8);
        EXPECT(gbc.pc(), 0x334);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 00BB
        gbc.setState(0x9064, 0xa895, 0xc660, 0xace4, 0x791, 0x4ce4, 0x1, 0x0);
        gbc.writeMem(0x9064, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xa895);
        EXPECT(gbc.pc(), 0x9065);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9064), 0x60);
        // 60 00BC
        gbc.setState(0x176e, 0x4deb, 0x34f0, 0x20d2, 0x110c, 0xfe48, 0x0, 0x0);
        gbc.writeMem(0x176e, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x4deb);
        EXPECT(gbc.pc(), 0x176f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 00BD
        gbc.setState(0x8350, 0xb35b, 0x9d60, 0xd7b3, 0x644, 0x9348, 0x0, 0x1);
        gbc.writeMem(0x8350, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xb35b);
        EXPECT(gbc.pc(), 0x8351);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8350), 0x60);
        // 60 00BE
        gbc.setState(0x5de3, 0x81e3, 0xde10, 0xac62, 0x3632, 0xa29d, 0x1, 0x1);
        gbc.writeMem(0x5de3, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x81e3);
        EXPECT(gbc.pc(), 0x5de4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 00BF
        gbc.setState(0x6bdc, 0x7b6b, 0x6ca0, 0xb702, 0x9437, 0xfd94, 0x1, 0x1);
        gbc.writeMem(0x6bdc, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x7b6b);
        EXPECT(gbc.pc(), 0x6bdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 00C0
        gbc.setState(0x8729, 0x7aea, 0xe470, 0x5db0, 0xa284, 0x9eac, 0x1, 0x0);
        gbc.writeMem(0x8729, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x7aea);
        EXPECT(gbc.pc(), 0x872a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8729), 0x60);
        // 60 00C1
        gbc.setState(0xe8bf, 0xd2e7, 0x7940, 0x9e5f, 0xcc8f, 0xd22e, 0x1, 0x1);
        gbc.writeMem(0xe8bf, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xd2e7);
        EXPECT(gbc.pc(), 0xe8c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8bf), 0x60);
        // 60 00C3
        gbc.setState(0x94ce, 0xabd, 0x99c0, 0x4942, 0xd51f, 0x6609, 0x0, 0x1);
        gbc.writeMem(0x94ce, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xabd);
        EXPECT(gbc.pc(), 0x94cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94ce), 0x60);
        // 60 00C4
        gbc.setState(0x192d, 0x30d8, 0xbbd0, 0xb7d7, 0xf3d7, 0xb492, 0x1, 0x0);
        gbc.writeMem(0x192d, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x30d8);
        EXPECT(gbc.pc(), 0x192e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 00C5
        gbc.setState(0x3f0f, 0x2005, 0x7b80, 0xa97f, 0x90fa, 0xa02d, 0x1, 0x1);
        gbc.writeMem(0x3f0f, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x2005);
        EXPECT(gbc.pc(), 0x3f10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 00C6
        gbc.setState(0xa821, 0x16b7, 0xc730, 0x4068, 0x66da, 0xe34f, 0x0, 0x0);
        gbc.writeMem(0xa821, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x16b7);
        EXPECT(gbc.pc(), 0xa822);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa821), 0x60);
        // 60 00C7
        gbc.setState(0x4bef, 0xe646, 0xd150, 0xf6f2, 0xe318, 0xb57b, 0x0, 0x0);
        gbc.writeMem(0x4bef, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xe646);
        EXPECT(gbc.pc(), 0x4bf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 00C8
        gbc.setState(0x88e7, 0x878f, 0xa030, 0x606a, 0x1b59, 0x3fd2, 0x1, 0x1);
        gbc.writeMem(0x88e7, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x878f);
        EXPECT(gbc.pc(), 0x88e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88e7), 0x60);
        // 60 00C9
        gbc.setState(0x64a8, 0xca8b, 0x4400, 0x8978, 0xffe, 0x9451, 0x0, 0x0);
        gbc.writeMem(0x64a8, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xca8b);
        EXPECT(gbc.pc(), 0x64a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 00CA
        gbc.setState(0x3892, 0xf094, 0xca50, 0xf3b3, 0x6295, 0xb4df, 0x0, 0x0);
        gbc.writeMem(0x3892, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xf094);
        EXPECT(gbc.pc(), 0x3893);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 00CB
        gbc.setState(0x725e, 0x68b, 0x6e70, 0x277d, 0xfc95, 0x2b60, 0x0, 0x0);
        gbc.writeMem(0x725e, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x68b);
        EXPECT(gbc.pc(), 0x725f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 00CC
        gbc.setState(0xeb15, 0x80e, 0x8180, 0xc621, 0x16be, 0x58e7, 0x1, 0x0);
        gbc.writeMem(0xeb15, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x80e);
        EXPECT(gbc.pc(), 0xeb16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb15), 0x60);
        // 60 00CD
        gbc.setState(0x8739, 0x2d8c, 0x9c90, 0xc942, 0x9915, 0xbf4e, 0x1, 0x0);
        gbc.writeMem(0x8739, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x2d8c);
        EXPECT(gbc.pc(), 0x873a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8739), 0x60);
        // 60 00CE
        gbc.setState(0xd858, 0x98d6, 0x32f0, 0x25d0, 0x7716, 0x91f4, 0x1, 0x1);
        gbc.writeMem(0xd858, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x98d6);
        EXPECT(gbc.pc(), 0xd859);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd858), 0x60);
        // 60 00CF
        gbc.setState(0xd10c, 0x648b, 0x90d0, 0x348d, 0xb8ca, 0x57ee, 0x1, 0x0);
        gbc.writeMem(0xd10c, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x648b);
        EXPECT(gbc.pc(), 0xd10d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd10c), 0x60);
        // 60 00D0
        gbc.setState(0x2363, 0x1af6, 0xbc80, 0x4c6c, 0xa437, 0xb940, 0x0, 0x0);
        gbc.writeMem(0x2363, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x1af6);
        EXPECT(gbc.pc(), 0x2364);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 00D1
        gbc.setState(0x3e07, 0xbfc6, 0x5ab0, 0xd28e, 0xb680, 0xae0e, 0x0, 0x1);
        gbc.writeMem(0x3e07, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xbfc6);
        EXPECT(gbc.pc(), 0x3e08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 00D3
        gbc.setState(0x9a59, 0x8186, 0x5fa0, 0x262e, 0x2618, 0xfe8a, 0x0, 0x0);
        gbc.writeMem(0x9a59, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x8186);
        EXPECT(gbc.pc(), 0x9a5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a59), 0x60);
        // 60 00D4
        gbc.setState(0x753d, 0xf32b, 0xf570, 0x9be8, 0xc794, 0xb3fd, 0x0, 0x0);
        gbc.writeMem(0x753d, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xf32b);
        EXPECT(gbc.pc(), 0x753e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 00D5
        gbc.setState(0x24e3, 0xebb0, 0xc910, 0xd403, 0xb545, 0xb68a, 0x1, 0x1);
        gbc.writeMem(0x24e3, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xebb0);
        EXPECT(gbc.pc(), 0x24e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 00D6
        gbc.setState(0xe18f, 0xd748, 0x6ba0, 0xde89, 0x2e31, 0x6715, 0x1, 0x0);
        gbc.writeMem(0xe18f, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xd748);
        EXPECT(gbc.pc(), 0xe190);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe18f), 0x60);
        // 60 00D7
        gbc.setState(0x3b14, 0x1d64, 0xc620, 0x3b50, 0x9ee0, 0xaca4, 0x0, 0x0);
        gbc.writeMem(0x3b14, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x1d64);
        EXPECT(gbc.pc(), 0x3b15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 00D8
        gbc.setState(0x58a6, 0x3ecf, 0xf790, 0x9a09, 0x2589, 0xad68, 0x1, 0x1);
        gbc.writeMem(0x58a6, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x3ecf);
        EXPECT(gbc.pc(), 0x58a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 00D9
        gbc.setState(0x79b1, 0xb2b8, 0x2f80, 0x5504, 0xfd9e, 0x7c8b, 0x1, 0x1);
        gbc.writeMem(0x79b1, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xb2b8);
        EXPECT(gbc.pc(), 0x79b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 00DA
        gbc.setState(0x75f7, 0xe42e, 0xe90, 0x8aef, 0xcdbd, 0x8054, 0x0, 0x0);
        gbc.writeMem(0x75f7, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xe42e);
        EXPECT(gbc.pc(), 0x75f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 00DB
        gbc.setState(0x7dbe, 0xf2b3, 0xb740, 0xa340, 0x9f97, 0x6245, 0x0, 0x1);
        gbc.writeMem(0x7dbe, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xf2b3);
        EXPECT(gbc.pc(), 0x7dbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 00DC
        gbc.setState(0x3677, 0xecc8, 0xd830, 0xe23, 0x2563, 0x761b, 0x1, 0x1);
        gbc.writeMem(0x3677, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xecc8);
        EXPECT(gbc.pc(), 0x3678);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 00DD
        gbc.setState(0x1886, 0x1cb8, 0x2e90, 0xe101, 0x407, 0xc1f5, 0x1, 0x0);
        gbc.writeMem(0x1886, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x1cb8);
        EXPECT(gbc.pc(), 0x1887);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 00DE
        gbc.setState(0x1f9c, 0xb4ec, 0x39b0, 0x9d15, 0x269, 0x5a94, 0x0, 0x1);
        gbc.writeMem(0x1f9c, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xb4ec);
        EXPECT(gbc.pc(), 0x1f9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 00DF
        gbc.setState(0xa48a, 0xf959, 0xce90, 0x9b32, 0xad4a, 0x4cf9, 0x0, 0x0);
        gbc.writeMem(0xa48a, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xf959);
        EXPECT(gbc.pc(), 0xa48b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa48a), 0x60);
        // 60 00E0
        gbc.setState(0xc5fb, 0xcfba, 0x6580, 0x50d2, 0x3373, 0xe004, 0x0, 0x1);
        gbc.writeMem(0xc5fb, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xcfba);
        EXPECT(gbc.pc(), 0xc5fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5fb), 0x60);
        // 60 00E1
        gbc.setState(0x6899, 0x12b8, 0xc30, 0xb73d, 0x4192, 0x3eda, 0x0, 0x1);
        gbc.writeMem(0x6899, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x12b8);
        EXPECT(gbc.pc(), 0x689a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 00E2
        gbc.setState(0xb7dd, 0x6010, 0x7240, 0x9e0a, 0x11b5, 0x87ca, 0x1, 0x1);
        gbc.writeMem(0xb7dd, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x6010);
        EXPECT(gbc.pc(), 0xb7de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7dd), 0x60);
        // 60 00E3
        gbc.setState(0x3a41, 0x860e, 0xdff0, 0x6a29, 0xadb5, 0x525, 0x0, 0x1);
        gbc.writeMem(0x3a41, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x860e);
        EXPECT(gbc.pc(), 0x3a42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 00E4
        gbc.setState(0x8b7c, 0xc142, 0x2ae0, 0x7faa, 0xe79b, 0x5351, 0x0, 0x0);
        gbc.writeMem(0x8b7c, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xc142);
        EXPECT(gbc.pc(), 0x8b7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b7c), 0x60);
        // 60 00E5
        gbc.setState(0xd581, 0x4579, 0x1c60, 0x74eb, 0x4613, 0xa00d, 0x0, 0x0);
        gbc.writeMem(0xd581, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x4579);
        EXPECT(gbc.pc(), 0xd582);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd581), 0x60);
        // 60 00E6
        gbc.setState(0x91f, 0x9d4f, 0xdc00, 0xef6d, 0x6b53, 0x3ca5, 0x1, 0x1);
        gbc.writeMem(0x91f, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x9d4f);
        EXPECT(gbc.pc(), 0x920);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 00E7
        gbc.setState(0xc9dd, 0x6717, 0xd4e0, 0x433c, 0x54be, 0xb43a, 0x0, 0x0);
        gbc.writeMem(0xc9dd, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x6717);
        EXPECT(gbc.pc(), 0xc9de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9dd), 0x60);
        // 60 00E8
        gbc.setState(0x3580, 0xa29a, 0x78a0, 0x1cd8, 0xea15, 0x308e, 0x0, 0x0);
        gbc.writeMem(0x3580, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xa29a);
        EXPECT(gbc.pc(), 0x3581);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 00E9
        gbc.setState(0xef0f, 0xb93b, 0x3730, 0x4507, 0xc859, 0x1d1f, 0x0, 0x0);
        gbc.writeMem(0xef0f, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xb93b);
        EXPECT(gbc.pc(), 0xef10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef0f), 0x60);
        // 60 00EA
        gbc.setState(0x8fbe, 0x4d58, 0xee40, 0x4808, 0xecb3, 0xd8cb, 0x0, 0x0);
        gbc.writeMem(0x8fbe, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x4d58);
        EXPECT(gbc.pc(), 0x8fbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fbe), 0x60);
        // 60 00EB
        gbc.setState(0xb935, 0x2cdb, 0x34f0, 0x7d5c, 0x7876, 0x81e6, 0x0, 0x0);
        gbc.writeMem(0xb935, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x2cdb);
        EXPECT(gbc.pc(), 0xb936);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb935), 0x60);
        // 60 00EC
        gbc.setState(0x6a5, 0x2b4f, 0x8df0, 0xdcff, 0xc349, 0x3f67, 0x0, 0x1);
        gbc.writeMem(0x6a5, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x2b4f);
        EXPECT(gbc.pc(), 0x6a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 00ED
        gbc.setState(0xe83b, 0x7131, 0x7e50, 0x12c8, 0xc9f7, 0xc74b, 0x0, 0x1);
        gbc.writeMem(0xe83b, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x7131);
        EXPECT(gbc.pc(), 0xe83c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe83b), 0x60);
        // 60 00EE
        gbc.setState(0x4762, 0x2a21, 0x72f0, 0xd473, 0xe68c, 0x3241, 0x1, 0x0);
        gbc.writeMem(0x4762, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x2a21);
        EXPECT(gbc.pc(), 0x4763);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 00EF
        gbc.setState(0x3337, 0x9e02, 0x4fd0, 0x6a50, 0x888, 0x4cd3, 0x1, 0x1);
        gbc.writeMem(0x3337, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x9e02);
        EXPECT(gbc.pc(), 0x3338);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 00F0
        gbc.setState(0xa00b, 0xc0a1, 0x5fd0, 0x14c8, 0x161f, 0x6e4c, 0x1, 0x1);
        gbc.writeMem(0xa00b, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xc0a1);
        EXPECT(gbc.pc(), 0xa00c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa00b), 0x60);
        // 60 00F1
        gbc.setState(0x734, 0x3295, 0xab80, 0x71c8, 0xa764, 0x4a9, 0x0, 0x1);
        gbc.writeMem(0x734, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x3295);
        EXPECT(gbc.pc(), 0x735);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 00F2
        gbc.setState(0x190b, 0xba02, 0x8da0, 0xa715, 0xf90e, 0x6320, 0x1, 0x1);
        gbc.writeMem(0x190b, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xba02);
        EXPECT(gbc.pc(), 0x190c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 00F3
        gbc.setState(0x259e, 0xa3e7, 0xf240, 0xd0c6, 0xf097, 0x3e7a, 0x1, 0x0);
        gbc.writeMem(0x259e, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xa3e7);
        EXPECT(gbc.pc(), 0x259f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 00F4
        gbc.setState(0xc181, 0x307c, 0x7860, 0x9170, 0xc6f2, 0xaf35, 0x0, 0x1);
        gbc.writeMem(0xc181, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x307c);
        EXPECT(gbc.pc(), 0xc182);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc181), 0x60);
        // 60 00F5
        gbc.setState(0x90c4, 0x9832, 0xe040, 0x9218, 0x8d8d, 0x8b35, 0x1, 0x0);
        gbc.writeMem(0x90c4, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x9832);
        EXPECT(gbc.pc(), 0x90c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90c4), 0x60);
        // 60 00F6
        gbc.setState(0x2e5b, 0x8d27, 0xdc80, 0x2483, 0x5853, 0xb2ec, 0x0, 0x1);
        gbc.writeMem(0x2e5b, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x8d27);
        EXPECT(gbc.pc(), 0x2e5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 00F7
        gbc.setState(0xd961, 0xb6ce, 0x8240, 0xb168, 0x2613, 0x8488, 0x1, 0x1);
        gbc.writeMem(0xd961, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xb6ce);
        EXPECT(gbc.pc(), 0xd962);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd961), 0x60);
        // 60 00F8
        gbc.setState(0x2bc1, 0x7d49, 0x6940, 0xb254, 0xb0f5, 0x5209, 0x1, 0x1);
        gbc.writeMem(0x2bc1, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x7d49);
        EXPECT(gbc.pc(), 0x2bc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 00F9
        gbc.setState(0xab47, 0x182, 0x6590, 0x63a4, 0xc9e4, 0x8de, 0x0, 0x1);
        gbc.writeMem(0xab47, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x182);
        EXPECT(gbc.pc(), 0xab48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab47), 0x60);
        // 60 00FA
        gbc.setState(0x973b, 0xeebf, 0xd200, 0x3a78, 0x9c, 0xe1b4, 0x1, 0x0);
        gbc.writeMem(0x973b, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xeebf);
        EXPECT(gbc.pc(), 0x973c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x973b), 0x60);
        // 60 00FB
        gbc.setState(0x89d7, 0xee8e, 0x7f30, 0xff77, 0xcc84, 0x25fc, 0x1, 0x0);
        gbc.writeMem(0x89d7, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xee8e);
        EXPECT(gbc.pc(), 0x89d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89d7), 0x60);
        // 60 00FC
        gbc.setState(0x354c, 0x612e, 0x8980, 0xa1e9, 0x1ae8, 0x2afa, 0x0, 0x0);
        gbc.writeMem(0x354c, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x612e);
        EXPECT(gbc.pc(), 0x354d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 00FD
        gbc.setState(0x8e93, 0x7378, 0xbc0, 0x216b, 0x94b6, 0xb8b2, 0x0, 0x1);
        gbc.writeMem(0x8e93, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x7378);
        EXPECT(gbc.pc(), 0x8e94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e93), 0x60);
        // 60 00FE
        gbc.setState(0xa90, 0xd0bf, 0x7360, 0x380, 0x4d99, 0x3dd6, 0x0, 0x1);
        gbc.writeMem(0xa90, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xd0bf);
        EXPECT(gbc.pc(), 0xa91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 00FF
        gbc.setState(0x564a, 0xae5e, 0x9f90, 0x40c6, 0x3782, 0xc64b, 0x0, 0x0);
        gbc.writeMem(0x564a, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xae5e);
        EXPECT(gbc.pc(), 0x564b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 0100
        gbc.setState(0x6df7, 0x65b7, 0x5e70, 0x402a, 0x7287, 0xe9a3, 0x0, 0x1);
        gbc.writeMem(0x6df7, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x65b7);
        EXPECT(gbc.pc(), 0x6df8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0101
        gbc.setState(0x599d, 0x515d, 0x3cb0, 0x471f, 0x4290, 0x375e, 0x1, 0x1);
        gbc.writeMem(0x599d, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x515d);
        EXPECT(gbc.pc(), 0x599e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0102
        gbc.setState(0x1db2, 0x38a7, 0x7ae0, 0xc5c2, 0x7a67, 0x5e0f, 0x0, 0x0);
        gbc.writeMem(0x1db2, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x38a7);
        EXPECT(gbc.pc(), 0x1db3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0103
        gbc.setState(0x315a, 0x52a1, 0x2a30, 0x8ae3, 0xd676, 0x7010, 0x1, 0x0);
        gbc.writeMem(0x315a, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x52a1);
        EXPECT(gbc.pc(), 0x315b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0105
        gbc.setState(0xab34, 0x656a, 0xabd0, 0xaf6b, 0xc19a, 0x1e42, 0x1, 0x1);
        gbc.writeMem(0xab34, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x656a);
        EXPECT(gbc.pc(), 0xab35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab34), 0x60);
        // 60 0106
        gbc.setState(0xa741, 0x3849, 0xc280, 0x5d59, 0x69a9, 0x985a, 0x0, 0x1);
        gbc.writeMem(0xa741, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x3849);
        EXPECT(gbc.pc(), 0xa742);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa741), 0x60);
        // 60 0107
        gbc.setState(0xadac, 0x8773, 0x7700, 0xedf4, 0xb5dd, 0x424b, 0x1, 0x1);
        gbc.writeMem(0xadac, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x8773);
        EXPECT(gbc.pc(), 0xadad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadac), 0x60);
        // 60 0108
        gbc.setState(0x7239, 0x6966, 0x38e0, 0x8df7, 0xc1a2, 0x766, 0x0, 0x0);
        gbc.writeMem(0x7239, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x6966);
        EXPECT(gbc.pc(), 0x723a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0109
        gbc.setState(0x7c47, 0xe0c3, 0xd760, 0x74f3, 0x1d4a, 0x7a48, 0x1, 0x0);
        gbc.writeMem(0x7c47, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xe0c3);
        EXPECT(gbc.pc(), 0x7c48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 010A
        gbc.setState(0x4634, 0xe035, 0xc780, 0x8439, 0x3be6, 0x2323, 0x1, 0x0);
        gbc.writeMem(0x4634, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xe035);
        EXPECT(gbc.pc(), 0x4635);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 010B
        gbc.setState(0xad00, 0x135f, 0xd000, 0xa342, 0x5b4b, 0xafd1, 0x0, 0x1);
        gbc.writeMem(0xad00, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x135f);
        EXPECT(gbc.pc(), 0xad01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad00), 0x60);
        // 60 010C
        gbc.setState(0xdfbe, 0x4cd4, 0x22d0, 0x343e, 0x5166, 0x4e0, 0x0, 0x0);
        gbc.writeMem(0xdfbe, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x4cd4);
        EXPECT(gbc.pc(), 0xdfbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfbe), 0x60);
        // 60 010D
        gbc.setState(0xcdee, 0x34da, 0x4620, 0x8ed, 0xd50b, 0x1ef0, 0x1, 0x0);
        gbc.writeMem(0xcdee, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x34da);
        EXPECT(gbc.pc(), 0xcdef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdee), 0x60);
        // 60 010E
        gbc.setState(0xd92c, 0x720, 0xb5f0, 0x12f6, 0x9b02, 0x1497, 0x1, 0x1);
        gbc.writeMem(0xd92c, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x720);
        EXPECT(gbc.pc(), 0xd92d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd92c), 0x60);
        // 60 010F
        gbc.setState(0x16a2, 0x82a1, 0x9a30, 0xf331, 0x9f52, 0x743d, 0x1, 0x0);
        gbc.writeMem(0x16a2, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x82a1);
        EXPECT(gbc.pc(), 0x16a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0111
        gbc.setState(0x9eed, 0x311c, 0xce00, 0x3656, 0x5095, 0xabc7, 0x1, 0x1);
        gbc.writeMem(0x9eed, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x311c);
        EXPECT(gbc.pc(), 0x9eee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9eed), 0x60);
        // 60 0112
        gbc.setState(0x317d, 0x2362, 0xfe60, 0x16b7, 0x6b13, 0xf63b, 0x0, 0x1);
        gbc.writeMem(0x317d, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x2362);
        EXPECT(gbc.pc(), 0x317e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0113
        gbc.setState(0x456c, 0xf52d, 0xe170, 0xfa3c, 0xdd80, 0xe21e, 0x1, 0x0);
        gbc.writeMem(0x456c, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xf52d);
        EXPECT(gbc.pc(), 0x456d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0114
        gbc.setState(0x353b, 0xf3f8, 0x7b20, 0x5443, 0x4a8a, 0x1bb9, 0x0, 0x0);
        gbc.writeMem(0x353b, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xf3f8);
        EXPECT(gbc.pc(), 0x353c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0115
        gbc.setState(0x19ef, 0x417f, 0xaa90, 0x9df1, 0x44d6, 0x155d, 0x0, 0x0);
        gbc.writeMem(0x19ef, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x417f);
        EXPECT(gbc.pc(), 0x19f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 0116
        gbc.setState(0x73ec, 0xf372, 0x42b0, 0xd889, 0x528e, 0xa56b, 0x1, 0x0);
        gbc.writeMem(0x73ec, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xf372);
        EXPECT(gbc.pc(), 0x73ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0117
        gbc.setState(0xb717, 0xb093, 0x4ee0, 0xd2a2, 0x8516, 0x5009, 0x0, 0x1);
        gbc.writeMem(0xb717, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xb093);
        EXPECT(gbc.pc(), 0xb718);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb717), 0x60);
        // 60 0118
        gbc.setState(0x8998, 0xaed0, 0x7550, 0xb954, 0x45bc, 0x3325, 0x0, 0x0);
        gbc.writeMem(0x8998, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xaed0);
        EXPECT(gbc.pc(), 0x8999);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8998), 0x60);
        // 60 0119
        gbc.setState(0xcdd, 0x3a32, 0xef90, 0x7957, 0xbad2, 0x3e6c, 0x1, 0x0);
        gbc.writeMem(0xcdd, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x3a32);
        EXPECT(gbc.pc(), 0xcde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 011A
        gbc.setState(0x9fdf, 0x7d71, 0xc70, 0x3d3f, 0x7af2, 0x1913, 0x0, 0x0);
        gbc.writeMem(0x9fdf, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x7d71);
        EXPECT(gbc.pc(), 0x9fe0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fdf), 0x60);
        // 60 011B
        gbc.setState(0x123f, 0x2c04, 0xd250, 0x1f23, 0xd49f, 0x6b9c, 0x1, 0x1);
        gbc.writeMem(0x123f, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x2c04);
        EXPECT(gbc.pc(), 0x1240);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 011C
        gbc.setState(0xa2f9, 0x7d47, 0xe850, 0xa13d, 0x4512, 0xd8af, 0x1, 0x1);
        gbc.writeMem(0xa2f9, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x7d47);
        EXPECT(gbc.pc(), 0xa2fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2f9), 0x60);
        // 60 011D
        gbc.setState(0x8fa3, 0x508d, 0xb5b0, 0xb3c4, 0xcd2e, 0xc52e, 0x1, 0x0);
        gbc.writeMem(0x8fa3, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x508d);
        EXPECT(gbc.pc(), 0x8fa4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fa3), 0x60);
        // 60 011E
        gbc.setState(0x9a7a, 0x575d, 0x8c0, 0xadd9, 0x8000, 0xfad4, 0x0, 0x1);
        gbc.writeMem(0x9a7a, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x575d);
        EXPECT(gbc.pc(), 0x9a7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a7a), 0x60);
        // 60 011F
        gbc.setState(0x5fe9, 0x2a4, 0x1de0, 0x6d83, 0x2aa6, 0x70e0, 0x1, 0x1);
        gbc.writeMem(0x5fe9, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x2a4);
        EXPECT(gbc.pc(), 0x5fea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0120
        gbc.setState(0xb771, 0x111a, 0x8900, 0x9852, 0xe8a6, 0xbad8, 0x0, 0x0);
        gbc.writeMem(0xb771, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x111a);
        EXPECT(gbc.pc(), 0xb772);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb771), 0x60);
        // 60 0122
        gbc.setState(0x5fe, 0x4c6b, 0x1150, 0x4441, 0xb2e0, 0x6cc3, 0x1, 0x0);
        gbc.writeMem(0x5fe, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x4c6b);
        EXPECT(gbc.pc(), 0x5ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 0123
        gbc.setState(0x2c30, 0xd355, 0x3ae0, 0xf29b, 0x7da9, 0x51e0, 0x0, 0x1);
        gbc.writeMem(0x2c30, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xd355);
        EXPECT(gbc.pc(), 0x2c31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0124
        gbc.setState(0x563, 0x6eff, 0x4540, 0x44d2, 0x1381, 0xe216, 0x1, 0x0);
        gbc.writeMem(0x563, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x6eff);
        EXPECT(gbc.pc(), 0x564);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 0125
        gbc.setState(0x4bac, 0xdd77, 0xdc80, 0x6d42, 0x966, 0x445f, 0x0, 0x0);
        gbc.writeMem(0x4bac, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xdd77);
        EXPECT(gbc.pc(), 0x4bad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 0126
        gbc.setState(0x1bcb, 0x3030, 0xca60, 0x60ab, 0x70e4, 0xb457, 0x0, 0x1);
        gbc.writeMem(0x1bcb, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x3030);
        EXPECT(gbc.pc(), 0x1bcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0127
        gbc.setState(0x582e, 0x510, 0xf360, 0x954d, 0x21f2, 0xd209, 0x1, 0x1);
        gbc.writeMem(0x582e, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x510);
        EXPECT(gbc.pc(), 0x582f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0128
        gbc.setState(0x30d7, 0x4b63, 0x3d40, 0x4526, 0xd202, 0xe7db, 0x1, 0x0);
        gbc.writeMem(0x30d7, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x4b63);
        EXPECT(gbc.pc(), 0x30d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 0129
        gbc.setState(0xbe5, 0xa76b, 0x65b0, 0xa0aa, 0xa064, 0x762e, 0x1, 0x1);
        gbc.writeMem(0xbe5, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xa76b);
        EXPECT(gbc.pc(), 0xbe6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 012A
        gbc.setState(0xbb8, 0xf800, 0xcbb0, 0xd764, 0xcab, 0xda1f, 0x1, 0x0);
        gbc.writeMem(0xbb8, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xf800);
        EXPECT(gbc.pc(), 0xbb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 012B
        gbc.setState(0xa5ad, 0x6e9, 0xb090, 0x5fd4, 0x8de4, 0xa954, 0x1, 0x0);
        gbc.writeMem(0xa5ad, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x6e9);
        EXPECT(gbc.pc(), 0xa5ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5ad), 0x60);
        // 60 012C
        gbc.setState(0x2f87, 0xa448, 0x9730, 0xb4c, 0xcf4d, 0x3381, 0x1, 0x1);
        gbc.writeMem(0x2f87, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xa448);
        EXPECT(gbc.pc(), 0x2f88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 012D
        gbc.setState(0xab7e, 0x76cf, 0x2d0, 0x4de1, 0xb0e6, 0x52b5, 0x1, 0x1);
        gbc.writeMem(0xab7e, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x76cf);
        EXPECT(gbc.pc(), 0xab7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab7e), 0x60);
        // 60 012E
        gbc.setState(0x5500, 0x2873, 0xed50, 0xbfc7, 0x7b7, 0xece8, 0x0, 0x1);
        gbc.writeMem(0x5500, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x2873);
        EXPECT(gbc.pc(), 0x5501);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 012F
        gbc.setState(0x3685, 0xf5e9, 0x5ea0, 0x5fa2, 0xa4d2, 0xf8a2, 0x1, 0x0);
        gbc.writeMem(0x3685, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xf5e9);
        EXPECT(gbc.pc(), 0x3686);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0130
        gbc.setState(0xd9e3, 0xa6bd, 0xe650, 0xca06, 0x88f, 0x45c, 0x0, 0x0);
        gbc.writeMem(0xd9e3, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xa6bd);
        EXPECT(gbc.pc(), 0xd9e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9e3), 0x60);
        // 60 0131
        gbc.setState(0x6964, 0xb051, 0xdb20, 0x8c5, 0x6f0e, 0x743a, 0x0, 0x0);
        gbc.writeMem(0x6964, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xb051);
        EXPECT(gbc.pc(), 0x6965);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0133
        gbc.setState(0x16d4, 0x9497, 0x6a20, 0x29c4, 0x1436, 0x2e5d, 0x1, 0x1);
        gbc.writeMem(0x16d4, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x9497);
        EXPECT(gbc.pc(), 0x16d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0134
        gbc.setState(0x122a, 0x762f, 0xc710, 0x3e2d, 0x747, 0x51d5, 0x0, 0x1);
        gbc.writeMem(0x122a, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x762f);
        EXPECT(gbc.pc(), 0x122b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 0135
        gbc.setState(0x3ab2, 0xa56c, 0x1ef0, 0x3975, 0x9895, 0xa070, 0x1, 0x0);
        gbc.writeMem(0x3ab2, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xa56c);
        EXPECT(gbc.pc(), 0x3ab3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0136
        gbc.setState(0x1d81, 0x93a9, 0x59a0, 0x7abb, 0xb11a, 0xb3f5, 0x1, 0x1);
        gbc.writeMem(0x1d81, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x93a9);
        EXPECT(gbc.pc(), 0x1d82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0137
        gbc.setState(0x5a52, 0x7b29, 0x1ba0, 0x7753, 0x8dbb, 0x86df, 0x1, 0x0);
        gbc.writeMem(0x5a52, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x7b29);
        EXPECT(gbc.pc(), 0x5a53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0138
        gbc.setState(0xac3d, 0xefb3, 0x9fd0, 0xbc84, 0x1b50, 0x1051, 0x1, 0x1);
        gbc.writeMem(0xac3d, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xefb3);
        EXPECT(gbc.pc(), 0xac3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac3d), 0x60);
        // 60 0139
        gbc.setState(0xbb29, 0xd07, 0xb350, 0xcbfc, 0x816b, 0xe983, 0x0, 0x1);
        gbc.writeMem(0xbb29, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xd07);
        EXPECT(gbc.pc(), 0xbb2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb29), 0x60);
        // 60 013A
        gbc.setState(0xb980, 0x4b61, 0xd000, 0xf215, 0xe059, 0xdc24, 0x1, 0x0);
        gbc.writeMem(0xb980, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x4b61);
        EXPECT(gbc.pc(), 0xb981);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb980), 0x60);
        // 60 013B
        gbc.setState(0x88f4, 0x8955, 0xf640, 0x4e95, 0x2712, 0x5df9, 0x0, 0x0);
        gbc.writeMem(0x88f4, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x8955);
        EXPECT(gbc.pc(), 0x88f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88f4), 0x60);
        // 60 013C
        gbc.setState(0xbf5c, 0x44cd, 0x5560, 0xc990, 0x5409, 0x33a, 0x1, 0x0);
        gbc.writeMem(0xbf5c, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x44cd);
        EXPECT(gbc.pc(), 0xbf5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf5c), 0x60);
        // 60 013D
        gbc.setState(0x84ee, 0xf7, 0x8e40, 0x15ed, 0x32af, 0x7df8, 0x1, 0x1);
        gbc.writeMem(0x84ee, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xf7);
        EXPECT(gbc.pc(), 0x84ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84ee), 0x60);
        // 60 013E
        gbc.setState(0xb7c7, 0x1c31, 0xb60, 0x74bd, 0xb99, 0xf82d, 0x0, 0x0);
        gbc.writeMem(0xb7c7, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x1c31);
        EXPECT(gbc.pc(), 0xb7c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7c7), 0x60);
        // 60 013F
        gbc.setState(0x4a0d, 0x824b, 0xca40, 0x3f50, 0x34ff, 0xa616, 0x0, 0x0);
        gbc.writeMem(0x4a0d, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x824b);
        EXPECT(gbc.pc(), 0x4a0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 0140
        gbc.setState(0xa3f0, 0x7022, 0xbd30, 0x6695, 0xfde9, 0x74bf, 0x1, 0x1);
        gbc.writeMem(0xa3f0, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x7022);
        EXPECT(gbc.pc(), 0xa3f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3f0), 0x60);
        // 60 0141
        gbc.setState(0x645d, 0x1f73, 0x30f0, 0xde1a, 0x4476, 0x54e1, 0x1, 0x1);
        gbc.writeMem(0x645d, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x1f73);
        EXPECT(gbc.pc(), 0x645e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0142
        gbc.setState(0xcd5b, 0x5684, 0xfec0, 0x1125, 0x4d78, 0x1a02, 0x1, 0x1);
        gbc.writeMem(0xcd5b, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x5684);
        EXPECT(gbc.pc(), 0xcd5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd5b), 0x60);
        // 60 0143
        gbc.setState(0x4591, 0x4f7f, 0x9970, 0xd050, 0xc7d2, 0xea28, 0x0, 0x0);
        gbc.writeMem(0x4591, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x4f7f);
        EXPECT(gbc.pc(), 0x4592);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0144
        gbc.setState(0x4da3, 0x4e84, 0xb920, 0x998e, 0xa2c1, 0xa9e9, 0x0, 0x0);
        gbc.writeMem(0x4da3, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x4e84);
        EXPECT(gbc.pc(), 0x4da4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0145
        gbc.setState(0xd14c, 0x6dee, 0x40, 0xad7, 0xd8f5, 0xda5f, 0x0, 0x0);
        gbc.writeMem(0xd14c, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x6dee);
        EXPECT(gbc.pc(), 0xd14d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd14c), 0x60);
        // 60 0146
        gbc.setState(0x1598, 0x1b76, 0x490, 0x6b8e, 0x4c01, 0x7bd9, 0x1, 0x0);
        gbc.writeMem(0x1598, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x1b76);
        EXPECT(gbc.pc(), 0x1599);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 0147
        gbc.setState(0xefb7, 0xfcec, 0x22d0, 0x298f, 0x1771, 0xf5e2, 0x1, 0x0);
        gbc.writeMem(0xefb7, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xfcec);
        EXPECT(gbc.pc(), 0xefb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefb7), 0x60);
        // 60 0148
        gbc.setState(0x24dd, 0x689, 0xffc0, 0x8c1d, 0x11d7, 0x3c75, 0x1, 0x0);
        gbc.writeMem(0x24dd, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x689);
        EXPECT(gbc.pc(), 0x24de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 014A
        gbc.setState(0x646b, 0x5c7c, 0x6910, 0xd1e6, 0x3378, 0xb0e2, 0x1, 0x1);
        gbc.writeMem(0x646b, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x5c7c);
        EXPECT(gbc.pc(), 0x646c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 014B
        gbc.setState(0xb7cb, 0x311b, 0x1b90, 0xe411, 0x3917, 0x21e2, 0x0, 0x1);
        gbc.writeMem(0xb7cb, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x311b);
        EXPECT(gbc.pc(), 0xb7cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7cb), 0x60);
        // 60 014C
        gbc.setState(0x9f3c, 0x343c, 0xed50, 0x27ee, 0x14cf, 0x3032, 0x1, 0x1);
        gbc.writeMem(0x9f3c, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x343c);
        EXPECT(gbc.pc(), 0x9f3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f3c), 0x60);
        // 60 014D
        gbc.setState(0x73c6, 0x1f9a, 0x3a40, 0xb907, 0x4178, 0xa221, 0x1, 0x0);
        gbc.writeMem(0x73c6, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x1f9a);
        EXPECT(gbc.pc(), 0x73c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 014E
        gbc.setState(0xeb4a, 0xd607, 0x3f80, 0x101c, 0x8290, 0xaf73, 0x0, 0x1);
        gbc.writeMem(0xeb4a, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xd607);
        EXPECT(gbc.pc(), 0xeb4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb4a), 0x60);
        // 60 014F
        gbc.setState(0x41f3, 0xcccc, 0x9e40, 0x9c57, 0x369c, 0xf027, 0x0, 0x1);
        gbc.writeMem(0x41f3, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xcccc);
        EXPECT(gbc.pc(), 0x41f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 0150
        gbc.setState(0x16, 0xdfb5, 0xbab0, 0x52b8, 0xf19d, 0x865e, 0x0, 0x1);
        gbc.writeMem(0x16, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xdfb5);
        EXPECT(gbc.pc(), 0x17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0151
        gbc.setState(0xe6b6, 0x71d8, 0xc1c0, 0x6a1d, 0xcbc0, 0x7669, 0x0, 0x1);
        gbc.writeMem(0xe6b6, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x71d8);
        EXPECT(gbc.pc(), 0xe6b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6b6), 0x60);
        // 60 0152
        gbc.setState(0xe486, 0x3e3d, 0xf880, 0x2979, 0x5b24, 0xee8a, 0x0, 0x1);
        gbc.writeMem(0xe486, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x3e3d);
        EXPECT(gbc.pc(), 0xe487);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe486), 0x60);
        // 60 0153
        gbc.setState(0x36c, 0xc41f, 0x5d30, 0xdf51, 0xfa69, 0x4f2a, 0x0, 0x0);
        gbc.writeMem(0x36c, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xc41f);
        EXPECT(gbc.pc(), 0x36d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0154
        gbc.setState(0x485b, 0x8d7b, 0x3b0, 0xc067, 0x97fc, 0x11be, 0x1, 0x1);
        gbc.writeMem(0x485b, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x8d7b);
        EXPECT(gbc.pc(), 0x485c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0155
        gbc.setState(0xa196, 0xe052, 0xec70, 0xa6a3, 0x6daa, 0x9a26, 0x0, 0x1);
        gbc.writeMem(0xa196, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xe052);
        EXPECT(gbc.pc(), 0xa197);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa196), 0x60);
        // 60 0156
        gbc.setState(0xe125, 0x39f5, 0xc0f0, 0x3e01, 0x7bf0, 0x1a60, 0x0, 0x0);
        gbc.writeMem(0xe125, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x39f5);
        EXPECT(gbc.pc(), 0xe126);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe125), 0x60);
        // 60 0158
        gbc.setState(0x262d, 0x8448, 0x3ef0, 0xd46c, 0x5e5a, 0x24cc, 0x0, 0x0);
        gbc.writeMem(0x262d, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x8448);
        EXPECT(gbc.pc(), 0x262e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0159
        gbc.setState(0x9066, 0xe912, 0x3730, 0x82e2, 0x7de5, 0xfeed, 0x1, 0x1);
        gbc.writeMem(0x9066, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xe912);
        EXPECT(gbc.pc(), 0x9067);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9066), 0x60);
        // 60 015A
        gbc.setState(0xcdf4, 0x6d39, 0xcbf0, 0x5335, 0xa61e, 0xfd3a, 0x1, 0x1);
        gbc.writeMem(0xcdf4, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x6d39);
        EXPECT(gbc.pc(), 0xcdf5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdf4), 0x60);
        // 60 015B
        gbc.setState(0x2b43, 0xe91f, 0xe7a0, 0x9def, 0x998e, 0x7374, 0x0, 0x0);
        gbc.writeMem(0x2b43, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xe91f);
        EXPECT(gbc.pc(), 0x2b44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 015C
        gbc.setState(0xead8, 0x875c, 0xc500, 0x4f4b, 0xb5ec, 0x4994, 0x1, 0x1);
        gbc.writeMem(0xead8, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x875c);
        EXPECT(gbc.pc(), 0xead9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xead8), 0x60);
        // 60 015D
        gbc.setState(0xe60a, 0x60f2, 0xac90, 0xb937, 0x1a51, 0x349a, 0x0, 0x0);
        gbc.writeMem(0xe60a, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x60f2);
        EXPECT(gbc.pc(), 0xe60b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe60a), 0x60);
        // 60 015E
        gbc.setState(0x1f91, 0x3be6, 0xf090, 0xbe5, 0xe4c0, 0x5b31, 0x0, 0x1);
        gbc.writeMem(0x1f91, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x3be6);
        EXPECT(gbc.pc(), 0x1f92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 015F
        gbc.setState(0x4e39, 0xd393, 0x4da0, 0x38d0, 0x631, 0x75c3, 0x0, 0x0);
        gbc.writeMem(0x4e39, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xd393);
        EXPECT(gbc.pc(), 0x4e3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0160
        gbc.setState(0x3fb1, 0xec2b, 0x79d0, 0x305b, 0xf65d, 0xa6e5, 0x1, 0x0);
        gbc.writeMem(0x3fb1, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xec2b);
        EXPECT(gbc.pc(), 0x3fb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 0161
        gbc.setState(0x7f6d, 0x1a31, 0xd60, 0x99b, 0xd159, 0xa14b, 0x1, 0x0);
        gbc.writeMem(0x7f6d, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x1a31);
        EXPECT(gbc.pc(), 0x7f6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0162
        gbc.setState(0xb42a, 0xb915, 0x53d0, 0xf6bf, 0xed8f, 0x579, 0x1, 0x0);
        gbc.writeMem(0xb42a, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xb915);
        EXPECT(gbc.pc(), 0xb42b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb42a), 0x60);
        // 60 0163
        gbc.setState(0x2850, 0x4b0, 0x9e00, 0x3d56, 0xcc1c, 0xdd66, 0x1, 0x1);
        gbc.writeMem(0x2850, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x4b0);
        EXPECT(gbc.pc(), 0x2851);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 0164
        gbc.setState(0x8e73, 0xd952, 0xf9d0, 0x4269, 0x7edd, 0x5a43, 0x0, 0x0);
        gbc.writeMem(0x8e73, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xd952);
        EXPECT(gbc.pc(), 0x8e74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e73), 0x60);
        // 60 0166
        gbc.setState(0x432a, 0x51b7, 0xa130, 0x4be8, 0x5c13, 0xf214, 0x0, 0x1);
        gbc.writeMem(0x432a, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x51b7);
        EXPECT(gbc.pc(), 0x432b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0167
        gbc.setState(0xae5b, 0xe1bb, 0x6c0, 0xb66d, 0x1836, 0x653c, 0x0, 0x0);
        gbc.writeMem(0xae5b, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xe1bb);
        EXPECT(gbc.pc(), 0xae5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae5b), 0x60);
        // 60 0168
        gbc.setState(0xe86f, 0x61fc, 0xb390, 0x54e3, 0x9f2e, 0xc521, 0x0, 0x1);
        gbc.writeMem(0xe86f, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x61fc);
        EXPECT(gbc.pc(), 0xe870);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe86f), 0x60);
        // 60 0169
        gbc.setState(0x5a61, 0x694c, 0x1220, 0x3453, 0x192e, 0x6ef8, 0x1, 0x1);
        gbc.writeMem(0x5a61, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x694c);
        EXPECT(gbc.pc(), 0x5a62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 016A
        gbc.setState(0x45d, 0x62b5, 0x6a90, 0x24f3, 0x84b2, 0x9c66, 0x0, 0x0);
        gbc.writeMem(0x45d, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x62b5);
        EXPECT(gbc.pc(), 0x45e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 016B
        gbc.setState(0xd3aa, 0x33f2, 0xcbb0, 0x7165, 0x4fa3, 0xf53e, 0x0, 0x0);
        gbc.writeMem(0xd3aa, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x33f2);
        EXPECT(gbc.pc(), 0xd3ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3aa), 0x60);
        // 60 016C
        gbc.setState(0xb56d, 0xbbd3, 0x52c0, 0xaab3, 0xbfe, 0x79f, 0x1, 0x0);
        gbc.writeMem(0xb56d, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xbbd3);
        EXPECT(gbc.pc(), 0xb56e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb56d), 0x60);
        // 60 016D
        gbc.setState(0x5ab9, 0xa600, 0x3f90, 0xbb93, 0xa330, 0x4691, 0x0, 0x0);
        gbc.writeMem(0x5ab9, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xa600);
        EXPECT(gbc.pc(), 0x5aba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 016E
        gbc.setState(0x221f, 0x498f, 0x8c0, 0xe642, 0x3a4, 0x35a9, 0x1, 0x0);
        gbc.writeMem(0x221f, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x498f);
        EXPECT(gbc.pc(), 0x2220);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 016F
        gbc.setState(0x6129, 0xcab7, 0xc520, 0x15c4, 0x7f7, 0xa9c, 0x0, 0x0);
        gbc.writeMem(0x6129, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xcab7);
        EXPECT(gbc.pc(), 0x612a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0170
        gbc.setState(0x48d8, 0x3373, 0xa150, 0xb3de, 0xf07f, 0x4f16, 0x0, 0x1);
        gbc.writeMem(0x48d8, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x3373);
        EXPECT(gbc.pc(), 0x48d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 0171
        gbc.setState(0x7658, 0xbbd4, 0x4c40, 0xb594, 0xd2a3, 0x6aa5, 0x0, 0x1);
        gbc.writeMem(0x7658, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xbbd4);
        EXPECT(gbc.pc(), 0x7659);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 0172
        gbc.setState(0xee85, 0xc712, 0x2af0, 0x6d67, 0x5ec1, 0xc802, 0x0, 0x1);
        gbc.writeMem(0xee85, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xc712);
        EXPECT(gbc.pc(), 0xee86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee85), 0x60);
        // 60 0173
        gbc.setState(0x116a, 0x58c1, 0x9490, 0xa57e, 0x7f69, 0xaf64, 0x0, 0x0);
        gbc.writeMem(0x116a, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x58c1);
        EXPECT(gbc.pc(), 0x116b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 0174
        gbc.setState(0xd5ed, 0xa0cf, 0x2110, 0xe3e1, 0xfdb3, 0x1f26, 0x1, 0x1);
        gbc.writeMem(0xd5ed, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xa0cf);
        EXPECT(gbc.pc(), 0xd5ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5ed), 0x60);
        // 60 0175
        gbc.setState(0xdf71, 0x3421, 0x7f80, 0x3ac4, 0xf920, 0xe762, 0x1, 0x0);
        gbc.writeMem(0xdf71, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x3421);
        EXPECT(gbc.pc(), 0xdf72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf71), 0x60);
        // 60 0176
        gbc.setState(0x9736, 0x242b, 0x4bb0, 0x6070, 0xce51, 0xca79, 0x1, 0x0);
        gbc.writeMem(0x9736, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x242b);
        EXPECT(gbc.pc(), 0x9737);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9736), 0x60);
        // 60 0178
        gbc.setState(0x8645, 0xc859, 0x4a10, 0xeb79, 0x818d, 0x5cb1, 0x0, 0x0);
        gbc.writeMem(0x8645, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xc859);
        EXPECT(gbc.pc(), 0x8646);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8645), 0x60);
        // 60 0179
        gbc.setState(0xde9a, 0x9c73, 0x6ff0, 0x7baa, 0x7d50, 0x4f08, 0x0, 0x1);
        gbc.writeMem(0xde9a, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x9c73);
        EXPECT(gbc.pc(), 0xde9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde9a), 0x60);
        // 60 017A
        gbc.setState(0x5237, 0x11c0, 0x2e80, 0x2342, 0xa9b, 0xa57d, 0x1, 0x1);
        gbc.writeMem(0x5237, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x11c0);
        EXPECT(gbc.pc(), 0x5238);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 017B
        gbc.setState(0x79db, 0x7669, 0xce90, 0xbc4b, 0x141e, 0xf99b, 0x0, 0x0);
        gbc.writeMem(0x79db, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x7669);
        EXPECT(gbc.pc(), 0x79dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 017C
        gbc.setState(0x76a9, 0x9bd4, 0xe050, 0x4e3a, 0x8ab3, 0xaf6c, 0x1, 0x1);
        gbc.writeMem(0x76a9, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x9bd4);
        EXPECT(gbc.pc(), 0x76aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 017D
        gbc.setState(0xe740, 0x57bc, 0xb950, 0xa862, 0x63b, 0xab9b, 0x1, 0x1);
        gbc.writeMem(0xe740, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x57bc);
        EXPECT(gbc.pc(), 0xe741);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe740), 0x60);
        // 60 017E
        gbc.setState(0x45b2, 0xd2c8, 0x7180, 0x8366, 0xa2f9, 0xa51b, 0x1, 0x0);
        gbc.writeMem(0x45b2, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xd2c8);
        EXPECT(gbc.pc(), 0x45b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 017F
        gbc.setState(0x9544, 0x674d, 0xd0a0, 0x1cb9, 0x568a, 0x9e6a, 0x1, 0x1);
        gbc.writeMem(0x9544, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x674d);
        EXPECT(gbc.pc(), 0x9545);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9544), 0x60);
        // 60 0180
        gbc.setState(0xc667, 0x6778, 0x6490, 0xf966, 0x2234, 0x3214, 0x1, 0x1);
        gbc.writeMem(0xc667, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x6778);
        EXPECT(gbc.pc(), 0xc668);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc667), 0x60);
        // 60 0181
        gbc.setState(0x3659, 0x75f8, 0xacd0, 0x9168, 0xb5b2, 0xe247, 0x0, 0x1);
        gbc.writeMem(0x3659, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x75f8);
        EXPECT(gbc.pc(), 0x365a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 0182
        gbc.setState(0x14e3, 0x7cc6, 0xc530, 0xc46e, 0x7444, 0x4ab6, 0x0, 0x1);
        gbc.writeMem(0x14e3, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x7cc6);
        EXPECT(gbc.pc(), 0x14e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0183
        gbc.setState(0x463d, 0x2fc4, 0xf8c0, 0x278f, 0x287f, 0xb64d, 0x1, 0x1);
        gbc.writeMem(0x463d, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x2fc4);
        EXPECT(gbc.pc(), 0x463e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 0184
        gbc.setState(0x1c3f, 0x7d15, 0xd1d0, 0x2324, 0xb6f8, 0x1bca, 0x1, 0x0);
        gbc.writeMem(0x1c3f, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x7d15);
        EXPECT(gbc.pc(), 0x1c40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 0185
        gbc.setState(0x4aa4, 0x5aff, 0xcdd0, 0xa848, 0x30ef, 0x96eb, 0x0, 0x1);
        gbc.writeMem(0x4aa4, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x5aff);
        EXPECT(gbc.pc(), 0x4aa5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 0186
        gbc.setState(0xe5ad, 0xf3ec, 0x2d80, 0x4efe, 0xaa8, 0xbe22, 0x0, 0x0);
        gbc.writeMem(0xe5ad, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xf3ec);
        EXPECT(gbc.pc(), 0xe5ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5ad), 0x60);
        // 60 0187
        gbc.setState(0x6715, 0x16b7, 0xbdb0, 0x6c4, 0x173, 0xd00f, 0x1, 0x1);
        gbc.writeMem(0x6715, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x16b7);
        EXPECT(gbc.pc(), 0x6716);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0188
        gbc.setState(0x82a4, 0xf06b, 0xe00, 0xd80c, 0x581c, 0xf90f, 0x0, 0x1);
        gbc.writeMem(0x82a4, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xf06b);
        EXPECT(gbc.pc(), 0x82a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82a4), 0x60);
        // 60 0189
        gbc.setState(0x1bee, 0x5b9a, 0xe90, 0x9754, 0x1e89, 0x4733, 0x0, 0x1);
        gbc.writeMem(0x1bee, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x5b9a);
        EXPECT(gbc.pc(), 0x1bef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 018B
        gbc.setState(0xb86b, 0x8ad6, 0x9e60, 0x5127, 0x5d6f, 0xd44f, 0x1, 0x1);
        gbc.writeMem(0xb86b, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x8ad6);
        EXPECT(gbc.pc(), 0xb86c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb86b), 0x60);
        // 60 018C
        gbc.setState(0xce81, 0x150f, 0x6a60, 0x7ae2, 0x655d, 0xda10, 0x1, 0x1);
        gbc.writeMem(0xce81, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x150f);
        EXPECT(gbc.pc(), 0xce82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce81), 0x60);
        // 60 018D
        gbc.setState(0x93e2, 0xbe38, 0x8ad0, 0xf5de, 0xee66, 0xcff, 0x1, 0x0);
        gbc.writeMem(0x93e2, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xbe38);
        EXPECT(gbc.pc(), 0x93e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93e2), 0x60);
        // 60 018E
        gbc.setState(0x95ba, 0xd10c, 0x8830, 0xd75b, 0x713a, 0x460a, 0x0, 0x1);
        gbc.writeMem(0x95ba, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xd10c);
        EXPECT(gbc.pc(), 0x95bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95ba), 0x60);
        // 60 018F
        gbc.setState(0x1e13, 0x64cd, 0x8e80, 0x8933, 0xc662, 0x767c, 0x0, 0x0);
        gbc.writeMem(0x1e13, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x64cd);
        EXPECT(gbc.pc(), 0x1e14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 0190
        gbc.setState(0x1a8c, 0x7043, 0x48d0, 0x5026, 0x8c82, 0x9f52, 0x0, 0x0);
        gbc.writeMem(0x1a8c, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x7043);
        EXPECT(gbc.pc(), 0x1a8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 0191
        gbc.setState(0x601b, 0xa7e8, 0x9a30, 0xb26d, 0xf2a2, 0x4edb, 0x1, 0x0);
        gbc.writeMem(0x601b, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xa7e8);
        EXPECT(gbc.pc(), 0x601c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0192
        gbc.setState(0x66a, 0xdada, 0xef30, 0x1f46, 0xa37c, 0xf790, 0x1, 0x0);
        gbc.writeMem(0x66a, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xdada);
        EXPECT(gbc.pc(), 0x66b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0193
        gbc.setState(0x183f, 0x4ac8, 0xc2f0, 0x2b79, 0xf88c, 0xa2bf, 0x1, 0x0);
        gbc.writeMem(0x183f, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x4ac8);
        EXPECT(gbc.pc(), 0x1840);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0194
        gbc.setState(0xe8ee, 0xcc42, 0x9650, 0x72f, 0x8a8b, 0x1853, 0x1, 0x0);
        gbc.writeMem(0xe8ee, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xcc42);
        EXPECT(gbc.pc(), 0xe8ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8ee), 0x60);
        // 60 0195
        gbc.setState(0x8c5a, 0x8261, 0x7e90, 0x5a01, 0xcf12, 0xef41, 0x0, 0x0);
        gbc.writeMem(0x8c5a, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x8261);
        EXPECT(gbc.pc(), 0x8c5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c5a), 0x60);
        // 60 0197
        gbc.setState(0xb3db, 0xa5f2, 0x1190, 0xf8f, 0x882d, 0xda69, 0x1, 0x0);
        gbc.writeMem(0xb3db, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xa5f2);
        EXPECT(gbc.pc(), 0xb3dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3db), 0x60);
        // 60 0198
        gbc.setState(0xd24e, 0x1cc7, 0x6840, 0xea15, 0x9ae9, 0x1c4f, 0x0, 0x1);
        gbc.writeMem(0xd24e, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x1cc7);
        EXPECT(gbc.pc(), 0xd24f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd24e), 0x60);
        // 60 0199
        gbc.setState(0xdc41, 0x430, 0xdf30, 0x98df, 0x9d99, 0xa67a, 0x1, 0x0);
        gbc.writeMem(0xdc41, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x430);
        EXPECT(gbc.pc(), 0xdc42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc41), 0x60);
        // 60 019A
        gbc.setState(0x250, 0x8afa, 0x9f70, 0x206, 0x443, 0x5b, 0x1, 0x1);
        gbc.writeMem(0x250, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x8afa);
        EXPECT(gbc.pc(), 0x251);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 019B
        gbc.setState(0xd77b, 0x9206, 0x4540, 0xc5ac, 0xa1c8, 0x2141, 0x0, 0x0);
        gbc.writeMem(0xd77b, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x9206);
        EXPECT(gbc.pc(), 0xd77c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd77b), 0x60);
        // 60 019C
        gbc.setState(0x2479, 0xe26b, 0xddc0, 0xc2df, 0x98a5, 0x22d3, 0x1, 0x0);
        gbc.writeMem(0x2479, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xe26b);
        EXPECT(gbc.pc(), 0x247a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 019D
        gbc.setState(0xeccf, 0x85ac, 0xa350, 0xa12e, 0xc568, 0x335f, 0x1, 0x1);
        gbc.writeMem(0xeccf, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x85ac);
        EXPECT(gbc.pc(), 0xecd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeccf), 0x60);
        // 60 019E
        gbc.setState(0x9b9a, 0xf237, 0xad30, 0x66d6, 0x8ed8, 0x8431, 0x1, 0x1);
        gbc.writeMem(0x9b9a, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xf237);
        EXPECT(gbc.pc(), 0x9b9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b9a), 0x60);
        // 60 019F
        gbc.setState(0x4094, 0x5af, 0x4d00, 0x5c93, 0x6d5, 0x7861, 0x1, 0x1);
        gbc.writeMem(0x4094, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x5af);
        EXPECT(gbc.pc(), 0x4095);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 01A0
        gbc.setState(0x6edd, 0x3b85, 0x6dd0, 0x8fe2, 0xd1f2, 0x53e0, 0x1, 0x1);
        gbc.writeMem(0x6edd, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x3b85);
        EXPECT(gbc.pc(), 0x6ede);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 01A1
        gbc.setState(0x16b6, 0xf18a, 0x9870, 0x7468, 0xb2ef, 0xb9d7, 0x0, 0x1);
        gbc.writeMem(0x16b6, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xf18a);
        EXPECT(gbc.pc(), 0x16b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 01A2
        gbc.setState(0x1e32, 0x9ef, 0x7bb0, 0x706b, 0xeefc, 0x2888, 0x1, 0x1);
        gbc.writeMem(0x1e32, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x9ef);
        EXPECT(gbc.pc(), 0x1e33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 01A3
        gbc.setState(0xee64, 0x390a, 0x3b60, 0x209b, 0x91b7, 0x1c4e, 0x0, 0x0);
        gbc.writeMem(0xee64, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x390a);
        EXPECT(gbc.pc(), 0xee65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee64), 0x60);
        // 60 01A4
        gbc.setState(0xb453, 0x74f9, 0x64e0, 0x578c, 0x8198, 0x28b0, 0x1, 0x1);
        gbc.writeMem(0xb453, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x74f9);
        EXPECT(gbc.pc(), 0xb454);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb453), 0x60);
        // 60 01A5
        gbc.setState(0x81f0, 0xecec, 0x3580, 0xf65f, 0x8caf, 0x7343, 0x1, 0x0);
        gbc.writeMem(0x81f0, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xecec);
        EXPECT(gbc.pc(), 0x81f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81f0), 0x60);
        // 60 01A6
        gbc.setState(0xc2f, 0xd753, 0x24c0, 0xd1d0, 0xd4c0, 0x7a5b, 0x0, 0x1);
        gbc.writeMem(0xc2f, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xd753);
        EXPECT(gbc.pc(), 0xc30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 01A7
        gbc.setState(0x896d, 0xb500, 0x7ab0, 0xf101, 0x661b, 0xc248, 0x1, 0x1);
        gbc.writeMem(0x896d, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xb500);
        EXPECT(gbc.pc(), 0x896e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x896d), 0x60);
        // 60 01A8
        gbc.setState(0xa90, 0xbc4b, 0xc9f0, 0xed19, 0xa651, 0x669c, 0x0, 0x0);
        gbc.writeMem(0xa90, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xbc4b);
        EXPECT(gbc.pc(), 0xa91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 01A9
        gbc.setState(0x67bb, 0x8f46, 0x4de0, 0x7afe, 0xe162, 0x3b59, 0x1, 0x1);
        gbc.writeMem(0x67bb, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x8f46);
        EXPECT(gbc.pc(), 0x67bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 01AA
        gbc.setState(0xbbf5, 0xcff4, 0x9650, 0xc9f7, 0xe54, 0x2b93, 0x0, 0x1);
        gbc.writeMem(0xbbf5, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xcff4);
        EXPECT(gbc.pc(), 0xbbf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbf5), 0x60);
        // 60 01AB
        gbc.setState(0xca2b, 0x7ce5, 0x3850, 0x34a8, 0xaaaf, 0x2fe3, 0x1, 0x0);
        gbc.writeMem(0xca2b, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x7ce5);
        EXPECT(gbc.pc(), 0xca2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca2b), 0x60);
        // 60 01AC
        gbc.setState(0x13a0, 0x6c14, 0xe3b0, 0xe148, 0x1990, 0x75ee, 0x1, 0x0);
        gbc.writeMem(0x13a0, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x6c14);
        EXPECT(gbc.pc(), 0x13a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 01AD
        gbc.setState(0xed73, 0x281c, 0xb610, 0x3edd, 0x317a, 0xddf8, 0x1, 0x1);
        gbc.writeMem(0xed73, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x281c);
        EXPECT(gbc.pc(), 0xed74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed73), 0x60);
        // 60 01AE
        gbc.setState(0xc237, 0x5d70, 0x6240, 0x4d70, 0xf3d9, 0xd536, 0x0, 0x0);
        gbc.writeMem(0xc237, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x5d70);
        EXPECT(gbc.pc(), 0xc238);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc237), 0x60);
        // 60 01AF
        gbc.setState(0x9adc, 0xbd56, 0xa500, 0xe4ee, 0xf6f9, 0x1a0, 0x1, 0x1);
        gbc.writeMem(0x9adc, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xbd56);
        EXPECT(gbc.pc(), 0x9add);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9adc), 0x60);
        // 60 01B0
        gbc.setState(0xab16, 0xa326, 0xaaf0, 0x68ac, 0x2cb5, 0xaabd, 0x1, 0x0);
        gbc.writeMem(0xab16, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xa326);
        EXPECT(gbc.pc(), 0xab17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab16), 0x60);
        // 60 01B1
        gbc.setState(0x4cee, 0xdd, 0xd1a0, 0x7ae7, 0xe75e, 0x8cac, 0x1, 0x1);
        gbc.writeMem(0x4cee, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xdd);
        EXPECT(gbc.pc(), 0x4cef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 01B2
        gbc.setState(0x7db4, 0x37c0, 0x3fb0, 0x8d92, 0x9ba, 0x911a, 0x1, 0x0);
        gbc.writeMem(0x7db4, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x37c0);
        EXPECT(gbc.pc(), 0x7db5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 01B4
        gbc.setState(0xc72b, 0x41d1, 0xa190, 0x542a, 0x94f5, 0x5952, 0x1, 0x1);
        gbc.writeMem(0xc72b, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x41d1);
        EXPECT(gbc.pc(), 0xc72c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc72b), 0x60);
        // 60 01B5
        gbc.setState(0x47f8, 0x1855, 0xfa70, 0x507e, 0xa469, 0x57b5, 0x0, 0x0);
        gbc.writeMem(0x47f8, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x1855);
        EXPECT(gbc.pc(), 0x47f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 01B6
        gbc.setState(0x78fb, 0x96ca, 0x860, 0x1caa, 0xd3d9, 0x6289, 0x1, 0x1);
        gbc.writeMem(0x78fb, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x96ca);
        EXPECT(gbc.pc(), 0x78fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 01B7
        gbc.setState(0xc75c, 0x5348, 0x3290, 0xe977, 0xeba5, 0x70b9, 0x0, 0x0);
        gbc.writeMem(0xc75c, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x5348);
        EXPECT(gbc.pc(), 0xc75d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc75c), 0x60);
        // 60 01B8
        gbc.setState(0xae56, 0x28a4, 0x33e0, 0xb908, 0xe3cb, 0x3843, 0x1, 0x1);
        gbc.writeMem(0xae56, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x28a4);
        EXPECT(gbc.pc(), 0xae57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae56), 0x60);
        // 60 01B9
        gbc.setState(0x8070, 0xd9ca, 0xf880, 0x943e, 0x1f3d, 0xba2b, 0x1, 0x0);
        gbc.writeMem(0x8070, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xd9ca);
        EXPECT(gbc.pc(), 0x8071);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8070), 0x60);
        // 60 01BA
        gbc.setState(0x3343, 0x939, 0x4a0, 0xe586, 0x3c34, 0x3eca, 0x1, 0x1);
        gbc.writeMem(0x3343, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x939);
        EXPECT(gbc.pc(), 0x3344);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 01BB
        gbc.setState(0x21b9, 0x3672, 0xf780, 0x6a84, 0xe8b5, 0x66ce, 0x1, 0x1);
        gbc.writeMem(0x21b9, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x3672);
        EXPECT(gbc.pc(), 0x21ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 01BC
        gbc.setState(0xadc4, 0x4113, 0x3730, 0xa28, 0x21f, 0x80ff, 0x0, 0x1);
        gbc.writeMem(0xadc4, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x4113);
        EXPECT(gbc.pc(), 0xadc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadc4), 0x60);
        // 60 01BD
        gbc.setState(0x6432, 0x9d8e, 0xdc70, 0xe7c5, 0x2b39, 0xc555, 0x0, 0x0);
        gbc.writeMem(0x6432, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x9d8e);
        EXPECT(gbc.pc(), 0x6433);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 01BE
        gbc.setState(0x2ba, 0x256, 0xee40, 0x39d9, 0x4a45, 0x25b9, 0x1, 0x1);
        gbc.writeMem(0x2ba, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x256);
        EXPECT(gbc.pc(), 0x2bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 01BF
        gbc.setState(0x3877, 0xb8bd, 0x5e00, 0x119, 0x30ae, 0x3d5e, 0x1, 0x1);
        gbc.writeMem(0x3877, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xb8bd);
        EXPECT(gbc.pc(), 0x3878);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 01C0
        gbc.setState(0x113, 0xa97d, 0x3d70, 0x23f9, 0x8a90, 0xe223, 0x1, 0x1);
        gbc.writeMem(0x113, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xa97d);
        EXPECT(gbc.pc(), 0x114);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 01C1
        gbc.setState(0x336d, 0xaaf2, 0x280, 0xe076, 0x446c, 0x273a, 0x0, 0x0);
        gbc.writeMem(0x336d, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xaaf2);
        EXPECT(gbc.pc(), 0x336e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 01C2
        gbc.setState(0xab3b, 0xbcc9, 0x2a0, 0x2857, 0xb38e, 0xd7cc, 0x1, 0x1);
        gbc.writeMem(0xab3b, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xbcc9);
        EXPECT(gbc.pc(), 0xab3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab3b), 0x60);
        // 60 01C3
        gbc.setState(0xe176, 0x6dad, 0x3da0, 0x468a, 0x3f98, 0xa497, 0x1, 0x0);
        gbc.writeMem(0xe176, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x6dad);
        EXPECT(gbc.pc(), 0xe177);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe176), 0x60);
        // 60 01C4
        gbc.setState(0xd7ab, 0xbddb, 0x5b50, 0xbacd, 0x96de, 0x89f, 0x1, 0x1);
        gbc.writeMem(0xd7ab, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xbddb);
        EXPECT(gbc.pc(), 0xd7ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7ab), 0x60);
        // 60 01C5
        gbc.setState(0x521e, 0x2d1, 0xfdc0, 0xabb8, 0x4afe, 0xb018, 0x1, 0x0);
        gbc.writeMem(0x521e, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x2d1);
        EXPECT(gbc.pc(), 0x521f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 01C6
        gbc.setState(0x2329, 0x38e0, 0x7e40, 0x5e20, 0x4dc6, 0x1ee9, 0x1, 0x1);
        gbc.writeMem(0x2329, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x38e0);
        EXPECT(gbc.pc(), 0x232a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 01C7
        gbc.setState(0xc26e, 0x2b82, 0xe800, 0x178f, 0x3140, 0x2d60, 0x0, 0x0);
        gbc.writeMem(0xc26e, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x2b82);
        EXPECT(gbc.pc(), 0xc26f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc26e), 0x60);
        // 60 01C8
        gbc.setState(0xa805, 0xe20d, 0x7280, 0xec27, 0x1627, 0xcd08, 0x1, 0x1);
        gbc.writeMem(0xa805, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xe20d);
        EXPECT(gbc.pc(), 0xa806);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa805), 0x60);
        // 60 01C9
        gbc.setState(0x32a3, 0x3985, 0x4500, 0xc5b0, 0x86a5, 0x3a58, 0x0, 0x1);
        gbc.writeMem(0x32a3, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x3985);
        EXPECT(gbc.pc(), 0x32a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 01CA
        gbc.setState(0x3e01, 0xb131, 0x36f0, 0x7cea, 0x2dca, 0x383d, 0x1, 0x1);
        gbc.writeMem(0x3e01, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xb131);
        EXPECT(gbc.pc(), 0x3e02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 01CB
        gbc.setState(0xbf86, 0x9c0f, 0x3fd0, 0x7d36, 0x45df, 0xc7e5, 0x0, 0x1);
        gbc.writeMem(0xbf86, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x9c0f);
        EXPECT(gbc.pc(), 0xbf87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf86), 0x60);
        // 60 01CC
        gbc.setState(0xcb7b, 0x4527, 0xf030, 0xb603, 0x6077, 0x93f7, 0x0, 0x1);
        gbc.writeMem(0xcb7b, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x4527);
        EXPECT(gbc.pc(), 0xcb7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb7b), 0x60);
        // 60 01CD
        gbc.setState(0x2f18, 0x198d, 0xdc30, 0x2cd8, 0x5926, 0x4d0, 0x0, 0x0);
        gbc.writeMem(0x2f18, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x198d);
        EXPECT(gbc.pc(), 0x2f19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 01CE
        gbc.setState(0xe12d, 0x15d7, 0x9760, 0xbd50, 0x445c, 0x18b6, 0x0, 0x1);
        gbc.writeMem(0xe12d, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x15d7);
        EXPECT(gbc.pc(), 0xe12e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe12d), 0x60);
        // 60 01CF
        gbc.setState(0xcf98, 0xcb0, 0x56c0, 0x58c9, 0x6256, 0x2653, 0x0, 0x0);
        gbc.writeMem(0xcf98, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xcb0);
        EXPECT(gbc.pc(), 0xcf99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf98), 0x60);
        // 60 01D0
        gbc.setState(0xd5eb, 0xe944, 0xc690, 0xaee3, 0x9c43, 0xb280, 0x1, 0x1);
        gbc.writeMem(0xd5eb, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xe944);
        EXPECT(gbc.pc(), 0xd5ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5eb), 0x60);
        // 60 01D1
        gbc.setState(0x58fc, 0x90d2, 0xf880, 0xb021, 0xd7ab, 0x7ed9, 0x0, 0x0);
        gbc.writeMem(0x58fc, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x90d2);
        EXPECT(gbc.pc(), 0x58fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 01D2
        gbc.setState(0xbfbe, 0x6e0d, 0x8fc0, 0xb344, 0xefb4, 0x4d5c, 0x0, 0x0);
        gbc.writeMem(0xbfbe, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x6e0d);
        EXPECT(gbc.pc(), 0xbfbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfbe), 0x60);
        // 60 01D3
        gbc.setState(0x15f5, 0xc0d6, 0xe040, 0x867b, 0x3b0f, 0x3d86, 0x1, 0x0);
        gbc.writeMem(0x15f5, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xc0d6);
        EXPECT(gbc.pc(), 0x15f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 01D4
        gbc.setState(0x36b5, 0x88e0, 0xc770, 0x608a, 0xedc3, 0x2a62, 0x1, 0x1);
        gbc.writeMem(0x36b5, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x88e0);
        EXPECT(gbc.pc(), 0x36b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 01D6
        gbc.setState(0x4dcf, 0x9262, 0xf1b0, 0x9cda, 0x8e97, 0xb435, 0x0, 0x1);
        gbc.writeMem(0x4dcf, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x9262);
        EXPECT(gbc.pc(), 0x4dd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 01D7
        gbc.setState(0x306e, 0x7c53, 0x4b30, 0xa6b3, 0x8b17, 0xbf15, 0x0, 0x0);
        gbc.writeMem(0x306e, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x7c53);
        EXPECT(gbc.pc(), 0x306f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 01D8
        gbc.setState(0x52bd, 0x4dcd, 0x6380, 0x121f, 0xc165, 0xf11b, 0x0, 0x1);
        gbc.writeMem(0x52bd, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x4dcd);
        EXPECT(gbc.pc(), 0x52be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 01D9
        gbc.setState(0x44fb, 0xf700, 0xdff0, 0x7563, 0xe49e, 0x1906, 0x0, 0x0);
        gbc.writeMem(0x44fb, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xf700);
        EXPECT(gbc.pc(), 0x44fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 01DA
        gbc.setState(0x85d7, 0xa02b, 0x5be0, 0x1322, 0x47af, 0xd2b2, 0x0, 0x0);
        gbc.writeMem(0x85d7, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xa02b);
        EXPECT(gbc.pc(), 0x85d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85d7), 0x60);
        // 60 01DB
        gbc.setState(0xdee2, 0xf4ac, 0x9fc0, 0xdc1c, 0xb180, 0xc90a, 0x0, 0x0);
        gbc.writeMem(0xdee2, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xf4ac);
        EXPECT(gbc.pc(), 0xdee3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdee2), 0x60);
        // 60 01DC
        gbc.setState(0x8455, 0x6e6, 0x8350, 0xdf62, 0x9f79, 0xf21b, 0x0, 0x1);
        gbc.writeMem(0x8455, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x6e6);
        EXPECT(gbc.pc(), 0x8456);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8455), 0x60);
        // 60 01DD
        gbc.setState(0x325c, 0xd3d6, 0xbf60, 0x674, 0xbac4, 0xff96, 0x1, 0x0);
        gbc.writeMem(0x325c, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xd3d6);
        EXPECT(gbc.pc(), 0x325d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 01DE
        gbc.setState(0x603, 0xb823, 0x55c0, 0x7b39, 0x8e92, 0x82c5, 0x0, 0x0);
        gbc.writeMem(0x603, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xb823);
        EXPECT(gbc.pc(), 0x604);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 01DF
        gbc.setState(0xbc37, 0x6b4, 0xd870, 0x32de, 0x56ac, 0x262c, 0x1, 0x1);
        gbc.writeMem(0xbc37, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x6b4);
        EXPECT(gbc.pc(), 0xbc38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc37), 0x60);
        // 60 01E0
        gbc.setState(0x7f17, 0xa592, 0xff10, 0xb7a5, 0xdba4, 0x90b8, 0x1, 0x0);
        gbc.writeMem(0x7f17, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xa592);
        EXPECT(gbc.pc(), 0x7f18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 01E1
        gbc.setState(0x8049, 0x5c1f, 0x3630, 0xa16d, 0x7e3b, 0x8b7e, 0x1, 0x0);
        gbc.writeMem(0x8049, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x5c1f);
        EXPECT(gbc.pc(), 0x804a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8049), 0x60);
        // 60 01E2
        gbc.setState(0x69bc, 0x82d6, 0x8a20, 0x3018, 0x3bcc, 0xd636, 0x0, 0x0);
        gbc.writeMem(0x69bc, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x82d6);
        EXPECT(gbc.pc(), 0x69bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 01E3
        gbc.setState(0x3328, 0x48fb, 0xb350, 0x2b23, 0xdf46, 0x3911, 0x0, 0x0);
        gbc.writeMem(0x3328, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x48fb);
        EXPECT(gbc.pc(), 0x3329);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 01E4
        gbc.setState(0x9750, 0xdfa8, 0x2b00, 0x9341, 0xee80, 0x85c4, 0x0, 0x0);
        gbc.writeMem(0x9750, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xdfa8);
        EXPECT(gbc.pc(), 0x9751);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9750), 0x60);
        // 60 01E5
        gbc.setState(0x4a2c, 0x6dc4, 0x2220, 0xd83c, 0xc767, 0xc0e0, 0x1, 0x1);
        gbc.writeMem(0x4a2c, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x6dc4);
        EXPECT(gbc.pc(), 0x4a2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 01E6
        gbc.setState(0x4bd7, 0x2b4d, 0x5400, 0x929d, 0x259e, 0xb0b5, 0x1, 0x0);
        gbc.writeMem(0x4bd7, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x2b4d);
        EXPECT(gbc.pc(), 0x4bd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 01E7
        gbc.setState(0xc8c9, 0xa1a1, 0xf320, 0x3865, 0xc29f, 0x4d72, 0x0, 0x0);
        gbc.writeMem(0xc8c9, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xa1a1);
        EXPECT(gbc.pc(), 0xc8ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8c9), 0x60);
        // 60 01E8
        gbc.setState(0x9318, 0xe129, 0xa8d0, 0xc9a5, 0x79c2, 0xa4e7, 0x1, 0x0);
        gbc.writeMem(0x9318, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xe129);
        EXPECT(gbc.pc(), 0x9319);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9318), 0x60);
        // 60 01E9
        gbc.setState(0x6231, 0x93cc, 0x3e80, 0x1a06, 0xd45f, 0x6102, 0x0, 0x1);
        gbc.writeMem(0x6231, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x93cc);
        EXPECT(gbc.pc(), 0x6232);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 01EA
        gbc.setState(0x5d90, 0x873a, 0xc030, 0x1394, 0x623b, 0xf255, 0x1, 0x0);
        gbc.writeMem(0x5d90, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x873a);
        EXPECT(gbc.pc(), 0x5d91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 01EB
        gbc.setState(0x5760, 0x1442, 0x1340, 0x6421, 0xf0c8, 0x61a1, 0x0, 0x0);
        gbc.writeMem(0x5760, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x1442);
        EXPECT(gbc.pc(), 0x5761);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 01EC
        gbc.setState(0x66b1, 0xc685, 0x2640, 0xb530, 0xc7ca, 0x1af8, 0x0, 0x0);
        gbc.writeMem(0x66b1, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xc685);
        EXPECT(gbc.pc(), 0x66b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 01ED
        gbc.setState(0xb5d2, 0xcf14, 0x8800, 0xa00a, 0xcfab, 0xea5c, 0x1, 0x0);
        gbc.writeMem(0xb5d2, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xcf14);
        EXPECT(gbc.pc(), 0xb5d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5d2), 0x60);
        // 60 01EE
        gbc.setState(0x9ee5, 0xa7b9, 0x2470, 0x257b, 0xf9a5, 0xbbb0, 0x1, 0x0);
        gbc.writeMem(0x9ee5, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xa7b9);
        EXPECT(gbc.pc(), 0x9ee6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ee5), 0x60);
        // 60 01EF
        gbc.setState(0x9921, 0xa614, 0xbc30, 0x5f9c, 0x9e28, 0x18e1, 0x0, 0x1);
        gbc.writeMem(0x9921, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xa614);
        EXPECT(gbc.pc(), 0x9922);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9921), 0x60);
        // 60 01F0
        gbc.setState(0x5e1b, 0x141, 0x44f0, 0x6615, 0x73cc, 0x29b8, 0x1, 0x1);
        gbc.writeMem(0x5e1b, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x141);
        EXPECT(gbc.pc(), 0x5e1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 01F1
        gbc.setState(0x94a4, 0xe277, 0x9be0, 0xd6ef, 0xb3e5, 0x2dd1, 0x0, 0x0);
        gbc.writeMem(0x94a4, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xe277);
        EXPECT(gbc.pc(), 0x94a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94a4), 0x60);
        // 60 01F2
        gbc.setState(0x260f, 0x3623, 0x4cc0, 0xe88f, 0x51c1, 0xf9d3, 0x0, 0x1);
        gbc.writeMem(0x260f, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x3623);
        EXPECT(gbc.pc(), 0x2610);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 01F4
        gbc.setState(0xd360, 0x5383, 0xca20, 0x2ee7, 0x9151, 0x6d06, 0x1, 0x1);
        gbc.writeMem(0xd360, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x5383);
        EXPECT(gbc.pc(), 0xd361);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd360), 0x60);
        // 60 01F5
        gbc.setState(0x4a90, 0x546, 0x3ca0, 0x6fcd, 0xff87, 0x9c75, 0x1, 0x0);
        gbc.writeMem(0x4a90, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x546);
        EXPECT(gbc.pc(), 0x4a91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 01F6
        gbc.setState(0x68dd, 0x2469, 0x2dc0, 0xc88, 0xaa81, 0x764f, 0x0, 0x0);
        gbc.writeMem(0x68dd, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x2469);
        EXPECT(gbc.pc(), 0x68de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 01F7
        gbc.setState(0xcb3c, 0x5e20, 0x3d00, 0x1f03, 0xf8bc, 0xa12f, 0x0, 0x1);
        gbc.writeMem(0xcb3c, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x5e20);
        EXPECT(gbc.pc(), 0xcb3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb3c), 0x60);
        // 60 01F8
        gbc.setState(0x4ccb, 0x7929, 0x36f0, 0xd0e3, 0x5a5a, 0xa18e, 0x0, 0x1);
        gbc.writeMem(0x4ccb, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x7929);
        EXPECT(gbc.pc(), 0x4ccc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 01F9
        gbc.setState(0x8f80, 0xfa0f, 0xe170, 0x5367, 0x1066, 0x8b46, 0x1, 0x0);
        gbc.writeMem(0x8f80, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xfa0f);
        EXPECT(gbc.pc(), 0x8f81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f80), 0x60);
        // 60 01FA
        gbc.setState(0xac4c, 0x2442, 0xb0, 0x9e01, 0xc021, 0x8021, 0x0, 0x1);
        gbc.writeMem(0xac4c, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x2442);
        EXPECT(gbc.pc(), 0xac4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac4c), 0x60);
        // 60 01FB
        gbc.setState(0x78ff, 0x95f6, 0xf930, 0xe558, 0xeb2f, 0x1e1a, 0x1, 0x1);
        gbc.writeMem(0x78ff, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x95f6);
        EXPECT(gbc.pc(), 0x7900);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 01FC
        gbc.setState(0x299b, 0xaa7c, 0x4c0, 0x294c, 0xf48b, 0x9b47, 0x1, 0x1);
        gbc.writeMem(0x299b, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xaa7c);
        EXPECT(gbc.pc(), 0x299c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 01FD
        gbc.setState(0x9cad, 0x160b, 0x87c0, 0x3f9f, 0xc1a9, 0x3b11, 0x0, 0x1);
        gbc.writeMem(0x9cad, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x160b);
        EXPECT(gbc.pc(), 0x9cae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cad), 0x60);
        // 60 01FF
        gbc.setState(0xd6cf, 0x13c7, 0xdee0, 0x89de, 0xd80f, 0xaf12, 0x1, 0x1);
        gbc.writeMem(0xd6cf, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x13c7);
        EXPECT(gbc.pc(), 0xd6d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6cf), 0x60);
        // 60 0200
        gbc.setState(0x9b34, 0x96ff, 0xe560, 0x173b, 0x8229, 0x4f81, 0x0, 0x1);
        gbc.writeMem(0x9b34, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x96ff);
        EXPECT(gbc.pc(), 0x9b35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b34), 0x60);
        // 60 0201
        gbc.setState(0x8101, 0x1fe6, 0x2f30, 0x7365, 0x93e0, 0x477, 0x1, 0x1);
        gbc.writeMem(0x8101, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x1fe6);
        EXPECT(gbc.pc(), 0x8102);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8101), 0x60);
        // 60 0202
        gbc.setState(0xa4b5, 0xdf15, 0x5630, 0x88f, 0x5751, 0xec81, 0x0, 0x1);
        gbc.writeMem(0xa4b5, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xdf15);
        EXPECT(gbc.pc(), 0xa4b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4b5), 0x60);
        // 60 0203
        gbc.setState(0xa08e, 0x31b4, 0x3020, 0x3d68, 0xb04f, 0x2c3d, 0x0, 0x1);
        gbc.writeMem(0xa08e, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x31b4);
        EXPECT(gbc.pc(), 0xa08f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa08e), 0x60);
        // 60 0204
        gbc.setState(0x5763, 0x533, 0x9220, 0x75a6, 0xc843, 0x6282, 0x0, 0x0);
        gbc.writeMem(0x5763, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x533);
        EXPECT(gbc.pc(), 0x5764);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0205
        gbc.setState(0x2ffd, 0x6b34, 0x230, 0xa35d, 0xef6c, 0x5079, 0x0, 0x0);
        gbc.writeMem(0x2ffd, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x6b34);
        EXPECT(gbc.pc(), 0x2ffe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0206
        gbc.setState(0x3835, 0xd443, 0x7e40, 0xa85b, 0x38bf, 0x40b6, 0x1, 0x0);
        gbc.writeMem(0x3835, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xd443);
        EXPECT(gbc.pc(), 0x3836);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 0207
        gbc.setState(0x3c14, 0x3cb0, 0x54b0, 0x7b20, 0x5f15, 0xba3e, 0x0, 0x0);
        gbc.writeMem(0x3c14, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x3cb0);
        EXPECT(gbc.pc(), 0x3c15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0208
        gbc.setState(0x8ae4, 0xf374, 0xfff0, 0xdcea, 0x6455, 0xee9a, 0x0, 0x0);
        gbc.writeMem(0x8ae4, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xf374);
        EXPECT(gbc.pc(), 0x8ae5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ae4), 0x60);
        // 60 0209
        gbc.setState(0xe724, 0xf915, 0xfe20, 0x7db3, 0xe05, 0x644f, 0x0, 0x1);
        gbc.writeMem(0xe724, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xf915);
        EXPECT(gbc.pc(), 0xe725);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe724), 0x60);
        // 60 020A
        gbc.setState(0x7b07, 0x45a5, 0x5780, 0x2ba2, 0xceb6, 0x4b07, 0x0, 0x1);
        gbc.writeMem(0x7b07, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x45a5);
        EXPECT(gbc.pc(), 0x7b08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 020B
        gbc.setState(0x2469, 0xfd8, 0xac0, 0xceab, 0xf46e, 0x5749, 0x1, 0x0);
        gbc.writeMem(0x2469, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xfd8);
        EXPECT(gbc.pc(), 0x246a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 020C
        gbc.setState(0xb7c4, 0x3b1b, 0x75b0, 0x1ba0, 0x25c0, 0xb9e2, 0x1, 0x0);
        gbc.writeMem(0xb7c4, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x3b1b);
        EXPECT(gbc.pc(), 0xb7c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7c4), 0x60);
        // 60 020D
        gbc.setState(0x815b, 0x5192, 0x2200, 0xc1cb, 0xaec4, 0x1694, 0x0, 0x0);
        gbc.writeMem(0x815b, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x5192);
        EXPECT(gbc.pc(), 0x815c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x815b), 0x60);
        // 60 020E
        gbc.setState(0xd095, 0x745d, 0xfe30, 0x2ae8, 0xb356, 0x33a8, 0x0, 0x0);
        gbc.writeMem(0xd095, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x745d);
        EXPECT(gbc.pc(), 0xd096);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd095), 0x60);
        // 60 020F
        gbc.setState(0x2bf1, 0x4bde, 0xb80, 0x4cc8, 0xad91, 0x4784, 0x1, 0x0);
        gbc.writeMem(0x2bf1, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x4bde);
        EXPECT(gbc.pc(), 0x2bf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 0210
        gbc.setState(0x9c1a, 0xd9e8, 0x8040, 0xc4ea, 0xb8d2, 0x5bbf, 0x1, 0x0);
        gbc.writeMem(0x9c1a, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xd9e8);
        EXPECT(gbc.pc(), 0x9c1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c1a), 0x60);
        // 60 0211
        gbc.setState(0x7d26, 0xedff, 0x350, 0xc0af, 0xfb29, 0x38f5, 0x1, 0x0);
        gbc.writeMem(0x7d26, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xedff);
        EXPECT(gbc.pc(), 0x7d27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 0213
        gbc.setState(0xce57, 0xc828, 0xf8c0, 0xd24d, 0xdd93, 0x53e6, 0x0, 0x0);
        gbc.writeMem(0xce57, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xc828);
        EXPECT(gbc.pc(), 0xce58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce57), 0x60);
        // 60 0214
        gbc.setState(0x3498, 0x1d67, 0xfa90, 0xb02e, 0x9ac0, 0x1a85, 0x1, 0x0);
        gbc.writeMem(0x3498, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x1d67);
        EXPECT(gbc.pc(), 0x3499);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 0215
        gbc.setState(0xb1f3, 0x3818, 0x4360, 0xae83, 0xaa6b, 0x6350, 0x1, 0x1);
        gbc.writeMem(0xb1f3, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x3818);
        EXPECT(gbc.pc(), 0xb1f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1f3), 0x60);
        // 60 0216
        gbc.setState(0x6f1, 0xa57, 0xd7d0, 0xf630, 0xd1b9, 0x7351, 0x0, 0x0);
        gbc.writeMem(0x6f1, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xa57);
        EXPECT(gbc.pc(), 0x6f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 0217
        gbc.setState(0x1be6, 0x8799, 0xd1b0, 0x2920, 0x8faf, 0x417d, 0x0, 0x1);
        gbc.writeMem(0x1be6, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x8799);
        EXPECT(gbc.pc(), 0x1be7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0218
        gbc.setState(0x73bd, 0x49ee, 0x4cb0, 0x1625, 0x24e7, 0x7823, 0x1, 0x1);
        gbc.writeMem(0x73bd, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x49ee);
        EXPECT(gbc.pc(), 0x73be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0219
        gbc.setState(0x1140, 0x5444, 0x3370, 0x874c, 0xe185, 0xc098, 0x1, 0x1);
        gbc.writeMem(0x1140, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x5444);
        EXPECT(gbc.pc(), 0x1141);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 021A
        gbc.setState(0x2d60, 0x7cad, 0x4e70, 0x56b0, 0x4719, 0xb24e, 0x1, 0x0);
        gbc.writeMem(0x2d60, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x7cad);
        EXPECT(gbc.pc(), 0x2d61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 021B
        gbc.setState(0x2845, 0xf322, 0xbef0, 0x268c, 0x73d1, 0xe7bf, 0x1, 0x0);
        gbc.writeMem(0x2845, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xf322);
        EXPECT(gbc.pc(), 0x2846);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 021C
        gbc.setState(0xe14b, 0xd43, 0x9d50, 0xf951, 0x3978, 0x4a28, 0x1, 0x1);
        gbc.writeMem(0xe14b, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xd43);
        EXPECT(gbc.pc(), 0xe14c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe14b), 0x60);
        // 60 021D
        gbc.setState(0xd683, 0x79f0, 0xb7d0, 0xeafb, 0x7d0c, 0x6858, 0x0, 0x1);
        gbc.writeMem(0xd683, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x79f0);
        EXPECT(gbc.pc(), 0xd684);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd683), 0x60);
        // 60 021E
        gbc.setState(0x8bd6, 0xa417, 0x3c10, 0xecad, 0x9925, 0xc9ad, 0x0, 0x0);
        gbc.writeMem(0x8bd6, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xa417);
        EXPECT(gbc.pc(), 0x8bd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bd6), 0x60);
        // 60 0220
        gbc.setState(0x17af, 0x944c, 0x4d50, 0xc9cd, 0x360a, 0xa18, 0x1, 0x1);
        gbc.writeMem(0x17af, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x944c);
        EXPECT(gbc.pc(), 0x17b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 0221
        gbc.setState(0x339a, 0x4d8c, 0x7ae0, 0xeb7e, 0x9db4, 0x3ec8, 0x1, 0x1);
        gbc.writeMem(0x339a, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x4d8c);
        EXPECT(gbc.pc(), 0x339b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0222
        gbc.setState(0xef8c, 0x99ac, 0x62e0, 0xf68b, 0x1bfc, 0x936f, 0x1, 0x0);
        gbc.writeMem(0xef8c, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x99ac);
        EXPECT(gbc.pc(), 0xef8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef8c), 0x60);
        // 60 0223
        gbc.setState(0xd05d, 0x7a18, 0xa3d0, 0xf04f, 0xb460, 0xfe81, 0x0, 0x0);
        gbc.writeMem(0xd05d, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x7a18);
        EXPECT(gbc.pc(), 0xd05e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd05d), 0x60);
        // 60 0224
        gbc.setState(0x9cfd, 0x21d, 0x3e00, 0x386e, 0xc1a4, 0xb714, 0x1, 0x0);
        gbc.writeMem(0x9cfd, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x21d);
        EXPECT(gbc.pc(), 0x9cfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cfd), 0x60);
        // 60 0225
        gbc.setState(0x2fc2, 0x1cfd, 0x6c50, 0x8561, 0xbac1, 0xdda2, 0x1, 0x1);
        gbc.writeMem(0x2fc2, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x1cfd);
        EXPECT(gbc.pc(), 0x2fc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 0226
        gbc.setState(0x3207, 0x22d0, 0x46c0, 0x9582, 0x9860, 0xdc7f, 0x1, 0x1);
        gbc.writeMem(0x3207, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x22d0);
        EXPECT(gbc.pc(), 0x3208);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 0227
        gbc.setState(0x954, 0xdf9f, 0xf170, 0x7411, 0xe586, 0x49b, 0x0, 0x1);
        gbc.writeMem(0x954, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xdf9f);
        EXPECT(gbc.pc(), 0x955);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0228
        gbc.setState(0x3d71, 0x16d, 0x79e0, 0x3eca, 0xdaab, 0x50a, 0x0, 0x0);
        gbc.writeMem(0x3d71, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x16d);
        EXPECT(gbc.pc(), 0x3d72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0229
        gbc.setState(0x82a1, 0x617f, 0xc420, 0xf59e, 0x6e72, 0x3dd1, 0x1, 0x1);
        gbc.writeMem(0x82a1, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x617f);
        EXPECT(gbc.pc(), 0x82a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82a1), 0x60);
        // 60 022A
        gbc.setState(0xa8a7, 0xd94d, 0x8d60, 0x67da, 0xc802, 0x84dd, 0x0, 0x0);
        gbc.writeMem(0xa8a7, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xd94d);
        EXPECT(gbc.pc(), 0xa8a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8a7), 0x60);
        // 60 022B
        gbc.setState(0x417e, 0x4716, 0x8680, 0xdbe, 0xda06, 0x1781, 0x1, 0x1);
        gbc.writeMem(0x417e, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x4716);
        EXPECT(gbc.pc(), 0x417f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 022C
        gbc.setState(0x692e, 0x4bf8, 0xe450, 0x74b7, 0x85fb, 0x1e1f, 0x1, 0x1);
        gbc.writeMem(0x692e, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x4bf8);
        EXPECT(gbc.pc(), 0x692f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 022E
        gbc.setState(0x1599, 0x5663, 0x32f0, 0xd31d, 0x360, 0xf078, 0x0, 0x0);
        gbc.writeMem(0x1599, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x5663);
        EXPECT(gbc.pc(), 0x159a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 022F
        gbc.setState(0x72fe, 0xf8b1, 0x3e80, 0x28de, 0x6696, 0x3164, 0x1, 0x1);
        gbc.writeMem(0x72fe, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xf8b1);
        EXPECT(gbc.pc(), 0x72ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 0230
        gbc.setState(0xb2e8, 0xa4f1, 0x7f0, 0xfa15, 0x8e39, 0x334a, 0x0, 0x1);
        gbc.writeMem(0xb2e8, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xa4f1);
        EXPECT(gbc.pc(), 0xb2e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2e8), 0x60);
        // 60 0231
        gbc.setState(0x1be9, 0x1047, 0xbd0, 0x1d8, 0x95c4, 0x8d99, 0x1, 0x1);
        gbc.writeMem(0x1be9, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x1047);
        EXPECT(gbc.pc(), 0x1bea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 0232
        gbc.setState(0xdaac, 0xe79d, 0x4c30, 0x4f0e, 0xfd4d, 0xcfba, 0x0, 0x0);
        gbc.writeMem(0xdaac, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xe79d);
        EXPECT(gbc.pc(), 0xdaad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdaac), 0x60);
        // 60 0233
        gbc.setState(0x5d89, 0x61c4, 0xbed0, 0x64e0, 0x99a, 0xa29d, 0x0, 0x0);
        gbc.writeMem(0x5d89, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x61c4);
        EXPECT(gbc.pc(), 0x5d8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 0234
        gbc.setState(0x6d4d, 0x52a9, 0x5d80, 0x8342, 0xfae5, 0x9c30, 0x1, 0x1);
        gbc.writeMem(0x6d4d, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x52a9);
        EXPECT(gbc.pc(), 0x6d4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 0235
        gbc.setState(0xeb63, 0xe589, 0xd020, 0x2cbb, 0x6511, 0x47d5, 0x1, 0x1);
        gbc.writeMem(0xeb63, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xe589);
        EXPECT(gbc.pc(), 0xeb64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb63), 0x60);
        // 60 0236
        gbc.setState(0x77ee, 0x2968, 0xde90, 0xdb1a, 0x9ec9, 0xf89a, 0x0, 0x0);
        gbc.writeMem(0x77ee, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x2968);
        EXPECT(gbc.pc(), 0x77ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 0237
        gbc.setState(0xfae, 0x63a6, 0xb800, 0x4adf, 0xf5b7, 0xe436, 0x0, 0x1);
        gbc.writeMem(0xfae, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x63a6);
        EXPECT(gbc.pc(), 0xfaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 0238
        gbc.setState(0xc838, 0x92e4, 0x580, 0x8730, 0xe5f3, 0xa0b8, 0x1, 0x0);
        gbc.writeMem(0xc838, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x92e4);
        EXPECT(gbc.pc(), 0xc839);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc838), 0x60);
        // 60 0239
        gbc.setState(0x190b, 0x38a6, 0x2270, 0x3e82, 0x9c47, 0x3de8, 0x1, 0x0);
        gbc.writeMem(0x190b, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x38a6);
        EXPECT(gbc.pc(), 0x190c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 023A
        gbc.setState(0xc376, 0x79fe, 0x7270, 0xa231, 0x54da, 0x2b3e, 0x0, 0x0);
        gbc.writeMem(0xc376, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x79fe);
        EXPECT(gbc.pc(), 0xc377);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc376), 0x60);
        // 60 023C
        gbc.setState(0xccd9, 0xf59c, 0x6690, 0xde30, 0x7448, 0xc215, 0x1, 0x1);
        gbc.writeMem(0xccd9, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xf59c);
        EXPECT(gbc.pc(), 0xccda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccd9), 0x60);
        // 60 023D
        gbc.setState(0x25a2, 0xc1c6, 0x9000, 0xce37, 0xff66, 0x6202, 0x1, 0x0);
        gbc.writeMem(0x25a2, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xc1c6);
        EXPECT(gbc.pc(), 0x25a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 023E
        gbc.setState(0x3749, 0x6571, 0x2560, 0x4774, 0xabc0, 0x302d, 0x1, 0x0);
        gbc.writeMem(0x3749, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x6571);
        EXPECT(gbc.pc(), 0x374a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 023F
        gbc.setState(0x32f4, 0xc685, 0x7960, 0xdbc1, 0x3ac1, 0xf1c8, 0x0, 0x1);
        gbc.writeMem(0x32f4, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xc685);
        EXPECT(gbc.pc(), 0x32f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0240
        gbc.setState(0x13b5, 0xb1bd, 0x98f0, 0xcaa4, 0x8263, 0xf684, 0x0, 0x1);
        gbc.writeMem(0x13b5, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xb1bd);
        EXPECT(gbc.pc(), 0x13b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0241
        gbc.setState(0x6034, 0xfcb1, 0xa480, 0xc24c, 0x969b, 0x3c09, 0x0, 0x0);
        gbc.writeMem(0x6034, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xfcb1);
        EXPECT(gbc.pc(), 0x6035);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 0242
        gbc.setState(0x200c, 0xf9b8, 0xfc00, 0x887d, 0x9f44, 0xaec1, 0x1, 0x0);
        gbc.writeMem(0x200c, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xf9b8);
        EXPECT(gbc.pc(), 0x200d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 0243
        gbc.setState(0x868, 0x63c5, 0x86b0, 0x7edd, 0xfd15, 0x6428, 0x0, 0x0);
        gbc.writeMem(0x868, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x63c5);
        EXPECT(gbc.pc(), 0x869);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0244
        gbc.setState(0xb91d, 0x48a3, 0x64e0, 0x910a, 0x1805, 0xfd6, 0x0, 0x1);
        gbc.writeMem(0xb91d, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x48a3);
        EXPECT(gbc.pc(), 0xb91e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb91d), 0x60);
        // 60 0245
        gbc.setState(0xe359, 0x11e6, 0x2550, 0x81f0, 0x98ce, 0xeed2, 0x1, 0x0);
        gbc.writeMem(0xe359, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x11e6);
        EXPECT(gbc.pc(), 0xe35a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe359), 0x60);
        // 60 0246
        gbc.setState(0x6da5, 0x5433, 0x29f0, 0xa5b5, 0xb4ea, 0xe3a8, 0x0, 0x1);
        gbc.writeMem(0x6da5, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x5433);
        EXPECT(gbc.pc(), 0x6da6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0247
        gbc.setState(0xdcc3, 0xe5c3, 0xa7a0, 0xe56c, 0x5b83, 0xc9c4, 0x1, 0x1);
        gbc.writeMem(0xdcc3, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xe5c3);
        EXPECT(gbc.pc(), 0xdcc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcc3), 0x60);
        // 60 0248
        gbc.setState(0x2a30, 0x75fc, 0x61c0, 0x2e9e, 0x9b6b, 0x81a3, 0x1, 0x0);
        gbc.writeMem(0x2a30, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x75fc);
        EXPECT(gbc.pc(), 0x2a31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 0249
        gbc.setState(0x3a85, 0x8db0, 0xe6a0, 0x88a, 0x29dc, 0x273d, 0x0, 0x1);
        gbc.writeMem(0x3a85, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x8db0);
        EXPECT(gbc.pc(), 0x3a86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 024A
        gbc.setState(0xa54e, 0x7436, 0xb8f0, 0x2088, 0x7673, 0xe71b, 0x0, 0x0);
        gbc.writeMem(0xa54e, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x7436);
        EXPECT(gbc.pc(), 0xa54f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa54e), 0x60);
        // 60 024B
        gbc.setState(0x943, 0x1ac6, 0xf870, 0x625, 0xd32c, 0x7edb, 0x0, 0x0);
        gbc.writeMem(0x943, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x1ac6);
        EXPECT(gbc.pc(), 0x944);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 024C
        gbc.setState(0x9755, 0x95a8, 0x7fd0, 0x2114, 0xfed3, 0xed4a, 0x0, 0x1);
        gbc.writeMem(0x9755, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x95a8);
        EXPECT(gbc.pc(), 0x9756);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9755), 0x60);
        // 60 024D
        gbc.setState(0x75a1, 0x7e12, 0x86f0, 0xadae, 0x6e9d, 0x8572, 0x0, 0x0);
        gbc.writeMem(0x75a1, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x7e12);
        EXPECT(gbc.pc(), 0x75a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 024E
        gbc.setState(0xa2e9, 0x677, 0x5ed0, 0x69e7, 0x226c, 0x4e0a, 0x0, 0x1);
        gbc.writeMem(0xa2e9, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x677);
        EXPECT(gbc.pc(), 0xa2ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2e9), 0x60);
        // 60 024F
        gbc.setState(0x8840, 0x17e6, 0x9b50, 0x73d7, 0x732, 0x6ae9, 0x1, 0x1);
        gbc.writeMem(0x8840, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x17e6);
        EXPECT(gbc.pc(), 0x8841);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8840), 0x60);
        // 60 0250
        gbc.setState(0x6c51, 0xe22a, 0xdad0, 0x1b4d, 0xc042, 0x2035, 0x0, 0x1);
        gbc.writeMem(0x6c51, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xe22a);
        EXPECT(gbc.pc(), 0x6c52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 0251
        gbc.setState(0x70c6, 0x1ee5, 0xfd10, 0x1cfc, 0x61fb, 0x26b4, 0x1, 0x0);
        gbc.writeMem(0x70c6, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x1ee5);
        EXPECT(gbc.pc(), 0x70c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 0252
        gbc.setState(0x794b, 0x442b, 0xf420, 0x89cf, 0xd82e, 0x50f4, 0x1, 0x0);
        gbc.writeMem(0x794b, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x442b);
        EXPECT(gbc.pc(), 0x794c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0254
        gbc.setState(0x6c5c, 0xbe2b, 0x77b0, 0x775d, 0xa96, 0xd750, 0x1, 0x1);
        gbc.writeMem(0x6c5c, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xbe2b);
        EXPECT(gbc.pc(), 0x6c5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0256
        gbc.setState(0x4983, 0xf02a, 0x20c0, 0x1d05, 0xd99e, 0xd5c8, 0x1, 0x0);
        gbc.writeMem(0x4983, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xf02a);
        EXPECT(gbc.pc(), 0x4984);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 0257
        gbc.setState(0x7f2e, 0x9a74, 0x5e40, 0x83b3, 0xbcd9, 0x62d7, 0x1, 0x1);
        gbc.writeMem(0x7f2e, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x9a74);
        EXPECT(gbc.pc(), 0x7f2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 0258
        gbc.setState(0x82a3, 0x2d90, 0xdfd0, 0x49bc, 0x5f17, 0xb8e4, 0x0, 0x1);
        gbc.writeMem(0x82a3, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x2d90);
        EXPECT(gbc.pc(), 0x82a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82a3), 0x60);
        // 60 0259
        gbc.setState(0x5fa8, 0xb681, 0x72a0, 0x578f, 0x6fd5, 0xf00, 0x0, 0x0);
        gbc.writeMem(0x5fa8, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xb681);
        EXPECT(gbc.pc(), 0x5fa9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 025A
        gbc.setState(0xba5a, 0x98d1, 0xcee0, 0x7dd6, 0x487f, 0x14d5, 0x0, 0x1);
        gbc.writeMem(0xba5a, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x98d1);
        EXPECT(gbc.pc(), 0xba5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba5a), 0x60);
        // 60 025B
        gbc.setState(0x2941, 0xa5ef, 0xc0d0, 0xc9c4, 0x6346, 0xc271, 0x0, 0x0);
        gbc.writeMem(0x2941, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xa5ef);
        EXPECT(gbc.pc(), 0x2942);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 025C
        gbc.setState(0x6722, 0xa88a, 0x49c0, 0x21e5, 0x8d24, 0x3095, 0x1, 0x0);
        gbc.writeMem(0x6722, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xa88a);
        EXPECT(gbc.pc(), 0x6723);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 025E
        gbc.setState(0x11cc, 0x4e6a, 0x8150, 0x679c, 0x4356, 0x4cb6, 0x1, 0x1);
        gbc.writeMem(0x11cc, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x4e6a);
        EXPECT(gbc.pc(), 0x11cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 025F
        gbc.setState(0xcf47, 0xf6a0, 0x1ec0, 0x2d95, 0x9d1, 0x329d, 0x0, 0x0);
        gbc.writeMem(0xcf47, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xf6a0);
        EXPECT(gbc.pc(), 0xcf48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf47), 0x60);
        // 60 0260
        gbc.setState(0x5962, 0x7cdf, 0x6350, 0x20e, 0xa39f, 0x9c5b, 0x1, 0x1);
        gbc.writeMem(0x5962, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x7cdf);
        EXPECT(gbc.pc(), 0x5963);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 0261
        gbc.setState(0xdcb9, 0xd4d8, 0x8980, 0xa496, 0x6eaa, 0xa58c, 0x0, 0x0);
        gbc.writeMem(0xdcb9, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xd4d8);
        EXPECT(gbc.pc(), 0xdcba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcb9), 0x60);
        // 60 0262
        gbc.setState(0x26ba, 0x38a7, 0xdf70, 0x764b, 0xe55e, 0xacb, 0x1, 0x0);
        gbc.writeMem(0x26ba, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x38a7);
        EXPECT(gbc.pc(), 0x26bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0263
        gbc.setState(0x8f1b, 0x3e81, 0x4bb0, 0x7487, 0xc299, 0x9a24, 0x1, 0x0);
        gbc.writeMem(0x8f1b, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x3e81);
        EXPECT(gbc.pc(), 0x8f1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f1b), 0x60);
        // 60 0264
        gbc.setState(0x84c2, 0xd223, 0xda40, 0xff73, 0x55d8, 0xcba1, 0x1, 0x0);
        gbc.writeMem(0x84c2, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xd223);
        EXPECT(gbc.pc(), 0x84c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84c2), 0x60);
        // 60 0265
        gbc.setState(0xed3, 0x7963, 0x4160, 0x8a9, 0xa74c, 0x933a, 0x0, 0x0);
        gbc.writeMem(0xed3, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x7963);
        EXPECT(gbc.pc(), 0xed4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0266
        gbc.setState(0x5095, 0x8ba1, 0xc600, 0xbf56, 0x5d83, 0xfa6d, 0x0, 0x1);
        gbc.writeMem(0x5095, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x8ba1);
        EXPECT(gbc.pc(), 0x5096);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 0267
        gbc.setState(0x9b38, 0xb40f, 0x2d40, 0xeadd, 0x303e, 0xc5cf, 0x1, 0x0);
        gbc.writeMem(0x9b38, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xb40f);
        EXPECT(gbc.pc(), 0x9b39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b38), 0x60);
        // 60 0268
        gbc.setState(0xba3f, 0x4874, 0x8fb0, 0xa874, 0xe5e3, 0xdc68, 0x0, 0x0);
        gbc.writeMem(0xba3f, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x4874);
        EXPECT(gbc.pc(), 0xba40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba3f), 0x60);
        // 60 0269
        gbc.setState(0xa08c, 0xd5da, 0xbb80, 0xdd26, 0x40e5, 0xb1e, 0x1, 0x0);
        gbc.writeMem(0xa08c, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xd5da);
        EXPECT(gbc.pc(), 0xa08d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa08c), 0x60);
        // 60 026A
        gbc.setState(0x17d, 0x87cd, 0x1860, 0x2c1b, 0x8b89, 0xacb1, 0x0, 0x0);
        gbc.writeMem(0x17d, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x87cd);
        EXPECT(gbc.pc(), 0x17e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 026B
        gbc.setState(0x428f, 0xcd2d, 0x1c10, 0x318c, 0xd654, 0x7a4c, 0x1, 0x0);
        gbc.writeMem(0x428f, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xcd2d);
        EXPECT(gbc.pc(), 0x4290);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 026C
        gbc.setState(0x63f4, 0xf14f, 0x2d0, 0xd529, 0xf81, 0xb14c, 0x0, 0x0);
        gbc.writeMem(0x63f4, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xf14f);
        EXPECT(gbc.pc(), 0x63f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 026D
        gbc.setState(0xe52b, 0x33f0, 0xea70, 0x20a2, 0x5a1e, 0xee37, 0x1, 0x1);
        gbc.writeMem(0xe52b, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x33f0);
        EXPECT(gbc.pc(), 0xe52c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe52b), 0x60);
        // 60 026F
        gbc.setState(0xc329, 0xb1c6, 0x4cc0, 0x260b, 0xc04d, 0x272d, 0x1, 0x1);
        gbc.writeMem(0xc329, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xb1c6);
        EXPECT(gbc.pc(), 0xc32a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc329), 0x60);
        // 60 0270
        gbc.setState(0x732c, 0x811e, 0xdee0, 0x8dad, 0xcc6f, 0x615, 0x1, 0x0);
        gbc.writeMem(0x732c, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x811e);
        EXPECT(gbc.pc(), 0x732d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0271
        gbc.setState(0xd231, 0x8540, 0x7600, 0xe4e3, 0x5b01, 0x57f, 0x1, 0x0);
        gbc.writeMem(0xd231, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x8540);
        EXPECT(gbc.pc(), 0xd232);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd231), 0x60);
        // 60 0272
        gbc.setState(0x86af, 0xc02d, 0x5620, 0x2fcf, 0xab10, 0x5c8, 0x0, 0x0);
        gbc.writeMem(0x86af, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xc02d);
        EXPECT(gbc.pc(), 0x86b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86af), 0x60);
        // 60 0273
        gbc.setState(0xde6b, 0xb332, 0x4050, 0xdb29, 0xba53, 0x8351, 0x1, 0x1);
        gbc.writeMem(0xde6b, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xb332);
        EXPECT(gbc.pc(), 0xde6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde6b), 0x60);
        // 60 0274
        gbc.setState(0xca6f, 0xced6, 0x5cf0, 0xa6ce, 0x7abd, 0x4d34, 0x1, 0x1);
        gbc.writeMem(0xca6f, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xced6);
        EXPECT(gbc.pc(), 0xca70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca6f), 0x60);
        // 60 0275
        gbc.setState(0x61a1, 0x38cf, 0x8a70, 0x90e6, 0x8f94, 0xbf86, 0x1, 0x0);
        gbc.writeMem(0x61a1, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x38cf);
        EXPECT(gbc.pc(), 0x61a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0276
        gbc.setState(0x24c4, 0x28bb, 0xebb0, 0x5ac7, 0xae9c, 0x1e08, 0x0, 0x1);
        gbc.writeMem(0x24c4, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x28bb);
        EXPECT(gbc.pc(), 0x24c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0277
        gbc.setState(0x20f9, 0x7ee7, 0xd9f0, 0xcd8f, 0xefbb, 0x3367, 0x1, 0x1);
        gbc.writeMem(0x20f9, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x7ee7);
        EXPECT(gbc.pc(), 0x20fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0278
        gbc.setState(0xdd05, 0xee80, 0xc450, 0x4f40, 0x6cb3, 0x6da9, 0x0, 0x0);
        gbc.writeMem(0xdd05, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xee80);
        EXPECT(gbc.pc(), 0xdd06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd05), 0x60);
        // 60 0279
        gbc.setState(0xdecb, 0xd156, 0xdfc0, 0xd1a1, 0xb843, 0x5a6a, 0x1, 0x1);
        gbc.writeMem(0xdecb, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xd156);
        EXPECT(gbc.pc(), 0xdecc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdecb), 0x60);
        // 60 027A
        gbc.setState(0xea09, 0xaa5f, 0x5b40, 0x7674, 0xf2a4, 0x3016, 0x0, 0x1);
        gbc.writeMem(0xea09, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xaa5f);
        EXPECT(gbc.pc(), 0xea0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea09), 0x60);
        // 60 027B
        gbc.setState(0xe8b9, 0xacfe, 0xe1a0, 0x1ccf, 0x4f90, 0xddbd, 0x0, 0x0);
        gbc.writeMem(0xe8b9, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xacfe);
        EXPECT(gbc.pc(), 0xe8ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8b9), 0x60);
        // 60 027C
        gbc.setState(0x30e9, 0x5345, 0xcbb0, 0xe4c9, 0x9fe6, 0x2b3e, 0x0, 0x0);
        gbc.writeMem(0x30e9, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x5345);
        EXPECT(gbc.pc(), 0x30ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 027D
        gbc.setState(0x3164, 0x4faf, 0xca60, 0xe434, 0x9d56, 0xfa7e, 0x0, 0x0);
        gbc.writeMem(0x3164, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x4faf);
        EXPECT(gbc.pc(), 0x3165);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 027E
        gbc.setState(0xca80, 0x9563, 0x3580, 0xdf9, 0x3a42, 0x9016, 0x0, 0x0);
        gbc.writeMem(0xca80, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x9563);
        EXPECT(gbc.pc(), 0xca81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca80), 0x60);
        // 60 027F
        gbc.setState(0x42cf, 0x51b2, 0x8e0, 0x823c, 0xe2a1, 0x29ff, 0x0, 0x1);
        gbc.writeMem(0x42cf, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x51b2);
        EXPECT(gbc.pc(), 0x42d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0280
        gbc.setState(0x29, 0xc446, 0xdae0, 0xc355, 0x2380, 0xa7e2, 0x0, 0x0);
        gbc.writeMem(0x29, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xc446);
        EXPECT(gbc.pc(), 0x2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0281
        gbc.setState(0x3e10, 0x8a13, 0x4fe0, 0xba73, 0x181b, 0xe6c5, 0x0, 0x1);
        gbc.writeMem(0x3e10, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x8a13);
        EXPECT(gbc.pc(), 0x3e11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0282
        gbc.setState(0x88b2, 0xd9dd, 0x3400, 0x4947, 0x43c4, 0xb9c3, 0x0, 0x1);
        gbc.writeMem(0x88b2, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xd9dd);
        EXPECT(gbc.pc(), 0x88b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88b2), 0x60);
        // 60 0283
        gbc.setState(0xbe48, 0xcf66, 0x7cf0, 0xd07, 0x7fa9, 0x49dd, 0x1, 0x0);
        gbc.writeMem(0xbe48, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xcf66);
        EXPECT(gbc.pc(), 0xbe49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe48), 0x60);
        // 60 0284
        gbc.setState(0x5468, 0x7118, 0x94c0, 0x418b, 0xc80d, 0xb8e7, 0x1, 0x1);
        gbc.writeMem(0x5468, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x7118);
        EXPECT(gbc.pc(), 0x5469);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 0285
        gbc.setState(0xbb08, 0x67d8, 0x1360, 0xedcf, 0x11c8, 0x5cc, 0x0, 0x1);
        gbc.writeMem(0xbb08, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x67d8);
        EXPECT(gbc.pc(), 0xbb09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb08), 0x60);
        // 60 0286
        gbc.setState(0xd8ba, 0x6212, 0x2420, 0xd5cf, 0x10d, 0x54d4, 0x1, 0x1);
        gbc.writeMem(0xd8ba, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x6212);
        EXPECT(gbc.pc(), 0xd8bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8ba), 0x60);
        // 60 0287
        gbc.setState(0xb8bd, 0xd1de, 0xf640, 0xbae9, 0x9c1, 0xedd8, 0x1, 0x0);
        gbc.writeMem(0xb8bd, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xd1de);
        EXPECT(gbc.pc(), 0xb8be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8bd), 0x60);
        // 60 0288
        gbc.setState(0x8901, 0x56ed, 0xaf60, 0x57c2, 0xc501, 0xa565, 0x0, 0x1);
        gbc.writeMem(0x8901, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x56ed);
        EXPECT(gbc.pc(), 0x8902);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8901), 0x60);
        // 60 0289
        gbc.setState(0x8b6b, 0x3de8, 0xbb40, 0x90fe, 0xf6ef, 0x6c95, 0x0, 0x0);
        gbc.writeMem(0x8b6b, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x3de8);
        EXPECT(gbc.pc(), 0x8b6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b6b), 0x60);
        // 60 028A
        gbc.setState(0xb878, 0x1a62, 0xb460, 0x68f8, 0xed0, 0x69de, 0x0, 0x1);
        gbc.writeMem(0xb878, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x1a62);
        EXPECT(gbc.pc(), 0xb879);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb878), 0x60);
        // 60 028B
        gbc.setState(0x1805, 0xa02e, 0x9830, 0x5c89, 0x49a6, 0x3a05, 0x1, 0x0);
        gbc.writeMem(0x1805, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xa02e);
        EXPECT(gbc.pc(), 0x1806);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 028D
        gbc.setState(0x8a1e, 0xddb9, 0xf730, 0x633a, 0x365e, 0x790b, 0x1, 0x1);
        gbc.writeMem(0x8a1e, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xddb9);
        EXPECT(gbc.pc(), 0x8a1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a1e), 0x60);
        // 60 028E
        gbc.setState(0x6c52, 0x8ea1, 0xe7b0, 0xd4b, 0xba13, 0x8593, 0x1, 0x0);
        gbc.writeMem(0x6c52, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x8ea1);
        EXPECT(gbc.pc(), 0x6c53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0290
        gbc.setState(0xdf9c, 0xa452, 0x3a80, 0x5996, 0xb40a, 0x3e8, 0x1, 0x0);
        gbc.writeMem(0xdf9c, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xa452);
        EXPECT(gbc.pc(), 0xdf9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf9c), 0x60);
        // 60 0291
        gbc.setState(0x6a98, 0xf489, 0xa8e0, 0x918e, 0x5571, 0x3eef, 0x1, 0x0);
        gbc.writeMem(0x6a98, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xf489);
        EXPECT(gbc.pc(), 0x6a99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0292
        gbc.setState(0xaa84, 0xb49b, 0x4240, 0x7094, 0xd828, 0xe460, 0x1, 0x1);
        gbc.writeMem(0xaa84, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xb49b);
        EXPECT(gbc.pc(), 0xaa85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa84), 0x60);
        // 60 0293
        gbc.setState(0xbeda, 0x999f, 0x2360, 0x9c4, 0xe96e, 0xa877, 0x1, 0x0);
        gbc.writeMem(0xbeda, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x999f);
        EXPECT(gbc.pc(), 0xbedb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbeda), 0x60);
        // 60 0295
        gbc.setState(0x94a0, 0x74ea, 0x1420, 0x5c8, 0x27fd, 0x1bf6, 0x0, 0x1);
        gbc.writeMem(0x94a0, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x74ea);
        EXPECT(gbc.pc(), 0x94a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94a0), 0x60);
        // 60 0296
        gbc.setState(0xa311, 0xe574, 0x24a0, 0x4d60, 0x6c27, 0xf6c, 0x0, 0x0);
        gbc.writeMem(0xa311, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xe574);
        EXPECT(gbc.pc(), 0xa312);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa311), 0x60);
        // 60 0297
        gbc.setState(0xbde7, 0x740, 0xf3d0, 0xedf9, 0x8049, 0x69ab, 0x0, 0x0);
        gbc.writeMem(0xbde7, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x740);
        EXPECT(gbc.pc(), 0xbde8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbde7), 0x60);
        // 60 0298
        gbc.setState(0x6bff, 0x17c8, 0xe230, 0xda40, 0xe00b, 0xd5e9, 0x1, 0x1);
        gbc.writeMem(0x6bff, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x17c8);
        EXPECT(gbc.pc(), 0x6c00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0299
        gbc.setState(0x1dcd, 0x143f, 0xb350, 0xef0a, 0x3914, 0x8bef, 0x0, 0x0);
        gbc.writeMem(0x1dcd, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x143f);
        EXPECT(gbc.pc(), 0x1dce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 029A
        gbc.setState(0x6788, 0xe524, 0x6310, 0x2044, 0xea4b, 0x606f, 0x0, 0x1);
        gbc.writeMem(0x6788, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xe524);
        EXPECT(gbc.pc(), 0x6789);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 029B
        gbc.setState(0xd364, 0xa65b, 0xffa0, 0x34c, 0xce12, 0x556, 0x0, 0x0);
        gbc.writeMem(0xd364, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xa65b);
        EXPECT(gbc.pc(), 0xd365);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd364), 0x60);
        // 60 029C
        gbc.setState(0x2648, 0x3334, 0xc950, 0x9c1d, 0x221b, 0x72e8, 0x0, 0x0);
        gbc.writeMem(0x2648, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x3334);
        EXPECT(gbc.pc(), 0x2649);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 029E
        gbc.setState(0x167, 0x18b7, 0x2aa0, 0xc27d, 0x8972, 0x7a01, 0x1, 0x1);
        gbc.writeMem(0x167, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x18b7);
        EXPECT(gbc.pc(), 0x168);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 02A0
        gbc.setState(0x7784, 0x7a44, 0x58a0, 0xb293, 0xed7b, 0xb080, 0x0, 0x0);
        gbc.writeMem(0x7784, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x7a44);
        EXPECT(gbc.pc(), 0x7785);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 02A1
        gbc.setState(0xcc52, 0x20d, 0x4130, 0xcf13, 0xfff, 0x74a6, 0x1, 0x1);
        gbc.writeMem(0xcc52, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x20d);
        EXPECT(gbc.pc(), 0xcc53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc52), 0x60);
        // 60 02A2
        gbc.setState(0xafd9, 0x197f, 0xb160, 0xcca1, 0x4146, 0x9a8a, 0x0, 0x0);
        gbc.writeMem(0xafd9, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x197f);
        EXPECT(gbc.pc(), 0xafda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafd9), 0x60);
        // 60 02A3
        gbc.setState(0x3925, 0x70d1, 0xe7e0, 0x1de8, 0x8359, 0x1c11, 0x1, 0x0);
        gbc.writeMem(0x3925, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x70d1);
        EXPECT(gbc.pc(), 0x3926);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 02A4
        gbc.setState(0xd355, 0xe245, 0xf440, 0xe5c2, 0x95e5, 0x4a64, 0x1, 0x0);
        gbc.writeMem(0xd355, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xe245);
        EXPECT(gbc.pc(), 0xd356);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd355), 0x60);
        // 60 02A5
        gbc.setState(0x751b, 0xa712, 0x6a40, 0x47c3, 0x4a03, 0xec48, 0x0, 0x1);
        gbc.writeMem(0x751b, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xa712);
        EXPECT(gbc.pc(), 0x751c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 02A6
        gbc.setState(0xd432, 0xb694, 0x3340, 0xd830, 0x5cd4, 0x6ee6, 0x0, 0x1);
        gbc.writeMem(0xd432, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xb694);
        EXPECT(gbc.pc(), 0xd433);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd432), 0x60);
        // 60 02A7
        gbc.setState(0x2e84, 0x545, 0xf7d0, 0xe1b2, 0x29ad, 0xcf9d, 0x0, 0x1);
        gbc.writeMem(0x2e84, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x545);
        EXPECT(gbc.pc(), 0x2e85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 02A8
        gbc.setState(0xb128, 0x9f5, 0xa980, 0xd5ee, 0x3bfa, 0xe93a, 0x1, 0x0);
        gbc.writeMem(0xb128, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x9f5);
        EXPECT(gbc.pc(), 0xb129);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb128), 0x60);
        // 60 02A9
        gbc.setState(0xb1f3, 0x6504, 0x6860, 0xf90c, 0x2056, 0xaff, 0x0, 0x1);
        gbc.writeMem(0xb1f3, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x6504);
        EXPECT(gbc.pc(), 0xb1f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1f3), 0x60);
        // 60 02AA
        gbc.setState(0xa9a4, 0x11d1, 0x8ba0, 0xc416, 0xdacb, 0xd00c, 0x1, 0x0);
        gbc.writeMem(0xa9a4, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x11d1);
        EXPECT(gbc.pc(), 0xa9a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9a4), 0x60);
        // 60 02AB
        gbc.setState(0x60c3, 0x1874, 0x9700, 0x480c, 0x82d3, 0xa446, 0x1, 0x0);
        gbc.writeMem(0x60c3, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x1874);
        EXPECT(gbc.pc(), 0x60c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 02AC
        gbc.setState(0xd6e9, 0x4e40, 0x8200, 0xb77e, 0x51d, 0xc81d, 0x1, 0x1);
        gbc.writeMem(0xd6e9, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x4e40);
        EXPECT(gbc.pc(), 0xd6ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6e9), 0x60);
        // 60 02AD
        gbc.setState(0x2c66, 0xf807, 0xbf0, 0x2d29, 0x4ec1, 0xd2f9, 0x0, 0x1);
        gbc.writeMem(0x2c66, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xf807);
        EXPECT(gbc.pc(), 0x2c67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 02AE
        gbc.setState(0x5ba0, 0x807e, 0xa1d0, 0xaccc, 0x4f0c, 0x1e51, 0x1, 0x0);
        gbc.writeMem(0x5ba0, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x807e);
        EXPECT(gbc.pc(), 0x5ba1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 02AF
        gbc.setState(0x713e, 0xda7c, 0xc460, 0x3d30, 0xff18, 0x1215, 0x1, 0x0);
        gbc.writeMem(0x713e, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xda7c);
        EXPECT(gbc.pc(), 0x713f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 02B1
        gbc.setState(0x14ce, 0xbceb, 0x8280, 0x56dd, 0xa49e, 0x647f, 0x1, 0x1);
        gbc.writeMem(0x14ce, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xbceb);
        EXPECT(gbc.pc(), 0x14cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 02B2
        gbc.setState(0x50cb, 0x8ebf, 0x7ca0, 0x12e7, 0x5493, 0x3f35, 0x1, 0x1);
        gbc.writeMem(0x50cb, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x8ebf);
        EXPECT(gbc.pc(), 0x50cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 02B3
        gbc.setState(0xe708, 0x432, 0x7c30, 0xb2e8, 0x97dc, 0x8dfd, 0x0, 0x0);
        gbc.writeMem(0xe708, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x432);
        EXPECT(gbc.pc(), 0xe709);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe708), 0x60);
        // 60 02B4
        gbc.setState(0x804e, 0x7a9e, 0x6480, 0xd221, 0xfd01, 0x4adb, 0x1, 0x0);
        gbc.writeMem(0x804e, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x7a9e);
        EXPECT(gbc.pc(), 0x804f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x804e), 0x60);
        // 60 02B5
        gbc.setState(0x5fc8, 0xd3ec, 0xe160, 0x7cef, 0x2bd3, 0xfbf, 0x1, 0x1);
        gbc.writeMem(0x5fc8, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xd3ec);
        EXPECT(gbc.pc(), 0x5fc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 02B6
        gbc.setState(0x1358, 0x527e, 0x80f0, 0xc374, 0xeae0, 0xb56, 0x0, 0x1);
        gbc.writeMem(0x1358, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x527e);
        EXPECT(gbc.pc(), 0x1359);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 02B7
        gbc.setState(0x5a64, 0x922f, 0xd730, 0xc72d, 0x9bfb, 0xd78a, 0x1, 0x0);
        gbc.writeMem(0x5a64, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x922f);
        EXPECT(gbc.pc(), 0x5a65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 02B8
        gbc.setState(0x1745, 0xa1cf, 0x550, 0x4a43, 0x9ce0, 0xeaf0, 0x0, 0x0);
        gbc.writeMem(0x1745, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xa1cf);
        EXPECT(gbc.pc(), 0x1746);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 02B9
        gbc.setState(0x74c6, 0x3b80, 0x4ce0, 0xdcb0, 0x1e4c, 0x30a1, 0x0, 0x0);
        gbc.writeMem(0x74c6, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x3b80);
        EXPECT(gbc.pc(), 0x74c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 02BA
        gbc.setState(0xeefd, 0x7ac5, 0x41f0, 0x3b98, 0x8cd8, 0x7d44, 0x0, 0x1);
        gbc.writeMem(0xeefd, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x7ac5);
        EXPECT(gbc.pc(), 0xeefe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeefd), 0x60);
        // 60 02BB
        gbc.setState(0xcb08, 0x4626, 0xa500, 0xe7a5, 0x223c, 0xab79, 0x1, 0x0);
        gbc.writeMem(0xcb08, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x4626);
        EXPECT(gbc.pc(), 0xcb09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb08), 0x60);
        // 60 02BC
        gbc.setState(0xd5b9, 0xc715, 0xd6b0, 0x3782, 0x524d, 0x4502, 0x1, 0x1);
        gbc.writeMem(0xd5b9, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xc715);
        EXPECT(gbc.pc(), 0xd5ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5b9), 0x60);
        // 60 02BD
        gbc.setState(0x75b6, 0x7ea9, 0xc540, 0xbb0b, 0x51f9, 0xab21, 0x1, 0x0);
        gbc.writeMem(0x75b6, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x7ea9);
        EXPECT(gbc.pc(), 0x75b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 02BE
        gbc.setState(0x657a, 0x4bb3, 0xda00, 0x163f, 0xdd86, 0xfff8, 0x1, 0x1);
        gbc.writeMem(0x657a, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x4bb3);
        EXPECT(gbc.pc(), 0x657b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 02BF
        gbc.setState(0x5bdb, 0x2f1b, 0x6600, 0x2dfc, 0x5511, 0x14e9, 0x1, 0x1);
        gbc.writeMem(0x5bdb, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x2f1b);
        EXPECT(gbc.pc(), 0x5bdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 02C0
        gbc.setState(0x3d34, 0xbf02, 0x9d80, 0x9d98, 0xd4cf, 0xaade, 0x0, 0x0);
        gbc.writeMem(0x3d34, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xbf02);
        EXPECT(gbc.pc(), 0x3d35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 02C1
        gbc.setState(0x6b33, 0x3647, 0xef20, 0x7536, 0x5ff9, 0xe367, 0x1, 0x1);
        gbc.writeMem(0x6b33, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x3647);
        EXPECT(gbc.pc(), 0x6b34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 02C2
        gbc.setState(0x94be, 0x3842, 0xd9b0, 0xbcf0, 0x292d, 0x6aa1, 0x1, 0x0);
        gbc.writeMem(0x94be, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x3842);
        EXPECT(gbc.pc(), 0x94bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94be), 0x60);
        // 60 02C3
        gbc.setState(0xd7bf, 0xe208, 0x6720, 0xe672, 0x4650, 0xd240, 0x0, 0x0);
        gbc.writeMem(0xd7bf, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xe208);
        EXPECT(gbc.pc(), 0xd7c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7bf), 0x60);
        // 60 02C4
        gbc.setState(0x8cf2, 0xeff7, 0xfd00, 0x273a, 0x4e44, 0xd9f3, 0x1, 0x1);
        gbc.writeMem(0x8cf2, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xeff7);
        EXPECT(gbc.pc(), 0x8cf3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cf2), 0x60);
        // 60 02C5
        gbc.setState(0x8791, 0xe055, 0x4db0, 0xdbab, 0xd644, 0x480e, 0x1, 0x1);
        gbc.writeMem(0x8791, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xe055);
        EXPECT(gbc.pc(), 0x8792);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8791), 0x60);
        // 60 02C6
        gbc.setState(0xc95, 0x1c44, 0x3bb0, 0x43ed, 0xc708, 0x7120, 0x1, 0x0);
        gbc.writeMem(0xc95, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x1c44);
        EXPECT(gbc.pc(), 0xc96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 02C7
        gbc.setState(0x36fa, 0x37bf, 0xe10, 0x220c, 0xb16e, 0xa33f, 0x0, 0x0);
        gbc.writeMem(0x36fa, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x37bf);
        EXPECT(gbc.pc(), 0x36fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 02C8
        gbc.setState(0xed9f, 0x9f19, 0x3af0, 0x2be4, 0xc399, 0x5e13, 0x0, 0x0);
        gbc.writeMem(0xed9f, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x9f19);
        EXPECT(gbc.pc(), 0xeda0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed9f), 0x60);
        // 60 02C9
        gbc.setState(0x3484, 0xd8f5, 0x3370, 0x2af6, 0x3f4, 0xbb9c, 0x0, 0x1);
        gbc.writeMem(0x3484, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xd8f5);
        EXPECT(gbc.pc(), 0x3485);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 02CA
        gbc.setState(0x6c8, 0xc0af, 0x1000, 0x34a9, 0x30f6, 0xbcc6, 0x1, 0x1);
        gbc.writeMem(0x6c8, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xc0af);
        EXPECT(gbc.pc(), 0x6c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 02CB
        gbc.setState(0x848, 0xf7b1, 0xa570, 0x3d2e, 0xb169, 0x6784, 0x0, 0x0);
        gbc.writeMem(0x848, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xf7b1);
        EXPECT(gbc.pc(), 0x849);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 02CC
        gbc.setState(0xc53b, 0xf14d, 0xf310, 0xea86, 0x6b9e, 0xa6f6, 0x0, 0x0);
        gbc.writeMem(0xc53b, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xf14d);
        EXPECT(gbc.pc(), 0xc53c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc53b), 0x60);
        // 60 02CD
        gbc.setState(0xa14, 0xd128, 0x8570, 0xff05, 0xee11, 0x6d52, 0x1, 0x0);
        gbc.writeMem(0xa14, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xd128);
        EXPECT(gbc.pc(), 0xa15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 02CE
        gbc.setState(0x4b85, 0xe746, 0x6c0, 0x41af, 0x16e3, 0xcbef, 0x1, 0x1);
        gbc.writeMem(0x4b85, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xe746);
        EXPECT(gbc.pc(), 0x4b86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 02CF
        gbc.setState(0x7599, 0x1194, 0xc1c0, 0x2693, 0xd3d7, 0xfdee, 0x1, 0x0);
        gbc.writeMem(0x7599, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x1194);
        EXPECT(gbc.pc(), 0x759a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 02D0
        gbc.setState(0xd43f, 0xdeb, 0xd970, 0x7396, 0x9e35, 0x6cf7, 0x1, 0x0);
        gbc.writeMem(0xd43f, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xdeb);
        EXPECT(gbc.pc(), 0xd440);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd43f), 0x60);
        // 60 02D1
        gbc.setState(0xc13d, 0x54f3, 0x7900, 0x75a0, 0x2048, 0x86b3, 0x1, 0x1);
        gbc.writeMem(0xc13d, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x54f3);
        EXPECT(gbc.pc(), 0xc13e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc13d), 0x60);
        // 60 02D2
        gbc.setState(0xbbb5, 0x518, 0xc090, 0x6cab, 0x1a26, 0x92a8, 0x1, 0x1);
        gbc.writeMem(0xbbb5, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x518);
        EXPECT(gbc.pc(), 0xbbb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbb5), 0x60);
        // 60 02D3
        gbc.setState(0x18cd, 0x7975, 0x34b0, 0xc880, 0xda71, 0x21cf, 0x0, 0x0);
        gbc.writeMem(0x18cd, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x7975);
        EXPECT(gbc.pc(), 0x18ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 02D4
        gbc.setState(0x72e7, 0x3afc, 0x9540, 0xb4fe, 0xde87, 0x4f2a, 0x0, 0x1);
        gbc.writeMem(0x72e7, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x3afc);
        EXPECT(gbc.pc(), 0x72e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 02D5
        gbc.setState(0x6a56, 0x9fb9, 0xf120, 0x456e, 0x6933, 0x7f00, 0x0, 0x0);
        gbc.writeMem(0x6a56, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x9fb9);
        EXPECT(gbc.pc(), 0x6a57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 02D6
        gbc.setState(0x2319, 0x9feb, 0xab30, 0xba, 0xf8de, 0x331e, 0x1, 0x1);
        gbc.writeMem(0x2319, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x9feb);
        EXPECT(gbc.pc(), 0x231a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 02D7
        gbc.setState(0xaec1, 0xe1a5, 0x73e0, 0xcc39, 0xd893, 0x3236, 0x0, 0x1);
        gbc.writeMem(0xaec1, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xe1a5);
        EXPECT(gbc.pc(), 0xaec2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaec1), 0x60);
        // 60 02D8
        gbc.setState(0x9d38, 0xd4c6, 0x9480, 0xd5e, 0x9a13, 0xbc9, 0x0, 0x1);
        gbc.writeMem(0x9d38, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xd4c6);
        EXPECT(gbc.pc(), 0x9d39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d38), 0x60);
        // 60 02D9
        gbc.setState(0xd5db, 0xadef, 0xb080, 0x61d4, 0x9299, 0x6d96, 0x0, 0x1);
        gbc.writeMem(0xd5db, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xadef);
        EXPECT(gbc.pc(), 0xd5dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5db), 0x60);
        // 60 02DA
        gbc.setState(0x6549, 0xf82f, 0x40e0, 0x81a9, 0x35f3, 0x3910, 0x1, 0x1);
        gbc.writeMem(0x6549, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xf82f);
        EXPECT(gbc.pc(), 0x654a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 02DB
        gbc.setState(0x24bb, 0xafe5, 0x7e0, 0x3b28, 0x551a, 0xbf45, 0x1, 0x1);
        gbc.writeMem(0x24bb, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xafe5);
        EXPECT(gbc.pc(), 0x24bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 02DC
        gbc.setState(0xdf8a, 0x80ea, 0xbde0, 0x7f6e, 0x6639, 0xbf8c, 0x1, 0x0);
        gbc.writeMem(0xdf8a, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x80ea);
        EXPECT(gbc.pc(), 0xdf8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf8a), 0x60);
        // 60 02DE
        gbc.setState(0x5e2, 0xe1ba, 0x3340, 0xef1f, 0x53ec, 0x7de5, 0x1, 0x0);
        gbc.writeMem(0x5e2, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xe1ba);
        EXPECT(gbc.pc(), 0x5e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 02DF
        gbc.setState(0x8b67, 0x3cf4, 0xbe90, 0xcd26, 0x1228, 0x7b3b, 0x1, 0x1);
        gbc.writeMem(0x8b67, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x3cf4);
        EXPECT(gbc.pc(), 0x8b68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b67), 0x60);
        // 60 02E0
        gbc.setState(0xe833, 0x8e32, 0xc30, 0x499c, 0xbd18, 0x6464, 0x1, 0x0);
        gbc.writeMem(0xe833, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x8e32);
        EXPECT(gbc.pc(), 0xe834);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe833), 0x60);
        // 60 02E1
        gbc.setState(0x4977, 0x9080, 0x6270, 0x6e5, 0xd87e, 0xa233, 0x0, 0x1);
        gbc.writeMem(0x4977, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x9080);
        EXPECT(gbc.pc(), 0x4978);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 02E2
        gbc.setState(0x8f88, 0xd017, 0x1a80, 0xe72, 0xa8fa, 0xd8f2, 0x1, 0x0);
        gbc.writeMem(0x8f88, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xd017);
        EXPECT(gbc.pc(), 0x8f89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f88), 0x60);
        // 60 02E3
        gbc.setState(0x14c3, 0xabbc, 0x8950, 0x4171, 0xd5f6, 0xcf06, 0x1, 0x0);
        gbc.writeMem(0x14c3, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xabbc);
        EXPECT(gbc.pc(), 0x14c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 02E4
        gbc.setState(0x9cf7, 0xccd3, 0xb890, 0x3f27, 0xcf39, 0x982d, 0x0, 0x0);
        gbc.writeMem(0x9cf7, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xccd3);
        EXPECT(gbc.pc(), 0x9cf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cf7), 0x60);
        // 60 02E5
        gbc.setState(0xa99, 0x3185, 0xa1a0, 0xb69, 0xcdeb, 0x4ca3, 0x1, 0x0);
        gbc.writeMem(0xa99, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x3185);
        EXPECT(gbc.pc(), 0xa9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 02E6
        gbc.setState(0xcff0, 0x26ea, 0x230, 0x2380, 0x5418, 0xe503, 0x0, 0x1);
        gbc.writeMem(0xcff0, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x26ea);
        EXPECT(gbc.pc(), 0xcff1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcff0), 0x60);
        // 60 02E7
        gbc.setState(0x9cb2, 0x78ba, 0x2be0, 0xd983, 0x7133, 0x533d, 0x1, 0x1);
        gbc.writeMem(0x9cb2, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x78ba);
        EXPECT(gbc.pc(), 0x9cb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cb2), 0x60);
        // 60 02E8
        gbc.setState(0x96e5, 0x9d2b, 0x92c0, 0x3761, 0x7633, 0xe6bf, 0x1, 0x0);
        gbc.writeMem(0x96e5, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x9d2b);
        EXPECT(gbc.pc(), 0x96e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96e5), 0x60);
        // 60 02EA
        gbc.setState(0x99e4, 0x9cc1, 0x4270, 0xf824, 0x3066, 0x273d, 0x0, 0x0);
        gbc.writeMem(0x99e4, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x9cc1);
        EXPECT(gbc.pc(), 0x99e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99e4), 0x60);
        // 60 02EB
        gbc.setState(0x2f57, 0x122a, 0x32b0, 0x6a0a, 0xe07c, 0x8953, 0x1, 0x0);
        gbc.writeMem(0x2f57, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x122a);
        EXPECT(gbc.pc(), 0x2f58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 02EC
        gbc.setState(0x8a3c, 0x5a73, 0x2980, 0x5fe9, 0x2cf3, 0x30d, 0x1, 0x0);
        gbc.writeMem(0x8a3c, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x5a73);
        EXPECT(gbc.pc(), 0x8a3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a3c), 0x60);
        // 60 02ED
        gbc.setState(0x2bf3, 0xd09b, 0x2460, 0x9912, 0x8a61, 0x18f6, 0x0, 0x1);
        gbc.writeMem(0x2bf3, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xd09b);
        EXPECT(gbc.pc(), 0x2bf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 02EE
        gbc.setState(0xb855, 0x3d86, 0x3730, 0xcb32, 0xb6d1, 0xfc0f, 0x0, 0x1);
        gbc.writeMem(0xb855, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x3d86);
        EXPECT(gbc.pc(), 0xb856);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb855), 0x60);
        // 60 02EF
        gbc.setState(0x8c2f, 0x5d18, 0x6600, 0xbcf6, 0x7274, 0x7483, 0x1, 0x1);
        gbc.writeMem(0x8c2f, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x5d18);
        EXPECT(gbc.pc(), 0x8c30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c2f), 0x60);
        // 60 02F0
        gbc.setState(0x329, 0xc1d1, 0xf080, 0xa51e, 0x86ac, 0xef70, 0x0, 0x1);
        gbc.writeMem(0x329, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xc1d1);
        EXPECT(gbc.pc(), 0x32a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 02F1
        gbc.setState(0xbc3c, 0xd60f, 0x590, 0xe5e8, 0xf39f, 0xc6c8, 0x1, 0x0);
        gbc.writeMem(0xbc3c, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xd60f);
        EXPECT(gbc.pc(), 0xbc3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc3c), 0x60);
        // 60 02F2
        gbc.setState(0x1385, 0x6c7, 0xeb10, 0x3255, 0xe009, 0xf19f, 0x1, 0x0);
        gbc.writeMem(0x1385, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x6c7);
        EXPECT(gbc.pc(), 0x1386);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 02F4
        gbc.setState(0xef9c, 0x50e2, 0x8090, 0xb11b, 0xde28, 0x48c7, 0x0, 0x0);
        gbc.writeMem(0xef9c, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x50e2);
        EXPECT(gbc.pc(), 0xef9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef9c), 0x60);
        // 60 02F5
        gbc.setState(0xce04, 0xbcd1, 0x7400, 0xc10d, 0xbeb7, 0xca81, 0x1, 0x0);
        gbc.writeMem(0xce04, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xbcd1);
        EXPECT(gbc.pc(), 0xce05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce04), 0x60);
        // 60 02F6
        gbc.setState(0x6505, 0x7e98, 0x7c0, 0x8dbb, 0x4e53, 0x40ee, 0x1, 0x1);
        gbc.writeMem(0x6505, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x7e98);
        EXPECT(gbc.pc(), 0x6506);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 02F7
        gbc.setState(0x507, 0x56d, 0x8eb0, 0x1621, 0x5c0a, 0x183c, 0x1, 0x1);
        gbc.writeMem(0x507, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x56d);
        EXPECT(gbc.pc(), 0x508);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 02F8
        gbc.setState(0x99, 0xd61f, 0xaa0, 0x735d, 0xd42d, 0x49ba, 0x1, 0x0);
        gbc.writeMem(0x99, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xd61f);
        EXPECT(gbc.pc(), 0x9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 02F9
        gbc.setState(0x15e8, 0x5e, 0x31f0, 0xeb59, 0xe07c, 0x4dbd, 0x0, 0x1);
        gbc.writeMem(0x15e8, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x5e);
        EXPECT(gbc.pc(), 0x15e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 02FA
        gbc.setState(0xcf57, 0xf80b, 0xca20, 0x86b6, 0x6873, 0xca60, 0x0, 0x0);
        gbc.writeMem(0xcf57, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xf80b);
        EXPECT(gbc.pc(), 0xcf58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf57), 0x60);
        // 60 02FB
        gbc.setState(0x6851, 0xdc12, 0xc400, 0x31e, 0xda5c, 0x26e8, 0x1, 0x0);
        gbc.writeMem(0x6851, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xdc12);
        EXPECT(gbc.pc(), 0x6852);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 02FC
        gbc.setState(0x62ee, 0x63bf, 0xe4f0, 0x745f, 0xa138, 0x640f, 0x1, 0x1);
        gbc.writeMem(0x62ee, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x63bf);
        EXPECT(gbc.pc(), 0x62ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 02FD
        gbc.setState(0x6768, 0xf8e1, 0x82a0, 0xc97c, 0xeea6, 0x9e8d, 0x1, 0x0);
        gbc.writeMem(0x6768, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xf8e1);
        EXPECT(gbc.pc(), 0x6769);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 02FE
        gbc.setState(0x22f8, 0x8c72, 0x3590, 0x2fa1, 0xbfa1, 0x82c1, 0x1, 0x1);
        gbc.writeMem(0x22f8, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x8c72);
        EXPECT(gbc.pc(), 0x22f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 02FF
        gbc.setState(0xb676, 0xdacf, 0x6ec0, 0x5b21, 0x3b0c, 0x7cd5, 0x1, 0x0);
        gbc.writeMem(0xb676, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xdacf);
        EXPECT(gbc.pc(), 0xb677);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb676), 0x60);
        // 60 0300
        gbc.setState(0xced7, 0xe85e, 0x2c70, 0x26ca, 0xb365, 0x1169, 0x1, 0x0);
        gbc.writeMem(0xced7, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xe85e);
        EXPECT(gbc.pc(), 0xced8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xced7), 0x60);
        // 60 0301
        gbc.setState(0xcce9, 0xe07b, 0x9870, 0x5287, 0xd4c, 0x98e1, 0x1, 0x0);
        gbc.writeMem(0xcce9, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xe07b);
        EXPECT(gbc.pc(), 0xccea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcce9), 0x60);
        // 60 0302
        gbc.setState(0x1068, 0x17f7, 0x6460, 0x4c4c, 0x222b, 0x4092, 0x0, 0x1);
        gbc.writeMem(0x1068, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x17f7);
        EXPECT(gbc.pc(), 0x1069);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0304
        gbc.setState(0x8b2e, 0xbfe, 0x5960, 0x7ec0, 0x1557, 0x6867, 0x0, 0x1);
        gbc.writeMem(0x8b2e, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xbfe);
        EXPECT(gbc.pc(), 0x8b2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b2e), 0x60);
        // 60 0305
        gbc.setState(0xbc70, 0xaab8, 0x3ed0, 0x6521, 0x70af, 0xacc9, 0x0, 0x0);
        gbc.writeMem(0xbc70, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xaab8);
        EXPECT(gbc.pc(), 0xbc71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc70), 0x60);
        // 60 0306
        gbc.setState(0x1a66, 0x170, 0x3120, 0x6831, 0x84d0, 0x6153, 0x0, 0x1);
        gbc.writeMem(0x1a66, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x170);
        EXPECT(gbc.pc(), 0x1a67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0307
        gbc.setState(0x1088, 0x76a0, 0x2450, 0x1911, 0x5ba1, 0xf1c7, 0x0, 0x1);
        gbc.writeMem(0x1088, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x76a0);
        EXPECT(gbc.pc(), 0x1089);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 0308
        gbc.setState(0x193, 0xc583, 0x8c40, 0x2e8, 0x9d35, 0x2814, 0x1, 0x0);
        gbc.writeMem(0x193, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xc583);
        EXPECT(gbc.pc(), 0x194);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 0309
        gbc.setState(0xcc95, 0xa7d9, 0xa260, 0xc24a, 0x8ef7, 0x5302, 0x0, 0x0);
        gbc.writeMem(0xcc95, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xa7d9);
        EXPECT(gbc.pc(), 0xcc96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc95), 0x60);
        // 60 030A
        gbc.setState(0x895e, 0x6679, 0x56d0, 0x143b, 0x28b2, 0x47f9, 0x0, 0x0);
        gbc.writeMem(0x895e, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x6679);
        EXPECT(gbc.pc(), 0x895f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x895e), 0x60);
        // 60 030B
        gbc.setState(0xb923, 0xbfd3, 0x2990, 0x92e0, 0xbcf8, 0x25, 0x0, 0x1);
        gbc.writeMem(0xb923, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xbfd3);
        EXPECT(gbc.pc(), 0xb924);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb923), 0x60);
        // 60 030C
        gbc.setState(0x98f2, 0x92d9, 0x840, 0x6b15, 0xf3fe, 0x6259, 0x0, 0x1);
        gbc.writeMem(0x98f2, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x92d9);
        EXPECT(gbc.pc(), 0x98f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98f2), 0x60);
        // 60 030E
        gbc.setState(0x8ec6, 0x98a, 0x34f0, 0xc7d, 0xdfa, 0xa71d, 0x1, 0x0);
        gbc.writeMem(0x8ec6, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x98a);
        EXPECT(gbc.pc(), 0x8ec7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ec6), 0x60);
        // 60 030F
        gbc.setState(0xb863, 0xe49d, 0xf20, 0x2560, 0x3c69, 0x7e66, 0x1, 0x0);
        gbc.writeMem(0xb863, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xe49d);
        EXPECT(gbc.pc(), 0xb864);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb863), 0x60);
        // 60 0310
        gbc.setState(0x7cb, 0x642f, 0x4980, 0x9962, 0x25f0, 0x7030, 0x1, 0x1);
        gbc.writeMem(0x7cb, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x642f);
        EXPECT(gbc.pc(), 0x7cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 0311
        gbc.setState(0xa8da, 0xd909, 0x8570, 0xc44c, 0x6711, 0x395d, 0x0, 0x0);
        gbc.writeMem(0xa8da, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xd909);
        EXPECT(gbc.pc(), 0xa8db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8da), 0x60);
        // 60 0312
        gbc.setState(0x36e8, 0x8ebe, 0xcdf0, 0xd1e9, 0x6b9, 0x37ea, 0x1, 0x1);
        gbc.writeMem(0x36e8, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x8ebe);
        EXPECT(gbc.pc(), 0x36e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0313
        gbc.setState(0x7f55, 0x506c, 0x4810, 0x821f, 0xb822, 0x5275, 0x0, 0x1);
        gbc.writeMem(0x7f55, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x506c);
        EXPECT(gbc.pc(), 0x7f56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 0314
        gbc.setState(0xddab, 0x66db, 0x2c70, 0xb855, 0xfdde, 0x5a3a, 0x0, 0x1);
        gbc.writeMem(0xddab, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x66db);
        EXPECT(gbc.pc(), 0xddac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddab), 0x60);
        // 60 0316
        gbc.setState(0x38dc, 0x2a2c, 0x5cf0, 0xeb83, 0x1d0b, 0xb046, 0x0, 0x1);
        gbc.writeMem(0x38dc, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x2a2c);
        EXPECT(gbc.pc(), 0x38dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0317
        gbc.setState(0x1d0e, 0xe9c4, 0x4c60, 0x9d6a, 0xa370, 0xeaea, 0x1, 0x0);
        gbc.writeMem(0x1d0e, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xe9c4);
        EXPECT(gbc.pc(), 0x1d0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0318
        gbc.setState(0x1f69, 0xff84, 0x5c10, 0x31f6, 0xeaa4, 0xa1b5, 0x0, 0x0);
        gbc.writeMem(0x1f69, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xff84);
        EXPECT(gbc.pc(), 0x1f6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 0319
        gbc.setState(0xe023, 0x56cb, 0x5050, 0xcac3, 0x7993, 0xb580, 0x0, 0x1);
        gbc.writeMem(0xe023, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x56cb);
        EXPECT(gbc.pc(), 0xe024);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe023), 0x60);
        // 60 031A
        gbc.setState(0x5ec4, 0xc6c, 0xce10, 0xdf39, 0x56e8, 0x7cc, 0x0, 0x1);
        gbc.writeMem(0x5ec4, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xc6c);
        EXPECT(gbc.pc(), 0x5ec5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 031B
        gbc.setState(0x1ee4, 0xdada, 0x5850, 0xa494, 0xf1d7, 0xc0dc, 0x0, 0x0);
        gbc.writeMem(0x1ee4, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xdada);
        EXPECT(gbc.pc(), 0x1ee5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 031C
        gbc.setState(0xeca6, 0x741e, 0x8040, 0xfed9, 0xbbc1, 0xb3e4, 0x1, 0x1);
        gbc.writeMem(0xeca6, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x741e);
        EXPECT(gbc.pc(), 0xeca7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeca6), 0x60);
        // 60 031D
        gbc.setState(0xa813, 0x58df, 0x7f70, 0x1ed9, 0x287b, 0x2a49, 0x1, 0x0);
        gbc.writeMem(0xa813, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x58df);
        EXPECT(gbc.pc(), 0xa814);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa813), 0x60);
        // 60 031E
        gbc.setState(0x8da4, 0x3d5b, 0x1f50, 0xf3b8, 0x70c4, 0x5a8c, 0x0, 0x0);
        gbc.writeMem(0x8da4, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x3d5b);
        EXPECT(gbc.pc(), 0x8da5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8da4), 0x60);
        // 60 031F
        gbc.setState(0xde75, 0x6b6d, 0xf100, 0x6994, 0x74b5, 0xcb20, 0x0, 0x0);
        gbc.writeMem(0xde75, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x6b6d);
        EXPECT(gbc.pc(), 0xde76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde75), 0x60);
        // 60 0320
        gbc.setState(0x5c99, 0x4d78, 0x5380, 0x8ef5, 0xef11, 0x7f0, 0x1, 0x1);
        gbc.writeMem(0x5c99, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x4d78);
        EXPECT(gbc.pc(), 0x5c9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 0321
        gbc.setState(0x5345, 0x58ad, 0xc4d0, 0x1d5b, 0xa69a, 0xd2d9, 0x0, 0x0);
        gbc.writeMem(0x5345, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x58ad);
        EXPECT(gbc.pc(), 0x5346);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 0322
        gbc.setState(0x86a1, 0x5df4, 0xe3b0, 0x1b6c, 0x53c4, 0xfb77, 0x1, 0x1);
        gbc.writeMem(0x86a1, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x5df4);
        EXPECT(gbc.pc(), 0x86a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86a1), 0x60);
        // 60 0323
        gbc.setState(0xd4d0, 0x33ea, 0xc590, 0xe071, 0x4745, 0xb652, 0x1, 0x0);
        gbc.writeMem(0xd4d0, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x33ea);
        EXPECT(gbc.pc(), 0xd4d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4d0), 0x60);
        // 60 0324
        gbc.setState(0x1882, 0x6564, 0xb990, 0x39c3, 0xadda, 0x5896, 0x1, 0x0);
        gbc.writeMem(0x1882, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x6564);
        EXPECT(gbc.pc(), 0x1883);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 0325
        gbc.setState(0xadf1, 0x6ed4, 0xe350, 0x3faf, 0x2c5e, 0x736d, 0x0, 0x1);
        gbc.writeMem(0xadf1, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x6ed4);
        EXPECT(gbc.pc(), 0xadf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadf1), 0x60);
        // 60 0326
        gbc.setState(0x74a8, 0x712a, 0x5150, 0xe849, 0x4378, 0xe3d7, 0x1, 0x0);
        gbc.writeMem(0x74a8, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x712a);
        EXPECT(gbc.pc(), 0x74a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 0327
        gbc.setState(0x5964, 0x6d38, 0x3480, 0x4aab, 0xad7b, 0x7f02, 0x1, 0x0);
        gbc.writeMem(0x5964, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x6d38);
        EXPECT(gbc.pc(), 0x5965);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 0328
        gbc.setState(0xa4e3, 0xd91b, 0xd7b0, 0xffcb, 0xd16c, 0xcff6, 0x1, 0x1);
        gbc.writeMem(0xa4e3, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xd91b);
        EXPECT(gbc.pc(), 0xa4e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4e3), 0x60);
        // 60 0329
        gbc.setState(0x9e66, 0x210f, 0x39a0, 0x51fe, 0x3a2f, 0xaec6, 0x0, 0x0);
        gbc.writeMem(0x9e66, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x210f);
        EXPECT(gbc.pc(), 0x9e67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e66), 0x60);
        // 60 032A
        gbc.setState(0x83fd, 0xdacb, 0xc7e0, 0xd055, 0xdf33, 0xce37, 0x0, 0x0);
        gbc.writeMem(0x83fd, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xdacb);
        EXPECT(gbc.pc(), 0x83fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83fd), 0x60);
        // 60 032B
        gbc.setState(0xd82e, 0xf2e4, 0xe880, 0xb131, 0x2ac, 0x4874, 0x0, 0x1);
        gbc.writeMem(0xd82e, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xf2e4);
        EXPECT(gbc.pc(), 0xd82f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd82e), 0x60);
        // 60 032C
        gbc.setState(0x9fa3, 0xfae5, 0x5260, 0x9c9d, 0x9fb8, 0xe6d9, 0x1, 0x0);
        gbc.writeMem(0x9fa3, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xfae5);
        EXPECT(gbc.pc(), 0x9fa4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fa3), 0x60);
        // 60 032D
        gbc.setState(0x9798, 0xc3a5, 0x1540, 0x6019, 0x9cb3, 0xeef, 0x1, 0x1);
        gbc.writeMem(0x9798, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xc3a5);
        EXPECT(gbc.pc(), 0x9799);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9798), 0x60);
        // 60 032E
        gbc.setState(0x7a4a, 0x92a9, 0x3410, 0xb9c0, 0xe91c, 0xafb5, 0x1, 0x1);
        gbc.writeMem(0x7a4a, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x92a9);
        EXPECT(gbc.pc(), 0x7a4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 032F
        gbc.setState(0xd160, 0x52d0, 0x4720, 0x6ffc, 0x8a9b, 0x9a37, 0x0, 0x0);
        gbc.writeMem(0xd160, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x52d0);
        EXPECT(gbc.pc(), 0xd161);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd160), 0x60);
        // 60 0330
        gbc.setState(0x8, 0x9532, 0xd300, 0x958a, 0x9638, 0xaacb, 0x1, 0x0);
        gbc.writeMem(0x8, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x9532);
        EXPECT(gbc.pc(), 0x9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 0331
        gbc.setState(0x4421, 0x60d9, 0xbe50, 0xb818, 0x69f4, 0x3aa5, 0x0, 0x1);
        gbc.writeMem(0x4421, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x60d9);
        EXPECT(gbc.pc(), 0x4422);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 0332
        gbc.setState(0xee0b, 0x769d, 0x9270, 0xd79b, 0x87fb, 0x4dc3, 0x1, 0x1);
        gbc.writeMem(0xee0b, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x769d);
        EXPECT(gbc.pc(), 0xee0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee0b), 0x60);
        // 60 0333
        gbc.setState(0xee10, 0xfbe9, 0x0, 0x32b3, 0x16b8, 0xe6cf, 0x0, 0x1);
        gbc.writeMem(0xee10, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xfbe9);
        EXPECT(gbc.pc(), 0xee11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee10), 0x60);
        // 60 0334
        gbc.setState(0x14f9, 0x110a, 0x71e0, 0xfb28, 0x2ba0, 0x3659, 0x0, 0x1);
        gbc.writeMem(0x14f9, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x110a);
        EXPECT(gbc.pc(), 0x14fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0335
        gbc.setState(0xd28e, 0xa5b5, 0x5030, 0xe225, 0x5010, 0xafd1, 0x0, 0x0);
        gbc.writeMem(0xd28e, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xa5b5);
        EXPECT(gbc.pc(), 0xd28f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd28e), 0x60);
        // 60 0336
        gbc.setState(0x9183, 0x5c5d, 0x2460, 0x44a2, 0xdaae, 0xcc61, 0x1, 0x0);
        gbc.writeMem(0x9183, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x5c5d);
        EXPECT(gbc.pc(), 0x9184);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9183), 0x60);
        // 60 0337
        gbc.setState(0x80c0, 0x7816, 0x2aa0, 0xf88b, 0x9fcd, 0xc60, 0x0, 0x0);
        gbc.writeMem(0x80c0, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x7816);
        EXPECT(gbc.pc(), 0x80c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80c0), 0x60);
        // 60 0338
        gbc.setState(0x5f7c, 0xf80c, 0xa460, 0x81cf, 0xa6fa, 0x82e, 0x0, 0x0);
        gbc.writeMem(0x5f7c, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xf80c);
        EXPECT(gbc.pc(), 0x5f7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0339
        gbc.setState(0x269e, 0x4209, 0xf020, 0xb2ff, 0xed47, 0x9280, 0x1, 0x0);
        gbc.writeMem(0x269e, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x4209);
        EXPECT(gbc.pc(), 0x269f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 033A
        gbc.setState(0xe7ac, 0xaa60, 0x4c50, 0x62f2, 0x247b, 0x5b5e, 0x1, 0x1);
        gbc.writeMem(0xe7ac, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xaa60);
        EXPECT(gbc.pc(), 0xe7ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7ac), 0x60);
        // 60 033B
        gbc.setState(0xb917, 0xceff, 0x230, 0x45a9, 0x149c, 0xeea5, 0x0, 0x0);
        gbc.writeMem(0xb917, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xceff);
        EXPECT(gbc.pc(), 0xb918);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb917), 0x60);
        // 60 033C
        gbc.setState(0x9f45, 0xb1f4, 0xd910, 0x389a, 0xe27f, 0xe7e0, 0x0, 0x0);
        gbc.writeMem(0x9f45, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xb1f4);
        EXPECT(gbc.pc(), 0x9f46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f45), 0x60);
        // 60 033D
        gbc.setState(0xec75, 0x435, 0x9470, 0xbb2e, 0x3be8, 0x3634, 0x0, 0x1);
        gbc.writeMem(0xec75, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x435);
        EXPECT(gbc.pc(), 0xec76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec75), 0x60);
        // 60 033E
        gbc.setState(0xd702, 0xec37, 0xc980, 0xa64c, 0x3793, 0x406d, 0x0, 0x0);
        gbc.writeMem(0xd702, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xec37);
        EXPECT(gbc.pc(), 0xd703);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd702), 0x60);
        // 60 033F
        gbc.setState(0xd4e2, 0xc284, 0x980, 0x1ae4, 0x8c57, 0xb35e, 0x1, 0x1);
        gbc.writeMem(0xd4e2, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xc284);
        EXPECT(gbc.pc(), 0xd4e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4e2), 0x60);
        // 60 0340
        gbc.setState(0x8f27, 0x5d68, 0xc530, 0xf434, 0xe439, 0xc5e6, 0x1, 0x0);
        gbc.writeMem(0x8f27, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x5d68);
        EXPECT(gbc.pc(), 0x8f28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f27), 0x60);
        // 60 0341
        gbc.setState(0x3a1e, 0x6abc, 0x57c0, 0xde6b, 0x24c7, 0xc05b, 0x1, 0x0);
        gbc.writeMem(0x3a1e, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x6abc);
        EXPECT(gbc.pc(), 0x3a1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 0342
        gbc.setState(0xc59e, 0x8f78, 0x14e0, 0xe13f, 0x5124, 0xf3c7, 0x0, 0x1);
        gbc.writeMem(0xc59e, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x8f78);
        EXPECT(gbc.pc(), 0xc59f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc59e), 0x60);
        // 60 0343
        gbc.setState(0x6d5e, 0x9386, 0x840, 0xf857, 0x1323, 0x96fa, 0x0, 0x1);
        gbc.writeMem(0x6d5e, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x9386);
        EXPECT(gbc.pc(), 0x6d5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 0344
        gbc.setState(0x3b18, 0xee94, 0x5e00, 0xfe75, 0x1a35, 0xa93, 0x0, 0x1);
        gbc.writeMem(0x3b18, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xee94);
        EXPECT(gbc.pc(), 0x3b19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 0345
        gbc.setState(0xde11, 0x87d1, 0x1310, 0x4f82, 0xcbca, 0xfbb0, 0x1, 0x0);
        gbc.writeMem(0xde11, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x87d1);
        EXPECT(gbc.pc(), 0xde12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde11), 0x60);
        // 60 0346
        gbc.setState(0xe7f6, 0x24f3, 0x37d0, 0xe8de, 0x70d1, 0x67b9, 0x0, 0x0);
        gbc.writeMem(0xe7f6, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x24f3);
        EXPECT(gbc.pc(), 0xe7f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7f6), 0x60);
        // 60 0347
        gbc.setState(0x72ef, 0x88f0, 0x2f0, 0x333b, 0xac4e, 0x8bec, 0x1, 0x1);
        gbc.writeMem(0x72ef, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x88f0);
        EXPECT(gbc.pc(), 0x72f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0348
        gbc.setState(0x6787, 0x6d8a, 0x360, 0x687d, 0x726b, 0x873d, 0x1, 0x0);
        gbc.writeMem(0x6787, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x6d8a);
        EXPECT(gbc.pc(), 0x6788);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0349
        gbc.setState(0x8479, 0xacd1, 0x9010, 0x81b1, 0x660d, 0x9b80, 0x1, 0x0);
        gbc.writeMem(0x8479, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xacd1);
        EXPECT(gbc.pc(), 0x847a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8479), 0x60);
        // 60 034A
        gbc.setState(0xbe1, 0x9c46, 0x70b0, 0xb383, 0xbcde, 0xf5b3, 0x1, 0x0);
        gbc.writeMem(0xbe1, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x9c46);
        EXPECT(gbc.pc(), 0xbe2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 034B
        gbc.setState(0x780e, 0xafc3, 0xe6e0, 0xdfdf, 0x7628, 0x70c, 0x1, 0x1);
        gbc.writeMem(0x780e, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xafc3);
        EXPECT(gbc.pc(), 0x780f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 034C
        gbc.setState(0x50ab, 0x721, 0x82d0, 0xc76, 0xa277, 0x94ce, 0x0, 0x0);
        gbc.writeMem(0x50ab, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x721);
        EXPECT(gbc.pc(), 0x50ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 034D
        gbc.setState(0xd378, 0x2854, 0xe0e0, 0xceb, 0x44a7, 0x85b5, 0x1, 0x1);
        gbc.writeMem(0xd378, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x2854);
        EXPECT(gbc.pc(), 0xd379);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd378), 0x60);
        // 60 034E
        gbc.setState(0x92ab, 0x226e, 0x9360, 0x27bc, 0x2c02, 0x73a9, 0x1, 0x0);
        gbc.writeMem(0x92ab, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x226e);
        EXPECT(gbc.pc(), 0x92ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92ab), 0x60);
        // 60 034F
        gbc.setState(0x305b, 0x43f1, 0xa190, 0xa72, 0x61d7, 0x5b21, 0x0, 0x0);
        gbc.writeMem(0x305b, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x43f1);
        EXPECT(gbc.pc(), 0x305c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 0350
        gbc.setState(0x8a54, 0xf544, 0x5050, 0x1ae5, 0xfaa4, 0x1cc4, 0x0, 0x0);
        gbc.writeMem(0x8a54, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xf544);
        EXPECT(gbc.pc(), 0x8a55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a54), 0x60);
        // 60 0351
        gbc.setState(0x5384, 0x2149, 0xf470, 0xf4d5, 0x3992, 0x5536, 0x0, 0x0);
        gbc.writeMem(0x5384, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x2149);
        EXPECT(gbc.pc(), 0x5385);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0353
        gbc.setState(0x22ae, 0x6806, 0xb350, 0x5ba1, 0x68a4, 0x95d6, 0x1, 0x1);
        gbc.writeMem(0x22ae, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x6806);
        EXPECT(gbc.pc(), 0x22af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 0354
        gbc.setState(0x2284, 0x1ccb, 0x7770, 0x1924, 0x5859, 0x4597, 0x1, 0x1);
        gbc.writeMem(0x2284, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x1ccb);
        EXPECT(gbc.pc(), 0x2285);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0355
        gbc.setState(0xe1c5, 0x793c, 0x1100, 0xf710, 0xa91b, 0xca4b, 0x0, 0x0);
        gbc.writeMem(0xe1c5, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x793c);
        EXPECT(gbc.pc(), 0xe1c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1c5), 0x60);
        // 60 0356
        gbc.setState(0x27f6, 0x706e, 0x7420, 0x57ef, 0x88f2, 0x75ab, 0x1, 0x1);
        gbc.writeMem(0x27f6, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x706e);
        EXPECT(gbc.pc(), 0x27f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0357
        gbc.setState(0x1ccc, 0x99d3, 0x3ee0, 0xcda, 0xa6e5, 0xe2e8, 0x1, 0x0);
        gbc.writeMem(0x1ccc, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x99d3);
        EXPECT(gbc.pc(), 0x1ccd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0358
        gbc.setState(0xb830, 0x634b, 0x8190, 0x9b57, 0x9b43, 0xd3c8, 0x0, 0x0);
        gbc.writeMem(0xb830, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x634b);
        EXPECT(gbc.pc(), 0xb831);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb830), 0x60);
        // 60 0359
        gbc.setState(0x58bf, 0x1247, 0x5160, 0x7cbc, 0x37c7, 0x5841, 0x0, 0x0);
        gbc.writeMem(0x58bf, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x1247);
        EXPECT(gbc.pc(), 0x58c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 035A
        gbc.setState(0xce30, 0xb90, 0x9ec0, 0x477c, 0xe810, 0xfc89, 0x0, 0x0);
        gbc.writeMem(0xce30, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xb90);
        EXPECT(gbc.pc(), 0xce31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce30), 0x60);
        // 60 035B
        gbc.setState(0x88b2, 0x88c8, 0xb810, 0x1de2, 0x2a02, 0xee0b, 0x1, 0x1);
        gbc.writeMem(0x88b2, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x88c8);
        EXPECT(gbc.pc(), 0x88b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88b2), 0x60);
        // 60 035C
        gbc.setState(0x4d4b, 0xd823, 0x7b10, 0xae54, 0x4d4e, 0x65f6, 0x0, 0x1);
        gbc.writeMem(0x4d4b, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xd823);
        EXPECT(gbc.pc(), 0x4d4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 035D
        gbc.setState(0x1c75, 0x609e, 0xe0c0, 0x789d, 0x754, 0xba86, 0x1, 0x1);
        gbc.writeMem(0x1c75, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x609e);
        EXPECT(gbc.pc(), 0x1c76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 035E
        gbc.setState(0xda89, 0xaddb, 0xfa10, 0x9cf, 0xeef6, 0x8623, 0x0, 0x1);
        gbc.writeMem(0xda89, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xaddb);
        EXPECT(gbc.pc(), 0xda8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda89), 0x60);
        // 60 035F
        gbc.setState(0x9e54, 0x8ffa, 0x4d40, 0xf5ad, 0x9057, 0xc0c6, 0x0, 0x1);
        gbc.writeMem(0x9e54, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x8ffa);
        EXPECT(gbc.pc(), 0x9e55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e54), 0x60);
        // 60 0360
        gbc.setState(0x1f60, 0x1c9f, 0xe250, 0xb090, 0xd9c5, 0x5372, 0x1, 0x0);
        gbc.writeMem(0x1f60, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x1c9f);
        EXPECT(gbc.pc(), 0x1f61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 0361
        gbc.setState(0x7817, 0xb181, 0x4050, 0xd262, 0xe344, 0x1fb9, 0x0, 0x1);
        gbc.writeMem(0x7817, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xb181);
        EXPECT(gbc.pc(), 0x7818);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 0362
        gbc.setState(0x4053, 0xf2f3, 0xfdb0, 0xbba3, 0x22b7, 0x9d71, 0x1, 0x0);
        gbc.writeMem(0x4053, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xf2f3);
        EXPECT(gbc.pc(), 0x4054);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0363
        gbc.setState(0x3edc, 0xb27, 0x55f0, 0x4223, 0x541c, 0xd492, 0x0, 0x1);
        gbc.writeMem(0x3edc, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xb27);
        EXPECT(gbc.pc(), 0x3edd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0364
        gbc.setState(0x7b21, 0xb983, 0x51b0, 0xb81, 0x2502, 0x22ef, 0x0, 0x1);
        gbc.writeMem(0x7b21, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xb983);
        EXPECT(gbc.pc(), 0x7b22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0365
        gbc.setState(0x9207, 0x2356, 0xbab0, 0xd22, 0x10e2, 0xa831, 0x0, 0x0);
        gbc.writeMem(0x9207, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x2356);
        EXPECT(gbc.pc(), 0x9208);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9207), 0x60);
        // 60 0366
        gbc.setState(0x78d4, 0x3590, 0x8060, 0x4463, 0x2904, 0x2436, 0x1, 0x1);
        gbc.writeMem(0x78d4, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x3590);
        EXPECT(gbc.pc(), 0x78d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0367
        gbc.setState(0x8fb6, 0x98ec, 0x2730, 0x2ecb, 0xe605, 0x6348, 0x1, 0x0);
        gbc.writeMem(0x8fb6, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x98ec);
        EXPECT(gbc.pc(), 0x8fb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fb6), 0x60);
        // 60 0368
        gbc.setState(0xa1a5, 0xcf2a, 0x58b0, 0xd36e, 0x417d, 0xe6c6, 0x1, 0x1);
        gbc.writeMem(0xa1a5, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xcf2a);
        EXPECT(gbc.pc(), 0xa1a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1a5), 0x60);
        // 60 036B
        gbc.setState(0xa07e, 0x3e18, 0xcaa0, 0xbcfc, 0x8370, 0x859d, 0x0, 0x1);
        gbc.writeMem(0xa07e, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x3e18);
        EXPECT(gbc.pc(), 0xa07f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa07e), 0x60);
        // 60 036C
        gbc.setState(0x6a6f, 0x2c87, 0x68c0, 0xcf57, 0xf086, 0x4dcd, 0x0, 0x0);
        gbc.writeMem(0x6a6f, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x2c87);
        EXPECT(gbc.pc(), 0x6a70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 036D
        gbc.setState(0x5ad0, 0x9ecb, 0x7b70, 0xd5d3, 0xb66, 0x2c43, 0x0, 0x1);
        gbc.writeMem(0x5ad0, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x9ecb);
        EXPECT(gbc.pc(), 0x5ad1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 036E
        gbc.setState(0x1ca3, 0x1143, 0x68f0, 0xbff3, 0x8fd4, 0x1edd, 0x1, 0x1);
        gbc.writeMem(0x1ca3, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x1143);
        EXPECT(gbc.pc(), 0x1ca4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 036F
        gbc.setState(0xd807, 0x912f, 0x65c0, 0x7e83, 0x42, 0x2ac8, 0x0, 0x0);
        gbc.writeMem(0xd807, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x912f);
        EXPECT(gbc.pc(), 0xd808);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd807), 0x60);
        // 60 0370
        gbc.setState(0xcad5, 0x2249, 0xf3b0, 0xafe0, 0xe610, 0x8192, 0x1, 0x1);
        gbc.writeMem(0xcad5, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x2249);
        EXPECT(gbc.pc(), 0xcad6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcad5), 0x60);
        // 60 0371
        gbc.setState(0x147c, 0xbc53, 0x5db0, 0xf2d2, 0x21e3, 0x1f64, 0x1, 0x0);
        gbc.writeMem(0x147c, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xbc53);
        EXPECT(gbc.pc(), 0x147d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0372
        gbc.setState(0xec2, 0xa428, 0xadd0, 0xbd5a, 0x8e0d, 0x3b7e, 0x0, 0x1);
        gbc.writeMem(0xec2, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xa428);
        EXPECT(gbc.pc(), 0xec3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 0373
        gbc.setState(0xbdfe, 0xee24, 0x8d00, 0xd99, 0xfe7b, 0x65d1, 0x1, 0x0);
        gbc.writeMem(0xbdfe, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xee24);
        EXPECT(gbc.pc(), 0xbdff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdfe), 0x60);
        // 60 0374
        gbc.setState(0x7eb, 0x9198, 0x6dc0, 0x884b, 0xb926, 0x62ad, 0x0, 0x0);
        gbc.writeMem(0x7eb, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x9198);
        EXPECT(gbc.pc(), 0x7ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 0375
        gbc.setState(0x7e01, 0xcb56, 0x5050, 0xa591, 0x365, 0xabed, 0x0, 0x1);
        gbc.writeMem(0x7e01, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xcb56);
        EXPECT(gbc.pc(), 0x7e02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 0376
        gbc.setState(0x66a, 0x27cf, 0xb2f0, 0xd23, 0xf8a5, 0x26a5, 0x1, 0x1);
        gbc.writeMem(0x66a, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x27cf);
        EXPECT(gbc.pc(), 0x66b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0377
        gbc.setState(0xc540, 0x8148, 0x15c0, 0xc7ae, 0xc643, 0x6f0, 0x0, 0x1);
        gbc.writeMem(0xc540, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x8148);
        EXPECT(gbc.pc(), 0xc541);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc540), 0x60);
        // 60 0378
        gbc.setState(0x7884, 0x5dea, 0xbf20, 0xa381, 0xac5f, 0x52b6, 0x0, 0x1);
        gbc.writeMem(0x7884, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x5dea);
        EXPECT(gbc.pc(), 0x7885);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0379
        gbc.setState(0xb9b5, 0x82c0, 0x2f90, 0xaa14, 0x5239, 0x4ff5, 0x1, 0x1);
        gbc.writeMem(0xb9b5, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x82c0);
        EXPECT(gbc.pc(), 0xb9b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9b5), 0x60);
        // 60 037A
        gbc.setState(0xa221, 0x42c8, 0xda30, 0x7ab1, 0x304e, 0xab3, 0x1, 0x0);
        gbc.writeMem(0xa221, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x42c8);
        EXPECT(gbc.pc(), 0xa222);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa221), 0x60);
        // 60 037B
        gbc.setState(0x1a8d, 0x59f3, 0x36e0, 0xfe2f, 0x4a71, 0xc821, 0x1, 0x1);
        gbc.writeMem(0x1a8d, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x59f3);
        EXPECT(gbc.pc(), 0x1a8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 037C
        gbc.setState(0x1a4, 0xadda, 0x3420, 0x37c9, 0xce1d, 0x49d3, 0x0, 0x1);
        gbc.writeMem(0x1a4, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xadda);
        EXPECT(gbc.pc(), 0x1a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 037D
        gbc.setState(0xacd, 0x12fe, 0xfb70, 0xc789, 0xd829, 0x4edf, 0x0, 0x1);
        gbc.writeMem(0xacd, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x12fe);
        EXPECT(gbc.pc(), 0xace);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 037E
        gbc.setState(0x3369, 0x7b47, 0x3b60, 0x1df4, 0xb8df, 0x8893, 0x0, 0x1);
        gbc.writeMem(0x3369, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x7b47);
        EXPECT(gbc.pc(), 0x336a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 037F
        gbc.setState(0x46d3, 0xedd0, 0xbc30, 0xe0dd, 0x6328, 0xf7f6, 0x0, 0x1);
        gbc.writeMem(0x46d3, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xedd0);
        EXPECT(gbc.pc(), 0x46d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0380
        gbc.setState(0x54d3, 0x71d5, 0xf500, 0xabd1, 0xe67, 0x832f, 0x0, 0x0);
        gbc.writeMem(0x54d3, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x71d5);
        EXPECT(gbc.pc(), 0x54d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 0381
        gbc.setState(0x7fd5, 0xaf2e, 0xf7d0, 0xc8b, 0xc898, 0x2be8, 0x1, 0x0);
        gbc.writeMem(0x7fd5, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xaf2e);
        EXPECT(gbc.pc(), 0x7fd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 0382
        gbc.setState(0x347b, 0xa08c, 0x4ae0, 0xfa8e, 0xdf7f, 0x136d, 0x0, 0x1);
        gbc.writeMem(0x347b, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xa08c);
        EXPECT(gbc.pc(), 0x347c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0383
        gbc.setState(0x57d7, 0x5609, 0xaf40, 0xde35, 0xb4e, 0xb79a, 0x1, 0x0);
        gbc.writeMem(0x57d7, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x5609);
        EXPECT(gbc.pc(), 0x57d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 0384
        gbc.setState(0x80f0, 0xcbb7, 0x720, 0x9f58, 0xe692, 0x1da9, 0x1, 0x1);
        gbc.writeMem(0x80f0, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xcbb7);
        EXPECT(gbc.pc(), 0x80f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80f0), 0x60);
        // 60 0385
        gbc.setState(0x6dbe, 0x3ed, 0xb100, 0x7271, 0xab5, 0x1aa3, 0x0, 0x1);
        gbc.writeMem(0x6dbe, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x3ed);
        EXPECT(gbc.pc(), 0x6dbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 0386
        gbc.setState(0x1bd2, 0xfb1f, 0x1800, 0x3dee, 0xc586, 0x75e6, 0x1, 0x1);
        gbc.writeMem(0x1bd2, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xfb1f);
        EXPECT(gbc.pc(), 0x1bd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 0387
        gbc.setState(0x8d52, 0xf76e, 0x2400, 0xe30b, 0x1802, 0xb721, 0x1, 0x1);
        gbc.writeMem(0x8d52, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xf76e);
        EXPECT(gbc.pc(), 0x8d53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d52), 0x60);
        // 60 0388
        gbc.setState(0xbac2, 0x3db5, 0x6590, 0x34eb, 0x7705, 0x30d, 0x0, 0x0);
        gbc.writeMem(0xbac2, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x3db5);
        EXPECT(gbc.pc(), 0xbac3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbac2), 0x60);
        // 60 0389
        gbc.setState(0x7cb3, 0xb6d5, 0x6210, 0xe608, 0xde3a, 0xe1d2, 0x0, 0x0);
        gbc.writeMem(0x7cb3, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xb6d5);
        EXPECT(gbc.pc(), 0x7cb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 038A
        gbc.setState(0x103, 0xd4af, 0xf570, 0x1023, 0x1814, 0x275b, 0x1, 0x0);
        gbc.writeMem(0x103, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xd4af);
        EXPECT(gbc.pc(), 0x104);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 038B
        gbc.setState(0x7b97, 0x52e5, 0xffe0, 0x581a, 0x7f2e, 0x37f0, 0x0, 0x0);
        gbc.writeMem(0x7b97, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x52e5);
        EXPECT(gbc.pc(), 0x7b98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 038C
        gbc.setState(0x394c, 0x1dd2, 0x7f0, 0x8a1c, 0x5ff2, 0xb058, 0x1, 0x1);
        gbc.writeMem(0x394c, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x1dd2);
        EXPECT(gbc.pc(), 0x394d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 038D
        gbc.setState(0x7a41, 0x9943, 0xc8a0, 0xf0d6, 0xce2f, 0xa863, 0x1, 0x1);
        gbc.writeMem(0x7a41, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x9943);
        EXPECT(gbc.pc(), 0x7a42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 038E
        gbc.setState(0xc85a, 0x19f2, 0x4dc0, 0x6282, 0xb34c, 0x2e4c, 0x1, 0x1);
        gbc.writeMem(0xc85a, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x19f2);
        EXPECT(gbc.pc(), 0xc85b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc85a), 0x60);
        // 60 038F
        gbc.setState(0x38c6, 0x2ccb, 0x3cf0, 0x3705, 0xc9fe, 0x2e37, 0x1, 0x0);
        gbc.writeMem(0x38c6, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x2ccb);
        EXPECT(gbc.pc(), 0x38c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0390
        gbc.setState(0xec22, 0x9277, 0x18b0, 0xe7e3, 0x6e5, 0x53ba, 0x1, 0x0);
        gbc.writeMem(0xec22, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x9277);
        EXPECT(gbc.pc(), 0xec23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec22), 0x60);
        // 60 0391
        gbc.setState(0x8f86, 0xef5a, 0xd4a0, 0x2bd9, 0x4924, 0x7f34, 0x1, 0x0);
        gbc.writeMem(0x8f86, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xef5a);
        EXPECT(gbc.pc(), 0x8f87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f86), 0x60);
        // 60 0393
        gbc.setState(0xe030, 0x5c28, 0x9240, 0xa038, 0xfc86, 0xf0be, 0x0, 0x0);
        gbc.writeMem(0xe030, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x5c28);
        EXPECT(gbc.pc(), 0xe031);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe030), 0x60);
        // 60 0394
        gbc.setState(0x2ae3, 0x9379, 0x3c00, 0x8849, 0xfe53, 0x88fe, 0x1, 0x1);
        gbc.writeMem(0x2ae3, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x9379);
        EXPECT(gbc.pc(), 0x2ae4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 0395
        gbc.setState(0x5c70, 0x2edd, 0x9dd0, 0x2cf7, 0xa1e7, 0x739, 0x1, 0x0);
        gbc.writeMem(0x5c70, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x2edd);
        EXPECT(gbc.pc(), 0x5c71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 0396
        gbc.setState(0x4c38, 0x7f91, 0xeaa0, 0x90a4, 0xd140, 0x8c9a, 0x1, 0x1);
        gbc.writeMem(0x4c38, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x7f91);
        EXPECT(gbc.pc(), 0x4c39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 0397
        gbc.setState(0x6914, 0xe451, 0x6630, 0xf8fe, 0xa1ca, 0x1d1a, 0x0, 0x0);
        gbc.writeMem(0x6914, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xe451);
        EXPECT(gbc.pc(), 0x6915);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 0398
        gbc.setState(0xd548, 0x7c00, 0x7270, 0xa8a5, 0xcd85, 0x7617, 0x0, 0x1);
        gbc.writeMem(0xd548, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x7c00);
        EXPECT(gbc.pc(), 0xd549);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd548), 0x60);
        // 60 0399
        gbc.setState(0x20a4, 0x3ff8, 0x5ab0, 0xcd7, 0x850d, 0x3ec8, 0x0, 0x1);
        gbc.writeMem(0x20a4, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x3ff8);
        EXPECT(gbc.pc(), 0x20a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 039A
        gbc.setState(0x92fb, 0x2ffd, 0x9580, 0xc4b4, 0xb168, 0xba0, 0x0, 0x0);
        gbc.writeMem(0x92fb, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x2ffd);
        EXPECT(gbc.pc(), 0x92fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92fb), 0x60);
        // 60 039B
        gbc.setState(0x5ad4, 0xbc8b, 0x51b0, 0x6477, 0xcdcc, 0xe4aa, 0x1, 0x0);
        gbc.writeMem(0x5ad4, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xbc8b);
        EXPECT(gbc.pc(), 0x5ad5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 039C
        gbc.setState(0x8a8, 0x200d, 0x7b40, 0xd41f, 0x6c3c, 0x878c, 0x1, 0x1);
        gbc.writeMem(0x8a8, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x200d);
        EXPECT(gbc.pc(), 0x8a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 039D
        gbc.setState(0x332f, 0x659, 0x1410, 0x9c42, 0xc0bb, 0x27c0, 0x1, 0x1);
        gbc.writeMem(0x332f, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x659);
        EXPECT(gbc.pc(), 0x3330);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 039E
        gbc.setState(0xe75e, 0xdb89, 0xfe80, 0xce1a, 0xb819, 0x36a0, 0x1, 0x1);
        gbc.writeMem(0xe75e, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xdb89);
        EXPECT(gbc.pc(), 0xe75f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe75e), 0x60);
        // 60 039F
        gbc.setState(0x5702, 0x8f89, 0x8dc0, 0xadf, 0x72fb, 0x7603, 0x1, 0x0);
        gbc.writeMem(0x5702, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x8f89);
        EXPECT(gbc.pc(), 0x5703);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 03A0
        gbc.setState(0x1950, 0x2510, 0xf160, 0x4494, 0x292, 0x90f8, 0x1, 0x1);
        gbc.writeMem(0x1950, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x2510);
        EXPECT(gbc.pc(), 0x1951);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 03A1
        gbc.setState(0x1961, 0x21d6, 0x9280, 0xb475, 0x8569, 0xeb14, 0x1, 0x1);
        gbc.writeMem(0x1961, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x21d6);
        EXPECT(gbc.pc(), 0x1962);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 03A2
        gbc.setState(0x16be, 0xf8ab, 0xdaf0, 0x68f2, 0xac2e, 0x1ebf, 0x1, 0x1);
        gbc.writeMem(0x16be, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xf8ab);
        EXPECT(gbc.pc(), 0x16bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 03A3
        gbc.setState(0x27ab, 0x3911, 0x4cd0, 0x5a77, 0xe52, 0x6c8, 0x1, 0x1);
        gbc.writeMem(0x27ab, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x3911);
        EXPECT(gbc.pc(), 0x27ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 03A4
        gbc.setState(0xc71f, 0x3c43, 0x7d90, 0x5db4, 0xc04e, 0xd0b, 0x1, 0x0);
        gbc.writeMem(0xc71f, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x3c43);
        EXPECT(gbc.pc(), 0xc720);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc71f), 0x60);
        // 60 03A5
        gbc.setState(0x9571, 0x8bba, 0x2320, 0x3569, 0x7e89, 0x481f, 0x0, 0x1);
        gbc.writeMem(0x9571, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x8bba);
        EXPECT(gbc.pc(), 0x9572);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9571), 0x60);
        // 60 03A6
        gbc.setState(0x70c0, 0x925c, 0xb8b0, 0xb095, 0xccf5, 0xef05, 0x0, 0x1);
        gbc.writeMem(0x70c0, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x925c);
        EXPECT(gbc.pc(), 0x70c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 03A7
        gbc.setState(0x182, 0x83fa, 0x2e90, 0x791, 0x3896, 0xaa74, 0x0, 0x1);
        gbc.writeMem(0x182, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x83fa);
        EXPECT(gbc.pc(), 0x183);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 03A8
        gbc.setState(0xb654, 0xcd9c, 0xe2a0, 0x38b3, 0xc75c, 0x2628, 0x1, 0x1);
        gbc.writeMem(0xb654, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xcd9c);
        EXPECT(gbc.pc(), 0xb655);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb654), 0x60);
        // 60 03A9
        gbc.setState(0xd0cd, 0x47d, 0xbd80, 0xd76f, 0xb499, 0xbb32, 0x1, 0x0);
        gbc.writeMem(0xd0cd, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x47d);
        EXPECT(gbc.pc(), 0xd0ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0cd), 0x60);
        // 60 03AA
        gbc.setState(0x23a5, 0xc055, 0x2de0, 0xecf9, 0xf975, 0x8fe6, 0x1, 0x1);
        gbc.writeMem(0x23a5, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xc055);
        EXPECT(gbc.pc(), 0x23a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 03AB
        gbc.setState(0x4ae1, 0x5f85, 0x3580, 0x7e56, 0xf27b, 0x4925, 0x1, 0x1);
        gbc.writeMem(0x4ae1, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x5f85);
        EXPECT(gbc.pc(), 0x4ae2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 03AC
        gbc.setState(0x44d7, 0x6573, 0x91d0, 0x3cc3, 0x65d6, 0x88f2, 0x1, 0x1);
        gbc.writeMem(0x44d7, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x6573);
        EXPECT(gbc.pc(), 0x44d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 03AD
        gbc.setState(0x2f91, 0xf106, 0xe5c0, 0x50cb, 0x89ac, 0xeda7, 0x0, 0x0);
        gbc.writeMem(0x2f91, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xf106);
        EXPECT(gbc.pc(), 0x2f92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 03AE
        gbc.setState(0xb45d, 0x7168, 0x9040, 0x8ac5, 0x6df8, 0x366b, 0x1, 0x0);
        gbc.writeMem(0xb45d, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x7168);
        EXPECT(gbc.pc(), 0xb45e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb45d), 0x60);
        // 60 03AF
        gbc.setState(0xd0d4, 0x747d, 0x4520, 0x8974, 0x25b0, 0xfe53, 0x0, 0x1);
        gbc.writeMem(0xd0d4, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x747d);
        EXPECT(gbc.pc(), 0xd0d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0d4), 0x60);
        // 60 03B0
        gbc.setState(0x4053, 0xf059, 0xaa60, 0x1285, 0x23c, 0xdd0, 0x0, 0x1);
        gbc.writeMem(0x4053, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xf059);
        EXPECT(gbc.pc(), 0x4054);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 03B1
        gbc.setState(0x1a7c, 0x7d9d, 0x2390, 0x33a7, 0x17c4, 0xf4, 0x1, 0x0);
        gbc.writeMem(0x1a7c, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x7d9d);
        EXPECT(gbc.pc(), 0x1a7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 03B2
        gbc.setState(0x5b78, 0x67dd, 0xfe80, 0x8c9f, 0xab2b, 0xdda0, 0x0, 0x0);
        gbc.writeMem(0x5b78, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x67dd);
        EXPECT(gbc.pc(), 0x5b79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 03B3
        gbc.setState(0x7c21, 0xc0d8, 0xef0, 0x6b13, 0xe76f, 0x8ec1, 0x1, 0x0);
        gbc.writeMem(0x7c21, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xc0d8);
        EXPECT(gbc.pc(), 0x7c22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 03B4
        gbc.setState(0x2c63, 0xff6e, 0x8530, 0x2598, 0x1e35, 0x8be2, 0x1, 0x0);
        gbc.writeMem(0x2c63, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xff6e);
        EXPECT(gbc.pc(), 0x2c64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 03B5
        gbc.setState(0xe161, 0x3c1d, 0xde40, 0xadf3, 0xb7b4, 0xc3d8, 0x0, 0x0);
        gbc.writeMem(0xe161, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x3c1d);
        EXPECT(gbc.pc(), 0xe162);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe161), 0x60);
        // 60 03B6
        gbc.setState(0x4bd3, 0xde08, 0xd7c0, 0xcfd1, 0x6af4, 0xf68d, 0x0, 0x0);
        gbc.writeMem(0x4bd3, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xde08);
        EXPECT(gbc.pc(), 0x4bd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 03B7
        gbc.setState(0x5a2a, 0xd054, 0x27a0, 0x5951, 0x4a63, 0xfadb, 0x1, 0x1);
        gbc.writeMem(0x5a2a, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xd054);
        EXPECT(gbc.pc(), 0x5a2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 03B8
        gbc.setState(0x480d, 0x2b6a, 0x8ef0, 0xb13, 0xd8dc, 0x7158, 0x1, 0x0);
        gbc.writeMem(0x480d, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x2b6a);
        EXPECT(gbc.pc(), 0x480e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 03B9
        gbc.setState(0x7f46, 0xb18f, 0x8b30, 0xaa35, 0xbebb, 0xc665, 0x0, 0x1);
        gbc.writeMem(0x7f46, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xb18f);
        EXPECT(gbc.pc(), 0x7f47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 03BA
        gbc.setState(0xaa18, 0xf632, 0xe1c0, 0x79c5, 0xd112, 0xbd73, 0x1, 0x0);
        gbc.writeMem(0xaa18, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xf632);
        EXPECT(gbc.pc(), 0xaa19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa18), 0x60);
        // 60 03BB
        gbc.setState(0x432d, 0x423d, 0xcd0, 0xc4ae, 0x7f0e, 0x5e6b, 0x0, 0x1);
        gbc.writeMem(0x432d, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x423d);
        EXPECT(gbc.pc(), 0x432e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 03BC
        gbc.setState(0x1076, 0x689, 0xad80, 0xfd75, 0x9a2a, 0x900a, 0x0, 0x1);
        gbc.writeMem(0x1076, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x689);
        EXPECT(gbc.pc(), 0x1077);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 03BD
        gbc.setState(0xed9e, 0xc326, 0x3e60, 0x6df9, 0x97c8, 0xe276, 0x1, 0x0);
        gbc.writeMem(0xed9e, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xc326);
        EXPECT(gbc.pc(), 0xed9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed9e), 0x60);
        // 60 03BE
        gbc.setState(0xef6e, 0xfc3a, 0x70e0, 0x9931, 0x2147, 0x69c1, 0x0, 0x0);
        gbc.writeMem(0xef6e, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xfc3a);
        EXPECT(gbc.pc(), 0xef6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef6e), 0x60);
        // 60 03BF
        gbc.setState(0x7cf5, 0xabfc, 0xf00, 0x3b04, 0x9a83, 0x3348, 0x0, 0x1);
        gbc.writeMem(0x7cf5, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xabfc);
        EXPECT(gbc.pc(), 0x7cf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 03C0
        gbc.setState(0x536, 0x5997, 0xf3b0, 0x4858, 0xf3d9, 0xd7e9, 0x1, 0x0);
        gbc.writeMem(0x536, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x5997);
        EXPECT(gbc.pc(), 0x537);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 03C1
        gbc.setState(0x483e, 0x1822, 0xcf70, 0xa2db, 0x7a39, 0x8cac, 0x0, 0x1);
        gbc.writeMem(0x483e, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x1822);
        EXPECT(gbc.pc(), 0x483f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 03C2
        gbc.setState(0x7b94, 0x38e0, 0x4110, 0xd97d, 0x8644, 0xb421, 0x1, 0x1);
        gbc.writeMem(0x7b94, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x38e0);
        EXPECT(gbc.pc(), 0x7b95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 03C3
        gbc.setState(0xa63d, 0x1ae9, 0xbb50, 0xaf3a, 0x110, 0x6274, 0x0, 0x1);
        gbc.writeMem(0xa63d, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x1ae9);
        EXPECT(gbc.pc(), 0xa63e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa63d), 0x60);
        // 60 03C4
        gbc.setState(0x4775, 0x4c53, 0xf8e0, 0x11da, 0x1b48, 0xe043, 0x1, 0x0);
        gbc.writeMem(0x4775, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x4c53);
        EXPECT(gbc.pc(), 0x4776);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 03C5
        gbc.setState(0x2abb, 0x81c, 0x56f0, 0x693c, 0x7371, 0x1509, 0x1, 0x1);
        gbc.writeMem(0x2abb, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x81c);
        EXPECT(gbc.pc(), 0x2abc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 03C6
        gbc.setState(0xe8b1, 0xb7f2, 0x7e60, 0x5748, 0x1344, 0xac2e, 0x0, 0x0);
        gbc.writeMem(0xe8b1, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xb7f2);
        EXPECT(gbc.pc(), 0xe8b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8b1), 0x60);
        // 60 03C8
        gbc.setState(0x6721, 0x8a37, 0x4260, 0x855e, 0x9f4b, 0xdf85, 0x0, 0x1);
        gbc.writeMem(0x6721, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x8a37);
        EXPECT(gbc.pc(), 0x6722);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 03CA
        gbc.setState(0x5d62, 0x1a97, 0x1810, 0x2b4, 0x1f1e, 0xbeeb, 0x1, 0x1);
        gbc.writeMem(0x5d62, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x1a97);
        EXPECT(gbc.pc(), 0x5d63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 03CB
        gbc.setState(0xa009, 0x3ab7, 0xb790, 0xe4b7, 0x6d03, 0x4866, 0x1, 0x0);
        gbc.writeMem(0xa009, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x3ab7);
        EXPECT(gbc.pc(), 0xa00a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa009), 0x60);
        // 60 03CC
        gbc.setState(0x5e7a, 0x7d86, 0xcc20, 0x26a3, 0x5311, 0xfc24, 0x0, 0x1);
        gbc.writeMem(0x5e7a, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x7d86);
        EXPECT(gbc.pc(), 0x5e7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 03CD
        gbc.setState(0xb872, 0xe881, 0xee60, 0x86c, 0x25ef, 0x31b0, 0x0, 0x1);
        gbc.writeMem(0xb872, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xe881);
        EXPECT(gbc.pc(), 0xb873);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb872), 0x60);
        // 60 03CE
        gbc.setState(0x6350, 0xae42, 0x5300, 0xf727, 0xf4b9, 0x97ba, 0x1, 0x0);
        gbc.writeMem(0x6350, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xae42);
        EXPECT(gbc.pc(), 0x6351);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 03CF
        gbc.setState(0x5057, 0xa740, 0x1fb0, 0xc4a8, 0xf4c, 0x2d3d, 0x0, 0x0);
        gbc.writeMem(0x5057, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xa740);
        EXPECT(gbc.pc(), 0x5058);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 03D1
        gbc.setState(0xce97, 0x5bad, 0x3d90, 0x78ff, 0x98f5, 0x777b, 0x1, 0x0);
        gbc.writeMem(0xce97, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x5bad);
        EXPECT(gbc.pc(), 0xce98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce97), 0x60);
        // 60 03D2
        gbc.setState(0xbb59, 0x28ee, 0xebd0, 0xf376, 0x1514, 0xb7a6, 0x1, 0x0);
        gbc.writeMem(0xbb59, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x28ee);
        EXPECT(gbc.pc(), 0xbb5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb59), 0x60);
        // 60 03D3
        gbc.setState(0xc03e, 0xe49e, 0x1520, 0x5244, 0x8f22, 0xc5ad, 0x0, 0x1);
        gbc.writeMem(0xc03e, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xe49e);
        EXPECT(gbc.pc(), 0xc03f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc03e), 0x60);
        // 60 03D4
        gbc.setState(0x5ce0, 0x8bb2, 0xec90, 0xaa3b, 0x9d85, 0xe8b0, 0x1, 0x0);
        gbc.writeMem(0x5ce0, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x8bb2);
        EXPECT(gbc.pc(), 0x5ce1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 03D5
        gbc.setState(0x32d7, 0xacd4, 0x7c30, 0xd40e, 0x4e58, 0xb44a, 0x1, 0x1);
        gbc.writeMem(0x32d7, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xacd4);
        EXPECT(gbc.pc(), 0x32d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 03D6
        gbc.setState(0xe76b, 0xfdc9, 0x9870, 0x3a4e, 0xafe1, 0x80ae, 0x1, 0x0);
        gbc.writeMem(0xe76b, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xfdc9);
        EXPECT(gbc.pc(), 0xe76c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe76b), 0x60);
        // 60 03D7
        gbc.setState(0x89e6, 0x5e02, 0xab50, 0x6c59, 0x9b01, 0xd2d, 0x0, 0x1);
        gbc.writeMem(0x89e6, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x5e02);
        EXPECT(gbc.pc(), 0x89e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89e6), 0x60);
        // 60 03D8
        gbc.setState(0xdfd0, 0x2afa, 0xc440, 0x98c8, 0xf2b, 0x8c16, 0x1, 0x0);
        gbc.writeMem(0xdfd0, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x2afa);
        EXPECT(gbc.pc(), 0xdfd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfd0), 0x60);
        // 60 03D9
        gbc.setState(0xb437, 0xd5e3, 0xa690, 0xef11, 0xd1c6, 0x3414, 0x1, 0x1);
        gbc.writeMem(0xb437, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xd5e3);
        EXPECT(gbc.pc(), 0xb438);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb437), 0x60);
        // 60 03DB
        gbc.setState(0x3d57, 0x3527, 0x69e0, 0xef7b, 0x5922, 0x5e87, 0x0, 0x0);
        gbc.writeMem(0x3d57, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x3527);
        EXPECT(gbc.pc(), 0x3d58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 03DC
        gbc.setState(0x485a, 0x12cf, 0x4cb0, 0x6b66, 0xfc93, 0x67d5, 0x0, 0x0);
        gbc.writeMem(0x485a, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x12cf);
        EXPECT(gbc.pc(), 0x485b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 03DD
        gbc.setState(0xe72b, 0xcbdd, 0x2700, 0xa9df, 0x63c5, 0x9499, 0x1, 0x1);
        gbc.writeMem(0xe72b, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xcbdd);
        EXPECT(gbc.pc(), 0xe72c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe72b), 0x60);
        // 60 03DE
        gbc.setState(0xc53e, 0x1f0a, 0x7ad0, 0x221e, 0xcbd7, 0x9030, 0x0, 0x1);
        gbc.writeMem(0xc53e, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x1f0a);
        EXPECT(gbc.pc(), 0xc53f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc53e), 0x60);
        // 60 03DF
        gbc.setState(0x219, 0x8fde, 0x2580, 0x3be7, 0x366c, 0x732a, 0x1, 0x1);
        gbc.writeMem(0x219, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x8fde);
        EXPECT(gbc.pc(), 0x21a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 03E0
        gbc.setState(0xedac, 0x25e6, 0x2a10, 0xd73c, 0xabdd, 0x2efc, 0x0, 0x0);
        gbc.writeMem(0xedac, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x25e6);
        EXPECT(gbc.pc(), 0xedad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedac), 0x60);
        // 60 03E1
        gbc.setState(0xd116, 0x3248, 0xea0, 0x5326, 0xb22d, 0x7eb5, 0x1, 0x1);
        gbc.writeMem(0xd116, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x3248);
        EXPECT(gbc.pc(), 0xd117);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd116), 0x60);
        // 60 03E2
        gbc.setState(0x447e, 0x8b91, 0xc40, 0x3cb2, 0xba27, 0xf5b4, 0x1, 0x0);
        gbc.writeMem(0x447e, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x8b91);
        EXPECT(gbc.pc(), 0x447f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 60 03E3
        gbc.setState(0xb9dc, 0x6233, 0xc7b0, 0xa76, 0x481b, 0xba72, 0x1, 0x0);
        gbc.writeMem(0xb9dc, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x6233);
        EXPECT(gbc.pc(), 0xb9dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9dc), 0x60);
        // 60 03E4
        gbc.setState(0x4517, 0xc73e, 0xaa0, 0xa681, 0x65b1, 0x338a, 0x1, 0x0);
        gbc.writeMem(0x4517, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xc73e);
        EXPECT(gbc.pc(), 0x4518);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 60 03E5
        gbc.setState(0x7a09, 0x3a13, 0x7550, 0xe7ca, 0x5e4a, 0xfc13, 0x1, 0x1);
        gbc.writeMem(0x7a09, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x3a13);
        EXPECT(gbc.pc(), 0x7a0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 60 03E6
        gbc.setState(0x1487, 0x4cfb, 0xe570, 0xbfa1, 0x5ef3, 0x2195, 0x0, 0x0);
        gbc.writeMem(0x1487, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x4cfb);
        EXPECT(gbc.pc(), 0x1488);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 60 03E7
        gbc.setState(0xae25, 0x446f, 0x4650, 0xe4fc, 0xbedc, 0x56e3, 0x1, 0x0);
        gbc.writeMem(0xae25, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x446f);
        EXPECT(gbc.pc(), 0xae26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae25), 0x60);
    }
