#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_1e)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_1e) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 1E 0000
        gbc.setState(0x3b17, 0x1836, 0x5280, 0xfc0f, 0x1378, 0xa2bc, 0x1, 0x0);
        gbc.writeMem(0x3b17, { 0x1e, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x1836);
        EXPECT(gbc.pc(), 0x3b19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 0001
        gbc.setState(0xc78f, 0xfad2, 0xe010, 0xee34, 0x424c, 0x3fbd, 0x0, 0x1);
        gbc.writeMem(0xc78f, { 0x1e, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xfad2);
        EXPECT(gbc.pc(), 0xc791);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc78f), 0x1e);
        EXPECT(gbc.readMem(0xc790), 0x72);
        // 1E 0003
        gbc.setState(0x79fc, 0x6777, 0xeb70, 0x2154, 0x754e, 0xf49, 0x0, 0x1);
        gbc.writeMem(0x79fc, { 0x1e, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x6777);
        EXPECT(gbc.pc(), 0x79fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 0004
        gbc.setState(0x120c, 0x4667, 0xc30, 0x795c, 0xb6bb, 0x54b6, 0x1, 0x0);
        gbc.writeMem(0x120c, { 0x1e, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x4667);
        EXPECT(gbc.pc(), 0x120e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 0005
        gbc.setState(0x2460, 0xe35e, 0x7760, 0x714d, 0x4e76, 0x92c2, 0x1, 0x0);
        gbc.writeMem(0x2460, { 0x1e, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xe35e);
        EXPECT(gbc.pc(), 0x2462);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 0006
        gbc.setState(0xc82d, 0x2940, 0x1730, 0x2c7, 0x3c82, 0xbd43, 0x0, 0x1);
        gbc.writeMem(0xc82d, { 0x1e, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x2940);
        EXPECT(gbc.pc(), 0xc82f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc82d), 0x1e);
        EXPECT(gbc.readMem(0xc82e), 0xbe);
        // 1E 0007
        gbc.setState(0x8ad7, 0xb900, 0x47b0, 0x8c33, 0xa69d, 0x4407, 0x0, 0x1);
        gbc.writeMem(0x8ad7, { 0x1e, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xb900);
        EXPECT(gbc.pc(), 0x8ad9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ad7), 0x1e);
        EXPECT(gbc.readMem(0x8ad8), 0x91);
        // 1E 0008
        gbc.setState(0x501b, 0x941a, 0x7220, 0xb827, 0x4d64, 0x4ca0, 0x0, 0x0);
        gbc.writeMem(0x501b, { 0x1e, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x941a);
        EXPECT(gbc.pc(), 0x501d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 000A
        gbc.setState(0xe8a9, 0xd2ae, 0xf2d0, 0x3b7b, 0x7084, 0x51c9, 0x1, 0x1);
        gbc.writeMem(0xe8a9, { 0x1e, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xd2ae);
        EXPECT(gbc.pc(), 0xe8ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8a9), 0x1e);
        EXPECT(gbc.readMem(0xe8aa), 0xe);
        // 1E 000B
        gbc.setState(0xaa11, 0x384, 0xb970, 0xba91, 0xda0e, 0xad8d, 0x0, 0x1);
        gbc.writeMem(0xaa11, { 0x1e, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x384);
        EXPECT(gbc.pc(), 0xaa13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa11), 0x1e);
        EXPECT(gbc.readMem(0xaa12), 0xa2);
        // 1E 000C
        gbc.setState(0x6f36, 0xc050, 0x2a20, 0x5c36, 0x23d7, 0x491c, 0x1, 0x0);
        gbc.writeMem(0x6f36, { 0x1e, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xc050);
        EXPECT(gbc.pc(), 0x6f38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 000D
        gbc.setState(0xb677, 0x2d96, 0x51c0, 0x520b, 0xaff5, 0x71c2, 0x1, 0x1);
        gbc.writeMem(0xb677, { 0x1e, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x2d96);
        EXPECT(gbc.pc(), 0xb679);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb677), 0x1e);
        EXPECT(gbc.readMem(0xb678), 0x17);
        // 1E 000E
        gbc.setState(0x9e77, 0x4766, 0x8520, 0x88e3, 0xfb33, 0x21a4, 0x0, 0x0);
        gbc.writeMem(0x9e77, { 0x1e, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x4766);
        EXPECT(gbc.pc(), 0x9e79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e77), 0x1e);
        EXPECT(gbc.readMem(0x9e78), 0x84);
        // 1E 000F
        gbc.setState(0xb96d, 0x3f24, 0x6c30, 0x8bb0, 0x3860, 0xff36, 0x0, 0x0);
        gbc.writeMem(0xb96d, { 0x1e, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x3f24);
        EXPECT(gbc.pc(), 0xb96f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb96d), 0x1e);
        EXPECT(gbc.readMem(0xb96e), 0x3c);
        // 1E 0010
        gbc.setState(0x83ad, 0xcc9f, 0x1c20, 0xbe57, 0xe9b4, 0x45b1, 0x1, 0x0);
        gbc.writeMem(0x83ad, { 0x1e, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xcc9f);
        EXPECT(gbc.pc(), 0x83af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83ad), 0x1e);
        EXPECT(gbc.readMem(0x83ae), 0x8d);
        // 1E 0011
        gbc.setState(0xddd4, 0x36a4, 0x1460, 0x6400, 0x2205, 0x25be, 0x1, 0x1);
        gbc.writeMem(0xddd4, { 0x1e, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x36a4);
        EXPECT(gbc.pc(), 0xddd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddd4), 0x1e);
        EXPECT(gbc.readMem(0xddd5), 0x7c);
        // 1E 0012
        gbc.setState(0x5bef, 0x4bef, 0x4190, 0x83b, 0x5398, 0xf032, 0x1, 0x1);
        gbc.writeMem(0x5bef, { 0x1e, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x4bef);
        EXPECT(gbc.pc(), 0x5bf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 0014
        gbc.setState(0xdf08, 0x799c, 0xf0c0, 0xccdc, 0xe396, 0xa827, 0x0, 0x0);
        gbc.writeMem(0xdf08, { 0x1e, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x799c);
        EXPECT(gbc.pc(), 0xdf0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf08), 0x1e);
        EXPECT(gbc.readMem(0xdf09), 0x6f);
        // 1E 0015
        gbc.setState(0x5fd5, 0x8d5, 0xe720, 0x764f, 0x38ae, 0xe385, 0x1, 0x1);
        gbc.writeMem(0x5fd5, { 0x1e, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x8d5);
        EXPECT(gbc.pc(), 0x5fd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 0016
        gbc.setState(0x753e, 0x3675, 0x81a0, 0xaf97, 0x255c, 0x31b5, 0x1, 0x0);
        gbc.writeMem(0x753e, { 0x1e, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x3675);
        EXPECT(gbc.pc(), 0x7540);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 0017
        gbc.setState(0xe2c3, 0xd684, 0x62a0, 0xb953, 0x91a7, 0xb827, 0x1, 0x0);
        gbc.writeMem(0xe2c3, { 0x1e, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xd684);
        EXPECT(gbc.pc(), 0xe2c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2c3), 0x1e);
        EXPECT(gbc.readMem(0xe2c4), 0xa8);
        // 1E 0018
        gbc.setState(0xe406, 0xfa43, 0xa460, 0x1b46, 0xfb80, 0x6663, 0x1, 0x1);
        gbc.writeMem(0xe406, { 0x1e, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xfa43);
        EXPECT(gbc.pc(), 0xe408);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe406), 0x1e);
        EXPECT(gbc.readMem(0xe407), 0x9a);
        // 1E 0019
        gbc.setState(0xaf47, 0xe28e, 0xb000, 0xaa10, 0x6c5, 0xac75, 0x1, 0x1);
        gbc.writeMem(0xaf47, { 0x1e, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xe28e);
        EXPECT(gbc.pc(), 0xaf49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf47), 0x1e);
        EXPECT(gbc.readMem(0xaf48), 0xa9);
        // 1E 001A
        gbc.setState(0x678b, 0xa150, 0x2810, 0xc265, 0xec43, 0xe9ba, 0x0, 0x0);
        gbc.writeMem(0x678b, { 0x1e, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xa150);
        EXPECT(gbc.pc(), 0x678d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 001B
        gbc.setState(0x3822, 0xb17a, 0x1c80, 0x3663, 0xacba, 0xcb7a, 0x1, 0x1);
        gbc.writeMem(0x3822, { 0x1e, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xb17a);
        EXPECT(gbc.pc(), 0x3824);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 001C
        gbc.setState(0xaff8, 0x7ad, 0xc840, 0x2cf5, 0x6fd4, 0x9c5d, 0x0, 0x1);
        gbc.writeMem(0xaff8, { 0x1e, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x7ad);
        EXPECT(gbc.pc(), 0xaffa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaff8), 0x1e);
        EXPECT(gbc.readMem(0xaff9), 0x95);
        // 1E 001D
        gbc.setState(0x4ebc, 0x3dda, 0x140, 0x4779, 0xd94b, 0xec07, 0x0, 0x0);
        gbc.writeMem(0x4ebc, { 0x1e, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x3dda);
        EXPECT(gbc.pc(), 0x4ebe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 001E
        gbc.setState(0x3a39, 0x329c, 0x3ca0, 0x9197, 0x55a9, 0x100f, 0x0, 0x1);
        gbc.writeMem(0x3a39, { 0x1e, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x329c);
        EXPECT(gbc.pc(), 0x3a3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 001F
        gbc.setState(0xaa0a, 0xb5b6, 0x44f0, 0xf01, 0x5e8a, 0x93aa, 0x0, 0x0);
        gbc.writeMem(0xaa0a, { 0x1e, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xb5b6);
        EXPECT(gbc.pc(), 0xaa0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa0a), 0x1e);
        EXPECT(gbc.readMem(0xaa0b), 0x78);
        // 1E 0020
        gbc.setState(0xa0b8, 0xc851, 0x9fc0, 0x5c29, 0xa12f, 0xea12, 0x1, 0x0);
        gbc.writeMem(0xa0b8, { 0x1e, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xc851);
        EXPECT(gbc.pc(), 0xa0ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0b8), 0x1e);
        EXPECT(gbc.readMem(0xa0b9), 0x9);
        // 1E 0021
        gbc.setState(0x6793, 0x3e72, 0x2dc0, 0x61d9, 0x3c63, 0x3404, 0x1, 0x1);
        gbc.writeMem(0x6793, { 0x1e, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x3e72);
        EXPECT(gbc.pc(), 0x6795);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 0022
        gbc.setState(0x1283, 0xeabd, 0x82a0, 0xb584, 0xce4e, 0x6048, 0x0, 0x1);
        gbc.writeMem(0x1283, { 0x1e, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xeabd);
        EXPECT(gbc.pc(), 0x1285);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 0023
        gbc.setState(0x9191, 0xb737, 0x38d0, 0x8790, 0x5111, 0x9a6f, 0x0, 0x0);
        gbc.writeMem(0x9191, { 0x1e, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xb737);
        EXPECT(gbc.pc(), 0x9193);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9191), 0x1e);
        EXPECT(gbc.readMem(0x9192), 0x95);
        // 1E 0024
        gbc.setState(0xd37f, 0xbd3, 0xb50, 0xb764, 0xce99, 0x4c6e, 0x0, 0x0);
        gbc.writeMem(0xd37f, { 0x1e, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xbd3);
        EXPECT(gbc.pc(), 0xd381);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd37f), 0x1e);
        EXPECT(gbc.readMem(0xd380), 0xa9);
        // 1E 0025
        gbc.setState(0xb7a1, 0xde7c, 0xb7f0, 0x99b7, 0xa631, 0xb537, 0x1, 0x1);
        gbc.writeMem(0xb7a1, { 0x1e, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xde7c);
        EXPECT(gbc.pc(), 0xb7a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7a1), 0x1e);
        EXPECT(gbc.readMem(0xb7a2), 0x12);
        // 1E 0026
        gbc.setState(0x3b89, 0xaf87, 0xba40, 0x82dc, 0x185f, 0x150e, 0x0, 0x0);
        gbc.writeMem(0x3b89, { 0x1e, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xaf87);
        EXPECT(gbc.pc(), 0x3b8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 0027
        gbc.setState(0x488f, 0xf821, 0xf840, 0xa7c6, 0x52ca, 0x7ab1, 0x1, 0x1);
        gbc.writeMem(0x488f, { 0x1e, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xf821);
        EXPECT(gbc.pc(), 0x4891);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 0028
        gbc.setState(0xdc78, 0x79df, 0x5870, 0x3868, 0x8783, 0x4dcd, 0x0, 0x1);
        gbc.writeMem(0xdc78, { 0x1e, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x79df);
        EXPECT(gbc.pc(), 0xdc7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc78), 0x1e);
        EXPECT(gbc.readMem(0xdc79), 0x4f);
        // 1E 0029
        gbc.setState(0xe244, 0xd301, 0x6300, 0x1909, 0x325f, 0xcf1a, 0x1, 0x1);
        gbc.writeMem(0xe244, { 0x1e, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xd301);
        EXPECT(gbc.pc(), 0xe246);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe244), 0x1e);
        EXPECT(gbc.readMem(0xe245), 0x67);
        // 1E 002A
        gbc.setState(0x2f94, 0x3640, 0x63d0, 0x7b14, 0xd5aa, 0xb937, 0x1, 0x0);
        gbc.writeMem(0x2f94, { 0x1e, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x3640);
        EXPECT(gbc.pc(), 0x2f96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 002B
        gbc.setState(0x65e7, 0xd69d, 0x3280, 0xaf77, 0xc022, 0x54cd, 0x1, 0x0);
        gbc.writeMem(0x65e7, { 0x1e, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xd69d);
        EXPECT(gbc.pc(), 0x65e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 002C
        gbc.setState(0x9e1e, 0x6f99, 0x6f90, 0x26fa, 0x5ffb, 0x62cb, 0x0, 0x0);
        gbc.writeMem(0x9e1e, { 0x1e, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x6f99);
        EXPECT(gbc.pc(), 0x9e20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e1e), 0x1e);
        EXPECT(gbc.readMem(0x9e1f), 0x49);
        // 1E 002D
        gbc.setState(0xcda5, 0x373b, 0x97a0, 0x9b15, 0x7650, 0xa9e8, 0x1, 0x1);
        gbc.writeMem(0xcda5, { 0x1e, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x373b);
        EXPECT(gbc.pc(), 0xcda7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcda5), 0x1e);
        EXPECT(gbc.readMem(0xcda6), 0xa1);
        // 1E 002E
        gbc.setState(0x244, 0xca4a, 0x98e0, 0x67ac, 0x2d5f, 0x7fe5, 0x0, 0x1);
        gbc.writeMem(0x244, { 0x1e, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xca4a);
        EXPECT(gbc.pc(), 0x246);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 002F
        gbc.setState(0x5f71, 0xf051, 0x9f70, 0x3009, 0x33c8, 0x9be4, 0x1, 0x0);
        gbc.writeMem(0x5f71, { 0x1e, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xf051);
        EXPECT(gbc.pc(), 0x5f73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 0031
        gbc.setState(0x2f57, 0x1f73, 0x7e50, 0x2dbf, 0xc790, 0x80db, 0x1, 0x0);
        gbc.writeMem(0x2f57, { 0x1e, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x1f73);
        EXPECT(gbc.pc(), 0x2f59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 0032
        gbc.setState(0x736d, 0x766a, 0xc340, 0x8f1b, 0xc5ec, 0x10e7, 0x0, 0x0);
        gbc.writeMem(0x736d, { 0x1e, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x766a);
        EXPECT(gbc.pc(), 0x736f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 0033
        gbc.setState(0x582f, 0x5841, 0x3c80, 0xa35e, 0x8668, 0xc6a0, 0x0, 0x1);
        gbc.writeMem(0x582f, { 0x1e, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x5841);
        EXPECT(gbc.pc(), 0x5831);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 0034
        gbc.setState(0x6547, 0xc4b9, 0xfb90, 0x875e, 0x6ae2, 0xad73, 0x1, 0x1);
        gbc.writeMem(0x6547, { 0x1e, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xc4b9);
        EXPECT(gbc.pc(), 0x6549);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 0035
        gbc.setState(0x5b3a, 0xfc61, 0x25b0, 0xb9eb, 0xe4cd, 0x6195, 0x0, 0x0);
        gbc.writeMem(0x5b3a, { 0x1e, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xfc61);
        EXPECT(gbc.pc(), 0x5b3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 0037
        gbc.setState(0xcc4b, 0xd573, 0x7f00, 0xb78, 0x4832, 0x2f4f, 0x1, 0x0);
        gbc.writeMem(0xcc4b, { 0x1e, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xd573);
        EXPECT(gbc.pc(), 0xcc4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc4b), 0x1e);
        EXPECT(gbc.readMem(0xcc4c), 0x67);
        // 1E 0038
        gbc.setState(0x6a97, 0x7669, 0x20, 0xe515, 0x3425, 0x3175, 0x1, 0x0);
        gbc.writeMem(0x6a97, { 0x1e, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x7669);
        EXPECT(gbc.pc(), 0x6a99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 0039
        gbc.setState(0xa8b9, 0xc919, 0x7490, 0xe9c1, 0xfd0a, 0xa8c4, 0x1, 0x1);
        gbc.writeMem(0xa8b9, { 0x1e, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xc919);
        EXPECT(gbc.pc(), 0xa8bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8b9), 0x1e);
        EXPECT(gbc.readMem(0xa8ba), 0x50);
        // 1E 003A
        gbc.setState(0x9b34, 0xfe44, 0x6600, 0xa9b1, 0xb96f, 0xfd0b, 0x0, 0x1);
        gbc.writeMem(0x9b34, { 0x1e, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xfe44);
        EXPECT(gbc.pc(), 0x9b36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b34), 0x1e);
        EXPECT(gbc.readMem(0x9b35), 0x54);
        // 1E 003B
        gbc.setState(0x3806, 0xf9e0, 0x3e90, 0xb538, 0x48ea, 0xb64e, 0x1, 0x1);
        gbc.writeMem(0x3806, { 0x1e, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xf9e0);
        EXPECT(gbc.pc(), 0x3808);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 003C
        gbc.setState(0x189c, 0x611b, 0x36c0, 0x19e8, 0xc8e6, 0x1f85, 0x0, 0x1);
        gbc.writeMem(0x189c, { 0x1e, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x611b);
        EXPECT(gbc.pc(), 0x189e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 003D
        gbc.setState(0xc5b2, 0xaa01, 0x80b0, 0x6449, 0x79d7, 0x5636, 0x1, 0x0);
        gbc.writeMem(0xc5b2, { 0x1e, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xaa01);
        EXPECT(gbc.pc(), 0xc5b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5b2), 0x1e);
        EXPECT(gbc.readMem(0xc5b3), 0xaa);
        // 1E 003F
        gbc.setState(0x503d, 0x645f, 0xe240, 0x9144, 0x8ea5, 0xde1c, 0x0, 0x1);
        gbc.writeMem(0x503d, { 0x1e, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x645f);
        EXPECT(gbc.pc(), 0x503f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 0040
        gbc.setState(0x7a2c, 0x999d, 0x77d0, 0x61dc, 0x8f93, 0xfc95, 0x0, 0x1);
        gbc.writeMem(0x7a2c, { 0x1e, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x999d);
        EXPECT(gbc.pc(), 0x7a2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 0042
        gbc.setState(0x98ec, 0x6e9e, 0xad30, 0x4eef, 0x6953, 0xa511, 0x1, 0x1);
        gbc.writeMem(0x98ec, { 0x1e, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x6e9e);
        EXPECT(gbc.pc(), 0x98ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98ec), 0x1e);
        EXPECT(gbc.readMem(0x98ed), 0x7d);
        // 1E 0043
        gbc.setState(0x4af4, 0x4f78, 0xc0b0, 0x5b53, 0xfbf6, 0xdacc, 0x0, 0x0);
        gbc.writeMem(0x4af4, { 0x1e, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x4f78);
        EXPECT(gbc.pc(), 0x4af6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 0044
        gbc.setState(0x4893, 0xd942, 0x8960, 0x2705, 0xa951, 0xca88, 0x0, 0x0);
        gbc.writeMem(0x4893, { 0x1e, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xd942);
        EXPECT(gbc.pc(), 0x4895);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 0045
        gbc.setState(0x2fc5, 0x5280, 0x1640, 0x7da6, 0x63b5, 0x807c, 0x1, 0x0);
        gbc.writeMem(0x2fc5, { 0x1e, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x5280);
        EXPECT(gbc.pc(), 0x2fc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 0046
        gbc.setState(0x92ae, 0x65b5, 0xd110, 0xec3e, 0xa339, 0x24b1, 0x1, 0x0);
        gbc.writeMem(0x92ae, { 0x1e, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x65b5);
        EXPECT(gbc.pc(), 0x92b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92ae), 0x1e);
        EXPECT(gbc.readMem(0x92af), 0xc);
        // 1E 0047
        gbc.setState(0xcb67, 0x461, 0x3430, 0x8f2c, 0x783f, 0xcf09, 0x1, 0x1);
        gbc.writeMem(0xcb67, { 0x1e, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x461);
        EXPECT(gbc.pc(), 0xcb69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb67), 0x1e);
        EXPECT(gbc.readMem(0xcb68), 0xf8);
        // 1E 0048
        gbc.setState(0xaae7, 0xe70e, 0x7010, 0x59ee, 0x42bc, 0xe62b, 0x0, 0x0);
        gbc.writeMem(0xaae7, { 0x1e, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xe70e);
        EXPECT(gbc.pc(), 0xaae9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaae7), 0x1e);
        EXPECT(gbc.readMem(0xaae8), 0xb6);
        // 1E 0049
        gbc.setState(0x12d8, 0x2521, 0xeae0, 0x12d5, 0xa8ae, 0x6914, 0x1, 0x1);
        gbc.writeMem(0x12d8, { 0x1e, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x2521);
        EXPECT(gbc.pc(), 0x12da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 004A
        gbc.setState(0xeed8, 0xc19a, 0x2a70, 0xc6d7, 0x7c33, 0xff7e, 0x1, 0x0);
        gbc.writeMem(0xeed8, { 0x1e, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xc19a);
        EXPECT(gbc.pc(), 0xeeda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeed8), 0x1e);
        EXPECT(gbc.readMem(0xeed9), 0xe2);
        // 1E 004B
        gbc.setState(0xb5b8, 0x127d, 0x3150, 0xc61f, 0x9a4d, 0xa43e, 0x0, 0x1);
        gbc.writeMem(0xb5b8, { 0x1e, 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x127d);
        EXPECT(gbc.pc(), 0xb5ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5b8), 0x1e);
        EXPECT(gbc.readMem(0xb5b9), 0x5c);
        // 1E 004C
        gbc.setState(0x660d, 0xb349, 0xeb90, 0x2ccd, 0x657e, 0xa716, 0x0, 0x0);
        gbc.writeMem(0x660d, { 0x1e, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xb349);
        EXPECT(gbc.pc(), 0x660f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 004D
        gbc.setState(0xb6c6, 0x8c92, 0xeca0, 0xbb14, 0xdc89, 0x7cda, 0x0, 0x0);
        gbc.writeMem(0xb6c6, { 0x1e, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x8c92);
        EXPECT(gbc.pc(), 0xb6c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6c6), 0x1e);
        EXPECT(gbc.readMem(0xb6c7), 0x55);
        // 1E 004E
        gbc.setState(0x897c, 0xeaf, 0x5640, 0x9ae9, 0x743a, 0x328c, 0x0, 0x1);
        gbc.writeMem(0x897c, { 0x1e, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xeaf);
        EXPECT(gbc.pc(), 0x897e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x897c), 0x1e);
        EXPECT(gbc.readMem(0x897d), 0xf4);
        // 1E 004F
        gbc.setState(0x1da8, 0xbc12, 0x6de0, 0x2350, 0x7040, 0x3528, 0x1, 0x1);
        gbc.writeMem(0x1da8, { 0x1e, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xbc12);
        EXPECT(gbc.pc(), 0x1daa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 0051
        gbc.setState(0xca0d, 0xbc11, 0xb580, 0x9199, 0x9b6c, 0x3f56, 0x0, 0x1);
        gbc.writeMem(0xca0d, { 0x1e, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xbc11);
        EXPECT(gbc.pc(), 0xca0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca0d), 0x1e);
        EXPECT(gbc.readMem(0xca0e), 0x77);
        // 1E 0052
        gbc.setState(0xcf16, 0x3be6, 0x6ba0, 0xee51, 0x7c60, 0xc945, 0x1, 0x1);
        gbc.writeMem(0xcf16, { 0x1e, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x3be6);
        EXPECT(gbc.pc(), 0xcf18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf16), 0x1e);
        EXPECT(gbc.readMem(0xcf17), 0xfb);
        // 1E 0053
        gbc.setState(0x61b2, 0xf8df, 0x390, 0x3851, 0xb680, 0x1b97, 0x1, 0x0);
        gbc.writeMem(0x61b2, { 0x1e, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xf8df);
        EXPECT(gbc.pc(), 0x61b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 0054
        gbc.setState(0x6957, 0x3e10, 0xc5c0, 0xe966, 0x6aef, 0x3049, 0x0, 0x0);
        gbc.writeMem(0x6957, { 0x1e, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x3e10);
        EXPECT(gbc.pc(), 0x6959);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 0055
        gbc.setState(0x56d2, 0xdcf, 0x3ff0, 0x8125, 0x19bc, 0x1716, 0x1, 0x0);
        gbc.writeMem(0x56d2, { 0x1e, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xdcf);
        EXPECT(gbc.pc(), 0x56d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 0056
        gbc.setState(0x64b1, 0x8865, 0x4eb0, 0xe6cb, 0xac1, 0xf0bc, 0x0, 0x0);
        gbc.writeMem(0x64b1, { 0x1e, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x8865);
        EXPECT(gbc.pc(), 0x64b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 0057
        gbc.setState(0xafe5, 0x48ba, 0x74f0, 0x164d, 0x4bec, 0x154a, 0x1, 0x0);
        gbc.writeMem(0xafe5, { 0x1e, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x48ba);
        EXPECT(gbc.pc(), 0xafe7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafe5), 0x1e);
        EXPECT(gbc.readMem(0xafe6), 0xbf);
        // 1E 0058
        gbc.setState(0x6166, 0x276c, 0xb610, 0x9439, 0xd4d0, 0xaf7e, 0x0, 0x1);
        gbc.writeMem(0x6166, { 0x1e, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x276c);
        EXPECT(gbc.pc(), 0x6168);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 0059
        gbc.setState(0x2e37, 0xfd2c, 0xf910, 0x1309, 0xe3c7, 0xcad0, 0x0, 0x0);
        gbc.writeMem(0x2e37, { 0x1e, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xfd2c);
        EXPECT(gbc.pc(), 0x2e39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 005A
        gbc.setState(0x474, 0x7af2, 0x4e0, 0xdd63, 0x326, 0xc164, 0x1, 0x1);
        gbc.writeMem(0x474, { 0x1e, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x7af2);
        EXPECT(gbc.pc(), 0x476);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 005B
        gbc.setState(0xa34a, 0x2263, 0x5580, 0x4778, 0xe465, 0xab32, 0x0, 0x0);
        gbc.writeMem(0xa34a, { 0x1e, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x2263);
        EXPECT(gbc.pc(), 0xa34c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa34a), 0x1e);
        EXPECT(gbc.readMem(0xa34b), 0x42);
        // 1E 005C
        gbc.setState(0x290a, 0x3f6c, 0x1540, 0x2bb3, 0xa64, 0x5aae, 0x0, 0x1);
        gbc.writeMem(0x290a, { 0x1e, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x3f6c);
        EXPECT(gbc.pc(), 0x290c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 005D
        gbc.setState(0x78a3, 0x4087, 0x6f10, 0x12ca, 0xbdad, 0x8c18, 0x0, 0x1);
        gbc.writeMem(0x78a3, { 0x1e, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x4087);
        EXPECT(gbc.pc(), 0x78a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 005E
        gbc.setState(0x46cf, 0x374e, 0x2f10, 0xd99a, 0x2b52, 0xd448, 0x0, 0x1);
        gbc.writeMem(0x46cf, { 0x1e, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x374e);
        EXPECT(gbc.pc(), 0x46d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 005F
        gbc.setState(0x5208, 0xc0bb, 0xd1f0, 0x5a5c, 0xfef8, 0x451d, 0x1, 0x0);
        gbc.writeMem(0x5208, { 0x1e, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xc0bb);
        EXPECT(gbc.pc(), 0x520a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 0060
        gbc.setState(0x2f23, 0xbfbf, 0xb6e0, 0x6e4d, 0xd149, 0x458e, 0x1, 0x0);
        gbc.writeMem(0x2f23, { 0x1e, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xbfbf);
        EXPECT(gbc.pc(), 0x2f25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 0061
        gbc.setState(0x5f53, 0x9e07, 0xc1b0, 0x8c6b, 0xf744, 0xc1d, 0x0, 0x1);
        gbc.writeMem(0x5f53, { 0x1e, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x9e07);
        EXPECT(gbc.pc(), 0x5f55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 0062
        gbc.setState(0x2216, 0x28a5, 0x7460, 0x4e01, 0x5ee4, 0xb8ce, 0x0, 0x1);
        gbc.writeMem(0x2216, { 0x1e, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x28a5);
        EXPECT(gbc.pc(), 0x2218);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 0063
        gbc.setState(0x11d5, 0xdd0e, 0xd5e0, 0x11e1, 0x5d57, 0xca52, 0x1, 0x0);
        gbc.writeMem(0x11d5, { 0x1e, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xdd0e);
        EXPECT(gbc.pc(), 0x11d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 0066
        gbc.setState(0xc3cb, 0x87e0, 0x55a0, 0xcac7, 0xf2b4, 0xf501, 0x1, 0x0);
        gbc.writeMem(0xc3cb, { 0x1e, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x87e0);
        EXPECT(gbc.pc(), 0xc3cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3cb), 0x1e);
        EXPECT(gbc.readMem(0xc3cc), 0x72);
        // 1E 0067
        gbc.setState(0xb0bb, 0x7ecc, 0x7b30, 0xbd7a, 0x46ac, 0x6854, 0x1, 0x0);
        gbc.writeMem(0xb0bb, { 0x1e, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x7ecc);
        EXPECT(gbc.pc(), 0xb0bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0bb), 0x1e);
        EXPECT(gbc.readMem(0xb0bc), 0x38);
        // 1E 0068
        gbc.setState(0x1b42, 0x4026, 0xb940, 0x8f73, 0x413c, 0x9095, 0x0, 0x1);
        gbc.writeMem(0x1b42, { 0x1e, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x4026);
        EXPECT(gbc.pc(), 0x1b44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 0069
        gbc.setState(0xdec, 0x425, 0xa2a0, 0x12bf, 0x3779, 0xc413, 0x1, 0x0);
        gbc.writeMem(0xdec, { 0x1e, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x425);
        EXPECT(gbc.pc(), 0xdee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 006A
        gbc.setState(0xcea7, 0xbe99, 0x22c0, 0x36ba, 0x2572, 0xa90a, 0x1, 0x0);
        gbc.writeMem(0xcea7, { 0x1e, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xbe99);
        EXPECT(gbc.pc(), 0xcea9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcea7), 0x1e);
        EXPECT(gbc.readMem(0xcea8), 0xb);
        // 1E 006B
        gbc.setState(0xacb2, 0x5280, 0xc5f0, 0xf504, 0x1bf5, 0x7e37, 0x1, 0x0);
        gbc.writeMem(0xacb2, { 0x1e, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x5280);
        EXPECT(gbc.pc(), 0xacb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacb2), 0x1e);
        EXPECT(gbc.readMem(0xacb3), 0xab);
        // 1E 006C
        gbc.setState(0x4345, 0x437c, 0x8df0, 0x536a, 0xc5fe, 0x279f, 0x1, 0x0);
        gbc.writeMem(0x4345, { 0x1e, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x437c);
        EXPECT(gbc.pc(), 0x4347);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 006D
        gbc.setState(0xa9e5, 0x1d1e, 0x2800, 0x7264, 0x77f3, 0xc46d, 0x1, 0x1);
        gbc.writeMem(0xa9e5, { 0x1e, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x1d1e);
        EXPECT(gbc.pc(), 0xa9e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9e5), 0x1e);
        EXPECT(gbc.readMem(0xa9e6), 0xaf);
        // 1E 006E
        gbc.setState(0xd0, 0xe9d7, 0x1f40, 0x4c62, 0xe3e5, 0x7bfd, 0x0, 0x1);
        gbc.writeMem(0xd0, { 0x1e, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xe9d7);
        EXPECT(gbc.pc(), 0xd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 006F
        gbc.setState(0xb9ac, 0x4d58, 0xe6f0, 0x2f89, 0xe0a, 0x7978, 0x1, 0x1);
        gbc.writeMem(0xb9ac, { 0x1e, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x4d58);
        EXPECT(gbc.pc(), 0xb9ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9ac), 0x1e);
        EXPECT(gbc.readMem(0xb9ad), 0xb6);
        // 1E 0070
        gbc.setState(0x285d, 0x7c65, 0x4f20, 0x8c2a, 0x8b28, 0xbe, 0x1, 0x1);
        gbc.writeMem(0x285d, { 0x1e, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x7c65);
        EXPECT(gbc.pc(), 0x285f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 0071
        gbc.setState(0x184, 0xe930, 0x6120, 0xa434, 0x9d54, 0x250d, 0x0, 0x1);
        gbc.writeMem(0x184, { 0x1e, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xe930);
        EXPECT(gbc.pc(), 0x186);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 0072
        gbc.setState(0xc983, 0xa065, 0xdb10, 0x9274, 0x8ea6, 0xeae, 0x0, 0x0);
        gbc.writeMem(0xc983, { 0x1e, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xa065);
        EXPECT(gbc.pc(), 0xc985);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc983), 0x1e);
        EXPECT(gbc.readMem(0xc984), 0x51);
        // 1E 0073
        gbc.setState(0x8718, 0xc9e0, 0xd150, 0x7fcb, 0xe6c0, 0x6b75, 0x1, 0x1);
        gbc.writeMem(0x8718, { 0x1e, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xc9e0);
        EXPECT(gbc.pc(), 0x871a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8718), 0x1e);
        EXPECT(gbc.readMem(0x8719), 0xeb);
        // 1E 0074
        gbc.setState(0xc47e, 0xbc6a, 0x7430, 0x1020, 0xd3f3, 0xa3a2, 0x0, 0x1);
        gbc.writeMem(0xc47e, { 0x1e, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xbc6a);
        EXPECT(gbc.pc(), 0xc480);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc47e), 0x1e);
        EXPECT(gbc.readMem(0xc47f), 0x12);
        // 1E 0075
        gbc.setState(0xa09f, 0x9fb3, 0x6190, 0x4e7d, 0xbf83, 0xbcc0, 0x0, 0x0);
        gbc.writeMem(0xa09f, { 0x1e, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x9fb3);
        EXPECT(gbc.pc(), 0xa0a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa09f), 0x1e);
        EXPECT(gbc.readMem(0xa0a0), 0xbc);
        // 1E 0076
        gbc.setState(0x5292, 0x88c, 0x8910, 0x113d, 0xfe9e, 0x7a82, 0x1, 0x1);
        gbc.writeMem(0x5292, { 0x1e, 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x88c);
        EXPECT(gbc.pc(), 0x5294);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 0077
        gbc.setState(0xeb8e, 0xce37, 0xd7c0, 0x6ba9, 0x47ce, 0xeaee, 0x1, 0x1);
        gbc.writeMem(0xeb8e, { 0x1e, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xce37);
        EXPECT(gbc.pc(), 0xeb90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb8e), 0x1e);
        EXPECT(gbc.readMem(0xeb8f), 0xd5);
        // 1E 0078
        gbc.setState(0x6b4a, 0x7a4c, 0x7c70, 0x4f00, 0xdb70, 0x7231, 0x0, 0x1);
        gbc.writeMem(0x6b4a, { 0x1e, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x7a4c);
        EXPECT(gbc.pc(), 0x6b4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 0079
        gbc.setState(0x3232, 0x46ce, 0x1db0, 0x1f01, 0x301b, 0xa56a, 0x1, 0x1);
        gbc.writeMem(0x3232, { 0x1e, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x46ce);
        EXPECT(gbc.pc(), 0x3234);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 007A
        gbc.setState(0x742f, 0x63d7, 0x26b0, 0xe75, 0x3674, 0x3378, 0x1, 0x0);
        gbc.writeMem(0x742f, { 0x1e, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x63d7);
        EXPECT(gbc.pc(), 0x7431);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 007B
        gbc.setState(0xdfc7, 0x9a7e, 0x8720, 0x950e, 0x4e1e, 0x303a, 0x0, 0x1);
        gbc.writeMem(0xdfc7, { 0x1e, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x9a7e);
        EXPECT(gbc.pc(), 0xdfc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfc7), 0x1e);
        EXPECT(gbc.readMem(0xdfc8), 0x72);
        // 1E 007D
        gbc.setState(0x3bdf, 0x5496, 0xaef0, 0x6163, 0xa37e, 0xa3d4, 0x0, 0x1);
        gbc.writeMem(0x3bdf, { 0x1e, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x5496);
        EXPECT(gbc.pc(), 0x3be1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 007E
        gbc.setState(0x73b0, 0x558, 0xf130, 0x8070, 0x2421, 0xf4b6, 0x0, 0x1);
        gbc.writeMem(0x73b0, { 0x1e, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x558);
        EXPECT(gbc.pc(), 0x73b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 007F
        gbc.setState(0x5092, 0x5ad, 0x5390, 0x4109, 0xf3b4, 0xf119, 0x1, 0x1);
        gbc.writeMem(0x5092, { 0x1e, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x5ad);
        EXPECT(gbc.pc(), 0x5094);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 0080
        gbc.setState(0x84a9, 0xeac8, 0xb480, 0x69c3, 0xb531, 0xbb63, 0x1, 0x1);
        gbc.writeMem(0x84a9, { 0x1e, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xeac8);
        EXPECT(gbc.pc(), 0x84ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84a9), 0x1e);
        EXPECT(gbc.readMem(0x84aa), 0xe7);
        // 1E 0081
        gbc.setState(0xb973, 0x6f1d, 0x7420, 0x2927, 0x8042, 0xa441, 0x1, 0x1);
        gbc.writeMem(0xb973, { 0x1e, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x6f1d);
        EXPECT(gbc.pc(), 0xb975);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb973), 0x1e);
        EXPECT(gbc.readMem(0xb974), 0xd7);
        // 1E 0082
        gbc.setState(0xbea2, 0xf56e, 0xc7d0, 0x5f37, 0x9657, 0x1445, 0x1, 0x1);
        gbc.writeMem(0xbea2, { 0x1e, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xf56e);
        EXPECT(gbc.pc(), 0xbea4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbea2), 0x1e);
        EXPECT(gbc.readMem(0xbea3), 0x31);
        // 1E 0083
        gbc.setState(0x2e8b, 0xd9e5, 0x7d60, 0x6341, 0x282e, 0x451a, 0x0, 0x1);
        gbc.writeMem(0x2e8b, { 0x1e, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xd9e5);
        EXPECT(gbc.pc(), 0x2e8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 0084
        gbc.setState(0xc3a9, 0xa79, 0x5560, 0x5ca5, 0xbb38, 0x84b5, 0x0, 0x1);
        gbc.writeMem(0xc3a9, { 0x1e, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xa79);
        EXPECT(gbc.pc(), 0xc3ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3a9), 0x1e);
        EXPECT(gbc.readMem(0xc3aa), 0xf8);
        // 1E 0086
        gbc.setState(0xd599, 0xf48c, 0x9b00, 0x418e, 0x9d82, 0x6aa5, 0x1, 0x1);
        gbc.writeMem(0xd599, { 0x1e, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xf48c);
        EXPECT(gbc.pc(), 0xd59b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd599), 0x1e);
        EXPECT(gbc.readMem(0xd59a), 0x8e);
        // 1E 0087
        gbc.setState(0x5f86, 0x9adf, 0xa6c0, 0xdb4, 0xa8cb, 0xe071, 0x1, 0x0);
        gbc.writeMem(0x5f86, { 0x1e, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x9adf);
        EXPECT(gbc.pc(), 0x5f88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 0088
        gbc.setState(0xc10d, 0x5f6c, 0xf460, 0x60e, 0xc7e, 0x909c, 0x0, 0x1);
        gbc.writeMem(0xc10d, { 0x1e, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x5f6c);
        EXPECT(gbc.pc(), 0xc10f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc10d), 0x1e);
        EXPECT(gbc.readMem(0xc10e), 0x15);
        // 1E 0089
        gbc.setState(0xdb68, 0xca85, 0xa9d0, 0x7915, 0x896f, 0x244e, 0x1, 0x1);
        gbc.writeMem(0xdb68, { 0x1e, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xca85);
        EXPECT(gbc.pc(), 0xdb6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb68), 0x1e);
        EXPECT(gbc.readMem(0xdb69), 0x44);
        // 1E 008A
        gbc.setState(0xb1c3, 0x72dd, 0x6080, 0x22c, 0x2e7, 0x4b09, 0x1, 0x1);
        gbc.writeMem(0xb1c3, { 0x1e, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x72dd);
        EXPECT(gbc.pc(), 0xb1c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1c3), 0x1e);
        EXPECT(gbc.readMem(0xb1c4), 0x25);
        // 1E 008B
        gbc.setState(0x3ec1, 0x5c9a, 0xa840, 0x6d07, 0xc72e, 0xc905, 0x0, 0x1);
        gbc.writeMem(0x3ec1, { 0x1e, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x5c9a);
        EXPECT(gbc.pc(), 0x3ec3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 008C
        gbc.setState(0x765, 0xe7b1, 0x2360, 0x4f28, 0xce61, 0xc65b, 0x0, 0x1);
        gbc.writeMem(0x765, { 0x1e, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xe7b1);
        EXPECT(gbc.pc(), 0x767);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 008D
        gbc.setState(0x2d5c, 0xb69a, 0xbd50, 0xc5c3, 0x559d, 0x5b0b, 0x1, 0x1);
        gbc.writeMem(0x2d5c, { 0x1e, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xb69a);
        EXPECT(gbc.pc(), 0x2d5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 008E
        gbc.setState(0xd508, 0x938c, 0xc8c0, 0xdcc5, 0xfc8, 0xe41, 0x1, 0x1);
        gbc.writeMem(0xd508, { 0x1e, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x938c);
        EXPECT(gbc.pc(), 0xd50a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd508), 0x1e);
        EXPECT(gbc.readMem(0xd509), 0xc);
        // 1E 008F
        gbc.setState(0xa9fd, 0x62c1, 0x6b50, 0x562, 0x3261, 0x37, 0x0, 0x0);
        gbc.writeMem(0xa9fd, { 0x1e, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x62c1);
        EXPECT(gbc.pc(), 0xa9ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9fd), 0x1e);
        EXPECT(gbc.readMem(0xa9fe), 0x77);
        // 1E 0090
        gbc.setState(0xc3b1, 0xc9a8, 0xd090, 0x49a0, 0xe99e, 0xb393, 0x0, 0x1);
        gbc.writeMem(0xc3b1, { 0x1e, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xc9a8);
        EXPECT(gbc.pc(), 0xc3b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3b1), 0x1e);
        EXPECT(gbc.readMem(0xc3b2), 0x72);
        // 1E 0091
        gbc.setState(0xbbf2, 0x2849, 0x1480, 0xd8bb, 0xd1ee, 0x5086, 0x1, 0x0);
        gbc.writeMem(0xbbf2, { 0x1e, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x2849);
        EXPECT(gbc.pc(), 0xbbf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbf2), 0x1e);
        EXPECT(gbc.readMem(0xbbf3), 0xc9);
        // 1E 0092
        gbc.setState(0xc9ed, 0xc0b8, 0xb850, 0x70b6, 0xdf54, 0x328a, 0x1, 0x1);
        gbc.writeMem(0xc9ed, { 0x1e, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xc0b8);
        EXPECT(gbc.pc(), 0xc9ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9ed), 0x1e);
        EXPECT(gbc.readMem(0xc9ee), 0x5b);
        // 1E 0093
        gbc.setState(0xd8ca, 0x62c3, 0x5a50, 0x7338, 0x4837, 0xf613, 0x0, 0x1);
        gbc.writeMem(0xd8ca, { 0x1e, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x62c3);
        EXPECT(gbc.pc(), 0xd8cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8ca), 0x1e);
        EXPECT(gbc.readMem(0xd8cb), 0x8f);
        // 1E 0094
        gbc.setState(0x65c9, 0xf608, 0xe400, 0x8300, 0x305d, 0x7cb7, 0x1, 0x0);
        gbc.writeMem(0x65c9, { 0x1e, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xf608);
        EXPECT(gbc.pc(), 0x65cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 0095
        gbc.setState(0x2c9a, 0x5eba, 0x25e0, 0xfaa7, 0x5c05, 0x7eee, 0x0, 0x0);
        gbc.writeMem(0x2c9a, { 0x1e, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x5eba);
        EXPECT(gbc.pc(), 0x2c9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 0096
        gbc.setState(0x2851, 0xc508, 0x6940, 0x7700, 0x34ee, 0xa642, 0x1, 0x1);
        gbc.writeMem(0x2851, { 0x1e, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xc508);
        EXPECT(gbc.pc(), 0x2853);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 0097
        gbc.setState(0xab9c, 0x4211, 0xa220, 0x7892, 0x7f47, 0x63e3, 0x1, 0x1);
        gbc.writeMem(0xab9c, { 0x1e, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x4211);
        EXPECT(gbc.pc(), 0xab9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab9c), 0x1e);
        EXPECT(gbc.readMem(0xab9d), 0x4a);
        // 1E 0098
        gbc.setState(0x8bc2, 0xd813, 0xd550, 0x73dc, 0xbec7, 0x49eb, 0x0, 0x0);
        gbc.writeMem(0x8bc2, { 0x1e, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xd813);
        EXPECT(gbc.pc(), 0x8bc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bc2), 0x1e);
        EXPECT(gbc.readMem(0x8bc3), 0xa8);
        // 1E 0099
        gbc.setState(0xb3e9, 0xf42, 0xe9f0, 0x9c8d, 0xc74d, 0x8e23, 0x0, 0x1);
        gbc.writeMem(0xb3e9, { 0x1e, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xf42);
        EXPECT(gbc.pc(), 0xb3eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3e9), 0x1e);
        EXPECT(gbc.readMem(0xb3ea), 0xd);
        // 1E 009A
        gbc.setState(0x9882, 0xb722, 0x1700, 0x46be, 0xd1f7, 0x7b4b, 0x0, 0x1);
        gbc.writeMem(0x9882, { 0x1e, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xb722);
        EXPECT(gbc.pc(), 0x9884);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9882), 0x1e);
        EXPECT(gbc.readMem(0x9883), 0x92);
        // 1E 009C
        gbc.setState(0x197, 0x7e82, 0x5410, 0x9bb2, 0xb053, 0x8d66, 0x1, 0x0);
        gbc.writeMem(0x197, { 0x1e, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x7e82);
        EXPECT(gbc.pc(), 0x199);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 009D
        gbc.setState(0x9397, 0x45b8, 0xd390, 0x2c03, 0x2ebe, 0xb31c, 0x1, 0x0);
        gbc.writeMem(0x9397, { 0x1e, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x45b8);
        EXPECT(gbc.pc(), 0x9399);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9397), 0x1e);
        EXPECT(gbc.readMem(0x9398), 0x13);
        // 1E 009E
        gbc.setState(0x901b, 0xf0c1, 0xba90, 0x392e, 0x934f, 0x600b, 0x1, 0x0);
        gbc.writeMem(0x901b, { 0x1e, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xf0c1);
        EXPECT(gbc.pc(), 0x901d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x901b), 0x1e);
        EXPECT(gbc.readMem(0x901c), 0x41);
        // 1E 009F
        gbc.setState(0x968, 0x3724, 0x4070, 0xc04c, 0xc951, 0xc150, 0x1, 0x1);
        gbc.writeMem(0x968, { 0x1e, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x3724);
        EXPECT(gbc.pc(), 0x96a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 00A0
        gbc.setState(0x8b5d, 0xdddb, 0xd750, 0xe53a, 0xe909, 0xb229, 0x1, 0x1);
        gbc.writeMem(0x8b5d, { 0x1e, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xdddb);
        EXPECT(gbc.pc(), 0x8b5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b5d), 0x1e);
        EXPECT(gbc.readMem(0x8b5e), 0x60);
        // 1E 00A1
        gbc.setState(0x51bc, 0x2af0, 0x7590, 0xbf9a, 0x2c2b, 0xbb0d, 0x1, 0x0);
        gbc.writeMem(0x51bc, { 0x1e, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x2af0);
        EXPECT(gbc.pc(), 0x51be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 00A2
        gbc.setState(0x1f40, 0x223a, 0x7980, 0xb33e, 0x64a1, 0x365f, 0x1, 0x0);
        gbc.writeMem(0x1f40, { 0x1e, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x223a);
        EXPECT(gbc.pc(), 0x1f42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 00A3
        gbc.setState(0xd56b, 0xf7d8, 0x3bb0, 0x7e0d, 0x9717, 0x8a79, 0x1, 0x1);
        gbc.writeMem(0xd56b, { 0x1e, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xf7d8);
        EXPECT(gbc.pc(), 0xd56d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd56b), 0x1e);
        EXPECT(gbc.readMem(0xd56c), 0xe);
        // 1E 00A4
        gbc.setState(0x9ec6, 0xc6e3, 0x9370, 0x85e2, 0x6fae, 0xd2de, 0x1, 0x1);
        gbc.writeMem(0x9ec6, { 0x1e, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xc6e3);
        EXPECT(gbc.pc(), 0x9ec8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ec6), 0x1e);
        EXPECT(gbc.readMem(0x9ec7), 0x6a);
        // 1E 00A5
        gbc.setState(0x14e, 0x36d6, 0x4a50, 0x2600, 0x4b57, 0x5059, 0x0, 0x1);
        gbc.writeMem(0x14e, { 0x1e, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x36d6);
        EXPECT(gbc.pc(), 0x150);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 00A6
        gbc.setState(0x6bd8, 0x3965, 0xd080, 0xe537, 0xd789, 0x9493, 0x1, 0x1);
        gbc.writeMem(0x6bd8, { 0x1e, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x3965);
        EXPECT(gbc.pc(), 0x6bda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 00A8
        gbc.setState(0x8f6c, 0xe453, 0x9170, 0x6ce1, 0x309d, 0xb1a4, 0x0, 0x0);
        gbc.writeMem(0x8f6c, { 0x1e, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xe453);
        EXPECT(gbc.pc(), 0x8f6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f6c), 0x1e);
        EXPECT(gbc.readMem(0x8f6d), 0x64);
        // 1E 00A9
        gbc.setState(0xa43d, 0xc81a, 0x1080, 0x8db9, 0xc10, 0x8fa9, 0x0, 0x0);
        gbc.writeMem(0xa43d, { 0x1e, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xc81a);
        EXPECT(gbc.pc(), 0xa43f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa43d), 0x1e);
        EXPECT(gbc.readMem(0xa43e), 0xa4);
        // 1E 00AB
        gbc.setState(0xdbac, 0x1ac1, 0x5820, 0x3c74, 0xac35, 0x25f9, 0x0, 0x1);
        gbc.writeMem(0xdbac, { 0x1e, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x1ac1);
        EXPECT(gbc.pc(), 0xdbae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbac), 0x1e);
        EXPECT(gbc.readMem(0xdbad), 0x22);
        // 1E 00AC
        gbc.setState(0x63, 0xcd01, 0x1210, 0x7780, 0x173b, 0xa4a8, 0x0, 0x0);
        gbc.writeMem(0x63, { 0x1e, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xcd01);
        EXPECT(gbc.pc(), 0x65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 00AD
        gbc.setState(0x8808, 0x721f, 0x94c0, 0x92ff, 0xfae5, 0xfa7b, 0x0, 0x1);
        gbc.writeMem(0x8808, { 0x1e, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x721f);
        EXPECT(gbc.pc(), 0x880a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8808), 0x1e);
        EXPECT(gbc.readMem(0x8809), 0xa6);
        // 1E 00AE
        gbc.setState(0x8152, 0x327d, 0x4ee0, 0x5f81, 0x40c0, 0x2e6e, 0x1, 0x1);
        gbc.writeMem(0x8152, { 0x1e, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x327d);
        EXPECT(gbc.pc(), 0x8154);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8152), 0x1e);
        EXPECT(gbc.readMem(0x8153), 0x2f);
        // 1E 00AF
        gbc.setState(0xeb6f, 0x8715, 0xc9c0, 0xd2fc, 0x6b90, 0x5fad, 0x0, 0x0);
        gbc.writeMem(0xeb6f, { 0x1e, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x8715);
        EXPECT(gbc.pc(), 0xeb71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb6f), 0x1e);
        EXPECT(gbc.readMem(0xeb70), 0xe5);
        // 1E 00B1
        gbc.setState(0x593d, 0xc847, 0x6f20, 0x85ab, 0x6305, 0xbc74, 0x1, 0x0);
        gbc.writeMem(0x593d, { 0x1e, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xc847);
        EXPECT(gbc.pc(), 0x593f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 00B2
        gbc.setState(0xe79e, 0x7037, 0xc5e0, 0xda44, 0x9dd, 0x22f4, 0x1, 0x0);
        gbc.writeMem(0xe79e, { 0x1e, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x7037);
        EXPECT(gbc.pc(), 0xe7a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe79e), 0x1e);
        EXPECT(gbc.readMem(0xe79f), 0x5e);
        // 1E 00B3
        gbc.setState(0x96e0, 0x11e2, 0x8b70, 0xdc5c, 0xb505, 0xb72, 0x0, 0x0);
        gbc.writeMem(0x96e0, { 0x1e, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x11e2);
        EXPECT(gbc.pc(), 0x96e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96e0), 0x1e);
        EXPECT(gbc.readMem(0x96e1), 0xf1);
        // 1E 00B4
        gbc.setState(0x1fc8, 0x68ed, 0xa530, 0xf708, 0xea9, 0xb9b3, 0x1, 0x1);
        gbc.writeMem(0x1fc8, { 0x1e, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x68ed);
        EXPECT(gbc.pc(), 0x1fca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 00B5
        gbc.setState(0x4af8, 0x9d4b, 0x6cb0, 0x58ce, 0x2635, 0x3060, 0x1, 0x0);
        gbc.writeMem(0x4af8, { 0x1e, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x9d4b);
        EXPECT(gbc.pc(), 0x4afa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 00B6
        gbc.setState(0x20b2, 0x22b, 0x3cc0, 0x19dd, 0x5c1c, 0xc313, 0x1, 0x0);
        gbc.writeMem(0x20b2, { 0x1e, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x22b);
        EXPECT(gbc.pc(), 0x20b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 00B7
        gbc.setState(0x878f, 0x7ea9, 0x47c0, 0x3515, 0xb2f6, 0x93b6, 0x0, 0x0);
        gbc.writeMem(0x878f, { 0x1e, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x7ea9);
        EXPECT(gbc.pc(), 0x8791);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x878f), 0x1e);
        EXPECT(gbc.readMem(0x8790), 0x84);
        // 1E 00B8
        gbc.setState(0xe368, 0xb440, 0xe5d0, 0xbbf7, 0x8da1, 0x199, 0x0, 0x0);
        gbc.writeMem(0xe368, { 0x1e, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xb440);
        EXPECT(gbc.pc(), 0xe36a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe368), 0x1e);
        EXPECT(gbc.readMem(0xe369), 0x61);
        // 1E 00B9
        gbc.setState(0xcd4c, 0x96d6, 0xa810, 0x272f, 0x77ae, 0x330e, 0x0, 0x0);
        gbc.writeMem(0xcd4c, { 0x1e, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x96d6);
        EXPECT(gbc.pc(), 0xcd4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd4c), 0x1e);
        EXPECT(gbc.readMem(0xcd4d), 0x45);
        // 1E 00BA
        gbc.setState(0x8669, 0x8a35, 0x3ad0, 0xf057, 0x69a5, 0x2e12, 0x1, 0x1);
        gbc.writeMem(0x8669, { 0x1e, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x8a35);
        EXPECT(gbc.pc(), 0x866b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8669), 0x1e);
        EXPECT(gbc.readMem(0x866a), 0xee);
        // 1E 00BB
        gbc.setState(0x84dc, 0x35d7, 0xdf90, 0xd498, 0xc42f, 0x25e8, 0x0, 0x1);
        gbc.writeMem(0x84dc, { 0x1e, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x35d7);
        EXPECT(gbc.pc(), 0x84de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84dc), 0x1e);
        EXPECT(gbc.readMem(0x84dd), 0xe7);
        // 1E 00BC
        gbc.setState(0x8b5d, 0x4a0e, 0x9270, 0x1e7e, 0x1a4a, 0x9db0, 0x0, 0x1);
        gbc.writeMem(0x8b5d, { 0x1e, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x4a0e);
        EXPECT(gbc.pc(), 0x8b5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b5d), 0x1e);
        EXPECT(gbc.readMem(0x8b5e), 0x60);
        // 1E 00BD
        gbc.setState(0xdf40, 0xa1fd, 0xa7c0, 0x90c1, 0x3756, 0x5203, 0x1, 0x0);
        gbc.writeMem(0xdf40, { 0x1e, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xa1fd);
        EXPECT(gbc.pc(), 0xdf42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf40), 0x1e);
        EXPECT(gbc.readMem(0xdf41), 0x14);
        // 1E 00BE
        gbc.setState(0x6f8d, 0x53c6, 0x27b0, 0x9227, 0xf364, 0x5925, 0x1, 0x0);
        gbc.writeMem(0x6f8d, { 0x1e, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x53c6);
        EXPECT(gbc.pc(), 0x6f8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 00C0
        gbc.setState(0xd7b6, 0xba0f, 0xbb70, 0x2ff7, 0x9584, 0x497, 0x1, 0x1);
        gbc.writeMem(0xd7b6, { 0x1e, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xba0f);
        EXPECT(gbc.pc(), 0xd7b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7b6), 0x1e);
        EXPECT(gbc.readMem(0xd7b7), 0x2b);
        // 1E 00C1
        gbc.setState(0x70cb, 0xfc50, 0xd9f0, 0xdbc2, 0xd551, 0x12ed, 0x1, 0x1);
        gbc.writeMem(0x70cb, { 0x1e, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xfc50);
        EXPECT(gbc.pc(), 0x70cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 00C2
        gbc.setState(0xd344, 0x18e6, 0x8580, 0xdf28, 0xb3c7, 0xd622, 0x0, 0x0);
        gbc.writeMem(0xd344, { 0x1e, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x18e6);
        EXPECT(gbc.pc(), 0xd346);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd344), 0x1e);
        EXPECT(gbc.readMem(0xd345), 0xeb);
        // 1E 00C3
        gbc.setState(0xa36d, 0xb9d8, 0xaa20, 0xd451, 0x701c, 0x58e1, 0x0, 0x0);
        gbc.writeMem(0xa36d, { 0x1e, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xb9d8);
        EXPECT(gbc.pc(), 0xa36f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa36d), 0x1e);
        EXPECT(gbc.readMem(0xa36e), 0x6a);
        // 1E 00C4
        gbc.setState(0x9f21, 0x1768, 0xeee0, 0x3113, 0x6186, 0xd7ea, 0x0, 0x1);
        gbc.writeMem(0x9f21, { 0x1e, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x1768);
        EXPECT(gbc.pc(), 0x9f23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f21), 0x1e);
        EXPECT(gbc.readMem(0x9f22), 0x5f);
        // 1E 00C5
        gbc.setState(0x74bf, 0xb20c, 0x1010, 0xf72c, 0x77f9, 0x7db8, 0x0, 0x0);
        gbc.writeMem(0x74bf, { 0x1e, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xb20c);
        EXPECT(gbc.pc(), 0x74c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 00C7
        gbc.setState(0xdc35, 0x43cc, 0x2a90, 0x9964, 0x8ae7, 0x6ea4, 0x0, 0x0);
        gbc.writeMem(0xdc35, { 0x1e, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x43cc);
        EXPECT(gbc.pc(), 0xdc37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc35), 0x1e);
        EXPECT(gbc.readMem(0xdc36), 0xd1);
        // 1E 00C8
        gbc.setState(0x5d22, 0xd6d3, 0x7ce0, 0xf11, 0x6449, 0x2543, 0x1, 0x0);
        gbc.writeMem(0x5d22, { 0x1e, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xd6d3);
        EXPECT(gbc.pc(), 0x5d24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 00C9
        gbc.setState(0xbe6d, 0x9488, 0x1960, 0x3692, 0xe148, 0x46b8, 0x0, 0x1);
        gbc.writeMem(0xbe6d, { 0x1e, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x9488);
        EXPECT(gbc.pc(), 0xbe6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe6d), 0x1e);
        EXPECT(gbc.readMem(0xbe6e), 0xb6);
        // 1E 00CA
        gbc.setState(0x6581, 0x50bd, 0xade0, 0x62e0, 0x433c, 0x45b, 0x0, 0x1);
        gbc.writeMem(0x6581, { 0x1e, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x50bd);
        EXPECT(gbc.pc(), 0x6583);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 00CB
        gbc.setState(0x1eee, 0xfd7, 0xc810, 0x420f, 0xfe53, 0xaf0b, 0x1, 0x0);
        gbc.writeMem(0x1eee, { 0x1e, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xfd7);
        EXPECT(gbc.pc(), 0x1ef0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 00CC
        gbc.setState(0x49b8, 0xfbff, 0x4e50, 0x85e5, 0xedec, 0x59af, 0x0, 0x0);
        gbc.writeMem(0x49b8, { 0x1e, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xfbff);
        EXPECT(gbc.pc(), 0x49ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 00CD
        gbc.setState(0x7a0c, 0xd21f, 0x4be0, 0x1ff8, 0xa90a, 0xc101, 0x1, 0x0);
        gbc.writeMem(0x7a0c, { 0x1e, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xd21f);
        EXPECT(gbc.pc(), 0x7a0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 00CE
        gbc.setState(0x50d1, 0xaed0, 0x5420, 0xd828, 0xdbef, 0x136c, 0x1, 0x1);
        gbc.writeMem(0x50d1, { 0x1e, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xaed0);
        EXPECT(gbc.pc(), 0x50d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 00CF
        gbc.setState(0x6002, 0x65f7, 0x5720, 0x2b65, 0xd2cc, 0xf578, 0x0, 0x1);
        gbc.writeMem(0x6002, { 0x1e, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x65f7);
        EXPECT(gbc.pc(), 0x6004);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 00D0
        gbc.setState(0xcfbb, 0x3fe3, 0xa210, 0x3168, 0xc7cb, 0x5538, 0x1, 0x1);
        gbc.writeMem(0xcfbb, { 0x1e, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x3fe3);
        EXPECT(gbc.pc(), 0xcfbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfbb), 0x1e);
        EXPECT(gbc.readMem(0xcfbc), 0x7c);
        // 1E 00D1
        gbc.setState(0x1cae, 0xd49e, 0x7cd0, 0x303e, 0x6507, 0x5e5d, 0x1, 0x1);
        gbc.writeMem(0x1cae, { 0x1e, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xd49e);
        EXPECT(gbc.pc(), 0x1cb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 00D2
        gbc.setState(0x9c22, 0x7dba, 0xebd0, 0x4d96, 0xf98c, 0x611b, 0x0, 0x1);
        gbc.writeMem(0x9c22, { 0x1e, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x7dba);
        EXPECT(gbc.pc(), 0x9c24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c22), 0x1e);
        EXPECT(gbc.readMem(0x9c23), 0xd6);
        // 1E 00D3
        gbc.setState(0x8515, 0x5c2, 0xfed0, 0x5cec, 0xa1aa, 0x1280, 0x1, 0x0);
        gbc.writeMem(0x8515, { 0x1e, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x5c2);
        EXPECT(gbc.pc(), 0x8517);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8515), 0x1e);
        EXPECT(gbc.readMem(0x8516), 0xb8);
        // 1E 00D4
        gbc.setState(0x4405, 0xa3ef, 0x2d50, 0x5fe0, 0x5ceb, 0xb080, 0x1, 0x0);
        gbc.writeMem(0x4405, { 0x1e, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xa3ef);
        EXPECT(gbc.pc(), 0x4407);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 00D5
        gbc.setState(0x551e, 0x2a2a, 0xaf80, 0x6d4b, 0x8d30, 0xa6e2, 0x0, 0x1);
        gbc.writeMem(0x551e, { 0x1e, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x2a2a);
        EXPECT(gbc.pc(), 0x5520);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 00D6
        gbc.setState(0x8, 0x2578, 0xf860, 0xfb03, 0xb0d, 0x6471, 0x0, 0x1);
        gbc.writeMem(0x8, { 0x1e, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x2578);
        EXPECT(gbc.pc(), 0xa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 00D7
        gbc.setState(0x8927, 0x6dbd, 0x94e0, 0xa9d3, 0xeb7b, 0xa297, 0x0, 0x0);
        gbc.writeMem(0x8927, { 0x1e, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x6dbd);
        EXPECT(gbc.pc(), 0x8929);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8927), 0x1e);
        EXPECT(gbc.readMem(0x8928), 0x22);
        // 1E 00D8
        gbc.setState(0x44d6, 0x9574, 0x5f00, 0x1b4f, 0xe42e, 0xb628, 0x0, 0x0);
        gbc.writeMem(0x44d6, { 0x1e, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x9574);
        EXPECT(gbc.pc(), 0x44d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 00D9
        gbc.setState(0xa9b4, 0x5597, 0x210, 0x114, 0xae7c, 0x90ca, 0x0, 0x1);
        gbc.writeMem(0xa9b4, { 0x1e, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x5597);
        EXPECT(gbc.pc(), 0xa9b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9b4), 0x1e);
        EXPECT(gbc.readMem(0xa9b5), 0xe8);
        // 1E 00DB
        gbc.setState(0xc1bb, 0x7c9a, 0xafb0, 0x19d0, 0xbd23, 0x2c5c, 0x1, 0x1);
        gbc.writeMem(0xc1bb, { 0x1e, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x7c9a);
        EXPECT(gbc.pc(), 0xc1bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1bb), 0x1e);
        EXPECT(gbc.readMem(0xc1bc), 0x24);
        // 1E 00DC
        gbc.setState(0xa1b1, 0xe238, 0x2830, 0x58f, 0xd5ee, 0x6ceb, 0x1, 0x0);
        gbc.writeMem(0xa1b1, { 0x1e, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xe238);
        EXPECT(gbc.pc(), 0xa1b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1b1), 0x1e);
        EXPECT(gbc.readMem(0xa1b2), 0xe0);
        // 1E 00DD
        gbc.setState(0x4982, 0x8ba1, 0x4eb0, 0x1dec, 0xfd3e, 0xa0e, 0x1, 0x1);
        gbc.writeMem(0x4982, { 0x1e, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x8ba1);
        EXPECT(gbc.pc(), 0x4984);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 00DE
        gbc.setState(0xd85b, 0x60c7, 0xc980, 0x161a, 0x7b66, 0xc3ea, 0x0, 0x1);
        gbc.writeMem(0xd85b, { 0x1e, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x60c7);
        EXPECT(gbc.pc(), 0xd85d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd85b), 0x1e);
        EXPECT(gbc.readMem(0xd85c), 0x65);
        // 1E 00DF
        gbc.setState(0x271e, 0x5f0b, 0x3ca0, 0xb77c, 0xac07, 0xec27, 0x1, 0x0);
        gbc.writeMem(0x271e, { 0x1e, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x5f0b);
        EXPECT(gbc.pc(), 0x2720);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 00E0
        gbc.setState(0xeda8, 0xcb6c, 0xe2b0, 0x4bed, 0x58af, 0x4b79, 0x1, 0x1);
        gbc.writeMem(0xeda8, { 0x1e, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xcb6c);
        EXPECT(gbc.pc(), 0xedaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeda8), 0x1e);
        EXPECT(gbc.readMem(0xeda9), 0xe5);
        // 1E 00E1
        gbc.setState(0xc95d, 0x61f5, 0x4bc0, 0x431, 0x6a1c, 0x7192, 0x1, 0x1);
        gbc.writeMem(0xc95d, { 0x1e, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x61f5);
        EXPECT(gbc.pc(), 0xc95f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc95d), 0x1e);
        EXPECT(gbc.readMem(0xc95e), 0x2b);
        // 1E 00E2
        gbc.setState(0x5916, 0x531e, 0xa20, 0x5c8a, 0xa9e3, 0x451b, 0x0, 0x0);
        gbc.writeMem(0x5916, { 0x1e, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x531e);
        EXPECT(gbc.pc(), 0x5918);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 00E3
        gbc.setState(0xb768, 0x5e32, 0x4ee0, 0x463c, 0x6196, 0x85c3, 0x0, 0x0);
        gbc.writeMem(0xb768, { 0x1e, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x5e32);
        EXPECT(gbc.pc(), 0xb76a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb768), 0x1e);
        EXPECT(gbc.readMem(0xb769), 0xe);
        // 1E 00E4
        gbc.setState(0x2993, 0xc77e, 0xaa40, 0xd412, 0x44b0, 0x668b, 0x1, 0x0);
        gbc.writeMem(0x2993, { 0x1e, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xc77e);
        EXPECT(gbc.pc(), 0x2995);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 00E5
        gbc.setState(0x8529, 0xc564, 0xc700, 0x36fe, 0xcfc8, 0x6b0e, 0x1, 0x1);
        gbc.writeMem(0x8529, { 0x1e, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xc564);
        EXPECT(gbc.pc(), 0x852b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8529), 0x1e);
        EXPECT(gbc.readMem(0x852a), 0xb2);
        // 1E 00E6
        gbc.setState(0x7e01, 0x826c, 0xdc0, 0x4712, 0x77b3, 0x6cbb, 0x1, 0x0);
        gbc.writeMem(0x7e01, { 0x1e, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x826c);
        EXPECT(gbc.pc(), 0x7e03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 00E7
        gbc.setState(0x62ed, 0x6d50, 0x2ae0, 0xb94, 0xa557, 0x4a6a, 0x0, 0x0);
        gbc.writeMem(0x62ed, { 0x1e, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x6d50);
        EXPECT(gbc.pc(), 0x62ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 00E8
        gbc.setState(0xd7bb, 0x715c, 0x3550, 0xdfcb, 0x5a00, 0x390e, 0x0, 0x0);
        gbc.writeMem(0xd7bb, { 0x1e, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x715c);
        EXPECT(gbc.pc(), 0xd7bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7bb), 0x1e);
        EXPECT(gbc.readMem(0xd7bc), 0xa8);
        // 1E 00E9
        gbc.setState(0xdef8, 0xff20, 0xeb20, 0x735b, 0x3eea, 0x4256, 0x1, 0x0);
        gbc.writeMem(0xdef8, { 0x1e, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xff20);
        EXPECT(gbc.pc(), 0xdefa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdef8), 0x1e);
        EXPECT(gbc.readMem(0xdef9), 0xee);
        // 1E 00EA
        gbc.setState(0xd180, 0x9f38, 0x9b0, 0xaa3d, 0x8589, 0x102a, 0x0, 0x1);
        gbc.writeMem(0xd180, { 0x1e, 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x9f38);
        EXPECT(gbc.pc(), 0xd182);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd180), 0x1e);
        EXPECT(gbc.readMem(0xd181), 0x48);
        // 1E 00EB
        gbc.setState(0xd24b, 0x9079, 0x1860, 0x8352, 0x5115, 0xad18, 0x0, 0x0);
        gbc.writeMem(0xd24b, { 0x1e, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x9079);
        EXPECT(gbc.pc(), 0xd24d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd24b), 0x1e);
        EXPECT(gbc.readMem(0xd24c), 0x91);
        // 1E 00EC
        gbc.setState(0x344b, 0x3601, 0x3df0, 0x7ab7, 0x94e2, 0xa440, 0x0, 0x0);
        gbc.writeMem(0x344b, { 0x1e, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x3601);
        EXPECT(gbc.pc(), 0x344d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 00ED
        gbc.setState(0x51e, 0x3ef6, 0x16c0, 0x2ec8, 0x23b6, 0x101e, 0x0, 0x0);
        gbc.writeMem(0x51e, { 0x1e, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x3ef6);
        EXPECT(gbc.pc(), 0x520);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 00EE
        gbc.setState(0x2d5c, 0x2d77, 0xde0, 0xf72f, 0x4f9e, 0x32a3, 0x0, 0x0);
        gbc.writeMem(0x2d5c, { 0x1e, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x2d77);
        EXPECT(gbc.pc(), 0x2d5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 00EF
        gbc.setState(0x3946, 0xe41a, 0xb0d0, 0xdaf6, 0x84d6, 0xc501, 0x0, 0x0);
        gbc.writeMem(0x3946, { 0x1e, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xe41a);
        EXPECT(gbc.pc(), 0x3948);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 00F0
        gbc.setState(0x4331, 0x6dfe, 0xb360, 0x495a, 0x7dda, 0xed25, 0x1, 0x0);
        gbc.writeMem(0x4331, { 0x1e, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x6dfe);
        EXPECT(gbc.pc(), 0x4333);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 00F1
        gbc.setState(0xea3f, 0x49ee, 0xe670, 0x6eeb, 0xa723, 0x2ce0, 0x0, 0x1);
        gbc.writeMem(0xea3f, { 0x1e, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x49ee);
        EXPECT(gbc.pc(), 0xea41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea3f), 0x1e);
        EXPECT(gbc.readMem(0xea40), 0x9e);
        // 1E 00F2
        gbc.setState(0x64d4, 0x20ce, 0xa7f0, 0xdd7, 0x2e75, 0x563d, 0x1, 0x1);
        gbc.writeMem(0x64d4, { 0x1e, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x20ce);
        EXPECT(gbc.pc(), 0x64d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 00F3
        gbc.setState(0x202d, 0x7444, 0xfa50, 0x2932, 0x95a7, 0x5a37, 0x0, 0x1);
        gbc.writeMem(0x202d, { 0x1e, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x7444);
        EXPECT(gbc.pc(), 0x202f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 00F4
        gbc.setState(0xd122, 0x5aee, 0x5780, 0x7900, 0x6002, 0xc1bc, 0x1, 0x1);
        gbc.writeMem(0xd122, { 0x1e, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x5aee);
        EXPECT(gbc.pc(), 0xd124);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd122), 0x1e);
        EXPECT(gbc.readMem(0xd123), 0x13);
        // 1E 00F5
        gbc.setState(0xaa9c, 0x5f1, 0x58c0, 0x2121, 0x12c0, 0xf61f, 0x0, 0x1);
        gbc.writeMem(0xaa9c, { 0x1e, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x5f1);
        EXPECT(gbc.pc(), 0xaa9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa9c), 0x1e);
        EXPECT(gbc.readMem(0xaa9d), 0x83);
        // 1E 00F6
        gbc.setState(0xcab4, 0x88f9, 0x3350, 0xaede, 0xe096, 0xeb2b, 0x1, 0x1);
        gbc.writeMem(0xcab4, { 0x1e, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x88f9);
        EXPECT(gbc.pc(), 0xcab6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcab4), 0x1e);
        EXPECT(gbc.readMem(0xcab5), 0x27);
        // 1E 00F7
        gbc.setState(0x91a3, 0x590a, 0x6630, 0x5735, 0xf824, 0xd56c, 0x0, 0x1);
        gbc.writeMem(0x91a3, { 0x1e, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x590a);
        EXPECT(gbc.pc(), 0x91a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91a3), 0x1e);
        EXPECT(gbc.readMem(0x91a4), 0xf7);
        // 1E 00F8
        gbc.setState(0x6d91, 0xf99f, 0x4d90, 0xf06b, 0xf1f4, 0xd167, 0x0, 0x1);
        gbc.writeMem(0x6d91, { 0x1e, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xf99f);
        EXPECT(gbc.pc(), 0x6d93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 00F9
        gbc.setState(0xbe2d, 0x9720, 0x4430, 0x43e4, 0x3a5e, 0xb3fd, 0x1, 0x1);
        gbc.writeMem(0xbe2d, { 0x1e, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x9720);
        EXPECT(gbc.pc(), 0xbe2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe2d), 0x1e);
        EXPECT(gbc.readMem(0xbe2e), 0xef);
        // 1E 00FA
        gbc.setState(0x131c, 0xc603, 0xce70, 0xabd4, 0x5733, 0xa33d, 0x1, 0x0);
        gbc.writeMem(0x131c, { 0x1e, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xc603);
        EXPECT(gbc.pc(), 0x131e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 00FB
        gbc.setState(0x198, 0x4683, 0x3a80, 0x5d87, 0x4500, 0x1fe5, 0x0, 0x0);
        gbc.writeMem(0x198, { 0x1e, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x4683);
        EXPECT(gbc.pc(), 0x19a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 00FC
        gbc.setState(0x2836, 0xdf7d, 0xa1b0, 0xe180, 0x933c, 0xd1a9, 0x0, 0x1);
        gbc.writeMem(0x2836, { 0x1e, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xdf7d);
        EXPECT(gbc.pc(), 0x2838);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 00FD
        gbc.setState(0xa0e4, 0x9445, 0x59c0, 0xbc70, 0xac4a, 0x6f01, 0x1, 0x0);
        gbc.writeMem(0xa0e4, { 0x1e, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x9445);
        EXPECT(gbc.pc(), 0xa0e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0e4), 0x1e);
        EXPECT(gbc.readMem(0xa0e5), 0x33);
        // 1E 00FE
        gbc.setState(0x86bd, 0x4b3c, 0xfb80, 0x8b70, 0x3c34, 0x318c, 0x1, 0x0);
        gbc.writeMem(0x86bd, { 0x1e, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x4b3c);
        EXPECT(gbc.pc(), 0x86bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86bd), 0x1e);
        EXPECT(gbc.readMem(0x86be), 0x2c);
        // 1E 00FF
        gbc.setState(0x4add, 0x5265, 0xcd00, 0x8a0c, 0x76a0, 0xf831, 0x1, 0x0);
        gbc.writeMem(0x4add, { 0x1e, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x5265);
        EXPECT(gbc.pc(), 0x4adf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 0100
        gbc.setState(0x402e, 0x5b80, 0x8f70, 0x2e7c, 0x1690, 0x2558, 0x1, 0x1);
        gbc.writeMem(0x402e, { 0x1e, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x5b80);
        EXPECT(gbc.pc(), 0x4030);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 0101
        gbc.setState(0x80b6, 0xd355, 0xcac0, 0x7103, 0xe4fd, 0x268b, 0x0, 0x0);
        gbc.writeMem(0x80b6, { 0x1e, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xd355);
        EXPECT(gbc.pc(), 0x80b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80b6), 0x1e);
        EXPECT(gbc.readMem(0x80b7), 0x83);
        // 1E 0102
        gbc.setState(0x27e, 0x6d, 0x7260, 0x7126, 0xc16, 0x3a27, 0x0, 0x0);
        gbc.writeMem(0x27e, { 0x1e, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x6d);
        EXPECT(gbc.pc(), 0x280);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 0103
        gbc.setState(0xdf2, 0x4316, 0x7e0, 0xa2d4, 0x90f7, 0xe429, 0x0, 0x1);
        gbc.writeMem(0xdf2, { 0x1e, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x4316);
        EXPECT(gbc.pc(), 0xdf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 0104
        gbc.setState(0x1c76, 0x7825, 0x52b0, 0x7df9, 0xb9b2, 0x50f8, 0x1, 0x0);
        gbc.writeMem(0x1c76, { 0x1e, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x7825);
        EXPECT(gbc.pc(), 0x1c78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 0105
        gbc.setState(0xcad1, 0xaf7f, 0xeb40, 0x32ab, 0xd69b, 0x9a70, 0x0, 0x0);
        gbc.writeMem(0xcad1, { 0x1e, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xaf7f);
        EXPECT(gbc.pc(), 0xcad3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcad1), 0x1e);
        EXPECT(gbc.readMem(0xcad2), 0x97);
        // 1E 0107
        gbc.setState(0xaa90, 0x2258, 0x500, 0x6f87, 0x730b, 0x96b, 0x1, 0x1);
        gbc.writeMem(0xaa90, { 0x1e, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x2258);
        EXPECT(gbc.pc(), 0xaa92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa90), 0x1e);
        EXPECT(gbc.readMem(0xaa91), 0x61);
        // 1E 0109
        gbc.setState(0x489f, 0x15bc, 0xcec0, 0x7b43, 0xe6ba, 0xe748, 0x1, 0x1);
        gbc.writeMem(0x489f, { 0x1e, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x15bc);
        EXPECT(gbc.pc(), 0x48a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 010A
        gbc.setState(0x28c1, 0x484b, 0x4bd0, 0x39f, 0xb84c, 0x2dc1, 0x1, 0x0);
        gbc.writeMem(0x28c1, { 0x1e, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x484b);
        EXPECT(gbc.pc(), 0x28c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 010B
        gbc.setState(0x70e5, 0x165c, 0x2970, 0x1016, 0x53a6, 0x1a89, 0x0, 0x0);
        gbc.writeMem(0x70e5, { 0x1e, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x165c);
        EXPECT(gbc.pc(), 0x70e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 010C
        gbc.setState(0x4a42, 0x4e66, 0x8c00, 0xe4c3, 0x5c61, 0x43fc, 0x1, 0x1);
        gbc.writeMem(0x4a42, { 0x1e, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x4e66);
        EXPECT(gbc.pc(), 0x4a44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 010D
        gbc.setState(0xac16, 0xa04d, 0x11f0, 0x975d, 0xa67e, 0xf4d0, 0x1, 0x0);
        gbc.writeMem(0xac16, { 0x1e, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xa04d);
        EXPECT(gbc.pc(), 0xac18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac16), 0x1e);
        EXPECT(gbc.readMem(0xac17), 0x8e);
        // 1E 010E
        gbc.setState(0x4a54, 0x7417, 0x7d30, 0x55a8, 0x78d7, 0xddfb, 0x1, 0x1);
        gbc.writeMem(0x4a54, { 0x1e, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x7417);
        EXPECT(gbc.pc(), 0x4a56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 010F
        gbc.setState(0x4f6f, 0xb077, 0xa20, 0xfba9, 0xf863, 0xead0, 0x1, 0x0);
        gbc.writeMem(0x4f6f, { 0x1e, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xb077);
        EXPECT(gbc.pc(), 0x4f71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 0110
        gbc.setState(0xa85, 0xa969, 0x38d0, 0x828a, 0x8636, 0x7ec4, 0x0, 0x0);
        gbc.writeMem(0xa85, { 0x1e, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xa969);
        EXPECT(gbc.pc(), 0xa87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 0111
        gbc.setState(0xbefb, 0x2215, 0x1f20, 0x3427, 0x5b4d, 0xabcf, 0x0, 0x0);
        gbc.writeMem(0xbefb, { 0x1e, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x2215);
        EXPECT(gbc.pc(), 0xbefd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbefb), 0x1e);
        EXPECT(gbc.readMem(0xbefc), 0x8);
        // 1E 0112
        gbc.setState(0x66a4, 0x2608, 0xeb70, 0x25fb, 0xa080, 0xd23d, 0x1, 0x0);
        gbc.writeMem(0x66a4, { 0x1e, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x2608);
        EXPECT(gbc.pc(), 0x66a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 0113
        gbc.setState(0xb50b, 0xa26b, 0xfe00, 0xca26, 0x3835, 0x66cb, 0x1, 0x1);
        gbc.writeMem(0xb50b, { 0x1e, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xa26b);
        EXPECT(gbc.pc(), 0xb50d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb50b), 0x1e);
        EXPECT(gbc.readMem(0xb50c), 0xf8);
        // 1E 0114
        gbc.setState(0x78c, 0xb5f7, 0x7fc0, 0x325c, 0x7eef, 0x6c6a, 0x1, 0x0);
        gbc.writeMem(0x78c, { 0x1e, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xb5f7);
        EXPECT(gbc.pc(), 0x78e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 0115
        gbc.setState(0x77ff, 0xda9d, 0xbee0, 0x213b, 0xbaab, 0x8f26, 0x1, 0x1);
        gbc.writeMem(0x77ff, { 0x1e, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xda9d);
        EXPECT(gbc.pc(), 0x7801);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 0116
        gbc.setState(0xd78c, 0x8f68, 0xb400, 0xfba9, 0xe662, 0x22c1, 0x1, 0x0);
        gbc.writeMem(0xd78c, { 0x1e, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x8f68);
        EXPECT(gbc.pc(), 0xd78e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd78c), 0x1e);
        EXPECT(gbc.readMem(0xd78d), 0x63);
        // 1E 0117
        gbc.setState(0x2335, 0x5a92, 0x1520, 0xbbd8, 0x61bb, 0x1f17, 0x1, 0x1);
        gbc.writeMem(0x2335, { 0x1e, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x5a92);
        EXPECT(gbc.pc(), 0x2337);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 0118
        gbc.setState(0x5766, 0x91a0, 0x4990, 0xe1a7, 0xb1a1, 0x150b, 0x1, 0x0);
        gbc.writeMem(0x5766, { 0x1e, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x91a0);
        EXPECT(gbc.pc(), 0x5768);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 0119
        gbc.setState(0xada3, 0x3eed, 0x2070, 0xec16, 0x6eec, 0x393a, 0x0, 0x1);
        gbc.writeMem(0xada3, { 0x1e, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x3eed);
        EXPECT(gbc.pc(), 0xada5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xada3), 0x1e);
        EXPECT(gbc.readMem(0xada4), 0x8d);
        // 1E 011A
        gbc.setState(0x121f, 0xb9df, 0x9f0, 0xf6ee, 0x9b9b, 0xb3a1, 0x1, 0x0);
        gbc.writeMem(0x121f, { 0x1e, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xb9df);
        EXPECT(gbc.pc(), 0x1221);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 011B
        gbc.setState(0xb39, 0xe88d, 0x5590, 0x8a2e, 0x54b, 0x9755, 0x0, 0x0);
        gbc.writeMem(0xb39, { 0x1e, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xe88d);
        EXPECT(gbc.pc(), 0xb3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 011C
        gbc.setState(0x2fc5, 0x97a6, 0xfbb0, 0x3adf, 0x9ef1, 0xca02, 0x1, 0x0);
        gbc.writeMem(0x2fc5, { 0x1e, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x97a6);
        EXPECT(gbc.pc(), 0x2fc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 011D
        gbc.setState(0xa824, 0x4320, 0x37a0, 0xb44a, 0xf6cc, 0x4d9, 0x1, 0x1);
        gbc.writeMem(0xa824, { 0x1e, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x4320);
        EXPECT(gbc.pc(), 0xa826);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa824), 0x1e);
        EXPECT(gbc.readMem(0xa825), 0xab);
        // 1E 011E
        gbc.setState(0xdb7b, 0xccc0, 0xee30, 0x475e, 0xf5e3, 0xcad3, 0x1, 0x0);
        gbc.writeMem(0xdb7b, { 0x1e, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xccc0);
        EXPECT(gbc.pc(), 0xdb7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb7b), 0x1e);
        EXPECT(gbc.readMem(0xdb7c), 0xb8);
        // 1E 011F
        gbc.setState(0x72eb, 0xf96, 0x6950, 0x2695, 0x8294, 0x471b, 0x1, 0x0);
        gbc.writeMem(0x72eb, { 0x1e, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xf96);
        EXPECT(gbc.pc(), 0x72ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 0120
        gbc.setState(0x89ac, 0x15a1, 0x2d80, 0x1c49, 0x94dd, 0xbec, 0x0, 0x1);
        gbc.writeMem(0x89ac, { 0x1e, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x15a1);
        EXPECT(gbc.pc(), 0x89ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89ac), 0x1e);
        EXPECT(gbc.readMem(0x89ad), 0x46);
        // 1E 0122
        gbc.setState(0xeb18, 0x4325, 0xa0d0, 0x79e7, 0xbf6b, 0x32f5, 0x0, 0x0);
        gbc.writeMem(0xeb18, { 0x1e, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x4325);
        EXPECT(gbc.pc(), 0xeb1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb18), 0x1e);
        EXPECT(gbc.readMem(0xeb19), 0xb4);
        // 1E 0123
        gbc.setState(0xea6f, 0x1c79, 0x5d0, 0x71a2, 0xbe65, 0x62f9, 0x1, 0x0);
        gbc.writeMem(0xea6f, { 0x1e, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x1c79);
        EXPECT(gbc.pc(), 0xea71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea6f), 0x1e);
        EXPECT(gbc.readMem(0xea70), 0xd4);
        // 1E 0124
        gbc.setState(0x239c, 0x80e7, 0x5c80, 0x5c02, 0xae69, 0x1312, 0x1, 0x1);
        gbc.writeMem(0x239c, { 0x1e, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x80e7);
        EXPECT(gbc.pc(), 0x239e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 0125
        gbc.setState(0x20be, 0x3036, 0x1d50, 0x2e46, 0x98a, 0xea59, 0x0, 0x1);
        gbc.writeMem(0x20be, { 0x1e, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x3036);
        EXPECT(gbc.pc(), 0x20c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 0126
        gbc.setState(0x7629, 0xa3cf, 0xeb30, 0x1c94, 0x9901, 0x2d65, 0x0, 0x0);
        gbc.writeMem(0x7629, { 0x1e, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xa3cf);
        EXPECT(gbc.pc(), 0x762b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 0127
        gbc.setState(0x9dc2, 0xc0a8, 0xaea0, 0x6bed, 0x55e7, 0x6fbf, 0x0, 0x1);
        gbc.writeMem(0x9dc2, { 0x1e, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xc0a8);
        EXPECT(gbc.pc(), 0x9dc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dc2), 0x1e);
        EXPECT(gbc.readMem(0x9dc3), 0x81);
        // 1E 0128
        gbc.setState(0x47bd, 0x1191, 0x7540, 0x118a, 0xf76f, 0x3197, 0x1, 0x1);
        gbc.writeMem(0x47bd, { 0x1e, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x1191);
        EXPECT(gbc.pc(), 0x47bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 0129
        gbc.setState(0x3ee1, 0x4f4e, 0x78c0, 0xb04e, 0xdf01, 0xa538, 0x0, 0x1);
        gbc.writeMem(0x3ee1, { 0x1e, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x4f4e);
        EXPECT(gbc.pc(), 0x3ee3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 012A
        gbc.setState(0x649d, 0xbd31, 0x1c20, 0x7e36, 0xfaee, 0x24e9, 0x0, 0x0);
        gbc.writeMem(0x649d, { 0x1e, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xbd31);
        EXPECT(gbc.pc(), 0x649f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 012B
        gbc.setState(0x3a5a, 0xfc34, 0xff40, 0x590c, 0xcdad, 0xb9ed, 0x0, 0x1);
        gbc.writeMem(0x3a5a, { 0x1e, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xfc34);
        EXPECT(gbc.pc(), 0x3a5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 012C
        gbc.setState(0x350a, 0x9c6f, 0xf0, 0xd63b, 0x36c6, 0xd8f1, 0x1, 0x0);
        gbc.writeMem(0x350a, { 0x1e, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x9c6f);
        EXPECT(gbc.pc(), 0x350c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 012D
        gbc.setState(0x97d3, 0xfaf4, 0x6be0, 0xf94c, 0x7715, 0x57d4, 0x1, 0x0);
        gbc.writeMem(0x97d3, { 0x1e, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xfaf4);
        EXPECT(gbc.pc(), 0x97d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97d3), 0x1e);
        EXPECT(gbc.readMem(0x97d4), 0x25);
        // 1E 012E
        gbc.setState(0x9a8e, 0x4f90, 0xa670, 0xa19a, 0x3832, 0xaf5b, 0x1, 0x1);
        gbc.writeMem(0x9a8e, { 0x1e, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x4f90);
        EXPECT(gbc.pc(), 0x9a90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a8e), 0x1e);
        EXPECT(gbc.readMem(0x9a8f), 0xeb);
        // 1E 012F
        gbc.setState(0x1ced, 0x29e0, 0xf9a0, 0x704e, 0xbe5b, 0xb655, 0x1, 0x0);
        gbc.writeMem(0x1ced, { 0x1e, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x29e0);
        EXPECT(gbc.pc(), 0x1cef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 0130
        gbc.setState(0x1284, 0xcfde, 0xe0c0, 0xc28, 0x94c2, 0x8fcc, 0x0, 0x0);
        gbc.writeMem(0x1284, { 0x1e, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xcfde);
        EXPECT(gbc.pc(), 0x1286);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 0131
        gbc.setState(0x510c, 0x9ff9, 0x9760, 0xc210, 0xb67a, 0x9cd2, 0x0, 0x1);
        gbc.writeMem(0x510c, { 0x1e, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x9ff9);
        EXPECT(gbc.pc(), 0x510e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 0132
        gbc.setState(0x913a, 0x459a, 0xac40, 0xb2f4, 0x2182, 0x5f8e, 0x0, 0x0);
        gbc.writeMem(0x913a, { 0x1e, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x459a);
        EXPECT(gbc.pc(), 0x913c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x913a), 0x1e);
        EXPECT(gbc.readMem(0x913b), 0xee);
        // 1E 0133
        gbc.setState(0x9813, 0xdb39, 0xc830, 0x8c28, 0xb19b, 0xaa49, 0x1, 0x1);
        gbc.writeMem(0x9813, { 0x1e, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xdb39);
        EXPECT(gbc.pc(), 0x9815);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9813), 0x1e);
        EXPECT(gbc.readMem(0x9814), 0x93);
        // 1E 0134
        gbc.setState(0x832e, 0x20e, 0x80c0, 0xba94, 0x1b20, 0xca29, 0x0, 0x1);
        gbc.writeMem(0x832e, { 0x1e, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x20e);
        EXPECT(gbc.pc(), 0x8330);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x832e), 0x1e);
        EXPECT(gbc.readMem(0x832f), 0x33);
        // 1E 0136
        gbc.setState(0x85db, 0x9ab0, 0xaa80, 0xb09f, 0x36aa, 0xf913, 0x1, 0x1);
        gbc.writeMem(0x85db, { 0x1e, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x9ab0);
        EXPECT(gbc.pc(), 0x85dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85db), 0x1e);
        EXPECT(gbc.readMem(0x85dc), 0x2a);
        // 1E 0137
        gbc.setState(0x8a5e, 0x2a1c, 0xcc50, 0x8fd0, 0xd6b, 0x4523, 0x0, 0x0);
        gbc.writeMem(0x8a5e, { 0x1e, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x2a1c);
        EXPECT(gbc.pc(), 0x8a60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a5e), 0x1e);
        EXPECT(gbc.readMem(0x8a5f), 0x32);
        // 1E 0138
        gbc.setState(0xb8c5, 0x7a0b, 0xb9c0, 0xf2ec, 0xe0cd, 0x280f, 0x1, 0x1);
        gbc.writeMem(0xb8c5, { 0x1e, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x7a0b);
        EXPECT(gbc.pc(), 0xb8c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8c5), 0x1e);
        EXPECT(gbc.readMem(0xb8c6), 0x6a);
        // 1E 0139
        gbc.setState(0x4d17, 0xae65, 0x8830, 0x20e8, 0x2a94, 0x8b73, 0x1, 0x0);
        gbc.writeMem(0x4d17, { 0x1e, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xae65);
        EXPECT(gbc.pc(), 0x4d19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 013A
        gbc.setState(0x52e9, 0xe5b4, 0x8220, 0x3e8e, 0xb38a, 0xa5c8, 0x0, 0x1);
        gbc.writeMem(0x52e9, { 0x1e, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xe5b4);
        EXPECT(gbc.pc(), 0x52eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 013B
        gbc.setState(0xae4d, 0xfba0, 0xb6b0, 0x4dc4, 0xab52, 0xf24a, 0x0, 0x1);
        gbc.writeMem(0xae4d, { 0x1e, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xfba0);
        EXPECT(gbc.pc(), 0xae4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae4d), 0x1e);
        EXPECT(gbc.readMem(0xae4e), 0x70);
        // 1E 013C
        gbc.setState(0x4741, 0x6065, 0x30e0, 0xe6a2, 0x4aa6, 0xe309, 0x1, 0x1);
        gbc.writeMem(0x4741, { 0x1e, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x6065);
        EXPECT(gbc.pc(), 0x4743);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 013D
        gbc.setState(0x66ad, 0xdb77, 0x93c0, 0xff5, 0x97d4, 0x5e31, 0x0, 0x1);
        gbc.writeMem(0x66ad, { 0x1e, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xdb77);
        EXPECT(gbc.pc(), 0x66af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 013E
        gbc.setState(0xbfae, 0x7ff, 0x6fb0, 0xd19f, 0xaf89, 0x1ae6, 0x0, 0x1);
        gbc.writeMem(0xbfae, { 0x1e, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x7ff);
        EXPECT(gbc.pc(), 0xbfb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfae), 0x1e);
        EXPECT(gbc.readMem(0xbfaf), 0x70);
        // 1E 013F
        gbc.setState(0x960c, 0xa675, 0x1010, 0x38f8, 0x7dda, 0xbdf, 0x0, 0x1);
        gbc.writeMem(0x960c, { 0x1e, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xa675);
        EXPECT(gbc.pc(), 0x960e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x960c), 0x1e);
        EXPECT(gbc.readMem(0x960d), 0xfb);
        // 1E 0140
        gbc.setState(0xe71d, 0xa6b6, 0x8b10, 0x8aec, 0xd54e, 0x3c51, 0x0, 0x1);
        gbc.writeMem(0xe71d, { 0x1e, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xa6b6);
        EXPECT(gbc.pc(), 0xe71f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe71d), 0x1e);
        EXPECT(gbc.readMem(0xe71e), 0x47);
        // 1E 0141
        gbc.setState(0x4ecd, 0x9544, 0xcb10, 0xbcca, 0xc76b, 0x9f35, 0x1, 0x0);
        gbc.writeMem(0x4ecd, { 0x1e, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x9544);
        EXPECT(gbc.pc(), 0x4ecf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 0142
        gbc.setState(0x6a7f, 0x41aa, 0x1c80, 0x6274, 0x52be, 0x96c, 0x1, 0x1);
        gbc.writeMem(0x6a7f, { 0x1e, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x41aa);
        EXPECT(gbc.pc(), 0x6a81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 0143
        gbc.setState(0x19b4, 0xd543, 0xf970, 0x353f, 0xc405, 0xb21, 0x0, 0x0);
        gbc.writeMem(0x19b4, { 0x1e, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xd543);
        EXPECT(gbc.pc(), 0x19b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 0144
        gbc.setState(0x8674, 0x515f, 0x94c0, 0x3a9b, 0xd9c3, 0xf56c, 0x0, 0x1);
        gbc.writeMem(0x8674, { 0x1e, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x515f);
        EXPECT(gbc.pc(), 0x8676);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8674), 0x1e);
        EXPECT(gbc.readMem(0x8675), 0xc5);
        // 1E 0145
        gbc.setState(0x9295, 0x3631, 0x8330, 0x36be, 0xb9b0, 0x2570, 0x1, 0x1);
        gbc.writeMem(0x9295, { 0x1e, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x3631);
        EXPECT(gbc.pc(), 0x9297);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9295), 0x1e);
        EXPECT(gbc.readMem(0x9296), 0xf);
        // 1E 0146
        gbc.setState(0xc161, 0x4663, 0xd3e0, 0xe841, 0x2cbd, 0xe42f, 0x0, 0x1);
        gbc.writeMem(0xc161, { 0x1e, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x4663);
        EXPECT(gbc.pc(), 0xc163);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc161), 0x1e);
        EXPECT(gbc.readMem(0xc162), 0x6d);
        // 1E 0147
        gbc.setState(0xc1b1, 0x6b09, 0x2c60, 0x38b, 0xf377, 0xce0, 0x1, 0x1);
        gbc.writeMem(0xc1b1, { 0x1e, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x6b09);
        EXPECT(gbc.pc(), 0xc1b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1b1), 0x1e);
        EXPECT(gbc.readMem(0xc1b2), 0xa6);
        // 1E 0148
        gbc.setState(0x7695, 0xfdda, 0x7c50, 0xec3d, 0x4023, 0x879e, 0x0, 0x0);
        gbc.writeMem(0x7695, { 0x1e, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xfdda);
        EXPECT(gbc.pc(), 0x7697);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 0149
        gbc.setState(0x4f0, 0x2aae, 0x9920, 0xd575, 0xd704, 0xd52a, 0x0, 0x0);
        gbc.writeMem(0x4f0, { 0x1e, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x2aae);
        EXPECT(gbc.pc(), 0x4f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 014A
        gbc.setState(0x6dc8, 0x5395, 0x25e0, 0xcb0d, 0x161a, 0xbc4f, 0x0, 0x1);
        gbc.writeMem(0x6dc8, { 0x1e, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x5395);
        EXPECT(gbc.pc(), 0x6dca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 014B
        gbc.setState(0x9981, 0xcf94, 0x7f20, 0xc2d4, 0x4cb0, 0xffef, 0x1, 0x0);
        gbc.writeMem(0x9981, { 0x1e, 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xcf94);
        EXPECT(gbc.pc(), 0x9983);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9981), 0x1e);
        EXPECT(gbc.readMem(0x9982), 0xb3);
        // 1E 014C
        gbc.setState(0xd927, 0x1d71, 0x8fd0, 0xb8fc, 0xfea, 0x6571, 0x1, 0x1);
        gbc.writeMem(0xd927, { 0x1e, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x1d71);
        EXPECT(gbc.pc(), 0xd929);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd927), 0x1e);
        EXPECT(gbc.readMem(0xd928), 0x90);
        // 1E 014D
        gbc.setState(0x7cce, 0x8a4f, 0x4890, 0xc381, 0xd91f, 0x7393, 0x0, 0x1);
        gbc.writeMem(0x7cce, { 0x1e, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x8a4f);
        EXPECT(gbc.pc(), 0x7cd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 014E
        gbc.setState(0x165f, 0x27b3, 0xdd50, 0x64f2, 0x8c5c, 0x3bd5, 0x1, 0x0);
        gbc.writeMem(0x165f, { 0x1e, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x27b3);
        EXPECT(gbc.pc(), 0x1661);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 014F
        gbc.setState(0x3bc, 0xf8ed, 0xd430, 0x64e6, 0x841e, 0xf506, 0x1, 0x1);
        gbc.writeMem(0x3bc, { 0x1e, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xf8ed);
        EXPECT(gbc.pc(), 0x3be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 0150
        gbc.setState(0xdd1e, 0x6ead, 0x9600, 0x5fb8, 0x7d74, 0x9dd4, 0x0, 0x1);
        gbc.writeMem(0xdd1e, { 0x1e, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x6ead);
        EXPECT(gbc.pc(), 0xdd20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd1e), 0x1e);
        EXPECT(gbc.readMem(0xdd1f), 0x5d);
        // 1E 0151
        gbc.setState(0xc7f5, 0x66df, 0xda10, 0x8f08, 0x8fab, 0x6b13, 0x1, 0x1);
        gbc.writeMem(0xc7f5, { 0x1e, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x66df);
        EXPECT(gbc.pc(), 0xc7f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7f5), 0x1e);
        EXPECT(gbc.readMem(0xc7f6), 0x70);
        // 1E 0152
        gbc.setState(0x189c, 0x5998, 0xb5c0, 0x76f5, 0x1b71, 0x3a40, 0x0, 0x1);
        gbc.writeMem(0x189c, { 0x1e, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x5998);
        EXPECT(gbc.pc(), 0x189e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 0153
        gbc.setState(0xbd88, 0xfbe9, 0x5a80, 0x8cd9, 0xba35, 0x856b, 0x1, 0x0);
        gbc.writeMem(0xbd88, { 0x1e, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xfbe9);
        EXPECT(gbc.pc(), 0xbd8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd88), 0x1e);
        EXPECT(gbc.readMem(0xbd89), 0xc9);
        // 1E 0154
        gbc.setState(0x6e9e, 0xfca1, 0x3970, 0x6fba, 0xe0a3, 0xfe24, 0x1, 0x0);
        gbc.writeMem(0x6e9e, { 0x1e, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xfca1);
        EXPECT(gbc.pc(), 0x6ea0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 0155
        gbc.setState(0x26e0, 0x9e73, 0xb230, 0xc974, 0x5c22, 0xa0c0, 0x1, 0x1);
        gbc.writeMem(0x26e0, { 0x1e, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x9e73);
        EXPECT(gbc.pc(), 0x26e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 0156
        gbc.setState(0xb23b, 0xed5, 0xb530, 0x9240, 0x33bf, 0xafe1, 0x0, 0x0);
        gbc.writeMem(0xb23b, { 0x1e, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xed5);
        EXPECT(gbc.pc(), 0xb23d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb23b), 0x1e);
        EXPECT(gbc.readMem(0xb23c), 0xa8);
        // 1E 0157
        gbc.setState(0x644, 0x41bd, 0xf820, 0x72c1, 0xf68b, 0xe302, 0x0, 0x0);
        gbc.writeMem(0x644, { 0x1e, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x41bd);
        EXPECT(gbc.pc(), 0x646);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 0158
        gbc.setState(0xb3a3, 0xf668, 0xd040, 0xd5f, 0x64e3, 0x9d44, 0x0, 0x0);
        gbc.writeMem(0xb3a3, { 0x1e, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xf668);
        EXPECT(gbc.pc(), 0xb3a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3a3), 0x1e);
        EXPECT(gbc.readMem(0xb3a4), 0xa2);
        // 1E 0159
        gbc.setState(0x8c19, 0xb568, 0xc3c0, 0x772c, 0x543a, 0xa7a4, 0x1, 0x1);
        gbc.writeMem(0x8c19, { 0x1e, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xb568);
        EXPECT(gbc.pc(), 0x8c1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c19), 0x1e);
        EXPECT(gbc.readMem(0x8c1a), 0x52);
        // 1E 015A
        gbc.setState(0xe92e, 0xa359, 0x7c30, 0x4b9d, 0xcf11, 0xa09b, 0x1, 0x0);
        gbc.writeMem(0xe92e, { 0x1e, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xa359);
        EXPECT(gbc.pc(), 0xe930);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe92e), 0x1e);
        EXPECT(gbc.readMem(0xe92f), 0x68);
        // 1E 015B
        gbc.setState(0xbed7, 0x9b09, 0xd4f0, 0x7186, 0x8da3, 0x2bed, 0x0, 0x1);
        gbc.writeMem(0xbed7, { 0x1e, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x9b09);
        EXPECT(gbc.pc(), 0xbed9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbed7), 0x1e);
        EXPECT(gbc.readMem(0xbed8), 0xdf);
        // 1E 015C
        gbc.setState(0x4807, 0x4b1, 0xb200, 0x371f, 0xa867, 0xa3db, 0x1, 0x0);
        gbc.writeMem(0x4807, { 0x1e, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x4b1);
        EXPECT(gbc.pc(), 0x4809);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 015E
        gbc.setState(0x1957, 0xff05, 0xd950, 0x2ad5, 0x67ad, 0x2ffe, 0x1, 0x0);
        gbc.writeMem(0x1957, { 0x1e, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xff05);
        EXPECT(gbc.pc(), 0x1959);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 015F
        gbc.setState(0x91f9, 0xa6a3, 0xe700, 0x6db8, 0x59f7, 0x61a6, 0x1, 0x1);
        gbc.writeMem(0x91f9, { 0x1e, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xa6a3);
        EXPECT(gbc.pc(), 0x91fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91f9), 0x1e);
        EXPECT(gbc.readMem(0x91fa), 0x2b);
        // 1E 0160
        gbc.setState(0x564d, 0x20e7, 0x8e60, 0x1c39, 0x6185, 0xa969, 0x1, 0x1);
        gbc.writeMem(0x564d, { 0x1e, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x20e7);
        EXPECT(gbc.pc(), 0x564f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 0162
        gbc.setState(0x34e0, 0x2ab5, 0x81f0, 0x15a3, 0x5de2, 0xcb33, 0x1, 0x0);
        gbc.writeMem(0x34e0, { 0x1e, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x2ab5);
        EXPECT(gbc.pc(), 0x34e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 0163
        gbc.setState(0xdeb, 0x74e2, 0x7860, 0x7c22, 0x39fe, 0xf8e0, 0x1, 0x1);
        gbc.writeMem(0xdeb, { 0x1e, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x74e2);
        EXPECT(gbc.pc(), 0xded);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 0164
        gbc.setState(0xb58c, 0xe205, 0xa690, 0x44f7, 0x1968, 0xeb9, 0x0, 0x1);
        gbc.writeMem(0xb58c, { 0x1e, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xe205);
        EXPECT(gbc.pc(), 0xb58e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb58c), 0x1e);
        EXPECT(gbc.readMem(0xb58d), 0x39);
        // 1E 0165
        gbc.setState(0x2215, 0xa6e2, 0xa3d0, 0xd98f, 0xc6c1, 0xeb67, 0x0, 0x1);
        gbc.writeMem(0x2215, { 0x1e, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xa6e2);
        EXPECT(gbc.pc(), 0x2217);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 0166
        gbc.setState(0x4666, 0x51ef, 0xb330, 0x924b, 0xa011, 0x6a99, 0x0, 0x1);
        gbc.writeMem(0x4666, { 0x1e, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x51ef);
        EXPECT(gbc.pc(), 0x4668);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 0167
        gbc.setState(0x8e6d, 0x1a09, 0xae30, 0xfbcc, 0xbeb2, 0x5f15, 0x1, 0x1);
        gbc.writeMem(0x8e6d, { 0x1e, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x1a09);
        EXPECT(gbc.pc(), 0x8e6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e6d), 0x1e);
        EXPECT(gbc.readMem(0x8e6e), 0xdc);
        // 1E 0168
        gbc.setState(0x4e92, 0xf07a, 0xa570, 0x3772, 0x5248, 0x20b, 0x1, 0x0);
        gbc.writeMem(0x4e92, { 0x1e, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xf07a);
        EXPECT(gbc.pc(), 0x4e94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 0169
        gbc.setState(0x9e33, 0x7db3, 0xb850, 0x4d88, 0x2ec3, 0xda97, 0x1, 0x0);
        gbc.writeMem(0x9e33, { 0x1e, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x7db3);
        EXPECT(gbc.pc(), 0x9e35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e33), 0x1e);
        EXPECT(gbc.readMem(0x9e34), 0xbb);
        // 1E 016A
        gbc.setState(0xecd4, 0x2dcd, 0x5430, 0xc416, 0x5c0d, 0x81ec, 0x1, 0x1);
        gbc.writeMem(0xecd4, { 0x1e, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x2dcd);
        EXPECT(gbc.pc(), 0xecd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecd4), 0x1e);
        EXPECT(gbc.readMem(0xecd5), 0x90);
        // 1E 016B
        gbc.setState(0x8c20, 0xcb55, 0x72d0, 0xf3a9, 0x1203, 0x93f7, 0x1, 0x0);
        gbc.writeMem(0x8c20, { 0x1e, 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xcb55);
        EXPECT(gbc.pc(), 0x8c22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c20), 0x1e);
        EXPECT(gbc.readMem(0x8c21), 0x7e);
        // 1E 016C
        gbc.setState(0x6bf4, 0xc18, 0x4320, 0x2a42, 0x2854, 0xd9a5, 0x1, 0x0);
        gbc.writeMem(0x6bf4, { 0x1e, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xc18);
        EXPECT(gbc.pc(), 0x6bf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 016D
        gbc.setState(0x7b18, 0x618d, 0x4d80, 0x7220, 0xf3cd, 0xe282, 0x0, 0x0);
        gbc.writeMem(0x7b18, { 0x1e, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x618d);
        EXPECT(gbc.pc(), 0x7b1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 016E
        gbc.setState(0x10e8, 0x8899, 0x2630, 0xb269, 0x434d, 0xc762, 0x1, 0x0);
        gbc.writeMem(0x10e8, { 0x1e, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x8899);
        EXPECT(gbc.pc(), 0x10ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 016F
        gbc.setState(0x7ebf, 0x645e, 0x7e40, 0x2eb4, 0x8dc8, 0x1d2b, 0x0, 0x1);
        gbc.writeMem(0x7ebf, { 0x1e, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x645e);
        EXPECT(gbc.pc(), 0x7ec1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 0170
        gbc.setState(0xbd0f, 0x21d6, 0xfd70, 0xe730, 0x71d, 0x260e, 0x0, 0x1);
        gbc.writeMem(0xbd0f, { 0x1e, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x21d6);
        EXPECT(gbc.pc(), 0xbd11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd0f), 0x1e);
        EXPECT(gbc.readMem(0xbd10), 0x8a);
        // 1E 0171
        gbc.setState(0x4ff0, 0x5932, 0xb080, 0x46d9, 0xca2e, 0xdc64, 0x0, 0x1);
        gbc.writeMem(0x4ff0, { 0x1e, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x5932);
        EXPECT(gbc.pc(), 0x4ff2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 0173
        gbc.setState(0xcdcd, 0x5ade, 0x98c0, 0x7fd2, 0xeb65, 0x3c4e, 0x1, 0x0);
        gbc.writeMem(0xcdcd, { 0x1e, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x5ade);
        EXPECT(gbc.pc(), 0xcdcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdcd), 0x1e);
        EXPECT(gbc.readMem(0xcdce), 0x4c);
        // 1E 0174
        gbc.setState(0x7f6a, 0xc6fd, 0xbc20, 0x369d, 0x336, 0x52ec, 0x1, 0x0);
        gbc.writeMem(0x7f6a, { 0x1e, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xc6fd);
        EXPECT(gbc.pc(), 0x7f6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 0175
        gbc.setState(0xd248, 0xcca8, 0x7a60, 0x985d, 0x4400, 0xe624, 0x1, 0x0);
        gbc.writeMem(0xd248, { 0x1e, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xcca8);
        EXPECT(gbc.pc(), 0xd24a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd248), 0x1e);
        EXPECT(gbc.readMem(0xd249), 0x5b);
        // 1E 0176
        gbc.setState(0x406e, 0xfe9c, 0x2ae0, 0x8767, 0x6500, 0xbefd, 0x1, 0x0);
        gbc.writeMem(0x406e, { 0x1e, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xfe9c);
        EXPECT(gbc.pc(), 0x4070);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 0177
        gbc.setState(0x5541, 0x10d6, 0x2510, 0xa7cb, 0x819d, 0x45fc, 0x0, 0x1);
        gbc.writeMem(0x5541, { 0x1e, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x10d6);
        EXPECT(gbc.pc(), 0x5543);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 0178
        gbc.setState(0x4eff, 0xb8b3, 0xcc30, 0x3ae3, 0xe084, 0x53f3, 0x1, 0x1);
        gbc.writeMem(0x4eff, { 0x1e, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xb8b3);
        EXPECT(gbc.pc(), 0x4f01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 0179
        gbc.setState(0xc721, 0xde47, 0x5410, 0x2973, 0xa10d, 0xc06f, 0x1, 0x0);
        gbc.writeMem(0xc721, { 0x1e, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xde47);
        EXPECT(gbc.pc(), 0xc723);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc721), 0x1e);
        EXPECT(gbc.readMem(0xc722), 0xf2);
        // 1E 017A
        gbc.setState(0x400a, 0xf15f, 0x5d50, 0x532d, 0x554d, 0x1a26, 0x1, 0x1);
        gbc.writeMem(0x400a, { 0x1e, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xf15f);
        EXPECT(gbc.pc(), 0x400c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 017B
        gbc.setState(0xb7, 0xfaf9, 0xe0c0, 0x93b8, 0x5e62, 0xa859, 0x1, 0x0);
        gbc.writeMem(0xb7, { 0x1e, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xfaf9);
        EXPECT(gbc.pc(), 0xb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 017C
        gbc.setState(0x865c, 0x56e5, 0xb090, 0xd4e4, 0x22b0, 0x4014, 0x0, 0x1);
        gbc.writeMem(0x865c, { 0x1e, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x56e5);
        EXPECT(gbc.pc(), 0x865e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x865c), 0x1e);
        EXPECT(gbc.readMem(0x865d), 0x9f);
        // 1E 017D
        gbc.setState(0xe0e0, 0x83e4, 0x4490, 0x1b0b, 0x5cc7, 0xb6e3, 0x1, 0x0);
        gbc.writeMem(0xe0e0, { 0x1e, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x83e4);
        EXPECT(gbc.pc(), 0xe0e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0e0), 0x1e);
        EXPECT(gbc.readMem(0xe0e1), 0xdf);
        // 1E 017E
        gbc.setState(0x6529, 0x515f, 0xa410, 0xd10, 0x58ef, 0x7afb, 0x0, 0x1);
        gbc.writeMem(0x6529, { 0x1e, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x515f);
        EXPECT(gbc.pc(), 0x652b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 017F
        gbc.setState(0x4728, 0xca0a, 0xe80, 0x7013, 0x8f49, 0xaf02, 0x1, 0x0);
        gbc.writeMem(0x4728, { 0x1e, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xca0a);
        EXPECT(gbc.pc(), 0x472a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 0180
        gbc.setState(0x6b72, 0xf20, 0x8760, 0x581e, 0x911f, 0x73c9, 0x0, 0x1);
        gbc.writeMem(0x6b72, { 0x1e, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xf20);
        EXPECT(gbc.pc(), 0x6b74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 0181
        gbc.setState(0xb119, 0x421b, 0xb140, 0xf6b2, 0x47ff, 0xbd65, 0x1, 0x0);
        gbc.writeMem(0xb119, { 0x1e, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x421b);
        EXPECT(gbc.pc(), 0xb11b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb119), 0x1e);
        EXPECT(gbc.readMem(0xb11a), 0xa7);
        // 1E 0182
        gbc.setState(0xa2f2, 0xbe3e, 0x1340, 0x9590, 0x41b, 0x9de2, 0x0, 0x1);
        gbc.writeMem(0xa2f2, { 0x1e, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xbe3e);
        EXPECT(gbc.pc(), 0xa2f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2f2), 0x1e);
        EXPECT(gbc.readMem(0xa2f3), 0xeb);
        // 1E 0183
        gbc.setState(0x626, 0xfc10, 0xad0, 0xd1df, 0x9b68, 0x52a, 0x1, 0x1);
        gbc.writeMem(0x626, { 0x1e, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xfc10);
        EXPECT(gbc.pc(), 0x628);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 0184
        gbc.setState(0x6e9f, 0xaa40, 0x8750, 0x81c6, 0x1f42, 0xf670, 0x1, 0x1);
        gbc.writeMem(0x6e9f, { 0x1e, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xaa40);
        EXPECT(gbc.pc(), 0x6ea1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 0186
        gbc.setState(0x6586, 0xe51c, 0x840, 0xaa63, 0x763a, 0x4e99, 0x1, 0x0);
        gbc.writeMem(0x6586, { 0x1e, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xe51c);
        EXPECT(gbc.pc(), 0x6588);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 0187
        gbc.setState(0x8544, 0x5e2c, 0x7ec0, 0x3a9c, 0x3ec3, 0xaf7c, 0x1, 0x1);
        gbc.writeMem(0x8544, { 0x1e, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x5e2c);
        EXPECT(gbc.pc(), 0x8546);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8544), 0x1e);
        EXPECT(gbc.readMem(0x8545), 0xce);
        // 1E 0188
        gbc.setState(0xdee, 0x5c6e, 0x8fe0, 0x2718, 0x834a, 0x10e9, 0x0, 0x0);
        gbc.writeMem(0xdee, { 0x1e, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x5c6e);
        EXPECT(gbc.pc(), 0xdf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 0189
        gbc.setState(0xae49, 0x8536, 0xf990, 0x95ba, 0xddfd, 0xf092, 0x1, 0x0);
        gbc.writeMem(0xae49, { 0x1e, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x8536);
        EXPECT(gbc.pc(), 0xae4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae49), 0x1e);
        EXPECT(gbc.readMem(0xae4a), 0xdb);
        // 1E 018A
        gbc.setState(0x487b, 0x9f0, 0x6290, 0xc04f, 0xc4ab, 0xc3ea, 0x0, 0x0);
        gbc.writeMem(0x487b, { 0x1e, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x9f0);
        EXPECT(gbc.pc(), 0x487d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 018B
        gbc.setState(0x43aa, 0x2598, 0x4fe0, 0x6e21, 0xbd9b, 0xec36, 0x1, 0x1);
        gbc.writeMem(0x43aa, { 0x1e, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x2598);
        EXPECT(gbc.pc(), 0x43ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 018C
        gbc.setState(0xdcfe, 0xd0ee, 0xb7e0, 0xa9d9, 0x1568, 0x9b0c, 0x1, 0x0);
        gbc.writeMem(0xdcfe, { 0x1e, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xd0ee);
        EXPECT(gbc.pc(), 0xdd00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcfe), 0x1e);
        EXPECT(gbc.readMem(0xdcff), 0xf);
        // 1E 018D
        gbc.setState(0x40f2, 0x8303, 0xd680, 0x34c0, 0x2b86, 0xf8c0, 0x1, 0x1);
        gbc.writeMem(0x40f2, { 0x1e, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x8303);
        EXPECT(gbc.pc(), 0x40f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 018E
        gbc.setState(0x15ef, 0x1cef, 0x6050, 0x937c, 0xf3c1, 0xc520, 0x1, 0x1);
        gbc.writeMem(0x15ef, { 0x1e, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x1cef);
        EXPECT(gbc.pc(), 0x15f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 018F
        gbc.setState(0xdab8, 0x94f6, 0x87b0, 0xd32a, 0x4b7, 0x5b71, 0x0, 0x0);
        gbc.writeMem(0xdab8, { 0x1e, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x94f6);
        EXPECT(gbc.pc(), 0xdaba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdab8), 0x1e);
        EXPECT(gbc.readMem(0xdab9), 0xa1);
        // 1E 0190
        gbc.setState(0x10ee, 0x5b1f, 0x4df0, 0x6164, 0x2360, 0xa0b0, 0x0, 0x0);
        gbc.writeMem(0x10ee, { 0x1e, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x5b1f);
        EXPECT(gbc.pc(), 0x10f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 0192
        gbc.setState(0x3b09, 0xe561, 0x49f0, 0x6fa9, 0x45e8, 0xf4a1, 0x1, 0x0);
        gbc.writeMem(0x3b09, { 0x1e, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xe561);
        EXPECT(gbc.pc(), 0x3b0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 0193
        gbc.setState(0xdbc, 0xff4b, 0x9ea0, 0x6608, 0x599d, 0x146f, 0x1, 0x1);
        gbc.writeMem(0xdbc, { 0x1e, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xff4b);
        EXPECT(gbc.pc(), 0xdbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 0194
        gbc.setState(0xbe, 0xab7c, 0x4ce0, 0x6e22, 0x79e2, 0x18dc, 0x1, 0x0);
        gbc.writeMem(0xbe, { 0x1e, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xab7c);
        EXPECT(gbc.pc(), 0xc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 0195
        gbc.setState(0x50af, 0x8c16, 0x1030, 0x2648, 0x7980, 0xa52e, 0x0, 0x0);
        gbc.writeMem(0x50af, { 0x1e, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x8c16);
        EXPECT(gbc.pc(), 0x50b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 0196
        gbc.setState(0x30b7, 0xcfff, 0xd010, 0xaf29, 0x6c57, 0xebb8, 0x1, 0x0);
        gbc.writeMem(0x30b7, { 0x1e, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xcfff);
        EXPECT(gbc.pc(), 0x30b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 0197
        gbc.setState(0x8be9, 0x279e, 0xed70, 0x3b81, 0xdea9, 0x4716, 0x0, 0x1);
        gbc.writeMem(0x8be9, { 0x1e, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x279e);
        EXPECT(gbc.pc(), 0x8beb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8be9), 0x1e);
        EXPECT(gbc.readMem(0x8bea), 0xd6);
        // 1E 0198
        gbc.setState(0xeef3, 0x318a, 0xb080, 0x9e1b, 0xb4b7, 0x57fc, 0x1, 0x1);
        gbc.writeMem(0xeef3, { 0x1e, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x318a);
        EXPECT(gbc.pc(), 0xeef5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeef3), 0x1e);
        EXPECT(gbc.readMem(0xeef4), 0x27);
        // 1E 0199
        gbc.setState(0x8888, 0xaf1e, 0x3290, 0xafd3, 0x42b9, 0x95a8, 0x0, 0x0);
        gbc.writeMem(0x8888, { 0x1e, 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xaf1e);
        EXPECT(gbc.pc(), 0x888a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8888), 0x1e);
        EXPECT(gbc.readMem(0x8889), 0x35);
        // 1E 019A
        gbc.setState(0x860, 0x6dc5, 0x4c90, 0x8b96, 0xd689, 0xbe6d, 0x1, 0x0);
        gbc.writeMem(0x860, { 0x1e, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x6dc5);
        EXPECT(gbc.pc(), 0x862);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 019B
        gbc.setState(0x71b6, 0x4098, 0xd6f0, 0xd3e8, 0xfc69, 0x35e2, 0x1, 0x1);
        gbc.writeMem(0x71b6, { 0x1e, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x4098);
        EXPECT(gbc.pc(), 0x71b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 019C
        gbc.setState(0xc074, 0x7c52, 0x5340, 0x7a6f, 0x60a8, 0x2b84, 0x0, 0x0);
        gbc.writeMem(0xc074, { 0x1e, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x7c52);
        EXPECT(gbc.pc(), 0xc076);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc074), 0x1e);
        EXPECT(gbc.readMem(0xc075), 0x7a);
        // 1E 019D
        gbc.setState(0xd806, 0x9ab5, 0xcfb0, 0x6526, 0x5a02, 0xed5c, 0x1, 0x0);
        gbc.writeMem(0xd806, { 0x1e, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x9ab5);
        EXPECT(gbc.pc(), 0xd808);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd806), 0x1e);
        EXPECT(gbc.readMem(0xd807), 0x4b);
        // 1E 019E
        gbc.setState(0xe74f, 0x7c26, 0x9d70, 0x501d, 0xbab, 0xa6dd, 0x1, 0x0);
        gbc.writeMem(0xe74f, { 0x1e, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x7c26);
        EXPECT(gbc.pc(), 0xe751);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe74f), 0x1e);
        EXPECT(gbc.readMem(0xe750), 0x46);
        // 1E 019F
        gbc.setState(0xbd45, 0xca5, 0x2e80, 0x27d2, 0xaf92, 0xfecf, 0x1, 0x0);
        gbc.writeMem(0xbd45, { 0x1e, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xca5);
        EXPECT(gbc.pc(), 0xbd47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd45), 0x1e);
        EXPECT(gbc.readMem(0xbd46), 0xdc);
        // 1E 01A0
        gbc.setState(0x8b9a, 0x8461, 0x1b20, 0x103, 0x518, 0xe29b, 0x0, 0x0);
        gbc.writeMem(0x8b9a, { 0x1e, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x8461);
        EXPECT(gbc.pc(), 0x8b9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b9a), 0x1e);
        EXPECT(gbc.readMem(0x8b9b), 0x7a);
        // 1E 01A1
        gbc.setState(0x49db, 0xea05, 0x1c0, 0x1485, 0x5781, 0xc4aa, 0x0, 0x1);
        gbc.writeMem(0x49db, { 0x1e, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xea05);
        EXPECT(gbc.pc(), 0x49dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 01A2
        gbc.setState(0x4d5e, 0x3c13, 0x710, 0x6b5d, 0xc1b5, 0xf1c4, 0x1, 0x1);
        gbc.writeMem(0x4d5e, { 0x1e, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x3c13);
        EXPECT(gbc.pc(), 0x4d60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 01A3
        gbc.setState(0xb230, 0x27c, 0x5c10, 0x9d13, 0x6581, 0x5c5a, 0x0, 0x1);
        gbc.writeMem(0xb230, { 0x1e, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x27c);
        EXPECT(gbc.pc(), 0xb232);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb230), 0x1e);
        EXPECT(gbc.readMem(0xb231), 0x7c);
        // 1E 01A4
        gbc.setState(0xd8c, 0x6ac3, 0xcda0, 0xfeb2, 0xfd30, 0xa455, 0x1, 0x0);
        gbc.writeMem(0xd8c, { 0x1e, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x6ac3);
        EXPECT(gbc.pc(), 0xd8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 01A5
        gbc.setState(0xcae9, 0x6a69, 0x5550, 0x52d8, 0x584e, 0x2f71, 0x1, 0x1);
        gbc.writeMem(0xcae9, { 0x1e, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x6a69);
        EXPECT(gbc.pc(), 0xcaeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcae9), 0x1e);
        EXPECT(gbc.readMem(0xcaea), 0x5b);
        // 1E 01A6
        gbc.setState(0x9e52, 0xb497, 0x50a0, 0x7e28, 0x4272, 0x7009, 0x1, 0x0);
        gbc.writeMem(0x9e52, { 0x1e, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xb497);
        EXPECT(gbc.pc(), 0x9e54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e52), 0x1e);
        EXPECT(gbc.readMem(0x9e53), 0xb1);
        // 1E 01A7
        gbc.setState(0x9ee7, 0xa930, 0x6480, 0x39de, 0xec5, 0xc2ad, 0x0, 0x1);
        gbc.writeMem(0x9ee7, { 0x1e, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xa930);
        EXPECT(gbc.pc(), 0x9ee9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ee7), 0x1e);
        EXPECT(gbc.readMem(0x9ee8), 0x9e);
        // 1E 01A8
        gbc.setState(0x431a, 0xfd32, 0x28e0, 0xd4d3, 0x9d66, 0x1871, 0x0, 0x0);
        gbc.writeMem(0x431a, { 0x1e, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xfd32);
        EXPECT(gbc.pc(), 0x431c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 01A9
        gbc.setState(0x2551, 0x7bf8, 0x3170, 0x7614, 0xa4c6, 0x11ce, 0x0, 0x1);
        gbc.writeMem(0x2551, { 0x1e, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x7bf8);
        EXPECT(gbc.pc(), 0x2553);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 01AA
        gbc.setState(0x9daf, 0xd86b, 0xb050, 0xe2aa, 0xa17b, 0xbf80, 0x1, 0x0);
        gbc.writeMem(0x9daf, { 0x1e, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xd86b);
        EXPECT(gbc.pc(), 0x9db1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9daf), 0x1e);
        EXPECT(gbc.readMem(0x9db0), 0x79);
        // 1E 01AC
        gbc.setState(0xd165, 0x61c0, 0xb620, 0x3e62, 0x2ba3, 0x1384, 0x0, 0x1);
        gbc.writeMem(0xd165, { 0x1e, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x61c0);
        EXPECT(gbc.pc(), 0xd167);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd165), 0x1e);
        EXPECT(gbc.readMem(0xd166), 0xf8);
        // 1E 01AD
        gbc.setState(0xd9a, 0xb6db, 0xfc00, 0x4b49, 0x899e, 0x1ce3, 0x1, 0x1);
        gbc.writeMem(0xd9a, { 0x1e, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xb6db);
        EXPECT(gbc.pc(), 0xd9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 01AE
        gbc.setState(0x8018, 0x718e, 0x2550, 0x727e, 0x692b, 0x2e2e, 0x0, 0x0);
        gbc.writeMem(0x8018, { 0x1e, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x718e);
        EXPECT(gbc.pc(), 0x801a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8018), 0x1e);
        EXPECT(gbc.readMem(0x8019), 0x4a);
        // 1E 01AF
        gbc.setState(0x4443, 0x1e9, 0x2a60, 0x9ea3, 0x5a79, 0x16d9, 0x0, 0x1);
        gbc.writeMem(0x4443, { 0x1e, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x1e9);
        EXPECT(gbc.pc(), 0x4445);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 01B0
        gbc.setState(0x181b, 0x5780, 0x8f0, 0x3fa2, 0xf347, 0xe74c, 0x1, 0x1);
        gbc.writeMem(0x181b, { 0x1e, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x5780);
        EXPECT(gbc.pc(), 0x181d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 01B2
        gbc.setState(0x8928, 0x6482, 0x7700, 0xe74, 0xa0a8, 0xe4e3, 0x0, 0x1);
        gbc.writeMem(0x8928, { 0x1e, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x6482);
        EXPECT(gbc.pc(), 0x892a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8928), 0x1e);
        EXPECT(gbc.readMem(0x8929), 0xa2);
        // 1E 01B3
        gbc.setState(0x80aa, 0x1164, 0x2ee0, 0x2181, 0xe1a9, 0xc27e, 0x0, 0x1);
        gbc.writeMem(0x80aa, { 0x1e, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x1164);
        EXPECT(gbc.pc(), 0x80ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80aa), 0x1e);
        EXPECT(gbc.readMem(0x80ab), 0x11);
        // 1E 01B4
        gbc.setState(0x11c9, 0xed25, 0x9bf0, 0xb5c0, 0xd1c5, 0xf4d1, 0x0, 0x1);
        gbc.writeMem(0x11c9, { 0x1e, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xed25);
        EXPECT(gbc.pc(), 0x11cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 01B5
        gbc.setState(0x9c33, 0x1b05, 0x4580, 0x3771, 0x6ade, 0x727d, 0x0, 0x1);
        gbc.writeMem(0x9c33, { 0x1e, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x1b05);
        EXPECT(gbc.pc(), 0x9c35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c33), 0x1e);
        EXPECT(gbc.readMem(0x9c34), 0xa2);
        // 1E 01B6
        gbc.setState(0x487c, 0x69f8, 0xe060, 0xa109, 0x2638, 0x66b5, 0x1, 0x1);
        gbc.writeMem(0x487c, { 0x1e, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x69f8);
        EXPECT(gbc.pc(), 0x487e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 01B7
        gbc.setState(0xba00, 0xb2a9, 0x85c0, 0xe14d, 0x899f, 0x95a6, 0x1, 0x0);
        gbc.writeMem(0xba00, { 0x1e, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xb2a9);
        EXPECT(gbc.pc(), 0xba02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba00), 0x1e);
        EXPECT(gbc.readMem(0xba01), 0x5e);
        // 1E 01B8
        gbc.setState(0x8796, 0x18ec, 0xdd10, 0xd045, 0x731a, 0x6831, 0x1, 0x1);
        gbc.writeMem(0x8796, { 0x1e, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x18ec);
        EXPECT(gbc.pc(), 0x8798);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8796), 0x1e);
        EXPECT(gbc.readMem(0x8797), 0x1c);
        // 1E 01B9
        gbc.setState(0xb12c, 0x8b9b, 0x88a0, 0x63c1, 0x6732, 0xad30, 0x1, 0x1);
        gbc.writeMem(0xb12c, { 0x1e, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x8b9b);
        EXPECT(gbc.pc(), 0xb12e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb12c), 0x1e);
        EXPECT(gbc.readMem(0xb12d), 0xab);
        // 1E 01BA
        gbc.setState(0x4882, 0xb07d, 0xfe00, 0x5913, 0x1754, 0x3c0a, 0x0, 0x1);
        gbc.writeMem(0x4882, { 0x1e, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xb07d);
        EXPECT(gbc.pc(), 0x4884);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 01BB
        gbc.setState(0x284b, 0x8a3, 0x1190, 0xaa87, 0xebf2, 0x983f, 0x0, 0x0);
        gbc.writeMem(0x284b, { 0x1e, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x8a3);
        EXPECT(gbc.pc(), 0x284d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 01BC
        gbc.setState(0x6c32, 0xa72d, 0xad80, 0xa856, 0x628c, 0x8851, 0x1, 0x1);
        gbc.writeMem(0x6c32, { 0x1e, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xa72d);
        EXPECT(gbc.pc(), 0x6c34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 01BD
        gbc.setState(0xdcd5, 0x6e58, 0x8950, 0x6a8a, 0xa34c, 0xc100, 0x1, 0x1);
        gbc.writeMem(0xdcd5, { 0x1e, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x6e58);
        EXPECT(gbc.pc(), 0xdcd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcd5), 0x1e);
        EXPECT(gbc.readMem(0xdcd6), 0xf0);
        // 1E 01BE
        gbc.setState(0x2512, 0x2c72, 0xb8d0, 0x1e43, 0x78a1, 0xf115, 0x1, 0x0);
        gbc.writeMem(0x2512, { 0x1e, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x2c72);
        EXPECT(gbc.pc(), 0x2514);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 01BF
        gbc.setState(0xa887, 0xf95e, 0x5a70, 0x789, 0x3f54, 0x24bd, 0x1, 0x1);
        gbc.writeMem(0xa887, { 0x1e, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xf95e);
        EXPECT(gbc.pc(), 0xa889);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa887), 0x1e);
        EXPECT(gbc.readMem(0xa888), 0xcc);
        // 1E 01C0
        gbc.setState(0x924d, 0x10c1, 0x81d0, 0x41ab, 0x2f7f, 0x96aa, 0x0, 0x1);
        gbc.writeMem(0x924d, { 0x1e, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x10c1);
        EXPECT(gbc.pc(), 0x924f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x924d), 0x1e);
        EXPECT(gbc.readMem(0x924e), 0x14);
        // 1E 01C2
        gbc.setState(0x3729, 0xad73, 0xf8f0, 0xbca4, 0x3e4b, 0x6de9, 0x1, 0x0);
        gbc.writeMem(0x3729, { 0x1e, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xad73);
        EXPECT(gbc.pc(), 0x372b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 01C3
        gbc.setState(0x3178, 0xc4e1, 0x6cf0, 0xd85f, 0x381d, 0x2d4e, 0x0, 0x0);
        gbc.writeMem(0x3178, { 0x1e, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xc4e1);
        EXPECT(gbc.pc(), 0x317a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 01C4
        gbc.setState(0x5dbb, 0x7677, 0xaf00, 0x1adf, 0x61ab, 0x82bf, 0x0, 0x1);
        gbc.writeMem(0x5dbb, { 0x1e, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x7677);
        EXPECT(gbc.pc(), 0x5dbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 01C5
        gbc.setState(0xead3, 0xb8c7, 0xab30, 0xe870, 0x586b, 0xbb07, 0x1, 0x0);
        gbc.writeMem(0xead3, { 0x1e, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xb8c7);
        EXPECT(gbc.pc(), 0xead5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xead3), 0x1e);
        EXPECT(gbc.readMem(0xead4), 0x96);
        // 1E 01C6
        gbc.setState(0xe14a, 0xa560, 0x8d50, 0x1227, 0x1e71, 0x1af8, 0x0, 0x1);
        gbc.writeMem(0xe14a, { 0x1e, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xa560);
        EXPECT(gbc.pc(), 0xe14c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe14a), 0x1e);
        EXPECT(gbc.readMem(0xe14b), 0x4);
        // 1E 01C7
        gbc.setState(0xcdb4, 0xff77, 0x16d0, 0x20a, 0x75c7, 0x9570, 0x1, 0x0);
        gbc.writeMem(0xcdb4, { 0x1e, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xff77);
        EXPECT(gbc.pc(), 0xcdb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdb4), 0x1e);
        EXPECT(gbc.readMem(0xcdb5), 0x17);
        // 1E 01C8
        gbc.setState(0xd0b4, 0x82bd, 0x77c0, 0x12a6, 0xeacb, 0x552, 0x1, 0x1);
        gbc.writeMem(0xd0b4, { 0x1e, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x82bd);
        EXPECT(gbc.pc(), 0xd0b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0b4), 0x1e);
        EXPECT(gbc.readMem(0xd0b5), 0x9f);
        // 1E 01C9
        gbc.setState(0x8977, 0x17f2, 0xbd60, 0x7d8d, 0xd2cd, 0x23d2, 0x0, 0x1);
        gbc.writeMem(0x8977, { 0x1e, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x17f2);
        EXPECT(gbc.pc(), 0x8979);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8977), 0x1e);
        EXPECT(gbc.readMem(0x8978), 0x31);
        // 1E 01CA
        gbc.setState(0xaafc, 0x8bb5, 0x4870, 0xc2b9, 0xc62, 0xe27d, 0x1, 0x1);
        gbc.writeMem(0xaafc, { 0x1e, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x8bb5);
        EXPECT(gbc.pc(), 0xaafe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaafc), 0x1e);
        EXPECT(gbc.readMem(0xaafd), 0xf3);
        // 1E 01CB
        gbc.setState(0xaf59, 0xe7b9, 0x7650, 0x6537, 0x249, 0xb339, 0x1, 0x1);
        gbc.writeMem(0xaf59, { 0x1e, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xe7b9);
        EXPECT(gbc.pc(), 0xaf5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf59), 0x1e);
        EXPECT(gbc.readMem(0xaf5a), 0xb1);
        // 1E 01CC
        gbc.setState(0xc88a, 0x30e9, 0xee80, 0xf6db, 0x7d88, 0x1094, 0x0, 0x0);
        gbc.writeMem(0xc88a, { 0x1e, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x30e9);
        EXPECT(gbc.pc(), 0xc88c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc88a), 0x1e);
        EXPECT(gbc.readMem(0xc88b), 0x22);
        // 1E 01CD
        gbc.setState(0x740d, 0x183b, 0xcb80, 0xe077, 0x3c26, 0xcb4a, 0x0, 0x1);
        gbc.writeMem(0x740d, { 0x1e, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x183b);
        EXPECT(gbc.pc(), 0x740f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 01CE
        gbc.setState(0xd6a8, 0x5797, 0x9380, 0xab29, 0xb3d8, 0x2776, 0x0, 0x0);
        gbc.writeMem(0xd6a8, { 0x1e, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x5797);
        EXPECT(gbc.pc(), 0xd6aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6a8), 0x1e);
        EXPECT(gbc.readMem(0xd6a9), 0x97);
        // 1E 01CF
        gbc.setState(0x4bc0, 0xe84b, 0xd290, 0x797b, 0x961d, 0x58dc, 0x0, 0x1);
        gbc.writeMem(0x4bc0, { 0x1e, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xe84b);
        EXPECT(gbc.pc(), 0x4bc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 01D0
        gbc.setState(0x684a, 0x2721, 0xdcb0, 0x2520, 0xa3c3, 0xb02, 0x1, 0x0);
        gbc.writeMem(0x684a, { 0x1e, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x2721);
        EXPECT(gbc.pc(), 0x684c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 01D1
        gbc.setState(0xc602, 0xf5c9, 0x1fd0, 0x5e17, 0xde6c, 0x55d8, 0x1, 0x1);
        gbc.writeMem(0xc602, { 0x1e, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xf5c9);
        EXPECT(gbc.pc(), 0xc604);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc602), 0x1e);
        EXPECT(gbc.readMem(0xc603), 0xee);
        // 1E 01D3
        gbc.setState(0xbd09, 0xe31, 0x3ad0, 0xee71, 0x71c9, 0x57f5, 0x0, 0x1);
        gbc.writeMem(0xbd09, { 0x1e, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xe31);
        EXPECT(gbc.pc(), 0xbd0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd09), 0x1e);
        EXPECT(gbc.readMem(0xbd0a), 0x8c);
        // 1E 01D4
        gbc.setState(0x85a4, 0xe657, 0xd240, 0x7751, 0x276f, 0x19dc, 0x0, 0x0);
        gbc.writeMem(0x85a4, { 0x1e, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xe657);
        EXPECT(gbc.pc(), 0x85a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85a4), 0x1e);
        EXPECT(gbc.readMem(0x85a5), 0xf5);
        // 1E 01D5
        gbc.setState(0x71c2, 0x313f, 0x5c60, 0x2dd, 0xf742, 0xb5ce, 0x1, 0x0);
        gbc.writeMem(0x71c2, { 0x1e, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x313f);
        EXPECT(gbc.pc(), 0x71c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 01D6
        gbc.setState(0x51e0, 0x1f5, 0xf730, 0x4978, 0x768d, 0x7000, 0x1, 0x0);
        gbc.writeMem(0x51e0, { 0x1e, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x1f5);
        EXPECT(gbc.pc(), 0x51e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 01D7
        gbc.setState(0x7b73, 0x8ba1, 0x65a0, 0xf849, 0x6918, 0xfbe, 0x0, 0x0);
        gbc.writeMem(0x7b73, { 0x1e, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x8ba1);
        EXPECT(gbc.pc(), 0x7b75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 01D8
        gbc.setState(0x70c9, 0xd28e, 0xbbf0, 0x5b1f, 0xd300, 0x8480, 0x1, 0x0);
        gbc.writeMem(0x70c9, { 0x1e, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xd28e);
        EXPECT(gbc.pc(), 0x70cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 01D9
        gbc.setState(0x475f, 0x5ed4, 0x3900, 0xcabb, 0xbbcc, 0xd8b4, 0x1, 0x0);
        gbc.writeMem(0x475f, { 0x1e, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x5ed4);
        EXPECT(gbc.pc(), 0x4761);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 01DA
        gbc.setState(0x1e17, 0xe46c, 0x7680, 0x5484, 0x529d, 0xe78d, 0x0, 0x1);
        gbc.writeMem(0x1e17, { 0x1e, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xe46c);
        EXPECT(gbc.pc(), 0x1e19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 01DB
        gbc.setState(0xaab2, 0xe6c, 0xf030, 0xc4eb, 0xf577, 0x982, 0x0, 0x0);
        gbc.writeMem(0xaab2, { 0x1e, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xe6c);
        EXPECT(gbc.pc(), 0xaab4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaab2), 0x1e);
        EXPECT(gbc.readMem(0xaab3), 0x70);
        // 1E 01DC
        gbc.setState(0xc37f, 0x13b8, 0xf520, 0xd6cd, 0xab96, 0xb4ac, 0x1, 0x1);
        gbc.writeMem(0xc37f, { 0x1e, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x13b8);
        EXPECT(gbc.pc(), 0xc381);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc37f), 0x1e);
        EXPECT(gbc.readMem(0xc380), 0xcd);
        // 1E 01DD
        gbc.setState(0xe39f, 0x7574, 0xdaf0, 0xdf69, 0xe069, 0xfbc7, 0x0, 0x0);
        gbc.writeMem(0xe39f, { 0x1e, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x7574);
        EXPECT(gbc.pc(), 0xe3a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe39f), 0x1e);
        EXPECT(gbc.readMem(0xe3a0), 0x87);
        // 1E 01DE
        gbc.setState(0x543d, 0xd456, 0xb520, 0x28fe, 0xd761, 0xf9d1, 0x0, 0x1);
        gbc.writeMem(0x543d, { 0x1e, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xd456);
        EXPECT(gbc.pc(), 0x543f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 01DF
        gbc.setState(0x9c6b, 0x1273, 0xbea0, 0xb482, 0x3944, 0x7e21, 0x1, 0x0);
        gbc.writeMem(0x9c6b, { 0x1e, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x1273);
        EXPECT(gbc.pc(), 0x9c6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c6b), 0x1e);
        EXPECT(gbc.readMem(0x9c6c), 0x26);
        // 1E 01E0
        gbc.setState(0x748, 0xbabc, 0x8a50, 0xc183, 0xc5eb, 0x4255, 0x1, 0x0);
        gbc.writeMem(0x748, { 0x1e, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xbabc);
        EXPECT(gbc.pc(), 0x74a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 01E1
        gbc.setState(0xe40f, 0x3be5, 0x4160, 0xbe55, 0x6d88, 0x9111, 0x1, 0x0);
        gbc.writeMem(0xe40f, { 0x1e, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x3be5);
        EXPECT(gbc.pc(), 0xe411);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe40f), 0x1e);
        EXPECT(gbc.readMem(0xe410), 0x55);
        // 1E 01E2
        gbc.setState(0x104f, 0x4081, 0x4050, 0x39b0, 0x4d96, 0xf9a3, 0x0, 0x1);
        gbc.writeMem(0x104f, { 0x1e, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x4081);
        EXPECT(gbc.pc(), 0x1051);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 01E3
        gbc.setState(0xcd2c, 0x202a, 0xf680, 0x298e, 0xcdde, 0x1a95, 0x0, 0x0);
        gbc.writeMem(0xcd2c, { 0x1e, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x202a);
        EXPECT(gbc.pc(), 0xcd2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd2c), 0x1e);
        EXPECT(gbc.readMem(0xcd2d), 0x6c);
        // 1E 01E4
        gbc.setState(0x6e76, 0x804d, 0x13a0, 0x4661, 0x354f, 0x526d, 0x0, 0x0);
        gbc.writeMem(0x6e76, { 0x1e, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x804d);
        EXPECT(gbc.pc(), 0x6e78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 01E5
        gbc.setState(0x4ef, 0x58f6, 0x5cf0, 0x7d88, 0xa823, 0x6671, 0x0, 0x1);
        gbc.writeMem(0x4ef, { 0x1e, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x58f6);
        EXPECT(gbc.pc(), 0x4f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 01E6
        gbc.setState(0x15f4, 0x56e1, 0xb180, 0x59eb, 0x3743, 0x1c4d, 0x1, 0x1);
        gbc.writeMem(0x15f4, { 0x1e, 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x56e1);
        EXPECT(gbc.pc(), 0x15f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 01E7
        gbc.setState(0x1751, 0x854b, 0xe590, 0x4893, 0x790a, 0xff35, 0x1, 0x1);
        gbc.writeMem(0x1751, { 0x1e, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x854b);
        EXPECT(gbc.pc(), 0x1753);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 01E8
        gbc.setState(0x3b70, 0x5466, 0xbc80, 0x7ddb, 0xdf13, 0xa950, 0x0, 0x0);
        gbc.writeMem(0x3b70, { 0x1e, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x5466);
        EXPECT(gbc.pc(), 0x3b72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 01E9
        gbc.setState(0x6e03, 0x7e9, 0x8220, 0x11b8, 0x88b5, 0xb452, 0x0, 0x0);
        gbc.writeMem(0x6e03, { 0x1e, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x7e9);
        EXPECT(gbc.pc(), 0x6e05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 01EA
        gbc.setState(0x7982, 0xa6f2, 0x6760, 0x705b, 0x631, 0x48da, 0x1, 0x0);
        gbc.writeMem(0x7982, { 0x1e, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xa6f2);
        EXPECT(gbc.pc(), 0x7984);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 01EB
        gbc.setState(0x2bcd, 0x260b, 0xc780, 0xc079, 0xc167, 0xa8ac, 0x1, 0x1);
        gbc.writeMem(0x2bcd, { 0x1e, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x260b);
        EXPECT(gbc.pc(), 0x2bcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 01EC
        gbc.setState(0x4f0a, 0xd2b6, 0x6990, 0x93b5, 0xdcd5, 0x88fc, 0x0, 0x0);
        gbc.writeMem(0x4f0a, { 0x1e, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xd2b6);
        EXPECT(gbc.pc(), 0x4f0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 01ED
        gbc.setState(0x74a9, 0x8866, 0xb060, 0x310b, 0xe29a, 0x80a7, 0x1, 0x0);
        gbc.writeMem(0x74a9, { 0x1e, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x8866);
        EXPECT(gbc.pc(), 0x74ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 01EE
        gbc.setState(0x1ffd, 0xa0d, 0x1d10, 0x8ab0, 0xcfc4, 0x8523, 0x0, 0x1);
        gbc.writeMem(0x1ffd, { 0x1e, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xa0d);
        EXPECT(gbc.pc(), 0x1fff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 01EF
        gbc.setState(0x50c7, 0x4781, 0xe9b0, 0x67f4, 0x24fb, 0x14f5, 0x0, 0x1);
        gbc.writeMem(0x50c7, { 0x1e, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x4781);
        EXPECT(gbc.pc(), 0x50c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 01F1
        gbc.setState(0x93cb, 0x9de7, 0x87b0, 0xe7a6, 0x9a49, 0xc83a, 0x0, 0x0);
        gbc.writeMem(0x93cb, { 0x1e, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x9de7);
        EXPECT(gbc.pc(), 0x93cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93cb), 0x1e);
        EXPECT(gbc.readMem(0x93cc), 0x3c);
        // 1E 01F2
        gbc.setState(0x5215, 0xcf1d, 0xf860, 0x2629, 0xf83d, 0x11ee, 0x1, 0x0);
        gbc.writeMem(0x5215, { 0x1e, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xcf1d);
        EXPECT(gbc.pc(), 0x5217);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 01F3
        gbc.setState(0x51d5, 0x240e, 0x9e50, 0x7aba, 0x41b8, 0xb295, 0x1, 0x1);
        gbc.writeMem(0x51d5, { 0x1e, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x240e);
        EXPECT(gbc.pc(), 0x51d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 01F5
        gbc.setState(0xaad7, 0x5e90, 0x6eb0, 0x69c3, 0xb034, 0x9d3d, 0x0, 0x1);
        gbc.writeMem(0xaad7, { 0x1e, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x5e90);
        EXPECT(gbc.pc(), 0xaad9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaad7), 0x1e);
        EXPECT(gbc.readMem(0xaad8), 0xd9);
        // 1E 01F6
        gbc.setState(0x8c40, 0x26d3, 0xe790, 0x7fd1, 0x406e, 0x201, 0x1, 0x1);
        gbc.writeMem(0x8c40, { 0x1e, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x26d3);
        EXPECT(gbc.pc(), 0x8c42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c40), 0x1e);
        EXPECT(gbc.readMem(0x8c41), 0x4);
        // 1E 01F7
        gbc.setState(0xccbe, 0x2477, 0xa6e0, 0x2e71, 0x4cd8, 0xfc61, 0x0, 0x0);
        gbc.writeMem(0xccbe, { 0x1e, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x2477);
        EXPECT(gbc.pc(), 0xccc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccbe), 0x1e);
        EXPECT(gbc.readMem(0xccbf), 0xf5);
        // 1E 01F8
        gbc.setState(0x7c5e, 0x3a78, 0xd9f0, 0x65a2, 0xe7e5, 0x32e4, 0x1, 0x1);
        gbc.writeMem(0x7c5e, { 0x1e, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x3a78);
        EXPECT(gbc.pc(), 0x7c60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 01F9
        gbc.setState(0xca76, 0x40b, 0xd970, 0xd1d3, 0xc122, 0xd7eb, 0x0, 0x0);
        gbc.writeMem(0xca76, { 0x1e, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x40b);
        EXPECT(gbc.pc(), 0xca78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca76), 0x1e);
        EXPECT(gbc.readMem(0xca77), 0xfd);
        // 1E 01FA
        gbc.setState(0xdd4f, 0xe695, 0x3910, 0x1333, 0x734c, 0x44c, 0x1, 0x1);
        gbc.writeMem(0xdd4f, { 0x1e, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xe695);
        EXPECT(gbc.pc(), 0xdd51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd4f), 0x1e);
        EXPECT(gbc.readMem(0xdd50), 0x3);
        // 1E 01FB
        gbc.setState(0x7b87, 0x262f, 0x6d40, 0x4d90, 0x22fb, 0x2def, 0x1, 0x1);
        gbc.writeMem(0x7b87, { 0x1e, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x262f);
        EXPECT(gbc.pc(), 0x7b89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 01FC
        gbc.setState(0xb0c2, 0xcdc6, 0xf400, 0xcd87, 0x6b2c, 0x3d85, 0x0, 0x1);
        gbc.writeMem(0xb0c2, { 0x1e, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xcdc6);
        EXPECT(gbc.pc(), 0xb0c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0c2), 0x1e);
        EXPECT(gbc.readMem(0xb0c3), 0x71);
        // 1E 01FD
        gbc.setState(0xec3d, 0x1a6d, 0xc290, 0xff50, 0x7510, 0xab38, 0x0, 0x1);
        gbc.writeMem(0xec3d, { 0x1e, 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x1a6d);
        EXPECT(gbc.pc(), 0xec3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec3d), 0x1e);
        EXPECT(gbc.readMem(0xec3e), 0x5c);
        // 1E 01FE
        gbc.setState(0xceef, 0xfae3, 0x2d50, 0xcec, 0xf3c7, 0x5eb8, 0x0, 0x1);
        gbc.writeMem(0xceef, { 0x1e, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xfae3);
        EXPECT(gbc.pc(), 0xcef1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xceef), 0x1e);
        EXPECT(gbc.readMem(0xcef0), 0x56);
        // 1E 01FF
        gbc.setState(0xf26, 0xf61d, 0x7710, 0x133, 0x268, 0xf504, 0x1, 0x0);
        gbc.writeMem(0xf26, { 0x1e, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xf61d);
        EXPECT(gbc.pc(), 0xf28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 0200
        gbc.setState(0x217d, 0xb1b8, 0x2a40, 0x55c7, 0x6dd4, 0xd1ac, 0x0, 0x0);
        gbc.writeMem(0x217d, { 0x1e, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xb1b8);
        EXPECT(gbc.pc(), 0x217f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 0201
        gbc.setState(0x5190, 0x6d9e, 0x8d0, 0xdaf4, 0x5ac7, 0x6e1c, 0x0, 0x0);
        gbc.writeMem(0x5190, { 0x1e, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x6d9e);
        EXPECT(gbc.pc(), 0x5192);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 0202
        gbc.setState(0x97e3, 0xa94b, 0x31e0, 0x6e8d, 0xb80a, 0x1ea6, 0x1, 0x0);
        gbc.writeMem(0x97e3, { 0x1e, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xa94b);
        EXPECT(gbc.pc(), 0x97e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97e3), 0x1e);
        EXPECT(gbc.readMem(0x97e4), 0x75);
        // 1E 0203
        gbc.setState(0x91fa, 0x302, 0xb560, 0x23d6, 0xbd3f, 0x8198, 0x0, 0x0);
        gbc.writeMem(0x91fa, { 0x1e, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x302);
        EXPECT(gbc.pc(), 0x91fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91fa), 0x1e);
        EXPECT(gbc.readMem(0x91fb), 0x4b);
        // 1E 0204
        gbc.setState(0xd49d, 0xc18d, 0x5510, 0x3d8b, 0x2668, 0x1fe1, 0x1, 0x1);
        gbc.writeMem(0xd49d, { 0x1e, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xc18d);
        EXPECT(gbc.pc(), 0xd49f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd49d), 0x1e);
        EXPECT(gbc.readMem(0xd49e), 0x81);
        // 1E 0205
        gbc.setState(0x76b1, 0xc7f0, 0x5330, 0x8fe0, 0x2d39, 0x3cef, 0x1, 0x0);
        gbc.writeMem(0x76b1, { 0x1e, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xc7f0);
        EXPECT(gbc.pc(), 0x76b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 0206
        gbc.setState(0x6fe, 0xfd68, 0x4ad0, 0x2f82, 0xb3f9, 0xaa54, 0x1, 0x0);
        gbc.writeMem(0x6fe, { 0x1e, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xfd68);
        EXPECT(gbc.pc(), 0x700);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 0207
        gbc.setState(0xd21f, 0xa2ed, 0xe6d0, 0xe7c3, 0x8063, 0x1be6, 0x1, 0x0);
        gbc.writeMem(0xd21f, { 0x1e, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xa2ed);
        EXPECT(gbc.pc(), 0xd221);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd21f), 0x1e);
        EXPECT(gbc.readMem(0xd220), 0xb8);
        // 1E 0208
        gbc.setState(0x3cec, 0x4fbc, 0xe300, 0x7e24, 0x5861, 0x2d8a, 0x1, 0x1);
        gbc.writeMem(0x3cec, { 0x1e, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x4fbc);
        EXPECT(gbc.pc(), 0x3cee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 020A
        gbc.setState(0xabd7, 0x955f, 0x7550, 0xdaa2, 0x4b85, 0xbd67, 0x0, 0x1);
        gbc.writeMem(0xabd7, { 0x1e, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x955f);
        EXPECT(gbc.pc(), 0xabd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabd7), 0x1e);
        EXPECT(gbc.readMem(0xabd8), 0xc6);
        // 1E 020B
        gbc.setState(0x413f, 0xb2da, 0xdf90, 0xdddf, 0x1026, 0xdc74, 0x0, 0x1);
        gbc.writeMem(0x413f, { 0x1e, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xb2da);
        EXPECT(gbc.pc(), 0x4141);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 020C
        gbc.setState(0x3cbc, 0xb536, 0xdb30, 0xff31, 0x678e, 0xebd2, 0x1, 0x0);
        gbc.writeMem(0x3cbc, { 0x1e, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xb536);
        EXPECT(gbc.pc(), 0x3cbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 020D
        gbc.setState(0xcb, 0xaba0, 0xdf10, 0xe0d, 0xaa39, 0xd797, 0x1, 0x1);
        gbc.writeMem(0xcb, { 0x1e, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xaba0);
        EXPECT(gbc.pc(), 0xcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 020E
        gbc.setState(0x5c73, 0x7571, 0xd620, 0x6897, 0xbdb5, 0x1da4, 0x1, 0x1);
        gbc.writeMem(0x5c73, { 0x1e, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x7571);
        EXPECT(gbc.pc(), 0x5c75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 020F
        gbc.setState(0xb268, 0x1d34, 0xe1b0, 0xd4be, 0x15bb, 0x2f56, 0x1, 0x0);
        gbc.writeMem(0xb268, { 0x1e, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x1d34);
        EXPECT(gbc.pc(), 0xb26a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb268), 0x1e);
        EXPECT(gbc.readMem(0xb269), 0x93);
        // 1E 0210
        gbc.setState(0xbdb9, 0xf4b4, 0x1670, 0x4d78, 0x3bcf, 0xdaa2, 0x1, 0x0);
        gbc.writeMem(0xbdb9, { 0x1e, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xf4b4);
        EXPECT(gbc.pc(), 0xbdbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdb9), 0x1e);
        EXPECT(gbc.readMem(0xbdba), 0xc6);
        // 1E 0211
        gbc.setState(0x7fb1, 0x967a, 0x6dd0, 0xf871, 0xad74, 0x8491, 0x1, 0x0);
        gbc.writeMem(0x7fb1, { 0x1e, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x967a);
        EXPECT(gbc.pc(), 0x7fb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 0212
        gbc.setState(0x6300, 0x1538, 0x2eb0, 0x3ca3, 0xf916, 0xb31e, 0x1, 0x0);
        gbc.writeMem(0x6300, { 0x1e, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x1538);
        EXPECT(gbc.pc(), 0x6302);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 0213
        gbc.setState(0xd95b, 0xa906, 0x8470, 0x7c3c, 0x1caa, 0x6bb, 0x0, 0x0);
        gbc.writeMem(0xd95b, { 0x1e, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xa906);
        EXPECT(gbc.pc(), 0xd95d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd95b), 0x1e);
        EXPECT(gbc.readMem(0xd95c), 0x4);
        // 1E 0215
        gbc.setState(0x1851, 0x187c, 0xdcd0, 0xbbbf, 0x4cdf, 0xe298, 0x0, 0x0);
        gbc.writeMem(0x1851, { 0x1e, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x187c);
        EXPECT(gbc.pc(), 0x1853);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 0216
        gbc.setState(0xb306, 0xd032, 0xf060, 0x9cff, 0xaf4e, 0xa0fc, 0x0, 0x1);
        gbc.writeMem(0xb306, { 0x1e, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xd032);
        EXPECT(gbc.pc(), 0xb308);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb306), 0x1e);
        EXPECT(gbc.readMem(0xb307), 0xe8);
        // 1E 0217
        gbc.setState(0x6dc7, 0x22be, 0x7190, 0x34a, 0x6d, 0x2f08, 0x0, 0x0);
        gbc.writeMem(0x6dc7, { 0x1e, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x22be);
        EXPECT(gbc.pc(), 0x6dc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 0218
        gbc.setState(0x8718, 0xb9b2, 0x6d40, 0xb14d, 0xe1d8, 0xe2d6, 0x0, 0x0);
        gbc.writeMem(0x8718, { 0x1e, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xb9b2);
        EXPECT(gbc.pc(), 0x871a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8718), 0x1e);
        EXPECT(gbc.readMem(0x8719), 0xeb);
        // 1E 0219
        gbc.setState(0x2880, 0x45fa, 0xe730, 0x357f, 0xd166, 0xf86c, 0x0, 0x1);
        gbc.writeMem(0x2880, { 0x1e, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x45fa);
        EXPECT(gbc.pc(), 0x2882);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 021A
        gbc.setState(0x4b72, 0xca2b, 0xfb10, 0x250f, 0x7ed9, 0xa64b, 0x0, 0x0);
        gbc.writeMem(0x4b72, { 0x1e, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xca2b);
        EXPECT(gbc.pc(), 0x4b74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 021B
        gbc.setState(0x7ca8, 0xb83c, 0xb620, 0x5552, 0xad49, 0x17c8, 0x1, 0x0);
        gbc.writeMem(0x7ca8, { 0x1e, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xb83c);
        EXPECT(gbc.pc(), 0x7caa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 021C
        gbc.setState(0x83d6, 0xe867, 0x750, 0xc398, 0xed46, 0xeb75, 0x1, 0x1);
        gbc.writeMem(0x83d6, { 0x1e, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xe867);
        EXPECT(gbc.pc(), 0x83d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83d6), 0x1e);
        EXPECT(gbc.readMem(0x83d7), 0xa3);
        // 1E 021D
        gbc.setState(0x3937, 0x5856, 0x5bd0, 0x4b2a, 0x1281, 0x8a8a, 0x1, 0x0);
        gbc.writeMem(0x3937, { 0x1e, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x5856);
        EXPECT(gbc.pc(), 0x3939);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 021E
        gbc.setState(0x28d8, 0x31b6, 0x24d0, 0xf147, 0xeba5, 0xe513, 0x0, 0x1);
        gbc.writeMem(0x28d8, { 0x1e, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x31b6);
        EXPECT(gbc.pc(), 0x28da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 021F
        gbc.setState(0x385d, 0x1658, 0x3160, 0x8a0e, 0x62c6, 0x1a0b, 0x1, 0x0);
        gbc.writeMem(0x385d, { 0x1e, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x1658);
        EXPECT(gbc.pc(), 0x385f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 0220
        gbc.setState(0x5f3, 0x434e, 0x1050, 0x6c21, 0x6606, 0x6214, 0x0, 0x1);
        gbc.writeMem(0x5f3, { 0x1e, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x434e);
        EXPECT(gbc.pc(), 0x5f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 0221
        gbc.setState(0xa9a1, 0xe23c, 0x4a70, 0x349d, 0x8894, 0xeb89, 0x1, 0x1);
        gbc.writeMem(0xa9a1, { 0x1e, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xe23c);
        EXPECT(gbc.pc(), 0xa9a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9a1), 0x1e);
        EXPECT(gbc.readMem(0xa9a2), 0xd6);
        // 1E 0222
        gbc.setState(0xdae3, 0x8b0d, 0xde80, 0x8328, 0x9e2c, 0x43d9, 0x0, 0x0);
        gbc.writeMem(0xdae3, { 0x1e, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x8b0d);
        EXPECT(gbc.pc(), 0xdae5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdae3), 0x1e);
        EXPECT(gbc.readMem(0xdae4), 0xfe);
        // 1E 0223
        gbc.setState(0x20ed, 0x8a4a, 0x2230, 0x2522, 0x3e3c, 0x2e82, 0x0, 0x1);
        gbc.writeMem(0x20ed, { 0x1e, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x8a4a);
        EXPECT(gbc.pc(), 0x20ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 0224
        gbc.setState(0x63cd, 0xd556, 0xda60, 0x5833, 0x3023, 0xf09d, 0x1, 0x1);
        gbc.writeMem(0x63cd, { 0x1e, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xd556);
        EXPECT(gbc.pc(), 0x63cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 0225
        gbc.setState(0x2c4d, 0x86bf, 0xff10, 0x5f5f, 0x87b2, 0x550, 0x0, 0x1);
        gbc.writeMem(0x2c4d, { 0x1e, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x86bf);
        EXPECT(gbc.pc(), 0x2c4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 0226
        gbc.setState(0xb74c, 0xbec1, 0xa100, 0x1b8e, 0x8774, 0xe57e, 0x1, 0x0);
        gbc.writeMem(0xb74c, { 0x1e, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xbec1);
        EXPECT(gbc.pc(), 0xb74e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb74c), 0x1e);
        EXPECT(gbc.readMem(0xb74d), 0xd9);
        // 1E 0227
        gbc.setState(0xa4b0, 0x3cae, 0x3e40, 0x62b4, 0xcfdc, 0x7812, 0x1, 0x1);
        gbc.writeMem(0xa4b0, { 0x1e, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x3cae);
        EXPECT(gbc.pc(), 0xa4b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4b0), 0x1e);
        EXPECT(gbc.readMem(0xa4b1), 0x82);
        // 1E 0228
        gbc.setState(0xd0e6, 0x9ec7, 0x2310, 0x7d83, 0xe4ad, 0x5008, 0x1, 0x0);
        gbc.writeMem(0xd0e6, { 0x1e, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x9ec7);
        EXPECT(gbc.pc(), 0xd0e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0e6), 0x1e);
        EXPECT(gbc.readMem(0xd0e7), 0xb9);
        // 1E 0229
        gbc.setState(0xc3b9, 0x26ab, 0x3380, 0xb0ce, 0x9372, 0x145f, 0x1, 0x0);
        gbc.writeMem(0xc3b9, { 0x1e, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x26ab);
        EXPECT(gbc.pc(), 0xc3bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3b9), 0x1e);
        EXPECT(gbc.readMem(0xc3ba), 0xd3);
        // 1E 022A
        gbc.setState(0xd5b2, 0xf90, 0x6110, 0x3efb, 0xa9ed, 0xd06, 0x1, 0x0);
        gbc.writeMem(0xd5b2, { 0x1e, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xf90);
        EXPECT(gbc.pc(), 0xd5b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5b2), 0x1e);
        EXPECT(gbc.readMem(0xd5b3), 0x68);
        // 1E 022B
        gbc.setState(0xed6f, 0xb8ff, 0xe5f0, 0x5f58, 0x2155, 0x9f8, 0x1, 0x1);
        gbc.writeMem(0xed6f, { 0x1e, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xb8ff);
        EXPECT(gbc.pc(), 0xed71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed6f), 0x1e);
        EXPECT(gbc.readMem(0xed70), 0x51);
        // 1E 022C
        gbc.setState(0x442f, 0xc1c9, 0xd580, 0x2a45, 0x5fb3, 0x6075, 0x0, 0x0);
        gbc.writeMem(0x442f, { 0x1e, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xc1c9);
        EXPECT(gbc.pc(), 0x4431);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 022D
        gbc.setState(0x77f0, 0xe6c1, 0xfdc0, 0x6822, 0xb405, 0x7ebb, 0x0, 0x0);
        gbc.writeMem(0x77f0, { 0x1e, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xe6c1);
        EXPECT(gbc.pc(), 0x77f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 022E
        gbc.setState(0x7db1, 0xac2a, 0xf350, 0x92eb, 0x6626, 0x8cea, 0x0, 0x0);
        gbc.writeMem(0x7db1, { 0x1e, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xac2a);
        EXPECT(gbc.pc(), 0x7db3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 022F
        gbc.setState(0x50e, 0x5a84, 0xf740, 0x3f0, 0xac3d, 0x642c, 0x0, 0x0);
        gbc.writeMem(0x50e, { 0x1e, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x5a84);
        EXPECT(gbc.pc(), 0x510);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 0230
        gbc.setState(0x89f4, 0xcf5d, 0x2390, 0x479, 0xdc81, 0x3c47, 0x1, 0x0);
        gbc.writeMem(0x89f4, { 0x1e, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xcf5d);
        EXPECT(gbc.pc(), 0x89f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89f4), 0x1e);
        EXPECT(gbc.readMem(0x89f5), 0x14);
        // 1E 0231
        gbc.setState(0xdf5e, 0x7820, 0xfdd0, 0x78e3, 0xc33, 0xbd3d, 0x1, 0x0);
        gbc.writeMem(0xdf5e, { 0x1e, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x7820);
        EXPECT(gbc.pc(), 0xdf60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf5e), 0x1e);
        EXPECT(gbc.readMem(0xdf5f), 0x38);
        // 1E 0232
        gbc.setState(0xcf3a, 0x27f9, 0xb130, 0xcb30, 0x80dc, 0x8132, 0x1, 0x0);
        gbc.writeMem(0xcf3a, { 0x1e, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x27f9);
        EXPECT(gbc.pc(), 0xcf3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf3a), 0x1e);
        EXPECT(gbc.readMem(0xcf3b), 0xcf);
        // 1E 0234
        gbc.setState(0x258, 0xc35d, 0x8a20, 0x4c53, 0x6173, 0xcdb6, 0x1, 0x1);
        gbc.writeMem(0x258, { 0x1e, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xc35d);
        EXPECT(gbc.pc(), 0x25a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 0235
        gbc.setState(0x1ce7, 0x740a, 0x2020, 0xb67a, 0x7855, 0x3351, 0x1, 0x0);
        gbc.writeMem(0x1ce7, { 0x1e, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x740a);
        EXPECT(gbc.pc(), 0x1ce9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 0236
        gbc.setState(0xb9b5, 0xa9a1, 0x2800, 0xdbb3, 0x558a, 0xbec9, 0x0, 0x1);
        gbc.writeMem(0xb9b5, { 0x1e, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xa9a1);
        EXPECT(gbc.pc(), 0xb9b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9b5), 0x1e);
        EXPECT(gbc.readMem(0xb9b6), 0x62);
        // 1E 0237
        gbc.setState(0xe745, 0xa89a, 0x8b90, 0x4514, 0x3c6, 0xf365, 0x1, 0x1);
        gbc.writeMem(0xe745, { 0x1e, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xa89a);
        EXPECT(gbc.pc(), 0xe747);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe745), 0x1e);
        EXPECT(gbc.readMem(0xe746), 0x5d);
        // 1E 0238
        gbc.setState(0xd795, 0x863c, 0x3e00, 0xd779, 0x2694, 0x866d, 0x0, 0x0);
        gbc.writeMem(0xd795, { 0x1e, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x863c);
        EXPECT(gbc.pc(), 0xd797);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd795), 0x1e);
        EXPECT(gbc.readMem(0xd796), 0x46);
        // 1E 0239
        gbc.setState(0xbbdb, 0xd9b8, 0x1fc0, 0xaf54, 0x12b2, 0xb95c, 0x1, 0x1);
        gbc.writeMem(0xbbdb, { 0x1e, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xd9b8);
        EXPECT(gbc.pc(), 0xbbdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbdb), 0x1e);
        EXPECT(gbc.readMem(0xbbdc), 0xfa);
        // 1E 023A
        gbc.setState(0x67d8, 0xce32, 0x1090, 0x4021, 0x263f, 0x5aeb, 0x0, 0x1);
        gbc.writeMem(0x67d8, { 0x1e, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xce32);
        EXPECT(gbc.pc(), 0x67da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 023B
        gbc.setState(0xde4b, 0x126a, 0xb0c0, 0xaa78, 0x66f7, 0x165b, 0x1, 0x1);
        gbc.writeMem(0xde4b, { 0x1e, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x126a);
        EXPECT(gbc.pc(), 0xde4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde4b), 0x1e);
        EXPECT(gbc.readMem(0xde4c), 0xc9);
        // 1E 023C
        gbc.setState(0x87e, 0xcf3d, 0x7e10, 0x3995, 0x2cae, 0xa996, 0x0, 0x1);
        gbc.writeMem(0x87e, { 0x1e, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xcf3d);
        EXPECT(gbc.pc(), 0x880);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 023D
        gbc.setState(0x39, 0x7b57, 0xbd10, 0xa1b9, 0xd3cc, 0xd9dc, 0x1, 0x0);
        gbc.writeMem(0x39, { 0x1e, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x7b57);
        EXPECT(gbc.pc(), 0x3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 023E
        gbc.setState(0x2863, 0x1b8d, 0xffb0, 0xbf60, 0x9387, 0x464, 0x1, 0x0);
        gbc.writeMem(0x2863, { 0x1e, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x1b8d);
        EXPECT(gbc.pc(), 0x2865);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 023F
        gbc.setState(0xd626, 0xe5a, 0xe850, 0x66b1, 0xb070, 0x10b9, 0x1, 0x1);
        gbc.writeMem(0xd626, { 0x1e, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xe5a);
        EXPECT(gbc.pc(), 0xd628);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd626), 0x1e);
        EXPECT(gbc.readMem(0xd627), 0xf5);
        // 1E 0240
        gbc.setState(0x3d29, 0xe576, 0xba60, 0x6e6f, 0x5977, 0x9ee, 0x1, 0x1);
        gbc.writeMem(0x3d29, { 0x1e, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xe576);
        EXPECT(gbc.pc(), 0x3d2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 0242
        gbc.setState(0x2010, 0x32e2, 0xae70, 0x923a, 0x6af1, 0xf3a4, 0x0, 0x0);
        gbc.writeMem(0x2010, { 0x1e, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x32e2);
        EXPECT(gbc.pc(), 0x2012);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 0243
        gbc.setState(0x7822, 0xed8b, 0xa570, 0xe22, 0x1f62, 0x9de8, 0x0, 0x0);
        gbc.writeMem(0x7822, { 0x1e, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xed8b);
        EXPECT(gbc.pc(), 0x7824);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 0244
        gbc.setState(0x92d8, 0xde51, 0x80c0, 0xd008, 0x1fba, 0xa7ce, 0x0, 0x0);
        gbc.writeMem(0x92d8, { 0x1e, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xde51);
        EXPECT(gbc.pc(), 0x92da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92d8), 0x1e);
        EXPECT(gbc.readMem(0x92d9), 0xf1);
        // 1E 0245
        gbc.setState(0x5662, 0x19a0, 0x54c0, 0x3b19, 0x9cb3, 0x1a4b, 0x0, 0x1);
        gbc.writeMem(0x5662, { 0x1e, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x19a0);
        EXPECT(gbc.pc(), 0x5664);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 0246
        gbc.setState(0x57df, 0x29cd, 0x66a0, 0xc3ca, 0x4d38, 0x58b8, 0x0, 0x1);
        gbc.writeMem(0x57df, { 0x1e, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x29cd);
        EXPECT(gbc.pc(), 0x57e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 0247
        gbc.setState(0xb4c, 0x226e, 0x7560, 0x18df, 0x8f9f, 0x5251, 0x0, 0x1);
        gbc.writeMem(0xb4c, { 0x1e, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x226e);
        EXPECT(gbc.pc(), 0xb4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 0248
        gbc.setState(0x3105, 0x2566, 0x7330, 0xbaa9, 0xb890, 0xc042, 0x0, 0x1);
        gbc.writeMem(0x3105, { 0x1e, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x2566);
        EXPECT(gbc.pc(), 0x3107);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 0249
        gbc.setState(0x69d, 0x1638, 0x7250, 0x6e6, 0x4ce5, 0xf4c7, 0x1, 0x1);
        gbc.writeMem(0x69d, { 0x1e, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x1638);
        EXPECT(gbc.pc(), 0x69f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 024A
        gbc.setState(0xc4c5, 0xd3e4, 0xd4f0, 0xfc50, 0x4ac5, 0x640f, 0x1, 0x1);
        gbc.writeMem(0xc4c5, { 0x1e, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xd3e4);
        EXPECT(gbc.pc(), 0xc4c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4c5), 0x1e);
        EXPECT(gbc.readMem(0xc4c6), 0x66);
        // 1E 024B
        gbc.setState(0x73c2, 0xd133, 0x8150, 0x176f, 0x38d1, 0x39a3, 0x1, 0x0);
        gbc.writeMem(0x73c2, { 0x1e, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xd133);
        EXPECT(gbc.pc(), 0x73c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 024C
        gbc.setState(0xd662, 0x56ad, 0x7120, 0x3d98, 0x5359, 0x69ee, 0x1, 0x0);
        gbc.writeMem(0xd662, { 0x1e, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x56ad);
        EXPECT(gbc.pc(), 0xd664);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd662), 0x1e);
        EXPECT(gbc.readMem(0xd663), 0xcf);
        // 1E 024D
        gbc.setState(0x7101, 0xc50, 0xbb60, 0xdbf1, 0x857a, 0xc7be, 0x0, 0x1);
        gbc.writeMem(0x7101, { 0x1e, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xc50);
        EXPECT(gbc.pc(), 0x7103);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 024E
        gbc.setState(0x175f, 0x27ad, 0xdeb0, 0x1fc0, 0x451e, 0x59ac, 0x1, 0x1);
        gbc.writeMem(0x175f, { 0x1e, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x27ad);
        EXPECT(gbc.pc(), 0x1761);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 024F
        gbc.setState(0x9bc, 0x811d, 0x2a90, 0xbf84, 0x78fe, 0x264c, 0x1, 0x1);
        gbc.writeMem(0x9bc, { 0x1e, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x811d);
        EXPECT(gbc.pc(), 0x9be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 0250
        gbc.setState(0x1d3e, 0x8a85, 0xab90, 0xdbda, 0xacf5, 0x8c47, 0x0, 0x1);
        gbc.writeMem(0x1d3e, { 0x1e, 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x8a85);
        EXPECT(gbc.pc(), 0x1d40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 0251
        gbc.setState(0xdfee, 0x8c9f, 0x6480, 0x9248, 0xdc70, 0xc87c, 0x1, 0x1);
        gbc.writeMem(0xdfee, { 0x1e, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x8c9f);
        EXPECT(gbc.pc(), 0xdff0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfee), 0x1e);
        EXPECT(gbc.readMem(0xdfef), 0x44);
        // 1E 0252
        gbc.setState(0x2f6a, 0xaaeb, 0xd6c0, 0xd4bb, 0xaf92, 0x8b9, 0x0, 0x1);
        gbc.writeMem(0x2f6a, { 0x1e, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xaaeb);
        EXPECT(gbc.pc(), 0x2f6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 0254
        gbc.setState(0x9f3f, 0xe12c, 0xbd0, 0x3021, 0x8f41, 0x2938, 0x1, 0x1);
        gbc.writeMem(0x9f3f, { 0x1e, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xe12c);
        EXPECT(gbc.pc(), 0x9f41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f3f), 0x1e);
        EXPECT(gbc.readMem(0x9f40), 0xab);
        // 1E 0255
        gbc.setState(0x97cd, 0x1238, 0xa10, 0x3452, 0x8466, 0x94c3, 0x1, 0x0);
        gbc.writeMem(0x97cd, { 0x1e, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x1238);
        EXPECT(gbc.pc(), 0x97cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97cd), 0x1e);
        EXPECT(gbc.readMem(0x97ce), 0xa2);
        // 1E 0256
        gbc.setState(0xcca7, 0xb783, 0x9660, 0xacb3, 0xc164, 0x877f, 0x0, 0x1);
        gbc.writeMem(0xcca7, { 0x1e, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xb783);
        EXPECT(gbc.pc(), 0xcca9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcca7), 0x1e);
        EXPECT(gbc.readMem(0xcca8), 0xac);
        // 1E 0257
        gbc.setState(0xb58, 0xe8b6, 0xd4e0, 0x29f9, 0x5f19, 0x1c11, 0x0, 0x0);
        gbc.writeMem(0xb58, { 0x1e, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xe8b6);
        EXPECT(gbc.pc(), 0xb5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 0258
        gbc.setState(0x9054, 0x2bd5, 0xe350, 0x1499, 0x9c9e, 0xcf50, 0x1, 0x0);
        gbc.writeMem(0x9054, { 0x1e, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x2bd5);
        EXPECT(gbc.pc(), 0x9056);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9054), 0x1e);
        EXPECT(gbc.readMem(0x9055), 0x10);
        // 1E 0259
        gbc.setState(0xc728, 0xaf58, 0x1500, 0x74e, 0x450a, 0x40d8, 0x1, 0x1);
        gbc.writeMem(0xc728, { 0x1e, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xaf58);
        EXPECT(gbc.pc(), 0xc72a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc728), 0x1e);
        EXPECT(gbc.readMem(0xc729), 0xbb);
        // 1E 025A
        gbc.setState(0xb2cc, 0xb895, 0x62d0, 0x830d, 0xb1c7, 0x9c6, 0x0, 0x0);
        gbc.writeMem(0xb2cc, { 0x1e, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xb895);
        EXPECT(gbc.pc(), 0xb2ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2cc), 0x1e);
        EXPECT(gbc.readMem(0xb2cd), 0x20);
        // 1E 025B
        gbc.setState(0x3e61, 0x6d1e, 0x70d0, 0xce8c, 0xb122, 0x69e5, 0x0, 0x0);
        gbc.writeMem(0x3e61, { 0x1e, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x6d1e);
        EXPECT(gbc.pc(), 0x3e63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 025C
        gbc.setState(0x261d, 0x1e53, 0x5230, 0x1b, 0xdffc, 0x64b3, 0x1, 0x1);
        gbc.writeMem(0x261d, { 0x1e, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x1e53);
        EXPECT(gbc.pc(), 0x261f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 025D
        gbc.setState(0x4e4d, 0x28d9, 0x3e70, 0x481, 0x392e, 0xd246, 0x1, 0x1);
        gbc.writeMem(0x4e4d, { 0x1e, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x28d9);
        EXPECT(gbc.pc(), 0x4e4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 025E
        gbc.setState(0xafa8, 0xce7, 0xd8d0, 0xa763, 0xfb1a, 0x88d3, 0x0, 0x0);
        gbc.writeMem(0xafa8, { 0x1e, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xce7);
        EXPECT(gbc.pc(), 0xafaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafa8), 0x1e);
        EXPECT(gbc.readMem(0xafa9), 0xf9);
        // 1E 025F
        gbc.setState(0xe048, 0x2dc2, 0x18f0, 0x3682, 0x68b4, 0xe69d, 0x0, 0x0);
        gbc.writeMem(0xe048, { 0x1e, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x2dc2);
        EXPECT(gbc.pc(), 0xe04a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe048), 0x1e);
        EXPECT(gbc.readMem(0xe049), 0x78);
        // 1E 0260
        gbc.setState(0x70eb, 0xa3fe, 0xeb50, 0xb88e, 0xba7b, 0xf682, 0x0, 0x1);
        gbc.writeMem(0x70eb, { 0x1e, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xa3fe);
        EXPECT(gbc.pc(), 0x70ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 0261
        gbc.setState(0xbcfb, 0xbb54, 0xb450, 0x8c39, 0x4a02, 0xa112, 0x0, 0x0);
        gbc.writeMem(0xbcfb, { 0x1e, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xbb54);
        EXPECT(gbc.pc(), 0xbcfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcfb), 0x1e);
        EXPECT(gbc.readMem(0xbcfc), 0xcd);
        // 1E 0262
        gbc.setState(0xabd2, 0xe141, 0x6c40, 0x6d59, 0xb9bf, 0x6d49, 0x0, 0x1);
        gbc.writeMem(0xabd2, { 0x1e, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xe141);
        EXPECT(gbc.pc(), 0xabd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabd2), 0x1e);
        EXPECT(gbc.readMem(0xabd3), 0x97);
        // 1E 0263
        gbc.setState(0x2963, 0xadae, 0x99f0, 0x7643, 0x6ea2, 0x9dc8, 0x0, 0x1);
        gbc.writeMem(0x2963, { 0x1e, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xadae);
        EXPECT(gbc.pc(), 0x2965);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 0264
        gbc.setState(0x16fa, 0x184, 0xcad0, 0x7e5e, 0x612a, 0x7903, 0x0, 0x1);
        gbc.writeMem(0x16fa, { 0x1e, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x184);
        EXPECT(gbc.pc(), 0x16fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 0265
        gbc.setState(0xd0bc, 0x845b, 0xd060, 0xf6f8, 0xe52c, 0x37a8, 0x1, 0x1);
        gbc.writeMem(0xd0bc, { 0x1e, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x845b);
        EXPECT(gbc.pc(), 0xd0be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0bc), 0x1e);
        EXPECT(gbc.readMem(0xd0bd), 0xb2);
        // 1E 0266
        gbc.setState(0x63e0, 0xce2a, 0xa00, 0x51c4, 0x295d, 0x3d3c, 0x1, 0x1);
        gbc.writeMem(0x63e0, { 0x1e, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xce2a);
        EXPECT(gbc.pc(), 0x63e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 0267
        gbc.setState(0x900b, 0x32ac, 0x4860, 0xd43e, 0xd385, 0x9d83, 0x0, 0x0);
        gbc.writeMem(0x900b, { 0x1e, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x32ac);
        EXPECT(gbc.pc(), 0x900d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x900b), 0x1e);
        EXPECT(gbc.readMem(0x900c), 0xf4);
        // 1E 0268
        gbc.setState(0x4772, 0x7378, 0x72d0, 0xe86f, 0x71fa, 0xa7fa, 0x0, 0x1);
        gbc.writeMem(0x4772, { 0x1e, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x7378);
        EXPECT(gbc.pc(), 0x4774);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 0269
        gbc.setState(0x62d1, 0x52a4, 0x99f0, 0x5861, 0x762a, 0xfee, 0x0, 0x1);
        gbc.writeMem(0x62d1, { 0x1e, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x52a4);
        EXPECT(gbc.pc(), 0x62d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 026A
        gbc.setState(0xe0c8, 0x4ebe, 0x4350, 0x3a81, 0xf185, 0x486f, 0x0, 0x1);
        gbc.writeMem(0xe0c8, { 0x1e, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x4ebe);
        EXPECT(gbc.pc(), 0xe0ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0c8), 0x1e);
        EXPECT(gbc.readMem(0xe0c9), 0x5a);
        // 1E 026B
        gbc.setState(0xa6e8, 0x8338, 0x9260, 0xf1cc, 0x3c4, 0xf5f0, 0x0, 0x0);
        gbc.writeMem(0xa6e8, { 0x1e, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x8338);
        EXPECT(gbc.pc(), 0xa6ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6e8), 0x1e);
        EXPECT(gbc.readMem(0xa6e9), 0x80);
        // 1E 026C
        gbc.setState(0xa67a, 0x84b6, 0x6eb0, 0xaa91, 0xce08, 0xaab5, 0x0, 0x0);
        gbc.writeMem(0xa67a, { 0x1e, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x84b6);
        EXPECT(gbc.pc(), 0xa67c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa67a), 0x1e);
        EXPECT(gbc.readMem(0xa67b), 0xd0);
        // 1E 026D
        gbc.setState(0x51bc, 0x2e2f, 0xe970, 0x4d05, 0x94da, 0xb12, 0x1, 0x0);
        gbc.writeMem(0x51bc, { 0x1e, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x2e2f);
        EXPECT(gbc.pc(), 0x51be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 026E
        gbc.setState(0xb4fc, 0x30bc, 0x1550, 0x2284, 0x999a, 0x382c, 0x1, 0x0);
        gbc.writeMem(0xb4fc, { 0x1e, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x30bc);
        EXPECT(gbc.pc(), 0xb4fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4fc), 0x1e);
        EXPECT(gbc.readMem(0xb4fd), 0x8e);
        // 1E 026F
        gbc.setState(0x33b, 0xc7f5, 0x9d20, 0xeead, 0xd62d, 0x6f24, 0x1, 0x1);
        gbc.writeMem(0x33b, { 0x1e, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xc7f5);
        EXPECT(gbc.pc(), 0x33d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 0270
        gbc.setState(0x4233, 0x7044, 0xafa0, 0xa608, 0xdef5, 0x2ae, 0x1, 0x0);
        gbc.writeMem(0x4233, { 0x1e, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x7044);
        EXPECT(gbc.pc(), 0x4235);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 0271
        gbc.setState(0x1437, 0xadaa, 0x35c0, 0x5000, 0x54de, 0xd1f9, 0x0, 0x0);
        gbc.writeMem(0x1437, { 0x1e, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xadaa);
        EXPECT(gbc.pc(), 0x1439);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 0272
        gbc.setState(0x1465, 0x4f9, 0xa40, 0x1999, 0x1888, 0x2576, 0x0, 0x1);
        gbc.writeMem(0x1465, { 0x1e, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x4f9);
        EXPECT(gbc.pc(), 0x1467);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 0273
        gbc.setState(0xb006, 0x8a52, 0x5020, 0x5638, 0x76ff, 0x828a, 0x0, 0x0);
        gbc.writeMem(0xb006, { 0x1e, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x8a52);
        EXPECT(gbc.pc(), 0xb008);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb006), 0x1e);
        EXPECT(gbc.readMem(0xb007), 0x95);
        // 1E 0274
        gbc.setState(0x7061, 0x5ad8, 0x7c90, 0x1fa9, 0x7cad, 0x9639, 0x1, 0x0);
        gbc.writeMem(0x7061, { 0x1e, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x5ad8);
        EXPECT(gbc.pc(), 0x7063);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 0275
        gbc.setState(0xe76d, 0x8dfe, 0x4e50, 0xb265, 0xb18a, 0xd835, 0x0, 0x1);
        gbc.writeMem(0xe76d, { 0x1e, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x8dfe);
        EXPECT(gbc.pc(), 0xe76f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe76d), 0x1e);
        EXPECT(gbc.readMem(0xe76e), 0xd);
        // 1E 0276
        gbc.setState(0x9a38, 0xb99, 0xbd20, 0xec4b, 0x6d36, 0x5812, 0x1, 0x1);
        gbc.writeMem(0x9a38, { 0x1e, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xb99);
        EXPECT(gbc.pc(), 0x9a3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a38), 0x1e);
        EXPECT(gbc.readMem(0x9a39), 0xbb);
        // 1E 0277
        gbc.setState(0x4e57, 0x69c3, 0x3230, 0xa7f, 0x3d7d, 0x378c, 0x0, 0x1);
        gbc.writeMem(0x4e57, { 0x1e, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x69c3);
        EXPECT(gbc.pc(), 0x4e59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 0278
        gbc.setState(0xda4d, 0xe0cb, 0x6450, 0x6e2f, 0x91a5, 0xb82, 0x1, 0x0);
        gbc.writeMem(0xda4d, { 0x1e, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xe0cb);
        EXPECT(gbc.pc(), 0xda4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda4d), 0x1e);
        EXPECT(gbc.readMem(0xda4e), 0x3a);
        // 1E 0279
        gbc.setState(0xb4a0, 0xde3f, 0x9fe0, 0x89d9, 0xbf5, 0x74c5, 0x0, 0x0);
        gbc.writeMem(0xb4a0, { 0x1e, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xde3f);
        EXPECT(gbc.pc(), 0xb4a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4a0), 0x1e);
        EXPECT(gbc.readMem(0xb4a1), 0x7a);
        // 1E 027B
        gbc.setState(0x7775, 0xbe30, 0x32f0, 0xd538, 0xf425, 0x5ddc, 0x0, 0x1);
        gbc.writeMem(0x7775, { 0x1e, 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xbe30);
        EXPECT(gbc.pc(), 0x7777);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 027C
        gbc.setState(0x91b6, 0x4639, 0xafa0, 0xc567, 0xcad3, 0x7f47, 0x1, 0x0);
        gbc.writeMem(0x91b6, { 0x1e, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x4639);
        EXPECT(gbc.pc(), 0x91b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91b6), 0x1e);
        EXPECT(gbc.readMem(0x91b7), 0x7a);
        // 1E 027D
        gbc.setState(0xcdfd, 0xa8e1, 0xfc10, 0x1ec3, 0x1df5, 0x60d1, 0x1, 0x0);
        gbc.writeMem(0xcdfd, { 0x1e, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xa8e1);
        EXPECT(gbc.pc(), 0xcdff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdfd), 0x1e);
        EXPECT(gbc.readMem(0xcdfe), 0xe6);
        // 1E 027E
        gbc.setState(0x9c0d, 0xf1a0, 0x70e0, 0xae0e, 0x13a8, 0x3500, 0x0, 0x0);
        gbc.writeMem(0x9c0d, { 0x1e, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xf1a0);
        EXPECT(gbc.pc(), 0x9c0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c0d), 0x1e);
        EXPECT(gbc.readMem(0x9c0e), 0xa);
        // 1E 027F
        gbc.setState(0x704e, 0x1689, 0x8640, 0xa205, 0xad2c, 0xb049, 0x1, 0x0);
        gbc.writeMem(0x704e, { 0x1e, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x1689);
        EXPECT(gbc.pc(), 0x7050);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 0280
        gbc.setState(0x1d41, 0xe996, 0xcdc0, 0xd6dd, 0xea59, 0x1f6c, 0x1, 0x1);
        gbc.writeMem(0x1d41, { 0x1e, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xe996);
        EXPECT(gbc.pc(), 0x1d43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 0281
        gbc.setState(0xe80c, 0x2630, 0x9860, 0x52a0, 0xa0b1, 0xac02, 0x0, 0x0);
        gbc.writeMem(0xe80c, { 0x1e, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x2630);
        EXPECT(gbc.pc(), 0xe80e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe80c), 0x1e);
        EXPECT(gbc.readMem(0xe80d), 0x1a);
        // 1E 0282
        gbc.setState(0xbe64, 0x47e1, 0xf5d0, 0xcab6, 0xa5bf, 0x169c, 0x1, 0x1);
        gbc.writeMem(0xbe64, { 0x1e, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x47e1);
        EXPECT(gbc.pc(), 0xbe66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe64), 0x1e);
        EXPECT(gbc.readMem(0xbe65), 0x6);
        // 1E 0283
        gbc.setState(0xace9, 0xb20a, 0xd140, 0x8fc, 0x40ba, 0x60fc, 0x1, 0x1);
        gbc.writeMem(0xace9, { 0x1e, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xb20a);
        EXPECT(gbc.pc(), 0xaceb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xace9), 0x1e);
        EXPECT(gbc.readMem(0xacea), 0xab);
        // 1E 0284
        gbc.setState(0xaefd, 0xffbc, 0x47e0, 0x4c62, 0x922a, 0x8e66, 0x1, 0x0);
        gbc.writeMem(0xaefd, { 0x1e, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xffbc);
        EXPECT(gbc.pc(), 0xaeff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaefd), 0x1e);
        EXPECT(gbc.readMem(0xaefe), 0xc6);
        // 1E 0285
        gbc.setState(0x42b2, 0x7201, 0x5060, 0x6974, 0xebbc, 0x59c2, 0x1, 0x0);
        gbc.writeMem(0x42b2, { 0x1e, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x7201);
        EXPECT(gbc.pc(), 0x42b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 0286
        gbc.setState(0x6b0c, 0xdbb3, 0x1dc0, 0x4af3, 0xeadc, 0x8535, 0x0, 0x0);
        gbc.writeMem(0x6b0c, { 0x1e, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xdbb3);
        EXPECT(gbc.pc(), 0x6b0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 0287
        gbc.setState(0x8760, 0x7461, 0x7a00, 0x4ea4, 0xd8ad, 0xa30f, 0x0, 0x1);
        gbc.writeMem(0x8760, { 0x1e, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x7461);
        EXPECT(gbc.pc(), 0x8762);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8760), 0x1e);
        EXPECT(gbc.readMem(0x8761), 0x6b);
        // 1E 0288
        gbc.setState(0xb1bd, 0xa30c, 0xfd00, 0x1324, 0xe714, 0xad9f, 0x1, 0x0);
        gbc.writeMem(0xb1bd, { 0x1e, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xa30c);
        EXPECT(gbc.pc(), 0xb1bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1bd), 0x1e);
        EXPECT(gbc.readMem(0xb1be), 0xf3);
        // 1E 0289
        gbc.setState(0x66e8, 0x581b, 0x4150, 0x6e35, 0x11f6, 0x57c2, 0x1, 0x1);
        gbc.writeMem(0x66e8, { 0x1e, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x581b);
        EXPECT(gbc.pc(), 0x66ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 028A
        gbc.setState(0x4e3e, 0xa110, 0x3110, 0x8e54, 0xc23d, 0x2c0d, 0x1, 0x0);
        gbc.writeMem(0x4e3e, { 0x1e, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xa110);
        EXPECT(gbc.pc(), 0x4e40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 028B
        gbc.setState(0x51c8, 0x77d7, 0x74b0, 0xfbbb, 0x6614, 0xdb1b, 0x0, 0x0);
        gbc.writeMem(0x51c8, { 0x1e, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x77d7);
        EXPECT(gbc.pc(), 0x51ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 028C
        gbc.setState(0x15cc, 0x392b, 0xa2c0, 0x8b7, 0x58d8, 0x5a77, 0x0, 0x1);
        gbc.writeMem(0x15cc, { 0x1e, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x392b);
        EXPECT(gbc.pc(), 0x15ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 028D
        gbc.setState(0x10bc, 0xd4b4, 0xd3b0, 0x22c4, 0xdce9, 0x7e2b, 0x0, 0x1);
        gbc.writeMem(0x10bc, { 0x1e, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xd4b4);
        EXPECT(gbc.pc(), 0x10be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 028E
        gbc.setState(0x37cd, 0xa26c, 0xebc0, 0x5f6d, 0x80e6, 0x914a, 0x1, 0x0);
        gbc.writeMem(0x37cd, { 0x1e, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xa26c);
        EXPECT(gbc.pc(), 0x37cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 028F
        gbc.setState(0xaa5a, 0x3dbd, 0x6f80, 0x6ef7, 0x3b0a, 0x9d7, 0x0, 0x0);
        gbc.writeMem(0xaa5a, { 0x1e, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x3dbd);
        EXPECT(gbc.pc(), 0xaa5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa5a), 0x1e);
        EXPECT(gbc.readMem(0xaa5b), 0xa0);
        // 1E 0290
        gbc.setState(0x6dff, 0x17f2, 0x5d10, 0x40cc, 0x2a69, 0xf2e6, 0x0, 0x1);
        gbc.writeMem(0x6dff, { 0x1e, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x17f2);
        EXPECT(gbc.pc(), 0x6e01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 0291
        gbc.setState(0xb40e, 0x9291, 0x18b0, 0x613d, 0x552d, 0x4f3d, 0x0, 0x0);
        gbc.writeMem(0xb40e, { 0x1e, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x9291);
        EXPECT(gbc.pc(), 0xb410);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb40e), 0x1e);
        EXPECT(gbc.readMem(0xb40f), 0x54);
        // 1E 0292
        gbc.setState(0x1f17, 0xb0d8, 0x2530, 0x3d01, 0x1be4, 0x593e, 0x1, 0x1);
        gbc.writeMem(0x1f17, { 0x1e, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xb0d8);
        EXPECT(gbc.pc(), 0x1f19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 0293
        gbc.setState(0xec08, 0x671d, 0x75c0, 0x237e, 0x3f10, 0xd128, 0x0, 0x1);
        gbc.writeMem(0xec08, { 0x1e, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x671d);
        EXPECT(gbc.pc(), 0xec0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec08), 0x1e);
        EXPECT(gbc.readMem(0xec09), 0x82);
        // 1E 0294
        gbc.setState(0x737b, 0xacdb, 0x6bb0, 0xeafb, 0x79fd, 0xad41, 0x0, 0x0);
        gbc.writeMem(0x737b, { 0x1e, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xacdb);
        EXPECT(gbc.pc(), 0x737d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 0295
        gbc.setState(0xcb1b, 0xf439, 0x73f0, 0xd8fa, 0xda57, 0xde17, 0x0, 0x0);
        gbc.writeMem(0xcb1b, { 0x1e, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xf439);
        EXPECT(gbc.pc(), 0xcb1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb1b), 0x1e);
        EXPECT(gbc.readMem(0xcb1c), 0x71);
        // 1E 0296
        gbc.setState(0xeefe, 0xec01, 0x5100, 0x45c5, 0xed85, 0x857f, 0x0, 0x1);
        gbc.writeMem(0xeefe, { 0x1e, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xec01);
        EXPECT(gbc.pc(), 0xef00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeefe), 0x1e);
        EXPECT(gbc.readMem(0xeeff), 0x6a);
        // 1E 0297
        gbc.setState(0xef13, 0x8a18, 0x9bc0, 0x5761, 0x2e5, 0xa917, 0x1, 0x1);
        gbc.writeMem(0xef13, { 0x1e, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x8a18);
        EXPECT(gbc.pc(), 0xef15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef13), 0x1e);
        EXPECT(gbc.readMem(0xef14), 0xf3);
        // 1E 0298
        gbc.setState(0xd69f, 0xc552, 0x1be0, 0xb11b, 0xa7ec, 0xfb02, 0x0, 0x1);
        gbc.writeMem(0xd69f, { 0x1e, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xc552);
        EXPECT(gbc.pc(), 0xd6a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd69f), 0x1e);
        EXPECT(gbc.readMem(0xd6a0), 0x5d);
        // 1E 0299
        gbc.setState(0xbabb, 0x9f08, 0xc00, 0xa1a6, 0xae8e, 0xa395, 0x1, 0x1);
        gbc.writeMem(0xbabb, { 0x1e, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x9f08);
        EXPECT(gbc.pc(), 0xbabd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbabb), 0x1e);
        EXPECT(gbc.readMem(0xbabc), 0x50);
        // 1E 029A
        gbc.setState(0xe13c, 0x35e4, 0x7f80, 0x48f1, 0xb2a0, 0x7dd4, 0x0, 0x0);
        gbc.writeMem(0xe13c, { 0x1e, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x35e4);
        EXPECT(gbc.pc(), 0xe13e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe13c), 0x1e);
        EXPECT(gbc.readMem(0xe13d), 0x8c);
        // 1E 029B
        gbc.setState(0xa9b4, 0xca86, 0xe360, 0xdbc0, 0xe5e8, 0xeccd, 0x0, 0x0);
        gbc.writeMem(0xa9b4, { 0x1e, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xca86);
        EXPECT(gbc.pc(), 0xa9b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9b4), 0x1e);
        EXPECT(gbc.readMem(0xa9b5), 0xe8);
        // 1E 029C
        gbc.setState(0x3281, 0xa4f5, 0x9910, 0xf233, 0xd411, 0x8aea, 0x1, 0x0);
        gbc.writeMem(0x3281, { 0x1e, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xa4f5);
        EXPECT(gbc.pc(), 0x3283);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 029D
        gbc.setState(0xf94, 0xc1db, 0x8fe0, 0x91a4, 0xdf16, 0x1dc, 0x0, 0x1);
        gbc.writeMem(0xf94, { 0x1e, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xc1db);
        EXPECT(gbc.pc(), 0xf96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 029E
        gbc.setState(0x2f24, 0xd34a, 0xb7b0, 0x679b, 0xc500, 0x8221, 0x1, 0x1);
        gbc.writeMem(0x2f24, { 0x1e, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xd34a);
        EXPECT(gbc.pc(), 0x2f26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 029F
        gbc.setState(0x45f7, 0x1864, 0x9250, 0x611, 0x28fd, 0xa74c, 0x0, 0x1);
        gbc.writeMem(0x45f7, { 0x1e, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x1864);
        EXPECT(gbc.pc(), 0x45f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 02A0
        gbc.setState(0xeefc, 0xf487, 0xa8a0, 0x30d2, 0xd054, 0x4716, 0x0, 0x0);
        gbc.writeMem(0xeefc, { 0x1e, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xf487);
        EXPECT(gbc.pc(), 0xeefe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeefc), 0x1e);
        EXPECT(gbc.readMem(0xeefd), 0xf6);
        // 1E 02A1
        gbc.setState(0xb388, 0x761d, 0xa030, 0x32e1, 0x1514, 0xab68, 0x1, 0x0);
        gbc.writeMem(0xb388, { 0x1e, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x761d);
        EXPECT(gbc.pc(), 0xb38a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb388), 0x1e);
        EXPECT(gbc.readMem(0xb389), 0x5f);
        // 1E 02A2
        gbc.setState(0x4e87, 0xa82, 0x56a0, 0x7bde, 0x5776, 0xcb0a, 0x0, 0x1);
        gbc.writeMem(0x4e87, { 0x1e, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xa82);
        EXPECT(gbc.pc(), 0x4e89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 02A3
        gbc.setState(0x7a7a, 0x3b14, 0xa5c0, 0x1ef8, 0x17c4, 0x8614, 0x1, 0x0);
        gbc.writeMem(0x7a7a, { 0x1e, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x3b14);
        EXPECT(gbc.pc(), 0x7a7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 02A4
        gbc.setState(0x5675, 0xd84b, 0x72e0, 0x5dd3, 0xd55c, 0x1d02, 0x1, 0x0);
        gbc.writeMem(0x5675, { 0x1e, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xd84b);
        EXPECT(gbc.pc(), 0x5677);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 02A5
        gbc.setState(0x6980, 0x8a66, 0x60b0, 0xc5ae, 0x52e1, 0x2eec, 0x1, 0x0);
        gbc.writeMem(0x6980, { 0x1e, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x8a66);
        EXPECT(gbc.pc(), 0x6982);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 02A6
        gbc.setState(0xb9d2, 0x404c, 0x8f70, 0xc70f, 0x101c, 0xf1f3, 0x1, 0x0);
        gbc.writeMem(0xb9d2, { 0x1e, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x404c);
        EXPECT(gbc.pc(), 0xb9d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9d2), 0x1e);
        EXPECT(gbc.readMem(0xb9d3), 0x85);
        // 1E 02A7
        gbc.setState(0x5b74, 0x7e04, 0xb800, 0xbfd, 0x4cdf, 0xc06, 0x1, 0x0);
        gbc.writeMem(0x5b74, { 0x1e, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x7e04);
        EXPECT(gbc.pc(), 0x5b76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 02A8
        gbc.setState(0x6194, 0xa5f8, 0x6480, 0x571c, 0xd4ae, 0x342e, 0x1, 0x1);
        gbc.writeMem(0x6194, { 0x1e, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xa5f8);
        EXPECT(gbc.pc(), 0x6196);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 02A9
        gbc.setState(0x6bc5, 0xaf42, 0xe500, 0x2cd0, 0x43b9, 0x87a6, 0x0, 0x1);
        gbc.writeMem(0x6bc5, { 0x1e, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xaf42);
        EXPECT(gbc.pc(), 0x6bc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 02AA
        gbc.setState(0xe9c5, 0x2bde, 0x280, 0x12cf, 0x3c0e, 0x7de6, 0x1, 0x0);
        gbc.writeMem(0xe9c5, { 0x1e, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x2bde);
        EXPECT(gbc.pc(), 0xe9c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9c5), 0x1e);
        EXPECT(gbc.readMem(0xe9c6), 0x42);
        // 1E 02AB
        gbc.setState(0xd692, 0x46ec, 0xb7e0, 0x72f6, 0xfaa8, 0x542e, 0x1, 0x1);
        gbc.writeMem(0xd692, { 0x1e, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x46ec);
        EXPECT(gbc.pc(), 0xd694);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd692), 0x1e);
        EXPECT(gbc.readMem(0xd693), 0x36);
        // 1E 02AC
        gbc.setState(0xa1a1, 0xdb6c, 0xf960, 0xd5df, 0xd2fc, 0xb397, 0x0, 0x0);
        gbc.writeMem(0xa1a1, { 0x1e, 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xdb6c);
        EXPECT(gbc.pc(), 0xa1a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1a1), 0x1e);
        EXPECT(gbc.readMem(0xa1a2), 0x7e);
        // 1E 02AD
        gbc.setState(0x268, 0xc363, 0x7770, 0x5ec9, 0x6850, 0x299e, 0x1, 0x1);
        gbc.writeMem(0x268, { 0x1e, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xc363);
        EXPECT(gbc.pc(), 0x26a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 02AE
        gbc.setState(0x78b2, 0xb20c, 0x5740, 0x84f1, 0x676a, 0x8ac4, 0x1, 0x0);
        gbc.writeMem(0x78b2, { 0x1e, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xb20c);
        EXPECT(gbc.pc(), 0x78b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 02AF
        gbc.setState(0xe291, 0xe7fc, 0x4720, 0xca0f, 0x1a24, 0x84b3, 0x1, 0x1);
        gbc.writeMem(0xe291, { 0x1e, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xe7fc);
        EXPECT(gbc.pc(), 0xe293);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe291), 0x1e);
        EXPECT(gbc.readMem(0xe292), 0x81);
        // 1E 02B0
        gbc.setState(0x4023, 0x5373, 0x7d20, 0xbb71, 0x3f15, 0xde6b, 0x1, 0x1);
        gbc.writeMem(0x4023, { 0x1e, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x5373);
        EXPECT(gbc.pc(), 0x4025);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 02B1
        gbc.setState(0xd030, 0xce38, 0xb5b0, 0x8654, 0x5ab2, 0x79c2, 0x0, 0x0);
        gbc.writeMem(0xd030, { 0x1e, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xce38);
        EXPECT(gbc.pc(), 0xd032);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd030), 0x1e);
        EXPECT(gbc.readMem(0xd031), 0x8e);
        // 1E 02B2
        gbc.setState(0x8092, 0x2c0d, 0x3b20, 0x2d70, 0xe317, 0x1ab2, 0x1, 0x1);
        gbc.writeMem(0x8092, { 0x1e, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x2c0d);
        EXPECT(gbc.pc(), 0x8094);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8092), 0x1e);
        EXPECT(gbc.readMem(0x8093), 0x13);
        // 1E 02B3
        gbc.setState(0xcec1, 0x6cc9, 0x84c0, 0xe47, 0x8ff6, 0x7ff4, 0x1, 0x0);
        gbc.writeMem(0xcec1, { 0x1e, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x6cc9);
        EXPECT(gbc.pc(), 0xcec3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcec1), 0x1e);
        EXPECT(gbc.readMem(0xcec2), 0x20);
        // 1E 02B4
        gbc.setState(0x1b14, 0x594d, 0x1bc0, 0xde71, 0x1c17, 0x1701, 0x1, 0x0);
        gbc.writeMem(0x1b14, { 0x1e, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x594d);
        EXPECT(gbc.pc(), 0x1b16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 02B5
        gbc.setState(0x852b, 0xff13, 0x9b80, 0xa29d, 0xf0a7, 0xc29d, 0x0, 0x0);
        gbc.writeMem(0x852b, { 0x1e, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xff13);
        EXPECT(gbc.pc(), 0x852d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x852b), 0x1e);
        EXPECT(gbc.readMem(0x852c), 0xab);
        // 1E 02B6
        gbc.setState(0xbc8, 0x5314, 0x8de0, 0x2bd5, 0x67aa, 0x91c0, 0x1, 0x1);
        gbc.writeMem(0xbc8, { 0x1e, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x5314);
        EXPECT(gbc.pc(), 0xbca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 02B7
        gbc.setState(0x640b, 0xf5c1, 0xfe90, 0x5334, 0xc132, 0xf640, 0x1, 0x1);
        gbc.writeMem(0x640b, { 0x1e, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xf5c1);
        EXPECT(gbc.pc(), 0x640d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 02B9
        gbc.setState(0x9bf9, 0x7e3d, 0x8eb0, 0xc619, 0xb539, 0xd816, 0x0, 0x0);
        gbc.writeMem(0x9bf9, { 0x1e, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x7e3d);
        EXPECT(gbc.pc(), 0x9bfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bf9), 0x1e);
        EXPECT(gbc.readMem(0x9bfa), 0x1f);
        // 1E 02BA
        gbc.setState(0xe498, 0xbefc, 0xf920, 0x6eef, 0x7c32, 0xee15, 0x0, 0x0);
        gbc.writeMem(0xe498, { 0x1e, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xbefc);
        EXPECT(gbc.pc(), 0xe49a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe498), 0x1e);
        EXPECT(gbc.readMem(0xe499), 0x7);
        // 1E 02BB
        gbc.setState(0x822a, 0xe1d7, 0x5c00, 0xf856, 0xe190, 0x72a, 0x0, 0x0);
        gbc.writeMem(0x822a, { 0x1e, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xe1d7);
        EXPECT(gbc.pc(), 0x822c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x822a), 0x1e);
        EXPECT(gbc.readMem(0x822b), 0x10);
        // 1E 02BC
        gbc.setState(0xe1a7, 0xe0a6, 0xe8d0, 0x3082, 0x8cf7, 0x485e, 0x0, 0x0);
        gbc.writeMem(0xe1a7, { 0x1e, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xe0a6);
        EXPECT(gbc.pc(), 0xe1a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1a7), 0x1e);
        EXPECT(gbc.readMem(0xe1a8), 0xaf);
        // 1E 02BD
        gbc.setState(0x2eb, 0x3565, 0xbea0, 0xbdfd, 0xbc5d, 0x7e47, 0x1, 0x1);
        gbc.writeMem(0x2eb, { 0x1e, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x3565);
        EXPECT(gbc.pc(), 0x2ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 02BE
        gbc.setState(0x2206, 0xf2bc, 0x7510, 0xda44, 0x448a, 0x67a6, 0x0, 0x1);
        gbc.writeMem(0x2206, { 0x1e, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xf2bc);
        EXPECT(gbc.pc(), 0x2208);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 02BF
        gbc.setState(0x75d9, 0xae0e, 0xa9d0, 0x2583, 0x4ab4, 0xd8c3, 0x0, 0x0);
        gbc.writeMem(0x75d9, { 0x1e, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xae0e);
        EXPECT(gbc.pc(), 0x75db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 02C0
        gbc.setState(0x7219, 0x2ef3, 0xe330, 0xeef1, 0xb1a3, 0xf101, 0x1, 0x1);
        gbc.writeMem(0x7219, { 0x1e, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x2ef3);
        EXPECT(gbc.pc(), 0x721b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 02C1
        gbc.setState(0xbd61, 0x77ab, 0xbaf0, 0xacf2, 0xaecc, 0xb06c, 0x1, 0x0);
        gbc.writeMem(0xbd61, { 0x1e, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x77ab);
        EXPECT(gbc.pc(), 0xbd63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd61), 0x1e);
        EXPECT(gbc.readMem(0xbd62), 0xb7);
        // 1E 02C2
        gbc.setState(0x511d, 0x5d1b, 0x4e00, 0x2535, 0x4e5, 0xb747, 0x1, 0x1);
        gbc.writeMem(0x511d, { 0x1e, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x5d1b);
        EXPECT(gbc.pc(), 0x511f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 02C3
        gbc.setState(0xc814, 0x7ec5, 0x8680, 0x2bcc, 0x6fa9, 0xbda, 0x1, 0x0);
        gbc.writeMem(0xc814, { 0x1e, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x7ec5);
        EXPECT(gbc.pc(), 0xc816);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc814), 0x1e);
        EXPECT(gbc.readMem(0xc815), 0x69);
        // 1E 02C4
        gbc.setState(0xb81, 0x74a2, 0x9920, 0x6dc0, 0x16c0, 0xe61c, 0x0, 0x1);
        gbc.writeMem(0xb81, { 0x1e, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x74a2);
        EXPECT(gbc.pc(), 0xb83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 02C5
        gbc.setState(0xb34b, 0x2830, 0xdb90, 0x7b21, 0x9737, 0x7ab3, 0x1, 0x1);
        gbc.writeMem(0xb34b, { 0x1e, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x2830);
        EXPECT(gbc.pc(), 0xb34d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb34b), 0x1e);
        EXPECT(gbc.readMem(0xb34c), 0xc9);
        // 1E 02C6
        gbc.setState(0xae50, 0xb90c, 0xddf0, 0x95d8, 0xd9a1, 0x6a5a, 0x0, 0x1);
        gbc.writeMem(0xae50, { 0x1e, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xb90c);
        EXPECT(gbc.pc(), 0xae52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae50), 0x1e);
        EXPECT(gbc.readMem(0xae51), 0x5f);
        // 1E 02C7
        gbc.setState(0x30d7, 0xcd2, 0x7e50, 0x70ef, 0xac9f, 0x99b7, 0x1, 0x1);
        gbc.writeMem(0x30d7, { 0x1e, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xcd2);
        EXPECT(gbc.pc(), 0x30d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 02C8
        gbc.setState(0x1e03, 0x4b73, 0xf9b0, 0xd491, 0xb6c7, 0xa524, 0x1, 0x1);
        gbc.writeMem(0x1e03, { 0x1e, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x4b73);
        EXPECT(gbc.pc(), 0x1e05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 02C9
        gbc.setState(0x9721, 0x79e4, 0x8ee0, 0x79f, 0x44bd, 0x327e, 0x0, 0x1);
        gbc.writeMem(0x9721, { 0x1e, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x79e4);
        EXPECT(gbc.pc(), 0x9723);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9721), 0x1e);
        EXPECT(gbc.readMem(0x9722), 0x12);
        // 1E 02CA
        gbc.setState(0xb893, 0xefd9, 0x6280, 0xe0a5, 0x2553, 0xd15e, 0x0, 0x0);
        gbc.writeMem(0xb893, { 0x1e, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xefd9);
        EXPECT(gbc.pc(), 0xb895);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb893), 0x1e);
        EXPECT(gbc.readMem(0xb894), 0x1);
        // 1E 02CC
        gbc.setState(0x1e90, 0xbf09, 0xbef0, 0xf2e2, 0xead0, 0x78ea, 0x1, 0x0);
        gbc.writeMem(0x1e90, { 0x1e, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xbf09);
        EXPECT(gbc.pc(), 0x1e92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 02CD
        gbc.setState(0x7ef5, 0x48fd, 0xbaf0, 0xd547, 0x18ce, 0x5607, 0x0, 0x0);
        gbc.writeMem(0x7ef5, { 0x1e, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x48fd);
        EXPECT(gbc.pc(), 0x7ef7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 02CE
        gbc.setState(0xcdf0, 0xe6ab, 0xa790, 0x3c8f, 0x6ee5, 0xd390, 0x1, 0x1);
        gbc.writeMem(0xcdf0, { 0x1e, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xe6ab);
        EXPECT(gbc.pc(), 0xcdf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdf0), 0x1e);
        EXPECT(gbc.readMem(0xcdf1), 0x62);
        // 1E 02CF
        gbc.setState(0x1148, 0xf841, 0xd6a0, 0x4a92, 0xef5, 0x3beb, 0x1, 0x0);
        gbc.writeMem(0x1148, { 0x1e, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xf841);
        EXPECT(gbc.pc(), 0x114a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 02D0
        gbc.setState(0x1380, 0x5823, 0x9a90, 0xcd85, 0xaf79, 0x87d1, 0x0, 0x1);
        gbc.writeMem(0x1380, { 0x1e, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x5823);
        EXPECT(gbc.pc(), 0x1382);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 02D1
        gbc.setState(0x1cd3, 0x4886, 0x7810, 0xcb6f, 0x68f, 0x1538, 0x1, 0x1);
        gbc.writeMem(0x1cd3, { 0x1e, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x4886);
        EXPECT(gbc.pc(), 0x1cd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 02D2
        gbc.setState(0x99d, 0x95e3, 0xfb10, 0x9115, 0xfdbd, 0x62fd, 0x1, 0x1);
        gbc.writeMem(0x99d, { 0x1e, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x95e3);
        EXPECT(gbc.pc(), 0x99f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 02D3
        gbc.setState(0xd5b9, 0x1db8, 0xa9a0, 0x4bd3, 0x35af, 0xbe7e, 0x0, 0x0);
        gbc.writeMem(0xd5b9, { 0x1e, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x1db8);
        EXPECT(gbc.pc(), 0xd5bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5b9), 0x1e);
        EXPECT(gbc.readMem(0xd5ba), 0xdc);
        // 1E 02D4
        gbc.setState(0xdffc, 0x8935, 0x9ab0, 0xda7a, 0x53de, 0x945b, 0x0, 0x0);
        gbc.writeMem(0xdffc, { 0x1e, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x8935);
        EXPECT(gbc.pc(), 0xdffe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdffc), 0x1e);
        EXPECT(gbc.readMem(0xdffd), 0x10);
        // 1E 02D5
        gbc.setState(0x6bf, 0x2104, 0xbc50, 0x1389, 0xc732, 0x7875, 0x1, 0x1);
        gbc.writeMem(0x6bf, { 0x1e, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x2104);
        EXPECT(gbc.pc(), 0x6c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 02D6
        gbc.setState(0xc70d, 0x199d, 0x59a0, 0x1a1, 0x408b, 0xbff5, 0x1, 0x0);
        gbc.writeMem(0xc70d, { 0x1e, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x199d);
        EXPECT(gbc.pc(), 0xc70f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc70d), 0x1e);
        EXPECT(gbc.readMem(0xc70e), 0x41);
        // 1E 02D7
        gbc.setState(0x975a, 0x9cf, 0x1f60, 0x3e5b, 0x3a91, 0x2a8f, 0x0, 0x1);
        gbc.writeMem(0x975a, { 0x1e, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x9cf);
        EXPECT(gbc.pc(), 0x975c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x975a), 0x1e);
        EXPECT(gbc.readMem(0x975b), 0xf);
        // 1E 02D8
        gbc.setState(0x6c36, 0xc229, 0x4e70, 0x64c5, 0x6345, 0x565b, 0x0, 0x1);
        gbc.writeMem(0x6c36, { 0x1e, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xc229);
        EXPECT(gbc.pc(), 0x6c38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 02D9
        gbc.setState(0xdec7, 0x81aa, 0xcf50, 0x3ff0, 0xe278, 0x6d9e, 0x0, 0x1);
        gbc.writeMem(0xdec7, { 0x1e, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x81aa);
        EXPECT(gbc.pc(), 0xdec9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdec7), 0x1e);
        EXPECT(gbc.readMem(0xdec8), 0xfb);
        // 1E 02DA
        gbc.setState(0x1dac, 0x9c4c, 0xf5e0, 0xf199, 0x1590, 0x9e1c, 0x1, 0x1);
        gbc.writeMem(0x1dac, { 0x1e, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x9c4c);
        EXPECT(gbc.pc(), 0x1dae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 02DC
        gbc.setState(0xdeca, 0x7422, 0x6060, 0xf7f, 0xd0dc, 0x7249, 0x1, 0x1);
        gbc.writeMem(0xdeca, { 0x1e, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x7422);
        EXPECT(gbc.pc(), 0xdecc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdeca), 0x1e);
        EXPECT(gbc.readMem(0xdecb), 0xda);
        // 1E 02DD
        gbc.setState(0x4f20, 0x86f4, 0x79f0, 0x42fa, 0xbb70, 0x1377, 0x1, 0x0);
        gbc.writeMem(0x4f20, { 0x1e, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x86f4);
        EXPECT(gbc.pc(), 0x4f22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 02DE
        gbc.setState(0x7532, 0x5e0f, 0xf610, 0x6f7c, 0x8115, 0x6cbd, 0x0, 0x1);
        gbc.writeMem(0x7532, { 0x1e, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x5e0f);
        EXPECT(gbc.pc(), 0x7534);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 02DF
        gbc.setState(0x94ff, 0x40d2, 0xdb70, 0x72b5, 0x3d4e, 0x9dce, 0x0, 0x1);
        gbc.writeMem(0x94ff, { 0x1e, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x40d2);
        EXPECT(gbc.pc(), 0x9501);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94ff), 0x1e);
        EXPECT(gbc.readMem(0x9500), 0xea);
        // 1E 02E0
        gbc.setState(0x3e54, 0x627a, 0x7a40, 0xf681, 0x41c3, 0xeac5, 0x0, 0x0);
        gbc.writeMem(0x3e54, { 0x1e, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x627a);
        EXPECT(gbc.pc(), 0x3e56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 02E1
        gbc.setState(0xb501, 0x4234, 0x8450, 0x6023, 0xf41b, 0x6814, 0x1, 0x1);
        gbc.writeMem(0xb501, { 0x1e, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x4234);
        EXPECT(gbc.pc(), 0xb503);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb501), 0x1e);
        EXPECT(gbc.readMem(0xb502), 0xc7);
        // 1E 02E2
        gbc.setState(0x5217, 0x3764, 0x9c50, 0xf375, 0x7592, 0xf9c0, 0x1, 0x0);
        gbc.writeMem(0x5217, { 0x1e, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x3764);
        EXPECT(gbc.pc(), 0x5219);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 02E3
        gbc.setState(0xa6a7, 0x6176, 0x90f0, 0x3e7b, 0xf6db, 0xf0d9, 0x1, 0x0);
        gbc.writeMem(0xa6a7, { 0x1e, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x6176);
        EXPECT(gbc.pc(), 0xa6a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6a7), 0x1e);
        EXPECT(gbc.readMem(0xa6a8), 0xd);
        // 1E 02E4
        gbc.setState(0x4a4a, 0xd415, 0xc6d0, 0x1700, 0x3a01, 0x84c, 0x0, 0x1);
        gbc.writeMem(0x4a4a, { 0x1e, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xd415);
        EXPECT(gbc.pc(), 0x4a4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 02E5
        gbc.setState(0xa92f, 0x1bf1, 0x6820, 0x7d49, 0xb9e5, 0xabe8, 0x1, 0x0);
        gbc.writeMem(0xa92f, { 0x1e, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x1bf1);
        EXPECT(gbc.pc(), 0xa931);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa92f), 0x1e);
        EXPECT(gbc.readMem(0xa930), 0x3);
        // 1E 02E6
        gbc.setState(0xe6b0, 0x8db4, 0xa3f0, 0x2fc5, 0x96f3, 0xaf81, 0x1, 0x1);
        gbc.writeMem(0xe6b0, { 0x1e, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x8db4);
        EXPECT(gbc.pc(), 0xe6b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6b0), 0x1e);
        EXPECT(gbc.readMem(0xe6b1), 0x27);
        // 1E 02E7
        gbc.setState(0xa180, 0xd099, 0xaf0, 0xb094, 0xb0bb, 0x949d, 0x1, 0x1);
        gbc.writeMem(0xa180, { 0x1e, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xd099);
        EXPECT(gbc.pc(), 0xa182);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa180), 0x1e);
        EXPECT(gbc.readMem(0xa181), 0xa7);
        // 1E 02E8
        gbc.setState(0xcbc, 0xdebc, 0x9ec0, 0x288d, 0xa6a9, 0xddd1, 0x1, 0x1);
        gbc.writeMem(0xcbc, { 0x1e, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xdebc);
        EXPECT(gbc.pc(), 0xcbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 02E9
        gbc.setState(0x85b7, 0x11dc, 0x8dc0, 0xbc6f, 0x1aa0, 0xe419, 0x1, 0x0);
        gbc.writeMem(0x85b7, { 0x1e, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x11dc);
        EXPECT(gbc.pc(), 0x85b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85b7), 0x1e);
        EXPECT(gbc.readMem(0x85b8), 0xc2);
        // 1E 02EA
        gbc.setState(0x8b46, 0x92a8, 0x2b30, 0x195f, 0xf9de, 0xc40e, 0x0, 0x1);
        gbc.writeMem(0x8b46, { 0x1e, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x92a8);
        EXPECT(gbc.pc(), 0x8b48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b46), 0x1e);
        EXPECT(gbc.readMem(0x8b47), 0x3);
        // 1E 02EB
        gbc.setState(0x5ad5, 0x2498, 0xf480, 0xe938, 0xf09d, 0x9f46, 0x1, 0x0);
        gbc.writeMem(0x5ad5, { 0x1e, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x2498);
        EXPECT(gbc.pc(), 0x5ad7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 02EC
        gbc.setState(0x51e9, 0xba75, 0xe880, 0xfaee, 0xa442, 0xc633, 0x1, 0x0);
        gbc.writeMem(0x51e9, { 0x1e, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xba75);
        EXPECT(gbc.pc(), 0x51eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 02ED
        gbc.setState(0x925a, 0x62be, 0x2350, 0xedb0, 0x861, 0x32bd, 0x0, 0x1);
        gbc.writeMem(0x925a, { 0x1e, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x62be);
        EXPECT(gbc.pc(), 0x925c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x925a), 0x1e);
        EXPECT(gbc.readMem(0x925b), 0xc);
        // 1E 02EE
        gbc.setState(0xaa22, 0x293e, 0x2ac0, 0xd19, 0xbd4b, 0xc3bc, 0x0, 0x0);
        gbc.writeMem(0xaa22, { 0x1e, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x293e);
        EXPECT(gbc.pc(), 0xaa24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa22), 0x1e);
        EXPECT(gbc.readMem(0xaa23), 0x2f);
        // 1E 02EF
        gbc.setState(0x6786, 0xed1c, 0xe2c0, 0x59c6, 0x2fd, 0x4786, 0x1, 0x0);
        gbc.writeMem(0x6786, { 0x1e, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xed1c);
        EXPECT(gbc.pc(), 0x6788);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 02F0
        gbc.setState(0x5efe, 0x152b, 0xef00, 0xf86a, 0x88ce, 0x9ab6, 0x0, 0x1);
        gbc.writeMem(0x5efe, { 0x1e, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x152b);
        EXPECT(gbc.pc(), 0x5f00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 02F1
        gbc.setState(0x89ee, 0xe406, 0xa000, 0xcf67, 0xb6cf, 0xcb65, 0x0, 0x0);
        gbc.writeMem(0x89ee, { 0x1e, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xe406);
        EXPECT(gbc.pc(), 0x89f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89ee), 0x1e);
        EXPECT(gbc.readMem(0x89ef), 0x47);
        // 1E 02F2
        gbc.setState(0xa1ac, 0x5ce2, 0xb0b0, 0x509, 0x6a7a, 0xa91d, 0x0, 0x0);
        gbc.writeMem(0xa1ac, { 0x1e, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x5ce2);
        EXPECT(gbc.pc(), 0xa1ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1ac), 0x1e);
        EXPECT(gbc.readMem(0xa1ad), 0x31);
        // 1E 02F3
        gbc.setState(0x4fa5, 0x51fd, 0x42f0, 0x9e53, 0xace2, 0x274a, 0x1, 0x1);
        gbc.writeMem(0x4fa5, { 0x1e, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x51fd);
        EXPECT(gbc.pc(), 0x4fa7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 02F4
        gbc.setState(0x7cb3, 0x21fa, 0xb4e0, 0xe245, 0xb29d, 0xba0f, 0x0, 0x0);
        gbc.writeMem(0x7cb3, { 0x1e, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x21fa);
        EXPECT(gbc.pc(), 0x7cb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 02F5
        gbc.setState(0x6130, 0xc66b, 0x1490, 0xd0a5, 0x883, 0x1555, 0x1, 0x0);
        gbc.writeMem(0x6130, { 0x1e, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xc66b);
        EXPECT(gbc.pc(), 0x6132);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 02F6
        gbc.setState(0x6f22, 0x223f, 0x6770, 0x1dd, 0x76eb, 0x2a62, 0x1, 0x1);
        gbc.writeMem(0x6f22, { 0x1e, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x223f);
        EXPECT(gbc.pc(), 0x6f24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 02F7
        gbc.setState(0x43a4, 0xfe84, 0x2fe0, 0x6d38, 0x4c77, 0x9a87, 0x1, 0x1);
        gbc.writeMem(0x43a4, { 0x1e, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xfe84);
        EXPECT(gbc.pc(), 0x43a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 02F8
        gbc.setState(0xaf6e, 0xf749, 0x6f40, 0x5d2b, 0x8ea6, 0x5ba5, 0x0, 0x0);
        gbc.writeMem(0xaf6e, { 0x1e, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xf749);
        EXPECT(gbc.pc(), 0xaf70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf6e), 0x1e);
        EXPECT(gbc.readMem(0xaf6f), 0xf9);
        // 1E 02F9
        gbc.setState(0xb0c2, 0xa9ca, 0xee00, 0x58bb, 0x9034, 0xfd96, 0x0, 0x0);
        gbc.writeMem(0xb0c2, { 0x1e, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xa9ca);
        EXPECT(gbc.pc(), 0xb0c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0c2), 0x1e);
        EXPECT(gbc.readMem(0xb0c3), 0x71);
        // 1E 02FA
        gbc.setState(0x8084, 0xddf3, 0x50, 0xebd4, 0xf10f, 0x905d, 0x0, 0x0);
        gbc.writeMem(0x8084, { 0x1e, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xddf3);
        EXPECT(gbc.pc(), 0x8086);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8084), 0x1e);
        EXPECT(gbc.readMem(0x8085), 0x5a);
        // 1E 02FB
        gbc.setState(0x5cf2, 0x9dd, 0x6cf0, 0xe6a3, 0x9a20, 0x34b0, 0x0, 0x0);
        gbc.writeMem(0x5cf2, { 0x1e, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x9dd);
        EXPECT(gbc.pc(), 0x5cf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 02FC
        gbc.setState(0x9894, 0x18e2, 0xc680, 0x21b0, 0xf54b, 0x2c7f, 0x1, 0x0);
        gbc.writeMem(0x9894, { 0x1e, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x18e2);
        EXPECT(gbc.pc(), 0x9896);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9894), 0x1e);
        EXPECT(gbc.readMem(0x9895), 0x86);
        // 1E 02FD
        gbc.setState(0x9ae7, 0xdbb2, 0x9240, 0x4e70, 0x2db4, 0x1764, 0x0, 0x0);
        gbc.writeMem(0x9ae7, { 0x1e, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xdbb2);
        EXPECT(gbc.pc(), 0x9ae9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ae7), 0x1e);
        EXPECT(gbc.readMem(0x9ae8), 0xbc);
        // 1E 02FE
        gbc.setState(0x5ac8, 0x4efc, 0x3ad0, 0xfd0a, 0x81d6, 0x84b6, 0x0, 0x1);
        gbc.writeMem(0x5ac8, { 0x1e, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x4efc);
        EXPECT(gbc.pc(), 0x5aca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 02FF
        gbc.setState(0xe398, 0xf818, 0x83f0, 0x18f2, 0xbb0f, 0xbef5, 0x0, 0x1);
        gbc.writeMem(0xe398, { 0x1e, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xf818);
        EXPECT(gbc.pc(), 0xe39a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe398), 0x1e);
        EXPECT(gbc.readMem(0xe399), 0xa9);
        // 1E 0300
        gbc.setState(0x20e3, 0x398b, 0xd030, 0x3fd3, 0xd86f, 0x5eb6, 0x1, 0x1);
        gbc.writeMem(0x20e3, { 0x1e, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x398b);
        EXPECT(gbc.pc(), 0x20e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 0301
        gbc.setState(0x599f, 0xb99, 0x4190, 0xf632, 0x17a2, 0x8d34, 0x1, 0x1);
        gbc.writeMem(0x599f, { 0x1e, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xb99);
        EXPECT(gbc.pc(), 0x59a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 0302
        gbc.setState(0x3071, 0x1d3b, 0xfd20, 0xab34, 0x7003, 0x4fe2, 0x0, 0x1);
        gbc.writeMem(0x3071, { 0x1e, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x1d3b);
        EXPECT(gbc.pc(), 0x3073);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 0304
        gbc.setState(0x811b, 0x32b2, 0xeda0, 0x50c1, 0xc1e8, 0x747e, 0x1, 0x1);
        gbc.writeMem(0x811b, { 0x1e, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x32b2);
        EXPECT(gbc.pc(), 0x811d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x811b), 0x1e);
        EXPECT(gbc.readMem(0x811c), 0xe2);
        // 1E 0305
        gbc.setState(0xc40c, 0x5e78, 0xc2f0, 0x21ca, 0xa569, 0xfefe, 0x1, 0x0);
        gbc.writeMem(0xc40c, { 0x1e, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x5e78);
        EXPECT(gbc.pc(), 0xc40e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc40c), 0x1e);
        EXPECT(gbc.readMem(0xc40d), 0xb5);
        // 1E 0306
        gbc.setState(0x7113, 0x1154, 0xc800, 0x3403, 0x927a, 0x2a1d, 0x1, 0x1);
        gbc.writeMem(0x7113, { 0x1e, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x1154);
        EXPECT(gbc.pc(), 0x7115);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 0308
        gbc.setState(0xd069, 0x6635, 0xe810, 0xca69, 0x2ab1, 0x1162, 0x0, 0x1);
        gbc.writeMem(0xd069, { 0x1e, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x6635);
        EXPECT(gbc.pc(), 0xd06b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd069), 0x1e);
        EXPECT(gbc.readMem(0xd06a), 0xc8);
        // 1E 0309
        gbc.setState(0x5378, 0xec1c, 0xa9e0, 0x5736, 0xa612, 0x1736, 0x0, 0x1);
        gbc.writeMem(0x5378, { 0x1e, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xec1c);
        EXPECT(gbc.pc(), 0x537a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 030A
        gbc.setState(0x5106, 0x810c, 0x54a0, 0xc1d, 0x13de, 0x1394, 0x0, 0x1);
        gbc.writeMem(0x5106, { 0x1e, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x810c);
        EXPECT(gbc.pc(), 0x5108);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 030B
        gbc.setState(0x80bc, 0x7208, 0x32f0, 0x1d87, 0xc443, 0x96d6, 0x1, 0x0);
        gbc.writeMem(0x80bc, { 0x1e, 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x7208);
        EXPECT(gbc.pc(), 0x80be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80bc), 0x1e);
        EXPECT(gbc.readMem(0x80bd), 0x37);
        // 1E 030C
        gbc.setState(0x9fa6, 0xc2b, 0x74a0, 0x6d6, 0xfc73, 0xb3d4, 0x1, 0x0);
        gbc.writeMem(0x9fa6, { 0x1e, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xc2b);
        EXPECT(gbc.pc(), 0x9fa8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fa6), 0x1e);
        EXPECT(gbc.readMem(0x9fa7), 0x7a);
        // 1E 030D
        gbc.setState(0xebcb, 0xf514, 0x3130, 0xa332, 0x9fd7, 0x6a05, 0x1, 0x0);
        gbc.writeMem(0xebcb, { 0x1e, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xf514);
        EXPECT(gbc.pc(), 0xebcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebcb), 0x1e);
        EXPECT(gbc.readMem(0xebcc), 0xd3);
        // 1E 030E
        gbc.setState(0x3e48, 0x2c8d, 0x1ff0, 0xf38b, 0xfb8, 0x2192, 0x1, 0x0);
        gbc.writeMem(0x3e48, { 0x1e, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x2c8d);
        EXPECT(gbc.pc(), 0x3e4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 030F
        gbc.setState(0x36f3, 0xb991, 0x3270, 0x2463, 0x2b87, 0x618d, 0x0, 0x0);
        gbc.writeMem(0x36f3, { 0x1e, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xb991);
        EXPECT(gbc.pc(), 0x36f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 0310
        gbc.setState(0x3f0a, 0x6571, 0x3dd0, 0x20fd, 0x99eb, 0x23dc, 0x0, 0x0);
        gbc.writeMem(0x3f0a, { 0x1e, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x6571);
        EXPECT(gbc.pc(), 0x3f0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 0311
        gbc.setState(0x794d, 0x9d7d, 0xe730, 0x9db2, 0x4577, 0x5c96, 0x0, 0x0);
        gbc.writeMem(0x794d, { 0x1e, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x9d7d);
        EXPECT(gbc.pc(), 0x794f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 0312
        gbc.setState(0xe0ed, 0x23df, 0xe870, 0x38ba, 0xd86e, 0xc1a0, 0x1, 0x1);
        gbc.writeMem(0xe0ed, { 0x1e, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x23df);
        EXPECT(gbc.pc(), 0xe0ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0ed), 0x1e);
        EXPECT(gbc.readMem(0xe0ee), 0xcd);
        // 1E 0313
        gbc.setState(0x6c3c, 0x1a46, 0x67f0, 0xf129, 0x3aea, 0x42b6, 0x0, 0x0);
        gbc.writeMem(0x6c3c, { 0x1e, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x1a46);
        EXPECT(gbc.pc(), 0x6c3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 0314
        gbc.setState(0xa63a, 0xdf8e, 0x64c0, 0xe847, 0x33df, 0x9a7a, 0x0, 0x0);
        gbc.writeMem(0xa63a, { 0x1e, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xdf8e);
        EXPECT(gbc.pc(), 0xa63c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa63a), 0x1e);
        EXPECT(gbc.readMem(0xa63b), 0xb1);
        // 1E 0315
        gbc.setState(0x47a7, 0xbbde, 0xaac0, 0xf8de, 0x6332, 0xb219, 0x0, 0x1);
        gbc.writeMem(0x47a7, { 0x1e, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xbbde);
        EXPECT(gbc.pc(), 0x47a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 0316
        gbc.setState(0xdabc, 0x2d2, 0x3fb0, 0x9f56, 0xcb58, 0x56ff, 0x1, 0x0);
        gbc.writeMem(0xdabc, { 0x1e, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x2d2);
        EXPECT(gbc.pc(), 0xdabe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdabc), 0x1e);
        EXPECT(gbc.readMem(0xdabd), 0xed);
        // 1E 0317
        gbc.setState(0x302, 0x1921, 0x2aa0, 0x9f5c, 0x1472, 0x96ee, 0x0, 0x0);
        gbc.writeMem(0x302, { 0x1e, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x1921);
        EXPECT(gbc.pc(), 0x304);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 0318
        gbc.setState(0x8a77, 0x6ba0, 0xb0e0, 0x1343, 0x8956, 0x5c83, 0x1, 0x0);
        gbc.writeMem(0x8a77, { 0x1e, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x6ba0);
        EXPECT(gbc.pc(), 0x8a79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a77), 0x1e);
        EXPECT(gbc.readMem(0x8a78), 0x52);
        // 1E 0319
        gbc.setState(0x944e, 0xed8a, 0xde10, 0x6c98, 0x7291, 0x9ffb, 0x1, 0x0);
        gbc.writeMem(0x944e, { 0x1e, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xed8a);
        EXPECT(gbc.pc(), 0x9450);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x944e), 0x1e);
        EXPECT(gbc.readMem(0x944f), 0x8f);
        // 1E 031A
        gbc.setState(0x1761, 0xf21c, 0xbf60, 0xb0b6, 0x55ab, 0xc076, 0x0, 0x1);
        gbc.writeMem(0x1761, { 0x1e, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xf21c);
        EXPECT(gbc.pc(), 0x1763);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 031B
        gbc.setState(0xb2cd, 0xebf8, 0xc9e0, 0x278a, 0x6e49, 0xd2c1, 0x1, 0x0);
        gbc.writeMem(0xb2cd, { 0x1e, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xebf8);
        EXPECT(gbc.pc(), 0xb2cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2cd), 0x1e);
        EXPECT(gbc.readMem(0xb2ce), 0x9b);
        // 1E 031C
        gbc.setState(0xc8d0, 0xb08a, 0xfa20, 0x4af9, 0x34ab, 0x15c7, 0x0, 0x1);
        gbc.writeMem(0xc8d0, { 0x1e, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xb08a);
        EXPECT(gbc.pc(), 0xc8d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8d0), 0x1e);
        EXPECT(gbc.readMem(0xc8d1), 0xba);
        // 1E 031D
        gbc.setState(0x7434, 0x73ac, 0xe7d0, 0xeeaa, 0x4eef, 0x8064, 0x1, 0x1);
        gbc.writeMem(0x7434, { 0x1e, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x73ac);
        EXPECT(gbc.pc(), 0x7436);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 031E
        gbc.setState(0x4a97, 0x8814, 0xf850, 0xf27f, 0x48d9, 0x67d1, 0x0, 0x1);
        gbc.writeMem(0x4a97, { 0x1e, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x8814);
        EXPECT(gbc.pc(), 0x4a99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 031F
        gbc.setState(0x8986, 0x36cf, 0xd930, 0x88df, 0x6562, 0x9f74, 0x1, 0x1);
        gbc.writeMem(0x8986, { 0x1e, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x36cf);
        EXPECT(gbc.pc(), 0x8988);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8986), 0x1e);
        EXPECT(gbc.readMem(0x8987), 0x2d);
        // 1E 0320
        gbc.setState(0xab41, 0xe8de, 0x5f70, 0x6d7e, 0xc950, 0xf51c, 0x1, 0x0);
        gbc.writeMem(0xab41, { 0x1e, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xe8de);
        EXPECT(gbc.pc(), 0xab43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab41), 0x1e);
        EXPECT(gbc.readMem(0xab42), 0xcc);
        // 1E 0321
        gbc.setState(0xc5a1, 0x5819, 0x5e30, 0xd3ef, 0xd85, 0xd480, 0x1, 0x1);
        gbc.writeMem(0xc5a1, { 0x1e, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x5819);
        EXPECT(gbc.pc(), 0xc5a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5a1), 0x1e);
        EXPECT(gbc.readMem(0xc5a2), 0x62);
        // 1E 0322
        gbc.setState(0xd188, 0x971e, 0x9fd0, 0x8c91, 0xc0d1, 0xf1d, 0x1, 0x0);
        gbc.writeMem(0xd188, { 0x1e, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x971e);
        EXPECT(gbc.pc(), 0xd18a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd188), 0x1e);
        EXPECT(gbc.readMem(0xd189), 0x95);
        // 1E 0324
        gbc.setState(0xe9e9, 0xc15c, 0x7ad0, 0x9025, 0x4ab9, 0xe677, 0x1, 0x0);
        gbc.writeMem(0xe9e9, { 0x1e, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xc15c);
        EXPECT(gbc.pc(), 0xe9eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9e9), 0x1e);
        EXPECT(gbc.readMem(0xe9ea), 0xc4);
        // 1E 0326
        gbc.setState(0xbac5, 0x3e45, 0x45f0, 0xdb58, 0xa5a4, 0x5e49, 0x1, 0x1);
        gbc.writeMem(0xbac5, { 0x1e, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x3e45);
        EXPECT(gbc.pc(), 0xbac7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbac5), 0x1e);
        EXPECT(gbc.readMem(0xbac6), 0x86);
        // 1E 0327
        gbc.setState(0x6672, 0x1995, 0xce10, 0x47c3, 0xe926, 0x59b2, 0x1, 0x1);
        gbc.writeMem(0x6672, { 0x1e, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x1995);
        EXPECT(gbc.pc(), 0x6674);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 0328
        gbc.setState(0xca91, 0x7519, 0x43d0, 0x7e5, 0xc1ab, 0x3782, 0x1, 0x1);
        gbc.writeMem(0xca91, { 0x1e, 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x7519);
        EXPECT(gbc.pc(), 0xca93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca91), 0x1e);
        EXPECT(gbc.readMem(0xca92), 0x48);
        // 1E 0329
        gbc.setState(0x4d61, 0x5f45, 0xd5a0, 0x2f38, 0x1b67, 0x348, 0x0, 0x0);
        gbc.writeMem(0x4d61, { 0x1e, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x5f45);
        EXPECT(gbc.pc(), 0x4d63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 032A
        gbc.setState(0x9f78, 0xd467, 0xff30, 0xe0cc, 0xf4d3, 0xde3f, 0x0, 0x0);
        gbc.writeMem(0x9f78, { 0x1e, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xd467);
        EXPECT(gbc.pc(), 0x9f7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f78), 0x1e);
        EXPECT(gbc.readMem(0x9f79), 0xff);
        // 1E 032B
        gbc.setState(0x7ddd, 0xef5b, 0x7e90, 0x391e, 0x4b8d, 0x3f0b, 0x0, 0x0);
        gbc.writeMem(0x7ddd, { 0x1e, 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xef5b);
        EXPECT(gbc.pc(), 0x7ddf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 032C
        gbc.setState(0x3d49, 0x2222, 0xfb20, 0x3531, 0xf28a, 0xa67b, 0x1, 0x1);
        gbc.writeMem(0x3d49, { 0x1e, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x2222);
        EXPECT(gbc.pc(), 0x3d4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 032D
        gbc.setState(0xc3f5, 0xd62b, 0xcf40, 0x7703, 0x4aba, 0x3df5, 0x0, 0x0);
        gbc.writeMem(0xc3f5, { 0x1e, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xd62b);
        EXPECT(gbc.pc(), 0xc3f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3f5), 0x1e);
        EXPECT(gbc.readMem(0xc3f6), 0x56);
        // 1E 032E
        gbc.setState(0xb6cd, 0xd97c, 0x4b20, 0x9418, 0xf362, 0x26ae, 0x0, 0x0);
        gbc.writeMem(0xb6cd, { 0x1e, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xd97c);
        EXPECT(gbc.pc(), 0xb6cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6cd), 0x1e);
        EXPECT(gbc.readMem(0xb6ce), 0xd9);
        // 1E 032F
        gbc.setState(0xb3c2, 0x9d0f, 0x7760, 0xbeaa, 0x37c1, 0x682a, 0x0, 0x0);
        gbc.writeMem(0xb3c2, { 0x1e, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x9d0f);
        EXPECT(gbc.pc(), 0xb3c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3c2), 0x1e);
        EXPECT(gbc.readMem(0xb3c3), 0x2a);
        // 1E 0330
        gbc.setState(0x1e23, 0x1a5c, 0x5fc0, 0xe74c, 0xf07f, 0x7a3, 0x1, 0x0);
        gbc.writeMem(0x1e23, { 0x1e, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x1a5c);
        EXPECT(gbc.pc(), 0x1e25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 0331
        gbc.setState(0xd95f, 0xe06b, 0xf8b0, 0xe5a, 0x9515, 0x6038, 0x1, 0x1);
        gbc.writeMem(0xd95f, { 0x1e, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xe06b);
        EXPECT(gbc.pc(), 0xd961);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd95f), 0x1e);
        EXPECT(gbc.readMem(0xd960), 0x23);
        // 1E 0332
        gbc.setState(0x6b7c, 0x2a3d, 0x87a0, 0x2116, 0xc0cd, 0xeeef, 0x1, 0x0);
        gbc.writeMem(0x6b7c, { 0x1e, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x2a3d);
        EXPECT(gbc.pc(), 0x6b7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 0333
        gbc.setState(0x67dc, 0xc607, 0x4530, 0x8e26, 0x4215, 0x8187, 0x0, 0x0);
        gbc.writeMem(0x67dc, { 0x1e, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xc607);
        EXPECT(gbc.pc(), 0x67de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 0334
        gbc.setState(0x8f5e, 0xe85, 0xd1d0, 0x1ae1, 0x3498, 0xa082, 0x0, 0x1);
        gbc.writeMem(0x8f5e, { 0x1e, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xe85);
        EXPECT(gbc.pc(), 0x8f60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f5e), 0x1e);
        EXPECT(gbc.readMem(0x8f5f), 0x84);
        // 1E 0335
        gbc.setState(0x537f, 0xb177, 0x950, 0x72ce, 0xc122, 0x3b2c, 0x0, 0x1);
        gbc.writeMem(0x537f, { 0x1e, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xb177);
        EXPECT(gbc.pc(), 0x5381);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 0336
        gbc.setState(0x7835, 0xdda6, 0xaf40, 0xb21b, 0x9766, 0x937f, 0x1, 0x1);
        gbc.writeMem(0x7835, { 0x1e, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xdda6);
        EXPECT(gbc.pc(), 0x7837);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 0337
        gbc.setState(0x7ca7, 0x5e2e, 0x68b0, 0x959b, 0xf91, 0xa4fe, 0x0, 0x1);
        gbc.writeMem(0x7ca7, { 0x1e, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x5e2e);
        EXPECT(gbc.pc(), 0x7ca9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 0338
        gbc.setState(0xc46a, 0xcc6b, 0xa950, 0x27cc, 0xe22d, 0x6210, 0x1, 0x0);
        gbc.writeMem(0xc46a, { 0x1e, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xcc6b);
        EXPECT(gbc.pc(), 0xc46c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc46a), 0x1e);
        EXPECT(gbc.readMem(0xc46b), 0x6c);
        // 1E 0339
        gbc.setState(0x2e15, 0x611c, 0x69e0, 0x95fa, 0xf1f3, 0xcf14, 0x0, 0x0);
        gbc.writeMem(0x2e15, { 0x1e, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x611c);
        EXPECT(gbc.pc(), 0x2e17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 033A
        gbc.setState(0x69c7, 0x9833, 0x70c0, 0x8927, 0xaf18, 0x303d, 0x0, 0x1);
        gbc.writeMem(0x69c7, { 0x1e, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x9833);
        EXPECT(gbc.pc(), 0x69c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 033B
        gbc.setState(0x9450, 0x1f1, 0xe250, 0xc037, 0x4ca, 0xf3e4, 0x1, 0x1);
        gbc.writeMem(0x9450, { 0x1e, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x1f1);
        EXPECT(gbc.pc(), 0x9452);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9450), 0x1e);
        EXPECT(gbc.readMem(0x9451), 0x5e);
        // 1E 033C
        gbc.setState(0x67ec, 0x734f, 0x9a50, 0xaa4d, 0xb01a, 0x90d4, 0x1, 0x0);
        gbc.writeMem(0x67ec, { 0x1e, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x734f);
        EXPECT(gbc.pc(), 0x67ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 033D
        gbc.setState(0xb5ec, 0xb719, 0xe450, 0x2c11, 0x9663, 0xcc4c, 0x1, 0x1);
        gbc.writeMem(0xb5ec, { 0x1e, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xb719);
        EXPECT(gbc.pc(), 0xb5ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5ec), 0x1e);
        EXPECT(gbc.readMem(0xb5ed), 0xc2);
        // 1E 033E
        gbc.setState(0x83c1, 0x5664, 0xd630, 0x2969, 0xd15f, 0x18fc, 0x0, 0x0);
        gbc.writeMem(0x83c1, { 0x1e, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x5664);
        EXPECT(gbc.pc(), 0x83c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83c1), 0x1e);
        EXPECT(gbc.readMem(0x83c2), 0xe1);
        // 1E 033F
        gbc.setState(0x596a, 0x9ffd, 0xa310, 0x1b2a, 0x1ed4, 0x3bd8, 0x0, 0x0);
        gbc.writeMem(0x596a, { 0x1e, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x9ffd);
        EXPECT(gbc.pc(), 0x596c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 0340
        gbc.setState(0x8afc, 0x494a, 0xb870, 0x489, 0x746e, 0x41fa, 0x1, 0x0);
        gbc.writeMem(0x8afc, { 0x1e, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x494a);
        EXPECT(gbc.pc(), 0x8afe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8afc), 0x1e);
        EXPECT(gbc.readMem(0x8afd), 0x4b);
        // 1E 0341
        gbc.setState(0x23e3, 0xeaab, 0x5800, 0x86bf, 0xb0a, 0xa8cf, 0x0, 0x1);
        gbc.writeMem(0x23e3, { 0x1e, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xeaab);
        EXPECT(gbc.pc(), 0x23e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 0342
        gbc.setState(0xe364, 0x2898, 0x2a60, 0x325b, 0x3c54, 0x1558, 0x1, 0x0);
        gbc.writeMem(0xe364, { 0x1e, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x2898);
        EXPECT(gbc.pc(), 0xe366);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe364), 0x1e);
        EXPECT(gbc.readMem(0xe365), 0xb);
        // 1E 0343
        gbc.setState(0x1d, 0xd161, 0xf00, 0xdcba, 0x9a2e, 0xac56, 0x0, 0x1);
        gbc.writeMem(0x1d, { 0x1e, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xd161);
        EXPECT(gbc.pc(), 0x1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 0344
        gbc.setState(0x203a, 0x9fa7, 0x10f0, 0x71cb, 0xd1f8, 0x2759, 0x0, 0x1);
        gbc.writeMem(0x203a, { 0x1e, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x9fa7);
        EXPECT(gbc.pc(), 0x203c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 0345
        gbc.setState(0x346b, 0x8239, 0xc520, 0x46a8, 0xf649, 0xbeb3, 0x1, 0x0);
        gbc.writeMem(0x346b, { 0x1e, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x8239);
        EXPECT(gbc.pc(), 0x346d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 0346
        gbc.setState(0x2625, 0x2e25, 0xd210, 0xcf5, 0xcce7, 0x158b, 0x0, 0x0);
        gbc.writeMem(0x2625, { 0x1e, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x2e25);
        EXPECT(gbc.pc(), 0x2627);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 0347
        gbc.setState(0x3d37, 0x199f, 0x7f10, 0x7ed8, 0xd22d, 0x583b, 0x0, 0x1);
        gbc.writeMem(0x3d37, { 0x1e, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x199f);
        EXPECT(gbc.pc(), 0x3d39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 0348
        gbc.setState(0x47d7, 0x150d, 0xabb0, 0xd78c, 0xfe45, 0x7d9e, 0x0, 0x0);
        gbc.writeMem(0x47d7, { 0x1e, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x150d);
        EXPECT(gbc.pc(), 0x47d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 0349
        gbc.setState(0x84f7, 0x7e45, 0xd080, 0x79b, 0x6fb7, 0xfe84, 0x1, 0x1);
        gbc.writeMem(0x84f7, { 0x1e, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x7e45);
        EXPECT(gbc.pc(), 0x84f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84f7), 0x1e);
        EXPECT(gbc.readMem(0x84f8), 0x18);
        // 1E 034A
        gbc.setState(0x61ac, 0xed01, 0x19c0, 0xd56e, 0xa541, 0x11b7, 0x0, 0x1);
        gbc.writeMem(0x61ac, { 0x1e, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xed01);
        EXPECT(gbc.pc(), 0x61ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 034C
        gbc.setState(0x215b, 0x42f8, 0x91c0, 0x81c, 0x4b92, 0x7051, 0x0, 0x1);
        gbc.writeMem(0x215b, { 0x1e, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x42f8);
        EXPECT(gbc.pc(), 0x215d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 034D
        gbc.setState(0x8547, 0xfeba, 0x1e40, 0x5c8f, 0x78af, 0x30de, 0x0, 0x0);
        gbc.writeMem(0x8547, { 0x1e, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xfeba);
        EXPECT(gbc.pc(), 0x8549);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8547), 0x1e);
        EXPECT(gbc.readMem(0x8548), 0x79);
        // 1E 034E
        gbc.setState(0x542f, 0x6c22, 0x5590, 0x19a0, 0xd4da, 0x1981, 0x1, 0x0);
        gbc.writeMem(0x542f, { 0x1e, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x6c22);
        EXPECT(gbc.pc(), 0x5431);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 034F
        gbc.setState(0x8fcb, 0xcbce, 0xa0a0, 0x556e, 0x1ab1, 0x7ae9, 0x1, 0x0);
        gbc.writeMem(0x8fcb, { 0x1e, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xcbce);
        EXPECT(gbc.pc(), 0x8fcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fcb), 0x1e);
        EXPECT(gbc.readMem(0x8fcc), 0x20);
        // 1E 0350
        gbc.setState(0xdd35, 0x8e31, 0xb1e0, 0xf310, 0xf5be, 0xad5d, 0x1, 0x0);
        gbc.writeMem(0xdd35, { 0x1e, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x8e31);
        EXPECT(gbc.pc(), 0xdd37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd35), 0x1e);
        EXPECT(gbc.readMem(0xdd36), 0x4d);
        // 1E 0351
        gbc.setState(0x71c1, 0x5224, 0x8900, 0x48cf, 0x4693, 0xded8, 0x0, 0x0);
        gbc.writeMem(0x71c1, { 0x1e, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x5224);
        EXPECT(gbc.pc(), 0x71c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 0352
        gbc.setState(0xd188, 0x73f8, 0x1e30, 0x9fb1, 0x39f7, 0xc1e0, 0x1, 0x1);
        gbc.writeMem(0xd188, { 0x1e, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x73f8);
        EXPECT(gbc.pc(), 0xd18a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd188), 0x1e);
        EXPECT(gbc.readMem(0xd189), 0x95);
        // 1E 0353
        gbc.setState(0x83cf, 0xe982, 0x7810, 0xae2f, 0x4cd0, 0x1aaa, 0x1, 0x1);
        gbc.writeMem(0x83cf, { 0x1e, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xe982);
        EXPECT(gbc.pc(), 0x83d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83cf), 0x1e);
        EXPECT(gbc.readMem(0x83d0), 0x78);
        // 1E 0354
        gbc.setState(0x7c6a, 0xe71, 0x9cd0, 0xaaf4, 0xeadc, 0x1ac8, 0x0, 0x0);
        gbc.writeMem(0x7c6a, { 0x1e, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xe71);
        EXPECT(gbc.pc(), 0x7c6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 0355
        gbc.setState(0x241f, 0x28c8, 0x1140, 0x4914, 0x4ea, 0xec1, 0x0, 0x1);
        gbc.writeMem(0x241f, { 0x1e, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x28c8);
        EXPECT(gbc.pc(), 0x2421);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 0356
        gbc.setState(0x4f72, 0x436c, 0xb2b0, 0x9c53, 0xd281, 0x6aef, 0x1, 0x1);
        gbc.writeMem(0x4f72, { 0x1e, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x436c);
        EXPECT(gbc.pc(), 0x4f74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 0357
        gbc.setState(0x9f53, 0x59d, 0x93e0, 0x18d7, 0x79a, 0xef47, 0x1, 0x1);
        gbc.writeMem(0x9f53, { 0x1e, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x59d);
        EXPECT(gbc.pc(), 0x9f55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f53), 0x1e);
        EXPECT(gbc.readMem(0x9f54), 0xa7);
        // 1E 0358
        gbc.setState(0xddf0, 0x360b, 0x1c90, 0x968b, 0x436, 0x5002, 0x0, 0x1);
        gbc.writeMem(0xddf0, { 0x1e, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x360b);
        EXPECT(gbc.pc(), 0xddf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddf0), 0x1e);
        EXPECT(gbc.readMem(0xddf1), 0xd5);
        // 1E 0359
        gbc.setState(0x1ff6, 0x4dc8, 0x6fd0, 0xcc58, 0x357b, 0x2d72, 0x1, 0x0);
        gbc.writeMem(0x1ff6, { 0x1e, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x4dc8);
        EXPECT(gbc.pc(), 0x1ff8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 035A
        gbc.setState(0x7561, 0x75fa, 0xfed0, 0x5146, 0x663d, 0x7e1c, 0x0, 0x0);
        gbc.writeMem(0x7561, { 0x1e, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x75fa);
        EXPECT(gbc.pc(), 0x7563);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 035B
        gbc.setState(0xb6e2, 0xe59d, 0x2910, 0xcf90, 0xc4d9, 0x6dbf, 0x0, 0x1);
        gbc.writeMem(0xb6e2, { 0x1e, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xe59d);
        EXPECT(gbc.pc(), 0xb6e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6e2), 0x1e);
        EXPECT(gbc.readMem(0xb6e3), 0x2a);
        // 1E 035C
        gbc.setState(0xec9b, 0x2e67, 0x15f0, 0xaf1a, 0x375e, 0x5169, 0x0, 0x1);
        gbc.writeMem(0xec9b, { 0x1e, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x2e67);
        EXPECT(gbc.pc(), 0xec9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec9b), 0x1e);
        EXPECT(gbc.readMem(0xec9c), 0x74);
        // 1E 035D
        gbc.setState(0x839b, 0xb4a4, 0x20d0, 0xa5d5, 0xe31, 0x7da5, 0x0, 0x1);
        gbc.writeMem(0x839b, { 0x1e, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xb4a4);
        EXPECT(gbc.pc(), 0x839d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x839b), 0x1e);
        EXPECT(gbc.readMem(0x839c), 0x40);
        // 1E 035E
        gbc.setState(0x1efa, 0x3cc7, 0xfe10, 0xb226, 0xcb36, 0x3dcb, 0x0, 0x0);
        gbc.writeMem(0x1efa, { 0x1e, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x3cc7);
        EXPECT(gbc.pc(), 0x1efc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 035F
        gbc.setState(0xdfc4, 0xcc9e, 0xe5e0, 0x9de5, 0x72b, 0x6a26, 0x1, 0x0);
        gbc.writeMem(0xdfc4, { 0x1e, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xcc9e);
        EXPECT(gbc.pc(), 0xdfc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfc4), 0x1e);
        EXPECT(gbc.readMem(0xdfc5), 0x12);
        // 1E 0360
        gbc.setState(0x3c11, 0x7482, 0xbfe0, 0xed3, 0xca2d, 0x2d2e, 0x1, 0x1);
        gbc.writeMem(0x3c11, { 0x1e, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x7482);
        EXPECT(gbc.pc(), 0x3c13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 0361
        gbc.setState(0x1976, 0xeb50, 0x5ad0, 0xcfed, 0xbdf9, 0xcc47, 0x1, 0x1);
        gbc.writeMem(0x1976, { 0x1e, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xeb50);
        EXPECT(gbc.pc(), 0x1978);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 0362
        gbc.setState(0x7a2e, 0xb9e1, 0xa300, 0xf61c, 0x34a2, 0x4dc2, 0x0, 0x0);
        gbc.writeMem(0x7a2e, { 0x1e, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xb9e1);
        EXPECT(gbc.pc(), 0x7a30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 0363
        gbc.setState(0x9046, 0x45b7, 0x7d50, 0x9e8c, 0xe34c, 0x7862, 0x1, 0x0);
        gbc.writeMem(0x9046, { 0x1e, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x45b7);
        EXPECT(gbc.pc(), 0x9048);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9046), 0x1e);
        EXPECT(gbc.readMem(0x9047), 0x49);
        // 1E 0364
        gbc.setState(0x98dd, 0xec34, 0x1050, 0x6b33, 0xd837, 0xf935, 0x0, 0x0);
        gbc.writeMem(0x98dd, { 0x1e, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xec34);
        EXPECT(gbc.pc(), 0x98df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98dd), 0x1e);
        EXPECT(gbc.readMem(0x98de), 0x85);
        // 1E 0365
        gbc.setState(0x8686, 0xe670, 0x8f00, 0x6619, 0xba7b, 0xfa91, 0x0, 0x0);
        gbc.writeMem(0x8686, { 0x1e, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xe670);
        EXPECT(gbc.pc(), 0x8688);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8686), 0x1e);
        EXPECT(gbc.readMem(0x8687), 0xcf);
        // 1E 0366
        gbc.setState(0x83d8, 0xaf2e, 0x84d0, 0x2e11, 0xb961, 0xc8a4, 0x0, 0x1);
        gbc.writeMem(0x83d8, { 0x1e, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xaf2e);
        EXPECT(gbc.pc(), 0x83da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83d8), 0x1e);
        EXPECT(gbc.readMem(0x83d9), 0x20);
        // 1E 0367
        gbc.setState(0x1e0, 0x4bc, 0x43b0, 0x40a8, 0xf0d0, 0xd0b, 0x1, 0x0);
        gbc.writeMem(0x1e0, { 0x1e, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x4bc);
        EXPECT(gbc.pc(), 0x1e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 0368
        gbc.setState(0x4f9, 0x9a65, 0xec70, 0x7131, 0x171c, 0x1c80, 0x1, 0x0);
        gbc.writeMem(0x4f9, { 0x1e, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x9a65);
        EXPECT(gbc.pc(), 0x4fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 0369
        gbc.setState(0xe79, 0x1aad, 0x7870, 0x4155, 0x1abf, 0x82e3, 0x1, 0x1);
        gbc.writeMem(0xe79, { 0x1e, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x1aad);
        EXPECT(gbc.pc(), 0xe7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 036A
        gbc.setState(0x668d, 0xecbb, 0x9310, 0xb0c7, 0x6689, 0x953e, 0x0, 0x0);
        gbc.writeMem(0x668d, { 0x1e, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xecbb);
        EXPECT(gbc.pc(), 0x668f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 036B
        gbc.setState(0xc7c1, 0x632e, 0x47c0, 0xee06, 0x6324, 0xc25, 0x1, 0x0);
        gbc.writeMem(0xc7c1, { 0x1e, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x632e);
        EXPECT(gbc.pc(), 0xc7c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7c1), 0x1e);
        EXPECT(gbc.readMem(0xc7c2), 0x1f);
        // 1E 036C
        gbc.setState(0x8eae, 0x5704, 0x91f0, 0x349b, 0x21b0, 0x7942, 0x1, 0x1);
        gbc.writeMem(0x8eae, { 0x1e, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x5704);
        EXPECT(gbc.pc(), 0x8eb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8eae), 0x1e);
        EXPECT(gbc.readMem(0x8eaf), 0x30);
        // 1E 036D
        gbc.setState(0xb2d1, 0x1d04, 0xc1d0, 0x9a72, 0xffe7, 0xf8c5, 0x1, 0x1);
        gbc.writeMem(0xb2d1, { 0x1e, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x1d04);
        EXPECT(gbc.pc(), 0xb2d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2d1), 0x1e);
        EXPECT(gbc.readMem(0xb2d2), 0xe8);
        // 1E 036E
        gbc.setState(0x642f, 0xff0f, 0x5480, 0xa048, 0x44cb, 0xf030, 0x1, 0x1);
        gbc.writeMem(0x642f, { 0x1e, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xff0f);
        EXPECT(gbc.pc(), 0x6431);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 036F
        gbc.setState(0xa86d, 0xc1ec, 0x5320, 0x15f5, 0xfd78, 0x4ebc, 0x1, 0x0);
        gbc.writeMem(0xa86d, { 0x1e, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xc1ec);
        EXPECT(gbc.pc(), 0xa86f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa86d), 0x1e);
        EXPECT(gbc.readMem(0xa86e), 0xdd);
        // 1E 0370
        gbc.setState(0xc8e2, 0x1a02, 0x430, 0x638, 0x530c, 0x5371, 0x0, 0x1);
        gbc.writeMem(0xc8e2, { 0x1e, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x1a02);
        EXPECT(gbc.pc(), 0xc8e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8e2), 0x1e);
        EXPECT(gbc.readMem(0xc8e3), 0xaf);
        // 1E 0371
        gbc.setState(0xc659, 0xd548, 0xd9e0, 0x4d9d, 0x4908, 0x2231, 0x1, 0x1);
        gbc.writeMem(0xc659, { 0x1e, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xd548);
        EXPECT(gbc.pc(), 0xc65b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc659), 0x1e);
        EXPECT(gbc.readMem(0xc65a), 0x18);
        // 1E 0372
        gbc.setState(0xaca0, 0xe31e, 0x9a80, 0xa84e, 0xddb2, 0x909b, 0x1, 0x1);
        gbc.writeMem(0xaca0, { 0x1e, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xe31e);
        EXPECT(gbc.pc(), 0xaca2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaca0), 0x1e);
        EXPECT(gbc.readMem(0xaca1), 0xed);
        // 1E 0373
        gbc.setState(0xb8dd, 0x55e7, 0xa820, 0xf464, 0x9813, 0x1ca1, 0x0, 0x1);
        gbc.writeMem(0xb8dd, { 0x1e, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x55e7);
        EXPECT(gbc.pc(), 0xb8df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8dd), 0x1e);
        EXPECT(gbc.readMem(0xb8de), 0x83);
        // 1E 0374
        gbc.setState(0xabe3, 0x7461, 0x35c0, 0x238, 0xde74, 0xc9ac, 0x1, 0x0);
        gbc.writeMem(0xabe3, { 0x1e, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x7461);
        EXPECT(gbc.pc(), 0xabe5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabe3), 0x1e);
        EXPECT(gbc.readMem(0xabe4), 0xc8);
        // 1E 0375
        gbc.setState(0x75ae, 0xeb50, 0x4090, 0x72e7, 0x7042, 0xcad, 0x0, 0x1);
        gbc.writeMem(0x75ae, { 0x1e, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xeb50);
        EXPECT(gbc.pc(), 0x75b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 0376
        gbc.setState(0xafc0, 0xbdc8, 0xc460, 0xf665, 0xb6d3, 0xe8f5, 0x0, 0x0);
        gbc.writeMem(0xafc0, { 0x1e, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xbdc8);
        EXPECT(gbc.pc(), 0xafc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafc0), 0x1e);
        EXPECT(gbc.readMem(0xafc1), 0xfb);
        // 1E 0377
        gbc.setState(0x369e, 0xe750, 0xae0, 0xa1ce, 0x51ff, 0x3fb, 0x1, 0x1);
        gbc.writeMem(0x369e, { 0x1e, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xe750);
        EXPECT(gbc.pc(), 0x36a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 0378
        gbc.setState(0xb1c2, 0xb1cb, 0x4000, 0xc507, 0xe65, 0x9903, 0x1, 0x1);
        gbc.writeMem(0xb1c2, { 0x1e, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xb1cb);
        EXPECT(gbc.pc(), 0xb1c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1c2), 0x1e);
        EXPECT(gbc.readMem(0xb1c3), 0x92);
        // 1E 0379
        gbc.setState(0x2295, 0x830, 0xa870, 0xcbae, 0x46d8, 0x9cd2, 0x1, 0x0);
        gbc.writeMem(0x2295, { 0x1e, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x830);
        EXPECT(gbc.pc(), 0x2297);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 037A
        gbc.setState(0x53f2, 0xabc2, 0xd10, 0xbcd5, 0x2852, 0x5a7b, 0x1, 0x1);
        gbc.writeMem(0x53f2, { 0x1e, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xabc2);
        EXPECT(gbc.pc(), 0x53f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 037B
        gbc.setState(0x6cd, 0x423b, 0xa5c0, 0xa0fc, 0x9428, 0x718e, 0x1, 0x0);
        gbc.writeMem(0x6cd, { 0x1e, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x423b);
        EXPECT(gbc.pc(), 0x6cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 037C
        gbc.setState(0x494d, 0x32f3, 0x1760, 0x20a8, 0x994b, 0x56dd, 0x1, 0x0);
        gbc.writeMem(0x494d, { 0x1e, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x32f3);
        EXPECT(gbc.pc(), 0x494f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 037D
        gbc.setState(0xcde8, 0x5b9c, 0x8e90, 0x908f, 0xede9, 0x903d, 0x1, 0x1);
        gbc.writeMem(0xcde8, { 0x1e, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x5b9c);
        EXPECT(gbc.pc(), 0xcdea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcde8), 0x1e);
        EXPECT(gbc.readMem(0xcde9), 0x78);
        // 1E 037E
        gbc.setState(0x2440, 0x712d, 0x86d0, 0x5e21, 0xb710, 0x8c0b, 0x1, 0x0);
        gbc.writeMem(0x2440, { 0x1e, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x712d);
        EXPECT(gbc.pc(), 0x2442);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 037F
        gbc.setState(0x75d4, 0xfdf4, 0x4490, 0xce8d, 0x6450, 0x9c8d, 0x0, 0x1);
        gbc.writeMem(0x75d4, { 0x1e, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xfdf4);
        EXPECT(gbc.pc(), 0x75d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 0380
        gbc.setState(0x114d, 0x8f4b, 0x75a0, 0xb9a5, 0x72e3, 0x54ea, 0x0, 0x1);
        gbc.writeMem(0x114d, { 0x1e, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x8f4b);
        EXPECT(gbc.pc(), 0x114f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 0381
        gbc.setState(0xa328, 0xb829, 0x600, 0xbf5f, 0x6c13, 0x4842, 0x1, 0x1);
        gbc.writeMem(0xa328, { 0x1e, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xb829);
        EXPECT(gbc.pc(), 0xa32a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa328), 0x1e);
        EXPECT(gbc.readMem(0xa329), 0xa6);
        // 1E 0382
        gbc.setState(0xbd13, 0x41f3, 0xc9f0, 0x69e, 0xca3a, 0xeabb, 0x1, 0x0);
        gbc.writeMem(0xbd13, { 0x1e, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x41f3);
        EXPECT(gbc.pc(), 0xbd15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd13), 0x1e);
        EXPECT(gbc.readMem(0xbd14), 0xc3);
        // 1E 0383
        gbc.setState(0x6396, 0xff42, 0x1000, 0xb659, 0x6bd6, 0x7db3, 0x0, 0x1);
        gbc.writeMem(0x6396, { 0x1e, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xff42);
        EXPECT(gbc.pc(), 0x6398);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 0384
        gbc.setState(0x1e39, 0xf6ce, 0x8780, 0xbbde, 0x8465, 0x5a72, 0x0, 0x1);
        gbc.writeMem(0x1e39, { 0x1e, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xf6ce);
        EXPECT(gbc.pc(), 0x1e3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 0385
        gbc.setState(0xb551, 0x53b5, 0x2320, 0x9ef0, 0xc9fb, 0xd078, 0x1, 0x1);
        gbc.writeMem(0xb551, { 0x1e, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x53b5);
        EXPECT(gbc.pc(), 0xb553);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb551), 0x1e);
        EXPECT(gbc.readMem(0xb552), 0xe5);
        // 1E 0386
        gbc.setState(0x9aa6, 0xa84b, 0xa90, 0x1572, 0xdcb2, 0x9b49, 0x0, 0x1);
        gbc.writeMem(0x9aa6, { 0x1e, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xa84b);
        EXPECT(gbc.pc(), 0x9aa8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9aa6), 0x1e);
        EXPECT(gbc.readMem(0x9aa7), 0xb8);
        // 1E 0387
        gbc.setState(0xb257, 0x1e07, 0xf5f0, 0x8f35, 0x33b3, 0xb7d4, 0x0, 0x1);
        gbc.writeMem(0xb257, { 0x1e, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x1e07);
        EXPECT(gbc.pc(), 0xb259);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb257), 0x1e);
        EXPECT(gbc.readMem(0xb258), 0xc7);
        // 1E 0388
        gbc.setState(0xb4c6, 0x757e, 0x9650, 0x46be, 0xa081, 0xc516, 0x1, 0x1);
        gbc.writeMem(0xb4c6, { 0x1e, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x757e);
        EXPECT(gbc.pc(), 0xb4c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4c6), 0x1e);
        EXPECT(gbc.readMem(0xb4c7), 0xce);
        // 1E 0389
        gbc.setState(0xcfc3, 0x7d57, 0x26f0, 0x5c56, 0x2e28, 0xdbc8, 0x0, 0x1);
        gbc.writeMem(0xcfc3, { 0x1e, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x7d57);
        EXPECT(gbc.pc(), 0xcfc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfc3), 0x1e);
        EXPECT(gbc.readMem(0xcfc4), 0xf);
        // 1E 038A
        gbc.setState(0x424d, 0x923, 0x3d50, 0x48da, 0x94ae, 0xb38e, 0x1, 0x1);
        gbc.writeMem(0x424d, { 0x1e, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x923);
        EXPECT(gbc.pc(), 0x424f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 038B
        gbc.setState(0x752b, 0x71d5, 0xff0, 0xa8cb, 0x89f6, 0xd377, 0x0, 0x0);
        gbc.writeMem(0x752b, { 0x1e, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x71d5);
        EXPECT(gbc.pc(), 0x752d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 038C
        gbc.setState(0xce03, 0x3342, 0x4a40, 0xc5fe, 0x8924, 0x116b, 0x1, 0x0);
        gbc.writeMem(0xce03, { 0x1e, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x3342);
        EXPECT(gbc.pc(), 0xce05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce03), 0x1e);
        EXPECT(gbc.readMem(0xce04), 0xbb);
        // 1E 038D
        gbc.setState(0xc206, 0xcbef, 0x73b0, 0x483d, 0x5733, 0x404e, 0x1, 0x0);
        gbc.writeMem(0xc206, { 0x1e, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xcbef);
        EXPECT(gbc.pc(), 0xc208);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc206), 0x1e);
        EXPECT(gbc.readMem(0xc207), 0xca);
        // 1E 038E
        gbc.setState(0x6a8, 0x5456, 0x5030, 0x3dca, 0xd95f, 0x8fc8, 0x0, 0x1);
        gbc.writeMem(0x6a8, { 0x1e, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x5456);
        EXPECT(gbc.pc(), 0x6aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 038F
        gbc.setState(0xcefc, 0x9121, 0x7750, 0x3bb0, 0x76cb, 0xc14a, 0x1, 0x0);
        gbc.writeMem(0xcefc, { 0x1e, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x9121);
        EXPECT(gbc.pc(), 0xcefe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcefc), 0x1e);
        EXPECT(gbc.readMem(0xcefd), 0x1b);
        // 1E 0390
        gbc.setState(0x8b16, 0xba72, 0xf940, 0xb329, 0x6339, 0x345c, 0x1, 0x0);
        gbc.writeMem(0x8b16, { 0x1e, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xba72);
        EXPECT(gbc.pc(), 0x8b18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b16), 0x1e);
        EXPECT(gbc.readMem(0x8b17), 0x8c);
        // 1E 0391
        gbc.setState(0xa722, 0x4d1, 0xad0, 0x53bb, 0x24fb, 0xa11f, 0x1, 0x0);
        gbc.writeMem(0xa722, { 0x1e, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x4d1);
        EXPECT(gbc.pc(), 0xa724);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa722), 0x1e);
        EXPECT(gbc.readMem(0xa723), 0xb2);
        // 1E 0392
        gbc.setState(0x4790, 0x92c5, 0xedd0, 0x99c1, 0xdaae, 0x21dc, 0x0, 0x0);
        gbc.writeMem(0x4790, { 0x1e, 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x92c5);
        EXPECT(gbc.pc(), 0x4792);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 0393
        gbc.setState(0xbd1c, 0xa235, 0x3b0, 0x7263, 0x81ff, 0xcf6e, 0x1, 0x1);
        gbc.writeMem(0xbd1c, { 0x1e, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xa235);
        EXPECT(gbc.pc(), 0xbd1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd1c), 0x1e);
        EXPECT(gbc.readMem(0xbd1d), 0x5f);
        // 1E 0394
        gbc.setState(0xe876, 0xea92, 0xf3c0, 0x28d8, 0x9cbe, 0x7ea, 0x0, 0x0);
        gbc.writeMem(0xe876, { 0x1e, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xea92);
        EXPECT(gbc.pc(), 0xe878);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe876), 0x1e);
        EXPECT(gbc.readMem(0xe877), 0x1f);
        // 1E 0396
        gbc.setState(0xa367, 0x9688, 0x5c30, 0x9284, 0xc03, 0xb355, 0x1, 0x1);
        gbc.writeMem(0xa367, { 0x1e, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x9688);
        EXPECT(gbc.pc(), 0xa369);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa367), 0x1e);
        EXPECT(gbc.readMem(0xa368), 0x6e);
        // 1E 0397
        gbc.setState(0x5872, 0xd693, 0xf9f0, 0xf686, 0xbd4a, 0xb6bc, 0x0, 0x1);
        gbc.writeMem(0x5872, { 0x1e, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xd693);
        EXPECT(gbc.pc(), 0x5874);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 0398
        gbc.setState(0x3935, 0x69de, 0x6f0, 0xef16, 0xb2a4, 0x259f, 0x1, 0x1);
        gbc.writeMem(0x3935, { 0x1e, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x69de);
        EXPECT(gbc.pc(), 0x3937);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 0399
        gbc.setState(0xaf23, 0x2c54, 0x5440, 0xdc62, 0x7ebc, 0x5e90, 0x0, 0x0);
        gbc.writeMem(0xaf23, { 0x1e, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x2c54);
        EXPECT(gbc.pc(), 0xaf25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf23), 0x1e);
        EXPECT(gbc.readMem(0xaf24), 0xef);
        // 1E 039A
        gbc.setState(0x3d8f, 0x5e18, 0xc0d0, 0xcc31, 0x3adf, 0x24eb, 0x0, 0x0);
        gbc.writeMem(0x3d8f, { 0x1e, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x5e18);
        EXPECT(gbc.pc(), 0x3d91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 039B
        gbc.setState(0x7e7b, 0x33f, 0xa4c0, 0x62fb, 0x2166, 0x706b, 0x0, 0x1);
        gbc.writeMem(0x7e7b, { 0x1e, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x33f);
        EXPECT(gbc.pc(), 0x7e7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 039C
        gbc.setState(0x3637, 0x70d2, 0x3680, 0xc96c, 0xa2b8, 0x7ee4, 0x0, 0x0);
        gbc.writeMem(0x3637, { 0x1e, 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x70d2);
        EXPECT(gbc.pc(), 0x3639);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 039D
        gbc.setState(0x8576, 0xfae8, 0x48c0, 0x6545, 0xb394, 0xf120, 0x1, 0x0);
        gbc.writeMem(0x8576, { 0x1e, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xfae8);
        EXPECT(gbc.pc(), 0x8578);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8576), 0x1e);
        EXPECT(gbc.readMem(0x8577), 0x61);
        // 1E 039F
        gbc.setState(0x84a5, 0xd0a5, 0xb310, 0xbded, 0x5967, 0xf105, 0x1, 0x0);
        gbc.writeMem(0x84a5, { 0x1e, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xd0a5);
        EXPECT(gbc.pc(), 0x84a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84a5), 0x1e);
        EXPECT(gbc.readMem(0x84a6), 0x9e);
        // 1E 03A0
        gbc.setState(0x40a8, 0x7f85, 0x3230, 0xb7f0, 0xae2a, 0x54b2, 0x0, 0x1);
        gbc.writeMem(0x40a8, { 0x1e, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x7f85);
        EXPECT(gbc.pc(), 0x40aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 03A1
        gbc.setState(0x6b06, 0x3759, 0x9530, 0xc78c, 0x3454, 0x9766, 0x1, 0x1);
        gbc.writeMem(0x6b06, { 0x1e, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x3759);
        EXPECT(gbc.pc(), 0x6b08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 03A2
        gbc.setState(0xe923, 0x60b5, 0x7390, 0x25e8, 0x3d26, 0xff27, 0x1, 0x1);
        gbc.writeMem(0xe923, { 0x1e, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x60b5);
        EXPECT(gbc.pc(), 0xe925);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe923), 0x1e);
        EXPECT(gbc.readMem(0xe924), 0xba);
        // 1E 03A3
        gbc.setState(0xcfd0, 0xe345, 0xe810, 0x905d, 0xbb5f, 0x5671, 0x0, 0x0);
        gbc.writeMem(0xcfd0, { 0x1e, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xe345);
        EXPECT(gbc.pc(), 0xcfd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfd0), 0x1e);
        EXPECT(gbc.readMem(0xcfd1), 0xdc);
        // 1E 03A4
        gbc.setState(0x4b15, 0x7d9a, 0x8c40, 0x92c1, 0xa16, 0x588, 0x1, 0x1);
        gbc.writeMem(0x4b15, { 0x1e, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x7d9a);
        EXPECT(gbc.pc(), 0x4b17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 03A6
        gbc.setState(0xdb90, 0x8e80, 0x50, 0x1cb9, 0x6462, 0xb547, 0x1, 0x0);
        gbc.writeMem(0xdb90, { 0x1e, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x8e80);
        EXPECT(gbc.pc(), 0xdb92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb90), 0x1e);
        EXPECT(gbc.readMem(0xdb91), 0x10);
        // 1E 03A7
        gbc.setState(0xce19, 0x7f26, 0xffd0, 0xd1a5, 0x8a60, 0xeb18, 0x0, 0x0);
        gbc.writeMem(0xce19, { 0x1e, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x7f26);
        EXPECT(gbc.pc(), 0xce1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce19), 0x1e);
        EXPECT(gbc.readMem(0xce1a), 0xf4);
        // 1E 03A8
        gbc.setState(0xaf4a, 0x6f3d, 0x9240, 0xab84, 0x8446, 0x3f0f, 0x1, 0x0);
        gbc.writeMem(0xaf4a, { 0x1e, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x6f3d);
        EXPECT(gbc.pc(), 0xaf4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf4a), 0x1e);
        EXPECT(gbc.readMem(0xaf4b), 0xad);
        // 1E 03A9
        gbc.setState(0x597b, 0x689a, 0xd0b0, 0x22c8, 0x7bd, 0x28db, 0x0, 0x1);
        gbc.writeMem(0x597b, { 0x1e, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x689a);
        EXPECT(gbc.pc(), 0x597d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 03AA
        gbc.setState(0xce18, 0x985f, 0x6a0, 0x6084, 0xb8c7, 0x692c, 0x0, 0x0);
        gbc.writeMem(0xce18, { 0x1e, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x985f);
        EXPECT(gbc.pc(), 0xce1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce18), 0x1e);
        EXPECT(gbc.readMem(0xce19), 0xc6);
        // 1E 03AB
        gbc.setState(0x14c6, 0x3b9c, 0x4d20, 0xa10d, 0x31f3, 0x54c0, 0x0, 0x0);
        gbc.writeMem(0x14c6, { 0x1e, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x3b9c);
        EXPECT(gbc.pc(), 0x14c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 03AC
        gbc.setState(0xae8a, 0x6efd, 0x9e40, 0x531c, 0x5cf9, 0x8d5, 0x1, 0x0);
        gbc.writeMem(0xae8a, { 0x1e, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x6efd);
        EXPECT(gbc.pc(), 0xae8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae8a), 0x1e);
        EXPECT(gbc.readMem(0xae8b), 0x70);
        // 1E 03AD
        gbc.setState(0x302, 0x30d8, 0xc370, 0x9f13, 0x4dad, 0xcf4c, 0x1, 0x0);
        gbc.writeMem(0x302, { 0x1e, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x30d8);
        EXPECT(gbc.pc(), 0x304);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 03AE
        gbc.setState(0xc1ee, 0x57e, 0x4c30, 0x22fc, 0xc0a9, 0xd26b, 0x0, 0x0);
        gbc.writeMem(0xc1ee, { 0x1e, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x57e);
        EXPECT(gbc.pc(), 0xc1f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1ee), 0x1e);
        EXPECT(gbc.readMem(0xc1ef), 0xf8);
        // 1E 03AF
        gbc.setState(0x9081, 0x1bc7, 0xd4d0, 0x3bbb, 0xa69e, 0x3d69, 0x0, 0x0);
        gbc.writeMem(0x9081, { 0x1e, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x1bc7);
        EXPECT(gbc.pc(), 0x9083);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9081), 0x1e);
        EXPECT(gbc.readMem(0x9082), 0xbc);
        // 1E 03B0
        gbc.setState(0xecef, 0x66af, 0x9ea0, 0x5a8d, 0xf029, 0x3956, 0x0, 0x1);
        gbc.writeMem(0xecef, { 0x1e, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x66af);
        EXPECT(gbc.pc(), 0xecf1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecef), 0x1e);
        EXPECT(gbc.readMem(0xecf0), 0x93);
        // 1E 03B1
        gbc.setState(0x6a2a, 0x3063, 0xb9b0, 0xf5c5, 0x7c73, 0x3c9e, 0x1, 0x0);
        gbc.writeMem(0x6a2a, { 0x1e, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x3063);
        EXPECT(gbc.pc(), 0x6a2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 03B2
        gbc.setState(0xa233, 0x13e1, 0x54b0, 0x72c2, 0x4255, 0x971b, 0x1, 0x1);
        gbc.writeMem(0xa233, { 0x1e, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x13e1);
        EXPECT(gbc.pc(), 0xa235);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa233), 0x1e);
        EXPECT(gbc.readMem(0xa234), 0x41);
        // 1E 03B3
        gbc.setState(0x9d99, 0xd6a4, 0xc6f0, 0xde4a, 0xf94a, 0x6dc, 0x0, 0x0);
        gbc.writeMem(0x9d99, { 0x1e, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xd6a4);
        EXPECT(gbc.pc(), 0x9d9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d99), 0x1e);
        EXPECT(gbc.readMem(0x9d9a), 0x8c);
        // 1E 03B4
        gbc.setState(0xaf30, 0x36e, 0x49c0, 0xce35, 0xb7ea, 0xbd54, 0x0, 0x0);
        gbc.writeMem(0xaf30, { 0x1e, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x36e);
        EXPECT(gbc.pc(), 0xaf32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf30), 0x1e);
        EXPECT(gbc.readMem(0xaf31), 0x7a);
        // 1E 03B5
        gbc.setState(0xb275, 0x51f, 0x2160, 0x7063, 0xa6f2, 0x2d4, 0x1, 0x0);
        gbc.writeMem(0xb275, { 0x1e, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x51f);
        EXPECT(gbc.pc(), 0xb277);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb275), 0x1e);
        EXPECT(gbc.readMem(0xb276), 0xd3);
        // 1E 03B7
        gbc.setState(0x409c, 0xe15e, 0xc150, 0xa9af, 0xb374, 0x1e12, 0x0, 0x1);
        gbc.writeMem(0x409c, { 0x1e, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xe15e);
        EXPECT(gbc.pc(), 0x409e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 03B8
        gbc.setState(0x116a, 0x639f, 0xcdc0, 0xa49c, 0x68e6, 0x5282, 0x0, 0x0);
        gbc.writeMem(0x116a, { 0x1e, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x639f);
        EXPECT(gbc.pc(), 0x116c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 03B9
        gbc.setState(0x33d7, 0x818b, 0x2a80, 0xd7e, 0xe73a, 0xdb5f, 0x1, 0x1);
        gbc.writeMem(0x33d7, { 0x1e, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x818b);
        EXPECT(gbc.pc(), 0x33d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 03BA
        gbc.setState(0xd063, 0xbe4e, 0x5db0, 0xeed9, 0xad39, 0xab9f, 0x0, 0x0);
        gbc.writeMem(0xd063, { 0x1e, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xbe4e);
        EXPECT(gbc.pc(), 0xd065);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd063), 0x1e);
        EXPECT(gbc.readMem(0xd064), 0x4e);
        // 1E 03BB
        gbc.setState(0x505a, 0xfab4, 0xb6b0, 0x2ac1, 0x52a9, 0xcdbf, 0x0, 0x1);
        gbc.writeMem(0x505a, { 0x1e, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xfab4);
        EXPECT(gbc.pc(), 0x505c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 03BC
        gbc.setState(0x533d, 0x5d52, 0xd100, 0x740c, 0xebfc, 0x46ea, 0x1, 0x0);
        gbc.writeMem(0x533d, { 0x1e, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x5d52);
        EXPECT(gbc.pc(), 0x533f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 03BD
        gbc.setState(0xa618, 0x5250, 0x3f90, 0xb8a1, 0x1f01, 0x58fd, 0x0, 0x0);
        gbc.writeMem(0xa618, { 0x1e, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x5250);
        EXPECT(gbc.pc(), 0xa61a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa618), 0x1e);
        EXPECT(gbc.readMem(0xa619), 0x66);
        // 1E 03BE
        gbc.setState(0xbcff, 0x95e, 0x6f10, 0x83ed, 0x17a1, 0x58db, 0x0, 0x1);
        gbc.writeMem(0xbcff, { 0x1e, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x95e);
        EXPECT(gbc.pc(), 0xbd01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcff), 0x1e);
        EXPECT(gbc.readMem(0xbd00), 0x99);
        // 1E 03BF
        gbc.setState(0x48ea, 0xd92, 0xd3c0, 0xe4ac, 0x47c4, 0x331d, 0x1, 0x0);
        gbc.writeMem(0x48ea, { 0x1e, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xd92);
        EXPECT(gbc.pc(), 0x48ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 03C0
        gbc.setState(0x5a5e, 0xcff9, 0x36c0, 0xd9c0, 0x69c9, 0xed6e, 0x1, 0x1);
        gbc.writeMem(0x5a5e, { 0x1e, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xcff9);
        EXPECT(gbc.pc(), 0x5a60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 03C1
        gbc.setState(0xc7ef, 0xd398, 0x8a80, 0xc031, 0xb2c2, 0xab57, 0x0, 0x1);
        gbc.writeMem(0xc7ef, { 0x1e, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xd398);
        EXPECT(gbc.pc(), 0xc7f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7ef), 0x1e);
        EXPECT(gbc.readMem(0xc7f0), 0x55);
        // 1E 03C2
        gbc.setState(0x8929, 0x4efb, 0xdaa0, 0x5339, 0x8576, 0x5811, 0x0, 0x1);
        gbc.writeMem(0x8929, { 0x1e, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x4efb);
        EXPECT(gbc.pc(), 0x892b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8929), 0x1e);
        EXPECT(gbc.readMem(0x892a), 0x42);
        // 1E 03C3
        gbc.setState(0x6338, 0x63e6, 0xe480, 0x7b0f, 0x8fc0, 0x8162, 0x1, 0x1);
        gbc.writeMem(0x6338, { 0x1e, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x63e6);
        EXPECT(gbc.pc(), 0x633a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 03C4
        gbc.setState(0xbcc3, 0x94e1, 0xb1a0, 0x1edd, 0x8163, 0x2cce, 0x0, 0x1);
        gbc.writeMem(0xbcc3, { 0x1e, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x94e1);
        EXPECT(gbc.pc(), 0xbcc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcc3), 0x1e);
        EXPECT(gbc.readMem(0xbcc4), 0x6a);
        // 1E 03C5
        gbc.setState(0x56d9, 0xa51f, 0x8940, 0xc234, 0x4574, 0xb179, 0x0, 0x1);
        gbc.writeMem(0x56d9, { 0x1e, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xa51f);
        EXPECT(gbc.pc(), 0x56db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 03C6
        gbc.setState(0x4352, 0xc96d, 0xbda0, 0x766e, 0xc80f, 0x2c7a, 0x0, 0x0);
        gbc.writeMem(0x4352, { 0x1e, 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xc96d);
        EXPECT(gbc.pc(), 0x4354);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 03C7
        gbc.setState(0x7a19, 0x95c3, 0xff50, 0x2207, 0xb7ea, 0xd17e, 0x1, 0x1);
        gbc.writeMem(0x7a19, { 0x1e, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x95c3);
        EXPECT(gbc.pc(), 0x7a1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 03C8
        gbc.setState(0xe398, 0x1da5, 0xd720, 0x99da, 0x523f, 0xc14e, 0x1, 0x0);
        gbc.writeMem(0xe398, { 0x1e, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x1da5);
        EXPECT(gbc.pc(), 0xe39a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe398), 0x1e);
        EXPECT(gbc.readMem(0xe399), 0xa9);
        // 1E 03C9
        gbc.setState(0x9f86, 0x3bf9, 0x3800, 0x5f97, 0x2444, 0xeb81, 0x0, 0x0);
        gbc.writeMem(0x9f86, { 0x1e, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x3bf9);
        EXPECT(gbc.pc(), 0x9f88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f86), 0x1e);
        EXPECT(gbc.readMem(0x9f87), 0x96);
        // 1E 03CA
        gbc.setState(0xd850, 0x3d70, 0x3d80, 0x96e6, 0x9277, 0x3041, 0x0, 0x1);
        gbc.writeMem(0xd850, { 0x1e, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x3d70);
        EXPECT(gbc.pc(), 0xd852);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd850), 0x1e);
        EXPECT(gbc.readMem(0xd851), 0xe0);
        // 1E 03CB
        gbc.setState(0xd82e, 0x2701, 0xb290, 0x3ab, 0xaa06, 0xe348, 0x0, 0x1);
        gbc.writeMem(0xd82e, { 0x1e, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x2701);
        EXPECT(gbc.pc(), 0xd830);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd82e), 0x1e);
        EXPECT(gbc.readMem(0xd82f), 0xe8);
        // 1E 03CC
        gbc.setState(0x3909, 0xa92a, 0xf4e0, 0xcb33, 0x6520, 0x94c3, 0x0, 0x0);
        gbc.writeMem(0x3909, { 0x1e, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xa92a);
        EXPECT(gbc.pc(), 0x390b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 03CD
        gbc.setState(0xa4a8, 0x2a81, 0x6dc0, 0x41b5, 0x49a5, 0x677e, 0x1, 0x1);
        gbc.writeMem(0xa4a8, { 0x1e, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x2a81);
        EXPECT(gbc.pc(), 0xa4aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4a8), 0x1e);
        EXPECT(gbc.readMem(0xa4a9), 0x86);
        // 1E 03CE
        gbc.setState(0x47af, 0x25c, 0xccd0, 0x960a, 0x5abc, 0xe1c, 0x1, 0x0);
        gbc.writeMem(0x47af, { 0x1e, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x25c);
        EXPECT(gbc.pc(), 0x47b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 03CF
        gbc.setState(0x8074, 0x1b72, 0xb890, 0xe1ed, 0x9330, 0x59f3, 0x1, 0x1);
        gbc.writeMem(0x8074, { 0x1e, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x1b72);
        EXPECT(gbc.pc(), 0x8076);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8074), 0x1e);
        EXPECT(gbc.readMem(0x8075), 0x49);
        // 1E 03D0
        gbc.setState(0x79af, 0x95e1, 0x4060, 0x21f3, 0x7148, 0x50ce, 0x0, 0x0);
        gbc.writeMem(0x79af, { 0x1e, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x95e1);
        EXPECT(gbc.pc(), 0x79b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 03D1
        gbc.setState(0xc4d0, 0x331e, 0xaac0, 0xa811, 0x5bf6, 0x902e, 0x0, 0x0);
        gbc.writeMem(0xc4d0, { 0x1e, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x331e);
        EXPECT(gbc.pc(), 0xc4d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4d0), 0x1e);
        EXPECT(gbc.readMem(0xc4d1), 0x33);
        // 1E 03D2
        gbc.setState(0xbf23, 0xeaf6, 0x7790, 0x2fcc, 0x8a9c, 0x6cc, 0x1, 0x1);
        gbc.writeMem(0xbf23, { 0x1e, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xeaf6);
        EXPECT(gbc.pc(), 0xbf25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf23), 0x1e);
        EXPECT(gbc.readMem(0xbf24), 0xbe);
        // 1E 03D3
        gbc.setState(0x2d7f, 0x49ce, 0x4f0, 0xc16e, 0xbd3d, 0x9de1, 0x0, 0x0);
        gbc.writeMem(0x2d7f, { 0x1e, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x49ce);
        EXPECT(gbc.pc(), 0x2d81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 03D4
        gbc.setState(0xcc8e, 0x7671, 0x79a0, 0x2481, 0x4257, 0x8744, 0x1, 0x0);
        gbc.writeMem(0xcc8e, { 0x1e, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x7671);
        EXPECT(gbc.pc(), 0xcc90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc8e), 0x1e);
        EXPECT(gbc.readMem(0xcc8f), 0xd9);
        // 1E 03D5
        gbc.setState(0x2d0e, 0xad06, 0xa930, 0xecee, 0x647b, 0x207, 0x1, 0x1);
        gbc.writeMem(0x2d0e, { 0x1e, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xad06);
        EXPECT(gbc.pc(), 0x2d10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 03D6
        gbc.setState(0x1555, 0x3f4b, 0x51b0, 0xc083, 0x1b3d, 0xca5d, 0x0, 0x1);
        gbc.writeMem(0x1555, { 0x1e, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x3f4b);
        EXPECT(gbc.pc(), 0x1557);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 1E 03D7
        gbc.setState(0x8a74, 0x2663, 0xf2b0, 0xd4fc, 0x53c7, 0x4e00, 0x1, 0x1);
        gbc.writeMem(0x8a74, { 0x1e, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x2663);
        EXPECT(gbc.pc(), 0x8a76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a74), 0x1e);
        EXPECT(gbc.readMem(0x8a75), 0x98);
        // 1E 03D8
        gbc.setState(0xb5c4, 0xc507, 0x6170, 0xefc0, 0xbebd, 0x8f7a, 0x1, 0x0);
        gbc.writeMem(0xb5c4, { 0x1e, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xc507);
        EXPECT(gbc.pc(), 0xb5c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5c4), 0x1e);
        EXPECT(gbc.readMem(0xb5c5), 0x92);
        // 1E 03D9
        gbc.setState(0xb7a7, 0xa19f, 0xe450, 0xf613, 0xf114, 0xeb86, 0x1, 0x1);
        gbc.writeMem(0xb7a7, { 0x1e, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xa19f);
        EXPECT(gbc.pc(), 0xb7a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7a7), 0x1e);
        EXPECT(gbc.readMem(0xb7a8), 0xee);
        // 1E 03DA
        gbc.setState(0x5511, 0xa9ef, 0xd290, 0x1267, 0xe4bc, 0x185b, 0x0, 0x1);
        gbc.writeMem(0x5511, { 0x1e, 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xa9ef);
        EXPECT(gbc.pc(), 0x5513);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 03DB
        gbc.setState(0xd7f9, 0x7d3a, 0xf10, 0xd206, 0x388c, 0x46cc, 0x0, 0x1);
        gbc.writeMem(0xd7f9, { 0x1e, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x7d3a);
        EXPECT(gbc.pc(), 0xd7fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7f9), 0x1e);
        EXPECT(gbc.readMem(0xd7fa), 0xcf);
        // 1E 03DC
        gbc.setState(0x6b40, 0xb845, 0x4680, 0x7627, 0x451d, 0xd8f8, 0x1, 0x0);
        gbc.writeMem(0x6b40, { 0x1e, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xb845);
        EXPECT(gbc.pc(), 0x6b42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 03DD
        gbc.setState(0x9718, 0x619, 0x1c20, 0x83b7, 0xdd0c, 0x77e6, 0x0, 0x0);
        gbc.writeMem(0x9718, { 0x1e, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x619);
        EXPECT(gbc.pc(), 0x971a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9718), 0x1e);
        EXPECT(gbc.readMem(0x9719), 0x85);
        // 1E 03DE
        gbc.setState(0xc5e6, 0x4720, 0x9ce0, 0x6f61, 0x6713, 0x46ee, 0x1, 0x1);
        gbc.writeMem(0xc5e6, { 0x1e, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x4720);
        EXPECT(gbc.pc(), 0xc5e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5e6), 0x1e);
        EXPECT(gbc.readMem(0xc5e7), 0xf9);
        // 1E 03DF
        gbc.setState(0x701b, 0xcebd, 0xa580, 0x30ce, 0x150c, 0x631d, 0x0, 0x1);
        gbc.writeMem(0x701b, { 0x1e, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xcebd);
        EXPECT(gbc.pc(), 0x701d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 03E0
        gbc.setState(0xc08e, 0x3f0, 0xa420, 0xc8a3, 0x171b, 0xcc73, 0x0, 0x1);
        gbc.writeMem(0xc08e, { 0x1e, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x3f0);
        EXPECT(gbc.pc(), 0xc090);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc08e), 0x1e);
        EXPECT(gbc.readMem(0xc08f), 0x99);
        // 1E 03E1
        gbc.setState(0x79d, 0x53b1, 0xa120, 0xfcc4, 0xcc55, 0xe7de, 0x1, 0x1);
        gbc.writeMem(0x79d, { 0x1e, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x53b1);
        EXPECT(gbc.pc(), 0x79f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 03E2
        gbc.setState(0x34d9, 0x1eb7, 0xdc10, 0x27ca, 0xa2e8, 0xdf3, 0x0, 0x0);
        gbc.writeMem(0x34d9, { 0x1e, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x1eb7);
        EXPECT(gbc.pc(), 0x34db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 1E 03E3
        gbc.setState(0x6b65, 0x4663, 0xf820, 0x28a0, 0xa416, 0x63e7, 0x0, 0x0);
        gbc.writeMem(0x6b65, { 0x1e, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x4663);
        EXPECT(gbc.pc(), 0x6b67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 1E 03E4
        gbc.setState(0xa7a6, 0xaa12, 0x2e20, 0xb9b0, 0xbb03, 0xa91d, 0x1, 0x1);
        gbc.writeMem(0xa7a6, { 0x1e, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xaa12);
        EXPECT(gbc.pc(), 0xa7a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7a6), 0x1e);
        EXPECT(gbc.readMem(0xa7a7), 0x4c);
        // 1E 03E5
        gbc.setState(0xa0e2, 0x5dde, 0xa270, 0x36bd, 0x9b65, 0xa9cb, 0x0, 0x1);
        gbc.writeMem(0xa0e2, { 0x1e, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x5dde);
        EXPECT(gbc.pc(), 0xa0e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0e2), 0x1e);
        EXPECT(gbc.readMem(0xa0e3), 0x36);
        // 1E 03E6
        gbc.setState(0x6fc0, 0x6ef, 0xadc0, 0x8955, 0x1eb, 0xeb0, 0x0, 0x1);
        gbc.writeMem(0x6fc0, { 0x1e, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x6ef);
        EXPECT(gbc.pc(), 0x6fc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 1E 03E7
        gbc.setState(0x4484, 0xcd49, 0x5750, 0xdcf5, 0x5e9e, 0xdade, 0x1, 0x0);
        gbc.writeMem(0x4484, { 0x1e, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xcd49);
        EXPECT(gbc.pc(), 0x4486);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
    }
}
#endif
