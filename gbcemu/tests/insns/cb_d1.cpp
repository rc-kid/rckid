#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_d1)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_d1) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB D1 0000
        gbc.setState(0x15db, 0x7a84, 0x1a60, 0xd7cb, 0x74ef, 0xa779, 0x0, 0x0);
        gbc.writeMem(0x15db, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x7a84);
        EXPECT(gbc.pc(), 0x15dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0001
        gbc.setState(0xe3fc, 0xf22f, 0x98f0, 0x9da, 0x8159, 0x1a84, 0x0, 0x1);
        gbc.writeMem(0xe3fc, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xf22f);
        EXPECT(gbc.pc(), 0xe3fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3fc), 0xcb);
        EXPECT(gbc.readMem(0xe3fd), 0xd1);
        // CB D1 0002
        gbc.setState(0x8bd5, 0xf668, 0x2de0, 0xc8d5, 0x784f, 0x787c, 0x0, 0x0);
        gbc.writeMem(0x8bd5, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xf668);
        EXPECT(gbc.pc(), 0x8bd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bd5), 0xcb);
        EXPECT(gbc.readMem(0x8bd6), 0xd1);
        // CB D1 0003
        gbc.setState(0x40ee, 0xfa98, 0xf70, 0xa206, 0x759, 0x54d4, 0x0, 0x0);
        gbc.writeMem(0x40ee, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xfa98);
        EXPECT(gbc.pc(), 0x40f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0004
        gbc.setState(0xb6df, 0x9e9a, 0x8b0, 0x54f3, 0x7e8c, 0x5069, 0x1, 0x0);
        gbc.writeMem(0xb6df, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x9e9a);
        EXPECT(gbc.pc(), 0xb6e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6df), 0xcb);
        EXPECT(gbc.readMem(0xb6e0), 0xd1);
        // CB D1 0005
        gbc.setState(0x5038, 0x66e1, 0xf0a0, 0x2de3, 0x48af, 0x9bfd, 0x1, 0x1);
        gbc.writeMem(0x5038, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x66e1);
        EXPECT(gbc.pc(), 0x503a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0006
        gbc.setState(0x3611, 0x6d37, 0xc0c0, 0xfd01, 0x84eb, 0xac35, 0x0, 0x1);
        gbc.writeMem(0x3611, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x6d37);
        EXPECT(gbc.pc(), 0x3613);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0007
        gbc.setState(0xea36, 0x3d6f, 0x2910, 0x4043, 0x3719, 0x3fc8, 0x0, 0x0);
        gbc.writeMem(0xea36, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x3d6f);
        EXPECT(gbc.pc(), 0xea38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea36), 0xcb);
        EXPECT(gbc.readMem(0xea37), 0xd1);
        // CB D1 0008
        gbc.setState(0x7f6d, 0x8bd5, 0xc5e0, 0x9c6b, 0x30bc, 0xbfb4, 0x1, 0x0);
        gbc.writeMem(0x7f6d, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x8bd5);
        EXPECT(gbc.pc(), 0x7f6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0009
        gbc.setState(0x3567, 0xb71c, 0x480, 0x2be3, 0x2286, 0x2915, 0x1, 0x1);
        gbc.writeMem(0x3567, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xb71c);
        EXPECT(gbc.pc(), 0x3569);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 000A
        gbc.setState(0xdc42, 0x8367, 0x9a50, 0xf0fa, 0x815f, 0x3ac3, 0x0, 0x0);
        gbc.writeMem(0xdc42, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x8367);
        EXPECT(gbc.pc(), 0xdc44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc42), 0xcb);
        EXPECT(gbc.readMem(0xdc43), 0xd1);
        // CB D1 000B
        gbc.setState(0x83bd, 0xd40f, 0xe320, 0x3dcf, 0x8a53, 0x14f2, 0x1, 0x0);
        gbc.writeMem(0x83bd, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xd40f);
        EXPECT(gbc.pc(), 0x83bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83bd), 0xcb);
        EXPECT(gbc.readMem(0x83be), 0xd1);
        // CB D1 000C
        gbc.setState(0x530b, 0xecc8, 0x8bf0, 0x74c9, 0xe277, 0x6d27, 0x1, 0x1);
        gbc.writeMem(0x530b, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xecc8);
        EXPECT(gbc.pc(), 0x530d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 000D
        gbc.setState(0x3dd7, 0x501d, 0xcd60, 0xf7fa, 0xdb67, 0x8d4c, 0x0, 0x0);
        gbc.writeMem(0x3dd7, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x501d);
        EXPECT(gbc.pc(), 0x3dd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 000E
        gbc.setState(0x7d59, 0x16a1, 0x2c60, 0xcf19, 0x9951, 0xd5c5, 0x0, 0x0);
        gbc.writeMem(0x7d59, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x16a1);
        EXPECT(gbc.pc(), 0x7d5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 000F
        gbc.setState(0xdb7b, 0x822, 0x6710, 0x600, 0x97a0, 0x166d, 0x1, 0x1);
        gbc.writeMem(0xdb7b, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x822);
        EXPECT(gbc.pc(), 0xdb7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb7b), 0xcb);
        EXPECT(gbc.readMem(0xdb7c), 0xd1);
        // CB D1 0010
        gbc.setState(0x8ec1, 0xfdb1, 0xd510, 0xb939, 0x95b0, 0xb1d, 0x1, 0x1);
        gbc.writeMem(0x8ec1, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xfdb1);
        EXPECT(gbc.pc(), 0x8ec3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ec1), 0xcb);
        EXPECT(gbc.readMem(0x8ec2), 0xd1);
        // CB D1 0011
        gbc.setState(0x942c, 0xc0a3, 0xd8b0, 0x31b8, 0x7b69, 0x7362, 0x0, 0x1);
        gbc.writeMem(0x942c, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xc0a3);
        EXPECT(gbc.pc(), 0x942e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x942c), 0xcb);
        EXPECT(gbc.readMem(0x942d), 0xd1);
        // CB D1 0012
        gbc.setState(0x249f, 0xa6b3, 0x2730, 0x96b, 0xb95f, 0x1f0a, 0x0, 0x0);
        gbc.writeMem(0x249f, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xa6b3);
        EXPECT(gbc.pc(), 0x24a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0013
        gbc.setState(0x5934, 0x4e, 0x88e0, 0x7c5b, 0x7da2, 0x3ab8, 0x1, 0x1);
        gbc.writeMem(0x5934, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x4e);
        EXPECT(gbc.pc(), 0x5936);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0014
        gbc.setState(0xe56f, 0x6044, 0x6280, 0x55e6, 0x9d71, 0x628f, 0x0, 0x0);
        gbc.writeMem(0xe56f, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x6044);
        EXPECT(gbc.pc(), 0xe571);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe56f), 0xcb);
        EXPECT(gbc.readMem(0xe570), 0xd1);
        // CB D1 0015
        gbc.setState(0x583, 0x9080, 0xbe60, 0xbef0, 0xc7bd, 0x52f8, 0x1, 0x1);
        gbc.writeMem(0x583, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x9080);
        EXPECT(gbc.pc(), 0x585);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0016
        gbc.setState(0x371, 0xa118, 0x1050, 0x4a7e, 0x4182, 0xffcd, 0x0, 0x0);
        gbc.writeMem(0x371, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xa118);
        EXPECT(gbc.pc(), 0x373);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0017
        gbc.setState(0xd4f4, 0x6ead, 0x1af0, 0xd229, 0xd965, 0x5045, 0x1, 0x0);
        gbc.writeMem(0xd4f4, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x6ead);
        EXPECT(gbc.pc(), 0xd4f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4f4), 0xcb);
        EXPECT(gbc.readMem(0xd4f5), 0xd1);
        // CB D1 0018
        gbc.setState(0x5fe1, 0x337a, 0xdff0, 0x9aa7, 0x9de6, 0x72c1, 0x0, 0x0);
        gbc.writeMem(0x5fe1, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x337a);
        EXPECT(gbc.pc(), 0x5fe3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0019
        gbc.setState(0xa0f9, 0x932c, 0x4430, 0x3c41, 0x619d, 0x5bc8, 0x0, 0x1);
        gbc.writeMem(0xa0f9, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x932c);
        EXPECT(gbc.pc(), 0xa0fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0f9), 0xcb);
        EXPECT(gbc.readMem(0xa0fa), 0xd1);
        // CB D1 001A
        gbc.setState(0x89b7, 0x40a9, 0xd7d0, 0x54fe, 0x432e, 0x1983, 0x1, 0x0);
        gbc.writeMem(0x89b7, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x40a9);
        EXPECT(gbc.pc(), 0x89b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89b7), 0xcb);
        EXPECT(gbc.readMem(0x89b8), 0xd1);
        // CB D1 001B
        gbc.setState(0xc7dc, 0xb1c6, 0x4d80, 0xce73, 0x3a8d, 0x2fe7, 0x1, 0x0);
        gbc.writeMem(0xc7dc, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xb1c6);
        EXPECT(gbc.pc(), 0xc7de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7dc), 0xcb);
        EXPECT(gbc.readMem(0xc7dd), 0xd1);
        // CB D1 001C
        gbc.setState(0xbd0e, 0xda66, 0xb400, 0xc752, 0x9f, 0x6a08, 0x1, 0x0);
        gbc.writeMem(0xbd0e, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xda66);
        EXPECT(gbc.pc(), 0xbd10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd0e), 0xcb);
        EXPECT(gbc.readMem(0xbd0f), 0xd1);
        // CB D1 001D
        gbc.setState(0x32d6, 0x2944, 0x2870, 0x3d9a, 0x74f, 0x77f6, 0x1, 0x0);
        gbc.writeMem(0x32d6, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x2944);
        EXPECT(gbc.pc(), 0x32d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 001E
        gbc.setState(0x328b, 0xb2b3, 0x4670, 0xc154, 0x2ccb, 0xea08, 0x0, 0x0);
        gbc.writeMem(0x328b, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xb2b3);
        EXPECT(gbc.pc(), 0x328d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 001F
        gbc.setState(0x6ad6, 0xcb16, 0xb6c0, 0x1561, 0x79e6, 0x99d3, 0x1, 0x1);
        gbc.writeMem(0x6ad6, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xcb16);
        EXPECT(gbc.pc(), 0x6ad8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0020
        gbc.setState(0xdb55, 0xcafe, 0x19f0, 0x7bf3, 0x565d, 0xf39e, 0x1, 0x0);
        gbc.writeMem(0xdb55, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xcafe);
        EXPECT(gbc.pc(), 0xdb57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb55), 0xcb);
        EXPECT(gbc.readMem(0xdb56), 0xd1);
        // CB D1 0021
        gbc.setState(0xbb4b, 0x3958, 0xae20, 0xcf38, 0xafec, 0x7d26, 0x0, 0x0);
        gbc.writeMem(0xbb4b, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x3958);
        EXPECT(gbc.pc(), 0xbb4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb4b), 0xcb);
        EXPECT(gbc.readMem(0xbb4c), 0xd1);
        // CB D1 0022
        gbc.setState(0x162d, 0xaebc, 0x2d0, 0xe5f9, 0x53d4, 0x6058, 0x1, 0x0);
        gbc.writeMem(0x162d, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xaebc);
        EXPECT(gbc.pc(), 0x162f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0023
        gbc.setState(0xa793, 0xa505, 0x2730, 0x18d9, 0x9883, 0x7feb, 0x0, 0x1);
        gbc.writeMem(0xa793, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xa505);
        EXPECT(gbc.pc(), 0xa795);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa793), 0xcb);
        EXPECT(gbc.readMem(0xa794), 0xd1);
        // CB D1 0024
        gbc.setState(0x5d32, 0x2cbe, 0x63c0, 0x1278, 0x2a71, 0xb55f, 0x1, 0x0);
        gbc.writeMem(0x5d32, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x2cbe);
        EXPECT(gbc.pc(), 0x5d34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0025
        gbc.setState(0x95b1, 0x5d1, 0x6d10, 0xb1a8, 0x8196, 0xa3cb, 0x1, 0x1);
        gbc.writeMem(0x95b1, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x5d1);
        EXPECT(gbc.pc(), 0x95b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95b1), 0xcb);
        EXPECT(gbc.readMem(0x95b2), 0xd1);
        // CB D1 0026
        gbc.setState(0x34f7, 0xae2a, 0xacd0, 0x7cfa, 0xf192, 0x9251, 0x1, 0x0);
        gbc.writeMem(0x34f7, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xae2a);
        EXPECT(gbc.pc(), 0x34f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0027
        gbc.setState(0x7bf9, 0xcb63, 0x4d90, 0x3dba, 0x1b22, 0xb821, 0x1, 0x1);
        gbc.writeMem(0x7bf9, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xcb63);
        EXPECT(gbc.pc(), 0x7bfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0028
        gbc.setState(0x75c0, 0x4268, 0x8720, 0x2458, 0x5a59, 0xbba7, 0x0, 0x1);
        gbc.writeMem(0x75c0, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x4268);
        EXPECT(gbc.pc(), 0x75c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0029
        gbc.setState(0x7cb7, 0x332, 0xc690, 0xf0e5, 0x84b8, 0x4b5c, 0x1, 0x0);
        gbc.writeMem(0x7cb7, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x332);
        EXPECT(gbc.pc(), 0x7cb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 002A
        gbc.setState(0xec1d, 0x7301, 0x27c0, 0xbd79, 0xdfa8, 0x1880, 0x1, 0x1);
        gbc.writeMem(0xec1d, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x7301);
        EXPECT(gbc.pc(), 0xec1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec1d), 0xcb);
        EXPECT(gbc.readMem(0xec1e), 0xd1);
        // CB D1 002B
        gbc.setState(0x979b, 0x4011, 0x1520, 0xa81b, 0x421f, 0x9ca7, 0x1, 0x1);
        gbc.writeMem(0x979b, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x4011);
        EXPECT(gbc.pc(), 0x979d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x979b), 0xcb);
        EXPECT(gbc.readMem(0x979c), 0xd1);
        // CB D1 002C
        gbc.setState(0x65a7, 0xf55b, 0x7180, 0xbff4, 0xdf70, 0x242b, 0x0, 0x1);
        gbc.writeMem(0x65a7, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xf55b);
        EXPECT(gbc.pc(), 0x65a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 002D
        gbc.setState(0xc0ee, 0x3495, 0xba60, 0x9b3a, 0xb63f, 0x35d4, 0x0, 0x1);
        gbc.writeMem(0xc0ee, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x3495);
        EXPECT(gbc.pc(), 0xc0f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0ee), 0xcb);
        EXPECT(gbc.readMem(0xc0ef), 0xd1);
        // CB D1 002E
        gbc.setState(0x96ac, 0x1045, 0x8560, 0xdd6, 0xcbaf, 0xce6a, 0x1, 0x0);
        gbc.writeMem(0x96ac, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x1045);
        EXPECT(gbc.pc(), 0x96ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96ac), 0xcb);
        EXPECT(gbc.readMem(0x96ad), 0xd1);
        // CB D1 002F
        gbc.setState(0xddbb, 0xf025, 0xdc60, 0x14d5, 0x76cc, 0xb420, 0x1, 0x0);
        gbc.writeMem(0xddbb, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xf025);
        EXPECT(gbc.pc(), 0xddbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddbb), 0xcb);
        EXPECT(gbc.readMem(0xddbc), 0xd1);
        // CB D1 0030
        gbc.setState(0xae55, 0xf7b4, 0x2320, 0xce04, 0x94cb, 0xa9c7, 0x1, 0x0);
        gbc.writeMem(0xae55, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xf7b4);
        EXPECT(gbc.pc(), 0xae57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae55), 0xcb);
        EXPECT(gbc.readMem(0xae56), 0xd1);
        // CB D1 0031
        gbc.setState(0x3ccc, 0xb714, 0xd0b0, 0x7d2a, 0x8261, 0xfff, 0x0, 0x1);
        gbc.writeMem(0x3ccc, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xb714);
        EXPECT(gbc.pc(), 0x3cce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0032
        gbc.setState(0x10bc, 0x7396, 0x45e0, 0x1b75, 0xd510, 0x349a, 0x0, 0x1);
        gbc.writeMem(0x10bc, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x7396);
        EXPECT(gbc.pc(), 0x10be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0033
        gbc.setState(0xab4a, 0x88b2, 0x2050, 0x91fc, 0x86a0, 0xcbf2, 0x0, 0x1);
        gbc.writeMem(0xab4a, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x88b2);
        EXPECT(gbc.pc(), 0xab4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab4a), 0xcb);
        EXPECT(gbc.readMem(0xab4b), 0xd1);
        // CB D1 0034
        gbc.setState(0xac5b, 0x2872, 0xd750, 0x22c5, 0xf1a5, 0x44fd, 0x1, 0x0);
        gbc.writeMem(0xac5b, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x2872);
        EXPECT(gbc.pc(), 0xac5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac5b), 0xcb);
        EXPECT(gbc.readMem(0xac5c), 0xd1);
        // CB D1 0035
        gbc.setState(0x2863, 0x618f, 0x77b0, 0x752d, 0x6f7c, 0x90ec, 0x1, 0x0);
        gbc.writeMem(0x2863, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x618f);
        EXPECT(gbc.pc(), 0x2865);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0036
        gbc.setState(0xa5ca, 0x8513, 0x6860, 0x3802, 0xc38c, 0x72bd, 0x1, 0x1);
        gbc.writeMem(0xa5ca, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x8513);
        EXPECT(gbc.pc(), 0xa5cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5ca), 0xcb);
        EXPECT(gbc.readMem(0xa5cb), 0xd1);
        // CB D1 0037
        gbc.setState(0x84c9, 0x1422, 0xde20, 0x1d73, 0xb7f5, 0xdbf0, 0x0, 0x0);
        gbc.writeMem(0x84c9, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x1422);
        EXPECT(gbc.pc(), 0x84cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84c9), 0xcb);
        EXPECT(gbc.readMem(0x84ca), 0xd1);
        // CB D1 0038
        gbc.setState(0x10d9, 0xa8f0, 0xfbd0, 0x74c7, 0x5222, 0xc2db, 0x0, 0x1);
        gbc.writeMem(0x10d9, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xa8f0);
        EXPECT(gbc.pc(), 0x10db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0039
        gbc.setState(0xe6f7, 0xa072, 0x5210, 0xba6d, 0x7065, 0x7a73, 0x1, 0x1);
        gbc.writeMem(0xe6f7, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xa072);
        EXPECT(gbc.pc(), 0xe6f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6f7), 0xcb);
        EXPECT(gbc.readMem(0xe6f8), 0xd1);
        // CB D1 003B
        gbc.setState(0xcd65, 0x1d2f, 0x2d50, 0x6b88, 0x735f, 0x4f78, 0x1, 0x1);
        gbc.writeMem(0xcd65, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x1d2f);
        EXPECT(gbc.pc(), 0xcd67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd65), 0xcb);
        EXPECT(gbc.readMem(0xcd66), 0xd1);
        // CB D1 003C
        gbc.setState(0x13e0, 0x4448, 0xc4c0, 0xd44d, 0x4b8, 0x7aa3, 0x1, 0x0);
        gbc.writeMem(0x13e0, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x4448);
        EXPECT(gbc.pc(), 0x13e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 003D
        gbc.setState(0x3f52, 0xbbad, 0xcb90, 0x111f, 0x9387, 0xa3d3, 0x0, 0x1);
        gbc.writeMem(0x3f52, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xbbad);
        EXPECT(gbc.pc(), 0x3f54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 003E
        gbc.setState(0x438d, 0xbbf0, 0xa910, 0x64aa, 0xe94, 0x8b8d, 0x1, 0x0);
        gbc.writeMem(0x438d, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xbbf0);
        EXPECT(gbc.pc(), 0x438f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 003F
        gbc.setState(0x28be, 0x5000, 0xf300, 0x520e, 0x970e, 0xf87c, 0x0, 0x0);
        gbc.writeMem(0x28be, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x5000);
        EXPECT(gbc.pc(), 0x28c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0040
        gbc.setState(0x92a1, 0x6f8f, 0xaca0, 0xa8a7, 0xd2c, 0x3ac, 0x0, 0x0);
        gbc.writeMem(0x92a1, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x6f8f);
        EXPECT(gbc.pc(), 0x92a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92a1), 0xcb);
        EXPECT(gbc.readMem(0x92a2), 0xd1);
        // CB D1 0041
        gbc.setState(0xbee3, 0xaae5, 0xaf0, 0xe773, 0x285b, 0xd420, 0x1, 0x1);
        gbc.writeMem(0xbee3, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xaae5);
        EXPECT(gbc.pc(), 0xbee5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbee3), 0xcb);
        EXPECT(gbc.readMem(0xbee4), 0xd1);
        // CB D1 0042
        gbc.setState(0xcc5f, 0xe4d8, 0xf40, 0x6b62, 0x4498, 0xa260, 0x1, 0x1);
        gbc.writeMem(0xcc5f, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xe4d8);
        EXPECT(gbc.pc(), 0xcc61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc5f), 0xcb);
        EXPECT(gbc.readMem(0xcc60), 0xd1);
        // CB D1 0043
        gbc.setState(0xe8fd, 0x770b, 0x9490, 0xc769, 0x8c6c, 0xa935, 0x1, 0x0);
        gbc.writeMem(0xe8fd, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x770b);
        EXPECT(gbc.pc(), 0xe8ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8fd), 0xcb);
        EXPECT(gbc.readMem(0xe8fe), 0xd1);
        // CB D1 0044
        gbc.setState(0x8df5, 0x82b9, 0xd230, 0xc25c, 0xcd49, 0xe46c, 0x1, 0x0);
        gbc.writeMem(0x8df5, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x82b9);
        EXPECT(gbc.pc(), 0x8df7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8df5), 0xcb);
        EXPECT(gbc.readMem(0x8df6), 0xd1);
        // CB D1 0045
        gbc.setState(0xebc9, 0xbf86, 0x8cf0, 0xe37e, 0xbd3f, 0xb182, 0x1, 0x1);
        gbc.writeMem(0xebc9, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xbf86);
        EXPECT(gbc.pc(), 0xebcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebc9), 0xcb);
        EXPECT(gbc.readMem(0xebca), 0xd1);
        // CB D1 0046
        gbc.setState(0x309d, 0x3b7b, 0x9730, 0xe2e0, 0x791, 0x854e, 0x0, 0x1);
        gbc.writeMem(0x309d, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x3b7b);
        EXPECT(gbc.pc(), 0x309f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0047
        gbc.setState(0x5026, 0xd36c, 0x77e0, 0x9b7b, 0xb8f9, 0x97bd, 0x1, 0x0);
        gbc.writeMem(0x5026, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xd36c);
        EXPECT(gbc.pc(), 0x5028);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0048
        gbc.setState(0xea3c, 0xafa0, 0xd770, 0x8be1, 0x6717, 0x296, 0x1, 0x0);
        gbc.writeMem(0xea3c, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xafa0);
        EXPECT(gbc.pc(), 0xea3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea3c), 0xcb);
        EXPECT(gbc.readMem(0xea3d), 0xd1);
        // CB D1 0049
        gbc.setState(0x145a, 0xaefc, 0x4a10, 0x2edf, 0xce95, 0xee0a, 0x1, 0x0);
        gbc.writeMem(0x145a, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xaefc);
        EXPECT(gbc.pc(), 0x145c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 004B
        gbc.setState(0x32c0, 0x3ba6, 0xb380, 0x6484, 0xcecd, 0x334, 0x1, 0x0);
        gbc.writeMem(0x32c0, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x3ba6);
        EXPECT(gbc.pc(), 0x32c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 004D
        gbc.setState(0x1e65, 0xd9b, 0xc410, 0x93a4, 0xe293, 0x8030, 0x1, 0x0);
        gbc.writeMem(0x1e65, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xd9b);
        EXPECT(gbc.pc(), 0x1e67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 004E
        gbc.setState(0xd59, 0x3c43, 0x190, 0x3dd1, 0x1991, 0x780a, 0x0, 0x0);
        gbc.writeMem(0xd59, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x3c43);
        EXPECT(gbc.pc(), 0xd5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 004F
        gbc.setState(0x5815, 0xee48, 0x7cd0, 0xa8e7, 0x3e68, 0xb6fa, 0x1, 0x1);
        gbc.writeMem(0x5815, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xee48);
        EXPECT(gbc.pc(), 0x5817);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0050
        gbc.setState(0x7008, 0x8fda, 0xd710, 0x80f0, 0x176e, 0x91f5, 0x1, 0x0);
        gbc.writeMem(0x7008, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x8fda);
        EXPECT(gbc.pc(), 0x700a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0052
        gbc.setState(0xced4, 0x5c96, 0xe7e0, 0xd2fa, 0xc3be, 0xd5b3, 0x1, 0x0);
        gbc.writeMem(0xced4, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x5c96);
        EXPECT(gbc.pc(), 0xced6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xced4), 0xcb);
        EXPECT(gbc.readMem(0xced5), 0xd1);
        // CB D1 0053
        gbc.setState(0x66ba, 0x8204, 0x22e0, 0xe961, 0x5847, 0x944b, 0x0, 0x1);
        gbc.writeMem(0x66ba, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x8204);
        EXPECT(gbc.pc(), 0x66bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0054
        gbc.setState(0x476a, 0x543c, 0x9300, 0xcf99, 0x3347, 0xd190, 0x1, 0x0);
        gbc.writeMem(0x476a, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x543c);
        EXPECT(gbc.pc(), 0x476c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0055
        gbc.setState(0xefd2, 0x2658, 0x2250, 0xc71b, 0xf453, 0xfac3, 0x0, 0x1);
        gbc.writeMem(0xefd2, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x2658);
        EXPECT(gbc.pc(), 0xefd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefd2), 0xcb);
        EXPECT(gbc.readMem(0xefd3), 0xd1);
        // CB D1 0057
        gbc.setState(0xb1b8, 0x769d, 0xedb0, 0xb66a, 0x9228, 0x97b3, 0x1, 0x0);
        gbc.writeMem(0xb1b8, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x769d);
        EXPECT(gbc.pc(), 0xb1ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1b8), 0xcb);
        EXPECT(gbc.readMem(0xb1b9), 0xd1);
        // CB D1 0058
        gbc.setState(0x9734, 0x9c9, 0x3850, 0x3ffa, 0x837, 0xc005, 0x0, 0x1);
        gbc.writeMem(0x9734, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x9c9);
        EXPECT(gbc.pc(), 0x9736);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9734), 0xcb);
        EXPECT(gbc.readMem(0x9735), 0xd1);
        // CB D1 005A
        gbc.setState(0x88c5, 0x9c93, 0x54c0, 0xae1b, 0x8e5f, 0xf775, 0x0, 0x0);
        gbc.writeMem(0x88c5, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x9c93);
        EXPECT(gbc.pc(), 0x88c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88c5), 0xcb);
        EXPECT(gbc.readMem(0x88c6), 0xd1);
        // CB D1 005B
        gbc.setState(0xc93c, 0x1bc2, 0x2d80, 0x6273, 0x5577, 0x5786, 0x0, 0x0);
        gbc.writeMem(0xc93c, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x1bc2);
        EXPECT(gbc.pc(), 0xc93e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc93c), 0xcb);
        EXPECT(gbc.readMem(0xc93d), 0xd1);
        // CB D1 005C
        gbc.setState(0x127a, 0x1c0d, 0x2440, 0x266f, 0x6f84, 0x15e, 0x0, 0x0);
        gbc.writeMem(0x127a, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x1c0d);
        EXPECT(gbc.pc(), 0x127c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 005D
        gbc.setState(0x201b, 0xea05, 0x6f60, 0x7873, 0xe37f, 0x88de, 0x1, 0x0);
        gbc.writeMem(0x201b, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xea05);
        EXPECT(gbc.pc(), 0x201d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 005E
        gbc.setState(0x5fb4, 0xc042, 0xf460, 0x6890, 0x8867, 0x832c, 0x1, 0x1);
        gbc.writeMem(0x5fb4, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xc042);
        EXPECT(gbc.pc(), 0x5fb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 005F
        gbc.setState(0x358c, 0x8ccd, 0xe150, 0xdc76, 0xb822, 0x9410, 0x0, 0x1);
        gbc.writeMem(0x358c, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x8ccd);
        EXPECT(gbc.pc(), 0x358e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0061
        gbc.setState(0x14a8, 0xa1a4, 0xf590, 0x66cc, 0xb4a1, 0x7f19, 0x0, 0x1);
        gbc.writeMem(0x14a8, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xa1a4);
        EXPECT(gbc.pc(), 0x14aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0062
        gbc.setState(0xb90f, 0x4c03, 0xad60, 0xb391, 0x20d1, 0x8eb1, 0x0, 0x0);
        gbc.writeMem(0xb90f, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x4c03);
        EXPECT(gbc.pc(), 0xb911);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb90f), 0xcb);
        EXPECT(gbc.readMem(0xb910), 0xd1);
        // CB D1 0064
        gbc.setState(0x292a, 0xf5b, 0x27b0, 0xa96c, 0xf433, 0xae14, 0x0, 0x0);
        gbc.writeMem(0x292a, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xf5b);
        EXPECT(gbc.pc(), 0x292c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0065
        gbc.setState(0x8930, 0xcc66, 0x1aa0, 0x98f7, 0x71e, 0x3bcc, 0x0, 0x1);
        gbc.writeMem(0x8930, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xcc66);
        EXPECT(gbc.pc(), 0x8932);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8930), 0xcb);
        EXPECT(gbc.readMem(0x8931), 0xd1);
        // CB D1 0066
        gbc.setState(0x719, 0xa5d2, 0x1aa0, 0x9a53, 0xd7ef, 0x3c7, 0x1, 0x0);
        gbc.writeMem(0x719, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xa5d2);
        EXPECT(gbc.pc(), 0x71b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0067
        gbc.setState(0x70be, 0xdeba, 0x5aa0, 0x493a, 0x5e5f, 0x7a7b, 0x0, 0x1);
        gbc.writeMem(0x70be, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xdeba);
        EXPECT(gbc.pc(), 0x70c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0069
        gbc.setState(0xeffa, 0xc20a, 0x7ae0, 0x3d67, 0xafb2, 0x37a0, 0x0, 0x1);
        gbc.writeMem(0xeffa, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xc20a);
        EXPECT(gbc.pc(), 0xeffc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeffa), 0xcb);
        EXPECT(gbc.readMem(0xeffb), 0xd1);
        // CB D1 006A
        gbc.setState(0x4be6, 0x1f34, 0x3e70, 0xff42, 0x7582, 0x6559, 0x1, 0x1);
        gbc.writeMem(0x4be6, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x1f34);
        EXPECT(gbc.pc(), 0x4be8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 006B
        gbc.setState(0xce95, 0x15c1, 0xff0, 0x66c4, 0xdd9d, 0xf085, 0x0, 0x1);
        gbc.writeMem(0xce95, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x15c1);
        EXPECT(gbc.pc(), 0xce97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce95), 0xcb);
        EXPECT(gbc.readMem(0xce96), 0xd1);
        // CB D1 006C
        gbc.setState(0xafe, 0x5188, 0x1840, 0xb1bb, 0xa821, 0x8b06, 0x1, 0x0);
        gbc.writeMem(0xafe, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x5188);
        EXPECT(gbc.pc(), 0xb00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 006D
        gbc.setState(0x9deb, 0x77e6, 0x9ef0, 0x14e3, 0x15d7, 0xa2d0, 0x0, 0x1);
        gbc.writeMem(0x9deb, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x77e6);
        EXPECT(gbc.pc(), 0x9ded);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9deb), 0xcb);
        EXPECT(gbc.readMem(0x9dec), 0xd1);
        // CB D1 006E
        gbc.setState(0x999a, 0xed97, 0x1580, 0x4086, 0x2547, 0x4b18, 0x0, 0x1);
        gbc.writeMem(0x999a, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xed97);
        EXPECT(gbc.pc(), 0x999c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x999a), 0xcb);
        EXPECT(gbc.readMem(0x999b), 0xd1);
        // CB D1 006F
        gbc.setState(0x90f, 0x71dc, 0xc4e0, 0x6943, 0xfe26, 0x204, 0x1, 0x0);
        gbc.writeMem(0x90f, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x71dc);
        EXPECT(gbc.pc(), 0x911);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0070
        gbc.setState(0x237f, 0x5f12, 0xf900, 0xb8cb, 0x7f44, 0xf3a5, 0x1, 0x1);
        gbc.writeMem(0x237f, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x5f12);
        EXPECT(gbc.pc(), 0x2381);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0071
        gbc.setState(0x2945, 0x3e98, 0xf220, 0x61e7, 0xac8f, 0xd461, 0x1, 0x0);
        gbc.writeMem(0x2945, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x3e98);
        EXPECT(gbc.pc(), 0x2947);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0072
        gbc.setState(0x5237, 0xaee1, 0xade0, 0x7554, 0x56dd, 0xbec0, 0x0, 0x1);
        gbc.writeMem(0x5237, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xaee1);
        EXPECT(gbc.pc(), 0x5239);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0073
        gbc.setState(0xc367, 0x1e3a, 0x3420, 0x39d1, 0x1737, 0x558c, 0x0, 0x0);
        gbc.writeMem(0xc367, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x1e3a);
        EXPECT(gbc.pc(), 0xc369);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc367), 0xcb);
        EXPECT(gbc.readMem(0xc368), 0xd1);
        // CB D1 0074
        gbc.setState(0x1c1c, 0xba6e, 0xf840, 0xdcfb, 0xd22f, 0x9ff9, 0x0, 0x0);
        gbc.writeMem(0x1c1c, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xba6e);
        EXPECT(gbc.pc(), 0x1c1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0075
        gbc.setState(0xb188, 0x11fd, 0xeb20, 0x61af, 0xa5b4, 0xfe27, 0x1, 0x0);
        gbc.writeMem(0xb188, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x11fd);
        EXPECT(gbc.pc(), 0xb18a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb188), 0xcb);
        EXPECT(gbc.readMem(0xb189), 0xd1);
        // CB D1 0076
        gbc.setState(0xab6e, 0xaafa, 0xb830, 0xb00f, 0x9a74, 0x75d1, 0x1, 0x1);
        gbc.writeMem(0xab6e, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xaafa);
        EXPECT(gbc.pc(), 0xab70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab6e), 0xcb);
        EXPECT(gbc.readMem(0xab6f), 0xd1);
        // CB D1 0077
        gbc.setState(0x7d55, 0x700f, 0x3f30, 0x6223, 0x611f, 0x944e, 0x1, 0x0);
        gbc.writeMem(0x7d55, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x700f);
        EXPECT(gbc.pc(), 0x7d57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0078
        gbc.setState(0x8105, 0xb21f, 0xc790, 0xb58d, 0x8460, 0x39d7, 0x1, 0x0);
        gbc.writeMem(0x8105, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xb21f);
        EXPECT(gbc.pc(), 0x8107);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8105), 0xcb);
        EXPECT(gbc.readMem(0x8106), 0xd1);
        // CB D1 0079
        gbc.setState(0x66c4, 0xf598, 0x7b30, 0xe084, 0x67c1, 0x1d3c, 0x0, 0x0);
        gbc.writeMem(0x66c4, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xf598);
        EXPECT(gbc.pc(), 0x66c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 007A
        gbc.setState(0x1641, 0x16de, 0xf740, 0x9170, 0xc7b2, 0x9b8d, 0x1, 0x0);
        gbc.writeMem(0x1641, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x16de);
        EXPECT(gbc.pc(), 0x1643);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 007B
        gbc.setState(0xadf3, 0x77, 0x1420, 0x2edf, 0x51dd, 0x94bd, 0x1, 0x0);
        gbc.writeMem(0xadf3, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x77);
        EXPECT(gbc.pc(), 0xadf5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadf3), 0xcb);
        EXPECT(gbc.readMem(0xadf4), 0xd1);
        // CB D1 007C
        gbc.setState(0x80c6, 0x1866, 0x74b0, 0x4daa, 0x12cb, 0x8baa, 0x1, 0x0);
        gbc.writeMem(0x80c6, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x1866);
        EXPECT(gbc.pc(), 0x80c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80c6), 0xcb);
        EXPECT(gbc.readMem(0x80c7), 0xd1);
        // CB D1 007D
        gbc.setState(0x9699, 0x6037, 0x4680, 0x8e0f, 0xd831, 0x9c5b, 0x0, 0x0);
        gbc.writeMem(0x9699, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x6037);
        EXPECT(gbc.pc(), 0x969b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9699), 0xcb);
        EXPECT(gbc.readMem(0x969a), 0xd1);
        // CB D1 007E
        gbc.setState(0x79d8, 0x50f0, 0xe810, 0xb185, 0x1588, 0x387e, 0x1, 0x0);
        gbc.writeMem(0x79d8, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x50f0);
        EXPECT(gbc.pc(), 0x79da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0080
        gbc.setState(0x25da, 0x7998, 0x5190, 0x69ce, 0x6245, 0x3fa5, 0x1, 0x1);
        gbc.writeMem(0x25da, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x7998);
        EXPECT(gbc.pc(), 0x25dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0083
        gbc.setState(0x894e, 0x7b08, 0x5400, 0x804a, 0x532e, 0xa7d4, 0x0, 0x1);
        gbc.writeMem(0x894e, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x7b08);
        EXPECT(gbc.pc(), 0x8950);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x894e), 0xcb);
        EXPECT(gbc.readMem(0x894f), 0xd1);
        // CB D1 0084
        gbc.setState(0x9ef7, 0xc60b, 0xdf00, 0x8026, 0x72e5, 0xfc21, 0x1, 0x1);
        gbc.writeMem(0x9ef7, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xc60b);
        EXPECT(gbc.pc(), 0x9ef9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ef7), 0xcb);
        EXPECT(gbc.readMem(0x9ef8), 0xd1);
        // CB D1 0085
        gbc.setState(0xdd1f, 0x610d, 0xde80, 0x1cbf, 0x57e7, 0x3d05, 0x1, 0x1);
        gbc.writeMem(0xdd1f, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x610d);
        EXPECT(gbc.pc(), 0xdd21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd1f), 0xcb);
        EXPECT(gbc.readMem(0xdd20), 0xd1);
        // CB D1 0086
        gbc.setState(0xb0, 0xa355, 0xab10, 0xb01f, 0x4f19, 0x3b15, 0x0, 0x1);
        gbc.writeMem(0xb0, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xa355);
        EXPECT(gbc.pc(), 0xb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0087
        gbc.setState(0x2cca, 0x62b, 0x6470, 0xd88c, 0x29a9, 0x5b35, 0x0, 0x0);
        gbc.writeMem(0x2cca, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x62b);
        EXPECT(gbc.pc(), 0x2ccc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0088
        gbc.setState(0x33e3, 0xa78f, 0xcf50, 0xb592, 0xd01, 0xd9cd, 0x0, 0x0);
        gbc.writeMem(0x33e3, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xa78f);
        EXPECT(gbc.pc(), 0x33e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0089
        gbc.setState(0x8655, 0x23de, 0x3170, 0x92fe, 0xf6, 0x608e, 0x0, 0x1);
        gbc.writeMem(0x8655, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x23de);
        EXPECT(gbc.pc(), 0x8657);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8655), 0xcb);
        EXPECT(gbc.readMem(0x8656), 0xd1);
        // CB D1 008A
        gbc.setState(0xed06, 0x516a, 0xffb0, 0x3427, 0xf0de, 0x3963, 0x0, 0x0);
        gbc.writeMem(0xed06, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x516a);
        EXPECT(gbc.pc(), 0xed08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed06), 0xcb);
        EXPECT(gbc.readMem(0xed07), 0xd1);
        // CB D1 008B
        gbc.setState(0x9da, 0x4473, 0xdd90, 0x34b6, 0x5230, 0x8e73, 0x1, 0x1);
        gbc.writeMem(0x9da, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x4473);
        EXPECT(gbc.pc(), 0x9dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 008C
        gbc.setState(0x28, 0x21a2, 0xf840, 0x223b, 0x191e, 0x386a, 0x0, 0x0);
        gbc.writeMem(0x28, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x21a2);
        EXPECT(gbc.pc(), 0x2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 008D
        gbc.setState(0x2638, 0xd389, 0x3d40, 0x6605, 0xabf6, 0x95b6, 0x0, 0x0);
        gbc.writeMem(0x2638, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xd389);
        EXPECT(gbc.pc(), 0x263a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 008E
        gbc.setState(0x2315, 0xfca, 0x78f0, 0xfeec, 0x2433, 0xa688, 0x0, 0x0);
        gbc.writeMem(0x2315, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xfca);
        EXPECT(gbc.pc(), 0x2317);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 008F
        gbc.setState(0x3876, 0xd392, 0x2f50, 0x8a35, 0xca7f, 0x9416, 0x0, 0x1);
        gbc.writeMem(0x3876, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xd392);
        EXPECT(gbc.pc(), 0x3878);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0091
        gbc.setState(0xa1d9, 0xb9bb, 0xc050, 0xf030, 0x8a78, 0x3e09, 0x0, 0x0);
        gbc.writeMem(0xa1d9, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xb9bb);
        EXPECT(gbc.pc(), 0xa1db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1d9), 0xcb);
        EXPECT(gbc.readMem(0xa1da), 0xd1);
        // CB D1 0092
        gbc.setState(0x195d, 0x9bde, 0x3b40, 0x390a, 0x78a, 0x70cf, 0x1, 0x0);
        gbc.writeMem(0x195d, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x9bde);
        EXPECT(gbc.pc(), 0x195f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0093
        gbc.setState(0x8062, 0xa3b8, 0x31d0, 0x4f43, 0x7835, 0x21b0, 0x1, 0x0);
        gbc.writeMem(0x8062, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xa3b8);
        EXPECT(gbc.pc(), 0x8064);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8062), 0xcb);
        EXPECT(gbc.readMem(0x8063), 0xd1);
        // CB D1 0094
        gbc.setState(0x43bd, 0x1833, 0xdd70, 0x4ed3, 0x3bf9, 0xfb20, 0x0, 0x1);
        gbc.writeMem(0x43bd, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x1833);
        EXPECT(gbc.pc(), 0x43bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0095
        gbc.setState(0x84c7, 0x3a49, 0x7bf0, 0xfba8, 0x2c40, 0xf33f, 0x0, 0x0);
        gbc.writeMem(0x84c7, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x3a49);
        EXPECT(gbc.pc(), 0x84c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84c7), 0xcb);
        EXPECT(gbc.readMem(0x84c8), 0xd1);
        // CB D1 0096
        gbc.setState(0xc640, 0x40f5, 0x3570, 0xf5cb, 0xa009, 0x638d, 0x0, 0x0);
        gbc.writeMem(0xc640, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x40f5);
        EXPECT(gbc.pc(), 0xc642);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc640), 0xcb);
        EXPECT(gbc.readMem(0xc641), 0xd1);
        // CB D1 0097
        gbc.setState(0xaa0a, 0x484f, 0x7000, 0x715f, 0x8e96, 0x2ee5, 0x0, 0x1);
        gbc.writeMem(0xaa0a, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x484f);
        EXPECT(gbc.pc(), 0xaa0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa0a), 0xcb);
        EXPECT(gbc.readMem(0xaa0b), 0xd1);
        // CB D1 0098
        gbc.setState(0xec57, 0x21d7, 0xc0c0, 0x60a0, 0x4036, 0x5802, 0x0, 0x0);
        gbc.writeMem(0xec57, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x21d7);
        EXPECT(gbc.pc(), 0xec59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec57), 0xcb);
        EXPECT(gbc.readMem(0xec58), 0xd1);
        // CB D1 0099
        gbc.setState(0x74c6, 0xfb6d, 0xe650, 0xe751, 0xbb70, 0x9624, 0x0, 0x0);
        gbc.writeMem(0x74c6, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xfb6d);
        EXPECT(gbc.pc(), 0x74c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 009A
        gbc.setState(0x906d, 0x6331, 0x7ec0, 0x6200, 0x1b79, 0x18f7, 0x1, 0x0);
        gbc.writeMem(0x906d, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x6331);
        EXPECT(gbc.pc(), 0x906f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x906d), 0xcb);
        EXPECT(gbc.readMem(0x906e), 0xd1);
        // CB D1 009B
        gbc.setState(0xe0bf, 0x1cbe, 0x3ff0, 0xad8, 0xeefa, 0xa5da, 0x0, 0x1);
        gbc.writeMem(0xe0bf, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x1cbe);
        EXPECT(gbc.pc(), 0xe0c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0bf), 0xcb);
        EXPECT(gbc.readMem(0xe0c0), 0xd1);
        // CB D1 009C
        gbc.setState(0xcdad, 0x71b2, 0x8880, 0x8634, 0x5e38, 0x8491, 0x1, 0x0);
        gbc.writeMem(0xcdad, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x71b2);
        EXPECT(gbc.pc(), 0xcdaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdad), 0xcb);
        EXPECT(gbc.readMem(0xcdae), 0xd1);
        // CB D1 009D
        gbc.setState(0x48b3, 0x81d9, 0x4bc0, 0xa3da, 0x7dc6, 0x3caa, 0x0, 0x1);
        gbc.writeMem(0x48b3, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x81d9);
        EXPECT(gbc.pc(), 0x48b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 009F
        gbc.setState(0x3f3e, 0xaf24, 0xe0c0, 0xff6f, 0x548, 0x38e3, 0x1, 0x1);
        gbc.writeMem(0x3f3e, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xaf24);
        EXPECT(gbc.pc(), 0x3f40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 00A0
        gbc.setState(0x2db4, 0x2a37, 0x2530, 0x6c6e, 0x3574, 0x167, 0x1, 0x0);
        gbc.writeMem(0x2db4, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x2a37);
        EXPECT(gbc.pc(), 0x2db6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 00A1
        gbc.setState(0xb824, 0xa673, 0x50, 0xd0cc, 0xf8a4, 0x3a95, 0x0, 0x1);
        gbc.writeMem(0xb824, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xa673);
        EXPECT(gbc.pc(), 0xb826);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb824), 0xcb);
        EXPECT(gbc.readMem(0xb825), 0xd1);
        // CB D1 00A2
        gbc.setState(0xc196, 0xc335, 0xd620, 0x1a31, 0xe14e, 0x7863, 0x0, 0x0);
        gbc.writeMem(0xc196, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xc335);
        EXPECT(gbc.pc(), 0xc198);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc196), 0xcb);
        EXPECT(gbc.readMem(0xc197), 0xd1);
        // CB D1 00A3
        gbc.setState(0x26b8, 0x51ca, 0xeeb0, 0x9636, 0x7ba9, 0xe1b4, 0x1, 0x0);
        gbc.writeMem(0x26b8, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x51ca);
        EXPECT(gbc.pc(), 0x26ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 00A4
        gbc.setState(0x12cd, 0x97b1, 0x9fd0, 0xec71, 0xb5c6, 0x454d, 0x0, 0x1);
        gbc.writeMem(0x12cd, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x97b1);
        EXPECT(gbc.pc(), 0x12cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 00A5
        gbc.setState(0x79ea, 0xb9b9, 0xeb90, 0x43c7, 0x9b7f, 0xe2bc, 0x0, 0x0);
        gbc.writeMem(0x79ea, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xb9b9);
        EXPECT(gbc.pc(), 0x79ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 00A6
        gbc.setState(0x1147, 0x64bb, 0xf3f0, 0x9094, 0x2eae, 0xf739, 0x0, 0x1);
        gbc.writeMem(0x1147, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x64bb);
        EXPECT(gbc.pc(), 0x1149);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 00A7
        gbc.setState(0x1e14, 0x720a, 0xe4f0, 0x8703, 0x8e41, 0x9d6d, 0x0, 0x1);
        gbc.writeMem(0x1e14, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x720a);
        EXPECT(gbc.pc(), 0x1e16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 00A8
        gbc.setState(0x25f1, 0xf76e, 0xdc60, 0xc30d, 0x24a, 0x75ac, 0x1, 0x1);
        gbc.writeMem(0x25f1, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xf76e);
        EXPECT(gbc.pc(), 0x25f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 00A9
        gbc.setState(0x4420, 0x3885, 0xa1f0, 0x3b63, 0x128b, 0x3dfb, 0x1, 0x0);
        gbc.writeMem(0x4420, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x3885);
        EXPECT(gbc.pc(), 0x4422);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 00AA
        gbc.setState(0x22f7, 0x7445, 0xc50, 0x4dcc, 0x4894, 0x50ef, 0x1, 0x0);
        gbc.writeMem(0x22f7, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x7445);
        EXPECT(gbc.pc(), 0x22f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 00AB
        gbc.setState(0xd62e, 0x79ca, 0x5020, 0xcc8b, 0x7049, 0x15d0, 0x1, 0x1);
        gbc.writeMem(0xd62e, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x79ca);
        EXPECT(gbc.pc(), 0xd630);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd62e), 0xcb);
        EXPECT(gbc.readMem(0xd62f), 0xd1);
        // CB D1 00AD
        gbc.setState(0x89e7, 0x1644, 0x4590, 0x2711, 0x1d4d, 0x27b1, 0x1, 0x0);
        gbc.writeMem(0x89e7, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x1644);
        EXPECT(gbc.pc(), 0x89e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89e7), 0xcb);
        EXPECT(gbc.readMem(0x89e8), 0xd1);
        // CB D1 00AE
        gbc.setState(0x2276, 0x1fe6, 0x8660, 0x5534, 0xf85a, 0xe746, 0x1, 0x1);
        gbc.writeMem(0x2276, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x1fe6);
        EXPECT(gbc.pc(), 0x2278);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 00AF
        gbc.setState(0x4281, 0xe691, 0x60e0, 0xf3d, 0x5bb3, 0x9dea, 0x0, 0x1);
        gbc.writeMem(0x4281, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xe691);
        EXPECT(gbc.pc(), 0x4283);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 00B0
        gbc.setState(0xd85e, 0xbd9c, 0xac40, 0xd60a, 0x45ba, 0x4ccf, 0x1, 0x1);
        gbc.writeMem(0xd85e, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xbd9c);
        EXPECT(gbc.pc(), 0xd860);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd85e), 0xcb);
        EXPECT(gbc.readMem(0xd85f), 0xd1);
        // CB D1 00B1
        gbc.setState(0xd082, 0x4d29, 0xf7d0, 0x8907, 0xb1c3, 0x2a3e, 0x1, 0x0);
        gbc.writeMem(0xd082, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x4d29);
        EXPECT(gbc.pc(), 0xd084);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd082), 0xcb);
        EXPECT(gbc.readMem(0xd083), 0xd1);
        // CB D1 00B2
        gbc.setState(0x1328, 0xddc, 0xc3a0, 0x1880, 0xd78c, 0xda35, 0x0, 0x0);
        gbc.writeMem(0x1328, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xddc);
        EXPECT(gbc.pc(), 0x132a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 00B3
        gbc.setState(0x289, 0xd0a9, 0x7630, 0xe515, 0x3de2, 0xb76, 0x0, 0x0);
        gbc.writeMem(0x289, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xd0a9);
        EXPECT(gbc.pc(), 0x28b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 00B4
        gbc.setState(0xbe7, 0xe8eb, 0xe690, 0x9c7, 0x1869, 0xf8f7, 0x0, 0x0);
        gbc.writeMem(0xbe7, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xe8eb);
        EXPECT(gbc.pc(), 0xbe9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 00B5
        gbc.setState(0x60c5, 0x57d0, 0x3000, 0x1644, 0x9143, 0x6dc6, 0x0, 0x0);
        gbc.writeMem(0x60c5, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x57d0);
        EXPECT(gbc.pc(), 0x60c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 00B6
        gbc.setState(0x994c, 0x5568, 0xf030, 0x390, 0xf5d1, 0xe62d, 0x0, 0x1);
        gbc.writeMem(0x994c, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x5568);
        EXPECT(gbc.pc(), 0x994e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x994c), 0xcb);
        EXPECT(gbc.readMem(0x994d), 0xd1);
        // CB D1 00B7
        gbc.setState(0x23f6, 0xb135, 0x7160, 0x31ba, 0xdd22, 0x2c17, 0x1, 0x1);
        gbc.writeMem(0x23f6, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xb135);
        EXPECT(gbc.pc(), 0x23f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 00B8
        gbc.setState(0x8738, 0x9fa1, 0x6810, 0x71dc, 0xbc56, 0x7ae3, 0x1, 0x0);
        gbc.writeMem(0x8738, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x9fa1);
        EXPECT(gbc.pc(), 0x873a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8738), 0xcb);
        EXPECT(gbc.readMem(0x8739), 0xd1);
        // CB D1 00B9
        gbc.setState(0x3cff, 0x5db0, 0xcdd0, 0xcea, 0x2df7, 0x68c5, 0x0, 0x0);
        gbc.writeMem(0x3cff, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x5db0);
        EXPECT(gbc.pc(), 0x3d01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 00BA
        gbc.setState(0x7120, 0xf69a, 0xb9a0, 0x78ce, 0xda3b, 0xe7c4, 0x1, 0x1);
        gbc.writeMem(0x7120, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xf69a);
        EXPECT(gbc.pc(), 0x7122);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 00BB
        gbc.setState(0x5c11, 0xa37a, 0x2f90, 0x21b6, 0xe52, 0xb0a3, 0x1, 0x0);
        gbc.writeMem(0x5c11, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xa37a);
        EXPECT(gbc.pc(), 0x5c13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 00BC
        gbc.setState(0xd18c, 0x43f2, 0x1220, 0x4dfb, 0xdb9, 0x4ed3, 0x0, 0x0);
        gbc.writeMem(0xd18c, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x43f2);
        EXPECT(gbc.pc(), 0xd18e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd18c), 0xcb);
        EXPECT(gbc.readMem(0xd18d), 0xd1);
        // CB D1 00BD
        gbc.setState(0x600b, 0xdc1c, 0xcce0, 0xa792, 0xc6f6, 0xd983, 0x1, 0x0);
        gbc.writeMem(0x600b, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xdc1c);
        EXPECT(gbc.pc(), 0x600d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 00BE
        gbc.setState(0xce8c, 0xe526, 0x4960, 0x4c63, 0xc2b1, 0x3813, 0x0, 0x1);
        gbc.writeMem(0xce8c, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xe526);
        EXPECT(gbc.pc(), 0xce8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce8c), 0xcb);
        EXPECT(gbc.readMem(0xce8d), 0xd1);
        // CB D1 00BF
        gbc.setState(0x2162, 0x765c, 0x8400, 0x31bd, 0x6f44, 0x4fd5, 0x0, 0x0);
        gbc.writeMem(0x2162, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x765c);
        EXPECT(gbc.pc(), 0x2164);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 00C0
        gbc.setState(0x80cd, 0x46f2, 0xcf50, 0xbfdd, 0x7cb1, 0xe484, 0x0, 0x0);
        gbc.writeMem(0x80cd, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x46f2);
        EXPECT(gbc.pc(), 0x80cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80cd), 0xcb);
        EXPECT(gbc.readMem(0x80ce), 0xd1);
        // CB D1 00C1
        gbc.setState(0xb473, 0xdc71, 0x6bb0, 0xcce0, 0xa644, 0xa486, 0x0, 0x1);
        gbc.writeMem(0xb473, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xdc71);
        EXPECT(gbc.pc(), 0xb475);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb473), 0xcb);
        EXPECT(gbc.readMem(0xb474), 0xd1);
        // CB D1 00C2
        gbc.setState(0xbca5, 0xb99c, 0x7350, 0xb745, 0x69d9, 0xa48c, 0x1, 0x1);
        gbc.writeMem(0xbca5, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xb99c);
        EXPECT(gbc.pc(), 0xbca7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbca5), 0xcb);
        EXPECT(gbc.readMem(0xbca6), 0xd1);
        // CB D1 00C3
        gbc.setState(0x726, 0xabe9, 0x78d0, 0xb546, 0x76e5, 0x5e49, 0x0, 0x0);
        gbc.writeMem(0x726, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xabe9);
        EXPECT(gbc.pc(), 0x728);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 00C4
        gbc.setState(0x7ab7, 0x1c9e, 0xde80, 0x4921, 0x2746, 0x836c, 0x0, 0x1);
        gbc.writeMem(0x7ab7, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x1c9e);
        EXPECT(gbc.pc(), 0x7ab9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 00C5
        gbc.setState(0xc6d2, 0x81f0, 0xeb70, 0x913d, 0x8cf0, 0xddd2, 0x1, 0x1);
        gbc.writeMem(0xc6d2, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x81f0);
        EXPECT(gbc.pc(), 0xc6d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6d2), 0xcb);
        EXPECT(gbc.readMem(0xc6d3), 0xd1);
        // CB D1 00C6
        gbc.setState(0xe37d, 0xbd82, 0x3ed0, 0x1ae5, 0x680e, 0x66ca, 0x1, 0x1);
        gbc.writeMem(0xe37d, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xbd82);
        EXPECT(gbc.pc(), 0xe37f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe37d), 0xcb);
        EXPECT(gbc.readMem(0xe37e), 0xd1);
        // CB D1 00C7
        gbc.setState(0x30ed, 0x4553, 0xbf90, 0x48f7, 0x25e8, 0xaac0, 0x0, 0x1);
        gbc.writeMem(0x30ed, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x4553);
        EXPECT(gbc.pc(), 0x30ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 00C8
        gbc.setState(0x7344, 0xfb02, 0x43e0, 0xe567, 0x7899, 0xa5d0, 0x0, 0x0);
        gbc.writeMem(0x7344, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xfb02);
        EXPECT(gbc.pc(), 0x7346);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 00C9
        gbc.setState(0x2fb0, 0x83e0, 0x2c20, 0xf87e, 0xf207, 0x804a, 0x1, 0x1);
        gbc.writeMem(0x2fb0, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x83e0);
        EXPECT(gbc.pc(), 0x2fb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 00CA
        gbc.setState(0x8409, 0xd0fe, 0x9b70, 0x75a1, 0xaa1f, 0xfd53, 0x1, 0x1);
        gbc.writeMem(0x8409, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xd0fe);
        EXPECT(gbc.pc(), 0x840b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8409), 0xcb);
        EXPECT(gbc.readMem(0x840a), 0xd1);
        // CB D1 00CB
        gbc.setState(0x4be, 0x9b70, 0x6d10, 0x1546, 0x848, 0x5192, 0x0, 0x1);
        gbc.writeMem(0x4be, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x9b70);
        EXPECT(gbc.pc(), 0x4c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 00CC
        gbc.setState(0xdde9, 0x5404, 0x5fc0, 0x6769, 0x2f67, 0x1ef9, 0x0, 0x0);
        gbc.writeMem(0xdde9, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x5404);
        EXPECT(gbc.pc(), 0xddeb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdde9), 0xcb);
        EXPECT(gbc.readMem(0xddea), 0xd1);
        // CB D1 00CD
        gbc.setState(0x7d2c, 0x1974, 0x85b0, 0x8eb, 0x79f7, 0x2e55, 0x0, 0x0);
        gbc.writeMem(0x7d2c, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x1974);
        EXPECT(gbc.pc(), 0x7d2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 00CE
        gbc.setState(0x7513, 0x4cf3, 0xc2a0, 0xe90c, 0x1955, 0x9a9d, 0x0, 0x0);
        gbc.writeMem(0x7513, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x4cf3);
        EXPECT(gbc.pc(), 0x7515);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 00CF
        gbc.setState(0xc6ec, 0x1d9e, 0x22e0, 0x64d1, 0x3ce7, 0xfbbb, 0x1, 0x1);
        gbc.writeMem(0xc6ec, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x1d9e);
        EXPECT(gbc.pc(), 0xc6ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6ec), 0xcb);
        EXPECT(gbc.readMem(0xc6ed), 0xd1);
        // CB D1 00D0
        gbc.setState(0x12e7, 0x7217, 0xd670, 0xc80d, 0xc2cb, 0x7632, 0x0, 0x0);
        gbc.writeMem(0x12e7, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x7217);
        EXPECT(gbc.pc(), 0x12e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 00D1
        gbc.setState(0x3c32, 0x6ec7, 0x62f0, 0x323a, 0xac3f, 0x4d97, 0x0, 0x0);
        gbc.writeMem(0x3c32, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x6ec7);
        EXPECT(gbc.pc(), 0x3c34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 00D2
        gbc.setState(0x768c, 0xb40c, 0x3e00, 0x9766, 0x1b93, 0x9d66, 0x1, 0x1);
        gbc.writeMem(0x768c, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xb40c);
        EXPECT(gbc.pc(), 0x768e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 00D3
        gbc.setState(0xa997, 0xde60, 0x7300, 0x77bf, 0x1bfa, 0x8591, 0x0, 0x1);
        gbc.writeMem(0xa997, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xde60);
        EXPECT(gbc.pc(), 0xa999);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa997), 0xcb);
        EXPECT(gbc.readMem(0xa998), 0xd1);
        // CB D1 00D4
        gbc.setState(0x994, 0xdf66, 0x6350, 0xadd2, 0xc2c8, 0x63b7, 0x1, 0x1);
        gbc.writeMem(0x994, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xdf66);
        EXPECT(gbc.pc(), 0x996);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 00D5
        gbc.setState(0xa2b2, 0x1f2e, 0x980, 0x92e6, 0xf625, 0x2baf, 0x0, 0x0);
        gbc.writeMem(0xa2b2, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x1f2e);
        EXPECT(gbc.pc(), 0xa2b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2b2), 0xcb);
        EXPECT(gbc.readMem(0xa2b3), 0xd1);
        // CB D1 00D6
        gbc.setState(0x90c4, 0x17be, 0x9390, 0x6964, 0x63e1, 0x56d2, 0x1, 0x1);
        gbc.writeMem(0x90c4, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x17be);
        EXPECT(gbc.pc(), 0x90c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90c4), 0xcb);
        EXPECT(gbc.readMem(0x90c5), 0xd1);
        // CB D1 00D7
        gbc.setState(0x9033, 0x4482, 0x9ee0, 0xa365, 0x1300, 0xaf05, 0x1, 0x0);
        gbc.writeMem(0x9033, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x4482);
        EXPECT(gbc.pc(), 0x9035);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9033), 0xcb);
        EXPECT(gbc.readMem(0x9034), 0xd1);
        // CB D1 00D8
        gbc.setState(0x5c4d, 0x371f, 0x7d0, 0xdee1, 0xae, 0xf049, 0x1, 0x1);
        gbc.writeMem(0x5c4d, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x371f);
        EXPECT(gbc.pc(), 0x5c4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 00D9
        gbc.setState(0x68a1, 0xcad4, 0xf930, 0xfa2d, 0x6ba7, 0x1892, 0x1, 0x0);
        gbc.writeMem(0x68a1, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xcad4);
        EXPECT(gbc.pc(), 0x68a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 00DA
        gbc.setState(0x771, 0x112a, 0x45a0, 0x7098, 0x94f1, 0x108f, 0x0, 0x0);
        gbc.writeMem(0x771, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x112a);
        EXPECT(gbc.pc(), 0x773);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 00DB
        gbc.setState(0x3b8c, 0x6a6, 0xf2f0, 0xbfcf, 0xf3ad, 0x147b, 0x1, 0x1);
        gbc.writeMem(0x3b8c, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x6a6);
        EXPECT(gbc.pc(), 0x3b8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 00DC
        gbc.setState(0xd12c, 0x1521, 0x560, 0x2158, 0xa2c4, 0x87d9, 0x0, 0x0);
        gbc.writeMem(0xd12c, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x1521);
        EXPECT(gbc.pc(), 0xd12e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd12c), 0xcb);
        EXPECT(gbc.readMem(0xd12d), 0xd1);
        // CB D1 00DD
        gbc.setState(0x4d80, 0x227, 0xe340, 0xabbd, 0x2b32, 0x6ab, 0x1, 0x1);
        gbc.writeMem(0x4d80, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x227);
        EXPECT(gbc.pc(), 0x4d82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 00DE
        gbc.setState(0x3fd5, 0x560f, 0x8e20, 0xdd0e, 0xc203, 0xd098, 0x0, 0x0);
        gbc.writeMem(0x3fd5, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x560f);
        EXPECT(gbc.pc(), 0x3fd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 00DF
        gbc.setState(0x5cf8, 0x2926, 0x2140, 0x6c50, 0xd53, 0x476c, 0x0, 0x0);
        gbc.writeMem(0x5cf8, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x2926);
        EXPECT(gbc.pc(), 0x5cfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 00E0
        gbc.setState(0x902e, 0x493a, 0xe940, 0x6055, 0x7de3, 0x21f9, 0x1, 0x1);
        gbc.writeMem(0x902e, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x493a);
        EXPECT(gbc.pc(), 0x9030);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x902e), 0xcb);
        EXPECT(gbc.readMem(0x902f), 0xd1);
        // CB D1 00E1
        gbc.setState(0x6d51, 0xa9b5, 0x2080, 0x3fa7, 0xf8d3, 0xf8c, 0x1, 0x1);
        gbc.writeMem(0x6d51, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xa9b5);
        EXPECT(gbc.pc(), 0x6d53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 00E2
        gbc.setState(0xb64, 0xaae8, 0xae60, 0xe366, 0x6c0b, 0x9c52, 0x0, 0x0);
        gbc.writeMem(0xb64, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xaae8);
        EXPECT(gbc.pc(), 0xb66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 00E3
        gbc.setState(0xa11c, 0xc8e6, 0x4860, 0x6940, 0x6709, 0xe96d, 0x0, 0x0);
        gbc.writeMem(0xa11c, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xc8e6);
        EXPECT(gbc.pc(), 0xa11e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa11c), 0xcb);
        EXPECT(gbc.readMem(0xa11d), 0xd1);
        // CB D1 00E4
        gbc.setState(0xcc8, 0xeeb9, 0x3710, 0xe6b3, 0x7ef2, 0xeda1, 0x1, 0x1);
        gbc.writeMem(0xcc8, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xeeb9);
        EXPECT(gbc.pc(), 0xcca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 00E5
        gbc.setState(0x9853, 0x15f1, 0xec30, 0xac72, 0x2d6d, 0x9e12, 0x1, 0x0);
        gbc.writeMem(0x9853, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x15f1);
        EXPECT(gbc.pc(), 0x9855);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9853), 0xcb);
        EXPECT(gbc.readMem(0x9854), 0xd1);
        // CB D1 00E6
        gbc.setState(0x8e09, 0xcc49, 0x89a0, 0xa7e9, 0xf764, 0x20d5, 0x1, 0x0);
        gbc.writeMem(0x8e09, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xcc49);
        EXPECT(gbc.pc(), 0x8e0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e09), 0xcb);
        EXPECT(gbc.readMem(0x8e0a), 0xd1);
        // CB D1 00E7
        gbc.setState(0xeda, 0x72f5, 0xf680, 0x1d48, 0xeb20, 0x55f0, 0x1, 0x0);
        gbc.writeMem(0xeda, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x72f5);
        EXPECT(gbc.pc(), 0xedc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 00E8
        gbc.setState(0xae9c, 0xbbfc, 0x34c0, 0xf90a, 0x52a8, 0x79b4, 0x1, 0x1);
        gbc.writeMem(0xae9c, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xbbfc);
        EXPECT(gbc.pc(), 0xae9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae9c), 0xcb);
        EXPECT(gbc.readMem(0xae9d), 0xd1);
        // CB D1 00E9
        gbc.setState(0xe8fa, 0x5d91, 0x1cf0, 0x18c5, 0xc44a, 0x8b28, 0x1, 0x0);
        gbc.writeMem(0xe8fa, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x5d91);
        EXPECT(gbc.pc(), 0xe8fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8fa), 0xcb);
        EXPECT(gbc.readMem(0xe8fb), 0xd1);
        // CB D1 00EB
        gbc.setState(0x39b8, 0xeb09, 0x7270, 0xc90f, 0xd255, 0x6ba8, 0x0, 0x0);
        gbc.writeMem(0x39b8, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xeb09);
        EXPECT(gbc.pc(), 0x39ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 00EC
        gbc.setState(0x94d7, 0x691f, 0x37e0, 0x48fb, 0xb858, 0x8f4f, 0x0, 0x1);
        gbc.writeMem(0x94d7, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x691f);
        EXPECT(gbc.pc(), 0x94d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94d7), 0xcb);
        EXPECT(gbc.readMem(0x94d8), 0xd1);
        // CB D1 00ED
        gbc.setState(0xb8fc, 0xa5e8, 0x5760, 0xe0f1, 0xb997, 0xd4ea, 0x1, 0x1);
        gbc.writeMem(0xb8fc, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xa5e8);
        EXPECT(gbc.pc(), 0xb8fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8fc), 0xcb);
        EXPECT(gbc.readMem(0xb8fd), 0xd1);
        // CB D1 00EE
        gbc.setState(0xe59c, 0xd8c1, 0x41b0, 0x3a8d, 0x8277, 0x64cb, 0x0, 0x0);
        gbc.writeMem(0xe59c, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xd8c1);
        EXPECT(gbc.pc(), 0xe59e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe59c), 0xcb);
        EXPECT(gbc.readMem(0xe59d), 0xd1);
        // CB D1 00EF
        gbc.setState(0x251a, 0x84bd, 0x73b0, 0x85d6, 0xd1f9, 0x9340, 0x1, 0x1);
        gbc.writeMem(0x251a, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x84bd);
        EXPECT(gbc.pc(), 0x251c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 00F0
        gbc.setState(0xbbf0, 0x2a8c, 0x9b10, 0xb665, 0x871c, 0x7ab3, 0x0, 0x0);
        gbc.writeMem(0xbbf0, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x2a8c);
        EXPECT(gbc.pc(), 0xbbf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbf0), 0xcb);
        EXPECT(gbc.readMem(0xbbf1), 0xd1);
        // CB D1 00F1
        gbc.setState(0x311e, 0x7e2d, 0x2050, 0xc05a, 0x7ebf, 0x2d2f, 0x1, 0x1);
        gbc.writeMem(0x311e, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x7e2d);
        EXPECT(gbc.pc(), 0x3120);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 00F2
        gbc.setState(0x79d1, 0x7082, 0x2350, 0xf79, 0xa9d, 0x7523, 0x0, 0x1);
        gbc.writeMem(0x79d1, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x7082);
        EXPECT(gbc.pc(), 0x79d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 00F3
        gbc.setState(0x8445, 0x62f0, 0x8ac0, 0xbfa9, 0x5844, 0xc359, 0x1, 0x1);
        gbc.writeMem(0x8445, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x62f0);
        EXPECT(gbc.pc(), 0x8447);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8445), 0xcb);
        EXPECT(gbc.readMem(0x8446), 0xd1);
        // CB D1 00F4
        gbc.setState(0x11a4, 0x2bb0, 0x2630, 0x6ffd, 0xc062, 0x67b6, 0x0, 0x1);
        gbc.writeMem(0x11a4, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x2bb0);
        EXPECT(gbc.pc(), 0x11a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 00F5
        gbc.setState(0x18b1, 0xd99c, 0xff20, 0x1681, 0xe4dc, 0x658e, 0x1, 0x0);
        gbc.writeMem(0x18b1, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xd99c);
        EXPECT(gbc.pc(), 0x18b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 00F6
        gbc.setState(0x8a0e, 0x866, 0x3d70, 0xf93d, 0xfee4, 0x665c, 0x0, 0x1);
        gbc.writeMem(0x8a0e, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x866);
        EXPECT(gbc.pc(), 0x8a10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a0e), 0xcb);
        EXPECT(gbc.readMem(0x8a0f), 0xd1);
        // CB D1 00F7
        gbc.setState(0x9472, 0xfeed, 0x81c0, 0xc4e4, 0x29f8, 0x5d1e, 0x0, 0x1);
        gbc.writeMem(0x9472, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xfeed);
        EXPECT(gbc.pc(), 0x9474);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9472), 0xcb);
        EXPECT(gbc.readMem(0x9473), 0xd1);
        // CB D1 00F8
        gbc.setState(0x7ea4, 0xa9a7, 0x4060, 0x8870, 0x6dcf, 0x5d52, 0x1, 0x1);
        gbc.writeMem(0x7ea4, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xa9a7);
        EXPECT(gbc.pc(), 0x7ea6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 00F9
        gbc.setState(0xe3ab, 0x10d2, 0x930, 0x8148, 0xafb, 0x610a, 0x1, 0x1);
        gbc.writeMem(0xe3ab, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x10d2);
        EXPECT(gbc.pc(), 0xe3ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3ab), 0xcb);
        EXPECT(gbc.readMem(0xe3ac), 0xd1);
        // CB D1 00FA
        gbc.setState(0x2a0d, 0xc219, 0x62a0, 0x91b4, 0xe790, 0x5f53, 0x0, 0x0);
        gbc.writeMem(0x2a0d, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xc219);
        EXPECT(gbc.pc(), 0x2a0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 00FB
        gbc.setState(0x2992, 0x9b9a, 0x8e40, 0xdfc1, 0x40a, 0x85c2, 0x0, 0x0);
        gbc.writeMem(0x2992, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x9b9a);
        EXPECT(gbc.pc(), 0x2994);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 00FC
        gbc.setState(0xba38, 0x9431, 0x1a60, 0xbbe4, 0x9227, 0xe972, 0x0, 0x0);
        gbc.writeMem(0xba38, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x9431);
        EXPECT(gbc.pc(), 0xba3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba38), 0xcb);
        EXPECT(gbc.readMem(0xba39), 0xd1);
        // CB D1 00FD
        gbc.setState(0x8c50, 0x5571, 0x6db0, 0xee9b, 0x4935, 0x9555, 0x1, 0x1);
        gbc.writeMem(0x8c50, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x5571);
        EXPECT(gbc.pc(), 0x8c52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c50), 0xcb);
        EXPECT(gbc.readMem(0x8c51), 0xd1);
        // CB D1 00FE
        gbc.setState(0xbf50, 0x3951, 0x6ea0, 0xb943, 0x5705, 0x5160, 0x1, 0x1);
        gbc.writeMem(0xbf50, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x3951);
        EXPECT(gbc.pc(), 0xbf52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf50), 0xcb);
        EXPECT(gbc.readMem(0xbf51), 0xd1);
        // CB D1 00FF
        gbc.setState(0xcfce, 0x599f, 0xf0e0, 0x9308, 0xa747, 0x323, 0x0, 0x0);
        gbc.writeMem(0xcfce, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x599f);
        EXPECT(gbc.pc(), 0xcfd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfce), 0xcb);
        EXPECT(gbc.readMem(0xcfcf), 0xd1);
        // CB D1 0100
        gbc.setState(0x2b69, 0xe59, 0x5cc0, 0x633b, 0x2bae, 0x91b9, 0x0, 0x1);
        gbc.writeMem(0x2b69, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xe59);
        EXPECT(gbc.pc(), 0x2b6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0101
        gbc.setState(0xa1d2, 0xd34e, 0x36b0, 0x2d8c, 0xcb7e, 0x2116, 0x0, 0x0);
        gbc.writeMem(0xa1d2, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xd34e);
        EXPECT(gbc.pc(), 0xa1d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1d2), 0xcb);
        EXPECT(gbc.readMem(0xa1d3), 0xd1);
        // CB D1 0102
        gbc.setState(0x4da3, 0x4507, 0x3080, 0x653f, 0x3451, 0xb83, 0x0, 0x0);
        gbc.writeMem(0x4da3, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x4507);
        EXPECT(gbc.pc(), 0x4da5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0103
        gbc.setState(0xbb18, 0xfe5d, 0x34d0, 0xa344, 0x9a23, 0x6d56, 0x1, 0x1);
        gbc.writeMem(0xbb18, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xfe5d);
        EXPECT(gbc.pc(), 0xbb1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb18), 0xcb);
        EXPECT(gbc.readMem(0xbb19), 0xd1);
        // CB D1 0104
        gbc.setState(0xd8b6, 0x40bf, 0x20a0, 0x52b2, 0xe826, 0xe736, 0x1, 0x1);
        gbc.writeMem(0xd8b6, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x40bf);
        EXPECT(gbc.pc(), 0xd8b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8b6), 0xcb);
        EXPECT(gbc.readMem(0xd8b7), 0xd1);
        // CB D1 0105
        gbc.setState(0x5d1d, 0x477e, 0xd740, 0xf42b, 0xf317, 0x5f93, 0x1, 0x0);
        gbc.writeMem(0x5d1d, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x477e);
        EXPECT(gbc.pc(), 0x5d1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0106
        gbc.setState(0x7b52, 0x9081, 0x6be0, 0x6401, 0xdd51, 0x4af0, 0x1, 0x0);
        gbc.writeMem(0x7b52, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x9081);
        EXPECT(gbc.pc(), 0x7b54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0107
        gbc.setState(0x1c5c, 0xfae7, 0xfb70, 0xceb4, 0x5009, 0x3456, 0x1, 0x0);
        gbc.writeMem(0x1c5c, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xfae7);
        EXPECT(gbc.pc(), 0x1c5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0108
        gbc.setState(0xe57a, 0x8061, 0x2ef0, 0xe7ec, 0xb55a, 0xaabc, 0x1, 0x1);
        gbc.writeMem(0xe57a, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x8061);
        EXPECT(gbc.pc(), 0xe57c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe57a), 0xcb);
        EXPECT(gbc.readMem(0xe57b), 0xd1);
        // CB D1 0109
        gbc.setState(0xbf87, 0x797, 0x8030, 0xe49b, 0xf6c4, 0xb22, 0x0, 0x1);
        gbc.writeMem(0xbf87, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x797);
        EXPECT(gbc.pc(), 0xbf89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf87), 0xcb);
        EXPECT(gbc.readMem(0xbf88), 0xd1);
        // CB D1 010A
        gbc.setState(0x79ba, 0x5ccb, 0xb3b0, 0xe9d6, 0x41f7, 0xbcfb, 0x0, 0x0);
        gbc.writeMem(0x79ba, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x5ccb);
        EXPECT(gbc.pc(), 0x79bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 010B
        gbc.setState(0x6d8e, 0x64b4, 0x8dc0, 0xd71a, 0x5144, 0x5dc0, 0x1, 0x1);
        gbc.writeMem(0x6d8e, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x64b4);
        EXPECT(gbc.pc(), 0x6d90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 010C
        gbc.setState(0xd93d, 0xeeb5, 0x9310, 0x8a66, 0x4b05, 0x1b14, 0x1, 0x1);
        gbc.writeMem(0xd93d, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xeeb5);
        EXPECT(gbc.pc(), 0xd93f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd93d), 0xcb);
        EXPECT(gbc.readMem(0xd93e), 0xd1);
        // CB D1 010D
        gbc.setState(0x1d23, 0x2aea, 0x43a0, 0x97f8, 0x95af, 0xe904, 0x0, 0x0);
        gbc.writeMem(0x1d23, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x2aea);
        EXPECT(gbc.pc(), 0x1d25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 010E
        gbc.setState(0x72a, 0x96c, 0x7d60, 0x98c5, 0xea46, 0x274a, 0x1, 0x1);
        gbc.writeMem(0x72a, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x96c);
        EXPECT(gbc.pc(), 0x72c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 010F
        gbc.setState(0x665e, 0x9d94, 0xad10, 0xa7b7, 0x2088, 0xd9d6, 0x1, 0x1);
        gbc.writeMem(0x665e, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x9d94);
        EXPECT(gbc.pc(), 0x6660);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0110
        gbc.setState(0xce1d, 0x2965, 0xb110, 0xe503, 0x4fd6, 0xa0c2, 0x1, 0x0);
        gbc.writeMem(0xce1d, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x2965);
        EXPECT(gbc.pc(), 0xce1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce1d), 0xcb);
        EXPECT(gbc.readMem(0xce1e), 0xd1);
        // CB D1 0111
        gbc.setState(0x7bb0, 0x19a6, 0x2510, 0x7ac5, 0x376b, 0x8971, 0x0, 0x1);
        gbc.writeMem(0x7bb0, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x19a6);
        EXPECT(gbc.pc(), 0x7bb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0112
        gbc.setState(0x2d06, 0xc0e0, 0x6700, 0x55d6, 0x8716, 0xa30e, 0x1, 0x1);
        gbc.writeMem(0x2d06, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xc0e0);
        EXPECT(gbc.pc(), 0x2d08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0113
        gbc.setState(0xddc8, 0x6e3d, 0xafa0, 0x1852, 0x1c25, 0x753f, 0x1, 0x0);
        gbc.writeMem(0xddc8, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x6e3d);
        EXPECT(gbc.pc(), 0xddca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddc8), 0xcb);
        EXPECT(gbc.readMem(0xddc9), 0xd1);
        // CB D1 0114
        gbc.setState(0x254d, 0x1970, 0x97f0, 0x3b92, 0x3a9e, 0x624e, 0x1, 0x0);
        gbc.writeMem(0x254d, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x1970);
        EXPECT(gbc.pc(), 0x254f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0115
        gbc.setState(0xc706, 0xcec5, 0xfe70, 0x268e, 0xb359, 0x80ec, 0x0, 0x0);
        gbc.writeMem(0xc706, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xcec5);
        EXPECT(gbc.pc(), 0xc708);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc706), 0xcb);
        EXPECT(gbc.readMem(0xc707), 0xd1);
        // CB D1 0116
        gbc.setState(0x8bc5, 0x9e98, 0x2d20, 0xebb, 0xc722, 0x8139, 0x1, 0x1);
        gbc.writeMem(0x8bc5, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x9e98);
        EXPECT(gbc.pc(), 0x8bc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bc5), 0xcb);
        EXPECT(gbc.readMem(0x8bc6), 0xd1);
        // CB D1 0117
        gbc.setState(0x7092, 0x94a2, 0x1630, 0x57a2, 0xbc0e, 0xd847, 0x0, 0x1);
        gbc.writeMem(0x7092, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x94a2);
        EXPECT(gbc.pc(), 0x7094);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0118
        gbc.setState(0xd97f, 0x178, 0xa1c0, 0x7b03, 0xc08d, 0xbdb9, 0x1, 0x0);
        gbc.writeMem(0xd97f, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x178);
        EXPECT(gbc.pc(), 0xd981);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd97f), 0xcb);
        EXPECT(gbc.readMem(0xd980), 0xd1);
        // CB D1 0119
        gbc.setState(0xabdb, 0xd2e8, 0x26a0, 0xc3b5, 0x8e7b, 0x1f6c, 0x0, 0x1);
        gbc.writeMem(0xabdb, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xd2e8);
        EXPECT(gbc.pc(), 0xabdd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabdb), 0xcb);
        EXPECT(gbc.readMem(0xabdc), 0xd1);
        // CB D1 011A
        gbc.setState(0xe4be, 0x32bb, 0x4010, 0x365, 0x2503, 0xabc5, 0x0, 0x1);
        gbc.writeMem(0xe4be, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x32bb);
        EXPECT(gbc.pc(), 0xe4c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4be), 0xcb);
        EXPECT(gbc.readMem(0xe4bf), 0xd1);
        // CB D1 011B
        gbc.setState(0x3885, 0xbaea, 0x7790, 0xc975, 0x2ef7, 0x23b5, 0x0, 0x1);
        gbc.writeMem(0x3885, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xbaea);
        EXPECT(gbc.pc(), 0x3887);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 011C
        gbc.setState(0xd16d, 0x3cec, 0x6710, 0xf0ba, 0xbfc0, 0xff0f, 0x0, 0x0);
        gbc.writeMem(0xd16d, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x3cec);
        EXPECT(gbc.pc(), 0xd16f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd16d), 0xcb);
        EXPECT(gbc.readMem(0xd16e), 0xd1);
        // CB D1 011D
        gbc.setState(0x3478, 0x4db4, 0x2f30, 0xd8d9, 0xbb68, 0x2e76, 0x1, 0x0);
        gbc.writeMem(0x3478, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x4db4);
        EXPECT(gbc.pc(), 0x347a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 011E
        gbc.setState(0x3446, 0xab80, 0xe150, 0x7f42, 0x2831, 0xe616, 0x0, 0x0);
        gbc.writeMem(0x3446, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xab80);
        EXPECT(gbc.pc(), 0x3448);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 011F
        gbc.setState(0xe857, 0x68d8, 0xe820, 0x1db8, 0x1dfd, 0x90e4, 0x0, 0x1);
        gbc.writeMem(0xe857, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x68d8);
        EXPECT(gbc.pc(), 0xe859);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe857), 0xcb);
        EXPECT(gbc.readMem(0xe858), 0xd1);
        // CB D1 0120
        gbc.setState(0xb923, 0x9e56, 0x3f30, 0x48b8, 0x4ea4, 0xb3b7, 0x0, 0x1);
        gbc.writeMem(0xb923, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x9e56);
        EXPECT(gbc.pc(), 0xb925);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb923), 0xcb);
        EXPECT(gbc.readMem(0xb924), 0xd1);
        // CB D1 0121
        gbc.setState(0x38db, 0x4a43, 0xbc80, 0x862c, 0x2db5, 0x3f82, 0x0, 0x0);
        gbc.writeMem(0x38db, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x4a43);
        EXPECT(gbc.pc(), 0x38dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0122
        gbc.setState(0x4cc3, 0xc5b5, 0xfc10, 0x6b98, 0x23b0, 0x70bf, 0x1, 0x1);
        gbc.writeMem(0x4cc3, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xc5b5);
        EXPECT(gbc.pc(), 0x4cc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0123
        gbc.setState(0x8d71, 0xbe0d, 0xbac0, 0x6db, 0xe942, 0xda1e, 0x1, 0x0);
        gbc.writeMem(0x8d71, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xbe0d);
        EXPECT(gbc.pc(), 0x8d73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d71), 0xcb);
        EXPECT(gbc.readMem(0x8d72), 0xd1);
        // CB D1 0124
        gbc.setState(0xc371, 0x1af1, 0xb1b0, 0x8446, 0x656d, 0xcd0f, 0x1, 0x1);
        gbc.writeMem(0xc371, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x1af1);
        EXPECT(gbc.pc(), 0xc373);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc371), 0xcb);
        EXPECT(gbc.readMem(0xc372), 0xd1);
        // CB D1 0125
        gbc.setState(0x2c64, 0x8fc, 0x5fa0, 0xe6d8, 0x5e39, 0x98da, 0x0, 0x0);
        gbc.writeMem(0x2c64, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x8fc);
        EXPECT(gbc.pc(), 0x2c66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0126
        gbc.setState(0xac02, 0xefb2, 0x2b70, 0x9791, 0x729, 0xe7d5, 0x0, 0x1);
        gbc.writeMem(0xac02, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xefb2);
        EXPECT(gbc.pc(), 0xac04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac02), 0xcb);
        EXPECT(gbc.readMem(0xac03), 0xd1);
        // CB D1 0127
        gbc.setState(0xe533, 0xd755, 0xd20, 0xce52, 0xe65d, 0x45db, 0x1, 0x0);
        gbc.writeMem(0xe533, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xd755);
        EXPECT(gbc.pc(), 0xe535);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe533), 0xcb);
        EXPECT(gbc.readMem(0xe534), 0xd1);
        // CB D1 0128
        gbc.setState(0x623, 0xebfa, 0x86a0, 0x60c7, 0xc4ef, 0xdce3, 0x1, 0x1);
        gbc.writeMem(0x623, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xebfa);
        EXPECT(gbc.pc(), 0x625);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0129
        gbc.setState(0x4c08, 0xb977, 0x9090, 0x989f, 0x18bb, 0xc734, 0x1, 0x0);
        gbc.writeMem(0x4c08, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xb977);
        EXPECT(gbc.pc(), 0x4c0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 012A
        gbc.setState(0xb5aa, 0x67e8, 0x1640, 0x9da5, 0x9127, 0x2e56, 0x1, 0x1);
        gbc.writeMem(0xb5aa, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x67e8);
        EXPECT(gbc.pc(), 0xb5ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5aa), 0xcb);
        EXPECT(gbc.readMem(0xb5ab), 0xd1);
        // CB D1 012B
        gbc.setState(0x116d, 0x4a4a, 0x4410, 0xb18a, 0x6551, 0x50c6, 0x0, 0x1);
        gbc.writeMem(0x116d, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x4a4a);
        EXPECT(gbc.pc(), 0x116f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 012C
        gbc.setState(0xa7ef, 0x3247, 0xb080, 0x3ed1, 0x875b, 0x51e3, 0x1, 0x0);
        gbc.writeMem(0xa7ef, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x3247);
        EXPECT(gbc.pc(), 0xa7f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7ef), 0xcb);
        EXPECT(gbc.readMem(0xa7f0), 0xd1);
        // CB D1 012D
        gbc.setState(0x3bf0, 0x8ff1, 0x560, 0xf66b, 0xc25e, 0xb358, 0x0, 0x1);
        gbc.writeMem(0x3bf0, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x8ff1);
        EXPECT(gbc.pc(), 0x3bf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 012E
        gbc.setState(0x1fda, 0xc037, 0x7c60, 0x51a4, 0x755e, 0x9dd4, 0x1, 0x1);
        gbc.writeMem(0x1fda, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xc037);
        EXPECT(gbc.pc(), 0x1fdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 012F
        gbc.setState(0xd302, 0xe222, 0x67b0, 0x98be, 0x6599, 0x7b8f, 0x0, 0x1);
        gbc.writeMem(0xd302, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xe222);
        EXPECT(gbc.pc(), 0xd304);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd302), 0xcb);
        EXPECT(gbc.readMem(0xd303), 0xd1);
        // CB D1 0130
        gbc.setState(0x8946, 0x2740, 0xc4f0, 0xb2e9, 0xda06, 0x9d50, 0x1, 0x1);
        gbc.writeMem(0x8946, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x2740);
        EXPECT(gbc.pc(), 0x8948);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8946), 0xcb);
        EXPECT(gbc.readMem(0x8947), 0xd1);
        // CB D1 0132
        gbc.setState(0xd8f, 0xea7c, 0xf700, 0xedf6, 0x7e5f, 0x6de6, 0x1, 0x0);
        gbc.writeMem(0xd8f, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xea7c);
        EXPECT(gbc.pc(), 0xd91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0133
        gbc.setState(0xaf62, 0x6c6f, 0x95a0, 0x5f6f, 0xf49a, 0xf32f, 0x0, 0x1);
        gbc.writeMem(0xaf62, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x6c6f);
        EXPECT(gbc.pc(), 0xaf64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf62), 0xcb);
        EXPECT(gbc.readMem(0xaf63), 0xd1);
        // CB D1 0134
        gbc.setState(0x6c0e, 0x44f2, 0x3f0, 0x3110, 0x3d51, 0x8bb, 0x1, 0x1);
        gbc.writeMem(0x6c0e, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x44f2);
        EXPECT(gbc.pc(), 0x6c10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0135
        gbc.setState(0x655d, 0x8cc9, 0x7440, 0xe91e, 0xa4fd, 0x5e15, 0x1, 0x0);
        gbc.writeMem(0x655d, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x8cc9);
        EXPECT(gbc.pc(), 0x655f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0136
        gbc.setState(0xe5cd, 0x8596, 0x31a0, 0x7c4e, 0x9714, 0xc03, 0x0, 0x1);
        gbc.writeMem(0xe5cd, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x8596);
        EXPECT(gbc.pc(), 0xe5cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5cd), 0xcb);
        EXPECT(gbc.readMem(0xe5ce), 0xd1);
        // CB D1 0137
        gbc.setState(0x548b, 0x45ab, 0xa740, 0xe899, 0x6c6b, 0x2725, 0x1, 0x1);
        gbc.writeMem(0x548b, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x45ab);
        EXPECT(gbc.pc(), 0x548d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0138
        gbc.setState(0xd1b7, 0xff36, 0x8860, 0x3c82, 0x3ff6, 0x669d, 0x0, 0x0);
        gbc.writeMem(0xd1b7, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xff36);
        EXPECT(gbc.pc(), 0xd1b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1b7), 0xcb);
        EXPECT(gbc.readMem(0xd1b8), 0xd1);
        // CB D1 0139
        gbc.setState(0x87bf, 0x1396, 0x25b0, 0x445, 0xce94, 0x84c, 0x1, 0x0);
        gbc.writeMem(0x87bf, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x1396);
        EXPECT(gbc.pc(), 0x87c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87bf), 0xcb);
        EXPECT(gbc.readMem(0x87c0), 0xd1);
        // CB D1 013C
        gbc.setState(0xa06f, 0xaefe, 0x6c50, 0x9dab, 0xcad7, 0x8dd, 0x0, 0x0);
        gbc.writeMem(0xa06f, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xaefe);
        EXPECT(gbc.pc(), 0xa071);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa06f), 0xcb);
        EXPECT(gbc.readMem(0xa070), 0xd1);
        // CB D1 013D
        gbc.setState(0xde2d, 0x75a4, 0x37a0, 0x9484, 0x5844, 0xcce3, 0x1, 0x0);
        gbc.writeMem(0xde2d, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x75a4);
        EXPECT(gbc.pc(), 0xde2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde2d), 0xcb);
        EXPECT(gbc.readMem(0xde2e), 0xd1);
        // CB D1 013E
        gbc.setState(0x146d, 0x8f54, 0x2f10, 0x74a8, 0xd90d, 0xbfd3, 0x0, 0x0);
        gbc.writeMem(0x146d, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x8f54);
        EXPECT(gbc.pc(), 0x146f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 013F
        gbc.setState(0x7eb0, 0x9f81, 0x2540, 0x567d, 0x9415, 0x6af1, 0x1, 0x0);
        gbc.writeMem(0x7eb0, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x9f81);
        EXPECT(gbc.pc(), 0x7eb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0140
        gbc.setState(0x172b, 0xdd5c, 0xb950, 0x6295, 0x68ee, 0xf01f, 0x0, 0x1);
        gbc.writeMem(0x172b, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xdd5c);
        EXPECT(gbc.pc(), 0x172d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0141
        gbc.setState(0xb3e8, 0x75a8, 0x9220, 0xc62, 0xd318, 0x8ed0, 0x1, 0x1);
        gbc.writeMem(0xb3e8, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x75a8);
        EXPECT(gbc.pc(), 0xb3ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3e8), 0xcb);
        EXPECT(gbc.readMem(0xb3e9), 0xd1);
        // CB D1 0143
        gbc.setState(0xa1c, 0xdc9a, 0x9120, 0x8a76, 0x8970, 0x1861, 0x1, 0x1);
        gbc.writeMem(0xa1c, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xdc9a);
        EXPECT(gbc.pc(), 0xa1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0144
        gbc.setState(0x88b7, 0x3585, 0xff10, 0x8347, 0x9e44, 0xd318, 0x0, 0x0);
        gbc.writeMem(0x88b7, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x3585);
        EXPECT(gbc.pc(), 0x88b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88b7), 0xcb);
        EXPECT(gbc.readMem(0x88b8), 0xd1);
        // CB D1 0145
        gbc.setState(0xec5a, 0x4d3, 0x2030, 0xcff3, 0x72af, 0x1f8a, 0x1, 0x1);
        gbc.writeMem(0xec5a, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x4d3);
        EXPECT(gbc.pc(), 0xec5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec5a), 0xcb);
        EXPECT(gbc.readMem(0xec5b), 0xd1);
        // CB D1 0146
        gbc.setState(0x63c2, 0x3c75, 0xb6b0, 0xa117, 0xedbd, 0xd0f2, 0x0, 0x0);
        gbc.writeMem(0x63c2, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x3c75);
        EXPECT(gbc.pc(), 0x63c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0147
        gbc.setState(0xc94f, 0xfab9, 0x9630, 0xded6, 0xfe2a, 0x7ba0, 0x0, 0x1);
        gbc.writeMem(0xc94f, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xfab9);
        EXPECT(gbc.pc(), 0xc951);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc94f), 0xcb);
        EXPECT(gbc.readMem(0xc950), 0xd1);
        // CB D1 0148
        gbc.setState(0xd005, 0xff12, 0xa1c0, 0x3f86, 0xcc3b, 0x7f1d, 0x0, 0x0);
        gbc.writeMem(0xd005, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xff12);
        EXPECT(gbc.pc(), 0xd007);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd005), 0xcb);
        EXPECT(gbc.readMem(0xd006), 0xd1);
        // CB D1 0149
        gbc.setState(0xee2e, 0x9902, 0xf0d0, 0xbdbc, 0x74cf, 0x6ca, 0x0, 0x0);
        gbc.writeMem(0xee2e, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x9902);
        EXPECT(gbc.pc(), 0xee30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee2e), 0xcb);
        EXPECT(gbc.readMem(0xee2f), 0xd1);
        // CB D1 014A
        gbc.setState(0xee4f, 0x7ec5, 0xef30, 0xf531, 0x39e8, 0x6805, 0x0, 0x1);
        gbc.writeMem(0xee4f, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x7ec5);
        EXPECT(gbc.pc(), 0xee51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee4f), 0xcb);
        EXPECT(gbc.readMem(0xee50), 0xd1);
        // CB D1 014B
        gbc.setState(0xccdb, 0x6a26, 0xeaf0, 0xde5, 0x3c33, 0xb93f, 0x0, 0x1);
        gbc.writeMem(0xccdb, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x6a26);
        EXPECT(gbc.pc(), 0xccdd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccdb), 0xcb);
        EXPECT(gbc.readMem(0xccdc), 0xd1);
        // CB D1 014C
        gbc.setState(0xdd5f, 0xda54, 0x6520, 0xbc5a, 0x80e4, 0xe0f2, 0x0, 0x1);
        gbc.writeMem(0xdd5f, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xda54);
        EXPECT(gbc.pc(), 0xdd61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd5f), 0xcb);
        EXPECT(gbc.readMem(0xdd60), 0xd1);
        // CB D1 014D
        gbc.setState(0xb079, 0xcaf4, 0x8f90, 0x4bbd, 0xecc2, 0x2296, 0x1, 0x0);
        gbc.writeMem(0xb079, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xcaf4);
        EXPECT(gbc.pc(), 0xb07b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb079), 0xcb);
        EXPECT(gbc.readMem(0xb07a), 0xd1);
        // CB D1 014E
        gbc.setState(0x804b, 0x79f1, 0xd960, 0xbd3a, 0x9583, 0x57fe, 0x1, 0x0);
        gbc.writeMem(0x804b, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x79f1);
        EXPECT(gbc.pc(), 0x804d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x804b), 0xcb);
        EXPECT(gbc.readMem(0x804c), 0xd1);
        // CB D1 014F
        gbc.setState(0x1ba0, 0xb783, 0xc340, 0xc93f, 0xd3c4, 0xd85a, 0x0, 0x1);
        gbc.writeMem(0x1ba0, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xb783);
        EXPECT(gbc.pc(), 0x1ba2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0150
        gbc.setState(0x1bfd, 0x8796, 0x9460, 0xaca8, 0xd712, 0xf283, 0x1, 0x0);
        gbc.writeMem(0x1bfd, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x8796);
        EXPECT(gbc.pc(), 0x1bff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0151
        gbc.setState(0x905, 0x4a1f, 0xbf70, 0xf4dd, 0xaacc, 0xcca1, 0x0, 0x0);
        gbc.writeMem(0x905, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x4a1f);
        EXPECT(gbc.pc(), 0x907);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0153
        gbc.setState(0x3217, 0x449b, 0x8780, 0xf038, 0xcb48, 0xbf39, 0x1, 0x1);
        gbc.writeMem(0x3217, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x449b);
        EXPECT(gbc.pc(), 0x3219);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0154
        gbc.setState(0xa1e5, 0x88e0, 0xd8b0, 0x9b31, 0x10c8, 0xd52f, 0x1, 0x0);
        gbc.writeMem(0xa1e5, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x88e0);
        EXPECT(gbc.pc(), 0xa1e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1e5), 0xcb);
        EXPECT(gbc.readMem(0xa1e6), 0xd1);
        // CB D1 0155
        gbc.setState(0x2bb3, 0x3ca9, 0xe720, 0x8197, 0x33b9, 0xc24e, 0x0, 0x1);
        gbc.writeMem(0x2bb3, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x3ca9);
        EXPECT(gbc.pc(), 0x2bb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0156
        gbc.setState(0x1bd9, 0xf10, 0x9c30, 0x68cf, 0x5ace, 0x7592, 0x0, 0x0);
        gbc.writeMem(0x1bd9, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xf10);
        EXPECT(gbc.pc(), 0x1bdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0157
        gbc.setState(0x5691, 0x9358, 0x4410, 0xddf, 0x48b2, 0x4a0e, 0x1, 0x0);
        gbc.writeMem(0x5691, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x9358);
        EXPECT(gbc.pc(), 0x5693);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0158
        gbc.setState(0x7c36, 0x3ae4, 0xb5c0, 0x2d74, 0x8205, 0x9aad, 0x1, 0x1);
        gbc.writeMem(0x7c36, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x3ae4);
        EXPECT(gbc.pc(), 0x7c38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0159
        gbc.setState(0xc938, 0xd97, 0xa380, 0xa3de, 0x510, 0x40d0, 0x0, 0x0);
        gbc.writeMem(0xc938, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xd97);
        EXPECT(gbc.pc(), 0xc93a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc938), 0xcb);
        EXPECT(gbc.readMem(0xc939), 0xd1);
        // CB D1 015B
        gbc.setState(0x36f0, 0xf251, 0x98e0, 0xc90a, 0xf6fb, 0xeb6f, 0x1, 0x1);
        gbc.writeMem(0x36f0, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xf251);
        EXPECT(gbc.pc(), 0x36f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 015C
        gbc.setState(0x23a9, 0x3b11, 0x4910, 0x73f1, 0x88fb, 0x3dbb, 0x0, 0x1);
        gbc.writeMem(0x23a9, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x3b11);
        EXPECT(gbc.pc(), 0x23ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 015D
        gbc.setState(0x6613, 0xb9ae, 0xcde0, 0xb3b2, 0x469e, 0x3bde, 0x1, 0x1);
        gbc.writeMem(0x6613, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xb9ae);
        EXPECT(gbc.pc(), 0x6615);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 015E
        gbc.setState(0x4294, 0x97ff, 0x5a90, 0x4a34, 0xd4, 0xd1de, 0x1, 0x0);
        gbc.writeMem(0x4294, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x97ff);
        EXPECT(gbc.pc(), 0x4296);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 015F
        gbc.setState(0x6682, 0x5fc5, 0x8c10, 0x429b, 0x78e6, 0x42b1, 0x1, 0x1);
        gbc.writeMem(0x6682, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x5fc5);
        EXPECT(gbc.pc(), 0x6684);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0160
        gbc.setState(0x2e09, 0xdeaf, 0x3d30, 0x7e46, 0x72a0, 0xe74e, 0x1, 0x0);
        gbc.writeMem(0x2e09, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xdeaf);
        EXPECT(gbc.pc(), 0x2e0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0161
        gbc.setState(0xacf6, 0x92a6, 0xbdc0, 0x27ec, 0x1828, 0x233c, 0x0, 0x0);
        gbc.writeMem(0xacf6, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x92a6);
        EXPECT(gbc.pc(), 0xacf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacf6), 0xcb);
        EXPECT(gbc.readMem(0xacf7), 0xd1);
        // CB D1 0162
        gbc.setState(0x5cdd, 0xe714, 0x8810, 0xa458, 0x95e7, 0x238, 0x0, 0x1);
        gbc.writeMem(0x5cdd, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xe714);
        EXPECT(gbc.pc(), 0x5cdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0163
        gbc.setState(0x5965, 0xb951, 0x4200, 0x42a7, 0xb2d0, 0xfca3, 0x1, 0x0);
        gbc.writeMem(0x5965, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xb951);
        EXPECT(gbc.pc(), 0x5967);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0164
        gbc.setState(0xadf8, 0xffb6, 0xa8b0, 0xbd6f, 0x3812, 0xfbf8, 0x1, 0x0);
        gbc.writeMem(0xadf8, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xffb6);
        EXPECT(gbc.pc(), 0xadfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadf8), 0xcb);
        EXPECT(gbc.readMem(0xadf9), 0xd1);
        // CB D1 0165
        gbc.setState(0xd748, 0xd5d, 0x3ad0, 0xd496, 0x47fa, 0xc40a, 0x0, 0x1);
        gbc.writeMem(0xd748, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xd5d);
        EXPECT(gbc.pc(), 0xd74a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd748), 0xcb);
        EXPECT(gbc.readMem(0xd749), 0xd1);
        // CB D1 0167
        gbc.setState(0x6b92, 0xa064, 0x5920, 0x4b51, 0x8d81, 0x69df, 0x0, 0x0);
        gbc.writeMem(0x6b92, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xa064);
        EXPECT(gbc.pc(), 0x6b94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0168
        gbc.setState(0x9d65, 0x4909, 0x3c70, 0x77ac, 0x54d0, 0x2dfd, 0x1, 0x1);
        gbc.writeMem(0x9d65, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x4909);
        EXPECT(gbc.pc(), 0x9d67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d65), 0xcb);
        EXPECT(gbc.readMem(0x9d66), 0xd1);
        // CB D1 0169
        gbc.setState(0x3920, 0x7362, 0xceb0, 0xa43d, 0x1940, 0x54f0, 0x0, 0x1);
        gbc.writeMem(0x3920, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x7362);
        EXPECT(gbc.pc(), 0x3922);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 016C
        gbc.setState(0x2993, 0x21b6, 0xdfb0, 0xfdf2, 0x3d59, 0x9607, 0x1, 0x0);
        gbc.writeMem(0x2993, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x21b6);
        EXPECT(gbc.pc(), 0x2995);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 016D
        gbc.setState(0x5e05, 0x3600, 0x6e80, 0xfc05, 0x513b, 0xa65, 0x1, 0x1);
        gbc.writeMem(0x5e05, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x3600);
        EXPECT(gbc.pc(), 0x5e07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 016E
        gbc.setState(0x90f9, 0x8a29, 0xa270, 0xe969, 0xbbc5, 0x408f, 0x0, 0x0);
        gbc.writeMem(0x90f9, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x8a29);
        EXPECT(gbc.pc(), 0x90fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90f9), 0xcb);
        EXPECT(gbc.readMem(0x90fa), 0xd1);
        // CB D1 016F
        gbc.setState(0x6231, 0x889a, 0x5fd0, 0xf2df, 0xad08, 0x199a, 0x0, 0x0);
        gbc.writeMem(0x6231, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x889a);
        EXPECT(gbc.pc(), 0x6233);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0170
        gbc.setState(0xae7b, 0x7c47, 0x2650, 0x6961, 0xe9b9, 0x78dc, 0x0, 0x0);
        gbc.writeMem(0xae7b, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x7c47);
        EXPECT(gbc.pc(), 0xae7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae7b), 0xcb);
        EXPECT(gbc.readMem(0xae7c), 0xd1);
        // CB D1 0172
        gbc.setState(0xc793, 0x2075, 0x6650, 0x4869, 0xf9c0, 0xc18b, 0x0, 0x0);
        gbc.writeMem(0xc793, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x2075);
        EXPECT(gbc.pc(), 0xc795);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc793), 0xcb);
        EXPECT(gbc.readMem(0xc794), 0xd1);
        // CB D1 0174
        gbc.setState(0xbc05, 0x5a70, 0xcb30, 0xcb99, 0x690a, 0xe197, 0x0, 0x1);
        gbc.writeMem(0xbc05, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x5a70);
        EXPECT(gbc.pc(), 0xbc07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc05), 0xcb);
        EXPECT(gbc.readMem(0xbc06), 0xd1);
        // CB D1 0175
        gbc.setState(0xd5e, 0xdd11, 0xcd00, 0x627f, 0xb335, 0x8949, 0x1, 0x1);
        gbc.writeMem(0xd5e, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xdd11);
        EXPECT(gbc.pc(), 0xd60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0176
        gbc.setState(0x7, 0xeb5b, 0x8570, 0x63f9, 0x7067, 0x18a7, 0x0, 0x0);
        gbc.writeMem(0x7, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xeb5b);
        EXPECT(gbc.pc(), 0x9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0177
        gbc.setState(0x1255, 0x4819, 0xdda0, 0xad2d, 0xa92, 0x6cc2, 0x1, 0x1);
        gbc.writeMem(0x1255, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x4819);
        EXPECT(gbc.pc(), 0x1257);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0178
        gbc.setState(0x7950, 0xa44, 0x1a0, 0xf1c2, 0x19f2, 0x8b57, 0x0, 0x0);
        gbc.writeMem(0x7950, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xa44);
        EXPECT(gbc.pc(), 0x7952);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0179
        gbc.setState(0x1b4f, 0x8b9, 0xd120, 0x105d, 0xa58f, 0x7074, 0x1, 0x0);
        gbc.writeMem(0x1b4f, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x8b9);
        EXPECT(gbc.pc(), 0x1b51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 017A
        gbc.setState(0x9cb5, 0xee20, 0xa0c0, 0x2377, 0x2cd6, 0xc316, 0x0, 0x1);
        gbc.writeMem(0x9cb5, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xee20);
        EXPECT(gbc.pc(), 0x9cb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cb5), 0xcb);
        EXPECT(gbc.readMem(0x9cb6), 0xd1);
        // CB D1 017B
        gbc.setState(0x4d75, 0xff02, 0x27a0, 0x35d6, 0xbedd, 0x646d, 0x1, 0x0);
        gbc.writeMem(0x4d75, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xff02);
        EXPECT(gbc.pc(), 0x4d77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 017C
        gbc.setState(0xac82, 0x37cc, 0xa120, 0xbf68, 0x8e4c, 0xb994, 0x1, 0x0);
        gbc.writeMem(0xac82, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x37cc);
        EXPECT(gbc.pc(), 0xac84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac82), 0xcb);
        EXPECT(gbc.readMem(0xac83), 0xd1);
        // CB D1 017D
        gbc.setState(0x7244, 0x8a0e, 0x8030, 0x55b5, 0x4a5, 0xe633, 0x0, 0x1);
        gbc.writeMem(0x7244, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x8a0e);
        EXPECT(gbc.pc(), 0x7246);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 017E
        gbc.setState(0xe68d, 0xf148, 0xf170, 0x2019, 0x46d1, 0x7727, 0x0, 0x1);
        gbc.writeMem(0xe68d, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xf148);
        EXPECT(gbc.pc(), 0xe68f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe68d), 0xcb);
        EXPECT(gbc.readMem(0xe68e), 0xd1);
        // CB D1 017F
        gbc.setState(0x9443, 0xa03f, 0xb4c0, 0x7259, 0xf0b5, 0xc841, 0x0, 0x1);
        gbc.writeMem(0x9443, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xa03f);
        EXPECT(gbc.pc(), 0x9445);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9443), 0xcb);
        EXPECT(gbc.readMem(0x9444), 0xd1);
        // CB D1 0180
        gbc.setState(0x9693, 0xa5b6, 0x4510, 0x3ac3, 0x954a, 0x61c0, 0x1, 0x0);
        gbc.writeMem(0x9693, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xa5b6);
        EXPECT(gbc.pc(), 0x9695);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9693), 0xcb);
        EXPECT(gbc.readMem(0x9694), 0xd1);
        // CB D1 0181
        gbc.setState(0x1a0c, 0x197c, 0x58a0, 0xeefc, 0x44bf, 0xdd7c, 0x1, 0x0);
        gbc.writeMem(0x1a0c, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x197c);
        EXPECT(gbc.pc(), 0x1a0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0182
        gbc.setState(0x4bea, 0x1fbe, 0x53b0, 0xf0f9, 0x6dfb, 0x2876, 0x0, 0x0);
        gbc.writeMem(0x4bea, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x1fbe);
        EXPECT(gbc.pc(), 0x4bec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0183
        gbc.setState(0x655c, 0xec6, 0x1b0, 0x2e34, 0x8dad, 0xc3e0, 0x1, 0x1);
        gbc.writeMem(0x655c, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xec6);
        EXPECT(gbc.pc(), 0x655e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0184
        gbc.setState(0x5001, 0xdbd9, 0xe630, 0xb297, 0x703c, 0xfc20, 0x1, 0x1);
        gbc.writeMem(0x5001, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xdbd9);
        EXPECT(gbc.pc(), 0x5003);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0185
        gbc.setState(0xe36b, 0xc29d, 0x9da0, 0xb33c, 0x34c2, 0x1ff6, 0x0, 0x0);
        gbc.writeMem(0xe36b, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xc29d);
        EXPECT(gbc.pc(), 0xe36d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe36b), 0xcb);
        EXPECT(gbc.readMem(0xe36c), 0xd1);
        // CB D1 0186
        gbc.setState(0xba13, 0xa75, 0xb3d0, 0x2d93, 0x880f, 0x4cd8, 0x0, 0x1);
        gbc.writeMem(0xba13, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xa75);
        EXPECT(gbc.pc(), 0xba15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba13), 0xcb);
        EXPECT(gbc.readMem(0xba14), 0xd1);
        // CB D1 0187
        gbc.setState(0xd1c6, 0x73d9, 0x5030, 0xe05c, 0x97e4, 0x49b4, 0x0, 0x0);
        gbc.writeMem(0xd1c6, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x73d9);
        EXPECT(gbc.pc(), 0xd1c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1c6), 0xcb);
        EXPECT(gbc.readMem(0xd1c7), 0xd1);
        // CB D1 0188
        gbc.setState(0x6b3, 0x81b7, 0x5180, 0xdea0, 0xe51a, 0x4145, 0x0, 0x1);
        gbc.writeMem(0x6b3, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x81b7);
        EXPECT(gbc.pc(), 0x6b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 018B
        gbc.setState(0xce20, 0xde59, 0xd5c0, 0xb5e0, 0xdfe3, 0x9ec2, 0x1, 0x1);
        gbc.writeMem(0xce20, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xde59);
        EXPECT(gbc.pc(), 0xce22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce20), 0xcb);
        EXPECT(gbc.readMem(0xce21), 0xd1);
        // CB D1 018D
        gbc.setState(0xce17, 0xbedb, 0x7e0, 0x7b52, 0xc63a, 0xee5, 0x0, 0x0);
        gbc.writeMem(0xce17, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xbedb);
        EXPECT(gbc.pc(), 0xce19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce17), 0xcb);
        EXPECT(gbc.readMem(0xce18), 0xd1);
        // CB D1 018E
        gbc.setState(0x9257, 0xce46, 0xe1f0, 0x8ae2, 0x13dc, 0x388f, 0x0, 0x1);
        gbc.writeMem(0x9257, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xce46);
        EXPECT(gbc.pc(), 0x9259);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9257), 0xcb);
        EXPECT(gbc.readMem(0x9258), 0xd1);
        // CB D1 018F
        gbc.setState(0xab3f, 0xbb76, 0xd320, 0x3d28, 0xf10b, 0xab92, 0x0, 0x0);
        gbc.writeMem(0xab3f, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xbb76);
        EXPECT(gbc.pc(), 0xab41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab3f), 0xcb);
        EXPECT(gbc.readMem(0xab40), 0xd1);
        // CB D1 0191
        gbc.setState(0x469b, 0xecbb, 0x2bf0, 0x6fd9, 0x78ce, 0xcb6, 0x1, 0x0);
        gbc.writeMem(0x469b, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xecbb);
        EXPECT(gbc.pc(), 0x469d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0192
        gbc.setState(0x460e, 0xfbe9, 0x5850, 0x6b9c, 0x7219, 0x1928, 0x1, 0x0);
        gbc.writeMem(0x460e, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xfbe9);
        EXPECT(gbc.pc(), 0x4610);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0193
        gbc.setState(0x5a7d, 0x50d, 0xebd0, 0x2e93, 0xa5c7, 0x83e8, 0x1, 0x0);
        gbc.writeMem(0x5a7d, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x50d);
        EXPECT(gbc.pc(), 0x5a7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0194
        gbc.setState(0x4cc0, 0x6f25, 0xff60, 0x39a8, 0x699c, 0xf799, 0x1, 0x0);
        gbc.writeMem(0x4cc0, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x6f25);
        EXPECT(gbc.pc(), 0x4cc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0195
        gbc.setState(0x30b1, 0xeff4, 0xdc20, 0x29ac, 0x425e, 0xec59, 0x0, 0x1);
        gbc.writeMem(0x30b1, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xeff4);
        EXPECT(gbc.pc(), 0x30b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0196
        gbc.setState(0x8fc, 0x8532, 0xbb00, 0x6495, 0x102f, 0xd599, 0x0, 0x1);
        gbc.writeMem(0x8fc, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x8532);
        EXPECT(gbc.pc(), 0x8fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0197
        gbc.setState(0x4f97, 0x389b, 0x6a90, 0x308a, 0xe1fc, 0xc45a, 0x0, 0x1);
        gbc.writeMem(0x4f97, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x389b);
        EXPECT(gbc.pc(), 0x4f99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0198
        gbc.setState(0x74f2, 0x33d9, 0xf8e0, 0xfddc, 0xabd1, 0xaace, 0x0, 0x1);
        gbc.writeMem(0x74f2, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x33d9);
        EXPECT(gbc.pc(), 0x74f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0199
        gbc.setState(0x4a46, 0x7395, 0xe60, 0xdc2c, 0x8158, 0x822e, 0x1, 0x0);
        gbc.writeMem(0x4a46, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x7395);
        EXPECT(gbc.pc(), 0x4a48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 019A
        gbc.setState(0xba1e, 0x9fd1, 0xe650, 0x2af5, 0x881b, 0x2da1, 0x0, 0x0);
        gbc.writeMem(0xba1e, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x9fd1);
        EXPECT(gbc.pc(), 0xba20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba1e), 0xcb);
        EXPECT(gbc.readMem(0xba1f), 0xd1);
        // CB D1 019B
        gbc.setState(0x9e45, 0x169c, 0x6250, 0xaaec, 0x5b50, 0xacf0, 0x0, 0x0);
        gbc.writeMem(0x9e45, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x169c);
        EXPECT(gbc.pc(), 0x9e47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e45), 0xcb);
        EXPECT(gbc.readMem(0x9e46), 0xd1);
        // CB D1 019C
        gbc.setState(0x1e5f, 0x98b2, 0x6810, 0xbcf1, 0xae81, 0x1d4f, 0x0, 0x0);
        gbc.writeMem(0x1e5f, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x98b2);
        EXPECT(gbc.pc(), 0x1e61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 019D
        gbc.setState(0xe920, 0x207e, 0x4380, 0x980e, 0x786f, 0xc64c, 0x1, 0x0);
        gbc.writeMem(0xe920, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x207e);
        EXPECT(gbc.pc(), 0xe922);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe920), 0xcb);
        EXPECT(gbc.readMem(0xe921), 0xd1);
        // CB D1 019E
        gbc.setState(0xd09f, 0x511a, 0xd770, 0x4067, 0xee04, 0x209e, 0x1, 0x0);
        gbc.writeMem(0xd09f, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x511a);
        EXPECT(gbc.pc(), 0xd0a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd09f), 0xcb);
        EXPECT(gbc.readMem(0xd0a0), 0xd1);
        // CB D1 019F
        gbc.setState(0xecaf, 0xc365, 0x50e0, 0x7613, 0xe2ee, 0x6ba, 0x1, 0x0);
        gbc.writeMem(0xecaf, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xc365);
        EXPECT(gbc.pc(), 0xecb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecaf), 0xcb);
        EXPECT(gbc.readMem(0xecb0), 0xd1);
        // CB D1 01A0
        gbc.setState(0x5a31, 0x9f81, 0x1d90, 0xfa06, 0xb84f, 0xb970, 0x1, 0x0);
        gbc.writeMem(0x5a31, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x9f81);
        EXPECT(gbc.pc(), 0x5a33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 01A2
        gbc.setState(0x4d2c, 0xcf5, 0x8b10, 0x13c1, 0x4a3c, 0xafe9, 0x0, 0x0);
        gbc.writeMem(0x4d2c, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xcf5);
        EXPECT(gbc.pc(), 0x4d2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 01A3
        gbc.setState(0x818d, 0x980f, 0x3de0, 0x42, 0x8b07, 0x8ca7, 0x1, 0x0);
        gbc.writeMem(0x818d, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x980f);
        EXPECT(gbc.pc(), 0x818f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x818d), 0xcb);
        EXPECT(gbc.readMem(0x818e), 0xd1);
        // CB D1 01A5
        gbc.setState(0xa49, 0xe721, 0x7100, 0xe6e6, 0x760a, 0x967d, 0x1, 0x1);
        gbc.writeMem(0xa49, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xe721);
        EXPECT(gbc.pc(), 0xa4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 01A7
        gbc.setState(0xd0bc, 0xd591, 0x3600, 0x1a9d, 0x50df, 0x7389, 0x0, 0x0);
        gbc.writeMem(0xd0bc, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xd591);
        EXPECT(gbc.pc(), 0xd0be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0bc), 0xcb);
        EXPECT(gbc.readMem(0xd0bd), 0xd1);
        // CB D1 01A8
        gbc.setState(0xe23e, 0xd352, 0xea30, 0xfd6f, 0x6bc7, 0x9b5e, 0x1, 0x1);
        gbc.writeMem(0xe23e, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xd352);
        EXPECT(gbc.pc(), 0xe240);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe23e), 0xcb);
        EXPECT(gbc.readMem(0xe23f), 0xd1);
        // CB D1 01A9
        gbc.setState(0x4e61, 0x7b12, 0x86f0, 0x47ac, 0x63aa, 0xcab6, 0x1, 0x0);
        gbc.writeMem(0x4e61, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x7b12);
        EXPECT(gbc.pc(), 0x4e63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 01AA
        gbc.setState(0x4225, 0xb1b2, 0x22f0, 0x226, 0x4b79, 0xc034, 0x0, 0x0);
        gbc.writeMem(0x4225, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xb1b2);
        EXPECT(gbc.pc(), 0x4227);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 01AB
        gbc.setState(0x387a, 0xa803, 0xf840, 0x4e51, 0x745a, 0x17e8, 0x0, 0x0);
        gbc.writeMem(0x387a, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xa803);
        EXPECT(gbc.pc(), 0x387c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 01AC
        gbc.setState(0xcff9, 0x5ca7, 0x20a0, 0x7c75, 0x6a5, 0x65aa, 0x1, 0x1);
        gbc.writeMem(0xcff9, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x5ca7);
        EXPECT(gbc.pc(), 0xcffb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcff9), 0xcb);
        EXPECT(gbc.readMem(0xcffa), 0xd1);
        // CB D1 01AD
        gbc.setState(0x8f84, 0xcc44, 0xb6b0, 0x2ef8, 0x9093, 0x1804, 0x1, 0x1);
        gbc.writeMem(0x8f84, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xcc44);
        EXPECT(gbc.pc(), 0x8f86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f84), 0xcb);
        EXPECT(gbc.readMem(0x8f85), 0xd1);
        // CB D1 01AE
        gbc.setState(0x1039, 0x7586, 0xd270, 0x9cd1, 0xe340, 0xa8ab, 0x1, 0x0);
        gbc.writeMem(0x1039, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x7586);
        EXPECT(gbc.pc(), 0x103b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 01AF
        gbc.setState(0x50d9, 0x41d6, 0x2b50, 0x8e65, 0x624c, 0xea9c, 0x0, 0x0);
        gbc.writeMem(0x50d9, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x41d6);
        EXPECT(gbc.pc(), 0x50db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 01B0
        gbc.setState(0xc2da, 0x1bef, 0xde40, 0xe569, 0x4b5d, 0xdcb5, 0x1, 0x0);
        gbc.writeMem(0xc2da, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x1bef);
        EXPECT(gbc.pc(), 0xc2dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2da), 0xcb);
        EXPECT(gbc.readMem(0xc2db), 0xd1);
        // CB D1 01B1
        gbc.setState(0x17fa, 0xe610, 0xa5f0, 0x347a, 0x3045, 0x6f7d, 0x0, 0x1);
        gbc.writeMem(0x17fa, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xe610);
        EXPECT(gbc.pc(), 0x17fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 01B2
        gbc.setState(0x65c1, 0x4633, 0x4630, 0xcc4e, 0xe49a, 0x1462, 0x0, 0x1);
        gbc.writeMem(0x65c1, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x4633);
        EXPECT(gbc.pc(), 0x65c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 01B3
        gbc.setState(0x2ef5, 0x8e61, 0x28e0, 0x64b3, 0x353b, 0x9030, 0x1, 0x0);
        gbc.writeMem(0x2ef5, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x8e61);
        EXPECT(gbc.pc(), 0x2ef7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 01B4
        gbc.setState(0xd085, 0x34dc, 0xe240, 0xd34c, 0x8dd4, 0x9a30, 0x1, 0x0);
        gbc.writeMem(0xd085, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x34dc);
        EXPECT(gbc.pc(), 0xd087);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd085), 0xcb);
        EXPECT(gbc.readMem(0xd086), 0xd1);
        // CB D1 01B5
        gbc.setState(0xa82c, 0xe3c9, 0xd6c0, 0x407a, 0x24e9, 0xc6e9, 0x1, 0x1);
        gbc.writeMem(0xa82c, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xe3c9);
        EXPECT(gbc.pc(), 0xa82e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa82c), 0xcb);
        EXPECT(gbc.readMem(0xa82d), 0xd1);
        // CB D1 01B6
        gbc.setState(0x7064, 0x5c46, 0xa2c0, 0x54a3, 0x372e, 0x6df4, 0x1, 0x0);
        gbc.writeMem(0x7064, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x5c46);
        EXPECT(gbc.pc(), 0x7066);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 01B7
        gbc.setState(0x7834, 0x9bfe, 0xb640, 0x851c, 0x85f4, 0xbbce, 0x0, 0x0);
        gbc.writeMem(0x7834, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x9bfe);
        EXPECT(gbc.pc(), 0x7836);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 01B8
        gbc.setState(0xa99c, 0x2f0b, 0x4260, 0xa922, 0xd49a, 0x7e70, 0x1, 0x1);
        gbc.writeMem(0xa99c, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x2f0b);
        EXPECT(gbc.pc(), 0xa99e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa99c), 0xcb);
        EXPECT(gbc.readMem(0xa99d), 0xd1);
        // CB D1 01B9
        gbc.setState(0x949a, 0x10fd, 0x42e0, 0x8fb, 0x58bf, 0x5b7f, 0x1, 0x0);
        gbc.writeMem(0x949a, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x10fd);
        EXPECT(gbc.pc(), 0x949c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x949a), 0xcb);
        EXPECT(gbc.readMem(0x949b), 0xd1);
        // CB D1 01BA
        gbc.setState(0x2176, 0x418, 0x75e0, 0x5423, 0x3d35, 0x91c8, 0x1, 0x0);
        gbc.writeMem(0x2176, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x418);
        EXPECT(gbc.pc(), 0x2178);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 01BB
        gbc.setState(0x70f9, 0x1dbd, 0x7600, 0x38c, 0x6af8, 0xe678, 0x1, 0x1);
        gbc.writeMem(0x70f9, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x1dbd);
        EXPECT(gbc.pc(), 0x70fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 01BC
        gbc.setState(0x7773, 0x5200, 0x8cf0, 0xc398, 0x3800, 0xec39, 0x1, 0x0);
        gbc.writeMem(0x7773, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x5200);
        EXPECT(gbc.pc(), 0x7775);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 01BD
        gbc.setState(0x939a, 0xcd2c, 0xb720, 0x13b1, 0x6fe0, 0x41b8, 0x1, 0x0);
        gbc.writeMem(0x939a, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xcd2c);
        EXPECT(gbc.pc(), 0x939c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x939a), 0xcb);
        EXPECT(gbc.readMem(0x939b), 0xd1);
        // CB D1 01BE
        gbc.setState(0x703a, 0x1a80, 0x6430, 0x51f9, 0xcc2, 0x1339, 0x1, 0x1);
        gbc.writeMem(0x703a, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x1a80);
        EXPECT(gbc.pc(), 0x703c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 01C0
        gbc.setState(0xe3a3, 0x55a1, 0xcf10, 0x6a15, 0xb82c, 0x3c77, 0x1, 0x0);
        gbc.writeMem(0xe3a3, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x55a1);
        EXPECT(gbc.pc(), 0xe3a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3a3), 0xcb);
        EXPECT(gbc.readMem(0xe3a4), 0xd1);
        // CB D1 01C2
        gbc.setState(0x9d33, 0xfd2b, 0xec20, 0xf7e, 0x2540, 0xdc73, 0x1, 0x1);
        gbc.writeMem(0x9d33, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xfd2b);
        EXPECT(gbc.pc(), 0x9d35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d33), 0xcb);
        EXPECT(gbc.readMem(0x9d34), 0xd1);
        // CB D1 01C4
        gbc.setState(0x80d8, 0xad2c, 0xf0f0, 0xb3e8, 0x12c8, 0x284c, 0x1, 0x0);
        gbc.writeMem(0x80d8, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xad2c);
        EXPECT(gbc.pc(), 0x80da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80d8), 0xcb);
        EXPECT(gbc.readMem(0x80d9), 0xd1);
        // CB D1 01C5
        gbc.setState(0x61ff, 0x4634, 0xb7b0, 0x3c6, 0x54e3, 0x9844, 0x1, 0x0);
        gbc.writeMem(0x61ff, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x4634);
        EXPECT(gbc.pc(), 0x6201);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 01C6
        gbc.setState(0xb343, 0xb9c5, 0xce00, 0xa084, 0xcf, 0xd887, 0x1, 0x0);
        gbc.writeMem(0xb343, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xb9c5);
        EXPECT(gbc.pc(), 0xb345);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb343), 0xcb);
        EXPECT(gbc.readMem(0xb344), 0xd1);
        // CB D1 01C7
        gbc.setState(0x6b22, 0xbe1a, 0xae20, 0xd87f, 0xb6d7, 0x8010, 0x1, 0x0);
        gbc.writeMem(0x6b22, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xbe1a);
        EXPECT(gbc.pc(), 0x6b24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 01C8
        gbc.setState(0x8b9a, 0xecf5, 0x2340, 0x19e8, 0x29f0, 0xb743, 0x0, 0x1);
        gbc.writeMem(0x8b9a, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xecf5);
        EXPECT(gbc.pc(), 0x8b9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b9a), 0xcb);
        EXPECT(gbc.readMem(0x8b9b), 0xd1);
        // CB D1 01C9
        gbc.setState(0x4492, 0x765c, 0xe530, 0x375d, 0xc5df, 0xf23d, 0x0, 0x0);
        gbc.writeMem(0x4492, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x765c);
        EXPECT(gbc.pc(), 0x4494);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 01CA
        gbc.setState(0x87f8, 0x6c93, 0x45f0, 0x7eba, 0x747d, 0x602a, 0x1, 0x0);
        gbc.writeMem(0x87f8, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x6c93);
        EXPECT(gbc.pc(), 0x87fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87f8), 0xcb);
        EXPECT(gbc.readMem(0x87f9), 0xd1);
        // CB D1 01CB
        gbc.setState(0x8e9d, 0x99d9, 0x8f00, 0xd1c1, 0x4cf6, 0x50e5, 0x0, 0x0);
        gbc.writeMem(0x8e9d, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x99d9);
        EXPECT(gbc.pc(), 0x8e9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e9d), 0xcb);
        EXPECT(gbc.readMem(0x8e9e), 0xd1);
        // CB D1 01CC
        gbc.setState(0xea20, 0xf4b6, 0xfc50, 0x8e04, 0x8ca, 0x5486, 0x1, 0x0);
        gbc.writeMem(0xea20, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xf4b6);
        EXPECT(gbc.pc(), 0xea22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea20), 0xcb);
        EXPECT(gbc.readMem(0xea21), 0xd1);
        // CB D1 01CD
        gbc.setState(0x52ac, 0x88cc, 0xcb90, 0x8b1e, 0x314d, 0x20c9, 0x0, 0x0);
        gbc.writeMem(0x52ac, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x88cc);
        EXPECT(gbc.pc(), 0x52ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 01CE
        gbc.setState(0xead1, 0x3e22, 0xe9f0, 0x5a5d, 0x717f, 0xa2a8, 0x1, 0x0);
        gbc.writeMem(0xead1, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x3e22);
        EXPECT(gbc.pc(), 0xead3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xead1), 0xcb);
        EXPECT(gbc.readMem(0xead2), 0xd1);
        // CB D1 01CF
        gbc.setState(0x88b6, 0x61c6, 0xed50, 0x729b, 0xa74a, 0x5580, 0x0, 0x1);
        gbc.writeMem(0x88b6, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x61c6);
        EXPECT(gbc.pc(), 0x88b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88b6), 0xcb);
        EXPECT(gbc.readMem(0x88b7), 0xd1);
        // CB D1 01D0
        gbc.setState(0x999e, 0xf92a, 0x60e0, 0x54c4, 0x8925, 0xe46f, 0x0, 0x0);
        gbc.writeMem(0x999e, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xf92a);
        EXPECT(gbc.pc(), 0x99a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x999e), 0xcb);
        EXPECT(gbc.readMem(0x999f), 0xd1);
        // CB D1 01D1
        gbc.setState(0x8948, 0x968e, 0x74f0, 0xffc9, 0x1c31, 0x94cc, 0x1, 0x0);
        gbc.writeMem(0x8948, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x968e);
        EXPECT(gbc.pc(), 0x894a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8948), 0xcb);
        EXPECT(gbc.readMem(0x8949), 0xd1);
        // CB D1 01D3
        gbc.setState(0x4be1, 0x6988, 0x7e90, 0x66ad, 0x9dc, 0x185, 0x0, 0x0);
        gbc.writeMem(0x4be1, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x6988);
        EXPECT(gbc.pc(), 0x4be3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 01D4
        gbc.setState(0x6767, 0xb8ba, 0x5c0, 0xbe0a, 0x637, 0xc7c8, 0x0, 0x0);
        gbc.writeMem(0x6767, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xb8ba);
        EXPECT(gbc.pc(), 0x6769);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 01D5
        gbc.setState(0xa04e, 0x7177, 0x32f0, 0x80ae, 0x25c, 0xd589, 0x0, 0x1);
        gbc.writeMem(0xa04e, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x7177);
        EXPECT(gbc.pc(), 0xa050);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa04e), 0xcb);
        EXPECT(gbc.readMem(0xa04f), 0xd1);
        // CB D1 01D6
        gbc.setState(0x978d, 0x8516, 0xcbf0, 0xb34f, 0xc2c6, 0x749d, 0x0, 0x1);
        gbc.writeMem(0x978d, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x8516);
        EXPECT(gbc.pc(), 0x978f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x978d), 0xcb);
        EXPECT(gbc.readMem(0x978e), 0xd1);
        // CB D1 01D7
        gbc.setState(0xc0b0, 0x3d4d, 0x59b0, 0x5bbe, 0x9fde, 0x122, 0x0, 0x1);
        gbc.writeMem(0xc0b0, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x3d4d);
        EXPECT(gbc.pc(), 0xc0b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0b0), 0xcb);
        EXPECT(gbc.readMem(0xc0b1), 0xd1);
        // CB D1 01D8
        gbc.setState(0x4468, 0xea78, 0x9ba0, 0x1f80, 0x4bdd, 0xd395, 0x0, 0x1);
        gbc.writeMem(0x4468, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xea78);
        EXPECT(gbc.pc(), 0x446a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 01D9
        gbc.setState(0x2881, 0x538b, 0xbf50, 0x3a26, 0x4049, 0xb8f5, 0x1, 0x0);
        gbc.writeMem(0x2881, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x538b);
        EXPECT(gbc.pc(), 0x2883);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 01DA
        gbc.setState(0x72b, 0xb2c3, 0xa200, 0xa051, 0xa902, 0xf81e, 0x0, 0x0);
        gbc.writeMem(0x72b, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xb2c3);
        EXPECT(gbc.pc(), 0x72d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 01DB
        gbc.setState(0x5f11, 0xd34e, 0xf350, 0xd57a, 0x4376, 0x3b79, 0x1, 0x0);
        gbc.writeMem(0x5f11, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xd34e);
        EXPECT(gbc.pc(), 0x5f13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 01DC
        gbc.setState(0xeb2f, 0xe53b, 0x3e70, 0x5196, 0x6881, 0xaf7b, 0x0, 0x0);
        gbc.writeMem(0xeb2f, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xe53b);
        EXPECT(gbc.pc(), 0xeb31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb2f), 0xcb);
        EXPECT(gbc.readMem(0xeb30), 0xd1);
        // CB D1 01DD
        gbc.setState(0xcd70, 0x80b7, 0x6a10, 0xbaa9, 0x396d, 0xbd74, 0x1, 0x1);
        gbc.writeMem(0xcd70, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x80b7);
        EXPECT(gbc.pc(), 0xcd72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd70), 0xcb);
        EXPECT(gbc.readMem(0xcd71), 0xd1);
        // CB D1 01DF
        gbc.setState(0xb7fd, 0xb77f, 0xdfd0, 0x9634, 0xa141, 0x290f, 0x1, 0x0);
        gbc.writeMem(0xb7fd, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xb77f);
        EXPECT(gbc.pc(), 0xb7ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7fd), 0xcb);
        EXPECT(gbc.readMem(0xb7fe), 0xd1);
        // CB D1 01E0
        gbc.setState(0x6eac, 0x356f, 0xfbb0, 0x4859, 0xbc8f, 0x7c5f, 0x0, 0x1);
        gbc.writeMem(0x6eac, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x356f);
        EXPECT(gbc.pc(), 0x6eae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 01E1
        gbc.setState(0x8793, 0xddc6, 0x1690, 0x66b, 0xe991, 0x2773, 0x0, 0x0);
        gbc.writeMem(0x8793, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xddc6);
        EXPECT(gbc.pc(), 0x8795);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8793), 0xcb);
        EXPECT(gbc.readMem(0x8794), 0xd1);
        // CB D1 01E2
        gbc.setState(0x9947, 0x9816, 0x4720, 0x790, 0x6c51, 0x107a, 0x1, 0x0);
        gbc.writeMem(0x9947, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x9816);
        EXPECT(gbc.pc(), 0x9949);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9947), 0xcb);
        EXPECT(gbc.readMem(0x9948), 0xd1);
        // CB D1 01E3
        gbc.setState(0x7409, 0x2fbe, 0x7d0, 0x8c0c, 0x3ba8, 0x4a1a, 0x0, 0x0);
        gbc.writeMem(0x7409, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x2fbe);
        EXPECT(gbc.pc(), 0x740b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 01E4
        gbc.setState(0x6ef5, 0x6c97, 0xe030, 0xf9fa, 0x20bd, 0x3513, 0x0, 0x1);
        gbc.writeMem(0x6ef5, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x6c97);
        EXPECT(gbc.pc(), 0x6ef7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 01E5
        gbc.setState(0xa4bd, 0x79f5, 0xf500, 0xd7b3, 0x847e, 0xaec5, 0x1, 0x1);
        gbc.writeMem(0xa4bd, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x79f5);
        EXPECT(gbc.pc(), 0xa4bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4bd), 0xcb);
        EXPECT(gbc.readMem(0xa4be), 0xd1);
        // CB D1 01E6
        gbc.setState(0x3a68, 0x7168, 0xc640, 0x73df, 0x22bc, 0xa579, 0x0, 0x1);
        gbc.writeMem(0x3a68, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x7168);
        EXPECT(gbc.pc(), 0x3a6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 01E7
        gbc.setState(0x5848, 0xb8d6, 0x6260, 0xf55a, 0x811, 0x6b74, 0x0, 0x1);
        gbc.writeMem(0x5848, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xb8d6);
        EXPECT(gbc.pc(), 0x584a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 01E8
        gbc.setState(0xd132, 0xe7e4, 0xb730, 0xe6e3, 0x19db, 0xeb77, 0x1, 0x0);
        gbc.writeMem(0xd132, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xe7e4);
        EXPECT(gbc.pc(), 0xd134);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd132), 0xcb);
        EXPECT(gbc.readMem(0xd133), 0xd1);
        // CB D1 01E9
        gbc.setState(0xb915, 0x4588, 0x230, 0xfb26, 0x6402, 0x1bc8, 0x0, 0x1);
        gbc.writeMem(0xb915, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x4588);
        EXPECT(gbc.pc(), 0xb917);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb915), 0xcb);
        EXPECT(gbc.readMem(0xb916), 0xd1);
        // CB D1 01EA
        gbc.setState(0x4ce9, 0x53b, 0x90b0, 0xce8c, 0xe967, 0xaaa1, 0x0, 0x0);
        gbc.writeMem(0x4ce9, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x53b);
        EXPECT(gbc.pc(), 0x4ceb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 01EB
        gbc.setState(0x98db, 0xa71d, 0xd10, 0x1e39, 0x3513, 0x491b, 0x1, 0x1);
        gbc.writeMem(0x98db, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xa71d);
        EXPECT(gbc.pc(), 0x98dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98db), 0xcb);
        EXPECT(gbc.readMem(0x98dc), 0xd1);
        // CB D1 01EC
        gbc.setState(0x11b5, 0x43a3, 0x64c0, 0x42aa, 0xa55d, 0xf5c8, 0x0, 0x0);
        gbc.writeMem(0x11b5, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x43a3);
        EXPECT(gbc.pc(), 0x11b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 01EE
        gbc.setState(0x1f34, 0x74e5, 0x1dd0, 0xc1be, 0x7ea9, 0x4778, 0x0, 0x1);
        gbc.writeMem(0x1f34, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x74e5);
        EXPECT(gbc.pc(), 0x1f36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 01EF
        gbc.setState(0x4fa5, 0x83cd, 0xc970, 0xa7d2, 0xb34, 0xa35b, 0x1, 0x1);
        gbc.writeMem(0x4fa5, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x83cd);
        EXPECT(gbc.pc(), 0x4fa7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 01F0
        gbc.setState(0xc673, 0xffb, 0x4150, 0x7d9b, 0x6ca9, 0x6fe2, 0x1, 0x1);
        gbc.writeMem(0xc673, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xffb);
        EXPECT(gbc.pc(), 0xc675);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc673), 0xcb);
        EXPECT(gbc.readMem(0xc674), 0xd1);
        // CB D1 01F1
        gbc.setState(0xbef3, 0x873a, 0x1c70, 0x5c10, 0xea53, 0xebd1, 0x1, 0x0);
        gbc.writeMem(0xbef3, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x873a);
        EXPECT(gbc.pc(), 0xbef5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbef3), 0xcb);
        EXPECT(gbc.readMem(0xbef4), 0xd1);
        // CB D1 01F2
        gbc.setState(0xc3d5, 0x37f1, 0x8c10, 0xbe30, 0xf48, 0x347c, 0x0, 0x0);
        gbc.writeMem(0xc3d5, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x37f1);
        EXPECT(gbc.pc(), 0xc3d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3d5), 0xcb);
        EXPECT(gbc.readMem(0xc3d6), 0xd1);
        // CB D1 01F3
        gbc.setState(0x7993, 0x5b42, 0x8e60, 0x3380, 0x3121, 0x2f88, 0x1, 0x0);
        gbc.writeMem(0x7993, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x5b42);
        EXPECT(gbc.pc(), 0x7995);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 01F4
        gbc.setState(0x7c04, 0x79cf, 0xd7c0, 0xcfc7, 0x3183, 0x2117, 0x1, 0x1);
        gbc.writeMem(0x7c04, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x79cf);
        EXPECT(gbc.pc(), 0x7c06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 01F5
        gbc.setState(0xe3cd, 0x6e70, 0xe960, 0xba28, 0xab8d, 0xb3ac, 0x1, 0x1);
        gbc.writeMem(0xe3cd, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x6e70);
        EXPECT(gbc.pc(), 0xe3cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3cd), 0xcb);
        EXPECT(gbc.readMem(0xe3ce), 0xd1);
        // CB D1 01F6
        gbc.setState(0x942c, 0x7e08, 0x85c0, 0x428b, 0xcf7e, 0xa3dc, 0x0, 0x0);
        gbc.writeMem(0x942c, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x7e08);
        EXPECT(gbc.pc(), 0x942e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x942c), 0xcb);
        EXPECT(gbc.readMem(0x942d), 0xd1);
        // CB D1 01F7
        gbc.setState(0xa99f, 0x5866, 0x71b0, 0x2201, 0x5814, 0xbab8, 0x1, 0x0);
        gbc.writeMem(0xa99f, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x5866);
        EXPECT(gbc.pc(), 0xa9a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa99f), 0xcb);
        EXPECT(gbc.readMem(0xa9a0), 0xd1);
        // CB D1 01F8
        gbc.setState(0xdfb4, 0xb12b, 0xa050, 0x4a17, 0xb3f6, 0x4779, 0x0, 0x0);
        gbc.writeMem(0xdfb4, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xb12b);
        EXPECT(gbc.pc(), 0xdfb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfb4), 0xcb);
        EXPECT(gbc.readMem(0xdfb5), 0xd1);
        // CB D1 01F9
        gbc.setState(0x85dd, 0x5ac1, 0x14f0, 0x208e, 0x4710, 0xd2b4, 0x0, 0x0);
        gbc.writeMem(0x85dd, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x5ac1);
        EXPECT(gbc.pc(), 0x85df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85dd), 0xcb);
        EXPECT(gbc.readMem(0x85de), 0xd1);
        // CB D1 01FB
        gbc.setState(0x7af6, 0xf850, 0xe5a0, 0x2db1, 0x2c15, 0x834d, 0x1, 0x1);
        gbc.writeMem(0x7af6, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xf850);
        EXPECT(gbc.pc(), 0x7af8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 01FC
        gbc.setState(0x12fe, 0x192b, 0x9120, 0xe36d, 0x76f3, 0x37d2, 0x0, 0x0);
        gbc.writeMem(0x12fe, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x192b);
        EXPECT(gbc.pc(), 0x1300);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 01FD
        gbc.setState(0x2bb5, 0xb467, 0xd260, 0x841, 0xc886, 0xa4fa, 0x0, 0x1);
        gbc.writeMem(0x2bb5, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xb467);
        EXPECT(gbc.pc(), 0x2bb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 01FE
        gbc.setState(0x5bde, 0x9b2b, 0x7730, 0x2b1a, 0x2169, 0x4114, 0x1, 0x1);
        gbc.writeMem(0x5bde, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x9b2b);
        EXPECT(gbc.pc(), 0x5be0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 01FF
        gbc.setState(0xa78c, 0x9cbd, 0xdf30, 0x60ab, 0x3a8b, 0x1034, 0x1, 0x1);
        gbc.writeMem(0xa78c, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x9cbd);
        EXPECT(gbc.pc(), 0xa78e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa78c), 0xcb);
        EXPECT(gbc.readMem(0xa78d), 0xd1);
        // CB D1 0200
        gbc.setState(0x20ba, 0xaaa, 0x6570, 0x90cd, 0x1944, 0x13c, 0x0, 0x0);
        gbc.writeMem(0x20ba, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xaaa);
        EXPECT(gbc.pc(), 0x20bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0201
        gbc.setState(0xb8af, 0x607d, 0x9b70, 0x66f5, 0x8e37, 0x3f09, 0x0, 0x0);
        gbc.writeMem(0xb8af, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x607d);
        EXPECT(gbc.pc(), 0xb8b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8af), 0xcb);
        EXPECT(gbc.readMem(0xb8b0), 0xd1);
        // CB D1 0202
        gbc.setState(0x1b78, 0xb7fc, 0x79e0, 0x1bc4, 0x8a5, 0x3c70, 0x0, 0x0);
        gbc.writeMem(0x1b78, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xb7fc);
        EXPECT(gbc.pc(), 0x1b7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0203
        gbc.setState(0x23fb, 0x5f8c, 0x4220, 0xc5b0, 0xae56, 0x196, 0x1, 0x0);
        gbc.writeMem(0x23fb, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x5f8c);
        EXPECT(gbc.pc(), 0x23fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0204
        gbc.setState(0x1fe7, 0x7978, 0xecc0, 0x9a6c, 0x49ac, 0xe9e9, 0x0, 0x0);
        gbc.writeMem(0x1fe7, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x7978);
        EXPECT(gbc.pc(), 0x1fe9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0205
        gbc.setState(0x6a02, 0x807, 0x36a0, 0x9636, 0xd116, 0xbae, 0x1, 0x0);
        gbc.writeMem(0x6a02, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x807);
        EXPECT(gbc.pc(), 0x6a04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0206
        gbc.setState(0x1b43, 0x1d33, 0x42b0, 0x8551, 0xe3a2, 0xb702, 0x0, 0x1);
        gbc.writeMem(0x1b43, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x1d33);
        EXPECT(gbc.pc(), 0x1b45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0207
        gbc.setState(0x4773, 0xd87f, 0xe290, 0x584f, 0x7308, 0xca02, 0x1, 0x1);
        gbc.writeMem(0x4773, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xd87f);
        EXPECT(gbc.pc(), 0x4775);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0208
        gbc.setState(0xc243, 0xe4d4, 0x3280, 0xb6f1, 0x7d77, 0x5952, 0x0, 0x1);
        gbc.writeMem(0xc243, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xe4d4);
        EXPECT(gbc.pc(), 0xc245);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc243), 0xcb);
        EXPECT(gbc.readMem(0xc244), 0xd1);
        // CB D1 0209
        gbc.setState(0x2823, 0xfda1, 0xe3a0, 0xc8c6, 0xeb26, 0x25a3, 0x1, 0x0);
        gbc.writeMem(0x2823, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xfda1);
        EXPECT(gbc.pc(), 0x2825);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 020A
        gbc.setState(0x5433, 0x9f67, 0xcd10, 0xfd88, 0xe3d3, 0x873f, 0x0, 0x0);
        gbc.writeMem(0x5433, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x9f67);
        EXPECT(gbc.pc(), 0x5435);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 020B
        gbc.setState(0x2d28, 0xb851, 0x44e0, 0x7459, 0xd30d, 0xbe8f, 0x1, 0x0);
        gbc.writeMem(0x2d28, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xb851);
        EXPECT(gbc.pc(), 0x2d2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 020C
        gbc.setState(0x75c7, 0x968, 0xe8a0, 0xe5e0, 0xe1f1, 0xfdf6, 0x0, 0x1);
        gbc.writeMem(0x75c7, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x968);
        EXPECT(gbc.pc(), 0x75c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 020D
        gbc.setState(0x8695, 0x4f4e, 0xff70, 0xee46, 0x9902, 0x49e, 0x1, 0x0);
        gbc.writeMem(0x8695, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x4f4e);
        EXPECT(gbc.pc(), 0x8697);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8695), 0xcb);
        EXPECT(gbc.readMem(0x8696), 0xd1);
        // CB D1 020E
        gbc.setState(0xeee2, 0x2572, 0xea0, 0x1b24, 0xeb6f, 0x7014, 0x0, 0x1);
        gbc.writeMem(0xeee2, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x2572);
        EXPECT(gbc.pc(), 0xeee4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeee2), 0xcb);
        EXPECT(gbc.readMem(0xeee3), 0xd1);
        // CB D1 020F
        gbc.setState(0xe80d, 0xf8c7, 0x61f0, 0x7dec, 0xb8c7, 0x44f0, 0x1, 0x1);
        gbc.writeMem(0xe80d, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xf8c7);
        EXPECT(gbc.pc(), 0xe80f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe80d), 0xcb);
        EXPECT(gbc.readMem(0xe80e), 0xd1);
        // CB D1 0210
        gbc.setState(0xcb7a, 0xa2b7, 0x60, 0xebde, 0xa749, 0xda23, 0x0, 0x1);
        gbc.writeMem(0xcb7a, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xa2b7);
        EXPECT(gbc.pc(), 0xcb7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb7a), 0xcb);
        EXPECT(gbc.readMem(0xcb7b), 0xd1);
        // CB D1 0211
        gbc.setState(0x1ffb, 0x749e, 0x1980, 0xa435, 0xaaff, 0xd71e, 0x0, 0x0);
        gbc.writeMem(0x1ffb, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x749e);
        EXPECT(gbc.pc(), 0x1ffd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0212
        gbc.setState(0xe146, 0xaa1, 0x7c90, 0xcc0, 0x4244, 0xf36c, 0x0, 0x1);
        gbc.writeMem(0xe146, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xaa1);
        EXPECT(gbc.pc(), 0xe148);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe146), 0xcb);
        EXPECT(gbc.readMem(0xe147), 0xd1);
        // CB D1 0213
        gbc.setState(0xea2c, 0x67ef, 0x1770, 0x8213, 0xac7b, 0x1aa8, 0x0, 0x0);
        gbc.writeMem(0xea2c, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x67ef);
        EXPECT(gbc.pc(), 0xea2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea2c), 0xcb);
        EXPECT(gbc.readMem(0xea2d), 0xd1);
        // CB D1 0214
        gbc.setState(0x73d4, 0x1d09, 0xc990, 0x8e18, 0x117, 0xa6e8, 0x1, 0x1);
        gbc.writeMem(0x73d4, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x1d09);
        EXPECT(gbc.pc(), 0x73d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0215
        gbc.setState(0xd3c2, 0x4736, 0x3ad0, 0xd38b, 0x9e40, 0x41f8, 0x0, 0x1);
        gbc.writeMem(0xd3c2, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x4736);
        EXPECT(gbc.pc(), 0xd3c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3c2), 0xcb);
        EXPECT(gbc.readMem(0xd3c3), 0xd1);
        // CB D1 0216
        gbc.setState(0xe3d5, 0x5f90, 0x1a0, 0x783c, 0x8059, 0xeb6b, 0x0, 0x0);
        gbc.writeMem(0xe3d5, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x5f90);
        EXPECT(gbc.pc(), 0xe3d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3d5), 0xcb);
        EXPECT(gbc.readMem(0xe3d6), 0xd1);
        // CB D1 0217
        gbc.setState(0xa75e, 0xa089, 0xfc00, 0x7bd7, 0xed03, 0x9747, 0x1, 0x1);
        gbc.writeMem(0xa75e, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xa089);
        EXPECT(gbc.pc(), 0xa760);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa75e), 0xcb);
        EXPECT(gbc.readMem(0xa75f), 0xd1);
        // CB D1 0218
        gbc.setState(0x23c8, 0x2de4, 0x8f00, 0xc062, 0xc4c8, 0x72e9, 0x1, 0x0);
        gbc.writeMem(0x23c8, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x2de4);
        EXPECT(gbc.pc(), 0x23ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0219
        gbc.setState(0xd8e7, 0x217b, 0xb660, 0x3798, 0xb3df, 0x91a3, 0x0, 0x0);
        gbc.writeMem(0xd8e7, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x217b);
        EXPECT(gbc.pc(), 0xd8e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8e7), 0xcb);
        EXPECT(gbc.readMem(0xd8e8), 0xd1);
        // CB D1 021A
        gbc.setState(0x3beb, 0x2b93, 0xca80, 0x479e, 0x37f3, 0x3048, 0x0, 0x1);
        gbc.writeMem(0x3beb, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x2b93);
        EXPECT(gbc.pc(), 0x3bed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 021C
        gbc.setState(0x6571, 0x6d32, 0xbe30, 0x31d4, 0x25ed, 0x7e65, 0x0, 0x0);
        gbc.writeMem(0x6571, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x6d32);
        EXPECT(gbc.pc(), 0x6573);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 021F
        gbc.setState(0x37ec, 0x9ce, 0x8c20, 0xd4a1, 0x2b3a, 0x29da, 0x1, 0x1);
        gbc.writeMem(0x37ec, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x9ce);
        EXPECT(gbc.pc(), 0x37ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0220
        gbc.setState(0x5afa, 0x84ae, 0x2f60, 0x270b, 0x266c, 0xde4e, 0x0, 0x0);
        gbc.writeMem(0x5afa, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x84ae);
        EXPECT(gbc.pc(), 0x5afc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0221
        gbc.setState(0x149e, 0x338a, 0x4ab0, 0xfa00, 0x90b0, 0x1fff, 0x0, 0x1);
        gbc.writeMem(0x149e, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x338a);
        EXPECT(gbc.pc(), 0x14a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0222
        gbc.setState(0x34d9, 0x558e, 0x4f90, 0x6857, 0x5571, 0x190a, 0x1, 0x1);
        gbc.writeMem(0x34d9, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x558e);
        EXPECT(gbc.pc(), 0x34db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0223
        gbc.setState(0x927e, 0x1e47, 0x5c00, 0xf56, 0x18ca, 0x563, 0x0, 0x0);
        gbc.writeMem(0x927e, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x1e47);
        EXPECT(gbc.pc(), 0x9280);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x927e), 0xcb);
        EXPECT(gbc.readMem(0x927f), 0xd1);
        // CB D1 0224
        gbc.setState(0x97f5, 0x9486, 0x4bd0, 0xb269, 0x151b, 0xb754, 0x1, 0x1);
        gbc.writeMem(0x97f5, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x9486);
        EXPECT(gbc.pc(), 0x97f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97f5), 0xcb);
        EXPECT(gbc.readMem(0x97f6), 0xd1);
        // CB D1 0225
        gbc.setState(0x2b22, 0x6862, 0x86f0, 0x9f4d, 0x5054, 0xa552, 0x1, 0x0);
        gbc.writeMem(0x2b22, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x6862);
        EXPECT(gbc.pc(), 0x2b24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0227
        gbc.setState(0x6011, 0x6f35, 0x4640, 0xcf62, 0xa8db, 0x58f9, 0x0, 0x1);
        gbc.writeMem(0x6011, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x6f35);
        EXPECT(gbc.pc(), 0x6013);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0228
        gbc.setState(0x95d6, 0x8751, 0xf540, 0xd204, 0x1124, 0x10dd, 0x1, 0x0);
        gbc.writeMem(0x95d6, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x8751);
        EXPECT(gbc.pc(), 0x95d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95d6), 0xcb);
        EXPECT(gbc.readMem(0x95d7), 0xd1);
        // CB D1 0229
        gbc.setState(0x5ade, 0x7f79, 0x1640, 0xc52d, 0x49f0, 0x54be, 0x1, 0x0);
        gbc.writeMem(0x5ade, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x7f79);
        EXPECT(gbc.pc(), 0x5ae0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 022A
        gbc.setState(0xe24c, 0xc1b0, 0xdc90, 0x4e28, 0xe23e, 0x9d5a, 0x0, 0x0);
        gbc.writeMem(0xe24c, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xc1b0);
        EXPECT(gbc.pc(), 0xe24e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe24c), 0xcb);
        EXPECT(gbc.readMem(0xe24d), 0xd1);
        // CB D1 022B
        gbc.setState(0x28fe, 0x3dad, 0xb80, 0x5fbf, 0x493e, 0xe717, 0x0, 0x1);
        gbc.writeMem(0x28fe, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x3dad);
        EXPECT(gbc.pc(), 0x2900);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 022C
        gbc.setState(0xa08c, 0x74f0, 0xc8e0, 0xed6b, 0x37fd, 0xe45f, 0x0, 0x1);
        gbc.writeMem(0xa08c, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x74f0);
        EXPECT(gbc.pc(), 0xa08e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa08c), 0xcb);
        EXPECT(gbc.readMem(0xa08d), 0xd1);
        // CB D1 022E
        gbc.setState(0xe6db, 0xdc68, 0xea90, 0xdac7, 0xfe15, 0x6dc8, 0x0, 0x0);
        gbc.writeMem(0xe6db, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xdc68);
        EXPECT(gbc.pc(), 0xe6dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6db), 0xcb);
        EXPECT(gbc.readMem(0xe6dc), 0xd1);
        // CB D1 0230
        gbc.setState(0x26a, 0xdec9, 0xb30, 0x562c, 0xcd43, 0xf599, 0x1, 0x1);
        gbc.writeMem(0x26a, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xdec9);
        EXPECT(gbc.pc(), 0x26c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0231
        gbc.setState(0x2568, 0xb622, 0x2720, 0x492e, 0x3d67, 0x2636, 0x1, 0x1);
        gbc.writeMem(0x2568, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xb622);
        EXPECT(gbc.pc(), 0x256a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0232
        gbc.setState(0x1a6e, 0x7500, 0xb190, 0x2744, 0xb54e, 0xf365, 0x1, 0x0);
        gbc.writeMem(0x1a6e, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x7500);
        EXPECT(gbc.pc(), 0x1a70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0233
        gbc.setState(0xba85, 0xf3e6, 0x7930, 0x81, 0x9c81, 0x7e9d, 0x1, 0x0);
        gbc.writeMem(0xba85, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xf3e6);
        EXPECT(gbc.pc(), 0xba87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba85), 0xcb);
        EXPECT(gbc.readMem(0xba86), 0xd1);
        // CB D1 0234
        gbc.setState(0x7276, 0xbace, 0x98c0, 0x3734, 0x5827, 0xb299, 0x1, 0x0);
        gbc.writeMem(0x7276, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xbace);
        EXPECT(gbc.pc(), 0x7278);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0235
        gbc.setState(0xe821, 0x4233, 0xd600, 0x900c, 0x8214, 0xdf2e, 0x1, 0x0);
        gbc.writeMem(0xe821, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x4233);
        EXPECT(gbc.pc(), 0xe823);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe821), 0xcb);
        EXPECT(gbc.readMem(0xe822), 0xd1);
        // CB D1 0236
        gbc.setState(0x61f6, 0x8541, 0x3950, 0xfc6b, 0x85a0, 0x25e5, 0x1, 0x0);
        gbc.writeMem(0x61f6, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x8541);
        EXPECT(gbc.pc(), 0x61f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0237
        gbc.setState(0x4bfb, 0x812c, 0xe110, 0xe3fa, 0x4311, 0xcc2e, 0x0, 0x1);
        gbc.writeMem(0x4bfb, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x812c);
        EXPECT(gbc.pc(), 0x4bfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0238
        gbc.setState(0x9b16, 0xf41b, 0x6e40, 0x6917, 0x52d9, 0x1783, 0x0, 0x1);
        gbc.writeMem(0x9b16, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xf41b);
        EXPECT(gbc.pc(), 0x9b18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b16), 0xcb);
        EXPECT(gbc.readMem(0x9b17), 0xd1);
        // CB D1 0239
        gbc.setState(0x69cb, 0xcb43, 0xf330, 0xdf7a, 0xf1f9, 0x9e1c, 0x1, 0x0);
        gbc.writeMem(0x69cb, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xcb43);
        EXPECT(gbc.pc(), 0x69cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 023A
        gbc.setState(0x5485, 0x2cd0, 0xd430, 0x722d, 0xfee3, 0x331d, 0x0, 0x0);
        gbc.writeMem(0x5485, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x2cd0);
        EXPECT(gbc.pc(), 0x5487);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 023B
        gbc.setState(0x580a, 0xd663, 0x8cb0, 0x8ed7, 0xcd8b, 0xd910, 0x1, 0x1);
        gbc.writeMem(0x580a, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xd663);
        EXPECT(gbc.pc(), 0x580c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 023C
        gbc.setState(0x12d6, 0x3370, 0xc930, 0xecc7, 0x3cea, 0xc67d, 0x1, 0x0);
        gbc.writeMem(0x12d6, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x3370);
        EXPECT(gbc.pc(), 0x12d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 023D
        gbc.setState(0xe248, 0x2d71, 0xe020, 0x6c0f, 0xda2, 0x5b2d, 0x1, 0x0);
        gbc.writeMem(0xe248, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x2d71);
        EXPECT(gbc.pc(), 0xe24a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe248), 0xcb);
        EXPECT(gbc.readMem(0xe249), 0xd1);
        // CB D1 023E
        gbc.setState(0xca01, 0x1df1, 0x440, 0xbd9a, 0x6e02, 0x8434, 0x0, 0x1);
        gbc.writeMem(0xca01, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x1df1);
        EXPECT(gbc.pc(), 0xca03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca01), 0xcb);
        EXPECT(gbc.readMem(0xca02), 0xd1);
        // CB D1 023F
        gbc.setState(0x1614, 0x3a65, 0x7fc0, 0x3771, 0x3af, 0x3b7, 0x1, 0x0);
        gbc.writeMem(0x1614, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x3a65);
        EXPECT(gbc.pc(), 0x1616);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0240
        gbc.setState(0x7b45, 0x6c3, 0xe610, 0x4290, 0x12d8, 0x356d, 0x0, 0x1);
        gbc.writeMem(0x7b45, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x6c3);
        EXPECT(gbc.pc(), 0x7b47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0241
        gbc.setState(0xe573, 0x9723, 0xece0, 0x8365, 0x152d, 0xbcbe, 0x1, 0x0);
        gbc.writeMem(0xe573, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x9723);
        EXPECT(gbc.pc(), 0xe575);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe573), 0xcb);
        EXPECT(gbc.readMem(0xe574), 0xd1);
        // CB D1 0242
        gbc.setState(0xdafd, 0xd485, 0x6fc0, 0x3039, 0xe9e9, 0xa94e, 0x0, 0x0);
        gbc.writeMem(0xdafd, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xd485);
        EXPECT(gbc.pc(), 0xdaff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdafd), 0xcb);
        EXPECT(gbc.readMem(0xdafe), 0xd1);
        // CB D1 0243
        gbc.setState(0x7fdd, 0xd5cd, 0xf620, 0xd23d, 0xf77c, 0x833b, 0x1, 0x0);
        gbc.writeMem(0x7fdd, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xd5cd);
        EXPECT(gbc.pc(), 0x7fdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0244
        gbc.setState(0xd900, 0x2395, 0x7dd0, 0x8b9b, 0xa082, 0xc9c9, 0x1, 0x0);
        gbc.writeMem(0xd900, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x2395);
        EXPECT(gbc.pc(), 0xd902);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd900), 0xcb);
        EXPECT(gbc.readMem(0xd901), 0xd1);
        // CB D1 0245
        gbc.setState(0x3445, 0xa856, 0xfd40, 0x5d0b, 0x463, 0x6fa3, 0x0, 0x1);
        gbc.writeMem(0x3445, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xa856);
        EXPECT(gbc.pc(), 0x3447);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0246
        gbc.setState(0xc92c, 0xd049, 0x4250, 0xbd7f, 0x5d5b, 0xf740, 0x0, 0x1);
        gbc.writeMem(0xc92c, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xd049);
        EXPECT(gbc.pc(), 0xc92e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc92c), 0xcb);
        EXPECT(gbc.readMem(0xc92d), 0xd1);
        // CB D1 0247
        gbc.setState(0x13c4, 0x326a, 0x9e10, 0xdc9c, 0xa098, 0xe3f9, 0x1, 0x1);
        gbc.writeMem(0x13c4, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x326a);
        EXPECT(gbc.pc(), 0x13c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0248
        gbc.setState(0x8856, 0xf44a, 0xfcb0, 0xdef0, 0xe724, 0xaf55, 0x0, 0x1);
        gbc.writeMem(0x8856, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xf44a);
        EXPECT(gbc.pc(), 0x8858);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8856), 0xcb);
        EXPECT(gbc.readMem(0x8857), 0xd1);
        // CB D1 024A
        gbc.setState(0x5c8c, 0x47b6, 0x1160, 0xf4a, 0x3d17, 0x95bc, 0x1, 0x1);
        gbc.writeMem(0x5c8c, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x47b6);
        EXPECT(gbc.pc(), 0x5c8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 024B
        gbc.setState(0x5588, 0x8cde, 0x6870, 0xcd68, 0x5593, 0xe116, 0x1, 0x0);
        gbc.writeMem(0x5588, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x8cde);
        EXPECT(gbc.pc(), 0x558a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 024C
        gbc.setState(0xb1dd, 0xa5a1, 0xbc70, 0xa90f, 0x7dd5, 0xd281, 0x1, 0x1);
        gbc.writeMem(0xb1dd, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xa5a1);
        EXPECT(gbc.pc(), 0xb1df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1dd), 0xcb);
        EXPECT(gbc.readMem(0xb1de), 0xd1);
        // CB D1 024D
        gbc.setState(0xe78f, 0x855c, 0x1580, 0x74ac, 0xd6f5, 0xf9a8, 0x1, 0x1);
        gbc.writeMem(0xe78f, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x855c);
        EXPECT(gbc.pc(), 0xe791);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe78f), 0xcb);
        EXPECT(gbc.readMem(0xe790), 0xd1);
        // CB D1 024E
        gbc.setState(0xc8a2, 0x38f1, 0x5770, 0x5575, 0x521e, 0x93b1, 0x1, 0x1);
        gbc.writeMem(0xc8a2, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x38f1);
        EXPECT(gbc.pc(), 0xc8a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8a2), 0xcb);
        EXPECT(gbc.readMem(0xc8a3), 0xd1);
        // CB D1 024F
        gbc.setState(0xc1ef, 0x3ded, 0x7850, 0x465d, 0x96b1, 0x98dc, 0x1, 0x0);
        gbc.writeMem(0xc1ef, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x3ded);
        EXPECT(gbc.pc(), 0xc1f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1ef), 0xcb);
        EXPECT(gbc.readMem(0xc1f0), 0xd1);
        // CB D1 0250
        gbc.setState(0x58f, 0x1971, 0xb1f0, 0x8fb7, 0x3cf7, 0x488e, 0x1, 0x1);
        gbc.writeMem(0x58f, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x1971);
        EXPECT(gbc.pc(), 0x591);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0251
        gbc.setState(0x778f, 0x40cc, 0x1fb0, 0x71ed, 0x9ed1, 0xc67a, 0x1, 0x1);
        gbc.writeMem(0x778f, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x40cc);
        EXPECT(gbc.pc(), 0x7791);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0252
        gbc.setState(0x4ab1, 0x8996, 0x1ef0, 0x958e, 0x3ba9, 0xedfa, 0x0, 0x0);
        gbc.writeMem(0x4ab1, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x8996);
        EXPECT(gbc.pc(), 0x4ab3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0253
        gbc.setState(0x5376, 0xd4da, 0x51a0, 0x8e4d, 0xaffd, 0xd73a, 0x0, 0x1);
        gbc.writeMem(0x5376, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xd4da);
        EXPECT(gbc.pc(), 0x5378);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0254
        gbc.setState(0x8fe, 0x62b, 0xca30, 0x613f, 0xa641, 0x1402, 0x0, 0x0);
        gbc.writeMem(0x8fe, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x62b);
        EXPECT(gbc.pc(), 0x900);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0255
        gbc.setState(0xe896, 0x1c3f, 0xd860, 0x4f2a, 0x8f66, 0x43eb, 0x0, 0x1);
        gbc.writeMem(0xe896, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x1c3f);
        EXPECT(gbc.pc(), 0xe898);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe896), 0xcb);
        EXPECT(gbc.readMem(0xe897), 0xd1);
        // CB D1 0256
        gbc.setState(0xcf50, 0xa16c, 0x5e10, 0xd7ac, 0xb039, 0xed57, 0x0, 0x0);
        gbc.writeMem(0xcf50, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xa16c);
        EXPECT(gbc.pc(), 0xcf52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf50), 0xcb);
        EXPECT(gbc.readMem(0xcf51), 0xd1);
        // CB D1 0257
        gbc.setState(0xd873, 0x5343, 0x2d20, 0x3157, 0xd200, 0xcb00, 0x1, 0x0);
        gbc.writeMem(0xd873, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x5343);
        EXPECT(gbc.pc(), 0xd875);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd873), 0xcb);
        EXPECT(gbc.readMem(0xd874), 0xd1);
        // CB D1 0258
        gbc.setState(0xc709, 0x3604, 0xd7f0, 0x8c76, 0xf6a5, 0x97a4, 0x1, 0x1);
        gbc.writeMem(0xc709, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x3604);
        EXPECT(gbc.pc(), 0xc70b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc709), 0xcb);
        EXPECT(gbc.readMem(0xc70a), 0xd1);
        // CB D1 0259
        gbc.setState(0x26c3, 0x1c0a, 0x4e40, 0x311a, 0x5d4f, 0x45cb, 0x0, 0x1);
        gbc.writeMem(0x26c3, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x1c0a);
        EXPECT(gbc.pc(), 0x26c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 025A
        gbc.setState(0xe4c4, 0xb7da, 0x8970, 0xf0df, 0x9666, 0xc755, 0x1, 0x1);
        gbc.writeMem(0xe4c4, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xb7da);
        EXPECT(gbc.pc(), 0xe4c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4c4), 0xcb);
        EXPECT(gbc.readMem(0xe4c5), 0xd1);
        // CB D1 025B
        gbc.setState(0xd3c3, 0xca71, 0x9b30, 0xeba0, 0x3fd8, 0x12e1, 0x1, 0x0);
        gbc.writeMem(0xd3c3, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xca71);
        EXPECT(gbc.pc(), 0xd3c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3c3), 0xcb);
        EXPECT(gbc.readMem(0xd3c4), 0xd1);
        // CB D1 025C
        gbc.setState(0xdaea, 0xdabe, 0x5320, 0x1d70, 0x38a9, 0x888, 0x1, 0x1);
        gbc.writeMem(0xdaea, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xdabe);
        EXPECT(gbc.pc(), 0xdaec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdaea), 0xcb);
        EXPECT(gbc.readMem(0xdaeb), 0xd1);
        // CB D1 025D
        gbc.setState(0x3260, 0x5f93, 0x31e0, 0xc209, 0x7000, 0x84e3, 0x1, 0x1);
        gbc.writeMem(0x3260, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x5f93);
        EXPECT(gbc.pc(), 0x3262);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 025E
        gbc.setState(0xb97b, 0x20c4, 0xc850, 0xf386, 0x2421, 0x61f2, 0x1, 0x0);
        gbc.writeMem(0xb97b, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x20c4);
        EXPECT(gbc.pc(), 0xb97d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb97b), 0xcb);
        EXPECT(gbc.readMem(0xb97c), 0xd1);
        // CB D1 025F
        gbc.setState(0x12c6, 0x74dd, 0x60f0, 0x2982, 0x57de, 0x82c2, 0x1, 0x1);
        gbc.writeMem(0x12c6, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x74dd);
        EXPECT(gbc.pc(), 0x12c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0260
        gbc.setState(0xd4d4, 0xff66, 0x7730, 0x706, 0xfea2, 0xfb57, 0x1, 0x0);
        gbc.writeMem(0xd4d4, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xff66);
        EXPECT(gbc.pc(), 0xd4d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4d4), 0xcb);
        EXPECT(gbc.readMem(0xd4d5), 0xd1);
        // CB D1 0261
        gbc.setState(0xd62a, 0xb3a8, 0xca00, 0xed10, 0x357e, 0x4ee0, 0x0, 0x0);
        gbc.writeMem(0xd62a, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xb3a8);
        EXPECT(gbc.pc(), 0xd62c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd62a), 0xcb);
        EXPECT(gbc.readMem(0xd62b), 0xd1);
        // CB D1 0262
        gbc.setState(0x9f4e, 0xed4, 0xf3e0, 0xf138, 0xba01, 0x5b31, 0x1, 0x1);
        gbc.writeMem(0x9f4e, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xed4);
        EXPECT(gbc.pc(), 0x9f50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f4e), 0xcb);
        EXPECT(gbc.readMem(0x9f4f), 0xd1);
        // CB D1 0264
        gbc.setState(0x88a1, 0x9e34, 0x2d0, 0x6793, 0xacc0, 0x385c, 0x1, 0x0);
        gbc.writeMem(0x88a1, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x9e34);
        EXPECT(gbc.pc(), 0x88a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88a1), 0xcb);
        EXPECT(gbc.readMem(0x88a2), 0xd1);
        // CB D1 0265
        gbc.setState(0x4ae3, 0x7d6, 0x12e0, 0xad45, 0xf015, 0xd9, 0x0, 0x1);
        gbc.writeMem(0x4ae3, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x7d6);
        EXPECT(gbc.pc(), 0x4ae5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0266
        gbc.setState(0xb6a9, 0x8697, 0x19e0, 0xb5c0, 0xf40b, 0xcf5c, 0x0, 0x0);
        gbc.writeMem(0xb6a9, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x8697);
        EXPECT(gbc.pc(), 0xb6ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6a9), 0xcb);
        EXPECT(gbc.readMem(0xb6aa), 0xd1);
        // CB D1 0267
        gbc.setState(0x8d7d, 0xbe59, 0xdfd0, 0x59, 0xcb7a, 0x6804, 0x0, 0x0);
        gbc.writeMem(0x8d7d, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xbe59);
        EXPECT(gbc.pc(), 0x8d7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d7d), 0xcb);
        EXPECT(gbc.readMem(0x8d7e), 0xd1);
        // CB D1 0268
        gbc.setState(0x6173, 0xe5d6, 0x1620, 0x5e13, 0x1e42, 0xc103, 0x0, 0x0);
        gbc.writeMem(0x6173, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xe5d6);
        EXPECT(gbc.pc(), 0x6175);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0269
        gbc.setState(0x1c85, 0x7904, 0x5dc0, 0x28c5, 0xf22a, 0x51c2, 0x1, 0x1);
        gbc.writeMem(0x1c85, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x7904);
        EXPECT(gbc.pc(), 0x1c87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 026A
        gbc.setState(0x63c3, 0xeba9, 0x3810, 0xfb38, 0xf546, 0x18b8, 0x0, 0x1);
        gbc.writeMem(0x63c3, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xeba9);
        EXPECT(gbc.pc(), 0x63c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 026B
        gbc.setState(0xf52, 0x6984, 0x94d0, 0x46a, 0xa10e, 0x3ceb, 0x1, 0x1);
        gbc.writeMem(0xf52, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x6984);
        EXPECT(gbc.pc(), 0xf54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 026C
        gbc.setState(0xd7b9, 0x3f1b, 0x2bb0, 0x8774, 0x8653, 0xf6d6, 0x1, 0x0);
        gbc.writeMem(0xd7b9, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x3f1b);
        EXPECT(gbc.pc(), 0xd7bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7b9), 0xcb);
        EXPECT(gbc.readMem(0xd7ba), 0xd1);
        // CB D1 026D
        gbc.setState(0x80b, 0x3d19, 0x9510, 0xee0e, 0x5142, 0x4db3, 0x1, 0x1);
        gbc.writeMem(0x80b, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x3d19);
        EXPECT(gbc.pc(), 0x80d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 026E
        gbc.setState(0xb32, 0xa3a2, 0x4d70, 0xcccb, 0x5a54, 0x266a, 0x1, 0x0);
        gbc.writeMem(0xb32, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xa3a2);
        EXPECT(gbc.pc(), 0xb34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 026F
        gbc.setState(0x8004, 0xcf13, 0x8c20, 0xb9ac, 0x22a5, 0x524a, 0x1, 0x1);
        gbc.writeMem(0x8004, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xcf13);
        EXPECT(gbc.pc(), 0x8006);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8004), 0xcb);
        EXPECT(gbc.readMem(0x8005), 0xd1);
        // CB D1 0270
        gbc.setState(0x7445, 0x8216, 0x1e90, 0xd1f3, 0x723b, 0x5611, 0x1, 0x0);
        gbc.writeMem(0x7445, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x8216);
        EXPECT(gbc.pc(), 0x7447);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0271
        gbc.setState(0x99de, 0x97ea, 0xc1c0, 0x44a, 0xb47f, 0xe5d2, 0x1, 0x1);
        gbc.writeMem(0x99de, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x97ea);
        EXPECT(gbc.pc(), 0x99e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99de), 0xcb);
        EXPECT(gbc.readMem(0x99df), 0xd1);
        // CB D1 0272
        gbc.setState(0x9151, 0xcc21, 0xac60, 0x19f8, 0x21e2, 0x5f57, 0x1, 0x0);
        gbc.writeMem(0x9151, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xcc21);
        EXPECT(gbc.pc(), 0x9153);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9151), 0xcb);
        EXPECT(gbc.readMem(0x9152), 0xd1);
        // CB D1 0273
        gbc.setState(0x6309, 0xa922, 0xca80, 0xf8f8, 0x7eb1, 0x7f58, 0x0, 0x1);
        gbc.writeMem(0x6309, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xa922);
        EXPECT(gbc.pc(), 0x630b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0274
        gbc.setState(0x1e4b, 0x24a, 0xd400, 0x6c98, 0x12cc, 0xd7c3, 0x1, 0x1);
        gbc.writeMem(0x1e4b, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x24a);
        EXPECT(gbc.pc(), 0x1e4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0275
        gbc.setState(0x3d55, 0xc0c, 0x31a0, 0xeb2e, 0xe9c2, 0x6fd5, 0x1, 0x0);
        gbc.writeMem(0x3d55, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xc0c);
        EXPECT(gbc.pc(), 0x3d57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0276
        gbc.setState(0x25bb, 0x41ca, 0x77b0, 0x5e3e, 0x31b0, 0x5f7f, 0x1, 0x1);
        gbc.writeMem(0x25bb, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x41ca);
        EXPECT(gbc.pc(), 0x25bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0277
        gbc.setState(0xbab5, 0x7581, 0xab30, 0xe595, 0xc7b8, 0x49fd, 0x1, 0x0);
        gbc.writeMem(0xbab5, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x7581);
        EXPECT(gbc.pc(), 0xbab7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbab5), 0xcb);
        EXPECT(gbc.readMem(0xbab6), 0xd1);
        // CB D1 0278
        gbc.setState(0x756f, 0x3ac2, 0xcf20, 0xedb4, 0xdea8, 0x5240, 0x1, 0x1);
        gbc.writeMem(0x756f, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x3ac2);
        EXPECT(gbc.pc(), 0x7571);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0279
        gbc.setState(0x894b, 0xd2dc, 0x3a40, 0x265a, 0xdb31, 0x417e, 0x0, 0x0);
        gbc.writeMem(0x894b, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xd2dc);
        EXPECT(gbc.pc(), 0x894d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x894b), 0xcb);
        EXPECT(gbc.readMem(0x894c), 0xd1);
        // CB D1 027A
        gbc.setState(0x9a0c, 0x1279, 0x1ed0, 0xd6b1, 0xb132, 0x924e, 0x1, 0x0);
        gbc.writeMem(0x9a0c, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x1279);
        EXPECT(gbc.pc(), 0x9a0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a0c), 0xcb);
        EXPECT(gbc.readMem(0x9a0d), 0xd1);
        // CB D1 027B
        gbc.setState(0x5a5c, 0x1b99, 0xf8a0, 0x91aa, 0x347e, 0xd405, 0x1, 0x1);
        gbc.writeMem(0x5a5c, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x1b99);
        EXPECT(gbc.pc(), 0x5a5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 027C
        gbc.setState(0x492f, 0x32cc, 0xd8b0, 0x208e, 0xd41f, 0xd0fc, 0x0, 0x1);
        gbc.writeMem(0x492f, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x32cc);
        EXPECT(gbc.pc(), 0x4931);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 027D
        gbc.setState(0x12a5, 0xa9e, 0xb300, 0x9254, 0x3fbf, 0xda4a, 0x1, 0x1);
        gbc.writeMem(0x12a5, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xa9e);
        EXPECT(gbc.pc(), 0x12a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 027E
        gbc.setState(0xcab1, 0xd295, 0xcb90, 0x5ee1, 0x64b7, 0x93fe, 0x1, 0x1);
        gbc.writeMem(0xcab1, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xd295);
        EXPECT(gbc.pc(), 0xcab3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcab1), 0xcb);
        EXPECT(gbc.readMem(0xcab2), 0xd1);
        // CB D1 027F
        gbc.setState(0xa720, 0x9f68, 0x4350, 0x84d8, 0xb06a, 0x7ac9, 0x1, 0x1);
        gbc.writeMem(0xa720, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x9f68);
        EXPECT(gbc.pc(), 0xa722);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa720), 0xcb);
        EXPECT(gbc.readMem(0xa721), 0xd1);
        // CB D1 0280
        gbc.setState(0x2120, 0xa230, 0xdd0, 0x5717, 0x4a13, 0x771, 0x0, 0x1);
        gbc.writeMem(0x2120, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xa230);
        EXPECT(gbc.pc(), 0x2122);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0281
        gbc.setState(0x6e26, 0xcd9e, 0xc9a0, 0x534, 0x72cb, 0x73fc, 0x1, 0x1);
        gbc.writeMem(0x6e26, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xcd9e);
        EXPECT(gbc.pc(), 0x6e28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0283
        gbc.setState(0xd7d9, 0xed65, 0x8df0, 0x688a, 0x57b6, 0xd45c, 0x0, 0x1);
        gbc.writeMem(0xd7d9, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xed65);
        EXPECT(gbc.pc(), 0xd7db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7d9), 0xcb);
        EXPECT(gbc.readMem(0xd7da), 0xd1);
        // CB D1 0284
        gbc.setState(0x783a, 0x7290, 0xde30, 0x79ee, 0xb562, 0x76a2, 0x1, 0x1);
        gbc.writeMem(0x783a, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x7290);
        EXPECT(gbc.pc(), 0x783c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0285
        gbc.setState(0x6d6b, 0xff36, 0xdcf0, 0x2d8d, 0x2ea, 0x797a, 0x1, 0x1);
        gbc.writeMem(0x6d6b, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xff36);
        EXPECT(gbc.pc(), 0x6d6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0286
        gbc.setState(0xe7a5, 0xce30, 0x1b0, 0x4246, 0x40c0, 0xcbec, 0x0, 0x0);
        gbc.writeMem(0xe7a5, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xce30);
        EXPECT(gbc.pc(), 0xe7a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7a5), 0xcb);
        EXPECT(gbc.readMem(0xe7a6), 0xd1);
        // CB D1 0287
        gbc.setState(0x4c5c, 0x6498, 0x44e0, 0x133, 0x8aec, 0x5719, 0x1, 0x1);
        gbc.writeMem(0x4c5c, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x6498);
        EXPECT(gbc.pc(), 0x4c5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0288
        gbc.setState(0x70, 0xa14f, 0xd770, 0x9cd8, 0x80a0, 0x7de8, 0x0, 0x0);
        gbc.writeMem(0x70, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xa14f);
        EXPECT(gbc.pc(), 0x72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0289
        gbc.setState(0xfd6, 0x8c9b, 0xa780, 0xbe82, 0xb341, 0xba46, 0x0, 0x1);
        gbc.writeMem(0xfd6, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x8c9b);
        EXPECT(gbc.pc(), 0xfd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 028A
        gbc.setState(0xcd4b, 0x7863, 0xf2c0, 0xf93d, 0xbe68, 0x2a2b, 0x0, 0x0);
        gbc.writeMem(0xcd4b, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x7863);
        EXPECT(gbc.pc(), 0xcd4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd4b), 0xcb);
        EXPECT(gbc.readMem(0xcd4c), 0xd1);
        // CB D1 028B
        gbc.setState(0x9792, 0x65e, 0x8010, 0x4f03, 0x92db, 0x8d6e, 0x0, 0x1);
        gbc.writeMem(0x9792, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x65e);
        EXPECT(gbc.pc(), 0x9794);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9792), 0xcb);
        EXPECT(gbc.readMem(0x9793), 0xd1);
        // CB D1 028C
        gbc.setState(0xb37a, 0xcfa, 0x54a0, 0xf9a8, 0x1ccb, 0xdab4, 0x0, 0x0);
        gbc.writeMem(0xb37a, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xcfa);
        EXPECT(gbc.pc(), 0xb37c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb37a), 0xcb);
        EXPECT(gbc.readMem(0xb37b), 0xd1);
        // CB D1 028D
        gbc.setState(0x945b, 0xaa27, 0xfb20, 0xf55, 0xcdca, 0xa582, 0x0, 0x0);
        gbc.writeMem(0x945b, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xaa27);
        EXPECT(gbc.pc(), 0x945d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x945b), 0xcb);
        EXPECT(gbc.readMem(0x945c), 0xd1);
        // CB D1 028E
        gbc.setState(0xc466, 0x44af, 0xd5f0, 0x4210, 0xf33, 0xca9b, 0x1, 0x1);
        gbc.writeMem(0xc466, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x44af);
        EXPECT(gbc.pc(), 0xc468);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc466), 0xcb);
        EXPECT(gbc.readMem(0xc467), 0xd1);
        // CB D1 028F
        gbc.setState(0xef96, 0x26ac, 0xd280, 0x3215, 0x267e, 0x5e46, 0x0, 0x1);
        gbc.writeMem(0xef96, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x26ac);
        EXPECT(gbc.pc(), 0xef98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef96), 0xcb);
        EXPECT(gbc.readMem(0xef97), 0xd1);
        // CB D1 0290
        gbc.setState(0xbdcd, 0x5853, 0x6af0, 0x4d58, 0x93ee, 0xc383, 0x0, 0x1);
        gbc.writeMem(0xbdcd, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x5853);
        EXPECT(gbc.pc(), 0xbdcf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdcd), 0xcb);
        EXPECT(gbc.readMem(0xbdce), 0xd1);
        // CB D1 0291
        gbc.setState(0xe938, 0x5d7, 0xcaf0, 0x453a, 0x3119, 0xf869, 0x1, 0x1);
        gbc.writeMem(0xe938, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x5d7);
        EXPECT(gbc.pc(), 0xe93a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe938), 0xcb);
        EXPECT(gbc.readMem(0xe939), 0xd1);
        // CB D1 0293
        gbc.setState(0x8409, 0x3f9b, 0xdfd0, 0x5f04, 0x5f2d, 0x73e1, 0x0, 0x1);
        gbc.writeMem(0x8409, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x3f9b);
        EXPECT(gbc.pc(), 0x840b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8409), 0xcb);
        EXPECT(gbc.readMem(0x840a), 0xd1);
        // CB D1 0294
        gbc.setState(0xd82d, 0xe4d0, 0xcd40, 0xa3ce, 0xe7ba, 0x4ea, 0x0, 0x0);
        gbc.writeMem(0xd82d, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xe4d0);
        EXPECT(gbc.pc(), 0xd82f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd82d), 0xcb);
        EXPECT(gbc.readMem(0xd82e), 0xd1);
        // CB D1 0295
        gbc.setState(0x65a, 0x6c37, 0xbc10, 0x462b, 0xb3eb, 0x1171, 0x0, 0x0);
        gbc.writeMem(0x65a, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x6c37);
        EXPECT(gbc.pc(), 0x65c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0297
        gbc.setState(0x9b22, 0xf370, 0x3610, 0xff86, 0x1cb4, 0xfa8f, 0x1, 0x1);
        gbc.writeMem(0x9b22, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xf370);
        EXPECT(gbc.pc(), 0x9b24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b22), 0xcb);
        EXPECT(gbc.readMem(0x9b23), 0xd1);
        // CB D1 0299
        gbc.setState(0x6046, 0xef65, 0x12a0, 0x9aa1, 0x808a, 0xf95e, 0x0, 0x1);
        gbc.writeMem(0x6046, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xef65);
        EXPECT(gbc.pc(), 0x6048);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 029A
        gbc.setState(0xecb, 0x5943, 0xbfc0, 0x300d, 0x615b, 0xf122, 0x1, 0x1);
        gbc.writeMem(0xecb, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x5943);
        EXPECT(gbc.pc(), 0xecd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 029B
        gbc.setState(0xc904, 0x4e2b, 0x7ee0, 0x9578, 0xd9d3, 0x91c3, 0x0, 0x0);
        gbc.writeMem(0xc904, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x4e2b);
        EXPECT(gbc.pc(), 0xc906);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc904), 0xcb);
        EXPECT(gbc.readMem(0xc905), 0xd1);
        // CB D1 029C
        gbc.setState(0x1292, 0x34d0, 0xeaf0, 0x84e2, 0x2b9, 0x8598, 0x0, 0x1);
        gbc.writeMem(0x1292, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x34d0);
        EXPECT(gbc.pc(), 0x1294);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 029D
        gbc.setState(0xa70a, 0x34dd, 0xdd60, 0xce3b, 0x6a68, 0x7f78, 0x1, 0x0);
        gbc.writeMem(0xa70a, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x34dd);
        EXPECT(gbc.pc(), 0xa70c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa70a), 0xcb);
        EXPECT(gbc.readMem(0xa70b), 0xd1);
        // CB D1 029E
        gbc.setState(0xee1c, 0x61a3, 0xf720, 0xa1b6, 0xd53, 0xf1ea, 0x0, 0x1);
        gbc.writeMem(0xee1c, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x61a3);
        EXPECT(gbc.pc(), 0xee1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee1c), 0xcb);
        EXPECT(gbc.readMem(0xee1d), 0xd1);
        // CB D1 029F
        gbc.setState(0x8501, 0xf437, 0xf590, 0xdca4, 0xf6f7, 0x8210, 0x0, 0x1);
        gbc.writeMem(0x8501, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xf437);
        EXPECT(gbc.pc(), 0x8503);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8501), 0xcb);
        EXPECT(gbc.readMem(0x8502), 0xd1);
        // CB D1 02A0
        gbc.setState(0x2d46, 0x9d9b, 0xcc90, 0xd1cd, 0xd393, 0xe5d8, 0x1, 0x0);
        gbc.writeMem(0x2d46, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x9d9b);
        EXPECT(gbc.pc(), 0x2d48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 02A1
        gbc.setState(0x5a1f, 0xf6b3, 0x2300, 0xaaa8, 0x6d46, 0xed4f, 0x1, 0x1);
        gbc.writeMem(0x5a1f, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xf6b3);
        EXPECT(gbc.pc(), 0x5a21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 02A2
        gbc.setState(0xe461, 0x3a5a, 0x5a50, 0x99b0, 0xb9c6, 0x36e0, 0x1, 0x0);
        gbc.writeMem(0xe461, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x3a5a);
        EXPECT(gbc.pc(), 0xe463);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe461), 0xcb);
        EXPECT(gbc.readMem(0xe462), 0xd1);
        // CB D1 02A3
        gbc.setState(0x6196, 0x4a3d, 0xb0b0, 0xfe8b, 0x37bc, 0xa584, 0x1, 0x0);
        gbc.writeMem(0x6196, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x4a3d);
        EXPECT(gbc.pc(), 0x6198);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 02A4
        gbc.setState(0xcf72, 0x4358, 0x640, 0xbd9f, 0x5de5, 0xfbc3, 0x0, 0x0);
        gbc.writeMem(0xcf72, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x4358);
        EXPECT(gbc.pc(), 0xcf74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf72), 0xcb);
        EXPECT(gbc.readMem(0xcf73), 0xd1);
        // CB D1 02A5
        gbc.setState(0x2da2, 0xea29, 0xb650, 0xe61c, 0x444e, 0x7131, 0x1, 0x1);
        gbc.writeMem(0x2da2, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xea29);
        EXPECT(gbc.pc(), 0x2da4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 02A6
        gbc.setState(0x64d9, 0xaefb, 0xe530, 0x6718, 0xc2c4, 0x16c7, 0x0, 0x1);
        gbc.writeMem(0x64d9, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xaefb);
        EXPECT(gbc.pc(), 0x64db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 02A7
        gbc.setState(0x90e5, 0x3cb2, 0x5c00, 0x5c20, 0xce41, 0x9f24, 0x0, 0x1);
        gbc.writeMem(0x90e5, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x3cb2);
        EXPECT(gbc.pc(), 0x90e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90e5), 0xcb);
        EXPECT(gbc.readMem(0x90e6), 0xd1);
        // CB D1 02A8
        gbc.setState(0x347d, 0x417f, 0xc390, 0x2466, 0x5277, 0x933b, 0x0, 0x0);
        gbc.writeMem(0x347d, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x417f);
        EXPECT(gbc.pc(), 0x347f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 02A9
        gbc.setState(0x6e4d, 0x8b7d, 0x6400, 0xa6f, 0xb1e6, 0xb2c1, 0x1, 0x1);
        gbc.writeMem(0x6e4d, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x8b7d);
        EXPECT(gbc.pc(), 0x6e4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 02AA
        gbc.setState(0xb73, 0xf30c, 0xfdc0, 0xa693, 0x155d, 0x1f3f, 0x1, 0x1);
        gbc.writeMem(0xb73, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xf30c);
        EXPECT(gbc.pc(), 0xb75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 02AB
        gbc.setState(0x4b0f, 0xd7c2, 0x870, 0x4114, 0xcfc7, 0x1bd8, 0x0, 0x1);
        gbc.writeMem(0x4b0f, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xd7c2);
        EXPECT(gbc.pc(), 0x4b11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 02AC
        gbc.setState(0xdb5f, 0xe90e, 0xf7c0, 0x5c2a, 0x730c, 0x358d, 0x0, 0x1);
        gbc.writeMem(0xdb5f, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xe90e);
        EXPECT(gbc.pc(), 0xdb61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb5f), 0xcb);
        EXPECT(gbc.readMem(0xdb60), 0xd1);
        // CB D1 02AD
        gbc.setState(0x6511, 0x91e0, 0x2ba0, 0x6c6f, 0x32e, 0x12ce, 0x1, 0x0);
        gbc.writeMem(0x6511, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x91e0);
        EXPECT(gbc.pc(), 0x6513);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 02AE
        gbc.setState(0x18ae, 0x6733, 0x1730, 0x8f17, 0x4b90, 0xb722, 0x0, 0x0);
        gbc.writeMem(0x18ae, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x6733);
        EXPECT(gbc.pc(), 0x18b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 02AF
        gbc.setState(0x83da, 0x9607, 0x3d0, 0x9457, 0xc3c7, 0x6120, 0x0, 0x1);
        gbc.writeMem(0x83da, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x9607);
        EXPECT(gbc.pc(), 0x83dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83da), 0xcb);
        EXPECT(gbc.readMem(0x83db), 0xd1);
        // CB D1 02B1
        gbc.setState(0xae93, 0x3dcc, 0x790, 0xfe13, 0x239c, 0xacf8, 0x0, 0x0);
        gbc.writeMem(0xae93, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x3dcc);
        EXPECT(gbc.pc(), 0xae95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae93), 0xcb);
        EXPECT(gbc.readMem(0xae94), 0xd1);
        // CB D1 02B2
        gbc.setState(0x74b0, 0xf678, 0xebe0, 0x5e77, 0x4495, 0x9241, 0x1, 0x0);
        gbc.writeMem(0x74b0, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xf678);
        EXPECT(gbc.pc(), 0x74b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 02B3
        gbc.setState(0x8a63, 0xd2ec, 0x91e0, 0x16, 0x60a4, 0x9fc9, 0x0, 0x0);
        gbc.writeMem(0x8a63, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xd2ec);
        EXPECT(gbc.pc(), 0x8a65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a63), 0xcb);
        EXPECT(gbc.readMem(0x8a64), 0xd1);
        // CB D1 02B4
        gbc.setState(0x207e, 0x52e4, 0xf230, 0x8b9e, 0xfe9a, 0xb656, 0x1, 0x0);
        gbc.writeMem(0x207e, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x52e4);
        EXPECT(gbc.pc(), 0x2080);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 02B5
        gbc.setState(0x7db9, 0xb749, 0x2840, 0x324e, 0xd711, 0x254e, 0x0, 0x1);
        gbc.writeMem(0x7db9, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xb749);
        EXPECT(gbc.pc(), 0x7dbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 02B6
        gbc.setState(0x3b3b, 0x5965, 0x3f40, 0x20e9, 0xb32f, 0x14ed, 0x0, 0x1);
        gbc.writeMem(0x3b3b, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x5965);
        EXPECT(gbc.pc(), 0x3b3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 02B7
        gbc.setState(0x9c3a, 0xf19e, 0x5860, 0x33bb, 0x2020, 0xe980, 0x0, 0x0);
        gbc.writeMem(0x9c3a, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xf19e);
        EXPECT(gbc.pc(), 0x9c3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c3a), 0xcb);
        EXPECT(gbc.readMem(0x9c3b), 0xd1);
        // CB D1 02B8
        gbc.setState(0xda27, 0xee94, 0x6b90, 0xa97e, 0x81cb, 0x2de, 0x1, 0x1);
        gbc.writeMem(0xda27, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xee94);
        EXPECT(gbc.pc(), 0xda29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda27), 0xcb);
        EXPECT(gbc.readMem(0xda28), 0xd1);
        // CB D1 02B9
        gbc.setState(0xedf5, 0x3502, 0x9310, 0x8360, 0xe451, 0x68e8, 0x1, 0x1);
        gbc.writeMem(0xedf5, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x3502);
        EXPECT(gbc.pc(), 0xedf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedf5), 0xcb);
        EXPECT(gbc.readMem(0xedf6), 0xd1);
        // CB D1 02BA
        gbc.setState(0xec57, 0xebdf, 0x9740, 0x1ce9, 0x88a5, 0x9b7a, 0x1, 0x0);
        gbc.writeMem(0xec57, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xebdf);
        EXPECT(gbc.pc(), 0xec59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec57), 0xcb);
        EXPECT(gbc.readMem(0xec58), 0xd1);
        // CB D1 02BB
        gbc.setState(0xb608, 0xe579, 0xa410, 0xca48, 0xac44, 0x9761, 0x0, 0x1);
        gbc.writeMem(0xb608, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xe579);
        EXPECT(gbc.pc(), 0xb60a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb608), 0xcb);
        EXPECT(gbc.readMem(0xb609), 0xd1);
        // CB D1 02BC
        gbc.setState(0xa232, 0x6b94, 0xc4c0, 0x46fd, 0x3d6, 0xfddd, 0x0, 0x1);
        gbc.writeMem(0xa232, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x6b94);
        EXPECT(gbc.pc(), 0xa234);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa232), 0xcb);
        EXPECT(gbc.readMem(0xa233), 0xd1);
        // CB D1 02BD
        gbc.setState(0x937c, 0xfc7b, 0xc5d0, 0xa865, 0xc79c, 0xbbf, 0x0, 0x0);
        gbc.writeMem(0x937c, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xfc7b);
        EXPECT(gbc.pc(), 0x937e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x937c), 0xcb);
        EXPECT(gbc.readMem(0x937d), 0xd1);
        // CB D1 02BE
        gbc.setState(0xcf30, 0x7825, 0xe200, 0xa207, 0xda75, 0xd9e0, 0x1, 0x0);
        gbc.writeMem(0xcf30, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x7825);
        EXPECT(gbc.pc(), 0xcf32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf30), 0xcb);
        EXPECT(gbc.readMem(0xcf31), 0xd1);
        // CB D1 02BF
        gbc.setState(0x9ec, 0x1d8f, 0x1770, 0x3eaf, 0xce43, 0x2d39, 0x0, 0x1);
        gbc.writeMem(0x9ec, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x1d8f);
        EXPECT(gbc.pc(), 0x9ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 02C0
        gbc.setState(0x640e, 0x9e9e, 0x8f00, 0x2242, 0x54e8, 0x5614, 0x0, 0x1);
        gbc.writeMem(0x640e, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x9e9e);
        EXPECT(gbc.pc(), 0x6410);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 02C1
        gbc.setState(0x15bf, 0x493f, 0x2670, 0x2ba3, 0x7a75, 0x19ac, 0x1, 0x1);
        gbc.writeMem(0x15bf, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x493f);
        EXPECT(gbc.pc(), 0x15c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 02C2
        gbc.setState(0xe550, 0x93bd, 0x5ca0, 0xcdae, 0x4a58, 0xca15, 0x1, 0x0);
        gbc.writeMem(0xe550, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x93bd);
        EXPECT(gbc.pc(), 0xe552);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe550), 0xcb);
        EXPECT(gbc.readMem(0xe551), 0xd1);
        // CB D1 02C3
        gbc.setState(0xab2a, 0x7bfc, 0xee60, 0xa7be, 0x2ac5, 0xe38d, 0x1, 0x0);
        gbc.writeMem(0xab2a, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x7bfc);
        EXPECT(gbc.pc(), 0xab2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab2a), 0xcb);
        EXPECT(gbc.readMem(0xab2b), 0xd1);
        // CB D1 02C4
        gbc.setState(0xea81, 0xa03d, 0xb1b0, 0x11ca, 0x4b0c, 0xa288, 0x0, 0x1);
        gbc.writeMem(0xea81, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xa03d);
        EXPECT(gbc.pc(), 0xea83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea81), 0xcb);
        EXPECT(gbc.readMem(0xea82), 0xd1);
        // CB D1 02C5
        gbc.setState(0x2401, 0x222d, 0xef30, 0xb126, 0xf44, 0x6cf3, 0x1, 0x1);
        gbc.writeMem(0x2401, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x222d);
        EXPECT(gbc.pc(), 0x2403);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 02C6
        gbc.setState(0x936d, 0x66f6, 0xde10, 0x92f0, 0xacc5, 0xbbef, 0x0, 0x1);
        gbc.writeMem(0x936d, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x66f6);
        EXPECT(gbc.pc(), 0x936f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x936d), 0xcb);
        EXPECT(gbc.readMem(0x936e), 0xd1);
        // CB D1 02C7
        gbc.setState(0xdd95, 0x67ff, 0x2ac0, 0xf62, 0xf57f, 0x658, 0x0, 0x1);
        gbc.writeMem(0xdd95, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x67ff);
        EXPECT(gbc.pc(), 0xdd97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd95), 0xcb);
        EXPECT(gbc.readMem(0xdd96), 0xd1);
        // CB D1 02C8
        gbc.setState(0xa976, 0x7f65, 0x71e0, 0x12ad, 0x6646, 0x840, 0x1, 0x1);
        gbc.writeMem(0xa976, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x7f65);
        EXPECT(gbc.pc(), 0xa978);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa976), 0xcb);
        EXPECT(gbc.readMem(0xa977), 0xd1);
        // CB D1 02C9
        gbc.setState(0x6ed2, 0xfc50, 0x8710, 0x9efe, 0x6f40, 0x8ef1, 0x0, 0x1);
        gbc.writeMem(0x6ed2, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xfc50);
        EXPECT(gbc.pc(), 0x6ed4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 02CA
        gbc.setState(0x719b, 0xf9a8, 0x2960, 0x94e7, 0xe3ee, 0x6b65, 0x1, 0x0);
        gbc.writeMem(0x719b, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xf9a8);
        EXPECT(gbc.pc(), 0x719d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 02CB
        gbc.setState(0x2ab0, 0xb167, 0xca80, 0xcd27, 0xe909, 0x6ab9, 0x1, 0x0);
        gbc.writeMem(0x2ab0, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xb167);
        EXPECT(gbc.pc(), 0x2ab2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 02CC
        gbc.setState(0x30a2, 0xb933, 0x3cb0, 0x7e76, 0xc772, 0x1d54, 0x0, 0x1);
        gbc.writeMem(0x30a2, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xb933);
        EXPECT(gbc.pc(), 0x30a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 02CD
        gbc.setState(0x25d8, 0xe326, 0xf50, 0x46b1, 0xd0cf, 0x9e15, 0x1, 0x1);
        gbc.writeMem(0x25d8, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xe326);
        EXPECT(gbc.pc(), 0x25da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 02CE
        gbc.setState(0x3091, 0xabd0, 0xfd40, 0x6fc6, 0xf120, 0x56e9, 0x1, 0x0);
        gbc.writeMem(0x3091, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xabd0);
        EXPECT(gbc.pc(), 0x3093);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 02CF
        gbc.setState(0xc4eb, 0x2c2c, 0x8a00, 0xcae3, 0x9e9d, 0xd148, 0x1, 0x1);
        gbc.writeMem(0xc4eb, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x2c2c);
        EXPECT(gbc.pc(), 0xc4ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4eb), 0xcb);
        EXPECT(gbc.readMem(0xc4ec), 0xd1);
        // CB D1 02D0
        gbc.setState(0x3a1c, 0xeb81, 0xe90, 0x169c, 0xd2c3, 0xa, 0x0, 0x1);
        gbc.writeMem(0x3a1c, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xeb81);
        EXPECT(gbc.pc(), 0x3a1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 02D1
        gbc.setState(0xb867, 0xfe43, 0xbfd0, 0x7256, 0xc1d1, 0x53d5, 0x1, 0x0);
        gbc.writeMem(0xb867, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xfe43);
        EXPECT(gbc.pc(), 0xb869);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb867), 0xcb);
        EXPECT(gbc.readMem(0xb868), 0xd1);
        // CB D1 02D2
        gbc.setState(0xefe1, 0x5c38, 0xcc10, 0x63f6, 0xfa3e, 0x3566, 0x1, 0x0);
        gbc.writeMem(0xefe1, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x5c38);
        EXPECT(gbc.pc(), 0xefe3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefe1), 0xcb);
        EXPECT(gbc.readMem(0xefe2), 0xd1);
        // CB D1 02D3
        gbc.setState(0x14b5, 0xa0a6, 0x8730, 0x1421, 0x3421, 0x6f89, 0x0, 0x1);
        gbc.writeMem(0x14b5, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xa0a6);
        EXPECT(gbc.pc(), 0x14b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 02D4
        gbc.setState(0x401a, 0x22fa, 0xc6a0, 0xdb32, 0xa70, 0xba23, 0x1, 0x1);
        gbc.writeMem(0x401a, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x22fa);
        EXPECT(gbc.pc(), 0x401c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 02D5
        gbc.setState(0xc639, 0x1df0, 0x2200, 0x7025, 0xe934, 0xb0bf, 0x0, 0x0);
        gbc.writeMem(0xc639, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x1df0);
        EXPECT(gbc.pc(), 0xc63b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc639), 0xcb);
        EXPECT(gbc.readMem(0xc63a), 0xd1);
        // CB D1 02D6
        gbc.setState(0x8251, 0xccb5, 0x7e40, 0x9410, 0xbb67, 0x7338, 0x1, 0x1);
        gbc.writeMem(0x8251, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xccb5);
        EXPECT(gbc.pc(), 0x8253);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8251), 0xcb);
        EXPECT(gbc.readMem(0x8252), 0xd1);
        // CB D1 02D7
        gbc.setState(0x6d24, 0x8e53, 0x1b00, 0xd9be, 0x22c4, 0x6d7f, 0x1, 0x1);
        gbc.writeMem(0x6d24, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x8e53);
        EXPECT(gbc.pc(), 0x6d26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 02D8
        gbc.setState(0x1e3c, 0x900c, 0x8b00, 0xa23c, 0x9473, 0x63cb, 0x0, 0x0);
        gbc.writeMem(0x1e3c, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x900c);
        EXPECT(gbc.pc(), 0x1e3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 02D9
        gbc.setState(0x7564, 0xc6f2, 0xc590, 0xa92f, 0x9e75, 0xd758, 0x0, 0x1);
        gbc.writeMem(0x7564, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xc6f2);
        EXPECT(gbc.pc(), 0x7566);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 02DA
        gbc.setState(0x7c57, 0x7f32, 0x6570, 0x49ba, 0x571d, 0x3992, 0x0, 0x1);
        gbc.writeMem(0x7c57, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x7f32);
        EXPECT(gbc.pc(), 0x7c59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 02DB
        gbc.setState(0xb262, 0xcbee, 0x2c70, 0x28bd, 0x5d52, 0x193c, 0x0, 0x0);
        gbc.writeMem(0xb262, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xcbee);
        EXPECT(gbc.pc(), 0xb264);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb262), 0xcb);
        EXPECT(gbc.readMem(0xb263), 0xd1);
        // CB D1 02DC
        gbc.setState(0xde17, 0x2908, 0xded0, 0x8a89, 0x6e00, 0xea13, 0x0, 0x0);
        gbc.writeMem(0xde17, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x2908);
        EXPECT(gbc.pc(), 0xde19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde17), 0xcb);
        EXPECT(gbc.readMem(0xde18), 0xd1);
        // CB D1 02DD
        gbc.setState(0x8a5f, 0xcd3e, 0x1ae0, 0x4ddf, 0x8339, 0x2cdb, 0x1, 0x0);
        gbc.writeMem(0x8a5f, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xcd3e);
        EXPECT(gbc.pc(), 0x8a61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a5f), 0xcb);
        EXPECT(gbc.readMem(0x8a60), 0xd1);
        // CB D1 02DE
        gbc.setState(0x8f15, 0x9822, 0xfbd0, 0x648d, 0xe742, 0x447b, 0x0, 0x1);
        gbc.writeMem(0x8f15, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x9822);
        EXPECT(gbc.pc(), 0x8f17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f15), 0xcb);
        EXPECT(gbc.readMem(0x8f16), 0xd1);
        // CB D1 02DF
        gbc.setState(0xc0ff, 0x8bc, 0x86a0, 0x55f1, 0xfcb2, 0x1fe3, 0x0, 0x1);
        gbc.writeMem(0xc0ff, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x8bc);
        EXPECT(gbc.pc(), 0xc101);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0ff), 0xcb);
        EXPECT(gbc.readMem(0xc100), 0xd1);
        // CB D1 02E1
        gbc.setState(0xb5de, 0xc372, 0x9e20, 0xf8ef, 0x36d1, 0xa6f7, 0x0, 0x0);
        gbc.writeMem(0xb5de, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xc372);
        EXPECT(gbc.pc(), 0xb5e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5de), 0xcb);
        EXPECT(gbc.readMem(0xb5df), 0xd1);
        // CB D1 02E2
        gbc.setState(0x4048, 0xdf12, 0x2170, 0xfc2d, 0xcd04, 0x4ed6, 0x1, 0x0);
        gbc.writeMem(0x4048, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xdf12);
        EXPECT(gbc.pc(), 0x404a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 02E3
        gbc.setState(0x406, 0x73a2, 0x1a10, 0x9075, 0x9b94, 0xba98, 0x1, 0x0);
        gbc.writeMem(0x406, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x73a2);
        EXPECT(gbc.pc(), 0x408);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 02E4
        gbc.setState(0xaaef, 0xbf33, 0xbdf0, 0x72f, 0x35f8, 0x8cd5, 0x1, 0x1);
        gbc.writeMem(0xaaef, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xbf33);
        EXPECT(gbc.pc(), 0xaaf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaef), 0xcb);
        EXPECT(gbc.readMem(0xaaf0), 0xd1);
        // CB D1 02E5
        gbc.setState(0x7f61, 0xab4d, 0xbad0, 0x180e, 0xef54, 0x73b8, 0x0, 0x0);
        gbc.writeMem(0x7f61, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xab4d);
        EXPECT(gbc.pc(), 0x7f63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 02E6
        gbc.setState(0xdc3f, 0x3c70, 0x7dc0, 0x5d77, 0x2c2c, 0xd983, 0x1, 0x0);
        gbc.writeMem(0xdc3f, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x3c70);
        EXPECT(gbc.pc(), 0xdc41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc3f), 0xcb);
        EXPECT(gbc.readMem(0xdc40), 0xd1);
        // CB D1 02E7
        gbc.setState(0x3afa, 0x3450, 0x6c80, 0x1934, 0x99d1, 0xb994, 0x0, 0x1);
        gbc.writeMem(0x3afa, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x3450);
        EXPECT(gbc.pc(), 0x3afc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 02E8
        gbc.setState(0xa5c1, 0xa821, 0xb4a0, 0x4adf, 0x51fb, 0x2cc3, 0x0, 0x0);
        gbc.writeMem(0xa5c1, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xa821);
        EXPECT(gbc.pc(), 0xa5c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5c1), 0xcb);
        EXPECT(gbc.readMem(0xa5c2), 0xd1);
        // CB D1 02E9
        gbc.setState(0xbeb7, 0x706f, 0xb50, 0x7872, 0x48ef, 0x1917, 0x0, 0x1);
        gbc.writeMem(0xbeb7, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x706f);
        EXPECT(gbc.pc(), 0xbeb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbeb7), 0xcb);
        EXPECT(gbc.readMem(0xbeb8), 0xd1);
        // CB D1 02EA
        gbc.setState(0xd269, 0x4ac8, 0xa030, 0xbad0, 0xf7f6, 0x3789, 0x1, 0x0);
        gbc.writeMem(0xd269, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x4ac8);
        EXPECT(gbc.pc(), 0xd26b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd269), 0xcb);
        EXPECT(gbc.readMem(0xd26a), 0xd1);
        // CB D1 02EB
        gbc.setState(0xd08c, 0x7b12, 0xc1c0, 0x8427, 0xf73, 0x9454, 0x1, 0x1);
        gbc.writeMem(0xd08c, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x7b12);
        EXPECT(gbc.pc(), 0xd08e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd08c), 0xcb);
        EXPECT(gbc.readMem(0xd08d), 0xd1);
        // CB D1 02EC
        gbc.setState(0x298, 0xacdc, 0x9c30, 0xaeee, 0xb3ed, 0x1a11, 0x0, 0x0);
        gbc.writeMem(0x298, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xacdc);
        EXPECT(gbc.pc(), 0x29a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 02ED
        gbc.setState(0xb871, 0x874, 0x4d20, 0xdb53, 0x6a8, 0xd3bf, 0x1, 0x1);
        gbc.writeMem(0xb871, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x874);
        EXPECT(gbc.pc(), 0xb873);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb871), 0xcb);
        EXPECT(gbc.readMem(0xb872), 0xd1);
        // CB D1 02EE
        gbc.setState(0xbf59, 0xca41, 0x7350, 0xccb5, 0x7c4, 0x87c8, 0x0, 0x0);
        gbc.writeMem(0xbf59, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xca41);
        EXPECT(gbc.pc(), 0xbf5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf59), 0xcb);
        EXPECT(gbc.readMem(0xbf5a), 0xd1);
        // CB D1 02EF
        gbc.setState(0x3724, 0x54a3, 0x28d0, 0x91c6, 0x7b36, 0xbf87, 0x1, 0x1);
        gbc.writeMem(0x3724, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x54a3);
        EXPECT(gbc.pc(), 0x3726);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 02F0
        gbc.setState(0xa5fb, 0x160, 0xb3c0, 0xc4d2, 0x9f64, 0x6910, 0x0, 0x0);
        gbc.writeMem(0xa5fb, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x160);
        EXPECT(gbc.pc(), 0xa5fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5fb), 0xcb);
        EXPECT(gbc.readMem(0xa5fc), 0xd1);
        // CB D1 02F1
        gbc.setState(0x7c1a, 0xc458, 0xfb40, 0xb995, 0xfdd9, 0x94eb, 0x0, 0x1);
        gbc.writeMem(0x7c1a, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xc458);
        EXPECT(gbc.pc(), 0x7c1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 02F2
        gbc.setState(0x4030, 0xb47d, 0x4400, 0x184e, 0xc10f, 0xea49, 0x0, 0x0);
        gbc.writeMem(0x4030, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xb47d);
        EXPECT(gbc.pc(), 0x4032);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 02F3
        gbc.setState(0x768d, 0x774e, 0x67d0, 0xb04c, 0x4922, 0x8b01, 0x0, 0x1);
        gbc.writeMem(0x768d, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x774e);
        EXPECT(gbc.pc(), 0x768f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 02F4
        gbc.setState(0x5e5c, 0x327d, 0x5ed0, 0x2d42, 0x2803, 0x50bd, 0x0, 0x1);
        gbc.writeMem(0x5e5c, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x327d);
        EXPECT(gbc.pc(), 0x5e5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 02F5
        gbc.setState(0xca4b, 0xd27c, 0xeba0, 0xe177, 0x79c8, 0xb552, 0x1, 0x1);
        gbc.writeMem(0xca4b, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xd27c);
        EXPECT(gbc.pc(), 0xca4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca4b), 0xcb);
        EXPECT(gbc.readMem(0xca4c), 0xd1);
        // CB D1 02F6
        gbc.setState(0xa504, 0x4c87, 0x93a0, 0x3a91, 0xdb50, 0xeedd, 0x0, 0x1);
        gbc.writeMem(0xa504, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x4c87);
        EXPECT(gbc.pc(), 0xa506);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa504), 0xcb);
        EXPECT(gbc.readMem(0xa505), 0xd1);
        // CB D1 02F7
        gbc.setState(0xe7b3, 0x8919, 0x4500, 0xfc16, 0x529, 0x15b8, 0x0, 0x1);
        gbc.writeMem(0xe7b3, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x8919);
        EXPECT(gbc.pc(), 0xe7b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7b3), 0xcb);
        EXPECT(gbc.readMem(0xe7b4), 0xd1);
        // CB D1 02F8
        gbc.setState(0x158b, 0x8494, 0xfeb0, 0x839c, 0xade, 0x42d5, 0x1, 0x1);
        gbc.writeMem(0x158b, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x8494);
        EXPECT(gbc.pc(), 0x158d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 02F9
        gbc.setState(0xc4e6, 0xa85e, 0x42d0, 0x4503, 0xa5ec, 0x2031, 0x1, 0x0);
        gbc.writeMem(0xc4e6, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xa85e);
        EXPECT(gbc.pc(), 0xc4e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4e6), 0xcb);
        EXPECT(gbc.readMem(0xc4e7), 0xd1);
        // CB D1 02FB
        gbc.setState(0xa874, 0xeea4, 0x4000, 0xc842, 0xe9c8, 0x1975, 0x0, 0x0);
        gbc.writeMem(0xa874, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xeea4);
        EXPECT(gbc.pc(), 0xa876);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa874), 0xcb);
        EXPECT(gbc.readMem(0xa875), 0xd1);
        // CB D1 02FC
        gbc.setState(0x359e, 0x8ba3, 0x4e10, 0x1b91, 0x71c6, 0x5971, 0x1, 0x1);
        gbc.writeMem(0x359e, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x8ba3);
        EXPECT(gbc.pc(), 0x35a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 02FD
        gbc.setState(0x1250, 0x1e03, 0x27b0, 0xafdf, 0xa551, 0xd0fc, 0x0, 0x0);
        gbc.writeMem(0x1250, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x1e03);
        EXPECT(gbc.pc(), 0x1252);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 02FE
        gbc.setState(0x3647, 0x6aff, 0x1770, 0x1b12, 0x2ff0, 0x644, 0x0, 0x0);
        gbc.writeMem(0x3647, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x6aff);
        EXPECT(gbc.pc(), 0x3649);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 02FF
        gbc.setState(0xb323, 0x939, 0xdf0, 0x5dcc, 0xaab2, 0xa27c, 0x0, 0x1);
        gbc.writeMem(0xb323, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x939);
        EXPECT(gbc.pc(), 0xb325);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb323), 0xcb);
        EXPECT(gbc.readMem(0xb324), 0xd1);
        // CB D1 0300
        gbc.setState(0xe01, 0x3b7e, 0xa0a0, 0x6ede, 0x370a, 0x56da, 0x1, 0x0);
        gbc.writeMem(0xe01, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x3b7e);
        EXPECT(gbc.pc(), 0xe03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0301
        gbc.setState(0xa4a9, 0x454d, 0x9f00, 0x6b94, 0xe943, 0x4c8a, 0x0, 0x1);
        gbc.writeMem(0xa4a9, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x454d);
        EXPECT(gbc.pc(), 0xa4ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4a9), 0xcb);
        EXPECT(gbc.readMem(0xa4aa), 0xd1);
        // CB D1 0302
        gbc.setState(0x294d, 0x21ac, 0x4050, 0x1dc1, 0xf50c, 0x903b, 0x1, 0x0);
        gbc.writeMem(0x294d, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x21ac);
        EXPECT(gbc.pc(), 0x294f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0303
        gbc.setState(0x6393, 0x44d7, 0x5520, 0x4d6f, 0xe23, 0x8e68, 0x1, 0x1);
        gbc.writeMem(0x6393, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x44d7);
        EXPECT(gbc.pc(), 0x6395);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0304
        gbc.setState(0x562c, 0xd525, 0x1460, 0x1074, 0x9b44, 0xd39a, 0x0, 0x1);
        gbc.writeMem(0x562c, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xd525);
        EXPECT(gbc.pc(), 0x562e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0305
        gbc.setState(0x5d8, 0xccbd, 0x2d60, 0xadc2, 0x2c85, 0xabed, 0x1, 0x1);
        gbc.writeMem(0x5d8, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xccbd);
        EXPECT(gbc.pc(), 0x5da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0306
        gbc.setState(0x1561, 0x2590, 0xd4c0, 0x704, 0x863, 0x676e, 0x1, 0x1);
        gbc.writeMem(0x1561, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x2590);
        EXPECT(gbc.pc(), 0x1563);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0307
        gbc.setState(0x3100, 0x6b86, 0x5a40, 0xa078, 0xfef0, 0xa26e, 0x0, 0x0);
        gbc.writeMem(0x3100, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x6b86);
        EXPECT(gbc.pc(), 0x3102);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0308
        gbc.setState(0xe992, 0xef63, 0xf560, 0x5c60, 0x84b3, 0xadb6, 0x0, 0x1);
        gbc.writeMem(0xe992, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xef63);
        EXPECT(gbc.pc(), 0xe994);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe992), 0xcb);
        EXPECT(gbc.readMem(0xe993), 0xd1);
        // CB D1 0309
        gbc.setState(0x9b7d, 0x7430, 0xcca0, 0x7a51, 0x46d7, 0xa4fa, 0x0, 0x1);
        gbc.writeMem(0x9b7d, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x7430);
        EXPECT(gbc.pc(), 0x9b7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b7d), 0xcb);
        EXPECT(gbc.readMem(0x9b7e), 0xd1);
        // CB D1 030A
        gbc.setState(0xa931, 0xffdf, 0x6e70, 0x14d6, 0xb2d3, 0x6db, 0x0, 0x1);
        gbc.writeMem(0xa931, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xffdf);
        EXPECT(gbc.pc(), 0xa933);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa931), 0xcb);
        EXPECT(gbc.readMem(0xa932), 0xd1);
        // CB D1 030B
        gbc.setState(0x6ac2, 0x99ae, 0xed00, 0xf91e, 0xe1c6, 0x85c3, 0x0, 0x0);
        gbc.writeMem(0x6ac2, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x99ae);
        EXPECT(gbc.pc(), 0x6ac4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 030C
        gbc.setState(0x31cd, 0x38ec, 0xf650, 0x3544, 0x6127, 0x9f77, 0x1, 0x0);
        gbc.writeMem(0x31cd, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x38ec);
        EXPECT(gbc.pc(), 0x31cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 030D
        gbc.setState(0x15ef, 0xc6f0, 0x91c0, 0xb79c, 0xccc2, 0xe72e, 0x1, 0x0);
        gbc.writeMem(0x15ef, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xc6f0);
        EXPECT(gbc.pc(), 0x15f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 030E
        gbc.setState(0x8fb4, 0xcb1d, 0x84e0, 0x382b, 0x1629, 0x840e, 0x0, 0x1);
        gbc.writeMem(0x8fb4, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xcb1d);
        EXPECT(gbc.pc(), 0x8fb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fb4), 0xcb);
        EXPECT(gbc.readMem(0x8fb5), 0xd1);
        // CB D1 030F
        gbc.setState(0x6e34, 0xbde4, 0x87e0, 0xa5ee, 0x20a6, 0x3f08, 0x0, 0x1);
        gbc.writeMem(0x6e34, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xbde4);
        EXPECT(gbc.pc(), 0x6e36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0310
        gbc.setState(0x6188, 0x9f27, 0x2e80, 0x2ac6, 0x8f0f, 0x3708, 0x0, 0x1);
        gbc.writeMem(0x6188, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x9f27);
        EXPECT(gbc.pc(), 0x618a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0311
        gbc.setState(0xb861, 0xfeec, 0xf220, 0x96d5, 0xd4df, 0x858a, 0x0, 0x1);
        gbc.writeMem(0xb861, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xfeec);
        EXPECT(gbc.pc(), 0xb863);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb861), 0xcb);
        EXPECT(gbc.readMem(0xb862), 0xd1);
        // CB D1 0312
        gbc.setState(0xaed2, 0xd220, 0xb540, 0x2d9a, 0x7744, 0x46e9, 0x0, 0x1);
        gbc.writeMem(0xaed2, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xd220);
        EXPECT(gbc.pc(), 0xaed4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaed2), 0xcb);
        EXPECT(gbc.readMem(0xaed3), 0xd1);
        // CB D1 0313
        gbc.setState(0x5b1e, 0x2934, 0xac10, 0xaa76, 0xd87e, 0x808, 0x0, 0x1);
        gbc.writeMem(0x5b1e, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x2934);
        EXPECT(gbc.pc(), 0x5b20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0314
        gbc.setState(0x37cc, 0x45dc, 0x5910, 0xc559, 0xed8a, 0x7cd1, 0x0, 0x0);
        gbc.writeMem(0x37cc, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x45dc);
        EXPECT(gbc.pc(), 0x37ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0315
        gbc.setState(0x3bda, 0x8389, 0xe30, 0xb2a7, 0x63a3, 0x326b, 0x0, 0x0);
        gbc.writeMem(0x3bda, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x8389);
        EXPECT(gbc.pc(), 0x3bdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0316
        gbc.setState(0x5dcd, 0x905f, 0x7390, 0x17e7, 0xc7dd, 0xf445, 0x0, 0x0);
        gbc.writeMem(0x5dcd, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x905f);
        EXPECT(gbc.pc(), 0x5dcf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0317
        gbc.setState(0xb2ef, 0x5e5, 0xaf50, 0x5260, 0x80ae, 0xa77, 0x0, 0x0);
        gbc.writeMem(0xb2ef, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x5e5);
        EXPECT(gbc.pc(), 0xb2f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2ef), 0xcb);
        EXPECT(gbc.readMem(0xb2f0), 0xd1);
        // CB D1 0318
        gbc.setState(0xe683, 0xe10b, 0xb250, 0x2895, 0x67c2, 0xc5e8, 0x1, 0x0);
        gbc.writeMem(0xe683, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xe10b);
        EXPECT(gbc.pc(), 0xe685);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe683), 0xcb);
        EXPECT(gbc.readMem(0xe684), 0xd1);
        // CB D1 0319
        gbc.setState(0x8a3a, 0x5a85, 0xd940, 0xd79d, 0xbfa6, 0xe310, 0x0, 0x0);
        gbc.writeMem(0x8a3a, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x5a85);
        EXPECT(gbc.pc(), 0x8a3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a3a), 0xcb);
        EXPECT(gbc.readMem(0x8a3b), 0xd1);
        // CB D1 031A
        gbc.setState(0x257, 0x3c89, 0xbb80, 0x3168, 0xa786, 0x57c1, 0x1, 0x0);
        gbc.writeMem(0x257, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x3c89);
        EXPECT(gbc.pc(), 0x259);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 031B
        gbc.setState(0xd459, 0x406d, 0xed70, 0x7fdb, 0xb6ee, 0x56cc, 0x1, 0x1);
        gbc.writeMem(0xd459, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x406d);
        EXPECT(gbc.pc(), 0xd45b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd459), 0xcb);
        EXPECT(gbc.readMem(0xd45a), 0xd1);
        // CB D1 031C
        gbc.setState(0x7d3c, 0xa193, 0x5250, 0xc977, 0xa3a3, 0x3bc0, 0x0, 0x1);
        gbc.writeMem(0x7d3c, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xa193);
        EXPECT(gbc.pc(), 0x7d3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 031D
        gbc.setState(0x65fe, 0xc6bf, 0x3940, 0x7b8f, 0x5521, 0x3aa9, 0x0, 0x0);
        gbc.writeMem(0x65fe, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xc6bf);
        EXPECT(gbc.pc(), 0x6600);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 031E
        gbc.setState(0x91b, 0x7a7a, 0x66c0, 0xc8be, 0xa7d3, 0x8841, 0x1, 0x1);
        gbc.writeMem(0x91b, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x7a7a);
        EXPECT(gbc.pc(), 0x91d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 031F
        gbc.setState(0x3751, 0xee81, 0xea40, 0x5b7f, 0x2697, 0x1c01, 0x0, 0x1);
        gbc.writeMem(0x3751, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xee81);
        EXPECT(gbc.pc(), 0x3753);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0320
        gbc.setState(0x11f0, 0x8f96, 0xcfd0, 0xd5f9, 0x18bd, 0x7b0f, 0x0, 0x0);
        gbc.writeMem(0x11f0, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x8f96);
        EXPECT(gbc.pc(), 0x11f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0321
        gbc.setState(0xed46, 0x9f48, 0x4840, 0x69b7, 0xa862, 0x9ea2, 0x0, 0x0);
        gbc.writeMem(0xed46, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x9f48);
        EXPECT(gbc.pc(), 0xed48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed46), 0xcb);
        EXPECT(gbc.readMem(0xed47), 0xd1);
        // CB D1 0322
        gbc.setState(0x8e05, 0x178, 0x8e0, 0xdbbd, 0x1e39, 0x2cd8, 0x1, 0x1);
        gbc.writeMem(0x8e05, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x178);
        EXPECT(gbc.pc(), 0x8e07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e05), 0xcb);
        EXPECT(gbc.readMem(0x8e06), 0xd1);
        // CB D1 0323
        gbc.setState(0xb283, 0xf542, 0x8e40, 0x6a36, 0x5c3a, 0x3bb8, 0x0, 0x0);
        gbc.writeMem(0xb283, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xf542);
        EXPECT(gbc.pc(), 0xb285);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb283), 0xcb);
        EXPECT(gbc.readMem(0xb284), 0xd1);
        // CB D1 0324
        gbc.setState(0x24c5, 0xe281, 0x86c0, 0x495b, 0x304c, 0x982d, 0x0, 0x0);
        gbc.writeMem(0x24c5, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xe281);
        EXPECT(gbc.pc(), 0x24c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0325
        gbc.setState(0xdb40, 0x76c8, 0xc710, 0x5727, 0x73b2, 0x22f3, 0x1, 0x0);
        gbc.writeMem(0xdb40, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x76c8);
        EXPECT(gbc.pc(), 0xdb42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb40), 0xcb);
        EXPECT(gbc.readMem(0xdb41), 0xd1);
        // CB D1 0326
        gbc.setState(0xcc0e, 0x1c53, 0x6ca0, 0x1d9, 0x64da, 0x911b, 0x0, 0x1);
        gbc.writeMem(0xcc0e, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x1c53);
        EXPECT(gbc.pc(), 0xcc10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc0e), 0xcb);
        EXPECT(gbc.readMem(0xcc0f), 0xd1);
        // CB D1 0327
        gbc.setState(0x4928, 0x7b6b, 0xd3a0, 0x2164, 0x538, 0x628f, 0x1, 0x0);
        gbc.writeMem(0x4928, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x7b6b);
        EXPECT(gbc.pc(), 0x492a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0328
        gbc.setState(0x8a71, 0xf90b, 0xe910, 0x6b09, 0xef9b, 0xe7b4, 0x1, 0x1);
        gbc.writeMem(0x8a71, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xf90b);
        EXPECT(gbc.pc(), 0x8a73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a71), 0xcb);
        EXPECT(gbc.readMem(0x8a72), 0xd1);
        // CB D1 0329
        gbc.setState(0x267c, 0x3bfe, 0x2680, 0x235c, 0xe386, 0x8e2a, 0x1, 0x1);
        gbc.writeMem(0x267c, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x3bfe);
        EXPECT(gbc.pc(), 0x267e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 032A
        gbc.setState(0x2822, 0x7065, 0xcf20, 0x3cbf, 0x516e, 0xf0e, 0x0, 0x1);
        gbc.writeMem(0x2822, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x7065);
        EXPECT(gbc.pc(), 0x2824);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 032B
        gbc.setState(0xd4a8, 0x2bd8, 0x8830, 0x4373, 0xffe7, 0x55f6, 0x1, 0x0);
        gbc.writeMem(0xd4a8, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x2bd8);
        EXPECT(gbc.pc(), 0xd4aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4a8), 0xcb);
        EXPECT(gbc.readMem(0xd4a9), 0xd1);
        // CB D1 032C
        gbc.setState(0x531d, 0x6ece, 0xd360, 0x16c0, 0xd996, 0xe0f7, 0x0, 0x0);
        gbc.writeMem(0x531d, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x6ece);
        EXPECT(gbc.pc(), 0x531f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 032D
        gbc.setState(0xc806, 0xfaa4, 0x2100, 0xb452, 0x8b4c, 0x22b7, 0x1, 0x1);
        gbc.writeMem(0xc806, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xfaa4);
        EXPECT(gbc.pc(), 0xc808);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc806), 0xcb);
        EXPECT(gbc.readMem(0xc807), 0xd1);
        // CB D1 032E
        gbc.setState(0xd626, 0x8a39, 0xf350, 0xa83b, 0x5615, 0xc878, 0x0, 0x1);
        gbc.writeMem(0xd626, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x8a39);
        EXPECT(gbc.pc(), 0xd628);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd626), 0xcb);
        EXPECT(gbc.readMem(0xd627), 0xd1);
        // CB D1 032F
        gbc.setState(0x8aba, 0xccc8, 0xbdd0, 0x89f0, 0xd9bd, 0xd012, 0x0, 0x0);
        gbc.writeMem(0x8aba, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xccc8);
        EXPECT(gbc.pc(), 0x8abc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8aba), 0xcb);
        EXPECT(gbc.readMem(0x8abb), 0xd1);
        // CB D1 0330
        gbc.setState(0x9b0f, 0xe2b6, 0x3250, 0x7ff2, 0xcd83, 0xbbef, 0x0, 0x0);
        gbc.writeMem(0x9b0f, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xe2b6);
        EXPECT(gbc.pc(), 0x9b11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b0f), 0xcb);
        EXPECT(gbc.readMem(0x9b10), 0xd1);
        // CB D1 0331
        gbc.setState(0xb572, 0xbf5f, 0xad10, 0xd5f5, 0xa86b, 0xc2fb, 0x1, 0x1);
        gbc.writeMem(0xb572, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xbf5f);
        EXPECT(gbc.pc(), 0xb574);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb572), 0xcb);
        EXPECT(gbc.readMem(0xb573), 0xd1);
        // CB D1 0332
        gbc.setState(0xb9da, 0xdce3, 0x1c20, 0xb812, 0x7a1a, 0x96ce, 0x1, 0x1);
        gbc.writeMem(0xb9da, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xdce3);
        EXPECT(gbc.pc(), 0xb9dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9da), 0xcb);
        EXPECT(gbc.readMem(0xb9db), 0xd1);
        // CB D1 0333
        gbc.setState(0xc372, 0x34b8, 0xe940, 0x1789, 0x3b11, 0x6804, 0x1, 0x1);
        gbc.writeMem(0xc372, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x34b8);
        EXPECT(gbc.pc(), 0xc374);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc372), 0xcb);
        EXPECT(gbc.readMem(0xc373), 0xd1);
        // CB D1 0334
        gbc.setState(0xa586, 0xd858, 0x9b10, 0x1110, 0xb390, 0x7487, 0x0, 0x0);
        gbc.writeMem(0xa586, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xd858);
        EXPECT(gbc.pc(), 0xa588);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa586), 0xcb);
        EXPECT(gbc.readMem(0xa587), 0xd1);
        // CB D1 0335
        gbc.setState(0x37dc, 0x1683, 0x600, 0xbfcb, 0x2eee, 0x439e, 0x1, 0x1);
        gbc.writeMem(0x37dc, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x1683);
        EXPECT(gbc.pc(), 0x37de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0336
        gbc.setState(0xc211, 0x8777, 0x360, 0xbee4, 0x5ed6, 0x4070, 0x1, 0x1);
        gbc.writeMem(0xc211, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x8777);
        EXPECT(gbc.pc(), 0xc213);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc211), 0xcb);
        EXPECT(gbc.readMem(0xc212), 0xd1);
        // CB D1 0337
        gbc.setState(0x7613, 0x6377, 0xa0d0, 0x564b, 0x9a00, 0xb1e6, 0x0, 0x0);
        gbc.writeMem(0x7613, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x6377);
        EXPECT(gbc.pc(), 0x7615);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0338
        gbc.setState(0x1ef3, 0xa9e2, 0x8ad0, 0xca16, 0x4e25, 0xe1ba, 0x0, 0x0);
        gbc.writeMem(0x1ef3, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xa9e2);
        EXPECT(gbc.pc(), 0x1ef5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0339
        gbc.setState(0x4da3, 0x6610, 0x74b0, 0x656, 0xdddb, 0x7fbc, 0x0, 0x0);
        gbc.writeMem(0x4da3, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x6610);
        EXPECT(gbc.pc(), 0x4da5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 033B
        gbc.setState(0x2796, 0xfe6e, 0x3b30, 0x90af, 0x413, 0xf92d, 0x1, 0x1);
        gbc.writeMem(0x2796, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xfe6e);
        EXPECT(gbc.pc(), 0x2798);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 033C
        gbc.setState(0x9954, 0xd43f, 0x5660, 0x55ab, 0x1a7d, 0xc7c5, 0x0, 0x0);
        gbc.writeMem(0x9954, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xd43f);
        EXPECT(gbc.pc(), 0x9956);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9954), 0xcb);
        EXPECT(gbc.readMem(0x9955), 0xd1);
        // CB D1 033D
        gbc.setState(0x2b63, 0x71db, 0x7c00, 0x73b1, 0x3976, 0x9c64, 0x1, 0x1);
        gbc.writeMem(0x2b63, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x71db);
        EXPECT(gbc.pc(), 0x2b65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 033E
        gbc.setState(0x16c7, 0xe875, 0xf520, 0xb98b, 0xf28e, 0xd0ad, 0x1, 0x1);
        gbc.writeMem(0x16c7, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xe875);
        EXPECT(gbc.pc(), 0x16c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 033F
        gbc.setState(0x2aaf, 0x43ee, 0x50b0, 0xf059, 0xf4b1, 0xc728, 0x1, 0x1);
        gbc.writeMem(0x2aaf, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x43ee);
        EXPECT(gbc.pc(), 0x2ab1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0341
        gbc.setState(0xdc57, 0xb6cd, 0x8720, 0x2939, 0x970c, 0x9a14, 0x1, 0x1);
        gbc.writeMem(0xdc57, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xb6cd);
        EXPECT(gbc.pc(), 0xdc59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc57), 0xcb);
        EXPECT(gbc.readMem(0xdc58), 0xd1);
        // CB D1 0342
        gbc.setState(0xaf51, 0x2892, 0xa680, 0x8ac4, 0x9a10, 0x4753, 0x0, 0x0);
        gbc.writeMem(0xaf51, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x2892);
        EXPECT(gbc.pc(), 0xaf53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf51), 0xcb);
        EXPECT(gbc.readMem(0xaf52), 0xd1);
        // CB D1 0344
        gbc.setState(0x7e8, 0x6882, 0xafa0, 0x1449, 0x7410, 0x4750, 0x0, 0x1);
        gbc.writeMem(0x7e8, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x6882);
        EXPECT(gbc.pc(), 0x7ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0345
        gbc.setState(0x484a, 0x8041, 0x96f0, 0x15fb, 0xc9f6, 0x5a31, 0x1, 0x0);
        gbc.writeMem(0x484a, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x8041);
        EXPECT(gbc.pc(), 0x484c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0346
        gbc.setState(0x670d, 0x5761, 0x80a0, 0x5ed5, 0x10fb, 0x74c7, 0x0, 0x0);
        gbc.writeMem(0x670d, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x5761);
        EXPECT(gbc.pc(), 0x670f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0347
        gbc.setState(0x386e, 0x3dc2, 0x620, 0xe585, 0x4e3, 0x9435, 0x1, 0x1);
        gbc.writeMem(0x386e, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x3dc2);
        EXPECT(gbc.pc(), 0x3870);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0349
        gbc.setState(0x6ee7, 0x2b6f, 0xa380, 0xac1c, 0xdce3, 0x281b, 0x0, 0x1);
        gbc.writeMem(0x6ee7, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x2b6f);
        EXPECT(gbc.pc(), 0x6ee9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 034A
        gbc.setState(0xe906, 0x9ba3, 0xe2c0, 0x1706, 0xe0a4, 0x7b46, 0x0, 0x1);
        gbc.writeMem(0xe906, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x9ba3);
        EXPECT(gbc.pc(), 0xe908);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe906), 0xcb);
        EXPECT(gbc.readMem(0xe907), 0xd1);
        // CB D1 034B
        gbc.setState(0xb1b0, 0x73e, 0x2d20, 0x570f, 0x92db, 0xff27, 0x1, 0x1);
        gbc.writeMem(0xb1b0, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x73e);
        EXPECT(gbc.pc(), 0xb1b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1b0), 0xcb);
        EXPECT(gbc.readMem(0xb1b1), 0xd1);
        // CB D1 034C
        gbc.setState(0x2176, 0x89af, 0x7080, 0xc844, 0x29a8, 0x5428, 0x0, 0x1);
        gbc.writeMem(0x2176, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x89af);
        EXPECT(gbc.pc(), 0x2178);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 034D
        gbc.setState(0x2483, 0xcb7c, 0xa600, 0xb23, 0x5b73, 0xb825, 0x1, 0x1);
        gbc.writeMem(0x2483, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xcb7c);
        EXPECT(gbc.pc(), 0x2485);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 034F
        gbc.setState(0x6782, 0x47a4, 0x5d60, 0xfdf4, 0x785f, 0x6618, 0x1, 0x1);
        gbc.writeMem(0x6782, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x47a4);
        EXPECT(gbc.pc(), 0x6784);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0350
        gbc.setState(0xdc02, 0x8525, 0x2c20, 0xfd72, 0x7ff1, 0xd870, 0x0, 0x1);
        gbc.writeMem(0xdc02, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x8525);
        EXPECT(gbc.pc(), 0xdc04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc02), 0xcb);
        EXPECT(gbc.readMem(0xdc03), 0xd1);
        // CB D1 0351
        gbc.setState(0x445, 0xd7a9, 0x24f0, 0xaddb, 0xc3d, 0x8fe1, 0x1, 0x0);
        gbc.writeMem(0x445, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xd7a9);
        EXPECT(gbc.pc(), 0x447);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0352
        gbc.setState(0xafc, 0x2fb1, 0x4640, 0x8b73, 0x6d5c, 0xfc10, 0x1, 0x1);
        gbc.writeMem(0xafc, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x2fb1);
        EXPECT(gbc.pc(), 0xafe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0353
        gbc.setState(0x12bf, 0x97be, 0x7a10, 0x85e0, 0x6dc7, 0xd6e3, 0x0, 0x0);
        gbc.writeMem(0x12bf, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x97be);
        EXPECT(gbc.pc(), 0x12c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0354
        gbc.setState(0x6887, 0xcf2a, 0x7f60, 0x2bde, 0x8059, 0x5fb3, 0x0, 0x1);
        gbc.writeMem(0x6887, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xcf2a);
        EXPECT(gbc.pc(), 0x6889);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0355
        gbc.setState(0x310c, 0x81b9, 0x6b60, 0xe4b2, 0xf14b, 0xad54, 0x1, 0x1);
        gbc.writeMem(0x310c, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x81b9);
        EXPECT(gbc.pc(), 0x310e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0356
        gbc.setState(0xecd7, 0xf0f, 0x6b00, 0x357e, 0xb66b, 0xb027, 0x0, 0x1);
        gbc.writeMem(0xecd7, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xf0f);
        EXPECT(gbc.pc(), 0xecd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecd7), 0xcb);
        EXPECT(gbc.readMem(0xecd8), 0xd1);
        // CB D1 0357
        gbc.setState(0x8b59, 0x76e7, 0xe760, 0xffaf, 0x994, 0x4aea, 0x1, 0x0);
        gbc.writeMem(0x8b59, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x76e7);
        EXPECT(gbc.pc(), 0x8b5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b59), 0xcb);
        EXPECT(gbc.readMem(0x8b5a), 0xd1);
        // CB D1 0358
        gbc.setState(0xa9ad, 0xc031, 0xb20, 0x4ff8, 0x4a9c, 0x9e5, 0x1, 0x0);
        gbc.writeMem(0xa9ad, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xc031);
        EXPECT(gbc.pc(), 0xa9af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9ad), 0xcb);
        EXPECT(gbc.readMem(0xa9ae), 0xd1);
        // CB D1 0359
        gbc.setState(0x2bf, 0x28a1, 0xbe70, 0xd5f8, 0x36b, 0xc506, 0x0, 0x1);
        gbc.writeMem(0x2bf, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x28a1);
        EXPECT(gbc.pc(), 0x2c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 035A
        gbc.setState(0x5ee2, 0xcaf1, 0xb5f0, 0x3af, 0xbef0, 0x6cdd, 0x0, 0x0);
        gbc.writeMem(0x5ee2, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xcaf1);
        EXPECT(gbc.pc(), 0x5ee4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 035B
        gbc.setState(0x583d, 0x7c5a, 0x230, 0xcf6c, 0x2e01, 0xc8d4, 0x1, 0x0);
        gbc.writeMem(0x583d, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x7c5a);
        EXPECT(gbc.pc(), 0x583f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 035C
        gbc.setState(0x4edf, 0xdae2, 0xb770, 0xc324, 0x963c, 0x86af, 0x1, 0x1);
        gbc.writeMem(0x4edf, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xdae2);
        EXPECT(gbc.pc(), 0x4ee1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 035D
        gbc.setState(0x6b7d, 0x4ab5, 0x3fa0, 0x2ab5, 0x647b, 0x69a3, 0x0, 0x0);
        gbc.writeMem(0x6b7d, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x4ab5);
        EXPECT(gbc.pc(), 0x6b7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 035E
        gbc.setState(0x36a, 0x4390, 0x3050, 0xafa5, 0xed0b, 0xe793, 0x1, 0x1);
        gbc.writeMem(0x36a, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x4390);
        EXPECT(gbc.pc(), 0x36c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 035F
        gbc.setState(0xd0b1, 0xa9d1, 0x6680, 0xe3c0, 0xa22a, 0x39af, 0x1, 0x1);
        gbc.writeMem(0xd0b1, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xa9d1);
        EXPECT(gbc.pc(), 0xd0b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0b1), 0xcb);
        EXPECT(gbc.readMem(0xd0b2), 0xd1);
        // CB D1 0360
        gbc.setState(0x89af, 0xf9c5, 0x4ee0, 0xb279, 0x330f, 0x88c9, 0x0, 0x0);
        gbc.writeMem(0x89af, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xf9c5);
        EXPECT(gbc.pc(), 0x89b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89af), 0xcb);
        EXPECT(gbc.readMem(0x89b0), 0xd1);
        // CB D1 0361
        gbc.setState(0xc231, 0x8675, 0x5b30, 0x6a30, 0xb7e8, 0xb5ef, 0x1, 0x0);
        gbc.writeMem(0xc231, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x8675);
        EXPECT(gbc.pc(), 0xc233);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc231), 0xcb);
        EXPECT(gbc.readMem(0xc232), 0xd1);
        // CB D1 0362
        gbc.setState(0x6f4, 0xa201, 0x9050, 0xc365, 0x755b, 0xec89, 0x0, 0x0);
        gbc.writeMem(0x6f4, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xa201);
        EXPECT(gbc.pc(), 0x6f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0363
        gbc.setState(0xbe64, 0x3ec2, 0xe480, 0xc5f9, 0xd69b, 0x4a2d, 0x1, 0x1);
        gbc.writeMem(0xbe64, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x3ec2);
        EXPECT(gbc.pc(), 0xbe66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe64), 0xcb);
        EXPECT(gbc.readMem(0xbe65), 0xd1);
        // CB D1 0364
        gbc.setState(0xb8c9, 0xa4bf, 0x9750, 0x28f8, 0x1e8c, 0x8c51, 0x1, 0x1);
        gbc.writeMem(0xb8c9, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xa4bf);
        EXPECT(gbc.pc(), 0xb8cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8c9), 0xcb);
        EXPECT(gbc.readMem(0xb8ca), 0xd1);
        // CB D1 0365
        gbc.setState(0x1ceb, 0xa7bb, 0x2760, 0x2800, 0x9fd7, 0x9306, 0x1, 0x1);
        gbc.writeMem(0x1ceb, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xa7bb);
        EXPECT(gbc.pc(), 0x1ced);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0366
        gbc.setState(0x2ebb, 0xfe6, 0x2640, 0xb58d, 0xf0f6, 0xa03b, 0x1, 0x1);
        gbc.writeMem(0x2ebb, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xfe6);
        EXPECT(gbc.pc(), 0x2ebd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0367
        gbc.setState(0x8a50, 0x6c31, 0x8ec0, 0xc625, 0xd083, 0xcbd2, 0x0, 0x0);
        gbc.writeMem(0x8a50, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x6c31);
        EXPECT(gbc.pc(), 0x8a52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a50), 0xcb);
        EXPECT(gbc.readMem(0x8a51), 0xd1);
        // CB D1 0369
        gbc.setState(0x93df, 0xd8ed, 0xca00, 0xca56, 0x9483, 0x4cf6, 0x1, 0x0);
        gbc.writeMem(0x93df, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xd8ed);
        EXPECT(gbc.pc(), 0x93e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93df), 0xcb);
        EXPECT(gbc.readMem(0x93e0), 0xd1);
        // CB D1 036B
        gbc.setState(0x2802, 0xa89d, 0x8670, 0x48da, 0x2904, 0xe234, 0x1, 0x1);
        gbc.writeMem(0x2802, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xa89d);
        EXPECT(gbc.pc(), 0x2804);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 036C
        gbc.setState(0x42dd, 0x8c3a, 0xacc0, 0xcc3e, 0x2417, 0x9cb4, 0x0, 0x1);
        gbc.writeMem(0x42dd, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x8c3a);
        EXPECT(gbc.pc(), 0x42df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 036D
        gbc.setState(0xe1c5, 0xb8f, 0x9b70, 0xd35a, 0x25e1, 0x5be9, 0x1, 0x0);
        gbc.writeMem(0xe1c5, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xb8f);
        EXPECT(gbc.pc(), 0xe1c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1c5), 0xcb);
        EXPECT(gbc.readMem(0xe1c6), 0xd1);
        // CB D1 036E
        gbc.setState(0x68dc, 0x2ba7, 0xae90, 0xce5, 0x65c0, 0x3ea8, 0x0, 0x1);
        gbc.writeMem(0x68dc, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x2ba7);
        EXPECT(gbc.pc(), 0x68de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0370
        gbc.setState(0x9efd, 0x1a55, 0x95a0, 0x6bb7, 0xfae8, 0x6a0b, 0x1, 0x1);
        gbc.writeMem(0x9efd, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x1a55);
        EXPECT(gbc.pc(), 0x9eff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9efd), 0xcb);
        EXPECT(gbc.readMem(0x9efe), 0xd1);
        // CB D1 0371
        gbc.setState(0x622b, 0x6d0a, 0x5cf0, 0x83f6, 0x74f7, 0x2af6, 0x0, 0x0);
        gbc.writeMem(0x622b, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x6d0a);
        EXPECT(gbc.pc(), 0x622d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0372
        gbc.setState(0xb2f6, 0xbd06, 0x1d40, 0x63fe, 0x7a20, 0x5f54, 0x0, 0x1);
        gbc.writeMem(0xb2f6, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xbd06);
        EXPECT(gbc.pc(), 0xb2f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2f6), 0xcb);
        EXPECT(gbc.readMem(0xb2f7), 0xd1);
        // CB D1 0374
        gbc.setState(0xf37, 0x7475, 0xb1b0, 0x9c4d, 0x4652, 0x14f4, 0x1, 0x0);
        gbc.writeMem(0xf37, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x7475);
        EXPECT(gbc.pc(), 0xf39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0375
        gbc.setState(0xe6b9, 0xd4e8, 0x5bc0, 0x8a16, 0x632d, 0x8cea, 0x1, 0x0);
        gbc.writeMem(0xe6b9, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xd4e8);
        EXPECT(gbc.pc(), 0xe6bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6b9), 0xcb);
        EXPECT(gbc.readMem(0xe6ba), 0xd1);
        // CB D1 0376
        gbc.setState(0xa26d, 0x1725, 0x3390, 0xd3f4, 0xedd1, 0x60c9, 0x0, 0x0);
        gbc.writeMem(0xa26d, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x1725);
        EXPECT(gbc.pc(), 0xa26f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa26d), 0xcb);
        EXPECT(gbc.readMem(0xa26e), 0xd1);
        // CB D1 0377
        gbc.setState(0x70fb, 0xfa1d, 0xa7f0, 0xd1a9, 0xdf45, 0xe1df, 0x1, 0x1);
        gbc.writeMem(0x70fb, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xfa1d);
        EXPECT(gbc.pc(), 0x70fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0378
        gbc.setState(0x28ff, 0xa7c3, 0x69c0, 0x2309, 0x1490, 0xe37b, 0x0, 0x1);
        gbc.writeMem(0x28ff, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xa7c3);
        EXPECT(gbc.pc(), 0x2901);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0379
        gbc.setState(0xd159, 0xbd81, 0xf3e0, 0xc078, 0x1602, 0x3e23, 0x1, 0x0);
        gbc.writeMem(0xd159, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xbd81);
        EXPECT(gbc.pc(), 0xd15b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd159), 0xcb);
        EXPECT(gbc.readMem(0xd15a), 0xd1);
        // CB D1 037A
        gbc.setState(0x303b, 0xa057, 0xed50, 0x76e9, 0xf28d, 0x2fe2, 0x0, 0x1);
        gbc.writeMem(0x303b, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xa057);
        EXPECT(gbc.pc(), 0x303d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 037B
        gbc.setState(0xafa6, 0x261a, 0x5b90, 0xea92, 0x6732, 0x2d80, 0x1, 0x0);
        gbc.writeMem(0xafa6, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x261a);
        EXPECT(gbc.pc(), 0xafa8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafa6), 0xcb);
        EXPECT(gbc.readMem(0xafa7), 0xd1);
        // CB D1 037D
        gbc.setState(0xc58c, 0xc91a, 0x8250, 0x88fe, 0xb0bd, 0x9e0a, 0x1, 0x1);
        gbc.writeMem(0xc58c, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xc91a);
        EXPECT(gbc.pc(), 0xc58e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc58c), 0xcb);
        EXPECT(gbc.readMem(0xc58d), 0xd1);
        // CB D1 037E
        gbc.setState(0x1969, 0x48c7, 0x9480, 0xc198, 0x6ba2, 0xe025, 0x1, 0x0);
        gbc.writeMem(0x1969, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x48c7);
        EXPECT(gbc.pc(), 0x196b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 037F
        gbc.setState(0xe78b, 0xc4e1, 0xa0d0, 0x5cb9, 0x44b2, 0x5001, 0x0, 0x1);
        gbc.writeMem(0xe78b, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xc4e1);
        EXPECT(gbc.pc(), 0xe78d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe78b), 0xcb);
        EXPECT(gbc.readMem(0xe78c), 0xd1);
        // CB D1 0380
        gbc.setState(0xe1b9, 0x3ab, 0x14d0, 0x8082, 0xda6a, 0xeeab, 0x0, 0x1);
        gbc.writeMem(0xe1b9, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x3ab);
        EXPECT(gbc.pc(), 0xe1bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1b9), 0xcb);
        EXPECT(gbc.readMem(0xe1ba), 0xd1);
        // CB D1 0381
        gbc.setState(0x9014, 0x9578, 0xd2d0, 0x9bff, 0xfeea, 0xd31b, 0x0, 0x0);
        gbc.writeMem(0x9014, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x9578);
        EXPECT(gbc.pc(), 0x9016);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9014), 0xcb);
        EXPECT(gbc.readMem(0x9015), 0xd1);
        // CB D1 0382
        gbc.setState(0xbf9b, 0x79c, 0xb420, 0xdf88, 0x1d0c, 0x33e5, 0x1, 0x1);
        gbc.writeMem(0xbf9b, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x79c);
        EXPECT(gbc.pc(), 0xbf9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf9b), 0xcb);
        EXPECT(gbc.readMem(0xbf9c), 0xd1);
        // CB D1 0383
        gbc.setState(0xda19, 0xc278, 0xba20, 0x89d7, 0x1b6f, 0x831, 0x1, 0x1);
        gbc.writeMem(0xda19, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xc278);
        EXPECT(gbc.pc(), 0xda1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda19), 0xcb);
        EXPECT(gbc.readMem(0xda1a), 0xd1);
        // CB D1 0384
        gbc.setState(0xcc47, 0x8a2c, 0x7e20, 0x5350, 0x249d, 0xcc1d, 0x1, 0x0);
        gbc.writeMem(0xcc47, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x8a2c);
        EXPECT(gbc.pc(), 0xcc49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc47), 0xcb);
        EXPECT(gbc.readMem(0xcc48), 0xd1);
        // CB D1 0385
        gbc.setState(0x1d04, 0x860b, 0x7230, 0xc9aa, 0x264b, 0xbb40, 0x0, 0x1);
        gbc.writeMem(0x1d04, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x860b);
        EXPECT(gbc.pc(), 0x1d06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0386
        gbc.setState(0x7e85, 0x3106, 0xc3b0, 0x4aec, 0x5103, 0xbd40, 0x0, 0x1);
        gbc.writeMem(0x7e85, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x3106);
        EXPECT(gbc.pc(), 0x7e87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0387
        gbc.setState(0xd6e7, 0x9f32, 0xba40, 0x8dc0, 0x2677, 0x956f, 0x1, 0x0);
        gbc.writeMem(0xd6e7, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x9f32);
        EXPECT(gbc.pc(), 0xd6e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6e7), 0xcb);
        EXPECT(gbc.readMem(0xd6e8), 0xd1);
        // CB D1 0388
        gbc.setState(0x411a, 0x845d, 0xbc60, 0xe761, 0x2db0, 0xd611, 0x0, 0x0);
        gbc.writeMem(0x411a, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x845d);
        EXPECT(gbc.pc(), 0x411c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0389
        gbc.setState(0xdcc5, 0x164c, 0x3cc0, 0x9944, 0x9f76, 0xe7c6, 0x1, 0x0);
        gbc.writeMem(0xdcc5, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x164c);
        EXPECT(gbc.pc(), 0xdcc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcc5), 0xcb);
        EXPECT(gbc.readMem(0xdcc6), 0xd1);
        // CB D1 038A
        gbc.setState(0xcc54, 0x6911, 0xad70, 0xde5e, 0xd805, 0x7808, 0x1, 0x1);
        gbc.writeMem(0xcc54, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x6911);
        EXPECT(gbc.pc(), 0xcc56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc54), 0xcb);
        EXPECT(gbc.readMem(0xcc55), 0xd1);
        // CB D1 038B
        gbc.setState(0xd63d, 0x3647, 0x840, 0x3a2, 0xc1b5, 0x2931, 0x1, 0x1);
        gbc.writeMem(0xd63d, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x3647);
        EXPECT(gbc.pc(), 0xd63f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd63d), 0xcb);
        EXPECT(gbc.readMem(0xd63e), 0xd1);
        // CB D1 038C
        gbc.setState(0x5a04, 0x27e9, 0x71b0, 0x612c, 0x96e1, 0x2177, 0x1, 0x0);
        gbc.writeMem(0x5a04, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x27e9);
        EXPECT(gbc.pc(), 0x5a06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 038D
        gbc.setState(0xd658, 0x6ad6, 0x3d10, 0xd335, 0x59b, 0x2b9a, 0x0, 0x0);
        gbc.writeMem(0xd658, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x6ad6);
        EXPECT(gbc.pc(), 0xd65a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd658), 0xcb);
        EXPECT(gbc.readMem(0xd659), 0xd1);
        // CB D1 038E
        gbc.setState(0x3c1b, 0xd7a5, 0xc9a0, 0x4791, 0x3820, 0x6663, 0x0, 0x1);
        gbc.writeMem(0x3c1b, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xd7a5);
        EXPECT(gbc.pc(), 0x3c1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 038F
        gbc.setState(0xee7, 0xaecb, 0x9890, 0xfc86, 0xe420, 0xfeef, 0x1, 0x0);
        gbc.writeMem(0xee7, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xaecb);
        EXPECT(gbc.pc(), 0xee9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0390
        gbc.setState(0x741, 0x8b28, 0x9b80, 0xd71, 0x7e2b, 0x9fa5, 0x0, 0x1);
        gbc.writeMem(0x741, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x8b28);
        EXPECT(gbc.pc(), 0x743);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0392
        gbc.setState(0x43cd, 0x64cf, 0x9850, 0xa290, 0x1c5, 0x75e8, 0x1, 0x1);
        gbc.writeMem(0x43cd, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x64cf);
        EXPECT(gbc.pc(), 0x43cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0393
        gbc.setState(0x608d, 0x9a86, 0x1dd0, 0xacb8, 0x9eed, 0xa5b7, 0x1, 0x1);
        gbc.writeMem(0x608d, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x9a86);
        EXPECT(gbc.pc(), 0x608f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0394
        gbc.setState(0x30b3, 0x7c14, 0xdae0, 0x7f6d, 0xcb, 0x697c, 0x0, 0x1);
        gbc.writeMem(0x30b3, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x7c14);
        EXPECT(gbc.pc(), 0x30b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0395
        gbc.setState(0xe86, 0xe812, 0x7240, 0x6ff6, 0x9b94, 0xdd18, 0x1, 0x0);
        gbc.writeMem(0xe86, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xe812);
        EXPECT(gbc.pc(), 0xe88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 0396
        gbc.setState(0xa637, 0xc63a, 0xd200, 0xeffa, 0xbe9e, 0x3c4b, 0x1, 0x1);
        gbc.writeMem(0xa637, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xc63a);
        EXPECT(gbc.pc(), 0xa639);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa637), 0xcb);
        EXPECT(gbc.readMem(0xa638), 0xd1);
        // CB D1 0397
        gbc.setState(0x6089, 0xeae4, 0xd250, 0xf574, 0x2d3b, 0x2885, 0x0, 0x0);
        gbc.writeMem(0x6089, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xeae4);
        EXPECT(gbc.pc(), 0x608b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 0399
        gbc.setState(0xc9f9, 0xb4cd, 0x6df0, 0x321c, 0x2a5b, 0xd3f4, 0x1, 0x0);
        gbc.writeMem(0xc9f9, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xb4cd);
        EXPECT(gbc.pc(), 0xc9fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9f9), 0xcb);
        EXPECT(gbc.readMem(0xc9fa), 0xd1);
        // CB D1 039A
        gbc.setState(0xd6c4, 0xc505, 0x93e0, 0xd6fa, 0xf822, 0x53be, 0x1, 0x1);
        gbc.writeMem(0xd6c4, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xc505);
        EXPECT(gbc.pc(), 0xd6c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6c4), 0xcb);
        EXPECT(gbc.readMem(0xd6c5), 0xd1);
        // CB D1 039C
        gbc.setState(0x295c, 0x68d8, 0x3e80, 0x398e, 0x658d, 0xe95c, 0x0, 0x0);
        gbc.writeMem(0x295c, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x68d8);
        EXPECT(gbc.pc(), 0x295e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 039D
        gbc.setState(0x7678, 0xede4, 0x75f0, 0xa54c, 0x8a05, 0x722b, 0x0, 0x1);
        gbc.writeMem(0x7678, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xede4);
        EXPECT(gbc.pc(), 0x767a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 039E
        gbc.setState(0xd83, 0xb426, 0xfe10, 0xc1fb, 0x3b1c, 0x4c6, 0x1, 0x1);
        gbc.writeMem(0xd83, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xb426);
        EXPECT(gbc.pc(), 0xd85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 039F
        gbc.setState(0xb12d, 0x2fbd, 0x1fd0, 0x2ef2, 0x3aff, 0xe629, 0x0, 0x0);
        gbc.writeMem(0xb12d, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x2fbd);
        EXPECT(gbc.pc(), 0xb12f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb12d), 0xcb);
        EXPECT(gbc.readMem(0xb12e), 0xd1);
        // CB D1 03A0
        gbc.setState(0xeeec, 0x5b7d, 0xe9e0, 0xae14, 0xf5ad, 0xe186, 0x1, 0x1);
        gbc.writeMem(0xeeec, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x5b7d);
        EXPECT(gbc.pc(), 0xeeee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeeec), 0xcb);
        EXPECT(gbc.readMem(0xeeed), 0xd1);
        // CB D1 03A1
        gbc.setState(0xb10f, 0xe71a, 0xd000, 0xae40, 0x8625, 0x80e4, 0x0, 0x0);
        gbc.writeMem(0xb10f, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xe71a);
        EXPECT(gbc.pc(), 0xb111);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb10f), 0xcb);
        EXPECT(gbc.readMem(0xb110), 0xd1);
        // CB D1 03A2
        gbc.setState(0xc030, 0x9ee6, 0x5c20, 0x7c77, 0x14e6, 0xb6b0, 0x1, 0x1);
        gbc.writeMem(0xc030, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x9ee6);
        EXPECT(gbc.pc(), 0xc032);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc030), 0xcb);
        EXPECT(gbc.readMem(0xc031), 0xd1);
        // CB D1 03A3
        gbc.setState(0x499, 0xaf8f, 0x8610, 0xbf74, 0xd9c, 0x936c, 0x1, 0x0);
        gbc.writeMem(0x499, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xaf8f);
        EXPECT(gbc.pc(), 0x49b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 03A4
        gbc.setState(0x5989, 0x3e54, 0xa3e0, 0x3829, 0x897c, 0xc3b, 0x1, 0x1);
        gbc.writeMem(0x5989, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x3e54);
        EXPECT(gbc.pc(), 0x598b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 03A5
        gbc.setState(0x35e1, 0xdb05, 0x10b0, 0xc4b6, 0x50e6, 0x8f0, 0x0, 0x1);
        gbc.writeMem(0x35e1, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xdb05);
        EXPECT(gbc.pc(), 0x35e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 03A6
        gbc.setState(0xb8b4, 0xf913, 0xe450, 0x1fd5, 0xdcc3, 0x5ea8, 0x1, 0x1);
        gbc.writeMem(0xb8b4, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xf913);
        EXPECT(gbc.pc(), 0xb8b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8b4), 0xcb);
        EXPECT(gbc.readMem(0xb8b5), 0xd1);
        // CB D1 03A7
        gbc.setState(0xd042, 0x4192, 0x4190, 0x2791, 0xc48c, 0x41e, 0x1, 0x1);
        gbc.writeMem(0xd042, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x4192);
        EXPECT(gbc.pc(), 0xd044);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd042), 0xcb);
        EXPECT(gbc.readMem(0xd043), 0xd1);
        // CB D1 03A8
        gbc.setState(0x88cc, 0xa2c1, 0xdb80, 0xdc0f, 0x9aa6, 0x5400, 0x0, 0x0);
        gbc.writeMem(0x88cc, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xa2c1);
        EXPECT(gbc.pc(), 0x88ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88cc), 0xcb);
        EXPECT(gbc.readMem(0x88cd), 0xd1);
        // CB D1 03AB
        gbc.setState(0x352c, 0x832f, 0x5be0, 0x6176, 0xc826, 0x343b, 0x0, 0x0);
        gbc.writeMem(0x352c, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x832f);
        EXPECT(gbc.pc(), 0x352e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 03AC
        gbc.setState(0x4762, 0x6c84, 0xe9c0, 0xcc03, 0x4a39, 0xf66c, 0x0, 0x1);
        gbc.writeMem(0x4762, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x6c84);
        EXPECT(gbc.pc(), 0x4764);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 03AE
        gbc.setState(0x11d4, 0xb89f, 0x67c0, 0xae0f, 0xc0f3, 0xa66f, 0x0, 0x1);
        gbc.writeMem(0x11d4, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xb89f);
        EXPECT(gbc.pc(), 0x11d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 03AF
        gbc.setState(0xab78, 0xbf5e, 0x70f0, 0x424b, 0x794d, 0xa3ef, 0x1, 0x1);
        gbc.writeMem(0xab78, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xbf5e);
        EXPECT(gbc.pc(), 0xab7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab78), 0xcb);
        EXPECT(gbc.readMem(0xab79), 0xd1);
        // CB D1 03B0
        gbc.setState(0x58e0, 0x3b61, 0x6790, 0xa566, 0x4b2f, 0x44ed, 0x0, 0x0);
        gbc.writeMem(0x58e0, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x3b61);
        EXPECT(gbc.pc(), 0x58e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 03B2
        gbc.setState(0x9202, 0xb396, 0x2ae0, 0xbf26, 0x86c4, 0x9e66, 0x0, 0x1);
        gbc.writeMem(0x9202, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xb396);
        EXPECT(gbc.pc(), 0x9204);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9202), 0xcb);
        EXPECT(gbc.readMem(0x9203), 0xd1);
        // CB D1 03B3
        gbc.setState(0x70ae, 0xf6ad, 0x2b50, 0x4c22, 0x796, 0xae20, 0x0, 0x1);
        gbc.writeMem(0x70ae, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xf6ad);
        EXPECT(gbc.pc(), 0x70b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 03B4
        gbc.setState(0x294f, 0x69c7, 0xc480, 0xe552, 0x62d1, 0xea20, 0x0, 0x1);
        gbc.writeMem(0x294f, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x69c7);
        EXPECT(gbc.pc(), 0x2951);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 03B5
        gbc.setState(0xa8db, 0x983b, 0x5e0, 0xb848, 0x4ece, 0xed3d, 0x0, 0x0);
        gbc.writeMem(0xa8db, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x983b);
        EXPECT(gbc.pc(), 0xa8dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8db), 0xcb);
        EXPECT(gbc.readMem(0xa8dc), 0xd1);
        // CB D1 03B6
        gbc.setState(0xb6b1, 0x4841, 0x5520, 0xe3de, 0x36b2, 0xae99, 0x1, 0x1);
        gbc.writeMem(0xb6b1, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x4841);
        EXPECT(gbc.pc(), 0xb6b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6b1), 0xcb);
        EXPECT(gbc.readMem(0xb6b2), 0xd1);
        // CB D1 03B7
        gbc.setState(0xc948, 0x7713, 0xd8e0, 0x42ae, 0xa02d, 0x5d67, 0x1, 0x1);
        gbc.writeMem(0xc948, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x7713);
        EXPECT(gbc.pc(), 0xc94a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc948), 0xcb);
        EXPECT(gbc.readMem(0xc949), 0xd1);
        // CB D1 03B8
        gbc.setState(0xcd8, 0xd366, 0x6460, 0x7a8d, 0xc1c4, 0xe118, 0x1, 0x1);
        gbc.writeMem(0xcd8, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xd366);
        EXPECT(gbc.pc(), 0xcda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 03B9
        gbc.setState(0xec94, 0x6f33, 0x9560, 0x57d8, 0x7e5c, 0x2cc, 0x0, 0x0);
        gbc.writeMem(0xec94, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x6f33);
        EXPECT(gbc.pc(), 0xec96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec94), 0xcb);
        EXPECT(gbc.readMem(0xec95), 0xd1);
        // CB D1 03BA
        gbc.setState(0xd58, 0x7166, 0x860, 0x24f6, 0x1398, 0x4067, 0x1, 0x1);
        gbc.writeMem(0xd58, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x7166);
        EXPECT(gbc.pc(), 0xd5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 03BB
        gbc.setState(0xeb14, 0x420e, 0xe2a0, 0xaed3, 0xfeb8, 0x9ad6, 0x1, 0x0);
        gbc.writeMem(0xeb14, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x420e);
        EXPECT(gbc.pc(), 0xeb16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb14), 0xcb);
        EXPECT(gbc.readMem(0xeb15), 0xd1);
        // CB D1 03BC
        gbc.setState(0xcb70, 0x1400, 0x7100, 0xb525, 0x246f, 0x43a0, 0x0, 0x1);
        gbc.writeMem(0xcb70, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x1400);
        EXPECT(gbc.pc(), 0xcb72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb70), 0xcb);
        EXPECT(gbc.readMem(0xcb71), 0xd1);
        // CB D1 03BE
        gbc.setState(0x3009, 0xf97f, 0xf40, 0x3929, 0xc837, 0x7fb8, 0x1, 0x1);
        gbc.writeMem(0x3009, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xf97f);
        EXPECT(gbc.pc(), 0x300b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 03BF
        gbc.setState(0xa16d, 0x4594, 0x3fa0, 0x49f6, 0xee47, 0x88fb, 0x1, 0x0);
        gbc.writeMem(0xa16d, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x4594);
        EXPECT(gbc.pc(), 0xa16f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa16d), 0xcb);
        EXPECT(gbc.readMem(0xa16e), 0xd1);
        // CB D1 03C0
        gbc.setState(0x7b93, 0x9f62, 0x4bc0, 0x477a, 0x5b78, 0x8012, 0x0, 0x1);
        gbc.writeMem(0x7b93, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x9f62);
        EXPECT(gbc.pc(), 0x7b95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 03C1
        gbc.setState(0x9986, 0x50cf, 0x3910, 0xdf81, 0x7b75, 0x802a, 0x1, 0x0);
        gbc.writeMem(0x9986, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x50cf);
        EXPECT(gbc.pc(), 0x9988);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9986), 0xcb);
        EXPECT(gbc.readMem(0x9987), 0xd1);
        // CB D1 03C2
        gbc.setState(0x399c, 0xa38f, 0x1450, 0x69fd, 0x46d2, 0x259e, 0x0, 0x1);
        gbc.writeMem(0x399c, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xa38f);
        EXPECT(gbc.pc(), 0x399e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 03C3
        gbc.setState(0x4ebc, 0x7fed, 0x3270, 0x5248, 0x7a23, 0x4cde, 0x1, 0x1);
        gbc.writeMem(0x4ebc, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x7fed);
        EXPECT(gbc.pc(), 0x4ebe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 03C4
        gbc.setState(0x4260, 0x399e, 0x4280, 0x4f8, 0xc820, 0x2723, 0x1, 0x1);
        gbc.writeMem(0x4260, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x399e);
        EXPECT(gbc.pc(), 0x4262);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 03C5
        gbc.setState(0xc08b, 0x2a51, 0x2da0, 0xad37, 0x7059, 0xe1e2, 0x1, 0x0);
        gbc.writeMem(0xc08b, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x2a51);
        EXPECT(gbc.pc(), 0xc08d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc08b), 0xcb);
        EXPECT(gbc.readMem(0xc08c), 0xd1);
        // CB D1 03C6
        gbc.setState(0xe583, 0x16a5, 0x2b60, 0x1b3b, 0xd3e6, 0xf1ea, 0x1, 0x1);
        gbc.writeMem(0xe583, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x16a5);
        EXPECT(gbc.pc(), 0xe585);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe583), 0xcb);
        EXPECT(gbc.readMem(0xe584), 0xd1);
        // CB D1 03C7
        gbc.setState(0x3fac, 0x1227, 0x6c00, 0x4d11, 0x415f, 0x9bd8, 0x1, 0x1);
        gbc.writeMem(0x3fac, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x1227);
        EXPECT(gbc.pc(), 0x3fae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 03C8
        gbc.setState(0xac1e, 0xeec, 0x1150, 0x61e7, 0x55b, 0x3359, 0x1, 0x0);
        gbc.writeMem(0xac1e, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xeec);
        EXPECT(gbc.pc(), 0xac20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac1e), 0xcb);
        EXPECT(gbc.readMem(0xac1f), 0xd1);
        // CB D1 03C9
        gbc.setState(0x31b0, 0x6db4, 0x6f10, 0xa0ba, 0xe6bf, 0x1470, 0x1, 0x1);
        gbc.writeMem(0x31b0, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x6db4);
        EXPECT(gbc.pc(), 0x31b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 03CA
        gbc.setState(0x4db, 0x25fa, 0x32a0, 0xa1fe, 0xda5d, 0x3c76, 0x0, 0x1);
        gbc.writeMem(0x4db, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x25fa);
        EXPECT(gbc.pc(), 0x4dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 03CB
        gbc.setState(0x7215, 0x25b4, 0x2530, 0x4ba3, 0x7a0d, 0x1472, 0x1, 0x1);
        gbc.writeMem(0x7215, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x25b4);
        EXPECT(gbc.pc(), 0x7217);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 03CC
        gbc.setState(0x506a, 0xfc59, 0x90c0, 0x8666, 0x9b75, 0xfd90, 0x1, 0x1);
        gbc.writeMem(0x506a, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xfc59);
        EXPECT(gbc.pc(), 0x506c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 03CD
        gbc.setState(0xb556, 0x460f, 0xb9f0, 0x98d6, 0xf230, 0x8481, 0x0, 0x1);
        gbc.writeMem(0xb556, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x460f);
        EXPECT(gbc.pc(), 0xb558);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb556), 0xcb);
        EXPECT(gbc.readMem(0xb557), 0xd1);
        // CB D1 03CE
        gbc.setState(0x60d2, 0x9a45, 0x6b30, 0x3b11, 0x830f, 0xe125, 0x1, 0x0);
        gbc.writeMem(0x60d2, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x9a45);
        EXPECT(gbc.pc(), 0x60d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 03CF
        gbc.setState(0x5b5a, 0x65a2, 0x4c60, 0xccf6, 0xab6f, 0x8686, 0x1, 0x0);
        gbc.writeMem(0x5b5a, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x65a2);
        EXPECT(gbc.pc(), 0x5b5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 03D0
        gbc.setState(0xa82a, 0xa88c, 0xf370, 0x2e0c, 0x7cd4, 0xa658, 0x1, 0x0);
        gbc.writeMem(0xa82a, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xa88c);
        EXPECT(gbc.pc(), 0xa82c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa82a), 0xcb);
        EXPECT(gbc.readMem(0xa82b), 0xd1);
        // CB D1 03D1
        gbc.setState(0x256, 0x66bc, 0x8f80, 0x3e2, 0xf8d2, 0xe506, 0x0, 0x1);
        gbc.writeMem(0x256, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x66bc);
        EXPECT(gbc.pc(), 0x258);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 03D2
        gbc.setState(0x437a, 0xea4d, 0x5dc0, 0xdbcb, 0x9442, 0x67df, 0x0, 0x0);
        gbc.writeMem(0x437a, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xea4d);
        EXPECT(gbc.pc(), 0x437c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 03D3
        gbc.setState(0xa086, 0x56cc, 0x2660, 0x266c, 0xd692, 0x3d92, 0x0, 0x1);
        gbc.writeMem(0xa086, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x56cc);
        EXPECT(gbc.pc(), 0xa088);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa086), 0xcb);
        EXPECT(gbc.readMem(0xa087), 0xd1);
        // CB D1 03D4
        gbc.setState(0x6eee, 0x6b69, 0x5a80, 0xcda9, 0x2bd3, 0x7f30, 0x1, 0x0);
        gbc.writeMem(0x6eee, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x6b69);
        EXPECT(gbc.pc(), 0x6ef0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 03D5
        gbc.setState(0x6b53, 0xe57, 0x95a0, 0x14b1, 0x7bc7, 0x5077, 0x1, 0x0);
        gbc.writeMem(0x6b53, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xe57);
        EXPECT(gbc.pc(), 0x6b55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D1 03D6
        gbc.setState(0x876b, 0xadf8, 0x9d50, 0xacbf, 0x6900, 0x96df, 0x1, 0x1);
        gbc.writeMem(0x876b, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xadf8);
        EXPECT(gbc.pc(), 0x876d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x876b), 0xcb);
        EXPECT(gbc.readMem(0x876c), 0xd1);
        // CB D1 03D7
        gbc.setState(0xd708, 0x15b3, 0x3d70, 0x54c, 0xe91f, 0x7743, 0x0, 0x0);
        gbc.writeMem(0xd708, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x15b3);
        EXPECT(gbc.pc(), 0xd70a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd708), 0xcb);
        EXPECT(gbc.readMem(0xd709), 0xd1);
        // CB D1 03D8
        gbc.setState(0xaf87, 0x1a7e, 0x6b90, 0x4d15, 0x710e, 0x4ed, 0x0, 0x0);
        gbc.writeMem(0xaf87, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x1a7e);
        EXPECT(gbc.pc(), 0xaf89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf87), 0xcb);
        EXPECT(gbc.readMem(0xaf88), 0xd1);
        // CB D1 03D9
        gbc.setState(0xefb5, 0x1b5c, 0x69b0, 0x9926, 0xa107, 0xad55, 0x1, 0x1);
        gbc.writeMem(0xefb5, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x1b5c);
        EXPECT(gbc.pc(), 0xefb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefb5), 0xcb);
        EXPECT(gbc.readMem(0xefb6), 0xd1);
        // CB D1 03DA
        gbc.setState(0xbf70, 0xe426, 0xa7d0, 0xee2f, 0x8eb6, 0xdc05, 0x0, 0x0);
        gbc.writeMem(0xbf70, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xe426);
        EXPECT(gbc.pc(), 0xbf72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf70), 0xcb);
        EXPECT(gbc.readMem(0xbf71), 0xd1);
        // CB D1 03DB
        gbc.setState(0x482, 0x93b8, 0x6d90, 0x4725, 0xf4f7, 0x7dda, 0x0, 0x1);
        gbc.writeMem(0x482, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x93b8);
        EXPECT(gbc.pc(), 0x484);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 03DC
        gbc.setState(0x6d28, 0xaf90, 0xf80, 0x5a86, 0x6ef1, 0xba60, 0x0, 0x0);
        gbc.writeMem(0x6d28, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xaf90);
        EXPECT(gbc.pc(), 0x6d2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 03DD
        gbc.setState(0x1ac2, 0xc8be, 0xea30, 0x3578, 0x2a98, 0x9b48, 0x0, 0x1);
        gbc.writeMem(0x1ac2, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xc8be);
        EXPECT(gbc.pc(), 0x1ac4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D1 03DF
        gbc.setState(0x8971, 0x5edc, 0x7c90, 0xffc8, 0x6144, 0xa60d, 0x1, 0x0);
        gbc.writeMem(0x8971, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x5edc);
        EXPECT(gbc.pc(), 0x8973);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8971), 0xcb);
        EXPECT(gbc.readMem(0x8972), 0xd1);
        // CB D1 03E0
        gbc.setState(0xdca8, 0x1cf3, 0x5c80, 0x3f0c, 0xd6e3, 0xc47, 0x1, 0x1);
        gbc.writeMem(0xdca8, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x1cf3);
        EXPECT(gbc.pc(), 0xdcaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdca8), 0xcb);
        EXPECT(gbc.readMem(0xdca9), 0xd1);
        // CB D1 03E1
        gbc.setState(0xa20b, 0x3261, 0xf070, 0x35be, 0x3033, 0x8deb, 0x0, 0x1);
        gbc.writeMem(0xa20b, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x3261);
        EXPECT(gbc.pc(), 0xa20d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa20b), 0xcb);
        EXPECT(gbc.readMem(0xa20c), 0xd1);
        // CB D1 03E2
        gbc.setState(0xaef, 0xd4cb, 0x14d0, 0x61ec, 0x785e, 0x4e04, 0x0, 0x0);
        gbc.writeMem(0xaef, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xd4cb);
        EXPECT(gbc.pc(), 0xaf1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D1 03E3
        gbc.setState(0x1357, 0x1ec2, 0x7c80, 0x2b49, 0x165e, 0xd41, 0x1, 0x1);
        gbc.writeMem(0x1357, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x1ec2);
        EXPECT(gbc.pc(), 0x1359);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 03E4
        gbc.setState(0x46f7, 0x257e, 0xa200, 0x979c, 0x23f7, 0x32d2, 0x1, 0x0);
        gbc.writeMem(0x46f7, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x257e);
        EXPECT(gbc.pc(), 0x46f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D1 03E5
        gbc.setState(0x9de9, 0x1a50, 0xe770, 0xc2bb, 0x7dfc, 0x57f5, 0x0, 0x0);
        gbc.writeMem(0x9de9, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x1a50);
        EXPECT(gbc.pc(), 0x9deb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9de9), 0xcb);
        EXPECT(gbc.readMem(0x9dea), 0xd1);
        // CB D1 03E6
        gbc.setState(0x856e, 0xe43a, 0x1680, 0x975b, 0xc9b2, 0x205, 0x1, 0x1);
        gbc.writeMem(0x856e, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xe43a);
        EXPECT(gbc.pc(), 0x8570);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x856e), 0xcb);
        EXPECT(gbc.readMem(0x856f), 0xd1);
        // CB D1 03E7
        gbc.setState(0x38fd, 0x6765, 0xd5b0, 0xf4a, 0x5301, 0xeafb, 0x0, 0x1);
        gbc.writeMem(0x38fd, { 0xcb, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x6765);
        EXPECT(gbc.pc(), 0x38ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
    }
}
#endif
