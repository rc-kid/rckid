#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_d2)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_d2) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // D2 0000
        gbc.setState(0xe276, 0x24da, 0xd450, 0x9921, 0x2692, 0x75af, 0x0, 0x0);
        gbc.writeMem(0xe276, { 0xd2, 0xde, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x24da);
        EXPECT(gbc.pc(), 0xe279);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe276), 0xd2);
        EXPECT(gbc.readMem(0xe277), 0xde);
        EXPECT(gbc.readMem(0xe278), 0x97);
        // D2 0001
        gbc.setState(0x7731, 0xd548, 0x5940, 0xc55d, 0x89d0, 0x924a, 0x1, 0x0);
        gbc.writeMem(0x7731, { 0xd2, 0xd6, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xd548);
        EXPECT(gbc.pc(), 0xaed6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 0002
        gbc.setState(0x68e3, 0xb61f, 0x6ab0, 0xc157, 0x91c5, 0xd093, 0x0, 0x1);
        gbc.writeMem(0x68e3, { 0xd2, 0xab, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xb61f);
        EXPECT(gbc.pc(), 0x68e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0003
        gbc.setState(0x87ef, 0xda87, 0x2790, 0xf8c7, 0x582, 0x1917, 0x1, 0x1);
        gbc.writeMem(0x87ef, { 0xd2, 0x3f, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xda87);
        EXPECT(gbc.pc(), 0x87f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87ef), 0xd2);
        EXPECT(gbc.readMem(0x87f0), 0x3f);
        EXPECT(gbc.readMem(0x87f1), 0x55);
        // D2 0004
        gbc.setState(0x2e30, 0x1e7d, 0x1b10, 0x15c6, 0x95b4, 0x9538, 0x0, 0x0);
        gbc.writeMem(0x2e30, { 0xd2, 0x19, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x1e7d);
        EXPECT(gbc.pc(), 0x2e33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 0005
        gbc.setState(0x88c, 0x8ee4, 0xda0, 0xbb3c, 0xe931, 0x387f, 0x0, 0x0);
        gbc.writeMem(0x88c, { 0xd2, 0x80, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x8ee4);
        EXPECT(gbc.pc(), 0x1480);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0006
        gbc.setState(0x70df, 0x9b20, 0x74d0, 0xff19, 0x4923, 0xb9c6, 0x1, 0x1);
        gbc.writeMem(0x70df, { 0xd2, 0x3f, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x9b20);
        EXPECT(gbc.pc(), 0x70e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 0007
        gbc.setState(0x478a, 0xa007, 0x7a10, 0x9d7a, 0xd75e, 0x2a5f, 0x1, 0x0);
        gbc.writeMem(0x478a, { 0xd2, 0x0, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xa007);
        EXPECT(gbc.pc(), 0x478d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 0008
        gbc.setState(0x7e88, 0x2967, 0x54a0, 0xe5ae, 0x1bdd, 0x45ad, 0x0, 0x0);
        gbc.writeMem(0x7e88, { 0xd2, 0x44, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x2967);
        EXPECT(gbc.pc(), 0x9444);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0009
        gbc.setState(0xa206, 0x714f, 0xe760, 0xb2f8, 0x8505, 0x890a, 0x0, 0x0);
        gbc.writeMem(0xa206, { 0xd2, 0x5a, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x714f);
        EXPECT(gbc.pc(), 0x825a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa206), 0xd2);
        EXPECT(gbc.readMem(0xa207), 0x5a);
        EXPECT(gbc.readMem(0xa208), 0x82);
        // D2 000A
        gbc.setState(0xd4f0, 0xc5a1, 0x8f10, 0x7b2a, 0xac6d, 0x66da, 0x0, 0x0);
        gbc.writeMem(0xd4f0, { 0xd2, 0x58, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xc5a1);
        EXPECT(gbc.pc(), 0xd4f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4f0), 0xd2);
        EXPECT(gbc.readMem(0xd4f1), 0x58);
        EXPECT(gbc.readMem(0xd4f2), 0x5b);
        // D2 000B
        gbc.setState(0xadab, 0x9209, 0xa4e0, 0xd7d0, 0x1778, 0x12e4, 0x1, 0x1);
        gbc.writeMem(0xadab, { 0xd2, 0x1e, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x9209);
        EXPECT(gbc.pc(), 0x931e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadab), 0xd2);
        EXPECT(gbc.readMem(0xadac), 0x1e);
        EXPECT(gbc.readMem(0xadad), 0x93);
        // D2 000C
        gbc.setState(0xceeb, 0x9c5c, 0x4b90, 0x19a8, 0x2386, 0x68b4, 0x1, 0x0);
        gbc.writeMem(0xceeb, { 0xd2, 0xd5, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x9c5c);
        EXPECT(gbc.pc(), 0xceee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xceeb), 0xd2);
        EXPECT(gbc.readMem(0xceec), 0xd5);
        EXPECT(gbc.readMem(0xceed), 0x5d);
        // D2 000D
        gbc.setState(0xe861, 0x1638, 0xd840, 0x2e38, 0x3581, 0xdce7, 0x1, 0x0);
        gbc.writeMem(0xe861, { 0xd2, 0x93, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x1638);
        EXPECT(gbc.pc(), 0xc093);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe861), 0xd2);
        EXPECT(gbc.readMem(0xe862), 0x93);
        EXPECT(gbc.readMem(0xe863), 0xc0);
        // D2 000E
        gbc.setState(0x49a5, 0x55bd, 0x1f00, 0xff23, 0xb4dd, 0x85d7, 0x1, 0x0);
        gbc.writeMem(0x49a5, { 0xd2, 0xdf, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x55bd);
        EXPECT(gbc.pc(), 0x7df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 000F
        gbc.setState(0x674a, 0xd157, 0x7a80, 0xd72, 0xd569, 0xc817, 0x0, 0x1);
        gbc.writeMem(0x674a, { 0xd2, 0xcc, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xd157);
        EXPECT(gbc.pc(), 0x29cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 0010
        gbc.setState(0x1256, 0x712b, 0x73a0, 0x423c, 0xb3be, 0x92c, 0x0, 0x0);
        gbc.writeMem(0x1256, { 0xd2, 0x7c, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x712b);
        EXPECT(gbc.pc(), 0x197c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0011
        gbc.setState(0x1941, 0xc362, 0xf6f0, 0x29e2, 0xd6ba, 0x6145, 0x0, 0x0);
        gbc.writeMem(0x1941, { 0xd2, 0xb3, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xc362);
        EXPECT(gbc.pc(), 0x1944);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0012
        gbc.setState(0xd5b8, 0x14b7, 0x6bd0, 0x1fde, 0xe36, 0x9329, 0x0, 0x0);
        gbc.writeMem(0xd5b8, { 0xd2, 0xb3, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x14b7);
        EXPECT(gbc.pc(), 0xd5bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5b8), 0xd2);
        EXPECT(gbc.readMem(0xd5b9), 0xb3);
        EXPECT(gbc.readMem(0xd5ba), 0xdc);
        // D2 0013
        gbc.setState(0x5899, 0xaec8, 0x700, 0x2fa, 0x4e49, 0x37d6, 0x0, 0x1);
        gbc.writeMem(0x5899, { 0xd2, 0xe7, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xaec8);
        EXPECT(gbc.pc(), 0xdbe7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 0014
        gbc.setState(0x5d4a, 0xe743, 0x61b0, 0x7b42, 0xab7, 0x168f, 0x1, 0x0);
        gbc.writeMem(0x5d4a, { 0xd2, 0xb, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xe743);
        EXPECT(gbc.pc(), 0x5d4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0015
        gbc.setState(0x2b07, 0xa14d, 0xbba0, 0xb340, 0xd3a7, 0x7194, 0x0, 0x0);
        gbc.writeMem(0x2b07, { 0xd2, 0x85, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xa14d);
        EXPECT(gbc.pc(), 0x2f85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0016
        gbc.setState(0x7133, 0x5999, 0x6b50, 0x276e, 0x8592, 0x9868, 0x0, 0x1);
        gbc.writeMem(0x7133, { 0xd2, 0x16, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x5999);
        EXPECT(gbc.pc(), 0x7136);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 0017
        gbc.setState(0xd546, 0x28bb, 0x3800, 0xc4df, 0x4f66, 0xe580, 0x1, 0x1);
        gbc.writeMem(0xd546, { 0xd2, 0xdf, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x28bb);
        EXPECT(gbc.pc(), 0x6edf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd546), 0xd2);
        EXPECT(gbc.readMem(0xd547), 0xdf);
        EXPECT(gbc.readMem(0xd548), 0x6e);
        // D2 0018
        gbc.setState(0x3e9, 0x89a1, 0xd420, 0xcbaa, 0x9086, 0x7f51, 0x0, 0x1);
        gbc.writeMem(0x3e9, { 0xd2, 0x57, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x89a1);
        EXPECT(gbc.pc(), 0x3457);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0019
        gbc.setState(0xb288, 0x8924, 0x2320, 0x2ce8, 0x223f, 0x958a, 0x1, 0x0);
        gbc.writeMem(0xb288, { 0xd2, 0xd3, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x8924);
        EXPECT(gbc.pc(), 0xdcd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb288), 0xd2);
        EXPECT(gbc.readMem(0xb289), 0xd3);
        EXPECT(gbc.readMem(0xb28a), 0xdc);
        // D2 001A
        gbc.setState(0x1d9e, 0x6ceb, 0x8660, 0xc0b6, 0x9ff0, 0x8d81, 0x1, 0x1);
        gbc.writeMem(0x1d9e, { 0xd2, 0xab, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x6ceb);
        EXPECT(gbc.pc(), 0x64ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 001B
        gbc.setState(0xd931, 0x24ae, 0xe1e0, 0x3d89, 0xe496, 0xf580, 0x0, 0x1);
        gbc.writeMem(0xd931, { 0xd2, 0x4b, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x24ae);
        EXPECT(gbc.pc(), 0x844b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd931), 0xd2);
        EXPECT(gbc.readMem(0xd932), 0x4b);
        EXPECT(gbc.readMem(0xd933), 0x84);
        // D2 001D
        gbc.setState(0x4c27, 0xabf, 0x4b70, 0x5d7e, 0xa16c, 0x893f, 0x0, 0x1);
        gbc.writeMem(0x4c27, { 0xd2, 0x42, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xabf);
        EXPECT(gbc.pc(), 0x4c2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 001E
        gbc.setState(0xdc0a, 0x94f2, 0xaff0, 0xc1ae, 0xa787, 0x60f7, 0x1, 0x0);
        gbc.writeMem(0xdc0a, { 0xd2, 0xcc, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x94f2);
        EXPECT(gbc.pc(), 0xdc0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc0a), 0xd2);
        EXPECT(gbc.readMem(0xdc0b), 0xcc);
        EXPECT(gbc.readMem(0xdc0c), 0x2c);
        // D2 001F
        gbc.setState(0x1341, 0x3532, 0xdb50, 0x7c1d, 0x1f1b, 0x5f9b, 0x1, 0x1);
        gbc.writeMem(0x1341, { 0xd2, 0xc4, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x3532);
        EXPECT(gbc.pc(), 0x1344);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 0020
        gbc.setState(0x9428, 0x106, 0x1920, 0xa589, 0xc93c, 0x9e47, 0x1, 0x0);
        gbc.writeMem(0x9428, { 0xd2, 0xeb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x106);
        EXPECT(gbc.pc(), 0xb4eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9428), 0xd2);
        EXPECT(gbc.readMem(0x9429), 0xeb);
        EXPECT(gbc.readMem(0x942a), 0xb4);
        // D2 0021
        gbc.setState(0x862d, 0x1daf, 0x9cd0, 0xb927, 0x558d, 0x37d6, 0x0, 0x1);
        gbc.writeMem(0x862d, { 0xd2, 0xcb, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x1daf);
        EXPECT(gbc.pc(), 0x8630);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x862d), 0xd2);
        EXPECT(gbc.readMem(0x862e), 0xcb);
        EXPECT(gbc.readMem(0x862f), 0x7d);
        // D2 0022
        gbc.setState(0x82d8, 0xa79c, 0x2330, 0x5c78, 0xdb8e, 0xf55d, 0x1, 0x0);
        gbc.writeMem(0x82d8, { 0xd2, 0x8f, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xa79c);
        EXPECT(gbc.pc(), 0x82db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82d8), 0xd2);
        EXPECT(gbc.readMem(0x82d9), 0x8f);
        EXPECT(gbc.readMem(0x82da), 0xc0);
        // D2 0023
        gbc.setState(0xbee1, 0xb1c0, 0xc2c0, 0x1b73, 0xd3, 0x3d1f, 0x0, 0x1);
        gbc.writeMem(0xbee1, { 0xd2, 0x2f, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xb1c0);
        EXPECT(gbc.pc(), 0x9d2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbee1), 0xd2);
        EXPECT(gbc.readMem(0xbee2), 0x2f);
        EXPECT(gbc.readMem(0xbee3), 0x9d);
        // D2 0024
        gbc.setState(0xc065, 0x2311, 0x8a00, 0x7fe4, 0xfc60, 0x1a8a, 0x0, 0x1);
        gbc.writeMem(0xc065, { 0xd2, 0x5b, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x2311);
        EXPECT(gbc.pc(), 0x735b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc065), 0xd2);
        EXPECT(gbc.readMem(0xc066), 0x5b);
        EXPECT(gbc.readMem(0xc067), 0x73);
        // D2 0025
        gbc.setState(0x694a, 0x8595, 0xb7f0, 0xd690, 0x63bf, 0xdf16, 0x0, 0x1);
        gbc.writeMem(0x694a, { 0xd2, 0xd6, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x8595);
        EXPECT(gbc.pc(), 0x694d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0026
        gbc.setState(0x789c, 0xfc3d, 0x1aa0, 0xbd19, 0xa508, 0xed13, 0x0, 0x1);
        gbc.writeMem(0x789c, { 0xd2, 0xb0, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xfc3d);
        EXPECT(gbc.pc(), 0x92b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0027
        gbc.setState(0x164f, 0x814e, 0xa9a0, 0xae91, 0xc2d9, 0x3d4f, 0x0, 0x0);
        gbc.writeMem(0x164f, { 0xd2, 0x8, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x814e);
        EXPECT(gbc.pc(), 0xf808);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0028
        gbc.setState(0x590f, 0xef0b, 0xe4a0, 0x42b2, 0x2377, 0x89a0, 0x1, 0x1);
        gbc.writeMem(0x590f, { 0xd2, 0xec, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xef0b);
        EXPECT(gbc.pc(), 0x36ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0029
        gbc.setState(0x52be, 0x244d, 0xc50, 0x438c, 0x88d6, 0x5d2a, 0x1, 0x0);
        gbc.writeMem(0x52be, { 0xd2, 0x9a, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x244d);
        EXPECT(gbc.pc(), 0x52c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 002A
        gbc.setState(0x100c, 0x7144, 0xa510, 0x3604, 0x9622, 0xfcdb, 0x1, 0x1);
        gbc.writeMem(0x100c, { 0xd2, 0xa7, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x7144);
        EXPECT(gbc.pc(), 0x100f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 002B
        gbc.setState(0xb322, 0x5507, 0x7000, 0xe468, 0x522a, 0xdd69, 0x0, 0x0);
        gbc.writeMem(0xb322, { 0xd2, 0x4c, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x5507);
        EXPECT(gbc.pc(), 0xf74c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb322), 0xd2);
        EXPECT(gbc.readMem(0xb323), 0x4c);
        EXPECT(gbc.readMem(0xb324), 0xf7);
        // D2 002C
        gbc.setState(0x15bb, 0x812a, 0xc6c0, 0x9ca, 0xaee5, 0x9004, 0x1, 0x0);
        gbc.writeMem(0x15bb, { 0xd2, 0x40, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x812a);
        EXPECT(gbc.pc(), 0xa340);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 002D
        gbc.setState(0x6519, 0xda18, 0xff90, 0x2e58, 0x40cb, 0xef9e, 0x1, 0x1);
        gbc.writeMem(0x6519, { 0xd2, 0xe0, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xda18);
        EXPECT(gbc.pc(), 0x651c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 002E
        gbc.setState(0x6d5f, 0x54c4, 0xe600, 0x243e, 0xd7ea, 0x8f62, 0x1, 0x1);
        gbc.writeMem(0x6d5f, { 0xd2, 0xa5, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x54c4);
        EXPECT(gbc.pc(), 0x16a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 002F
        gbc.setState(0xe014, 0x75ee, 0x7020, 0xe58a, 0x615b, 0x522, 0x0, 0x1);
        gbc.writeMem(0xe014, { 0xd2, 0x7a, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x75ee);
        EXPECT(gbc.pc(), 0xa07a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe014), 0xd2);
        EXPECT(gbc.readMem(0xe015), 0x7a);
        EXPECT(gbc.readMem(0xe016), 0xa0);
        // D2 0030
        gbc.setState(0xcb49, 0x4b3, 0x2220, 0xf74f, 0x2fc9, 0xb523, 0x1, 0x1);
        gbc.writeMem(0xcb49, { 0xd2, 0xcc, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x4b3);
        EXPECT(gbc.pc(), 0x9acc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb49), 0xd2);
        EXPECT(gbc.readMem(0xcb4a), 0xcc);
        EXPECT(gbc.readMem(0xcb4b), 0x9a);
        // D2 0031
        gbc.setState(0xef61, 0x5d63, 0x36b0, 0x41d8, 0x43a2, 0xeb40, 0x0, 0x0);
        gbc.writeMem(0xef61, { 0xd2, 0x72, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x5d63);
        EXPECT(gbc.pc(), 0xef64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef61), 0xd2);
        EXPECT(gbc.readMem(0xef62), 0x72);
        EXPECT(gbc.readMem(0xef63), 0x9b);
        // D2 0032
        gbc.setState(0xa31e, 0xdb9e, 0x61a0, 0xc90, 0x715b, 0x72bf, 0x1, 0x1);
        gbc.writeMem(0xa31e, { 0xd2, 0xb, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xdb9e);
        EXPECT(gbc.pc(), 0x890b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa31e), 0xd2);
        EXPECT(gbc.readMem(0xa31f), 0xb);
        EXPECT(gbc.readMem(0xa320), 0x89);
        // D2 0033
        gbc.setState(0x794f, 0x969d, 0xb80, 0x17f1, 0xa5d4, 0x8e35, 0x1, 0x1);
        gbc.writeMem(0x794f, { 0xd2, 0xd6, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x969d);
        EXPECT(gbc.pc(), 0x3ed6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 0034
        gbc.setState(0x8737, 0x5170, 0x2340, 0xb5e9, 0xf2d3, 0x9061, 0x1, 0x0);
        gbc.writeMem(0x8737, { 0xd2, 0xd, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x5170);
        EXPECT(gbc.pc(), 0xc00d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8737), 0xd2);
        EXPECT(gbc.readMem(0x8738), 0xd);
        EXPECT(gbc.readMem(0x8739), 0xc0);
        // D2 0035
        gbc.setState(0xb3dc, 0x44aa, 0xac90, 0x9ae0, 0x427a, 0x43d6, 0x0, 0x0);
        gbc.writeMem(0xb3dc, { 0xd2, 0xc2, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x44aa);
        EXPECT(gbc.pc(), 0xb3df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3dc), 0xd2);
        EXPECT(gbc.readMem(0xb3dd), 0xc2);
        EXPECT(gbc.readMem(0xb3de), 0xbe);
        // D2 0036
        gbc.setState(0x73cd, 0x565c, 0xceb0, 0xbb09, 0x87ec, 0x5b5, 0x0, 0x1);
        gbc.writeMem(0x73cd, { 0xd2, 0x9, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x565c);
        EXPECT(gbc.pc(), 0x73d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0037
        gbc.setState(0x41b7, 0x8d3c, 0x9bd0, 0xeee9, 0x7a06, 0x2681, 0x1, 0x0);
        gbc.writeMem(0x41b7, { 0xd2, 0x8f, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x8d3c);
        EXPECT(gbc.pc(), 0x41ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 0038
        gbc.setState(0xbbe1, 0xdba0, 0x4660, 0xa061, 0x1a1d, 0x7d1e, 0x1, 0x0);
        gbc.writeMem(0xbbe1, { 0xd2, 0x43, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xdba0);
        EXPECT(gbc.pc(), 0x6743);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbe1), 0xd2);
        EXPECT(gbc.readMem(0xbbe2), 0x43);
        EXPECT(gbc.readMem(0xbbe3), 0x67);
        // D2 0039
        gbc.setState(0x1e5c, 0x87ca, 0x9410, 0xbc3c, 0x3fd1, 0xed77, 0x1, 0x1);
        gbc.writeMem(0x1e5c, { 0xd2, 0x44, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x87ca);
        EXPECT(gbc.pc(), 0x1e5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 003A
        gbc.setState(0x59c4, 0x4270, 0xa830, 0x1bd3, 0x9d34, 0xfd99, 0x1, 0x0);
        gbc.writeMem(0x59c4, { 0xd2, 0xcc, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x4270);
        EXPECT(gbc.pc(), 0x59c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 003B
        gbc.setState(0x74b4, 0xbb55, 0xccc0, 0x3c5, 0x4e8b, 0xa194, 0x0, 0x0);
        gbc.writeMem(0x74b4, { 0xd2, 0x1f, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xbb55);
        EXPECT(gbc.pc(), 0xa21f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 003C
        gbc.setState(0x3916, 0x4324, 0xd40, 0x21f0, 0x4d11, 0xd0e5, 0x1, 0x1);
        gbc.writeMem(0x3916, { 0xd2, 0xb3, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x4324);
        EXPECT(gbc.pc(), 0x21b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 003D
        gbc.setState(0x9f12, 0xad3c, 0xef40, 0x98c4, 0x2ec9, 0x38cf, 0x1, 0x1);
        gbc.writeMem(0x9f12, { 0xd2, 0xa9, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xad3c);
        EXPECT(gbc.pc(), 0x8ba9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f12), 0xd2);
        EXPECT(gbc.readMem(0x9f13), 0xa9);
        EXPECT(gbc.readMem(0x9f14), 0x8b);
        // D2 003E
        gbc.setState(0x89d2, 0x6f93, 0xba20, 0x1544, 0xd2f3, 0x91d4, 0x1, 0x0);
        gbc.writeMem(0x89d2, { 0xd2, 0x20, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x6f93);
        EXPECT(gbc.pc(), 0x6220);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89d2), 0xd2);
        EXPECT(gbc.readMem(0x89d3), 0x20);
        EXPECT(gbc.readMem(0x89d4), 0x62);
        // D2 003F
        gbc.setState(0x8467, 0xf51b, 0x60b0, 0x5cd4, 0x94ac, 0xde8e, 0x1, 0x1);
        gbc.writeMem(0x8467, { 0xd2, 0x21, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xf51b);
        EXPECT(gbc.pc(), 0x846a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8467), 0xd2);
        EXPECT(gbc.readMem(0x8468), 0x21);
        EXPECT(gbc.readMem(0x8469), 0x3e);
        // D2 0040
        gbc.setState(0xee8d, 0x3b61, 0x41b0, 0x5f0b, 0xdaa1, 0xb3ba, 0x1, 0x1);
        gbc.writeMem(0xee8d, { 0xd2, 0x90, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x3b61);
        EXPECT(gbc.pc(), 0xee90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee8d), 0xd2);
        EXPECT(gbc.readMem(0xee8e), 0x90);
        EXPECT(gbc.readMem(0xee8f), 0xd0);
        // D2 0041
        gbc.setState(0x1539, 0xbcd1, 0x7370, 0x5350, 0xc650, 0x6a2f, 0x1, 0x1);
        gbc.writeMem(0x1539, { 0xd2, 0x29, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xbcd1);
        EXPECT(gbc.pc(), 0x153c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0042
        gbc.setState(0xb650, 0xf80c, 0x79c0, 0x6808, 0x4921, 0x1877, 0x0, 0x0);
        gbc.writeMem(0xb650, { 0xd2, 0xb9, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xf80c);
        EXPECT(gbc.pc(), 0xe3b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb650), 0xd2);
        EXPECT(gbc.readMem(0xb651), 0xb9);
        EXPECT(gbc.readMem(0xb652), 0xe3);
        // D2 0043
        gbc.setState(0x7976, 0x3f95, 0x3aa0, 0x2ff5, 0xe62c, 0xdc62, 0x1, 0x1);
        gbc.writeMem(0x7976, { 0xd2, 0xcc, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x3f95);
        EXPECT(gbc.pc(), 0x79cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0044
        gbc.setState(0x4d40, 0xda49, 0xd350, 0xa1c6, 0xde67, 0x2262, 0x0, 0x0);
        gbc.writeMem(0x4d40, { 0xd2, 0x1b, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xda49);
        EXPECT(gbc.pc(), 0x4d43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 0045
        gbc.setState(0x4a6b, 0x6c50, 0x2ed0, 0x76ae, 0x28de, 0xdb91, 0x1, 0x0);
        gbc.writeMem(0x4a6b, { 0xd2, 0xcc, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x6c50);
        EXPECT(gbc.pc(), 0x4a6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 0047
        gbc.setState(0xae26, 0xa771, 0xfb0, 0x1c74, 0x48b7, 0x8d63, 0x1, 0x0);
        gbc.writeMem(0xae26, { 0xd2, 0x41, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xa771);
        EXPECT(gbc.pc(), 0xae29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae26), 0xd2);
        EXPECT(gbc.readMem(0xae27), 0x41);
        EXPECT(gbc.readMem(0xae28), 0x54);
        // D2 0048
        gbc.setState(0x70f6, 0x2068, 0x6ee0, 0x9749, 0x7ddd, 0x80fd, 0x0, 0x0);
        gbc.writeMem(0x70f6, { 0xd2, 0x2e, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x2068);
        EXPECT(gbc.pc(), 0x2c2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0049
        gbc.setState(0x8d8e, 0xeb77, 0x1910, 0xef6a, 0x9609, 0xc9cc, 0x0, 0x0);
        gbc.writeMem(0x8d8e, { 0xd2, 0x7b, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xeb77);
        EXPECT(gbc.pc(), 0x8d91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d8e), 0xd2);
        EXPECT(gbc.readMem(0x8d8f), 0x7b);
        EXPECT(gbc.readMem(0x8d90), 0xd7);
        // D2 004A
        gbc.setState(0x37ce, 0x2ae3, 0x8440, 0xd64c, 0xead5, 0xed4d, 0x0, 0x0);
        gbc.writeMem(0x37ce, { 0xd2, 0xc8, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x2ae3);
        EXPECT(gbc.pc(), 0xbfc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 004B
        gbc.setState(0x6e04, 0x673c, 0xe410, 0x1052, 0x64de, 0xf401, 0x0, 0x1);
        gbc.writeMem(0x6e04, { 0xd2, 0x7b, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x673c);
        EXPECT(gbc.pc(), 0x6e07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 004C
        gbc.setState(0x6f55, 0x50cc, 0xb3c0, 0x2433, 0x16b6, 0x121d, 0x0, 0x0);
        gbc.writeMem(0x6f55, { 0xd2, 0xb9, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x50cc);
        EXPECT(gbc.pc(), 0x8bb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 004D
        gbc.setState(0x1e07, 0x521, 0xa6c0, 0xf11a, 0xf959, 0x7689, 0x0, 0x1);
        gbc.writeMem(0x1e07, { 0xd2, 0xcc, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x521);
        EXPECT(gbc.pc(), 0xaacc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 004F
        gbc.setState(0x5bdd, 0xe724, 0xa800, 0x4524, 0xfa98, 0x3b41, 0x1, 0x0);
        gbc.writeMem(0x5bdd, { 0xd2, 0x56, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xe724);
        EXPECT(gbc.pc(), 0x5e56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 0050
        gbc.setState(0x8f06, 0xa33f, 0xe840, 0x68aa, 0xd4d0, 0x161c, 0x0, 0x0);
        gbc.writeMem(0x8f06, { 0xd2, 0xc1, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xa33f);
        EXPECT(gbc.pc(), 0x82c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f06), 0xd2);
        EXPECT(gbc.readMem(0x8f07), 0xc1);
        EXPECT(gbc.readMem(0x8f08), 0x82);
        // D2 0051
        gbc.setState(0x495, 0xf3b7, 0x4ec0, 0x7efe, 0x77bf, 0xbf2e, 0x0, 0x1);
        gbc.writeMem(0x495, { 0xd2, 0x81, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xf3b7);
        EXPECT(gbc.pc(), 0xca81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 0052
        gbc.setState(0x81b3, 0x722c, 0xc280, 0x3b83, 0x4533, 0x84d4, 0x0, 0x1);
        gbc.writeMem(0x81b3, { 0xd2, 0x6e, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x722c);
        EXPECT(gbc.pc(), 0xdf6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81b3), 0xd2);
        EXPECT(gbc.readMem(0x81b4), 0x6e);
        EXPECT(gbc.readMem(0x81b5), 0xdf);
        // D2 0053
        gbc.setState(0x38c5, 0x8f86, 0xb280, 0x5876, 0x1dd0, 0x67df, 0x1, 0x1);
        gbc.writeMem(0x38c5, { 0xd2, 0xb4, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x8f86);
        EXPECT(gbc.pc(), 0x25b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 0054
        gbc.setState(0xe5ee, 0x8628, 0xb510, 0x656e, 0x2c6c, 0xe620, 0x1, 0x0);
        gbc.writeMem(0xe5ee, { 0xd2, 0xdb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x8628);
        EXPECT(gbc.pc(), 0xe5f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5ee), 0xd2);
        EXPECT(gbc.readMem(0xe5ef), 0xdb);
        EXPECT(gbc.readMem(0xe5f0), 0x23);
        // D2 0055
        gbc.setState(0x5ca6, 0x7a5f, 0x4a80, 0xc1df, 0xc585, 0x82ce, 0x0, 0x0);
        gbc.writeMem(0x5ca6, { 0xd2, 0x46, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x7a5f);
        EXPECT(gbc.pc(), 0x3e46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 0056
        gbc.setState(0x3a8f, 0xcd4c, 0xf20, 0xed47, 0x6409, 0x94e8, 0x0, 0x1);
        gbc.writeMem(0x3a8f, { 0xd2, 0xab, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xcd4c);
        EXPECT(gbc.pc(), 0xdaab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0057
        gbc.setState(0xd4e3, 0x4ad, 0x3720, 0xc9d, 0x996a, 0x9c85, 0x1, 0x0);
        gbc.writeMem(0xd4e3, { 0xd2, 0x41, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x4ad);
        EXPECT(gbc.pc(), 0xe341);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4e3), 0xd2);
        EXPECT(gbc.readMem(0xd4e4), 0x41);
        EXPECT(gbc.readMem(0xd4e5), 0xe3);
        // D2 0058
        gbc.setState(0x19f5, 0xfcf2, 0xf0e0, 0x3d6f, 0x3b43, 0x5666, 0x0, 0x1);
        gbc.writeMem(0x19f5, { 0xd2, 0x1d, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xfcf2);
        EXPECT(gbc.pc(), 0xc21d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0059
        gbc.setState(0x69dc, 0x4bf0, 0x3010, 0x1d29, 0x8193, 0x101d, 0x1, 0x0);
        gbc.writeMem(0x69dc, { 0xd2, 0x26, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x4bf0);
        EXPECT(gbc.pc(), 0x69df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 005A
        gbc.setState(0x2f0a, 0xc391, 0x3f80, 0x3ca1, 0xcaae, 0xabc7, 0x0, 0x0);
        gbc.writeMem(0x2f0a, { 0xd2, 0x74, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xc391);
        EXPECT(gbc.pc(), 0xc774);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 005B
        gbc.setState(0x9ff5, 0xb888, 0x3020, 0xcc79, 0x54e4, 0x624f, 0x0, 0x0);
        gbc.writeMem(0x9ff5, { 0xd2, 0x29, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xb888);
        EXPECT(gbc.pc(), 0xdf29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ff5), 0xd2);
        EXPECT(gbc.readMem(0x9ff6), 0x29);
        EXPECT(gbc.readMem(0x9ff7), 0xdf);
        // D2 005C
        gbc.setState(0x4cde, 0xae7c, 0x5590, 0x22b, 0xe92a, 0xf91b, 0x0, 0x1);
        gbc.writeMem(0x4cde, { 0xd2, 0x71, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xae7c);
        EXPECT(gbc.pc(), 0x4ce1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 005D
        gbc.setState(0x8ff2, 0x836a, 0x19c0, 0x2a7d, 0x990d, 0xed83, 0x0, 0x1);
        gbc.writeMem(0x8ff2, { 0xd2, 0xa8, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x836a);
        EXPECT(gbc.pc(), 0x4a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ff2), 0xd2);
        EXPECT(gbc.readMem(0x8ff3), 0xa8);
        EXPECT(gbc.readMem(0x8ff4), 0x4);
        // D2 005E
        gbc.setState(0xd9b7, 0x1f77, 0xea40, 0xdd5e, 0xfe0f, 0x7acf, 0x1, 0x1);
        gbc.writeMem(0xd9b7, { 0xd2, 0x37, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x1f77);
        EXPECT(gbc.pc(), 0x2d37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9b7), 0xd2);
        EXPECT(gbc.readMem(0xd9b8), 0x37);
        EXPECT(gbc.readMem(0xd9b9), 0x2d);
        // D2 005F
        gbc.setState(0x1c2, 0x7faa, 0xdb70, 0xf025, 0x3cfb, 0x47a7, 0x1, 0x0);
        gbc.writeMem(0x1c2, { 0xd2, 0x9f, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x7faa);
        EXPECT(gbc.pc(), 0x1c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0060
        gbc.setState(0x2764, 0x3344, 0x80f0, 0x27a3, 0x7a8b, 0xf281, 0x0, 0x1);
        gbc.writeMem(0x2764, { 0xd2, 0x7b, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x3344);
        EXPECT(gbc.pc(), 0x2767);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0061
        gbc.setState(0x60e, 0xeb72, 0xb130, 0x9ded, 0xe945, 0xc255, 0x0, 0x1);
        gbc.writeMem(0x60e, { 0xd2, 0x88, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xeb72);
        EXPECT(gbc.pc(), 0x611);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0062
        gbc.setState(0xd756, 0xb8fa, 0xba80, 0x1f57, 0xbcd4, 0x6b94, 0x1, 0x1);
        gbc.writeMem(0xd756, { 0xd2, 0xe7, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xb8fa);
        EXPECT(gbc.pc(), 0xbee7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd756), 0xd2);
        EXPECT(gbc.readMem(0xd757), 0xe7);
        EXPECT(gbc.readMem(0xd758), 0xbe);
        // D2 0063
        gbc.setState(0xb52d, 0xba97, 0x7df0, 0x591f, 0xee2a, 0x59c6, 0x1, 0x1);
        gbc.writeMem(0xb52d, { 0xd2, 0x7d, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xba97);
        EXPECT(gbc.pc(), 0xb530);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb52d), 0xd2);
        EXPECT(gbc.readMem(0xb52e), 0x7d);
        EXPECT(gbc.readMem(0xb52f), 0x77);
        // D2 0064
        gbc.setState(0x2c80, 0xc980, 0x5be0, 0x4807, 0x26c0, 0x77c, 0x0, 0x1);
        gbc.writeMem(0x2c80, { 0xd2, 0x4d, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xc980);
        EXPECT(gbc.pc(), 0xc24d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0065
        gbc.setState(0x6ce9, 0x8b6e, 0x2070, 0x45d7, 0xf5ef, 0xb650, 0x0, 0x1);
        gbc.writeMem(0x6ce9, { 0xd2, 0xbd, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x8b6e);
        EXPECT(gbc.pc(), 0x6cec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0066
        gbc.setState(0x7232, 0x2c53, 0x90d0, 0x63fb, 0x8655, 0xd267, 0x1, 0x0);
        gbc.writeMem(0x7232, { 0xd2, 0x87, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x2c53);
        EXPECT(gbc.pc(), 0x7235);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 0067
        gbc.setState(0xd122, 0xf20c, 0x30f0, 0xf649, 0x8d6d, 0xdeb1, 0x0, 0x1);
        gbc.writeMem(0xd122, { 0xd2, 0x13, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xf20c);
        EXPECT(gbc.pc(), 0xd125);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd122), 0xd2);
        EXPECT(gbc.readMem(0xd123), 0x13);
        EXPECT(gbc.readMem(0xd124), 0x46);
        // D2 0068
        gbc.setState(0xb66a, 0xed59, 0x85a0, 0xd9ed, 0x4092, 0x9ff4, 0x0, 0x1);
        gbc.writeMem(0xb66a, { 0xd2, 0x2d, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xed59);
        EXPECT(gbc.pc(), 0x862d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb66a), 0xd2);
        EXPECT(gbc.readMem(0xb66b), 0x2d);
        EXPECT(gbc.readMem(0xb66c), 0x86);
        // D2 006A
        gbc.setState(0xad9d, 0x5a76, 0x69d0, 0x8d01, 0xa3bf, 0xf18f, 0x1, 0x1);
        gbc.writeMem(0xad9d, { 0xd2, 0xd7, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x5a76);
        EXPECT(gbc.pc(), 0xada0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad9d), 0xd2);
        EXPECT(gbc.readMem(0xad9e), 0xd7);
        EXPECT(gbc.readMem(0xad9f), 0x6a);
        // D2 006B
        gbc.setState(0x9d53, 0x2c15, 0x1e80, 0xf7cc, 0xb23d, 0xb5fa, 0x0, 0x1);
        gbc.writeMem(0x9d53, { 0xd2, 0xfa, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x2c15);
        EXPECT(gbc.pc(), 0x1bfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d53), 0xd2);
        EXPECT(gbc.readMem(0x9d54), 0xfa);
        EXPECT(gbc.readMem(0x9d55), 0x1b);
        // D2 006C
        gbc.setState(0x3f42, 0x7b50, 0x87e0, 0x74a8, 0x9726, 0x3b74, 0x0, 0x0);
        gbc.writeMem(0x3f42, { 0xd2, 0xdf, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x7b50);
        EXPECT(gbc.pc(), 0x1adf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 006D
        gbc.setState(0xb289, 0x9dc3, 0xdd50, 0x1d9c, 0x3445, 0x2eea, 0x1, 0x1);
        gbc.writeMem(0xb289, { 0xd2, 0xdc, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x9dc3);
        EXPECT(gbc.pc(), 0xb28c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb289), 0xd2);
        EXPECT(gbc.readMem(0xb28a), 0xdc);
        EXPECT(gbc.readMem(0xb28b), 0x36);
        // D2 006E
        gbc.setState(0x7955, 0xf07d, 0xa430, 0x467e, 0x9ab2, 0xb3b1, 0x1, 0x1);
        gbc.writeMem(0x7955, { 0xd2, 0x3b, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xf07d);
        EXPECT(gbc.pc(), 0x7958);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 006F
        gbc.setState(0x46da, 0x8163, 0x10d0, 0xe6ca, 0xf2fb, 0xfd05, 0x1, 0x1);
        gbc.writeMem(0x46da, { 0xd2, 0xa3, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x8163);
        EXPECT(gbc.pc(), 0x46dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 0070
        gbc.setState(0xe5d8, 0x5e7c, 0xf320, 0x2b39, 0x5fa7, 0xa19b, 0x1, 0x1);
        gbc.writeMem(0xe5d8, { 0xd2, 0xcc, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x5e7c);
        EXPECT(gbc.pc(), 0xfcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5d8), 0xd2);
        EXPECT(gbc.readMem(0xe5d9), 0xcc);
        EXPECT(gbc.readMem(0xe5da), 0xf);
        // D2 0071
        gbc.setState(0xcd61, 0x8757, 0xdb50, 0x3c04, 0x1632, 0x5787, 0x1, 0x0);
        gbc.writeMem(0xcd61, { 0xd2, 0xa0, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x8757);
        EXPECT(gbc.pc(), 0xcd64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd61), 0xd2);
        EXPECT(gbc.readMem(0xcd62), 0xa0);
        EXPECT(gbc.readMem(0xcd63), 0xdb);
        // D2 0072
        gbc.setState(0x699f, 0x6188, 0x260, 0x73ea, 0xf2e, 0xcf95, 0x0, 0x1);
        gbc.writeMem(0x699f, { 0xd2, 0xd3, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x6188);
        EXPECT(gbc.pc(), 0x45d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0073
        gbc.setState(0xd6df, 0x2986, 0x2790, 0x4a81, 0x6eda, 0x5d7f, 0x0, 0x0);
        gbc.writeMem(0xd6df, { 0xd2, 0x60, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x2986);
        EXPECT(gbc.pc(), 0xd6e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6df), 0xd2);
        EXPECT(gbc.readMem(0xd6e0), 0x60);
        EXPECT(gbc.readMem(0xd6e1), 0x7a);
        // D2 0074
        gbc.setState(0x3a63, 0x869f, 0x5e20, 0xb0a5, 0xc95, 0xe379, 0x0, 0x1);
        gbc.writeMem(0x3a63, { 0xd2, 0x94, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x869f);
        EXPECT(gbc.pc(), 0x5b94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0075
        gbc.setState(0xb112, 0x11b9, 0x81b0, 0x87ae, 0x505, 0x1929, 0x1, 0x0);
        gbc.writeMem(0xb112, { 0xd2, 0x8d, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x11b9);
        EXPECT(gbc.pc(), 0xb115);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb112), 0xd2);
        EXPECT(gbc.readMem(0xb113), 0x8d);
        EXPECT(gbc.readMem(0xb114), 0x3c);
        // D2 0076
        gbc.setState(0x2054, 0xb20, 0xb60, 0x99ec, 0x653b, 0x4028, 0x1, 0x0);
        gbc.writeMem(0x2054, { 0xd2, 0xac, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xb20);
        EXPECT(gbc.pc(), 0xe3ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0077
        gbc.setState(0xc29b, 0x349, 0x4fc0, 0x7479, 0xad40, 0x3173, 0x0, 0x1);
        gbc.writeMem(0xc29b, { 0xd2, 0x76, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x349);
        EXPECT(gbc.pc(), 0x5276);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc29b), 0xd2);
        EXPECT(gbc.readMem(0xc29c), 0x76);
        EXPECT(gbc.readMem(0xc29d), 0x52);
        // D2 0078
        gbc.setState(0x6902, 0x90a0, 0xd510, 0x6244, 0xfb92, 0x8d41, 0x0, 0x0);
        gbc.writeMem(0x6902, { 0xd2, 0x58, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x90a0);
        EXPECT(gbc.pc(), 0x6905);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 0079
        gbc.setState(0xb74c, 0xd05d, 0x8c70, 0x3a7b, 0x26a5, 0xcdc6, 0x0, 0x0);
        gbc.writeMem(0xb74c, { 0xd2, 0xd9, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xd05d);
        EXPECT(gbc.pc(), 0xb74f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb74c), 0xd2);
        EXPECT(gbc.readMem(0xb74d), 0xd9);
        EXPECT(gbc.readMem(0xb74e), 0x63);
        // D2 007A
        gbc.setState(0x10bf, 0x2b1b, 0xd6e0, 0x9abd, 0x6db5, 0xf316, 0x1, 0x0);
        gbc.writeMem(0x10bf, { 0xd2, 0xb9, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x2b1b);
        EXPECT(gbc.pc(), 0xb7b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 007B
        gbc.setState(0x60e3, 0x2cd2, 0x57f0, 0xaaa7, 0xa580, 0xad7, 0x0, 0x0);
        gbc.writeMem(0x60e3, { 0xd2, 0x4c, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x2cd2);
        EXPECT(gbc.pc(), 0x60e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 007C
        gbc.setState(0x5329, 0x41ad, 0x6990, 0x6f7e, 0xf717, 0x29ca, 0x0, 0x0);
        gbc.writeMem(0x5329, { 0xd2, 0x49, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x41ad);
        EXPECT(gbc.pc(), 0x532c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 007D
        gbc.setState(0x3820, 0x212c, 0x50e0, 0x1015, 0x6a44, 0x27cf, 0x0, 0x1);
        gbc.writeMem(0x3820, { 0xd2, 0xcb, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x212c);
        EXPECT(gbc.pc(), 0xc1cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 007E
        gbc.setState(0xb1bf, 0x938f, 0x43c0, 0x303b, 0xaaff, 0x3bf0, 0x0, 0x0);
        gbc.writeMem(0xb1bf, { 0xd2, 0xe9, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x938f);
        EXPECT(gbc.pc(), 0x68e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1bf), 0xd2);
        EXPECT(gbc.readMem(0xb1c0), 0xe9);
        EXPECT(gbc.readMem(0xb1c1), 0x68);
        // D2 007F
        gbc.setState(0xcaa8, 0x832a, 0x30c0, 0xe4b5, 0xcf4, 0x8f8d, 0x0, 0x1);
        gbc.writeMem(0xcaa8, { 0xd2, 0xae, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x832a);
        EXPECT(gbc.pc(), 0xcfae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcaa8), 0xd2);
        EXPECT(gbc.readMem(0xcaa9), 0xae);
        EXPECT(gbc.readMem(0xcaaa), 0xcf);
        // D2 0080
        gbc.setState(0xa0f1, 0x3292, 0xdb90, 0xf139, 0xd330, 0xbd0e, 0x0, 0x1);
        gbc.writeMem(0xa0f1, { 0xd2, 0x13, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x3292);
        EXPECT(gbc.pc(), 0xa0f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0f1), 0xd2);
        EXPECT(gbc.readMem(0xa0f2), 0x13);
        EXPECT(gbc.readMem(0xa0f3), 0xd8);
        // D2 0081
        gbc.setState(0xaa20, 0x5bc9, 0x5fa0, 0xdf6f, 0xc646, 0xe126, 0x1, 0x0);
        gbc.writeMem(0xaa20, { 0xd2, 0xba, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x5bc9);
        EXPECT(gbc.pc(), 0xa8ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa20), 0xd2);
        EXPECT(gbc.readMem(0xaa21), 0xba);
        EXPECT(gbc.readMem(0xaa22), 0xa8);
        // D2 0082
        gbc.setState(0xbde8, 0x77de, 0x5de0, 0x7006, 0x6b08, 0xf2c7, 0x1, 0x0);
        gbc.writeMem(0xbde8, { 0xd2, 0xac, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x77de);
        EXPECT(gbc.pc(), 0x31ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbde8), 0xd2);
        EXPECT(gbc.readMem(0xbde9), 0xac);
        EXPECT(gbc.readMem(0xbdea), 0x31);
        // D2 0083
        gbc.setState(0xd57d, 0x943e, 0x1e60, 0x4991, 0x7cee, 0x9767, 0x0, 0x1);
        gbc.writeMem(0xd57d, { 0xd2, 0x92, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x943e);
        EXPECT(gbc.pc(), 0x3692);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd57d), 0xd2);
        EXPECT(gbc.readMem(0xd57e), 0x92);
        EXPECT(gbc.readMem(0xd57f), 0x36);
        // D2 0084
        gbc.setState(0xb208, 0xfb1f, 0x3f40, 0x5331, 0x71e9, 0x7e57, 0x0, 0x1);
        gbc.writeMem(0xb208, { 0xd2, 0x50, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xfb1f);
        EXPECT(gbc.pc(), 0x4e50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb208), 0xd2);
        EXPECT(gbc.readMem(0xb209), 0x50);
        EXPECT(gbc.readMem(0xb20a), 0x4e);
        // D2 0085
        gbc.setState(0x12cc, 0xb02b, 0x2520, 0x9f73, 0x723e, 0xb5ed, 0x0, 0x1);
        gbc.writeMem(0x12cc, { 0xd2, 0xc2, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xb02b);
        EXPECT(gbc.pc(), 0xe1c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0086
        gbc.setState(0xc601, 0xa3b8, 0xe440, 0xeb6f, 0x23de, 0x3484, 0x1, 0x0);
        gbc.writeMem(0xc601, { 0xd2, 0xdb, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xa3b8);
        EXPECT(gbc.pc(), 0xeedb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc601), 0xd2);
        EXPECT(gbc.readMem(0xc602), 0xdb);
        EXPECT(gbc.readMem(0xc603), 0xee);
        // D2 0087
        gbc.setState(0xdd42, 0xea1d, 0xa810, 0xe115, 0x25a0, 0xad2c, 0x0, 0x0);
        gbc.writeMem(0xdd42, { 0xd2, 0x73, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xea1d);
        EXPECT(gbc.pc(), 0xdd45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd42), 0xd2);
        EXPECT(gbc.readMem(0xdd43), 0x73);
        EXPECT(gbc.readMem(0xdd44), 0x8e);
        // D2 0088
        gbc.setState(0x5fe4, 0x387f, 0xc530, 0xd56e, 0x2c91, 0xee73, 0x1, 0x1);
        gbc.writeMem(0x5fe4, { 0xd2, 0xe8, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x387f);
        EXPECT(gbc.pc(), 0x5fe7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0089
        gbc.setState(0x8f70, 0x9b4f, 0x3820, 0x5b61, 0xd234, 0xae6b, 0x0, 0x1);
        gbc.writeMem(0x8f70, { 0xd2, 0xff, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x9b4f);
        EXPECT(gbc.pc(), 0x47ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f70), 0xd2);
        EXPECT(gbc.readMem(0x8f71), 0xff);
        EXPECT(gbc.readMem(0x8f72), 0x47);
        // D2 008A
        gbc.setState(0x733a, 0xecd6, 0xd410, 0x5e56, 0xe921, 0xc0d0, 0x1, 0x0);
        gbc.writeMem(0x733a, { 0xd2, 0x5b, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xecd6);
        EXPECT(gbc.pc(), 0x733d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 008B
        gbc.setState(0x794f, 0xc2d3, 0xaa10, 0xbfcd, 0x512b, 0x85cf, 0x0, 0x0);
        gbc.writeMem(0x794f, { 0xd2, 0xd6, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xc2d3);
        EXPECT(gbc.pc(), 0x7952);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 008D
        gbc.setState(0x76f9, 0x1c6e, 0x5ae0, 0x6cd7, 0x6245, 0x93a5, 0x0, 0x1);
        gbc.writeMem(0x76f9, { 0xd2, 0xe8, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x1c6e);
        EXPECT(gbc.pc(), 0xfde8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 008E
        gbc.setState(0x8be6, 0x3709, 0xba30, 0x5ac4, 0x155b, 0x5581, 0x1, 0x1);
        gbc.writeMem(0x8be6, { 0xd2, 0x7a, 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x3709);
        EXPECT(gbc.pc(), 0x8be9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8be6), 0xd2);
        EXPECT(gbc.readMem(0x8be7), 0x7a);
        EXPECT(gbc.readMem(0x8be8), 0x48);
        // D2 008F
        gbc.setState(0xec09, 0x43c6, 0xb180, 0xef4f, 0x9137, 0x81ac, 0x0, 0x1);
        gbc.writeMem(0xec09, { 0xd2, 0x10, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x43c6);
        EXPECT(gbc.pc(), 0xd210);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec09), 0xd2);
        EXPECT(gbc.readMem(0xec0a), 0x10);
        EXPECT(gbc.readMem(0xec0b), 0xd2);
        // D2 0090
        gbc.setState(0xe95a, 0xf412, 0x5a50, 0xbcf2, 0x2236, 0xc346, 0x0, 0x0);
        gbc.writeMem(0xe95a, { 0xd2, 0x2e, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xf412);
        EXPECT(gbc.pc(), 0xe95d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe95a), 0xd2);
        EXPECT(gbc.readMem(0xe95b), 0x2e);
        EXPECT(gbc.readMem(0xe95c), 0xa);
        // D2 0091
        gbc.setState(0xbf24, 0xa483, 0x2260, 0x7d81, 0x18f, 0xdd4c, 0x1, 0x0);
        gbc.writeMem(0xbf24, { 0xd2, 0x3f, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xa483);
        EXPECT(gbc.pc(), 0xd23f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf24), 0xd2);
        EXPECT(gbc.readMem(0xbf25), 0x3f);
        EXPECT(gbc.readMem(0xbf26), 0xd2);
        // D2 0092
        gbc.setState(0x50d8, 0x98ac, 0xf9a0, 0x8a4, 0x9eed, 0x75d7, 0x0, 0x1);
        gbc.writeMem(0x50d8, { 0xd2, 0x55, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x98ac);
        EXPECT(gbc.pc(), 0xaf55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0093
        gbc.setState(0x1559, 0xc662, 0x6290, 0x511e, 0x5d1b, 0xafdf, 0x0, 0x0);
        gbc.writeMem(0x1559, { 0xd2, 0x41, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xc662);
        EXPECT(gbc.pc(), 0x155c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 0094
        gbc.setState(0x4974, 0x8ecd, 0x1150, 0x14e3, 0x2db5, 0xe995, 0x1, 0x0);
        gbc.writeMem(0x4974, { 0xd2, 0x1c, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x8ecd);
        EXPECT(gbc.pc(), 0x4977);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 0095
        gbc.setState(0x613b, 0x3aa6, 0x65b0, 0x27f6, 0x45d4, 0x1b31, 0x1, 0x1);
        gbc.writeMem(0x613b, { 0xd2, 0xfb, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x3aa6);
        EXPECT(gbc.pc(), 0x613e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0096
        gbc.setState(0x6164, 0xa4c9, 0xbe30, 0x94fd, 0x715, 0xc514, 0x1, 0x0);
        gbc.writeMem(0x6164, { 0xd2, 0x21, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xa4c9);
        EXPECT(gbc.pc(), 0x6167);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0097
        gbc.setState(0x26e8, 0x16a, 0x8950, 0xce93, 0xea01, 0xb8b, 0x0, 0x1);
        gbc.writeMem(0x26e8, { 0xd2, 0x16, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x16a);
        EXPECT(gbc.pc(), 0x26eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 0098
        gbc.setState(0x7273, 0xdfb, 0x5010, 0x4ed, 0x486, 0xbc74, 0x1, 0x0);
        gbc.writeMem(0x7273, { 0xd2, 0x2b, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xdfb);
        EXPECT(gbc.pc(), 0x7276);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 0099
        gbc.setState(0x3832, 0x16b0, 0x240, 0xc763, 0x108b, 0xbadb, 0x0, 0x1);
        gbc.writeMem(0x3832, { 0xd2, 0xf, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x16b0);
        EXPECT(gbc.pc(), 0xd60f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 009A
        gbc.setState(0xb973, 0x2280, 0xf160, 0x2fb1, 0x5063, 0xfffc, 0x1, 0x1);
        gbc.writeMem(0xb973, { 0xd2, 0xd7, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x2280);
        EXPECT(gbc.pc(), 0x1ed7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb973), 0xd2);
        EXPECT(gbc.readMem(0xb974), 0xd7);
        EXPECT(gbc.readMem(0xb975), 0x1e);
        // D2 009B
        gbc.setState(0x5a4d, 0xccbf, 0x3f80, 0x538, 0x5c2b, 0x7a37, 0x1, 0x1);
        gbc.writeMem(0x5a4d, { 0xd2, 0xf0, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xccbf);
        EXPECT(gbc.pc(), 0x7f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 009E
        gbc.setState(0x5fb7, 0x3e27, 0x7500, 0xc7, 0xe438, 0x20f1, 0x0, 0x1);
        gbc.writeMem(0x5fb7, { 0xd2, 0xac, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x3e27);
        EXPECT(gbc.pc(), 0x6bac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 009F
        gbc.setState(0xb4f5, 0xf265, 0x53f0, 0x4791, 0x87d0, 0x5e13, 0x0, 0x1);
        gbc.writeMem(0xb4f5, { 0xd2, 0x51, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xf265);
        EXPECT(gbc.pc(), 0xb4f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4f5), 0xd2);
        EXPECT(gbc.readMem(0xb4f6), 0x51);
        EXPECT(gbc.readMem(0xb4f7), 0x19);
        // D2 00A0
        gbc.setState(0xe61b, 0xd61d, 0x6ba0, 0x55c7, 0x88c6, 0x4e73, 0x1, 0x0);
        gbc.writeMem(0xe61b, { 0xd2, 0xae, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xd61d);
        EXPECT(gbc.pc(), 0xe5ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe61b), 0xd2);
        EXPECT(gbc.readMem(0xe61c), 0xae);
        EXPECT(gbc.readMem(0xe61d), 0xe5);
        // D2 00A1
        gbc.setState(0xe22b, 0x4236, 0xd9d0, 0x5643, 0xf, 0xca68, 0x1, 0x0);
        gbc.writeMem(0xe22b, { 0xd2, 0xf0, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x4236);
        EXPECT(gbc.pc(), 0xe22e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe22b), 0xd2);
        EXPECT(gbc.readMem(0xe22c), 0xf0);
        EXPECT(gbc.readMem(0xe22d), 0x7);
        // D2 00A2
        gbc.setState(0xa88d, 0x1d48, 0xc7b0, 0xd253, 0xcd54, 0x23ec, 0x0, 0x0);
        gbc.writeMem(0xa88d, { 0xd2, 0x46, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x1d48);
        EXPECT(gbc.pc(), 0xa890);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa88d), 0xd2);
        EXPECT(gbc.readMem(0xa88e), 0x46);
        EXPECT(gbc.readMem(0xa88f), 0x6c);
        // D2 00A3
        gbc.setState(0x5852, 0xd3b, 0xa520, 0x7f98, 0x8391, 0xfe88, 0x1, 0x1);
        gbc.writeMem(0x5852, { 0xd2, 0x3f, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xd3b);
        EXPECT(gbc.pc(), 0xe63f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 00A4
        gbc.setState(0xe9f8, 0xd28c, 0xd6d0, 0x5828, 0x3103, 0x3631, 0x1, 0x1);
        gbc.writeMem(0xe9f8, { 0xd2, 0x8f, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xd28c);
        EXPECT(gbc.pc(), 0xe9fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9f8), 0xd2);
        EXPECT(gbc.readMem(0xe9f9), 0x8f);
        EXPECT(gbc.readMem(0xe9fa), 0xe0);
        // D2 00A5
        gbc.setState(0x7d0b, 0xd3aa, 0xa600, 0xd8c4, 0xb551, 0x65f4, 0x1, 0x0);
        gbc.writeMem(0x7d0b, { 0xd2, 0xba, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xd3aa);
        EXPECT(gbc.pc(), 0x41ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 00A6
        gbc.setState(0x1545, 0x3ab8, 0x46e0, 0xd7a3, 0x8515, 0x29b1, 0x0, 0x0);
        gbc.writeMem(0x1545, { 0xd2, 0xc2, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x3ab8);
        EXPECT(gbc.pc(), 0xa1c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 00A7
        gbc.setState(0x775f, 0xdedd, 0xefb0, 0xc09, 0x39d4, 0xcb5b, 0x0, 0x0);
        gbc.writeMem(0x775f, { 0xd2, 0xa7, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xdedd);
        EXPECT(gbc.pc(), 0x7762);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 00A8
        gbc.setState(0xd962, 0xc424, 0xc7d0, 0x4d4e, 0xc1d4, 0x58c, 0x1, 0x0);
        gbc.writeMem(0xd962, { 0xd2, 0xb7, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xc424);
        EXPECT(gbc.pc(), 0xd965);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd962), 0xd2);
        EXPECT(gbc.readMem(0xd963), 0xb7);
        EXPECT(gbc.readMem(0xd964), 0x6a);
        // D2 00A9
        gbc.setState(0xbb20, 0xbcc4, 0x6190, 0xccfd, 0xd705, 0x1c37, 0x0, 0x1);
        gbc.writeMem(0xbb20, { 0xd2, 0xfd, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xbcc4);
        EXPECT(gbc.pc(), 0xbb23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb20), 0xd2);
        EXPECT(gbc.readMem(0xbb21), 0xfd);
        EXPECT(gbc.readMem(0xbb22), 0xfc);
        // D2 00AA
        gbc.setState(0x407b, 0x54b, 0xc770, 0xe8c7, 0x97ed, 0x6835, 0x0, 0x1);
        gbc.writeMem(0x407b, { 0xd2, 0x3c, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x54b);
        EXPECT(gbc.pc(), 0x407e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 00AB
        gbc.setState(0xb0a0, 0x5868, 0x21a0, 0xad06, 0x7474, 0xce6e, 0x1, 0x0);
        gbc.writeMem(0xb0a0, { 0xd2, 0x89, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x5868);
        EXPECT(gbc.pc(), 0x1489);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0a0), 0xd2);
        EXPECT(gbc.readMem(0xb0a1), 0x89);
        EXPECT(gbc.readMem(0xb0a2), 0x14);
        // D2 00AC
        gbc.setState(0x5462, 0xdc2b, 0x2300, 0x1fc, 0xdb5b, 0x5cfd, 0x0, 0x0);
        gbc.writeMem(0x5462, { 0xd2, 0x33, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xdc2b);
        EXPECT(gbc.pc(), 0x5e33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 00AD
        gbc.setState(0xddd2, 0x3dab, 0x8520, 0x32d3, 0x519f, 0xb5e4, 0x1, 0x1);
        gbc.writeMem(0xddd2, { 0xd2, 0xc, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x3dab);
        EXPECT(gbc.pc(), 0x940c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddd2), 0xd2);
        EXPECT(gbc.readMem(0xddd3), 0xc);
        EXPECT(gbc.readMem(0xddd4), 0x94);
        // D2 00AE
        gbc.setState(0x7dfd, 0x4c7b, 0x4b60, 0x4d6b, 0xd15c, 0x8f96, 0x1, 0x0);
        gbc.writeMem(0x7dfd, { 0xd2, 0xce, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x4c7b);
        EXPECT(gbc.pc(), 0xd3ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 00B1
        gbc.setState(0x9c3c, 0xd170, 0x9230, 0x6f42, 0xa111, 0x2c65, 0x1, 0x1);
        gbc.writeMem(0x9c3c, { 0xd2, 0x3c, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xd170);
        EXPECT(gbc.pc(), 0x9c3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c3c), 0xd2);
        EXPECT(gbc.readMem(0x9c3d), 0x3c);
        EXPECT(gbc.readMem(0x9c3e), 0xd9);
        // D2 00B2
        gbc.setState(0x7ea, 0xa10f, 0x1a80, 0xef70, 0x84c0, 0xd58f, 0x1, 0x0);
        gbc.writeMem(0x7ea, { 0xd2, 0xd1, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xa10f);
        EXPECT(gbc.pc(), 0xecd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 00B3
        gbc.setState(0x7fc, 0x916c, 0xcb50, 0x7aca, 0x8784, 0xd8ad, 0x0, 0x0);
        gbc.writeMem(0x7fc, { 0xd2, 0x17, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x916c);
        EXPECT(gbc.pc(), 0x7ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 00B5
        gbc.setState(0x1c98, 0xbfd0, 0x7c30, 0x528a, 0xa94a, 0xb7ac, 0x0, 0x0);
        gbc.writeMem(0x1c98, { 0xd2, 0x47, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xbfd0);
        EXPECT(gbc.pc(), 0x1c9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 00B6
        gbc.setState(0xb0b4, 0xc396, 0x6e30, 0x771b, 0xa0d1, 0x3bd6, 0x0, 0x1);
        gbc.writeMem(0xb0b4, { 0xd2, 0x21, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xc396);
        EXPECT(gbc.pc(), 0xb0b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0b4), 0xd2);
        EXPECT(gbc.readMem(0xb0b5), 0x21);
        EXPECT(gbc.readMem(0xb0b6), 0x7d);
        // D2 00B7
        gbc.setState(0x3dc, 0x5106, 0x2530, 0x9ea3, 0x514b, 0x179a, 0x0, 0x1);
        gbc.writeMem(0x3dc, { 0xd2, 0xcf, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x5106);
        EXPECT(gbc.pc(), 0x3df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 00B8
        gbc.setState(0xaee3, 0x7e4, 0x9a0, 0x1a35, 0xe507, 0xecfd, 0x0, 0x0);
        gbc.writeMem(0xaee3, { 0xd2, 0xbb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x7e4);
        EXPECT(gbc.pc(), 0xdabb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaee3), 0xd2);
        EXPECT(gbc.readMem(0xaee4), 0xbb);
        EXPECT(gbc.readMem(0xaee5), 0xda);
        // D2 00B9
        gbc.setState(0x93b6, 0x2d38, 0x1540, 0x3e86, 0xdc45, 0x37c8, 0x0, 0x0);
        gbc.writeMem(0x93b6, { 0xd2, 0x77, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x2d38);
        EXPECT(gbc.pc(), 0x9177);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93b6), 0xd2);
        EXPECT(gbc.readMem(0x93b7), 0x77);
        EXPECT(gbc.readMem(0x93b8), 0x91);
        // D2 00BA
        gbc.setState(0xb857, 0xc5a, 0xd7a0, 0x6e9e, 0x6d79, 0xf7c3, 0x0, 0x1);
        gbc.writeMem(0xb857, { 0xd2, 0x0, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xc5a);
        EXPECT(gbc.pc(), 0x9e00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb857), 0xd2);
        EXPECT(gbc.readMem(0xb858), 0x0);
        EXPECT(gbc.readMem(0xb859), 0x9e);
        // D2 00BB
        gbc.setState(0xbd3f, 0xf253, 0x6110, 0x3875, 0x8db9, 0x8211, 0x1, 0x1);
        gbc.writeMem(0xbd3f, { 0xd2, 0x80, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xf253);
        EXPECT(gbc.pc(), 0xbd42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd3f), 0xd2);
        EXPECT(gbc.readMem(0xbd40), 0x80);
        EXPECT(gbc.readMem(0xbd41), 0x9e);
        // D2 00BC
        gbc.setState(0xe770, 0x9d58, 0x6450, 0x8d70, 0xb0cd, 0x2383, 0x1, 0x0);
        gbc.writeMem(0xe770, { 0xd2, 0xb9, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x9d58);
        EXPECT(gbc.pc(), 0xe773);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe770), 0xd2);
        EXPECT(gbc.readMem(0xe771), 0xb9);
        EXPECT(gbc.readMem(0xe772), 0x60);
        // D2 00BD
        gbc.setState(0x7bd9, 0x2ed0, 0x1600, 0xa656, 0x3a7e, 0xa937, 0x0, 0x0);
        gbc.writeMem(0x7bd9, { 0xd2, 0xd5, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x2ed0);
        EXPECT(gbc.pc(), 0x8d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 00BE
        gbc.setState(0xe536, 0xd681, 0x2080, 0xd29b, 0x6bab, 0x5d4f, 0x0, 0x0);
        gbc.writeMem(0xe536, { 0xd2, 0x1b, 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xd681);
        EXPECT(gbc.pc(), 0x351b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe536), 0xd2);
        EXPECT(gbc.readMem(0xe537), 0x1b);
        EXPECT(gbc.readMem(0xe538), 0x35);
        // D2 00BF
        gbc.setState(0xd5fe, 0x3014, 0x210, 0xd682, 0xd1f4, 0x7033, 0x0, 0x0);
        gbc.writeMem(0xd5fe, { 0xd2, 0xb4, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x3014);
        EXPECT(gbc.pc(), 0xd601);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5fe), 0xd2);
        EXPECT(gbc.readMem(0xd5ff), 0xb4);
        EXPECT(gbc.readMem(0xd600), 0xae);
        // D2 00C0
        gbc.setState(0x1cd7, 0x9464, 0xa620, 0xa4c3, 0x453d, 0x759e, 0x1, 0x1);
        gbc.writeMem(0x1cd7, { 0xd2, 0x7e, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x9464);
        EXPECT(gbc.pc(), 0x4e7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 00C1
        gbc.setState(0xdd2, 0x1b49, 0xd670, 0xc3a, 0x299d, 0x7197, 0x1, 0x0);
        gbc.writeMem(0xdd2, { 0xd2, 0xcd, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x1b49);
        EXPECT(gbc.pc(), 0xdd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 00C2
        gbc.setState(0xa54c, 0x674b, 0x6380, 0x9e17, 0x647e, 0xa95e, 0x0, 0x1);
        gbc.writeMem(0xa54c, { 0xd2, 0xd3, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x674b);
        EXPECT(gbc.pc(), 0x57d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa54c), 0xd2);
        EXPECT(gbc.readMem(0xa54d), 0xd3);
        EXPECT(gbc.readMem(0xa54e), 0x57);
        // D2 00C3
        gbc.setState(0xc553, 0xb2bf, 0xaf10, 0x7abb, 0xedac, 0x8587, 0x0, 0x0);
        gbc.writeMem(0xc553, { 0xd2, 0xbb, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xb2bf);
        EXPECT(gbc.pc(), 0xc556);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc553), 0xd2);
        EXPECT(gbc.readMem(0xc554), 0xbb);
        EXPECT(gbc.readMem(0xc555), 0x5b);
        // D2 00C4
        gbc.setState(0x48b0, 0x16be, 0x9e90, 0xe25f, 0xdfc, 0xb3e5, 0x1, 0x1);
        gbc.writeMem(0x48b0, { 0xd2, 0xa4, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x16be);
        EXPECT(gbc.pc(), 0x48b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 00C5
        gbc.setState(0x3f49, 0x4e8a, 0x5ab0, 0x5c27, 0xba7d, 0x9988, 0x1, 0x0);
        gbc.writeMem(0x3f49, { 0xd2, 0xf3, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x4e8a);
        EXPECT(gbc.pc(), 0x3f4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 00C6
        gbc.setState(0xd575, 0xdbcf, 0x24c0, 0x7ba4, 0xa6dd, 0xbb37, 0x1, 0x0);
        gbc.writeMem(0xd575, { 0xd2, 0x29, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xdbcf);
        EXPECT(gbc.pc(), 0xa129);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd575), 0xd2);
        EXPECT(gbc.readMem(0xd576), 0x29);
        EXPECT(gbc.readMem(0xd577), 0xa1);
        // D2 00C7
        gbc.setState(0xb948, 0xbaa9, 0x1220, 0x42f6, 0x9fc3, 0xe550, 0x0, 0x1);
        gbc.writeMem(0xb948, { 0xd2, 0xd3, 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xbaa9);
        EXPECT(gbc.pc(), 0x35d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb948), 0xd2);
        EXPECT(gbc.readMem(0xb949), 0xd3);
        EXPECT(gbc.readMem(0xb94a), 0x35);
        // D2 00C8
        gbc.setState(0x4bec, 0xc3e2, 0xa830, 0x15d4, 0xb388, 0xb044, 0x1, 0x0);
        gbc.writeMem(0x4bec, { 0xd2, 0x9c, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xc3e2);
        EXPECT(gbc.pc(), 0x4bef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 00C9
        gbc.setState(0x9ad4, 0xd376, 0x730, 0xedba, 0xe49, 0x42f6, 0x1, 0x0);
        gbc.writeMem(0x9ad4, { 0xd2, 0x85, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xd376);
        EXPECT(gbc.pc(), 0x9ad7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ad4), 0xd2);
        EXPECT(gbc.readMem(0x9ad5), 0x85);
        EXPECT(gbc.readMem(0x9ad6), 0xbe);
        // D2 00CA
        gbc.setState(0xbb7a, 0x95a8, 0x4d30, 0x9cca, 0x842d, 0x3abd, 0x0, 0x1);
        gbc.writeMem(0xbb7a, { 0xd2, 0xfa, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x95a8);
        EXPECT(gbc.pc(), 0xbb7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb7a), 0xd2);
        EXPECT(gbc.readMem(0xbb7b), 0xfa);
        EXPECT(gbc.readMem(0xbb7c), 0xc9);
        // D2 00CB
        gbc.setState(0x2cd1, 0xab4f, 0x5650, 0xdc9f, 0xb5cb, 0xfad4, 0x1, 0x0);
        gbc.writeMem(0x2cd1, { 0xd2, 0xc6, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xab4f);
        EXPECT(gbc.pc(), 0x2cd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 00CC
        gbc.setState(0xea85, 0xbeb7, 0x88f0, 0xb625, 0xb9e3, 0x8ec, 0x1, 0x1);
        gbc.writeMem(0xea85, { 0xd2, 0xed, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xbeb7);
        EXPECT(gbc.pc(), 0xea88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea85), 0xd2);
        EXPECT(gbc.readMem(0xea86), 0xed);
        EXPECT(gbc.readMem(0xea87), 0x4f);
        // D2 00CD
        gbc.setState(0x3459, 0xc5d0, 0x5730, 0x320b, 0x77ed, 0xf1b9, 0x1, 0x0);
        gbc.writeMem(0x3459, { 0xd2, 0x35, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xc5d0);
        EXPECT(gbc.pc(), 0x345c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 00CE
        gbc.setState(0x5ebf, 0x6dd0, 0x5c50, 0x7909, 0x1834, 0x6e13, 0x1, 0x1);
        gbc.writeMem(0x5ebf, { 0xd2, 0xa8, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x6dd0);
        EXPECT(gbc.pc(), 0x5ec2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 00CF
        gbc.setState(0xdef0, 0xcfaa, 0x2520, 0xd7b, 0x2d11, 0xf59f, 0x0, 0x1);
        gbc.writeMem(0xdef0, { 0xd2, 0xe7, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xcfaa);
        EXPECT(gbc.pc(), 0x3ee7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdef0), 0xd2);
        EXPECT(gbc.readMem(0xdef1), 0xe7);
        EXPECT(gbc.readMem(0xdef2), 0x3e);
        // D2 00D0
        gbc.setState(0xc0a4, 0x6c4e, 0xd160, 0xc569, 0x7d68, 0x6cf4, 0x1, 0x0);
        gbc.writeMem(0xc0a4, { 0xd2, 0x51, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x6c4e);
        EXPECT(gbc.pc(), 0x6951);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0a4), 0xd2);
        EXPECT(gbc.readMem(0xc0a5), 0x51);
        EXPECT(gbc.readMem(0xc0a6), 0x69);
        // D2 00D1
        gbc.setState(0xb54a, 0x8089, 0x51a0, 0xf816, 0x619d, 0xb5f6, 0x0, 0x1);
        gbc.writeMem(0xb54a, { 0xd2, 0x3f, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x8089);
        EXPECT(gbc.pc(), 0x253f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb54a), 0xd2);
        EXPECT(gbc.readMem(0xb54b), 0x3f);
        EXPECT(gbc.readMem(0xb54c), 0x25);
        // D2 00D2
        gbc.setState(0x459d, 0xcccc, 0xd070, 0x8fdb, 0x3e47, 0x7dc0, 0x1, 0x0);
        gbc.writeMem(0x459d, { 0xd2, 0xb6, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xcccc);
        EXPECT(gbc.pc(), 0x45a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 00D3
        gbc.setState(0xd1d, 0xf3e0, 0x7da0, 0x6461, 0x142a, 0xd56, 0x0, 0x1);
        gbc.writeMem(0xd1d, { 0xd2, 0xf8, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xf3e0);
        EXPECT(gbc.pc(), 0x99f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 00D4
        gbc.setState(0x78dc, 0x502e, 0x9ad0, 0x711b, 0x97c, 0xc5b4, 0x0, 0x1);
        gbc.writeMem(0x78dc, { 0xd2, 0x35, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x502e);
        EXPECT(gbc.pc(), 0x78df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 00D5
        gbc.setState(0x3827, 0x7c5c, 0xb30, 0x111c, 0xd3d8, 0x6cb3, 0x1, 0x0);
        gbc.writeMem(0x3827, { 0xd2, 0xc4, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x7c5c);
        EXPECT(gbc.pc(), 0x382a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 00D6
        gbc.setState(0xe859, 0x29ac, 0x1300, 0x5f0b, 0x1917, 0x13c9, 0x0, 0x0);
        gbc.writeMem(0xe859, { 0xd2, 0x37, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x29ac);
        EXPECT(gbc.pc(), 0xad37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe859), 0xd2);
        EXPECT(gbc.readMem(0xe85a), 0x37);
        EXPECT(gbc.readMem(0xe85b), 0xad);
        // D2 00D7
        gbc.setState(0x8c23, 0x6ab1, 0xa3b0, 0x202e, 0x9387, 0xc431, 0x0, 0x1);
        gbc.writeMem(0x8c23, { 0xd2, 0xe5, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x6ab1);
        EXPECT(gbc.pc(), 0x8c26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c23), 0xd2);
        EXPECT(gbc.readMem(0x8c24), 0xe5);
        EXPECT(gbc.readMem(0x8c25), 0xa3);
        // D2 00D8
        gbc.setState(0x7158, 0xbd82, 0x2b0, 0xf9ef, 0x6037, 0x17f0, 0x0, 0x0);
        gbc.writeMem(0x7158, { 0xd2, 0x24, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xbd82);
        EXPECT(gbc.pc(), 0x715b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 00DA
        gbc.setState(0xe68e, 0xad06, 0x4720, 0xacb2, 0x1b84, 0xf395, 0x1, 0x0);
        gbc.writeMem(0xe68e, { 0xd2, 0xc7, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xad06);
        EXPECT(gbc.pc(), 0x62c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe68e), 0xd2);
        EXPECT(gbc.readMem(0xe68f), 0xc7);
        EXPECT(gbc.readMem(0xe690), 0x62);
        // D2 00DB
        gbc.setState(0x4919, 0x7140, 0x7a70, 0x69b0, 0xb097, 0x5027, 0x0, 0x0);
        gbc.writeMem(0x4919, { 0xd2, 0xfd, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x7140);
        EXPECT(gbc.pc(), 0x491c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 00DC
        gbc.setState(0x761c, 0x4615, 0x9150, 0x8e2d, 0xc67d, 0xe560, 0x0, 0x0);
        gbc.writeMem(0x761c, { 0xd2, 0x1e, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x4615);
        EXPECT(gbc.pc(), 0x761f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 00DD
        gbc.setState(0x7e2e, 0x413e, 0x65e0, 0x253c, 0x7cde, 0x439c, 0x1, 0x1);
        gbc.writeMem(0x7e2e, { 0xd2, 0xa2, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x413e);
        EXPECT(gbc.pc(), 0x15a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 00DE
        gbc.setState(0x3042, 0x881e, 0x6280, 0x491b, 0x1261, 0x4af9, 0x0, 0x0);
        gbc.writeMem(0x3042, { 0xd2, 0x6e, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x881e);
        EXPECT(gbc.pc(), 0x3e6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 00E0
        gbc.setState(0xc73c, 0x788f, 0x92a0, 0x5eff, 0xac1f, 0x6943, 0x0, 0x1);
        gbc.writeMem(0xc73c, { 0xd2, 0x81, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x788f);
        EXPECT(gbc.pc(), 0xf081);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc73c), 0xd2);
        EXPECT(gbc.readMem(0xc73d), 0x81);
        EXPECT(gbc.readMem(0xc73e), 0xf0);
        // D2 00E1
        gbc.setState(0xdf47, 0xcc0c, 0x2eb0, 0x4b0a, 0x3b77, 0xef2d, 0x1, 0x1);
        gbc.writeMem(0xdf47, { 0xd2, 0xb, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xcc0c);
        EXPECT(gbc.pc(), 0xdf4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf47), 0xd2);
        EXPECT(gbc.readMem(0xdf48), 0xb);
        EXPECT(gbc.readMem(0xdf49), 0x6f);
        // D2 00E2
        gbc.setState(0xebd4, 0x3e0c, 0xe3d0, 0x7bce, 0xa3e3, 0x659b, 0x0, 0x0);
        gbc.writeMem(0xebd4, { 0xd2, 0x95, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x3e0c);
        EXPECT(gbc.pc(), 0xebd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebd4), 0xd2);
        EXPECT(gbc.readMem(0xebd5), 0x95);
        EXPECT(gbc.readMem(0xebd6), 0x1a);
        // D2 00E3
        gbc.setState(0x1177, 0x8a53, 0x6eb0, 0x4e26, 0x663f, 0x751f, 0x1, 0x1);
        gbc.writeMem(0x1177, { 0xd2, 0xba, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x8a53);
        EXPECT(gbc.pc(), 0x117a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 00E4
        gbc.setState(0x6ca1, 0x989c, 0x4f80, 0x347, 0x9b28, 0x4b2a, 0x0, 0x0);
        gbc.writeMem(0x6ca1, { 0xd2, 0x54, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x989c);
        EXPECT(gbc.pc(), 0xf754);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 00E5
        gbc.setState(0x53ee, 0x1743, 0x5f40, 0x259f, 0xdf31, 0x87dc, 0x0, 0x1);
        gbc.writeMem(0x53ee, { 0xd2, 0xe0, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x1743);
        EXPECT(gbc.pc(), 0x84e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 00E6
        gbc.setState(0x7d00, 0x214d, 0x1700, 0x7e0d, 0xe534, 0xf351, 0x0, 0x0);
        gbc.writeMem(0x7d00, { 0xd2, 0x10, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x214d);
        EXPECT(gbc.pc(), 0x2510);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 00E7
        gbc.setState(0xc814, 0x2827, 0x950, 0xd34a, 0x344a, 0x4496, 0x0, 0x0);
        gbc.writeMem(0xc814, { 0xd2, 0x69, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x2827);
        EXPECT(gbc.pc(), 0xc817);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc814), 0xd2);
        EXPECT(gbc.readMem(0xc815), 0x69);
        EXPECT(gbc.readMem(0xc816), 0x3f);
        // D2 00E8
        gbc.setState(0x2f62, 0x3624, 0x6eb0, 0x28e1, 0xed05, 0x3d14, 0x1, 0x1);
        gbc.writeMem(0x2f62, { 0xd2, 0x3b, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x3624);
        EXPECT(gbc.pc(), 0x2f65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 00E9
        gbc.setState(0xad45, 0x3ecb, 0x15e0, 0xc678, 0x808a, 0x62ca, 0x1, 0x0);
        gbc.writeMem(0xad45, { 0xd2, 0xfe, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x3ecb);
        EXPECT(gbc.pc(), 0x2dfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad45), 0xd2);
        EXPECT(gbc.readMem(0xad46), 0xfe);
        EXPECT(gbc.readMem(0xad47), 0x2d);
        // D2 00EA
        gbc.setState(0x7755, 0x64e8, 0x2dd0, 0xcda2, 0x8262, 0x721a, 0x1, 0x1);
        gbc.writeMem(0x7755, { 0xd2, 0xa3, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x64e8);
        EXPECT(gbc.pc(), 0x7758);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 00EB
        gbc.setState(0xa168, 0x579a, 0x8ae0, 0x7c64, 0x7d9a, 0xfe59, 0x1, 0x1);
        gbc.writeMem(0xa168, { 0xd2, 0x52, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x579a);
        EXPECT(gbc.pc(), 0x8352);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa168), 0xd2);
        EXPECT(gbc.readMem(0xa169), 0x52);
        EXPECT(gbc.readMem(0xa16a), 0x83);
        // D2 00EC
        gbc.setState(0x4957, 0x8db3, 0xb490, 0xecbf, 0x4f18, 0x9c33, 0x1, 0x1);
        gbc.writeMem(0x4957, { 0xd2, 0x97, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x8db3);
        EXPECT(gbc.pc(), 0x495a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 00ED
        gbc.setState(0xbdbc, 0xe731, 0x6e20, 0x5de2, 0x3376, 0xd5a7, 0x1, 0x0);
        gbc.writeMem(0xbdbc, { 0xd2, 0x1c, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xe731);
        EXPECT(gbc.pc(), 0x4a1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdbc), 0xd2);
        EXPECT(gbc.readMem(0xbdbd), 0x1c);
        EXPECT(gbc.readMem(0xbdbe), 0x4a);
        // D2 00EE
        gbc.setState(0xe897, 0xbc9e, 0x4a00, 0x7d00, 0x94d5, 0x2b2b, 0x0, 0x1);
        gbc.writeMem(0xe897, { 0xd2, 0x6c, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xbc9e);
        EXPECT(gbc.pc(), 0x446c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe897), 0xd2);
        EXPECT(gbc.readMem(0xe898), 0x6c);
        EXPECT(gbc.readMem(0xe899), 0x44);
        // D2 00EF
        gbc.setState(0x990a, 0x4d22, 0x24f0, 0x27be, 0xef9a, 0x807, 0x1, 0x1);
        gbc.writeMem(0x990a, { 0xd2, 0xac, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x4d22);
        EXPECT(gbc.pc(), 0x990d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x990a), 0xd2);
        EXPECT(gbc.readMem(0x990b), 0xac);
        EXPECT(gbc.readMem(0x990c), 0x57);
        // D2 00F0
        gbc.setState(0x1b7d, 0x5ca6, 0x53f0, 0x231f, 0xad2d, 0x2cc9, 0x1, 0x0);
        gbc.writeMem(0x1b7d, { 0xd2, 0x5f, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x5ca6);
        EXPECT(gbc.pc(), 0x1b80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 00F1
        gbc.setState(0xcb55, 0x2e4e, 0xcdf0, 0xbec2, 0xde1c, 0xb23b, 0x1, 0x0);
        gbc.writeMem(0xcb55, { 0xd2, 0x32, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x2e4e);
        EXPECT(gbc.pc(), 0xcb58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb55), 0xd2);
        EXPECT(gbc.readMem(0xcb56), 0x32);
        EXPECT(gbc.readMem(0xcb57), 0x36);
        // D2 00F2
        gbc.setState(0xecd9, 0x55cf, 0xb7a0, 0x7195, 0x2da0, 0x4de3, 0x0, 0x0);
        gbc.writeMem(0xecd9, { 0xd2, 0xa4, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x55cf);
        EXPECT(gbc.pc(), 0x75a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecd9), 0xd2);
        EXPECT(gbc.readMem(0xecda), 0xa4);
        EXPECT(gbc.readMem(0xecdb), 0x75);
        // D2 00F3
        gbc.setState(0xb9dd, 0x606e, 0x5ed0, 0x3e04, 0x580b, 0xa34d, 0x1, 0x1);
        gbc.writeMem(0xb9dd, { 0xd2, 0xf1, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x606e);
        EXPECT(gbc.pc(), 0xb9e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9dd), 0xd2);
        EXPECT(gbc.readMem(0xb9de), 0xf1);
        EXPECT(gbc.readMem(0xb9df), 0x70);
        // D2 00F4
        gbc.setState(0xe41f, 0x8f1f, 0x26e0, 0x77ee, 0xce95, 0xbaee, 0x1, 0x1);
        gbc.writeMem(0xe41f, { 0xd2, 0x22, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x8f1f);
        EXPECT(gbc.pc(), 0x8022);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe41f), 0xd2);
        EXPECT(gbc.readMem(0xe420), 0x22);
        EXPECT(gbc.readMem(0xe421), 0x80);
        // D2 00F5
        gbc.setState(0xd23f, 0x3985, 0x6cc0, 0x4604, 0x97c5, 0xe389, 0x1, 0x1);
        gbc.writeMem(0xd23f, { 0xd2, 0x2a, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x3985);
        EXPECT(gbc.pc(), 0x62a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd23f), 0xd2);
        EXPECT(gbc.readMem(0xd240), 0x2a);
        EXPECT(gbc.readMem(0xd241), 0x6);
        // D2 00F6
        gbc.setState(0xc1e1, 0x4a34, 0x54b0, 0xbcbc, 0xbfc2, 0x9e8e, 0x0, 0x1);
        gbc.writeMem(0xc1e1, { 0xd2, 0xdd, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x4a34);
        EXPECT(gbc.pc(), 0xc1e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1e1), 0xd2);
        EXPECT(gbc.readMem(0xc1e2), 0xdd);
        EXPECT(gbc.readMem(0xc1e3), 0x89);
        // D2 00F8
        gbc.setState(0x625b, 0x23e0, 0xf840, 0x861d, 0xfcd4, 0x9018, 0x0, 0x1);
        gbc.writeMem(0x625b, { 0xd2, 0x5, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x23e0);
        EXPECT(gbc.pc(), 0x5405);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 00F9
        gbc.setState(0x54d0, 0x4204, 0x5560, 0x3684, 0x3ad1, 0xde4c, 0x1, 0x0);
        gbc.writeMem(0x54d0, { 0xd2, 0x33, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x4204);
        EXPECT(gbc.pc(), 0xa833);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 00FA
        gbc.setState(0x17c7, 0xc1b7, 0xd730, 0xe059, 0x6d36, 0xc5e6, 0x1, 0x1);
        gbc.writeMem(0x17c7, { 0xd2, 0x65, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xc1b7);
        EXPECT(gbc.pc(), 0x17ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 00FB
        gbc.setState(0x7941, 0x9d7b, 0xcd90, 0x39f, 0x220c, 0xe94c, 0x0, 0x0);
        gbc.writeMem(0x7941, { 0xd2, 0x27, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x9d7b);
        EXPECT(gbc.pc(), 0x7944);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 00FC
        gbc.setState(0x7195, 0x2015, 0x1d60, 0xc935, 0xe6ed, 0x92b1, 0x0, 0x0);
        gbc.writeMem(0x7195, { 0xd2, 0x1f, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x2015);
        EXPECT(gbc.pc(), 0x491f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 00FD
        gbc.setState(0x720a, 0x625c, 0xa780, 0x6336, 0xd773, 0x5bc4, 0x1, 0x1);
        gbc.writeMem(0x720a, { 0xd2, 0xe, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x625c);
        EXPECT(gbc.pc(), 0x6d0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 00FE
        gbc.setState(0x7f88, 0x6ac0, 0x5c00, 0x9014, 0xaa3c, 0xb430, 0x0, 0x0);
        gbc.writeMem(0x7f88, { 0xd2, 0x65, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x6ac0);
        EXPECT(gbc.pc(), 0x9c65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 00FF
        gbc.setState(0x877b, 0xfdb8, 0x3df0, 0xb954, 0x23ee, 0xd662, 0x1, 0x1);
        gbc.writeMem(0x877b, { 0xd2, 0x17, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xfdb8);
        EXPECT(gbc.pc(), 0x877e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x877b), 0xd2);
        EXPECT(gbc.readMem(0x877c), 0x17);
        EXPECT(gbc.readMem(0x877d), 0xdd);
        // D2 0100
        gbc.setState(0xeb5, 0x4a7b, 0xb9d0, 0x9339, 0xad1b, 0xc8bc, 0x0, 0x0);
        gbc.writeMem(0xeb5, { 0xd2, 0x4c, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x4a7b);
        EXPECT(gbc.pc(), 0xeb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 0101
        gbc.setState(0x554, 0x5b99, 0x5040, 0x454f, 0xc488, 0xc28e, 0x1, 0x1);
        gbc.writeMem(0x554, { 0xd2, 0x96, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x5b99);
        EXPECT(gbc.pc(), 0x4696);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 0102
        gbc.setState(0x5ffb, 0x57ca, 0x2360, 0x7b6e, 0x6ecd, 0x7cec, 0x1, 0x1);
        gbc.writeMem(0x5ffb, { 0xd2, 0xfd, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x57ca);
        EXPECT(gbc.pc(), 0xeafd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0104
        gbc.setState(0xafe4, 0xb84d, 0x3dc0, 0x218a, 0x79ab, 0x8d4f, 0x1, 0x0);
        gbc.writeMem(0xafe4, { 0xd2, 0x12, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xb84d);
        EXPECT(gbc.pc(), 0xbf12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafe4), 0xd2);
        EXPECT(gbc.readMem(0xafe5), 0x12);
        EXPECT(gbc.readMem(0xafe6), 0xbf);
        // D2 0105
        gbc.setState(0x4b3, 0xcce5, 0x9190, 0xbc41, 0xbd66, 0x3342, 0x1, 0x1);
        gbc.writeMem(0x4b3, { 0xd2, 0xc6, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xcce5);
        EXPECT(gbc.pc(), 0x4b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 0106
        gbc.setState(0x7ef0, 0x2740, 0xd600, 0xbf7, 0x82c6, 0x2ddb, 0x1, 0x0);
        gbc.writeMem(0x7ef0, { 0xd2, 0xb7, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x2740);
        EXPECT(gbc.pc(), 0xa4b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 0107
        gbc.setState(0x1e00, 0x2fca, 0xfb60, 0x3219, 0xf37e, 0x2af5, 0x1, 0x0);
        gbc.writeMem(0x1e00, { 0xd2, 0x83, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x2fca);
        EXPECT(gbc.pc(), 0xe683);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0108
        gbc.setState(0xcd20, 0xc170, 0xd640, 0xfa0a, 0x118c, 0x699d, 0x0, 0x1);
        gbc.writeMem(0xcd20, { 0xd2, 0xb6, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xc170);
        EXPECT(gbc.pc(), 0xaab6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd20), 0xd2);
        EXPECT(gbc.readMem(0xcd21), 0xb6);
        EXPECT(gbc.readMem(0xcd22), 0xaa);
        // D2 0109
        gbc.setState(0x8220, 0x9738, 0xe840, 0xc1e9, 0x1f07, 0x6461, 0x0, 0x1);
        gbc.writeMem(0x8220, { 0xd2, 0x68, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x9738);
        EXPECT(gbc.pc(), 0xbb68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8220), 0xd2);
        EXPECT(gbc.readMem(0x8221), 0x68);
        EXPECT(gbc.readMem(0x8222), 0xbb);
        // D2 010A
        gbc.setState(0x97e9, 0x2812, 0xede0, 0xec5, 0xafff, 0x4975, 0x1, 0x1);
        gbc.writeMem(0x97e9, { 0xd2, 0xd4, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x2812);
        EXPECT(gbc.pc(), 0x59d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97e9), 0xd2);
        EXPECT(gbc.readMem(0x97ea), 0xd4);
        EXPECT(gbc.readMem(0x97eb), 0x59);
        // D2 010B
        gbc.setState(0x4ed1, 0x6826, 0x1e10, 0x16b1, 0x301e, 0xb7ef, 0x0, 0x0);
        gbc.writeMem(0x4ed1, { 0xd2, 0x64, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x6826);
        EXPECT(gbc.pc(), 0x4ed4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 010C
        gbc.setState(0x9861, 0xcb2a, 0x9e10, 0x66d6, 0xcb39, 0x1452, 0x1, 0x0);
        gbc.writeMem(0x9861, { 0xd2, 0xd, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xcb2a);
        EXPECT(gbc.pc(), 0x9864);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9861), 0xd2);
        EXPECT(gbc.readMem(0x9862), 0xd);
        EXPECT(gbc.readMem(0x9863), 0x63);
        // D2 010D
        gbc.setState(0x19cb, 0x2125, 0xdf70, 0xbff9, 0xa464, 0x20e9, 0x0, 0x0);
        gbc.writeMem(0x19cb, { 0xd2, 0x4a, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x2125);
        EXPECT(gbc.pc(), 0x19ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 010E
        gbc.setState(0x705e, 0x52dc, 0x1850, 0x7606, 0x21ec, 0xbcd8, 0x1, 0x0);
        gbc.writeMem(0x705e, { 0xd2, 0x9a, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x52dc);
        EXPECT(gbc.pc(), 0x7061);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 010F
        gbc.setState(0x3f16, 0x33b0, 0x4970, 0xb94d, 0x5c88, 0x2b67, 0x0, 0x0);
        gbc.writeMem(0x3f16, { 0xd2, 0x37, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x33b0);
        EXPECT(gbc.pc(), 0x3f19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0110
        gbc.setState(0xdffc, 0xff28, 0xbec0, 0x58f5, 0xc903, 0x7ef5, 0x0, 0x1);
        gbc.writeMem(0xdffc, { 0xd2, 0x10, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xff28);
        EXPECT(gbc.pc(), 0x7c10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdffc), 0xd2);
        EXPECT(gbc.readMem(0xdffd), 0x10);
        EXPECT(gbc.readMem(0xdffe), 0x7c);
        // D2 0111
        gbc.setState(0x17a1, 0x2e72, 0xda10, 0x5c3a, 0xb1ee, 0x2cc7, 0x0, 0x1);
        gbc.writeMem(0x17a1, { 0xd2, 0xe2, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x2e72);
        EXPECT(gbc.pc(), 0x17a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 0112
        gbc.setState(0xc330, 0x6503, 0xb30, 0xe45, 0x4b20, 0xf588, 0x1, 0x1);
        gbc.writeMem(0xc330, { 0xd2, 0x7b, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x6503);
        EXPECT(gbc.pc(), 0xc333);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc330), 0xd2);
        EXPECT(gbc.readMem(0xc331), 0x7b);
        EXPECT(gbc.readMem(0xc332), 0x61);
        // D2 0113
        gbc.setState(0x9b2, 0xea56, 0xa2e0, 0xb0e4, 0xc501, 0x2d40, 0x1, 0x1);
        gbc.writeMem(0x9b2, { 0xd2, 0x9e, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xea56);
        EXPECT(gbc.pc(), 0x949e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0114
        gbc.setState(0x1bde, 0x8263, 0xfc40, 0x8878, 0xa59a, 0xf18f, 0x1, 0x1);
        gbc.writeMem(0x1bde, { 0xd2, 0x88, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x8263);
        EXPECT(gbc.pc(), 0xee88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 0115
        gbc.setState(0x4d21, 0x974, 0xec70, 0xe7d, 0x4177, 0xd48, 0x0, 0x0);
        gbc.writeMem(0x4d21, { 0xd2, 0x76, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x974);
        EXPECT(gbc.pc(), 0x4d24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0116
        gbc.setState(0xb5e8, 0xeac7, 0x5890, 0xb732, 0x5cc5, 0xbdbe, 0x0, 0x0);
        gbc.writeMem(0xb5e8, { 0xd2, 0xb3, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xeac7);
        EXPECT(gbc.pc(), 0xb5eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5e8), 0xd2);
        EXPECT(gbc.readMem(0xb5e9), 0xb3);
        EXPECT(gbc.readMem(0xb5ea), 0xc6);
        // D2 0117
        gbc.setState(0x3bd9, 0xfe79, 0x4ff0, 0x674a, 0xfee, 0x69a8, 0x1, 0x1);
        gbc.writeMem(0x3bd9, { 0xd2, 0x75, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xfe79);
        EXPECT(gbc.pc(), 0x3bdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0118
        gbc.setState(0x1c6b, 0xaa24, 0xe7b0, 0xea17, 0x7df3, 0x2bf6, 0x0, 0x0);
        gbc.writeMem(0x1c6b, { 0xd2, 0x9d, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xaa24);
        EXPECT(gbc.pc(), 0x1c6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0119
        gbc.setState(0x90f5, 0xba04, 0x1670, 0xcd9a, 0xe56d, 0xabb3, 0x0, 0x1);
        gbc.writeMem(0x90f5, { 0xd2, 0x48, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xba04);
        EXPECT(gbc.pc(), 0x90f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90f5), 0xd2);
        EXPECT(gbc.readMem(0x90f6), 0x48);
        EXPECT(gbc.readMem(0x90f7), 0xb9);
        // D2 011A
        gbc.setState(0x3861, 0xca04, 0x94d0, 0x5d97, 0x7037, 0xf794, 0x0, 0x0);
        gbc.writeMem(0x3861, { 0xd2, 0xb, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xca04);
        EXPECT(gbc.pc(), 0x3864);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 011B
        gbc.setState(0x19b8, 0x7517, 0x5e70, 0xd3aa, 0xbd8c, 0xe256, 0x1, 0x1);
        gbc.writeMem(0x19b8, { 0xd2, 0xd, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x7517);
        EXPECT(gbc.pc(), 0x19bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 011C
        gbc.setState(0x1319, 0xb077, 0x1bc0, 0xac36, 0x443, 0x76b2, 0x1, 0x0);
        gbc.writeMem(0x1319, { 0xd2, 0x32, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xb077);
        EXPECT(gbc.pc(), 0xc632);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 011D
        gbc.setState(0x35cb, 0x9168, 0x8c10, 0x3fed, 0x7dfe, 0x49c5, 0x1, 0x0);
        gbc.writeMem(0x35cb, { 0xd2, 0xd4, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x9168);
        EXPECT(gbc.pc(), 0x35ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 011E
        gbc.setState(0x4d87, 0x7245, 0x73f0, 0x39ac, 0x84aa, 0x1336, 0x1, 0x0);
        gbc.writeMem(0x4d87, { 0xd2, 0x7d, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x7245);
        EXPECT(gbc.pc(), 0x4d8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 011F
        gbc.setState(0x3180, 0x3c6c, 0x3ff0, 0x2776, 0xbe7f, 0x9f1, 0x1, 0x0);
        gbc.writeMem(0x3180, { 0xd2, 0xa7, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x3c6c);
        EXPECT(gbc.pc(), 0x3183);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0120
        gbc.setState(0x3d52, 0x2024, 0x9460, 0x3d80, 0xdf56, 0x7a04, 0x0, 0x1);
        gbc.writeMem(0x3d52, { 0xd2, 0x63, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x2024);
        EXPECT(gbc.pc(), 0x1d63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0121
        gbc.setState(0x33c, 0xd5cc, 0x1da0, 0x9f7d, 0x581f, 0xc600, 0x1, 0x0);
        gbc.writeMem(0x33c, { 0xd2, 0x7b, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xd5cc);
        EXPECT(gbc.pc(), 0xfe7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0122
        gbc.setState(0x690f, 0xb9a9, 0x6dc0, 0x9060, 0x6006, 0x4b38, 0x1, 0x0);
        gbc.writeMem(0x690f, { 0xd2, 0xb2, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xb9a9);
        EXPECT(gbc.pc(), 0x53b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 0123
        gbc.setState(0xdb4b, 0x86, 0x1960, 0x2dc7, 0xe7cb, 0xbb70, 0x1, 0x0);
        gbc.writeMem(0xdb4b, { 0xd2, 0xde, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x86);
        EXPECT(gbc.pc(), 0xa3de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb4b), 0xd2);
        EXPECT(gbc.readMem(0xdb4c), 0xde);
        EXPECT(gbc.readMem(0xdb4d), 0xa3);
        // D2 0124
        gbc.setState(0x3626, 0xe61e, 0x59f0, 0x1fc3, 0x7b2c, 0x602, 0x0, 0x0);
        gbc.writeMem(0x3626, { 0xd2, 0xb1, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xe61e);
        EXPECT(gbc.pc(), 0x3629);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0125
        gbc.setState(0xf2e, 0x7763, 0x18f0, 0xce14, 0x3b8c, 0x82ce, 0x0, 0x0);
        gbc.writeMem(0xf2e, { 0xd2, 0x10, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x7763);
        EXPECT(gbc.pc(), 0xf31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0126
        gbc.setState(0x8435, 0x55d7, 0x2270, 0x9505, 0x28f2, 0xe48b, 0x1, 0x1);
        gbc.writeMem(0x8435, { 0xd2, 0x2b, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x55d7);
        EXPECT(gbc.pc(), 0x8438);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8435), 0xd2);
        EXPECT(gbc.readMem(0x8436), 0x2b);
        EXPECT(gbc.readMem(0x8437), 0xbb);
        // D2 0127
        gbc.setState(0x7d25, 0x6805, 0xa2d0, 0x2545, 0xff9e, 0xb5c5, 0x1, 0x0);
        gbc.writeMem(0x7d25, { 0xd2, 0xac, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x6805);
        EXPECT(gbc.pc(), 0x7d28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 0128
        gbc.setState(0x9b92, 0xbd0b, 0x4ac0, 0xebfa, 0x2bf3, 0xa20b, 0x0, 0x1);
        gbc.writeMem(0x9b92, { 0xd2, 0xc1, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xbd0b);
        EXPECT(gbc.pc(), 0x1ac1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b92), 0xd2);
        EXPECT(gbc.readMem(0x9b93), 0xc1);
        EXPECT(gbc.readMem(0x9b94), 0x1a);
        // D2 0129
        gbc.setState(0x631b, 0x5f1e, 0x1e30, 0x497b, 0x9139, 0xaae0, 0x0, 0x1);
        gbc.writeMem(0x631b, { 0xd2, 0x83, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x5f1e);
        EXPECT(gbc.pc(), 0x631e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 012A
        gbc.setState(0x24f6, 0xca35, 0xfdf0, 0x3719, 0xb06c, 0x2fc7, 0x0, 0x1);
        gbc.writeMem(0x24f6, { 0xd2, 0x2a, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xca35);
        EXPECT(gbc.pc(), 0x24f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 012B
        gbc.setState(0xa165, 0xaafd, 0xad0, 0xfdc8, 0x7ee8, 0x6dee, 0x0, 0x1);
        gbc.writeMem(0xa165, { 0xd2, 0xa4, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xaafd);
        EXPECT(gbc.pc(), 0xa168);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa165), 0xd2);
        EXPECT(gbc.readMem(0xa166), 0xa4);
        EXPECT(gbc.readMem(0xa167), 0x11);
        // D2 012C
        gbc.setState(0x74ff, 0x69e2, 0xc90, 0x7a21, 0xdadb, 0x1fd7, 0x0, 0x0);
        gbc.writeMem(0x74ff, { 0xd2, 0x2d, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x69e2);
        EXPECT(gbc.pc(), 0x7502);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 012D
        gbc.setState(0x7129, 0x31dc, 0x3460, 0x45e9, 0x2809, 0xe54e, 0x1, 0x0);
        gbc.writeMem(0x7129, { 0xd2, 0xe0, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x31dc);
        EXPECT(gbc.pc(), 0xb6e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 012E
        gbc.setState(0xa82e, 0x5b9f, 0x1100, 0x714c, 0x5b7, 0xe951, 0x1, 0x0);
        gbc.writeMem(0xa82e, { 0xd2, 0xe2, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x5b9f);
        EXPECT(gbc.pc(), 0xa7e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa82e), 0xd2);
        EXPECT(gbc.readMem(0xa82f), 0xe2);
        EXPECT(gbc.readMem(0xa830), 0xa7);
        // D2 012F
        gbc.setState(0x5ace, 0x19fd, 0xbe00, 0x4159, 0xcfec, 0xe2d0, 0x1, 0x0);
        gbc.writeMem(0x5ace, { 0xd2, 0xbe, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x19fd);
        EXPECT(gbc.pc(), 0x59be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 0130
        gbc.setState(0x5e61, 0x73ac, 0x6050, 0xca6, 0xa691, 0xb2b7, 0x1, 0x0);
        gbc.writeMem(0x5e61, { 0xd2, 0x30, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x73ac);
        EXPECT(gbc.pc(), 0x5e64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 0131
        gbc.setState(0x8551, 0xe3bb, 0x5420, 0x4309, 0x2cad, 0x8469, 0x1, 0x1);
        gbc.writeMem(0x8551, { 0xd2, 0xb4, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xe3bb);
        EXPECT(gbc.pc(), 0x7ab4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8551), 0xd2);
        EXPECT(gbc.readMem(0x8552), 0xb4);
        EXPECT(gbc.readMem(0x8553), 0x7a);
        // D2 0132
        gbc.setState(0x3a07, 0x98eb, 0x7930, 0x5ded, 0x6ec9, 0x63f2, 0x0, 0x1);
        gbc.writeMem(0x3a07, { 0xd2, 0x8a, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x98eb);
        EXPECT(gbc.pc(), 0x3a0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0133
        gbc.setState(0x245b, 0xe4e8, 0xd690, 0xd388, 0x4fef, 0x8c68, 0x1, 0x1);
        gbc.writeMem(0x245b, { 0xd2, 0xb4, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xe4e8);
        EXPECT(gbc.pc(), 0x245e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 0134
        gbc.setState(0x9cbe, 0x1211, 0x6b20, 0x975c, 0xa37a, 0x6ab1, 0x0, 0x1);
        gbc.writeMem(0x9cbe, { 0xd2, 0xdb, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x1211);
        EXPECT(gbc.pc(), 0x27db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cbe), 0xd2);
        EXPECT(gbc.readMem(0x9cbf), 0xdb);
        EXPECT(gbc.readMem(0x9cc0), 0x27);
        // D2 0136
        gbc.setState(0x1def, 0xc046, 0x800, 0x25c9, 0xecdb, 0xaabf, 0x1, 0x0);
        gbc.writeMem(0x1def, { 0xd2, 0x81, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xc046);
        EXPECT(gbc.pc(), 0xb781);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 0137
        gbc.setState(0x2ff3, 0xc2e3, 0xb0, 0xb27e, 0x35de, 0xcc0d, 0x0, 0x0);
        gbc.writeMem(0x2ff3, { 0xd2, 0x8f, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xc2e3);
        EXPECT(gbc.pc(), 0x2ff6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0138
        gbc.setState(0x1801, 0x65db, 0x1780, 0x11fb, 0x4f4e, 0xa138, 0x1, 0x1);
        gbc.writeMem(0x1801, { 0xd2, 0x1c, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x65db);
        EXPECT(gbc.pc(), 0xad1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 0139
        gbc.setState(0xc2b4, 0x5e65, 0xc7c0, 0xfc0f, 0x2281, 0x98a2, 0x0, 0x0);
        gbc.writeMem(0xc2b4, { 0xd2, 0x58, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x5e65);
        EXPECT(gbc.pc(), 0x1558);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2b4), 0xd2);
        EXPECT(gbc.readMem(0xc2b5), 0x58);
        EXPECT(gbc.readMem(0xc2b6), 0x15);
        // D2 013A
        gbc.setState(0x561c, 0x1d59, 0x15e0, 0x43a6, 0xbd67, 0x9cd8, 0x1, 0x1);
        gbc.writeMem(0x561c, { 0xd2, 0x81, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x1d59);
        EXPECT(gbc.pc(), 0xa881);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 013B
        gbc.setState(0x2543, 0x1442, 0x3850, 0xe369, 0xc311, 0x6002, 0x0, 0x1);
        gbc.writeMem(0x2543, { 0xd2, 0xb8, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x1442);
        EXPECT(gbc.pc(), 0x2546);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 013C
        gbc.setState(0x3440, 0xf776, 0x86d0, 0x8808, 0xc39e, 0x7bd4, 0x1, 0x0);
        gbc.writeMem(0x3440, { 0xd2, 0x55, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xf776);
        EXPECT(gbc.pc(), 0x3443);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 013D
        gbc.setState(0x94c3, 0xfaf0, 0xdf0, 0x57da, 0x91c0, 0x8601, 0x0, 0x1);
        gbc.writeMem(0x94c3, { 0xd2, 0xfd, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xfaf0);
        EXPECT(gbc.pc(), 0x94c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94c3), 0xd2);
        EXPECT(gbc.readMem(0x94c4), 0xfd);
        EXPECT(gbc.readMem(0x94c5), 0xc0);
        // D2 013E
        gbc.setState(0x28f1, 0xe10e, 0xdc50, 0xee23, 0x92c7, 0x8f12, 0x1, 0x0);
        gbc.writeMem(0x28f1, { 0xd2, 0xc6, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xe10e);
        EXPECT(gbc.pc(), 0x28f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 0140
        gbc.setState(0x4d05, 0x4dad, 0xe3e0, 0xf208, 0x6760, 0x3212, 0x1, 0x1);
        gbc.writeMem(0x4d05, { 0xd2, 0x33, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x4dad);
        EXPECT(gbc.pc(), 0x7533);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0141
        gbc.setState(0x1869, 0x5f5c, 0xecd0, 0xc87b, 0x5cb6, 0x5e82, 0x1, 0x1);
        gbc.writeMem(0x1869, { 0xd2, 0x27, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x5f5c);
        EXPECT(gbc.pc(), 0x186c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 0142
        gbc.setState(0x1a6b, 0x1af8, 0x230, 0x61fd, 0x4bc2, 0x8c6c, 0x0, 0x0);
        gbc.writeMem(0x1a6b, { 0xd2, 0x7c, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x1af8);
        EXPECT(gbc.pc(), 0x1a6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0143
        gbc.setState(0x6103, 0x8f0b, 0x74c0, 0x7a51, 0x1474, 0x8192, 0x0, 0x1);
        gbc.writeMem(0x6103, { 0xd2, 0xa4, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x8f0b);
        EXPECT(gbc.pc(), 0xcea4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 0145
        gbc.setState(0xb47a, 0x48b8, 0xf430, 0x2f21, 0xc0ba, 0x5863, 0x0, 0x0);
        gbc.writeMem(0xb47a, { 0xd2, 0x71, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x48b8);
        EXPECT(gbc.pc(), 0xb47d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb47a), 0xd2);
        EXPECT(gbc.readMem(0xb47b), 0x71);
        EXPECT(gbc.readMem(0xb47c), 0xd5);
        // D2 0146
        gbc.setState(0x9735, 0x9883, 0x79b0, 0x5b9b, 0x6734, 0x169b, 0x1, 0x0);
        gbc.writeMem(0x9735, { 0xd2, 0x0, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x9883);
        EXPECT(gbc.pc(), 0x9738);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9735), 0xd2);
        EXPECT(gbc.readMem(0x9736), 0x0);
        EXPECT(gbc.readMem(0x9737), 0x9a);
        // D2 0147
        gbc.setState(0xc53f, 0x94ca, 0x8ff0, 0x10ec, 0xe5b4, 0xa7d4, 0x1, 0x1);
        gbc.writeMem(0xc53f, { 0xd2, 0x98, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x94ca);
        EXPECT(gbc.pc(), 0xc542);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc53f), 0xd2);
        EXPECT(gbc.readMem(0xc540), 0x98);
        EXPECT(gbc.readMem(0xc541), 0x86);
        // D2 0148
        gbc.setState(0x84fa, 0x73ea, 0x39a0, 0x70cb, 0x8ff9, 0xa331, 0x0, 0x1);
        gbc.writeMem(0x84fa, { 0xd2, 0x69, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x73ea);
        EXPECT(gbc.pc(), 0x7169);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84fa), 0xd2);
        EXPECT(gbc.readMem(0x84fb), 0x69);
        EXPECT(gbc.readMem(0x84fc), 0x71);
        // D2 0149
        gbc.setState(0x84a0, 0x85c7, 0x8c10, 0xcf49, 0x6da, 0xc7f8, 0x0, 0x0);
        gbc.writeMem(0x84a0, { 0xd2, 0xd8, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x85c7);
        EXPECT(gbc.pc(), 0x84a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84a0), 0xd2);
        EXPECT(gbc.readMem(0x84a1), 0xd8);
        EXPECT(gbc.readMem(0x84a2), 0x49);
        // D2 014A
        gbc.setState(0xbc7d, 0x430d, 0xc3f0, 0xa9cc, 0x1498, 0x6d3d, 0x0, 0x1);
        gbc.writeMem(0xbc7d, { 0xd2, 0x32, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x430d);
        EXPECT(gbc.pc(), 0xbc80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc7d), 0xd2);
        EXPECT(gbc.readMem(0xbc7e), 0x32);
        EXPECT(gbc.readMem(0xbc7f), 0x3f);
        // D2 014B
        gbc.setState(0x97ee, 0xf01, 0xab0, 0xf65b, 0x4816, 0xb216, 0x0, 0x0);
        gbc.writeMem(0x97ee, { 0xd2, 0x8, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xf01);
        EXPECT(gbc.pc(), 0x97f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97ee), 0xd2);
        EXPECT(gbc.readMem(0x97ef), 0x8);
        EXPECT(gbc.readMem(0x97f0), 0xf0);
        // D2 014C
        gbc.setState(0xe999, 0x2519, 0x8950, 0x50ec, 0x3a4e, 0xc1da, 0x1, 0x1);
        gbc.writeMem(0xe999, { 0xd2, 0x74, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x2519);
        EXPECT(gbc.pc(), 0xe99c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe999), 0xd2);
        EXPECT(gbc.readMem(0xe99a), 0x74);
        EXPECT(gbc.readMem(0xe99b), 0x9d);
        // D2 014D
        gbc.setState(0x449f, 0xa749, 0xd2e0, 0x9eec, 0x4e53, 0xe2d7, 0x1, 0x0);
        gbc.writeMem(0x449f, { 0xd2, 0x95, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xa749);
        EXPECT(gbc.pc(), 0xbe95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 014E
        gbc.setState(0x1ea3, 0x3f41, 0xe040, 0xf62b, 0x8b34, 0x5689, 0x0, 0x0);
        gbc.writeMem(0x1ea3, { 0xd2, 0x62, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x3f41);
        EXPECT(gbc.pc(), 0x9062);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 014F
        gbc.setState(0xb101, 0xffc9, 0x3d10, 0xfaa, 0x36da, 0x3c3, 0x0, 0x0);
        gbc.writeMem(0xb101, { 0xd2, 0xd5, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xffc9);
        EXPECT(gbc.pc(), 0xb104);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb101), 0xd2);
        EXPECT(gbc.readMem(0xb102), 0xd5);
        EXPECT(gbc.readMem(0xb103), 0x1f);
        // D2 0150
        gbc.setState(0xd3d, 0xd6cd, 0x84f0, 0xa16d, 0x8007, 0x6fde, 0x1, 0x0);
        gbc.writeMem(0xd3d, { 0xd2, 0x59, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xd6cd);
        EXPECT(gbc.pc(), 0xd40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0151
        gbc.setState(0xddd, 0xec53, 0xcfc0, 0xaf2c, 0xf7bc, 0xb9d6, 0x1, 0x1);
        gbc.writeMem(0xddd, { 0xd2, 0x2e, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xec53);
        EXPECT(gbc.pc(), 0x562e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 0153
        gbc.setState(0xd4be, 0x47ac, 0x7f90, 0xa132, 0xe9ee, 0x744b, 0x1, 0x1);
        gbc.writeMem(0xd4be, { 0xd2, 0xd1, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x47ac);
        EXPECT(gbc.pc(), 0xd4c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4be), 0xd2);
        EXPECT(gbc.readMem(0xd4bf), 0xd1);
        EXPECT(gbc.readMem(0xd4c0), 0xca);
        // D2 0154
        gbc.setState(0xed96, 0x501d, 0x8020, 0xb5e2, 0xfcc4, 0x6b32, 0x1, 0x0);
        gbc.writeMem(0xed96, { 0xd2, 0xd8, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x501d);
        EXPECT(gbc.pc(), 0xcbd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed96), 0xd2);
        EXPECT(gbc.readMem(0xed97), 0xd8);
        EXPECT(gbc.readMem(0xed98), 0xcb);
        // D2 0155
        gbc.setState(0x7d9, 0x243f, 0xc980, 0x4d27, 0x1864, 0x53e0, 0x1, 0x0);
        gbc.writeMem(0x7d9, { 0xd2, 0x23, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x243f);
        EXPECT(gbc.pc(), 0x3823);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 0156
        gbc.setState(0xe52c, 0x992a, 0x4a90, 0xcf9a, 0x2e56, 0x4660, 0x0, 0x1);
        gbc.writeMem(0xe52c, { 0xd2, 0xe3, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x992a);
        EXPECT(gbc.pc(), 0xe52f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe52c), 0xd2);
        EXPECT(gbc.readMem(0xe52d), 0xe3);
        EXPECT(gbc.readMem(0xe52e), 0x47);
        // D2 0157
        gbc.setState(0xeee6, 0xadf7, 0xce40, 0x3ffb, 0x11a7, 0x6e94, 0x1, 0x1);
        gbc.writeMem(0xeee6, { 0xd2, 0x4c, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xadf7);
        EXPECT(gbc.pc(), 0xab4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeee6), 0xd2);
        EXPECT(gbc.readMem(0xeee7), 0x4c);
        EXPECT(gbc.readMem(0xeee8), 0xab);
        // D2 0158
        gbc.setState(0x8b2d, 0x20dc, 0x9ea0, 0x15dd, 0xe984, 0x9f84, 0x0, 0x1);
        gbc.writeMem(0x8b2d, { 0xd2, 0xf0, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x20dc);
        EXPECT(gbc.pc(), 0xc6f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b2d), 0xd2);
        EXPECT(gbc.readMem(0x8b2e), 0xf0);
        EXPECT(gbc.readMem(0x8b2f), 0xc6);
        // D2 0159
        gbc.setState(0xa341, 0x2e04, 0x3e0, 0xf68, 0x41b7, 0xb65, 0x0, 0x1);
        gbc.writeMem(0xa341, { 0xd2, 0x1, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x2e04);
        EXPECT(gbc.pc(), 0xd01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa341), 0xd2);
        EXPECT(gbc.readMem(0xa342), 0x1);
        EXPECT(gbc.readMem(0xa343), 0xd);
        // D2 015A
        gbc.setState(0x101f, 0x1756, 0x20e0, 0xbea0, 0x8eb4, 0xdbc5, 0x1, 0x1);
        gbc.writeMem(0x101f, { 0xd2, 0xff, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x1756);
        EXPECT(gbc.pc(), 0xfbff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 015B
        gbc.setState(0xa75e, 0x3d19, 0x7360, 0x4511, 0xe8f7, 0x3e4e, 0x1, 0x1);
        gbc.writeMem(0xa75e, { 0xd2, 0xad, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x3d19);
        EXPECT(gbc.pc(), 0x8ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa75e), 0xd2);
        EXPECT(gbc.readMem(0xa75f), 0xad);
        EXPECT(gbc.readMem(0xa760), 0x8);
        // D2 015C
        gbc.setState(0x3f10, 0x7e70, 0xde90, 0x3fd2, 0x4499, 0x23d8, 0x1, 0x1);
        gbc.writeMem(0x3f10, { 0xd2, 0xf2, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x7e70);
        EXPECT(gbc.pc(), 0x3f13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 015E
        gbc.setState(0xaa6c, 0x9f31, 0xb8c0, 0x7c57, 0x5a98, 0x792b, 0x1, 0x0);
        gbc.writeMem(0xaa6c, { 0xd2, 0x3a, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x9f31);
        EXPECT(gbc.pc(), 0xbe3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa6c), 0xd2);
        EXPECT(gbc.readMem(0xaa6d), 0x3a);
        EXPECT(gbc.readMem(0xaa6e), 0xbe);
        // D2 015F
        gbc.setState(0x9842, 0x766f, 0x870, 0xe1a5, 0x368f, 0x87b9, 0x0, 0x1);
        gbc.writeMem(0x9842, { 0xd2, 0xaa, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x766f);
        EXPECT(gbc.pc(), 0x9845);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9842), 0xd2);
        EXPECT(gbc.readMem(0x9843), 0xaa);
        EXPECT(gbc.readMem(0x9844), 0xf2);
        // D2 0160
        gbc.setState(0xe816, 0x35d6, 0x7520, 0x1232, 0x1498, 0xfcb2, 0x1, 0x0);
        gbc.writeMem(0xe816, { 0xd2, 0x78, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x35d6);
        EXPECT(gbc.pc(), 0x6378);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe816), 0xd2);
        EXPECT(gbc.readMem(0xe817), 0x78);
        EXPECT(gbc.readMem(0xe818), 0x63);
        // D2 0162
        gbc.setState(0xd3f6, 0x199a, 0xd9b0, 0xecf, 0xb3ea, 0x478f, 0x0, 0x1);
        gbc.writeMem(0xd3f6, { 0xd2, 0x4b, 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x199a);
        EXPECT(gbc.pc(), 0xd3f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3f6), 0xd2);
        EXPECT(gbc.readMem(0xd3f7), 0x4b);
        EXPECT(gbc.readMem(0xd3f8), 0x48);
        // D2 0163
        gbc.setState(0xbb90, 0xe171, 0x24c0, 0x35fd, 0x5a6f, 0xbe83, 0x1, 0x0);
        gbc.writeMem(0xbb90, { 0xd2, 0x61, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xe171);
        EXPECT(gbc.pc(), 0xbf61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb90), 0xd2);
        EXPECT(gbc.readMem(0xbb91), 0x61);
        EXPECT(gbc.readMem(0xbb92), 0xbf);
        // D2 0164
        gbc.setState(0xba1a, 0xee8f, 0x2870, 0xc662, 0x52c1, 0xc6c8, 0x0, 0x0);
        gbc.writeMem(0xba1a, { 0xd2, 0xda, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xee8f);
        EXPECT(gbc.pc(), 0xba1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba1a), 0xd2);
        EXPECT(gbc.readMem(0xba1b), 0xda);
        EXPECT(gbc.readMem(0xba1c), 0x88);
        // D2 0165
        gbc.setState(0x2441, 0x6a8c, 0xcb10, 0x12fe, 0xf685, 0xbc7f, 0x0, 0x0);
        gbc.writeMem(0x2441, { 0xd2, 0x5, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x6a8c);
        EXPECT(gbc.pc(), 0x2444);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 0166
        gbc.setState(0xb835, 0x4199, 0x7340, 0xd775, 0xc476, 0x8cb0, 0x0, 0x0);
        gbc.writeMem(0xb835, { 0xd2, 0xd9, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x4199);
        EXPECT(gbc.pc(), 0x2d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb835), 0xd2);
        EXPECT(gbc.readMem(0xb836), 0xd9);
        EXPECT(gbc.readMem(0xb837), 0x2);
        // D2 0167
        gbc.setState(0xa264, 0x6848, 0xa240, 0xb9f4, 0x3de8, 0xde7e, 0x1, 0x0);
        gbc.writeMem(0xa264, { 0xd2, 0xb5, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x6848);
        EXPECT(gbc.pc(), 0x59b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa264), 0xd2);
        EXPECT(gbc.readMem(0xa265), 0xb5);
        EXPECT(gbc.readMem(0xa266), 0x59);
        // D2 0168
        gbc.setState(0x2e83, 0x4866, 0x4870, 0xdae8, 0x7017, 0x4671, 0x0, 0x1);
        gbc.writeMem(0x2e83, { 0xd2, 0xeb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x4866);
        EXPECT(gbc.pc(), 0x2e86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0169
        gbc.setState(0x2ec8, 0x4d7c, 0xf0f0, 0xcf48, 0x2a62, 0x68c1, 0x1, 0x1);
        gbc.writeMem(0x2ec8, { 0xd2, 0x1d, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x4d7c);
        EXPECT(gbc.pc(), 0x2ecb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 016A
        gbc.setState(0x2074, 0x8103, 0x4710, 0x8c76, 0x594, 0xcb0e, 0x1, 0x0);
        gbc.writeMem(0x2074, { 0xd2, 0xad, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x8103);
        EXPECT(gbc.pc(), 0x2077);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 016B
        gbc.setState(0x6209, 0x21d5, 0xe610, 0x8610, 0x2d6d, 0x5840, 0x1, 0x0);
        gbc.writeMem(0x6209, { 0xd2, 0xf0, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x21d5);
        EXPECT(gbc.pc(), 0x620c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 016C
        gbc.setState(0x3a86, 0x54e5, 0x9890, 0xae13, 0x80cd, 0x9cba, 0x1, 0x1);
        gbc.writeMem(0x3a86, { 0xd2, 0xd8, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x54e5);
        EXPECT(gbc.pc(), 0x3a89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 016D
        gbc.setState(0x7984, 0x4288, 0x5ab0, 0xb900, 0xcb37, 0x1ac4, 0x1, 0x1);
        gbc.writeMem(0x7984, { 0xd2, 0xb9, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x4288);
        EXPECT(gbc.pc(), 0x7987);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 016E
        gbc.setState(0x286c, 0x500e, 0xcf50, 0xb185, 0x4ca5, 0x75f5, 0x1, 0x0);
        gbc.writeMem(0x286c, { 0xd2, 0xbc, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x500e);
        EXPECT(gbc.pc(), 0x286f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 016F
        gbc.setState(0xe5f5, 0x2a8e, 0xa20, 0x9ee9, 0x262f, 0x5f8, 0x1, 0x0);
        gbc.writeMem(0xe5f5, { 0xd2, 0x5f, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x2a8e);
        EXPECT(gbc.pc(), 0x6d5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5f5), 0xd2);
        EXPECT(gbc.readMem(0xe5f6), 0x5f);
        EXPECT(gbc.readMem(0xe5f7), 0x6d);
        // D2 0170
        gbc.setState(0x22a6, 0x80dd, 0xfe40, 0x22b4, 0x6304, 0x24eb, 0x0, 0x0);
        gbc.writeMem(0x22a6, { 0xd2, 0x62, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x80dd);
        EXPECT(gbc.pc(), 0x3262);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 0172
        gbc.setState(0xe1ec, 0x6f95, 0xe8e0, 0xc47e, 0xd886, 0x8ca3, 0x0, 0x1);
        gbc.writeMem(0xe1ec, { 0xd2, 0x64, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x6f95);
        EXPECT(gbc.pc(), 0xb564);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1ec), 0xd2);
        EXPECT(gbc.readMem(0xe1ed), 0x64);
        EXPECT(gbc.readMem(0xe1ee), 0xb5);
        // D2 0173
        gbc.setState(0xcc28, 0xa7f7, 0x8610, 0xed7b, 0x8133, 0xc934, 0x1, 0x0);
        gbc.writeMem(0xcc28, { 0xd2, 0x65, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xa7f7);
        EXPECT(gbc.pc(), 0xcc2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc28), 0xd2);
        EXPECT(gbc.readMem(0xcc29), 0x65);
        EXPECT(gbc.readMem(0xcc2a), 0xfa);
        // D2 0174
        gbc.setState(0xb254, 0x88bd, 0x3da0, 0xe696, 0xf895, 0x16fd, 0x1, 0x1);
        gbc.writeMem(0xb254, { 0xd2, 0x1e, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x88bd);
        EXPECT(gbc.pc(), 0x431e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb254), 0xd2);
        EXPECT(gbc.readMem(0xb255), 0x1e);
        EXPECT(gbc.readMem(0xb256), 0x43);
        // D2 0175
        gbc.setState(0xba, 0x1284, 0xfee0, 0x4312, 0xdca, 0xd21f, 0x0, 0x1);
        gbc.writeMem(0xba, { 0xd2, 0x27, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x1284);
        EXPECT(gbc.pc(), 0xf327);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0176
        gbc.setState(0x85e5, 0x4de7, 0x8c10, 0x782, 0x3d4c, 0x9be7, 0x0, 0x0);
        gbc.writeMem(0x85e5, { 0xd2, 0xdd, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x4de7);
        EXPECT(gbc.pc(), 0x85e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85e5), 0xd2);
        EXPECT(gbc.readMem(0x85e6), 0xdd);
        EXPECT(gbc.readMem(0x85e7), 0xf1);
        // D2 0177
        gbc.setState(0xabe3, 0x4bf2, 0x95b0, 0x5682, 0xf2aa, 0x651f, 0x1, 0x0);
        gbc.writeMem(0xabe3, { 0xd2, 0xc8, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x4bf2);
        EXPECT(gbc.pc(), 0xabe6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabe3), 0xd2);
        EXPECT(gbc.readMem(0xabe4), 0xc8);
        EXPECT(gbc.readMem(0xabe5), 0xda);
        // D2 0178
        gbc.setState(0xa943, 0x7a72, 0xee00, 0xef5d, 0x7124, 0xa60c, 0x0, 0x1);
        gbc.writeMem(0xa943, { 0xd2, 0x34, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x7a72);
        EXPECT(gbc.pc(), 0xb434);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa943), 0xd2);
        EXPECT(gbc.readMem(0xa944), 0x34);
        EXPECT(gbc.readMem(0xa945), 0xb4);
        // D2 0179
        gbc.setState(0xa60c, 0xc899, 0x2140, 0x2e45, 0x3a63, 0xd734, 0x1, 0x1);
        gbc.writeMem(0xa60c, { 0xd2, 0xf7, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xc899);
        EXPECT(gbc.pc(), 0xccf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa60c), 0xd2);
        EXPECT(gbc.readMem(0xa60d), 0xf7);
        EXPECT(gbc.readMem(0xa60e), 0xcc);
        // D2 017A
        gbc.setState(0xa4bb, 0x6708, 0xc80, 0x94a4, 0x4fb1, 0x2455, 0x0, 0x1);
        gbc.writeMem(0xa4bb, { 0xd2, 0x4d, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x6708);
        EXPECT(gbc.pc(), 0xc24d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4bb), 0xd2);
        EXPECT(gbc.readMem(0xa4bc), 0x4d);
        EXPECT(gbc.readMem(0xa4bd), 0xc2);
        // D2 017B
        gbc.setState(0x2233, 0xb464, 0xc60, 0xa282, 0xa9ca, 0x83fa, 0x0, 0x0);
        gbc.writeMem(0x2233, { 0xd2, 0x1e, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xb464);
        EXPECT(gbc.pc(), 0x51e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 017C
        gbc.setState(0xbb39, 0xe4cd, 0xccb0, 0x3678, 0xd123, 0xe241, 0x1, 0x0);
        gbc.writeMem(0xbb39, { 0xd2, 0x98, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xe4cd);
        EXPECT(gbc.pc(), 0xbb3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb39), 0xd2);
        EXPECT(gbc.readMem(0xbb3a), 0x98);
        EXPECT(gbc.readMem(0xbb3b), 0xde);
        // D2 017E
        gbc.setState(0x683a, 0xd5a5, 0x7b20, 0x9220, 0xb9a2, 0x2bb8, 0x0, 0x0);
        gbc.writeMem(0x683a, { 0xd2, 0x63, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xd5a5);
        EXPECT(gbc.pc(), 0xe763);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 017F
        gbc.setState(0xd4fe, 0xb0b7, 0xa0c0, 0xec50, 0x6880, 0xb37b, 0x1, 0x1);
        gbc.writeMem(0xd4fe, { 0xd2, 0x53, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xb0b7);
        EXPECT(gbc.pc(), 0xdd53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4fe), 0xd2);
        EXPECT(gbc.readMem(0xd4ff), 0x53);
        EXPECT(gbc.readMem(0xd500), 0xdd);
        // D2 0180
        gbc.setState(0x7c4f, 0xf9e2, 0x5a80, 0x531f, 0xb11, 0xb4a8, 0x1, 0x1);
        gbc.writeMem(0x7c4f, { 0xd2, 0x32, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xf9e2);
        EXPECT(gbc.pc(), 0xf32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 0181
        gbc.setState(0x93d, 0xeb7b, 0x91a0, 0xdf40, 0x31e0, 0xee62, 0x1, 0x0);
        gbc.writeMem(0x93d, { 0xd2, 0x41, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xeb7b);
        EXPECT(gbc.pc(), 0x2f41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0182
        gbc.setState(0x21ce, 0x92fb, 0x9f60, 0xcbec, 0xe5d6, 0x4bb, 0x1, 0x1);
        gbc.writeMem(0x21ce, { 0xd2, 0x80, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x92fb);
        EXPECT(gbc.pc(), 0xdf80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0183
        gbc.setState(0x7930, 0x865e, 0x8b90, 0x54dd, 0x43b7, 0xf874, 0x1, 0x1);
        gbc.writeMem(0x7930, { 0xd2, 0xdd, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x865e);
        EXPECT(gbc.pc(), 0x7933);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 0184
        gbc.setState(0x837a, 0x8a9f, 0xaee0, 0x445c, 0x398d, 0x52fa, 0x0, 0x0);
        gbc.writeMem(0x837a, { 0xd2, 0x5b, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x8a9f);
        EXPECT(gbc.pc(), 0x3d5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x837a), 0xd2);
        EXPECT(gbc.readMem(0x837b), 0x5b);
        EXPECT(gbc.readMem(0x837c), 0x3d);
        // D2 0185
        gbc.setState(0xb6ce, 0xeb7f, 0x1550, 0xd154, 0x727b, 0xd7a7, 0x0, 0x1);
        gbc.writeMem(0xb6ce, { 0xd2, 0x3a, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xeb7f);
        EXPECT(gbc.pc(), 0xb6d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6ce), 0xd2);
        EXPECT(gbc.readMem(0xb6cf), 0x3a);
        EXPECT(gbc.readMem(0xb6d0), 0x7f);
        // D2 0186
        gbc.setState(0x8362, 0x8cd, 0x7450, 0x36f7, 0x25b, 0xc208, 0x1, 0x0);
        gbc.writeMem(0x8362, { 0xd2, 0x31, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x8cd);
        EXPECT(gbc.pc(), 0x8365);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8362), 0xd2);
        EXPECT(gbc.readMem(0x8363), 0x31);
        EXPECT(gbc.readMem(0x8364), 0x81);
        // D2 0187
        gbc.setState(0x1bb6, 0x6d69, 0xdc80, 0x8bf1, 0x6d10, 0xc68b, 0x1, 0x0);
        gbc.writeMem(0x1bb6, { 0xd2, 0x3d, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x6d69);
        EXPECT(gbc.pc(), 0x3e3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 0188
        gbc.setState(0x26a4, 0x7da4, 0x76c0, 0xc7a8, 0x264f, 0x5028, 0x0, 0x1);
        gbc.writeMem(0x26a4, { 0xd2, 0x3b, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x7da4);
        EXPECT(gbc.pc(), 0x4b3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 0189
        gbc.setState(0xde79, 0x9c0c, 0xf580, 0xd47a, 0xe64e, 0x9819, 0x1, 0x0);
        gbc.writeMem(0xde79, { 0xd2, 0xbe, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x9c0c);
        EXPECT(gbc.pc(), 0xe8be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde79), 0xd2);
        EXPECT(gbc.readMem(0xde7a), 0xbe);
        EXPECT(gbc.readMem(0xde7b), 0xe8);
        // D2 018A
        gbc.setState(0xad6e, 0xe87, 0xb660, 0x72ca, 0xd26d, 0xfec5, 0x0, 0x1);
        gbc.writeMem(0xad6e, { 0xd2, 0x27, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xe87);
        EXPECT(gbc.pc(), 0xa027);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad6e), 0xd2);
        EXPECT(gbc.readMem(0xad6f), 0x27);
        EXPECT(gbc.readMem(0xad70), 0xa0);
        // D2 018B
        gbc.setState(0xc322, 0x8c86, 0x28d0, 0x4e48, 0x227d, 0xef74, 0x1, 0x1);
        gbc.writeMem(0xc322, { 0xd2, 0xf, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x8c86);
        EXPECT(gbc.pc(), 0xc325);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc322), 0xd2);
        EXPECT(gbc.readMem(0xc323), 0xf);
        EXPECT(gbc.readMem(0xc324), 0x7a);
        // D2 018C
        gbc.setState(0x4a24, 0x7b45, 0x4040, 0x2df8, 0x6bc7, 0x61b5, 0x1, 0x1);
        gbc.writeMem(0x4a24, { 0xd2, 0x9e, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x7b45);
        EXPECT(gbc.pc(), 0x699e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 018D
        gbc.setState(0x19c, 0x38f6, 0x8840, 0x3e76, 0x310c, 0xfb6f, 0x1, 0x0);
        gbc.writeMem(0x19c, { 0xd2, 0xe0, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x38f6);
        EXPECT(gbc.pc(), 0xa4e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 018E
        gbc.setState(0x8e15, 0x53cf, 0xba0, 0xf56a, 0x1a01, 0x146b, 0x1, 0x0);
        gbc.writeMem(0x8e15, { 0xd2, 0x27, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x53cf);
        EXPECT(gbc.pc(), 0xe827);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e15), 0xd2);
        EXPECT(gbc.readMem(0x8e16), 0x27);
        EXPECT(gbc.readMem(0x8e17), 0xe8);
        // D2 0190
        gbc.setState(0x77be, 0x6c18, 0xe470, 0x89e7, 0x7091, 0x36d2, 0x0, 0x0);
        gbc.writeMem(0x77be, { 0xd2, 0xf7, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x6c18);
        EXPECT(gbc.pc(), 0x77c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0191
        gbc.setState(0x373c, 0xc467, 0x8fa0, 0x5164, 0x48b6, 0xb64f, 0x1, 0x0);
        gbc.writeMem(0x373c, { 0xd2, 0xc2, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xc467);
        EXPECT(gbc.pc(), 0xbdc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0192
        gbc.setState(0xca41, 0x5bf5, 0x9a20, 0xdf62, 0x8044, 0xd4b1, 0x1, 0x1);
        gbc.writeMem(0xca41, { 0xd2, 0x31, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x5bf5);
        EXPECT(gbc.pc(), 0x4e31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca41), 0xd2);
        EXPECT(gbc.readMem(0xca42), 0x31);
        EXPECT(gbc.readMem(0xca43), 0x4e);
        // D2 0193
        gbc.setState(0xa580, 0xf4a3, 0x9630, 0xece2, 0xa0e1, 0xa1e4, 0x0, 0x0);
        gbc.writeMem(0xa580, { 0xd2, 0xa7, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xf4a3);
        EXPECT(gbc.pc(), 0xa583);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa580), 0xd2);
        EXPECT(gbc.readMem(0xa581), 0xa7);
        EXPECT(gbc.readMem(0xa582), 0x85);
        // D2 0194
        gbc.setState(0x2e02, 0x484d, 0xfcc0, 0x1d5d, 0x62b8, 0x787c, 0x1, 0x1);
        gbc.writeMem(0x2e02, { 0xd2, 0x6e, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x484d);
        EXPECT(gbc.pc(), 0x46e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 0195
        gbc.setState(0xb877, 0x25d0, 0xc30, 0x8d87, 0xa19, 0x73db, 0x1, 0x0);
        gbc.writeMem(0xb877, { 0xd2, 0xbe, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x25d0);
        EXPECT(gbc.pc(), 0xb87a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb877), 0xd2);
        EXPECT(gbc.readMem(0xb878), 0xbe);
        EXPECT(gbc.readMem(0xb879), 0x71);
        // D2 0196
        gbc.setState(0x96ac, 0x432e, 0xda60, 0xee2b, 0x8264, 0x4029, 0x0, 0x0);
        gbc.writeMem(0x96ac, { 0xd2, 0xa4, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x432e);
        EXPECT(gbc.pc(), 0x9a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96ac), 0xd2);
        EXPECT(gbc.readMem(0x96ad), 0xa4);
        EXPECT(gbc.readMem(0x96ae), 0x9);
        // D2 0197
        gbc.setState(0x7fbf, 0xca92, 0x9350, 0xeaab, 0x29ec, 0x2950, 0x1, 0x0);
        gbc.writeMem(0x7fbf, { 0xd2, 0x2a, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xca92);
        EXPECT(gbc.pc(), 0x7fc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 0198
        gbc.setState(0x7d3c, 0x2edc, 0xd270, 0x8cb, 0xf528, 0xf10a, 0x0, 0x1);
        gbc.writeMem(0x7d3c, { 0xd2, 0x52, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x2edc);
        EXPECT(gbc.pc(), 0x7d3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0199
        gbc.setState(0xa3ee, 0xc9b, 0xf140, 0x79a7, 0xeb01, 0xc8cd, 0x0, 0x1);
        gbc.writeMem(0xa3ee, { 0xd2, 0x9b, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xc9b);
        EXPECT(gbc.pc(), 0x5e9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3ee), 0xd2);
        EXPECT(gbc.readMem(0xa3ef), 0x9b);
        EXPECT(gbc.readMem(0xa3f0), 0x5e);
        // D2 019A
        gbc.setState(0xaa5, 0x75c7, 0x3190, 0xb18, 0xea63, 0x21a2, 0x0, 0x0);
        gbc.writeMem(0xaa5, { 0xd2, 0xab, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x75c7);
        EXPECT(gbc.pc(), 0xaa8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 019B
        gbc.setState(0xce62, 0x8ce4, 0x3d80, 0x22e6, 0x5878, 0xef58, 0x0, 0x1);
        gbc.writeMem(0xce62, { 0xd2, 0xa0, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x8ce4);
        EXPECT(gbc.pc(), 0x10a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce62), 0xd2);
        EXPECT(gbc.readMem(0xce63), 0xa0);
        EXPECT(gbc.readMem(0xce64), 0x10);
        // D2 019C
        gbc.setState(0xef70, 0xe23f, 0x52b0, 0x5df, 0x635, 0x10db, 0x1, 0x1);
        gbc.writeMem(0xef70, { 0xd2, 0xd6, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xe23f);
        EXPECT(gbc.pc(), 0xef73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef70), 0xd2);
        EXPECT(gbc.readMem(0xef71), 0xd6);
        EXPECT(gbc.readMem(0xef72), 0x8a);
        // D2 019D
        gbc.setState(0x9e21, 0xed5b, 0x61a0, 0x4d9f, 0x3b53, 0x3d05, 0x1, 0x1);
        gbc.writeMem(0x9e21, { 0xd2, 0x96, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xed5b);
        EXPECT(gbc.pc(), 0x6f96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e21), 0xd2);
        EXPECT(gbc.readMem(0x9e22), 0x96);
        EXPECT(gbc.readMem(0x9e23), 0x6f);
        // D2 019E
        gbc.setState(0xb198, 0x81c0, 0xa930, 0x4516, 0x4dc8, 0x45a7, 0x1, 0x1);
        gbc.writeMem(0xb198, { 0xd2, 0x10, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x81c0);
        EXPECT(gbc.pc(), 0xb19b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb198), 0xd2);
        EXPECT(gbc.readMem(0xb199), 0x10);
        EXPECT(gbc.readMem(0xb19a), 0x17);
        // D2 019F
        gbc.setState(0x6d74, 0xcb4a, 0x50e0, 0x7399, 0x5d9e, 0x98d7, 0x1, 0x0);
        gbc.writeMem(0x6d74, { 0xd2, 0x2c, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xcb4a);
        EXPECT(gbc.pc(), 0xbf2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 01A0
        gbc.setState(0x9b98, 0x7a98, 0xbb90, 0x5771, 0xf098, 0x5538, 0x1, 0x1);
        gbc.writeMem(0x9b98, { 0xd2, 0xc8, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x7a98);
        EXPECT(gbc.pc(), 0x9b9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b98), 0xd2);
        EXPECT(gbc.readMem(0x9b99), 0xc8);
        EXPECT(gbc.readMem(0x9b9a), 0x50);
        // D2 01A1
        gbc.setState(0x9edc, 0xea99, 0xbab0, 0xded, 0xa1d7, 0xf00, 0x1, 0x1);
        gbc.writeMem(0x9edc, { 0xd2, 0x8d, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xea99);
        EXPECT(gbc.pc(), 0x9edf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9edc), 0xd2);
        EXPECT(gbc.readMem(0x9edd), 0x8d);
        EXPECT(gbc.readMem(0x9ede), 0x54);
        // D2 01A2
        gbc.setState(0xbd05, 0x1422, 0xd610, 0xca7e, 0xa840, 0x97a4, 0x0, 0x0);
        gbc.writeMem(0xbd05, { 0xd2, 0x35, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x1422);
        EXPECT(gbc.pc(), 0xbd08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd05), 0xd2);
        EXPECT(gbc.readMem(0xbd06), 0x35);
        EXPECT(gbc.readMem(0xbd07), 0x93);
        // D2 01A3
        gbc.setState(0x22bc, 0xdf78, 0x1940, 0xcb21, 0x9902, 0xdbe7, 0x0, 0x1);
        gbc.writeMem(0x22bc, { 0xd2, 0xe5, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xdf78);
        EXPECT(gbc.pc(), 0x2e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 01A5
        gbc.setState(0xccf9, 0xa657, 0xb3a0, 0x4863, 0x5d9b, 0x9ce9, 0x1, 0x0);
        gbc.writeMem(0xccf9, { 0xd2, 0x31, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xa657);
        EXPECT(gbc.pc(), 0x3131);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccf9), 0xd2);
        EXPECT(gbc.readMem(0xccfa), 0x31);
        EXPECT(gbc.readMem(0xccfb), 0x31);
        // D2 01A6
        gbc.setState(0x843d, 0x710e, 0x8290, 0xda67, 0x2c5d, 0x650f, 0x0, 0x1);
        gbc.writeMem(0x843d, { 0xd2, 0x12, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x710e);
        EXPECT(gbc.pc(), 0x8440);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x843d), 0xd2);
        EXPECT(gbc.readMem(0x843e), 0x12);
        EXPECT(gbc.readMem(0x843f), 0x53);
        // D2 01A7
        gbc.setState(0x504, 0x41d6, 0xba60, 0x110, 0xfdc4, 0xe080, 0x0, 0x1);
        gbc.writeMem(0x504, { 0xd2, 0x7, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x41d6);
        EXPECT(gbc.pc(), 0x1307);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 01A8
        gbc.setState(0xa0ca, 0xa4dc, 0x5e10, 0x1822, 0xf17f, 0x8f20, 0x1, 0x0);
        gbc.writeMem(0xa0ca, { 0xd2, 0xe9, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xa4dc);
        EXPECT(gbc.pc(), 0xa0cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0ca), 0xd2);
        EXPECT(gbc.readMem(0xa0cb), 0xe9);
        EXPECT(gbc.readMem(0xa0cc), 0xae);
        // D2 01AA
        gbc.setState(0xda8a, 0x88c9, 0xa280, 0x70d8, 0x42c1, 0x4ab2, 0x1, 0x1);
        gbc.writeMem(0xda8a, { 0xd2, 0xe, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x88c9);
        EXPECT(gbc.pc(), 0x460e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda8a), 0xd2);
        EXPECT(gbc.readMem(0xda8b), 0xe);
        EXPECT(gbc.readMem(0xda8c), 0x46);
        // D2 01AB
        gbc.setState(0xcd88, 0xb5c6, 0xff30, 0x67c4, 0xe843, 0xcc03, 0x0, 0x0);
        gbc.writeMem(0xcd88, { 0xd2, 0xcc, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xb5c6);
        EXPECT(gbc.pc(), 0xcd8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd88), 0xd2);
        EXPECT(gbc.readMem(0xcd89), 0xcc);
        EXPECT(gbc.readMem(0xcd8a), 0x11);
        // D2 01AC
        gbc.setState(0x7f49, 0x4bf8, 0x8b00, 0xc99d, 0x774b, 0x790e, 0x0, 0x0);
        gbc.writeMem(0x7f49, { 0xd2, 0x7c, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x4bf8);
        EXPECT(gbc.pc(), 0x537c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 01AD
        gbc.setState(0xe43d, 0xe3cb, 0x3c30, 0x631f, 0x8db6, 0xb888, 0x0, 0x1);
        gbc.writeMem(0xe43d, { 0xd2, 0xff, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xe3cb);
        EXPECT(gbc.pc(), 0xe440);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe43d), 0xd2);
        EXPECT(gbc.readMem(0xe43e), 0xff);
        EXPECT(gbc.readMem(0xe43f), 0x50);
        // D2 01AE
        gbc.setState(0x80f5, 0x2eab, 0xb600, 0x377a, 0xe058, 0xfa25, 0x0, 0x1);
        gbc.writeMem(0x80f5, { 0xd2, 0x41, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x2eab);
        EXPECT(gbc.pc(), 0x5941);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80f5), 0xd2);
        EXPECT(gbc.readMem(0x80f6), 0x41);
        EXPECT(gbc.readMem(0x80f7), 0x59);
        // D2 01AF
        gbc.setState(0xd6d3, 0xabdd, 0x9940, 0xe1e6, 0x636c, 0xb40b, 0x1, 0x1);
        gbc.writeMem(0xd6d3, { 0xd2, 0x39, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xabdd);
        EXPECT(gbc.pc(), 0x7f39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6d3), 0xd2);
        EXPECT(gbc.readMem(0xd6d4), 0x39);
        EXPECT(gbc.readMem(0xd6d5), 0x7f);
        // D2 01B0
        gbc.setState(0x828b, 0x6cab, 0x5440, 0x7bfb, 0x25fe, 0x2439, 0x0, 0x1);
        gbc.writeMem(0x828b, { 0xd2, 0x4, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x6cab);
        EXPECT(gbc.pc(), 0x5204);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x828b), 0xd2);
        EXPECT(gbc.readMem(0x828c), 0x4);
        EXPECT(gbc.readMem(0x828d), 0x52);
        // D2 01B1
        gbc.setState(0x624a, 0x5160, 0x12b0, 0xbe91, 0xeb22, 0x3c0f, 0x0, 0x1);
        gbc.writeMem(0x624a, { 0xd2, 0xa7, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x5160);
        EXPECT(gbc.pc(), 0x624d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 01B2
        gbc.setState(0xb320, 0x59e1, 0xa100, 0x6b15, 0x4b6f, 0xdac5, 0x1, 0x0);
        gbc.writeMem(0xb320, { 0xd2, 0x7d, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x59e1);
        EXPECT(gbc.pc(), 0xa17d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb320), 0xd2);
        EXPECT(gbc.readMem(0xb321), 0x7d);
        EXPECT(gbc.readMem(0xb322), 0xa1);
        // D2 01B3
        gbc.setState(0x73dd, 0xd757, 0xb2e0, 0x9120, 0x38e1, 0xd7f8, 0x0, 0x1);
        gbc.writeMem(0x73dd, { 0xd2, 0xee, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xd757);
        EXPECT(gbc.pc(), 0x7ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 01B4
        gbc.setState(0xd4b2, 0x45e7, 0xd550, 0x726f, 0x4972, 0x99ed, 0x1, 0x0);
        gbc.writeMem(0xd4b2, { 0xd2, 0x33, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x45e7);
        EXPECT(gbc.pc(), 0xd4b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4b2), 0xd2);
        EXPECT(gbc.readMem(0xd4b3), 0x33);
        EXPECT(gbc.readMem(0xd4b4), 0xa2);
        // D2 01B5
        gbc.setState(0x139a, 0x4418, 0xfc10, 0xa25a, 0x909a, 0xb01, 0x0, 0x0);
        gbc.writeMem(0x139a, { 0xd2, 0x22, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x4418);
        EXPECT(gbc.pc(), 0x139d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 01B6
        gbc.setState(0x94b, 0xe3d4, 0x44a0, 0x1b74, 0xaf10, 0xd26e, 0x1, 0x1);
        gbc.writeMem(0x94b, { 0xd2, 0xdf, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xe3d4);
        EXPECT(gbc.pc(), 0x15df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 01B7
        gbc.setState(0x1f55, 0xb974, 0x4ad0, 0xa03, 0x6384, 0xab02, 0x1, 0x0);
        gbc.writeMem(0x1f55, { 0xd2, 0xd8, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xb974);
        EXPECT(gbc.pc(), 0x1f58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 01B8
        gbc.setState(0x1641, 0xdb60, 0x5c10, 0x3ba8, 0xb90c, 0xfb94, 0x0, 0x1);
        gbc.writeMem(0x1641, { 0xd2, 0x42, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xdb60);
        EXPECT(gbc.pc(), 0x1644);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 01B9
        gbc.setState(0x3cd8, 0xa075, 0xe950, 0x161c, 0xc2e2, 0x8d0d, 0x0, 0x1);
        gbc.writeMem(0x3cd8, { 0xd2, 0x87, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xa075);
        EXPECT(gbc.pc(), 0x3cdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 01BA
        gbc.setState(0x655d, 0x9a7a, 0x1ae0, 0xfd0c, 0x5f3a, 0x5c1d, 0x1, 0x0);
        gbc.writeMem(0x655d, { 0xd2, 0x1, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x9a7a);
        EXPECT(gbc.pc(), 0x9901);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 01BB
        gbc.setState(0x6bce, 0x28d1, 0xa400, 0x2e13, 0xfc37, 0xc3a8, 0x0, 0x0);
        gbc.writeMem(0x6bce, { 0xd2, 0x8e, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x28d1);
        EXPECT(gbc.pc(), 0x6d8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 01BC
        gbc.setState(0xbdbe, 0x5f7a, 0x5d00, 0x53bf, 0x202c, 0x303, 0x1, 0x1);
        gbc.writeMem(0xbdbe, { 0xd2, 0x71, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x5f7a);
        EXPECT(gbc.pc(), 0x8071);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdbe), 0xd2);
        EXPECT(gbc.readMem(0xbdbf), 0x71);
        EXPECT(gbc.readMem(0xbdc0), 0x80);
        // D2 01BD
        gbc.setState(0x7759, 0x2c14, 0x3f0, 0xb6b5, 0xe20f, 0x10c6, 0x0, 0x0);
        gbc.writeMem(0x7759, { 0xd2, 0xa4, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x2c14);
        EXPECT(gbc.pc(), 0x775c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 01BE
        gbc.setState(0x708d, 0xfb62, 0x67c0, 0xa369, 0x662b, 0x264a, 0x0, 0x1);
        gbc.writeMem(0x708d, { 0xd2, 0x1, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xfb62);
        EXPECT(gbc.pc(), 0xf901);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 01BF
        gbc.setState(0x2434, 0xc08e, 0x8fa0, 0x8600, 0x79da, 0x7fe, 0x1, 0x0);
        gbc.writeMem(0x2434, { 0xd2, 0xc9, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xc08e);
        EXPECT(gbc.pc(), 0x44c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 01C0
        gbc.setState(0x530c, 0x79fb, 0xf8d0, 0x3e11, 0x5c60, 0xfe4d, 0x1, 0x0);
        gbc.writeMem(0x530c, { 0xd2, 0x6c, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x79fb);
        EXPECT(gbc.pc(), 0x530f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 01C1
        gbc.setState(0x4d7, 0xf93f, 0x2100, 0x2a9, 0xf0d2, 0xad35, 0x1, 0x0);
        gbc.writeMem(0x4d7, { 0xd2, 0x5b, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xf93f);
        EXPECT(gbc.pc(), 0x105b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 01C2
        gbc.setState(0xeaaf, 0xdc25, 0x9ed0, 0x2365, 0x94a3, 0x27e8, 0x0, 0x0);
        gbc.writeMem(0xeaaf, { 0xd2, 0x33, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xdc25);
        EXPECT(gbc.pc(), 0xeab2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeaaf), 0xd2);
        EXPECT(gbc.readMem(0xeab0), 0x33);
        EXPECT(gbc.readMem(0xeab1), 0xd1);
        // D2 01C3
        gbc.setState(0x82b6, 0x2857, 0x4af0, 0x7f2f, 0x93a2, 0xc943, 0x1, 0x1);
        gbc.writeMem(0x82b6, { 0xd2, 0x68, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x2857);
        EXPECT(gbc.pc(), 0x82b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82b6), 0xd2);
        EXPECT(gbc.readMem(0x82b7), 0x68);
        EXPECT(gbc.readMem(0x82b8), 0x29);
        // D2 01C4
        gbc.setState(0xdf4f, 0x1e2b, 0xf990, 0xe068, 0x3e0f, 0x54c0, 0x0, 0x0);
        gbc.writeMem(0xdf4f, { 0xd2, 0x1c, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x1e2b);
        EXPECT(gbc.pc(), 0xdf52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf4f), 0xd2);
        EXPECT(gbc.readMem(0xdf50), 0x1c);
        EXPECT(gbc.readMem(0xdf51), 0xc5);
        // D2 01C5
        gbc.setState(0x41ae, 0xab00, 0xf340, 0x8143, 0x104c, 0xcc70, 0x1, 0x1);
        gbc.writeMem(0x41ae, { 0xd2, 0xe7, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xab00);
        EXPECT(gbc.pc(), 0xd3e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 01C6
        gbc.setState(0x3f88, 0x4a4c, 0xc660, 0x63a5, 0x43fe, 0xcabd, 0x0, 0x0);
        gbc.writeMem(0x3f88, { 0xd2, 0x31, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x4a4c);
        EXPECT(gbc.pc(), 0x1c31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 01C8
        gbc.setState(0x631c, 0x740c, 0xbd80, 0x5907, 0x763a, 0xaddf, 0x1, 0x1);
        gbc.writeMem(0x631c, { 0xd2, 0x90, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x740c);
        EXPECT(gbc.pc(), 0x7990);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 01C9
        gbc.setState(0x5901, 0xf2e7, 0x16e0, 0x292c, 0xd478, 0xf56b, 0x0, 0x0);
        gbc.writeMem(0x5901, { 0xd2, 0xb4, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xf2e7);
        EXPECT(gbc.pc(), 0x6b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 01CA
        gbc.setState(0x591a, 0x418e, 0xc040, 0x956a, 0x151f, 0xf10d, 0x0, 0x0);
        gbc.writeMem(0x591a, { 0xd2, 0xb4, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x418e);
        EXPECT(gbc.pc(), 0x9fb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 01CB
        gbc.setState(0xdb40, 0xb25f, 0xb0e0, 0x5fdf, 0x8ca2, 0x89d0, 0x1, 0x0);
        gbc.writeMem(0xdb40, { 0xd2, 0xfc, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xb25f);
        EXPECT(gbc.pc(), 0xeefc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb40), 0xd2);
        EXPECT(gbc.readMem(0xdb41), 0xfc);
        EXPECT(gbc.readMem(0xdb42), 0xee);
        // D2 01CC
        gbc.setState(0x2f87, 0x5db5, 0x1370, 0x528a, 0xf087, 0x238c, 0x1, 0x1);
        gbc.writeMem(0x2f87, { 0xd2, 0x58, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x5db5);
        EXPECT(gbc.pc(), 0x2f8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 01CD
        gbc.setState(0x2989, 0x89f3, 0x66a0, 0x841e, 0x5c49, 0xe4d7, 0x1, 0x0);
        gbc.writeMem(0x2989, { 0xd2, 0x5c, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x89f3);
        EXPECT(gbc.pc(), 0x3c5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 01CF
        gbc.setState(0x84fe, 0x93b7, 0x12e0, 0x488c, 0x4815, 0x83c2, 0x0, 0x1);
        gbc.writeMem(0x84fe, { 0xd2, 0xd3, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x93b7);
        EXPECT(gbc.pc(), 0xa7d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84fe), 0xd2);
        EXPECT(gbc.readMem(0x84ff), 0xd3);
        EXPECT(gbc.readMem(0x8500), 0xa7);
        // D2 01D0
        gbc.setState(0x91f5, 0x30a0, 0xcc40, 0x50e7, 0x80f1, 0x5876, 0x0, 0x1);
        gbc.writeMem(0x91f5, { 0xd2, 0x5a, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x30a0);
        EXPECT(gbc.pc(), 0x1c5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91f5), 0xd2);
        EXPECT(gbc.readMem(0x91f6), 0x5a);
        EXPECT(gbc.readMem(0x91f7), 0x1c);
        // D2 01D1
        gbc.setState(0x863d, 0x15cc, 0xe070, 0x4c86, 0xff4c, 0x3747, 0x1, 0x0);
        gbc.writeMem(0x863d, { 0xd2, 0x69, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x15cc);
        EXPECT(gbc.pc(), 0x8640);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x863d), 0xd2);
        EXPECT(gbc.readMem(0x863e), 0x69);
        EXPECT(gbc.readMem(0x863f), 0x5);
        // D2 01D3
        gbc.setState(0x40b5, 0x9c24, 0x1b50, 0xf70, 0x3c47, 0x1425, 0x1, 0x1);
        gbc.writeMem(0x40b5, { 0xd2, 0x78, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x9c24);
        EXPECT(gbc.pc(), 0x40b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 01D4
        gbc.setState(0x1edd, 0x18e8, 0xf3c0, 0xc995, 0x44dc, 0x42d6, 0x0, 0x0);
        gbc.writeMem(0x1edd, { 0xd2, 0xa, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x18e8);
        EXPECT(gbc.pc(), 0x3c0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 01D5
        gbc.setState(0x59b2, 0xbee7, 0xc320, 0xc4cb, 0x80a4, 0x3015, 0x1, 0x1);
        gbc.writeMem(0x59b2, { 0xd2, 0x31, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xbee7);
        EXPECT(gbc.pc(), 0x5731);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 01D6
        gbc.setState(0x1b97, 0x328d, 0xc1e0, 0x4ae5, 0xa348, 0x9502, 0x0, 0x0);
        gbc.writeMem(0x1b97, { 0xd2, 0x2a, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x328d);
        EXPECT(gbc.pc(), 0x202a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 01D7
        gbc.setState(0x6d, 0x5a6d, 0x4ef0, 0xbbb1, 0x65, 0x7ff2, 0x1, 0x1);
        gbc.writeMem(0x6d, { 0xd2, 0x29, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x5a6d);
        EXPECT(gbc.pc(), 0x70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 01D8
        gbc.setState(0xeca, 0x62ae, 0xfb00, 0x6c43, 0x232f, 0x22b2, 0x0, 0x0);
        gbc.writeMem(0xeca, { 0xd2, 0xc8, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x62ae);
        EXPECT(gbc.pc(), 0x6ec8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 01D9
        gbc.setState(0x1c53, 0xb636, 0xbf50, 0x5bde, 0x8082, 0xf84d, 0x1, 0x1);
        gbc.writeMem(0x1c53, { 0xd2, 0x3c, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xb636);
        EXPECT(gbc.pc(), 0x1c56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 01DA
        gbc.setState(0x7fea, 0x5dcd, 0x9db0, 0x613f, 0x36a6, 0xcb2, 0x0, 0x0);
        gbc.writeMem(0x7fea, { 0xd2, 0x55, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x5dcd);
        EXPECT(gbc.pc(), 0x7fed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 01DB
        gbc.setState(0x613b, 0x3acf, 0x5b10, 0x4f5a, 0xfa3b, 0xa4a5, 0x0, 0x0);
        gbc.writeMem(0x613b, { 0xd2, 0xfb, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x3acf);
        EXPECT(gbc.pc(), 0x613e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 01DC
        gbc.setState(0xcdd, 0xbf9e, 0x2c80, 0xb2ee, 0x25e5, 0x1d8b, 0x1, 0x0);
        gbc.writeMem(0xcdd, { 0xd2, 0x60, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xbf9e);
        EXPECT(gbc.pc(), 0x7560);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 01DD
        gbc.setState(0x19bc, 0x4488, 0x47b0, 0x7b43, 0x9ac7, 0x9573, 0x0, 0x0);
        gbc.writeMem(0x19bc, { 0xd2, 0x35, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x4488);
        EXPECT(gbc.pc(), 0x19bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 01DE
        gbc.setState(0x627c, 0x23a6, 0xa2d0, 0x9c2d, 0xb791, 0xb078, 0x0, 0x0);
        gbc.writeMem(0x627c, { 0xd2, 0xc, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x23a6);
        EXPECT(gbc.pc(), 0x627f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 01DF
        gbc.setState(0x189c, 0x65a8, 0xbec0, 0xbeac, 0x4392, 0x5d3a, 0x1, 0x1);
        gbc.writeMem(0x189c, { 0xd2, 0x2e, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x65a8);
        EXPECT(gbc.pc(), 0x362e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 01E0
        gbc.setState(0xbc16, 0xf3c3, 0xa580, 0x28a3, 0xaf98, 0x7b1d, 0x0, 0x1);
        gbc.writeMem(0xbc16, { 0xd2, 0x9b, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xf3c3);
        EXPECT(gbc.pc(), 0x8b9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc16), 0xd2);
        EXPECT(gbc.readMem(0xbc17), 0x9b);
        EXPECT(gbc.readMem(0xbc18), 0x8b);
        // D2 01E1
        gbc.setState(0xd2f0, 0x4e24, 0xe5e0, 0xfb, 0x9212, 0xb02f, 0x0, 0x0);
        gbc.writeMem(0xd2f0, { 0xd2, 0xbc, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x4e24);
        EXPECT(gbc.pc(), 0xdebc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2f0), 0xd2);
        EXPECT(gbc.readMem(0xd2f1), 0xbc);
        EXPECT(gbc.readMem(0xd2f2), 0xde);
        // D2 01E2
        gbc.setState(0x4edb, 0xef01, 0xb5c0, 0x5246, 0x2d9c, 0xed4f, 0x0, 0x0);
        gbc.writeMem(0x4edb, { 0xd2, 0xa1, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xef01);
        EXPECT(gbc.pc(), 0x6ca1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 01E3
        gbc.setState(0xc2a0, 0xeccf, 0x3280, 0x9965, 0xe6c, 0x732a, 0x1, 0x0);
        gbc.writeMem(0xc2a0, { 0xd2, 0xda, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xeccf);
        EXPECT(gbc.pc(), 0x28da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2a0), 0xd2);
        EXPECT(gbc.readMem(0xc2a1), 0xda);
        EXPECT(gbc.readMem(0xc2a2), 0x28);
        // D2 01E4
        gbc.setState(0x6033, 0xf686, 0x2b50, 0x9080, 0xfe2a, 0xae69, 0x0, 0x0);
        gbc.writeMem(0x6033, { 0xd2, 0x43, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xf686);
        EXPECT(gbc.pc(), 0x6036);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 01E5
        gbc.setState(0x17b2, 0xd0bd, 0x5b20, 0x678f, 0x4747, 0xad75, 0x0, 0x0);
        gbc.writeMem(0x17b2, { 0xd2, 0x68, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xd0bd);
        EXPECT(gbc.pc(), 0xb268);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 01E6
        gbc.setState(0xab9d, 0x7804, 0x3f10, 0x40e2, 0x9e7b, 0x70a8, 0x1, 0x0);
        gbc.writeMem(0xab9d, { 0xd2, 0xcb, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x7804);
        EXPECT(gbc.pc(), 0xaba0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab9d), 0xd2);
        EXPECT(gbc.readMem(0xab9e), 0xcb);
        EXPECT(gbc.readMem(0xab9f), 0x95);
        // D2 01E7
        gbc.setState(0x82f0, 0x7524, 0xb020, 0x988c, 0xfd57, 0x2703, 0x0, 0x0);
        gbc.writeMem(0x82f0, { 0xd2, 0xb, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x7524);
        EXPECT(gbc.pc(), 0x220b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82f0), 0xd2);
        EXPECT(gbc.readMem(0x82f1), 0xb);
        EXPECT(gbc.readMem(0x82f2), 0x22);
        // D2 01E8
        gbc.setState(0x88e2, 0x5b0, 0xeaa0, 0x89b8, 0x99a3, 0xa8a8, 0x0, 0x0);
        gbc.writeMem(0x88e2, { 0xd2, 0x3, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x5b0);
        EXPECT(gbc.pc(), 0xe03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88e2), 0xd2);
        EXPECT(gbc.readMem(0x88e3), 0x3);
        EXPECT(gbc.readMem(0x88e4), 0xe);
        // D2 01E9
        gbc.setState(0x30e3, 0xd0b6, 0x9830, 0x3ee2, 0xd09d, 0x79e1, 0x0, 0x1);
        gbc.writeMem(0x30e3, { 0xd2, 0x19, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xd0b6);
        EXPECT(gbc.pc(), 0x30e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 01EB
        gbc.setState(0x49e1, 0xefba, 0x34e0, 0x8fdf, 0x1a4e, 0xee11, 0x1, 0x1);
        gbc.writeMem(0x49e1, { 0xd2, 0x7b, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xefba);
        EXPECT(gbc.pc(), 0xbd7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 01ED
        gbc.setState(0x2ca9, 0x7e3e, 0x7270, 0xa178, 0x3080, 0xe667, 0x0, 0x0);
        gbc.writeMem(0x2ca9, { 0xd2, 0xbf, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x7e3e);
        EXPECT(gbc.pc(), 0x2cac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 01EE
        gbc.setState(0x2de8, 0x3dbd, 0x6760, 0x9e41, 0xdc9, 0xde00, 0x1, 0x1);
        gbc.writeMem(0x2de8, { 0xd2, 0xec, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x3dbd);
        EXPECT(gbc.pc(), 0x20ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 01F0
        gbc.setState(0xaa8f, 0x1029, 0xb1b0, 0x44ae, 0xcddb, 0xf4b6, 0x1, 0x0);
        gbc.writeMem(0xaa8f, { 0xd2, 0xd8, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x1029);
        EXPECT(gbc.pc(), 0xaa92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa8f), 0xd2);
        EXPECT(gbc.readMem(0xaa90), 0xd8);
        EXPECT(gbc.readMem(0xaa91), 0x61);
        // D2 01F1
        gbc.setState(0x6003, 0xf397, 0x58b0, 0xee95, 0x8cc4, 0x5ab3, 0x1, 0x1);
        gbc.writeMem(0x6003, { 0xd2, 0x5f, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xf397);
        EXPECT(gbc.pc(), 0x6006);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 01F2
        gbc.setState(0x1fe, 0xa4, 0x79e0, 0x5604, 0xedf8, 0x6445, 0x1, 0x1);
        gbc.writeMem(0x1fe, { 0xd2, 0x13, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xa4);
        EXPECT(gbc.pc(), 0x7413);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 01F3
        gbc.setState(0x2cce, 0xe5fe, 0x3bf0, 0x37f4, 0x497d, 0xf6ab, 0x1, 0x1);
        gbc.writeMem(0x2cce, { 0xd2, 0x80, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xe5fe);
        EXPECT(gbc.pc(), 0x2cd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 01F4
        gbc.setState(0x7848, 0x9a91, 0x81d0, 0x90f6, 0x27d6, 0xb8dc, 0x1, 0x1);
        gbc.writeMem(0x7848, { 0xd2, 0x8d, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x9a91);
        EXPECT(gbc.pc(), 0x784b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 01F5
        gbc.setState(0x2663, 0xaf02, 0x20f0, 0x6b9d, 0x68a8, 0xc1c2, 0x1, 0x0);
        gbc.writeMem(0x2663, { 0xd2, 0x5, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xaf02);
        EXPECT(gbc.pc(), 0x2666);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 01F6
        gbc.setState(0x777b, 0x9db2, 0x1560, 0x7bb2, 0xd010, 0x9754, 0x0, 0x0);
        gbc.writeMem(0x777b, { 0xd2, 0x88, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x9db2);
        EXPECT(gbc.pc(), 0xd788);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 01F7
        gbc.setState(0x3de2, 0xd967, 0xf330, 0xf159, 0x7663, 0x462a, 0x0, 0x1);
        gbc.writeMem(0x3de2, { 0xd2, 0x8b, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xd967);
        EXPECT(gbc.pc(), 0x3de5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 01F8
        gbc.setState(0xc3bc, 0x3938, 0x5740, 0xbd0b, 0xddf, 0x4372, 0x1, 0x0);
        gbc.writeMem(0xc3bc, { 0xd2, 0xa, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x3938);
        EXPECT(gbc.pc(), 0x910a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3bc), 0xd2);
        EXPECT(gbc.readMem(0xc3bd), 0xa);
        EXPECT(gbc.readMem(0xc3be), 0x91);
        // D2 01F9
        gbc.setState(0xc41d, 0x76bc, 0x7b60, 0xd02b, 0x95ed, 0xce62, 0x1, 0x0);
        gbc.writeMem(0xc41d, { 0xd2, 0xf1, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x76bc);
        EXPECT(gbc.pc(), 0x6af1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc41d), 0xd2);
        EXPECT(gbc.readMem(0xc41e), 0xf1);
        EXPECT(gbc.readMem(0xc41f), 0x6a);
        // D2 01FA
        gbc.setState(0xdf2e, 0x6c82, 0x2920, 0x361e, 0xb965, 0x72b8, 0x0, 0x1);
        gbc.writeMem(0xdf2e, { 0xd2, 0xcd, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x6c82);
        EXPECT(gbc.pc(), 0xaacd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf2e), 0xd2);
        EXPECT(gbc.readMem(0xdf2f), 0xcd);
        EXPECT(gbc.readMem(0xdf30), 0xaa);
        // D2 01FB
        gbc.setState(0xc261, 0xfa84, 0x1a10, 0x1072, 0x704, 0x7f1e, 0x1, 0x1);
        gbc.writeMem(0xc261, { 0xd2, 0x12, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xfa84);
        EXPECT(gbc.pc(), 0xc264);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc261), 0xd2);
        EXPECT(gbc.readMem(0xc262), 0x12);
        EXPECT(gbc.readMem(0xc263), 0x59);
        // D2 01FC
        gbc.setState(0xc898, 0x43a6, 0x1520, 0x41bf, 0x7ea5, 0xc9cc, 0x1, 0x0);
        gbc.writeMem(0xc898, { 0xd2, 0x5b, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x43a6);
        EXPECT(gbc.pc(), 0x3d5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc898), 0xd2);
        EXPECT(gbc.readMem(0xc899), 0x5b);
        EXPECT(gbc.readMem(0xc89a), 0x3d);
        // D2 01FD
        gbc.setState(0x7200, 0x12ae, 0xb9e0, 0x6ca6, 0xe300, 0x84d1, 0x1, 0x1);
        gbc.writeMem(0x7200, { 0xd2, 0xdd, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x12ae);
        EXPECT(gbc.pc(), 0x7cdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 01FE
        gbc.setState(0x449d, 0xb0e5, 0xc540, 0xb3cb, 0x6237, 0xc1c4, 0x0, 0x1);
        gbc.writeMem(0x449d, { 0xd2, 0xe3, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xb0e5);
        EXPECT(gbc.pc(), 0x9de3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 01FF
        gbc.setState(0x47aa, 0xd3b, 0xb300, 0x12b, 0xf4fe, 0x356f, 0x1, 0x0);
        gbc.writeMem(0x47aa, { 0xd2, 0xc6, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xd3b);
        EXPECT(gbc.pc(), 0x77c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 0200
        gbc.setState(0x70b, 0x8dd5, 0x4130, 0x845e, 0x8a9c, 0xc24f, 0x1, 0x0);
        gbc.writeMem(0x70b, { 0xd2, 0x8b, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x8dd5);
        EXPECT(gbc.pc(), 0x70e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0201
        gbc.setState(0xd600, 0x80a1, 0x7680, 0xb4ce, 0x114, 0xb4b2, 0x0, 0x1);
        gbc.writeMem(0xd600, { 0xd2, 0x87, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x80a1);
        EXPECT(gbc.pc(), 0x7c87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd600), 0xd2);
        EXPECT(gbc.readMem(0xd601), 0x87);
        EXPECT(gbc.readMem(0xd602), 0x7c);
        // D2 0202
        gbc.setState(0xdb94, 0xca3d, 0xdee0, 0xbce9, 0x5b5a, 0x88b0, 0x0, 0x0);
        gbc.writeMem(0xdb94, { 0xd2, 0x11, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xca3d);
        EXPECT(gbc.pc(), 0xa011);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb94), 0xd2);
        EXPECT(gbc.readMem(0xdb95), 0x11);
        EXPECT(gbc.readMem(0xdb96), 0xa0);
        // D2 0204
        gbc.setState(0xc1a8, 0x50b4, 0xf670, 0xfe98, 0x398d, 0x8a7b, 0x0, 0x1);
        gbc.writeMem(0xc1a8, { 0xd2, 0x5b, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x50b4);
        EXPECT(gbc.pc(), 0xc1ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1a8), 0xd2);
        EXPECT(gbc.readMem(0xc1a9), 0x5b);
        EXPECT(gbc.readMem(0xc1aa), 0x17);
        // D2 0205
        gbc.setState(0xa772, 0x29ee, 0xf410, 0xbb81, 0x7fd, 0x7d26, 0x1, 0x1);
        gbc.writeMem(0xa772, { 0xd2, 0x4b, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x29ee);
        EXPECT(gbc.pc(), 0xa775);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa772), 0xd2);
        EXPECT(gbc.readMem(0xa773), 0x4b);
        EXPECT(gbc.readMem(0xa774), 0x25);
        // D2 0206
        gbc.setState(0xaa3f, 0xe34, 0xdac0, 0xc01d, 0x53ae, 0x2ae7, 0x0, 0x1);
        gbc.writeMem(0xaa3f, { 0xd2, 0x29, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xe34);
        EXPECT(gbc.pc(), 0xe329);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa3f), 0xd2);
        EXPECT(gbc.readMem(0xaa40), 0x29);
        EXPECT(gbc.readMem(0xaa41), 0xe3);
        // D2 0207
        gbc.setState(0x97ab, 0xac9f, 0xa630, 0xd31e, 0xda0, 0x7bf3, 0x0, 0x0);
        gbc.writeMem(0x97ab, { 0xd2, 0x4f, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xac9f);
        EXPECT(gbc.pc(), 0x97ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97ab), 0xd2);
        EXPECT(gbc.readMem(0x97ac), 0x4f);
        EXPECT(gbc.readMem(0x97ad), 0x4e);
        // D2 0208
        gbc.setState(0x60ff, 0xd777, 0x3400, 0xd7c2, 0x4db9, 0x46cd, 0x0, 0x0);
        gbc.writeMem(0x60ff, { 0xd2, 0x2a, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xd777);
        EXPECT(gbc.pc(), 0x842a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 0209
        gbc.setState(0xb3f8, 0xb336, 0x38c0, 0xa0ad, 0xcffb, 0x8bc7, 0x0, 0x1);
        gbc.writeMem(0xb3f8, { 0xd2, 0x21, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xb336);
        EXPECT(gbc.pc(), 0xe621);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3f8), 0xd2);
        EXPECT(gbc.readMem(0xb3f9), 0x21);
        EXPECT(gbc.readMem(0xb3fa), 0xe6);
        // D2 020A
        gbc.setState(0xd91b, 0xa396, 0xcc30, 0xa685, 0xac41, 0xe7ab, 0x1, 0x0);
        gbc.writeMem(0xd91b, { 0xd2, 0x31, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xa396);
        EXPECT(gbc.pc(), 0xd91e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd91b), 0xd2);
        EXPECT(gbc.readMem(0xd91c), 0x31);
        EXPECT(gbc.readMem(0xd91d), 0xe4);
        // D2 020B
        gbc.setState(0xe085, 0x7c3b, 0x7d0, 0xadef, 0x6cef, 0x8e78, 0x0, 0x1);
        gbc.writeMem(0xe085, { 0xd2, 0x80, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x7c3b);
        EXPECT(gbc.pc(), 0xe088);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe085), 0xd2);
        EXPECT(gbc.readMem(0xe086), 0x80);
        EXPECT(gbc.readMem(0xe087), 0x96);
        // D2 020C
        gbc.setState(0xa869, 0x13c8, 0xb3d0, 0xbcf6, 0x565, 0x8a73, 0x0, 0x0);
        gbc.writeMem(0xa869, { 0xd2, 0xfc, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x13c8);
        EXPECT(gbc.pc(), 0xa86c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa869), 0xd2);
        EXPECT(gbc.readMem(0xa86a), 0xfc);
        EXPECT(gbc.readMem(0xa86b), 0xd5);
        // D2 020D
        gbc.setState(0xb6e8, 0xf1bc, 0xf1f0, 0x94b7, 0xd263, 0x7d81, 0x1, 0x0);
        gbc.writeMem(0xb6e8, { 0xd2, 0x34, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xf1bc);
        EXPECT(gbc.pc(), 0xb6eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6e8), 0xd2);
        EXPECT(gbc.readMem(0xb6e9), 0x34);
        EXPECT(gbc.readMem(0xb6ea), 0x97);
        // D2 020E
        gbc.setState(0xb5d4, 0x97e1, 0xddd0, 0xb0d7, 0xf4b9, 0xd545, 0x1, 0x0);
        gbc.writeMem(0xb5d4, { 0xd2, 0x23, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x97e1);
        EXPECT(gbc.pc(), 0xb5d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5d4), 0xd2);
        EXPECT(gbc.readMem(0xb5d5), 0x23);
        EXPECT(gbc.readMem(0xb5d6), 0x3a);
        // D2 020F
        gbc.setState(0xba1e, 0xdcb, 0x1340, 0x1712, 0x34c0, 0x2db6, 0x0, 0x0);
        gbc.writeMem(0xba1e, { 0xd2, 0x4d, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xdcb);
        EXPECT(gbc.pc(), 0xad4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba1e), 0xd2);
        EXPECT(gbc.readMem(0xba1f), 0x4d);
        EXPECT(gbc.readMem(0xba20), 0xad);
        // D2 0210
        gbc.setState(0x399e, 0x94cb, 0xa7d0, 0x540b, 0x15bb, 0x3e11, 0x1, 0x1);
        gbc.writeMem(0x399e, { 0xd2, 0x52, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x94cb);
        EXPECT(gbc.pc(), 0x39a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 0211
        gbc.setState(0xd887, 0x987c, 0x5b60, 0xc54c, 0x2610, 0x878d, 0x1, 0x0);
        gbc.writeMem(0xd887, { 0xd2, 0xdb, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x987c);
        EXPECT(gbc.pc(), 0xefdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd887), 0xd2);
        EXPECT(gbc.readMem(0xd888), 0xdb);
        EXPECT(gbc.readMem(0xd889), 0xef);
        // D2 0212
        gbc.setState(0x2034, 0xffd3, 0x2420, 0xade4, 0xe1a9, 0xa0ec, 0x0, 0x1);
        gbc.writeMem(0x2034, { 0xd2, 0x65, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xffd3);
        EXPECT(gbc.pc(), 0xe465);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0214
        gbc.setState(0x1e41, 0xe71c, 0xd8d0, 0xf58e, 0x4e6a, 0x9a50, 0x1, 0x1);
        gbc.writeMem(0x1e41, { 0xd2, 0xce, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xe71c);
        EXPECT(gbc.pc(), 0x1e44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 0215
        gbc.setState(0x330c, 0xb48c, 0xf120, 0x13d2, 0xb639, 0x7b00, 0x0, 0x0);
        gbc.writeMem(0x330c, { 0xd2, 0xd6, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xb48c);
        EXPECT(gbc.pc(), 0xad6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0216
        gbc.setState(0x1780, 0x9624, 0x7fd0, 0x92c4, 0x8240, 0x725e, 0x0, 0x0);
        gbc.writeMem(0x1780, { 0xd2, 0x22, 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x9624);
        EXPECT(gbc.pc(), 0x1783);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 0217
        gbc.setState(0x2526, 0x9306, 0x4df0, 0xb7b2, 0x5e5c, 0x476b, 0x0, 0x1);
        gbc.writeMem(0x2526, { 0xd2, 0xae, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x9306);
        EXPECT(gbc.pc(), 0x2529);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0218
        gbc.setState(0x61fa, 0x505a, 0xa4e0, 0x7d10, 0x7d6e, 0x94e6, 0x1, 0x0);
        gbc.writeMem(0x61fa, { 0xd2, 0xe7, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x505a);
        EXPECT(gbc.pc(), 0x40e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0219
        gbc.setState(0x97f7, 0x1891, 0x3150, 0x5af8, 0x9f9e, 0x6fcd, 0x1, 0x1);
        gbc.writeMem(0x97f7, { 0xd2, 0x4e, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x1891);
        EXPECT(gbc.pc(), 0x97fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97f7), 0xd2);
        EXPECT(gbc.readMem(0x97f8), 0x4e);
        EXPECT(gbc.readMem(0x97f9), 0xcf);
        // D2 021A
        gbc.setState(0xb44e, 0x63a5, 0x8ed0, 0x3430, 0x6100, 0x5998, 0x1, 0x1);
        gbc.writeMem(0xb44e, { 0xd2, 0x49, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x63a5);
        EXPECT(gbc.pc(), 0xb451);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb44e), 0xd2);
        EXPECT(gbc.readMem(0xb44f), 0x49);
        EXPECT(gbc.readMem(0xb450), 0xc4);
        // D2 021B
        gbc.setState(0x3d9d, 0xcc33, 0x540, 0xe3c8, 0xdafc, 0xee50, 0x1, 0x1);
        gbc.writeMem(0x3d9d, { 0xd2, 0xad, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xcc33);
        EXPECT(gbc.pc(), 0x23ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 021C
        gbc.setState(0x359, 0x9e0e, 0x9bb0, 0x6d19, 0x5974, 0x1074, 0x0, 0x1);
        gbc.writeMem(0x359, { 0xd2, 0xdd, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x9e0e);
        EXPECT(gbc.pc(), 0x35c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 021D
        gbc.setState(0x8905, 0x174, 0x8970, 0xd2b3, 0xd73d, 0x59ed, 0x1, 0x0);
        gbc.writeMem(0x8905, { 0xd2, 0x53, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x174);
        EXPECT(gbc.pc(), 0x8908);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8905), 0xd2);
        EXPECT(gbc.readMem(0x8906), 0x53);
        EXPECT(gbc.readMem(0x8907), 0x54);
        // D2 021E
        gbc.setState(0x5d52, 0xaf6, 0x69f0, 0xe4e3, 0xbda8, 0x4128, 0x1, 0x0);
        gbc.writeMem(0x5d52, { 0xd2, 0x3a, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xaf6);
        EXPECT(gbc.pc(), 0x5d55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 021F
        gbc.setState(0xeb08, 0xd398, 0x9770, 0xe6b3, 0x7612, 0x12d1, 0x0, 0x0);
        gbc.writeMem(0xeb08, { 0xd2, 0xe4, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xd398);
        EXPECT(gbc.pc(), 0xeb0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb08), 0xd2);
        EXPECT(gbc.readMem(0xeb09), 0xe4);
        EXPECT(gbc.readMem(0xeb0a), 0x1);
        // D2 0220
        gbc.setState(0xdf3e, 0x3a1, 0x4fd0, 0xce63, 0x86c1, 0x345, 0x0, 0x0);
        gbc.writeMem(0xdf3e, { 0xd2, 0xac, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x3a1);
        EXPECT(gbc.pc(), 0xdf41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf3e), 0xd2);
        EXPECT(gbc.readMem(0xdf3f), 0xac);
        EXPECT(gbc.readMem(0xdf40), 0xb8);
        // D2 0222
        gbc.setState(0x8f02, 0xa151, 0x4450, 0x68, 0xf7dd, 0x1de6, 0x1, 0x1);
        gbc.writeMem(0x8f02, { 0xd2, 0x92, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xa151);
        EXPECT(gbc.pc(), 0x8f05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f02), 0xd2);
        EXPECT(gbc.readMem(0x8f03), 0x92);
        EXPECT(gbc.readMem(0x8f04), 0xeb);
        // D2 0223
        gbc.setState(0x4e1b, 0x2bac, 0x3200, 0x920a, 0xd0cd, 0xd47a, 0x1, 0x0);
        gbc.writeMem(0x4e1b, { 0xd2, 0x1a, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x2bac);
        EXPECT(gbc.pc(), 0x8d1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 0224
        gbc.setState(0xa9cb, 0xeb4d, 0x3da0, 0xa9fb, 0x86f9, 0x4031, 0x0, 0x1);
        gbc.writeMem(0xa9cb, { 0xd2, 0x19, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xeb4d);
        EXPECT(gbc.pc(), 0x1519);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9cb), 0xd2);
        EXPECT(gbc.readMem(0xa9cc), 0x19);
        EXPECT(gbc.readMem(0xa9cd), 0x15);
        // D2 0225
        gbc.setState(0x5c8d, 0xe43b, 0xe9c0, 0xb042, 0x4af5, 0xf4b, 0x0, 0x0);
        gbc.writeMem(0x5c8d, { 0xd2, 0x1d, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xe43b);
        EXPECT(gbc.pc(), 0x4e1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 0226
        gbc.setState(0x8dd6, 0x5e2f, 0x7490, 0x8772, 0x4c17, 0xa542, 0x0, 0x0);
        gbc.writeMem(0x8dd6, { 0xd2, 0x36, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x5e2f);
        EXPECT(gbc.pc(), 0x8dd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dd6), 0xd2);
        EXPECT(gbc.readMem(0x8dd7), 0x36);
        EXPECT(gbc.readMem(0x8dd8), 0x55);
        // D2 0227
        gbc.setState(0x4ce, 0xcf8f, 0x2360, 0x56d4, 0x3f5b, 0xce51, 0x0, 0x1);
        gbc.writeMem(0x4ce, { 0xd2, 0xb4, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xcf8f);
        EXPECT(gbc.pc(), 0x4cb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0228
        gbc.setState(0x354, 0x845f, 0xf670, 0x813e, 0x6b39, 0x20c6, 0x0, 0x1);
        gbc.writeMem(0x354, { 0xd2, 0x88, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x845f);
        EXPECT(gbc.pc(), 0x357);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0229
        gbc.setState(0x7f47, 0x498f, 0x59b0, 0x10f1, 0x612b, 0x4545, 0x1, 0x0);
        gbc.writeMem(0x7f47, { 0xd2, 0xe3, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x498f);
        EXPECT(gbc.pc(), 0x7f4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 022A
        gbc.setState(0x319, 0x5d72, 0xa5d0, 0x700b, 0xe54d, 0x4bfa, 0x1, 0x0);
        gbc.writeMem(0x319, { 0xd2, 0x46, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x5d72);
        EXPECT(gbc.pc(), 0x31c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 022B
        gbc.setState(0x2c51, 0xbd8c, 0xa6d0, 0x50f3, 0x9c05, 0xfff8, 0x1, 0x1);
        gbc.writeMem(0x2c51, { 0xd2, 0xe1, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xbd8c);
        EXPECT(gbc.pc(), 0x2c54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 022D
        gbc.setState(0xadb8, 0x112d, 0xc8a0, 0x3b52, 0x128e, 0x53f4, 0x0, 0x0);
        gbc.writeMem(0xadb8, { 0xd2, 0x4, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x112d);
        EXPECT(gbc.pc(), 0x4004);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadb8), 0xd2);
        EXPECT(gbc.readMem(0xadb9), 0x4);
        EXPECT(gbc.readMem(0xadba), 0x40);
        // D2 022E
        gbc.setState(0x7e18, 0x8ac6, 0x5500, 0x3460, 0xd826, 0x4b10, 0x1, 0x1);
        gbc.writeMem(0x7e18, { 0xd2, 0x1e, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x8ac6);
        EXPECT(gbc.pc(), 0x2f1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 022F
        gbc.setState(0xa4b, 0xc89b, 0xa680, 0x3f4e, 0xfdcd, 0x8a97, 0x1, 0x1);
        gbc.writeMem(0xa4b, { 0xd2, 0x55, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xc89b);
        EXPECT(gbc.pc(), 0x2355);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 0230
        gbc.setState(0x3629, 0xe83c, 0x3ea0, 0xa21, 0x3e79, 0xc623, 0x0, 0x0);
        gbc.writeMem(0x3629, { 0xd2, 0xbd, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xe83c);
        EXPECT(gbc.pc(), 0x8bbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0232
        gbc.setState(0xcc6a, 0xd640, 0xac90, 0x7e00, 0x646b, 0xc39e, 0x0, 0x1);
        gbc.writeMem(0xcc6a, { 0xd2, 0x45, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xd640);
        EXPECT(gbc.pc(), 0xcc6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc6a), 0xd2);
        EXPECT(gbc.readMem(0xcc6b), 0x45);
        EXPECT(gbc.readMem(0xcc6c), 0xcb);
        // D2 0233
        gbc.setState(0xe606, 0xddde, 0xc5f0, 0xc5bc, 0xe3ce, 0x5525, 0x0, 0x1);
        gbc.writeMem(0xe606, { 0xd2, 0xfb, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xddde);
        EXPECT(gbc.pc(), 0xe609);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe606), 0xd2);
        EXPECT(gbc.readMem(0xe607), 0xfb);
        EXPECT(gbc.readMem(0xe608), 0x2a);
        // D2 0234
        gbc.setState(0xb5fe, 0x53f2, 0xe1d0, 0xf358, 0x3d47, 0xfc4, 0x0, 0x1);
        gbc.writeMem(0xb5fe, { 0xd2, 0x8e, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x53f2);
        EXPECT(gbc.pc(), 0xb601);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5fe), 0xd2);
        EXPECT(gbc.readMem(0xb5ff), 0x8e);
        EXPECT(gbc.readMem(0xb600), 0x8b);
        // D2 0235
        gbc.setState(0x8059, 0x4713, 0x23c0, 0x8757, 0x46eb, 0xf448, 0x0, 0x1);
        gbc.writeMem(0x8059, { 0xd2, 0x28, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x4713);
        EXPECT(gbc.pc(), 0xbe28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8059), 0xd2);
        EXPECT(gbc.readMem(0x805a), 0x28);
        EXPECT(gbc.readMem(0x805b), 0xbe);
        // D2 0236
        gbc.setState(0x180c, 0x5820, 0x9f60, 0xe68f, 0x8034, 0xbf8a, 0x1, 0x0);
        gbc.writeMem(0x180c, { 0xd2, 0xad, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x5820);
        EXPECT(gbc.pc(), 0xc1ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0237
        gbc.setState(0xd454, 0x7e04, 0x3fa0, 0xaf10, 0xfa03, 0xb45d, 0x0, 0x1);
        gbc.writeMem(0xd454, { 0xd2, 0x43, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x7e04);
        EXPECT(gbc.pc(), 0xca43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd454), 0xd2);
        EXPECT(gbc.readMem(0xd455), 0x43);
        EXPECT(gbc.readMem(0xd456), 0xca);
        // D2 0238
        gbc.setState(0x94ba, 0xbb38, 0xb150, 0xe76d, 0x4e54, 0x6ffe, 0x1, 0x0);
        gbc.writeMem(0x94ba, { 0xd2, 0x1e, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xbb38);
        EXPECT(gbc.pc(), 0x94bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94ba), 0xd2);
        EXPECT(gbc.readMem(0x94bb), 0x1e);
        EXPECT(gbc.readMem(0x94bc), 0x3);
        // D2 0239
        gbc.setState(0x4605, 0x4721, 0x7d60, 0xb1a6, 0x789f, 0xfb80, 0x0, 0x0);
        gbc.writeMem(0x4605, { 0xd2, 0xef, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x4721);
        EXPECT(gbc.pc(), 0x6eef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 023A
        gbc.setState(0xd332, 0xd858, 0xb4f0, 0x39b8, 0xadde, 0xe1e6, 0x0, 0x0);
        gbc.writeMem(0xd332, { 0xd2, 0x39, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xd858);
        EXPECT(gbc.pc(), 0xd335);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd332), 0xd2);
        EXPECT(gbc.readMem(0xd333), 0x39);
        EXPECT(gbc.readMem(0xd334), 0xe0);
        // D2 023B
        gbc.setState(0xb533, 0xe58a, 0x1600, 0x89c4, 0xa0d7, 0x2eb0, 0x1, 0x1);
        gbc.writeMem(0xb533, { 0xd2, 0x97, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xe58a);
        EXPECT(gbc.pc(), 0x1997);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb533), 0xd2);
        EXPECT(gbc.readMem(0xb534), 0x97);
        EXPECT(gbc.readMem(0xb535), 0x19);
        // D2 023C
        gbc.setState(0x84d5, 0x9ae0, 0x2370, 0x8021, 0x22d2, 0xb01a, 0x0, 0x1);
        gbc.writeMem(0x84d5, { 0xd2, 0xfd, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x9ae0);
        EXPECT(gbc.pc(), 0x84d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84d5), 0xd2);
        EXPECT(gbc.readMem(0x84d6), 0xfd);
        EXPECT(gbc.readMem(0x84d7), 0x3);
        // D2 023D
        gbc.setState(0x65ed, 0xe5e1, 0x21a0, 0x2107, 0x55b4, 0xddc6, 0x0, 0x1);
        gbc.writeMem(0x65ed, { 0xd2, 0x6f, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xe5e1);
        EXPECT(gbc.pc(), 0x606f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 023E
        gbc.setState(0x1272, 0xd330, 0xb100, 0xe993, 0x7e59, 0xd7fb, 0x0, 0x0);
        gbc.writeMem(0x1272, { 0xd2, 0xfd, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xd330);
        EXPECT(gbc.pc(), 0xb9fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 023F
        gbc.setState(0xe66f, 0x8726, 0xc550, 0x39c8, 0xaa90, 0x8680, 0x0, 0x0);
        gbc.writeMem(0xe66f, { 0xd2, 0x49, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x8726);
        EXPECT(gbc.pc(), 0xe672);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe66f), 0xd2);
        EXPECT(gbc.readMem(0xe670), 0x49);
        EXPECT(gbc.readMem(0xe671), 0x4d);
        // D2 0240
        gbc.setState(0x8be3, 0xafeb, 0xe20, 0x2b90, 0x68c6, 0x4804, 0x0, 0x0);
        gbc.writeMem(0x8be3, { 0xd2, 0x4e, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xafeb);
        EXPECT(gbc.pc(), 0xf74e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8be3), 0xd2);
        EXPECT(gbc.readMem(0x8be4), 0x4e);
        EXPECT(gbc.readMem(0x8be5), 0xf7);
        // D2 0241
        gbc.setState(0x19d, 0xbe0a, 0x8a20, 0xb2fa, 0xcee7, 0xb8c1, 0x1, 0x0);
        gbc.writeMem(0x19d, { 0xd2, 0xa4, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xbe0a);
        EXPECT(gbc.pc(), 0x8ea4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0242
        gbc.setState(0xa1eb, 0xa5d1, 0x6870, 0xdcb3, 0x300c, 0x3f65, 0x0, 0x1);
        gbc.writeMem(0xa1eb, { 0xd2, 0x94, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xa5d1);
        EXPECT(gbc.pc(), 0xa1ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1eb), 0xd2);
        EXPECT(gbc.readMem(0xa1ec), 0x94);
        EXPECT(gbc.readMem(0xa1ed), 0x88);
        // D2 0243
        gbc.setState(0xb592, 0x6a49, 0x2ca0, 0x89c3, 0xbd92, 0xce70, 0x0, 0x1);
        gbc.writeMem(0xb592, { 0xd2, 0xd3, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x6a49);
        EXPECT(gbc.pc(), 0xdbd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb592), 0xd2);
        EXPECT(gbc.readMem(0xb593), 0xd3);
        EXPECT(gbc.readMem(0xb594), 0xdb);
        // D2 0244
        gbc.setState(0x25cb, 0x2b60, 0x4d70, 0x929e, 0xd1ba, 0x9e3e, 0x1, 0x0);
        gbc.writeMem(0x25cb, { 0xd2, 0xb6, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x2b60);
        EXPECT(gbc.pc(), 0x25ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0245
        gbc.setState(0x475a, 0x676c, 0xd340, 0xa174, 0xb45c, 0x51ce, 0x1, 0x1);
        gbc.writeMem(0x475a, { 0xd2, 0x39, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x676c);
        EXPECT(gbc.pc(), 0xaf39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 0246
        gbc.setState(0xdbfd, 0x8b0, 0x6810, 0x6ea8, 0x98d4, 0xbeb6, 0x1, 0x0);
        gbc.writeMem(0xdbfd, { 0xd2, 0xff, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x8b0);
        EXPECT(gbc.pc(), 0xdc00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbfd), 0xd2);
        EXPECT(gbc.readMem(0xdbfe), 0xff);
        EXPECT(gbc.readMem(0xdbff), 0x20);
        // D2 0248
        gbc.setState(0x36e, 0xb483, 0xf970, 0xf655, 0xa1bb, 0x7af7, 0x0, 0x1);
        gbc.writeMem(0x36e, { 0xd2, 0x1a, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xb483);
        EXPECT(gbc.pc(), 0x371);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0249
        gbc.setState(0x9f46, 0x9e56, 0x3a40, 0x8eca, 0x4a05, 0x2f6, 0x0, 0x0);
        gbc.writeMem(0x9f46, { 0xd2, 0x8a, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x9e56);
        EXPECT(gbc.pc(), 0xb8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f46), 0xd2);
        EXPECT(gbc.readMem(0x9f47), 0x8a);
        EXPECT(gbc.readMem(0x9f48), 0xb);
        // D2 024A
        gbc.setState(0xd71e, 0x1bfa, 0xc8c0, 0x5785, 0x6dad, 0xe459, 0x1, 0x1);
        gbc.writeMem(0xd71e, { 0xd2, 0x7, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x1bfa);
        EXPECT(gbc.pc(), 0xc607);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd71e), 0xd2);
        EXPECT(gbc.readMem(0xd71f), 0x7);
        EXPECT(gbc.readMem(0xd720), 0xc6);
        // D2 024B
        gbc.setState(0x5161, 0xdc2, 0x8e50, 0x432e, 0x3a15, 0x2402, 0x0, 0x0);
        gbc.writeMem(0x5161, { 0xd2, 0x71, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xdc2);
        EXPECT(gbc.pc(), 0x5164);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 024C
        gbc.setState(0xa2b, 0xc377, 0xa0f0, 0xec99, 0x94c3, 0xe0cb, 0x1, 0x1);
        gbc.writeMem(0xa2b, { 0xd2, 0x1, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xc377);
        EXPECT(gbc.pc(), 0xa2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 024D
        gbc.setState(0x7f91, 0x5646, 0x4f70, 0xa077, 0x8668, 0x71ca, 0x0, 0x0);
        gbc.writeMem(0x7f91, { 0xd2, 0x6e, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x5646);
        EXPECT(gbc.pc(), 0x7f94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 024E
        gbc.setState(0xb56, 0xf480, 0xdec0, 0xf9c3, 0x5f34, 0x9fc2, 0x1, 0x0);
        gbc.writeMem(0xb56, { 0xd2, 0xa5, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xf480);
        EXPECT(gbc.pc(), 0xbaa5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 024F
        gbc.setState(0xab9b, 0x891e, 0xb090, 0x6107, 0x25f6, 0x32f1, 0x1, 0x1);
        gbc.writeMem(0xab9b, { 0xd2, 0x4, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x891e);
        EXPECT(gbc.pc(), 0xab9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab9b), 0xd2);
        EXPECT(gbc.readMem(0xab9c), 0x4);
        EXPECT(gbc.readMem(0xab9d), 0x4a);
        // D2 0250
        gbc.setState(0x2e04, 0x226c, 0x6c00, 0x46c5, 0x8596, 0x6a85, 0x1, 0x0);
        gbc.writeMem(0x2e04, { 0xd2, 0x8a, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x226c);
        EXPECT(gbc.pc(), 0x338a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 0252
        gbc.setState(0x6958, 0xec73, 0xffe0, 0xf59a, 0x8aa4, 0xbcb4, 0x1, 0x0);
        gbc.writeMem(0x6958, { 0xd2, 0x15, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xec73);
        EXPECT(gbc.pc(), 0xc215);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0253
        gbc.setState(0x964e, 0xa577, 0xe540, 0x9e4a, 0x5c03, 0xeb2f, 0x0, 0x0);
        gbc.writeMem(0x964e, { 0xd2, 0xd6, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xa577);
        EXPECT(gbc.pc(), 0xf7d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x964e), 0xd2);
        EXPECT(gbc.readMem(0x964f), 0xd6);
        EXPECT(gbc.readMem(0x9650), 0xf7);
        // D2 0254
        gbc.setState(0x1b4e, 0x7dc6, 0xc2b0, 0x8855, 0x4f0d, 0x5411, 0x0, 0x0);
        gbc.writeMem(0x1b4e, { 0xd2, 0x35, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x7dc6);
        EXPECT(gbc.pc(), 0x1b51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0255
        gbc.setState(0xe7f6, 0x41ac, 0x7b40, 0x151f, 0x3f1e, 0x6a40, 0x0, 0x1);
        gbc.writeMem(0xe7f6, { 0xd2, 0x4b, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x41ac);
        EXPECT(gbc.pc(), 0x754b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7f6), 0xd2);
        EXPECT(gbc.readMem(0xe7f7), 0x4b);
        EXPECT(gbc.readMem(0xe7f8), 0x75);
        // D2 0256
        gbc.setState(0x2f35, 0x49af, 0xb810, 0x494a, 0xf61d, 0x1ede, 0x1, 0x1);
        gbc.writeMem(0x2f35, { 0xd2, 0xce, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x49af);
        EXPECT(gbc.pc(), 0x2f38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 0257
        gbc.setState(0x8c35, 0x6ace, 0xc2a0, 0x97b6, 0xcb29, 0x27f4, 0x1, 0x0);
        gbc.writeMem(0x8c35, { 0xd2, 0xe4, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x6ace);
        EXPECT(gbc.pc(), 0x99e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c35), 0xd2);
        EXPECT(gbc.readMem(0x8c36), 0xe4);
        EXPECT(gbc.readMem(0x8c37), 0x99);
        // D2 0258
        gbc.setState(0x7235, 0xc618, 0xeee0, 0xa860, 0xa925, 0x40f3, 0x1, 0x1);
        gbc.writeMem(0x7235, { 0xd2, 0x1d, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xc618);
        EXPECT(gbc.pc(), 0x6a1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0259
        gbc.setState(0x5241, 0xeb26, 0x38d0, 0x410c, 0xd48a, 0x714e, 0x0, 0x1);
        gbc.writeMem(0x5241, { 0xd2, 0x77, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xeb26);
        EXPECT(gbc.pc(), 0x5244);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 025B
        gbc.setState(0x6549, 0xe8cf, 0x8dc0, 0xfbf2, 0xe23c, 0x5bb0, 0x1, 0x0);
        gbc.writeMem(0x6549, { 0xd2, 0x3d, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xe8cf);
        EXPECT(gbc.pc(), 0x543d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 025C
        gbc.setState(0x68d3, 0xf60a, 0xc4b0, 0x47a9, 0xe974, 0x5ad1, 0x0, 0x1);
        gbc.writeMem(0x68d3, { 0xd2, 0xb4, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xf60a);
        EXPECT(gbc.pc(), 0x68d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 025D
        gbc.setState(0xe51d, 0xf2e2, 0x43b0, 0x94be, 0xe5c4, 0xc25e, 0x0, 0x0);
        gbc.writeMem(0xe51d, { 0xd2, 0xe3, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xf2e2);
        EXPECT(gbc.pc(), 0xe520);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe51d), 0xd2);
        EXPECT(gbc.readMem(0xe51e), 0xe3);
        EXPECT(gbc.readMem(0xe51f), 0x4a);
        // D2 025F
        gbc.setState(0xc424, 0x7f95, 0x1db0, 0x37b9, 0xb9dc, 0x4dcb, 0x1, 0x0);
        gbc.writeMem(0xc424, { 0xd2, 0x2d, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x7f95);
        EXPECT(gbc.pc(), 0xc427);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc424), 0xd2);
        EXPECT(gbc.readMem(0xc425), 0x2d);
        EXPECT(gbc.readMem(0xc426), 0x3);
        // D2 0260
        gbc.setState(0xb01e, 0x3fc7, 0xeb70, 0x6740, 0x4316, 0xdeb7, 0x1, 0x1);
        gbc.writeMem(0xb01e, { 0xd2, 0xe3, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x3fc7);
        EXPECT(gbc.pc(), 0xb021);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb01e), 0xd2);
        EXPECT(gbc.readMem(0xb01f), 0xe3);
        EXPECT(gbc.readMem(0xb020), 0x99);
        // D2 0261
        gbc.setState(0xbc05, 0x992e, 0x7b00, 0xf8a2, 0x1406, 0x2e00, 0x0, 0x0);
        gbc.writeMem(0xbc05, { 0xd2, 0x97, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x992e);
        EXPECT(gbc.pc(), 0x2c97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc05), 0xd2);
        EXPECT(gbc.readMem(0xbc06), 0x97);
        EXPECT(gbc.readMem(0xbc07), 0x2c);
        // D2 0262
        gbc.setState(0xb498, 0x38f3, 0x4c30, 0xf72a, 0xf451, 0xa260, 0x0, 0x0);
        gbc.writeMem(0xb498, { 0xd2, 0x9c, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x38f3);
        EXPECT(gbc.pc(), 0xb49b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb498), 0xd2);
        EXPECT(gbc.readMem(0xb499), 0x9c);
        EXPECT(gbc.readMem(0xb49a), 0xef);
        // D2 0263
        gbc.setState(0xec2d, 0x5ddf, 0x7210, 0xad78, 0xfa35, 0x69d, 0x0, 0x0);
        gbc.writeMem(0xec2d, { 0xd2, 0xd4, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x5ddf);
        EXPECT(gbc.pc(), 0xec30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec2d), 0xd2);
        EXPECT(gbc.readMem(0xec2e), 0xd4);
        EXPECT(gbc.readMem(0xec2f), 0x28);
        // D2 0264
        gbc.setState(0xbcac, 0xf95c, 0x96c0, 0x826e, 0xf152, 0xa426, 0x1, 0x0);
        gbc.writeMem(0xbcac, { 0xd2, 0x96, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xf95c);
        EXPECT(gbc.pc(), 0x1596);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcac), 0xd2);
        EXPECT(gbc.readMem(0xbcad), 0x96);
        EXPECT(gbc.readMem(0xbcae), 0x15);
        // D2 0265
        gbc.setState(0xd4ba, 0xeb0a, 0xe660, 0x8572, 0x291c, 0x3c8f, 0x0, 0x0);
        gbc.writeMem(0xd4ba, { 0xd2, 0x4b, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xeb0a);
        EXPECT(gbc.pc(), 0xb94b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4ba), 0xd2);
        EXPECT(gbc.readMem(0xd4bb), 0x4b);
        EXPECT(gbc.readMem(0xd4bc), 0xb9);
        // D2 0266
        gbc.setState(0xb8eb, 0xfdbf, 0x3a40, 0xd9e5, 0x3596, 0x488b, 0x1, 0x0);
        gbc.writeMem(0xb8eb, { 0xd2, 0x7f, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xfdbf);
        EXPECT(gbc.pc(), 0x57f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8eb), 0xd2);
        EXPECT(gbc.readMem(0xb8ec), 0x7f);
        EXPECT(gbc.readMem(0xb8ed), 0x5);
        // D2 0267
        gbc.setState(0x4d9, 0xf67c, 0x30, 0x449f, 0x3673, 0x8743, 0x0, 0x1);
        gbc.writeMem(0x4d9, { 0xd2, 0x77, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xf67c);
        EXPECT(gbc.pc(), 0x4dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0268
        gbc.setState(0xf25, 0x83d8, 0x7360, 0xd743, 0x2dc3, 0xbe8d, 0x1, 0x0);
        gbc.writeMem(0xf25, { 0xd2, 0x0, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x83d8);
        EXPECT(gbc.pc(), 0x2a00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0269
        gbc.setState(0xb979, 0xe3a3, 0xe7c0, 0x2368, 0x5ca3, 0x5ccb, 0x0, 0x0);
        gbc.writeMem(0xb979, { 0xd2, 0xea, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xe3a3);
        EXPECT(gbc.pc(), 0x90ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb979), 0xd2);
        EXPECT(gbc.readMem(0xb97a), 0xea);
        EXPECT(gbc.readMem(0xb97b), 0x90);
        // D2 026A
        gbc.setState(0x27e3, 0x11b, 0x1390, 0xf9f9, 0xee3e, 0xa5ea, 0x0, 0x0);
        gbc.writeMem(0x27e3, { 0xd2, 0xe4, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x11b);
        EXPECT(gbc.pc(), 0x27e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 026B
        gbc.setState(0x2ef9, 0xb717, 0xb4e0, 0x5b59, 0x67d1, 0xb4b4, 0x1, 0x1);
        gbc.writeMem(0x2ef9, { 0xd2, 0x62, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xb717);
        EXPECT(gbc.pc(), 0x9662);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 026C
        gbc.setState(0xd372, 0x1481, 0x5160, 0x38d3, 0xde73, 0xd57c, 0x1, 0x0);
        gbc.writeMem(0xd372, { 0xd2, 0xf4, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x1481);
        EXPECT(gbc.pc(), 0xc6f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd372), 0xd2);
        EXPECT(gbc.readMem(0xd373), 0xf4);
        EXPECT(gbc.readMem(0xd374), 0xc6);
        // D2 026D
        gbc.setState(0x8474, 0xd4a1, 0xd840, 0xdde9, 0x624b, 0x38af, 0x0, 0x0);
        gbc.writeMem(0x8474, { 0xd2, 0xd6, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xd4a1);
        EXPECT(gbc.pc(), 0xc4d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8474), 0xd2);
        EXPECT(gbc.readMem(0x8475), 0xd6);
        EXPECT(gbc.readMem(0x8476), 0xc4);
        // D2 026E
        gbc.setState(0xad50, 0x8706, 0x6fb0, 0x3a9c, 0xe3f1, 0xf68b, 0x0, 0x1);
        gbc.writeMem(0xad50, { 0xd2, 0x3f, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x8706);
        EXPECT(gbc.pc(), 0xad53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad50), 0xd2);
        EXPECT(gbc.readMem(0xad51), 0x3f);
        EXPECT(gbc.readMem(0xad52), 0xde);
        // D2 026F
        gbc.setState(0x635f, 0xa554, 0x83d0, 0xdf04, 0xcf31, 0xadbb, 0x1, 0x1);
        gbc.writeMem(0x635f, { 0xd2, 0xbd, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xa554);
        EXPECT(gbc.pc(), 0x6362);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 0270
        gbc.setState(0xd776, 0x461e, 0x9ea0, 0xf951, 0x2473, 0xa3d2, 0x1, 0x0);
        gbc.writeMem(0xd776, { 0xd2, 0x59, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x461e);
        EXPECT(gbc.pc(), 0x6959);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd776), 0xd2);
        EXPECT(gbc.readMem(0xd777), 0x59);
        EXPECT(gbc.readMem(0xd778), 0x69);
        // D2 0271
        gbc.setState(0xb694, 0x26b7, 0xc970, 0xcb75, 0x775c, 0x4703, 0x0, 0x0);
        gbc.writeMem(0xb694, { 0xd2, 0xb6, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x26b7);
        EXPECT(gbc.pc(), 0xb697);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb694), 0xd2);
        EXPECT(gbc.readMem(0xb695), 0xb6);
        EXPECT(gbc.readMem(0xb696), 0x14);
        // D2 0272
        gbc.setState(0x5623, 0xb3fb, 0xd3d0, 0xb5ab, 0xcce2, 0xc23f, 0x0, 0x0);
        gbc.writeMem(0x5623, { 0xd2, 0xd3, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xb3fb);
        EXPECT(gbc.pc(), 0x5626);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 0273
        gbc.setState(0x6d58, 0xc667, 0xe640, 0x681e, 0xdc9d, 0x132c, 0x1, 0x1);
        gbc.writeMem(0x6d58, { 0xd2, 0x4a, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xc667);
        EXPECT(gbc.pc(), 0x504a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 0274
        gbc.setState(0x9ced, 0xad96, 0xe050, 0x48e8, 0x5b6d, 0x2bac, 0x1, 0x1);
        gbc.writeMem(0x9ced, { 0xd2, 0x4d, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xad96);
        EXPECT(gbc.pc(), 0x9cf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ced), 0xd2);
        EXPECT(gbc.readMem(0x9cee), 0x4d);
        EXPECT(gbc.readMem(0x9cef), 0x91);
        // D2 0275
        gbc.setState(0xb3a2, 0x497d, 0xc510, 0x902b, 0x6244, 0x2f33, 0x1, 0x1);
        gbc.writeMem(0xb3a2, { 0xd2, 0xc1, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x497d);
        EXPECT(gbc.pc(), 0xb3a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3a2), 0xd2);
        EXPECT(gbc.readMem(0xb3a3), 0xc1);
        EXPECT(gbc.readMem(0xb3a4), 0xa2);
        // D2 0276
        gbc.setState(0x20c4, 0x8dca, 0xe570, 0x19b, 0x17, 0x917c, 0x1, 0x0);
        gbc.writeMem(0x20c4, { 0xd2, 0xfe, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x8dca);
        EXPECT(gbc.pc(), 0x20c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0277
        gbc.setState(0xe9c7, 0x449a, 0xfba0, 0x8117, 0x759c, 0xd32, 0x1, 0x1);
        gbc.writeMem(0xe9c7, { 0xd2, 0xcf, 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x449a);
        EXPECT(gbc.pc(), 0x37cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9c7), 0xd2);
        EXPECT(gbc.readMem(0xe9c8), 0xcf);
        EXPECT(gbc.readMem(0xe9c9), 0x37);
        // D2 0278
        gbc.setState(0x80b0, 0xdd15, 0x6370, 0xa30d, 0x3480, 0xd2ee, 0x1, 0x0);
        gbc.writeMem(0x80b0, { 0xd2, 0x7c, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xdd15);
        EXPECT(gbc.pc(), 0x80b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80b0), 0xd2);
        EXPECT(gbc.readMem(0x80b1), 0x7c);
        EXPECT(gbc.readMem(0x80b2), 0x24);
        // D2 0279
        gbc.setState(0x2229, 0x672f, 0x5300, 0xda0, 0x423a, 0x5f7f, 0x0, 0x1);
        gbc.writeMem(0x2229, { 0xd2, 0x52, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x672f);
        EXPECT(gbc.pc(), 0xb252);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 027A
        gbc.setState(0x7c5f, 0xe221, 0x30f0, 0x94e4, 0x7704, 0x86e5, 0x1, 0x0);
        gbc.writeMem(0x7c5f, { 0xd2, 0x11, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xe221);
        EXPECT(gbc.pc(), 0x7c62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 027B
        gbc.setState(0x752b, 0xf9b1, 0xe850, 0x3fc2, 0x7a82, 0x3375, 0x0, 0x0);
        gbc.writeMem(0x752b, { 0xd2, 0xd8, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xf9b1);
        EXPECT(gbc.pc(), 0x752e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 027C
        gbc.setState(0xa7a1, 0x86e2, 0xaf90, 0xd606, 0xc8eb, 0x1a59, 0x1, 0x0);
        gbc.writeMem(0xa7a1, { 0xd2, 0x98, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x86e2);
        EXPECT(gbc.pc(), 0xa7a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7a1), 0xd2);
        EXPECT(gbc.readMem(0xa7a2), 0x98);
        EXPECT(gbc.readMem(0xa7a3), 0x4e);
        // D2 027D
        gbc.setState(0x9749, 0x1b20, 0x2b00, 0xaea3, 0xe3f2, 0x736, 0x1, 0x0);
        gbc.writeMem(0x9749, { 0xd2, 0xba, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x1b20);
        EXPECT(gbc.pc(), 0xbba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9749), 0xd2);
        EXPECT(gbc.readMem(0x974a), 0xba);
        EXPECT(gbc.readMem(0x974b), 0xb);
        // D2 027E
        gbc.setState(0x38c0, 0x671d, 0x5040, 0x3cf9, 0xcb13, 0xd2bf, 0x0, 0x1);
        gbc.writeMem(0x38c0, { 0xd2, 0x94, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x671d);
        EXPECT(gbc.pc(), 0x1294);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 027F
        gbc.setState(0xf09, 0xae50, 0xbfb0, 0x180, 0x64c8, 0x789a, 0x0, 0x0);
        gbc.writeMem(0xf09, { 0xd2, 0x0, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xae50);
        EXPECT(gbc.pc(), 0xf0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0280
        gbc.setState(0xc59c, 0x9165, 0xb0d0, 0xf5d1, 0x8a7a, 0x5c8c, 0x1, 0x0);
        gbc.writeMem(0xc59c, { 0xd2, 0x4c, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x9165);
        EXPECT(gbc.pc(), 0xc59f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc59c), 0xd2);
        EXPECT(gbc.readMem(0xc59d), 0x4c);
        EXPECT(gbc.readMem(0xc59e), 0x36);
        // D2 0281
        gbc.setState(0x8afd, 0x788f, 0xd7b0, 0x8fd8, 0x4a7a, 0xbc4d, 0x0, 0x1);
        gbc.writeMem(0x8afd, { 0xd2, 0xab, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x788f);
        EXPECT(gbc.pc(), 0x8b00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8afd), 0xd2);
        EXPECT(gbc.readMem(0x8afe), 0xab);
        EXPECT(gbc.readMem(0x8aff), 0x57);
        // D2 0282
        gbc.setState(0x405a, 0x9d65, 0xc70, 0x9a29, 0x5df5, 0x3d01, 0x0, 0x0);
        gbc.writeMem(0x405a, { 0xd2, 0x61, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x9d65);
        EXPECT(gbc.pc(), 0x405d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0283
        gbc.setState(0x356c, 0x96bc, 0x4bf0, 0x5d95, 0xbe26, 0x48c6, 0x0, 0x0);
        gbc.writeMem(0x356c, { 0xd2, 0xe7, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x96bc);
        EXPECT(gbc.pc(), 0x356f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0284
        gbc.setState(0x8992, 0x5d1f, 0x8cf0, 0xacb1, 0xc928, 0x29f4, 0x1, 0x0);
        gbc.writeMem(0x8992, { 0xd2, 0xb9, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x5d1f);
        EXPECT(gbc.pc(), 0x8995);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8992), 0xd2);
        EXPECT(gbc.readMem(0x8993), 0xb9);
        EXPECT(gbc.readMem(0x8994), 0x3);
        // D2 0285
        gbc.setState(0xad16, 0xd3d4, 0x3780, 0x14e7, 0x3cc7, 0x8526, 0x0, 0x1);
        gbc.writeMem(0xad16, { 0xd2, 0xb4, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xd3d4);
        EXPECT(gbc.pc(), 0x7ab4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad16), 0xd2);
        EXPECT(gbc.readMem(0xad17), 0xb4);
        EXPECT(gbc.readMem(0xad18), 0x7a);
        // D2 0286
        gbc.setState(0x32ea, 0xb3de, 0x8fd0, 0xa40b, 0x9565, 0x6e66, 0x1, 0x0);
        gbc.writeMem(0x32ea, { 0xd2, 0x74, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xb3de);
        EXPECT(gbc.pc(), 0x32ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 0287
        gbc.setState(0x5264, 0xaf47, 0xdf10, 0x7231, 0xe75, 0x3de, 0x0, 0x1);
        gbc.writeMem(0x5264, { 0xd2, 0x53, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xaf47);
        EXPECT(gbc.pc(), 0x5267);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 0288
        gbc.setState(0x8d9f, 0x72a5, 0x78b0, 0x718c, 0xffa7, 0xfce6, 0x0, 0x0);
        gbc.writeMem(0x8d9f, { 0xd2, 0x89, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x72a5);
        EXPECT(gbc.pc(), 0x8da2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d9f), 0xd2);
        EXPECT(gbc.readMem(0x8da0), 0x89);
        EXPECT(gbc.readMem(0x8da1), 0x27);
        // D2 0289
        gbc.setState(0xd307, 0x3328, 0x330, 0xe5ea, 0x9361, 0x1c77, 0x0, 0x0);
        gbc.writeMem(0xd307, { 0xd2, 0xb4, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x3328);
        EXPECT(gbc.pc(), 0xd30a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd307), 0xd2);
        EXPECT(gbc.readMem(0xd308), 0xb4);
        EXPECT(gbc.readMem(0xd309), 0x2f);
        // D2 028B
        gbc.setState(0xb40c, 0xffd, 0x4e90, 0xe64e, 0xb9d, 0x20a6, 0x0, 0x1);
        gbc.writeMem(0xb40c, { 0xd2, 0x22, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xffd);
        EXPECT(gbc.pc(), 0xb40f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb40c), 0xd2);
        EXPECT(gbc.readMem(0xb40d), 0x22);
        EXPECT(gbc.readMem(0xb40e), 0x5f);
        // D2 028C
        gbc.setState(0x7a17, 0xa1c1, 0x480, 0x17ce, 0xb2e0, 0x13b6, 0x1, 0x1);
        gbc.writeMem(0x7a17, { 0xd2, 0x6d, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xa1c1);
        EXPECT(gbc.pc(), 0x416d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 028D
        gbc.setState(0x5394, 0xe426, 0xffa0, 0xff3, 0x2468, 0xf275, 0x0, 0x0);
        gbc.writeMem(0x5394, { 0xd2, 0xfa, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xe426);
        EXPECT(gbc.pc(), 0x6ffa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 028E
        gbc.setState(0x4098, 0x8d54, 0x4b40, 0x816, 0xb58d, 0xecf, 0x0, 0x1);
        gbc.writeMem(0x4098, { 0xd2, 0xf6, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x8d54);
        EXPECT(gbc.pc(), 0x78f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 028F
        gbc.setState(0x9690, 0xbc94, 0x76c0, 0xe0d0, 0x5bcb, 0x2faf, 0x1, 0x0);
        gbc.writeMem(0x9690, { 0xd2, 0x8d, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xbc94);
        EXPECT(gbc.pc(), 0x4a8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9690), 0xd2);
        EXPECT(gbc.readMem(0x9691), 0x8d);
        EXPECT(gbc.readMem(0x9692), 0x4a);
        // D2 0290
        gbc.setState(0x544f, 0x3bdc, 0x6ed0, 0x1f7a, 0x4e75, 0xadd1, 0x0, 0x0);
        gbc.writeMem(0x544f, { 0xd2, 0xa7, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x3bdc);
        EXPECT(gbc.pc(), 0x5452);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 0292
        gbc.setState(0x5edb, 0xeb0, 0xc360, 0x86ee, 0xb5d7, 0x6c57, 0x0, 0x1);
        gbc.writeMem(0x5edb, { 0xd2, 0x1b, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xeb0);
        EXPECT(gbc.pc(), 0xac1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0293
        gbc.setState(0x998e, 0x80d5, 0xf970, 0xe136, 0xb810, 0x3a76, 0x0, 0x1);
        gbc.writeMem(0x998e, { 0xd2, 0x11, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x80d5);
        EXPECT(gbc.pc(), 0x9991);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x998e), 0xd2);
        EXPECT(gbc.readMem(0x998f), 0x11);
        EXPECT(gbc.readMem(0x9990), 0xef);
        // D2 0294
        gbc.setState(0x4627, 0x94aa, 0x8ee0, 0xec00, 0xabb4, 0x712e, 0x1, 0x1);
        gbc.writeMem(0x4627, { 0xd2, 0x6d, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x94aa);
        EXPECT(gbc.pc(), 0x9e6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0295
        gbc.setState(0xd02, 0x9067, 0x8c30, 0x1f98, 0x1ca8, 0x3580, 0x1, 0x1);
        gbc.writeMem(0xd02, { 0xd2, 0x28, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x9067);
        EXPECT(gbc.pc(), 0xd05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0296
        gbc.setState(0x26a, 0x3608, 0x6b20, 0x7da1, 0x4dde, 0x3972, 0x1, 0x0);
        gbc.writeMem(0x26a, { 0xd2, 0xb3, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x3608);
        EXPECT(gbc.pc(), 0x9db3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0297
        gbc.setState(0xbcea, 0xf179, 0xc180, 0x9594, 0x672a, 0x4a3a, 0x1, 0x0);
        gbc.writeMem(0xbcea, { 0xd2, 0xd2, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xf179);
        EXPECT(gbc.pc(), 0xa2d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcea), 0xd2);
        EXPECT(gbc.readMem(0xbceb), 0xd2);
        EXPECT(gbc.readMem(0xbcec), 0xa2);
        // D2 0298
        gbc.setState(0xe4fe, 0xfb22, 0x47b0, 0x60, 0xf3be, 0x2f54, 0x0, 0x1);
        gbc.writeMem(0xe4fe, { 0xd2, 0x89, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xfb22);
        EXPECT(gbc.pc(), 0xe501);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4fe), 0xd2);
        EXPECT(gbc.readMem(0xe4ff), 0x89);
        EXPECT(gbc.readMem(0xe500), 0x75);
        // D2 0299
        gbc.setState(0x9ceb, 0x50d4, 0xe830, 0xd2fa, 0xb278, 0x6728, 0x0, 0x0);
        gbc.writeMem(0x9ceb, { 0xd2, 0xb2, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x50d4);
        EXPECT(gbc.pc(), 0x9cee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ceb), 0xd2);
        EXPECT(gbc.readMem(0x9cec), 0xb2);
        EXPECT(gbc.readMem(0x9ced), 0x3b);
        // D2 029A
        gbc.setState(0x4cb1, 0xb123, 0x1e0, 0x5c4b, 0xff1c, 0x460f, 0x0, 0x1);
        gbc.writeMem(0x4cb1, { 0xd2, 0x42, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xb123);
        EXPECT(gbc.pc(), 0xfb42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 029B
        gbc.setState(0xada7, 0xd540, 0x4350, 0xd393, 0xcf2d, 0x249c, 0x1, 0x1);
        gbc.writeMem(0xada7, { 0xd2, 0xc7, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xd540);
        EXPECT(gbc.pc(), 0xadaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xada7), 0xd2);
        EXPECT(gbc.readMem(0xada8), 0xc7);
        EXPECT(gbc.readMem(0xada9), 0x7f);
        // D2 029C
        gbc.setState(0x20f6, 0xd645, 0xda10, 0x68f0, 0x289b, 0xfd93, 0x1, 0x0);
        gbc.writeMem(0x20f6, { 0xd2, 0x9, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xd645);
        EXPECT(gbc.pc(), 0x20f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 029D
        gbc.setState(0x5d4d, 0x3934, 0x2fc0, 0x944c, 0x4520, 0x5f8b, 0x0, 0x0);
        gbc.writeMem(0x5d4d, { 0xd2, 0xaf, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x3934);
        EXPECT(gbc.pc(), 0x8daf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 029E
        gbc.setState(0x5444, 0x4c88, 0x4b20, 0x2eed, 0xd7fd, 0xaaa2, 0x0, 0x1);
        gbc.writeMem(0x5444, { 0xd2, 0x11, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x4c88);
        EXPECT(gbc.pc(), 0x5711);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 029F
        gbc.setState(0x6c96, 0xfc0d, 0x2390, 0x7af1, 0xf068, 0xef22, 0x1, 0x1);
        gbc.writeMem(0x6c96, { 0xd2, 0x62, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xfc0d);
        EXPECT(gbc.pc(), 0x6c99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 02A0
        gbc.setState(0x291a, 0x7b56, 0xa9a0, 0xc743, 0x794f, 0x4489, 0x0, 0x1);
        gbc.writeMem(0x291a, { 0xd2, 0xa5, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x7b56);
        EXPECT(gbc.pc(), 0xbba5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 02A1
        gbc.setState(0xee1b, 0x3a41, 0xd170, 0xf5be, 0x9d4b, 0x61c0, 0x1, 0x0);
        gbc.writeMem(0xee1b, { 0xd2, 0x85, 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x3a41);
        EXPECT(gbc.pc(), 0xee1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee1b), 0xd2);
        EXPECT(gbc.readMem(0xee1c), 0x85);
        EXPECT(gbc.readMem(0xee1d), 0x35);
        // D2 02A2
        gbc.setState(0x5968, 0x3664, 0x30c0, 0x1716, 0xb86c, 0xed48, 0x1, 0x1);
        gbc.writeMem(0x5968, { 0xd2, 0xbe, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x3664);
        EXPECT(gbc.pc(), 0xdbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 02A3
        gbc.setState(0x68f4, 0x7635, 0xcd60, 0xc830, 0xa6a8, 0x29b4, 0x0, 0x0);
        gbc.writeMem(0x68f4, { 0xd2, 0x42, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x7635);
        EXPECT(gbc.pc(), 0x1942);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 02A4
        gbc.setState(0x9b0e, 0x2c1f, 0xb5b0, 0x8597, 0x13e5, 0xaf22, 0x0, 0x1);
        gbc.writeMem(0x9b0e, { 0xd2, 0x2, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x2c1f);
        EXPECT(gbc.pc(), 0x9b11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b0e), 0xd2);
        EXPECT(gbc.readMem(0x9b0f), 0x2);
        EXPECT(gbc.readMem(0x9b10), 0x38);
        // D2 02A5
        gbc.setState(0x8238, 0xb309, 0x3590, 0xd6e1, 0x573b, 0x9437, 0x0, 0x1);
        gbc.writeMem(0x8238, { 0xd2, 0xfd, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xb309);
        EXPECT(gbc.pc(), 0x823b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8238), 0xd2);
        EXPECT(gbc.readMem(0x8239), 0xfd);
        EXPECT(gbc.readMem(0x823a), 0x1a);
        // D2 02A6
        gbc.setState(0x60c5, 0x98d0, 0xf0f0, 0x5bad, 0xa13d, 0x9b64, 0x1, 0x0);
        gbc.writeMem(0x60c5, { 0xd2, 0xfc, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x98d0);
        EXPECT(gbc.pc(), 0x60c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 02A7
        gbc.setState(0x652, 0x4c13, 0x6870, 0x8b2f, 0x5287, 0x957, 0x1, 0x1);
        gbc.writeMem(0x652, { 0xd2, 0xff, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x4c13);
        EXPECT(gbc.pc(), 0x655);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 02A8
        gbc.setState(0x7807, 0xbb15, 0xe0, 0x4862, 0x343f, 0x961d, 0x0, 0x1);
        gbc.writeMem(0x7807, { 0xd2, 0x2, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xbb15);
        EXPECT(gbc.pc(), 0x7402);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 02A9
        gbc.setState(0xa2b7, 0x1ed, 0xabe0, 0xd706, 0xb250, 0xcbe6, 0x1, 0x0);
        gbc.writeMem(0xa2b7, { 0xd2, 0xc4, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x1ed);
        EXPECT(gbc.pc(), 0xb5c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2b7), 0xd2);
        EXPECT(gbc.readMem(0xa2b8), 0xc4);
        EXPECT(gbc.readMem(0xa2b9), 0xb5);
        // D2 02AA
        gbc.setState(0x21a3, 0xb932, 0xafa0, 0xda15, 0xa335, 0xb771, 0x0, 0x1);
        gbc.writeMem(0x21a3, { 0xd2, 0x48, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xb932);
        EXPECT(gbc.pc(), 0xc848);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 02AB
        gbc.setState(0x6acb, 0x2810, 0xe0, 0xa645, 0xbec0, 0xd5cf, 0x0, 0x0);
        gbc.writeMem(0x6acb, { 0xd2, 0x7f, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x2810);
        EXPECT(gbc.pc(), 0x897f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 02AC
        gbc.setState(0x7d2e, 0xfe14, 0x8e40, 0x5638, 0xf0, 0x2b79, 0x1, 0x1);
        gbc.writeMem(0x7d2e, { 0xd2, 0xa0, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xfe14);
        EXPECT(gbc.pc(), 0x98a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 02AD
        gbc.setState(0x98e7, 0x20e2, 0xb550, 0xe657, 0x3a05, 0x3328, 0x0, 0x0);
        gbc.writeMem(0x98e7, { 0xd2, 0xb, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x20e2);
        EXPECT(gbc.pc(), 0x98ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98e7), 0xd2);
        EXPECT(gbc.readMem(0x98e8), 0xb);
        EXPECT(gbc.readMem(0x98e9), 0xe);
        // D2 02AE
        gbc.setState(0x9329, 0x80d5, 0xe270, 0x29b0, 0xc243, 0xcbd4, 0x1, 0x1);
        gbc.writeMem(0x9329, { 0xd2, 0x55, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x80d5);
        EXPECT(gbc.pc(), 0x932c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9329), 0xd2);
        EXPECT(gbc.readMem(0x932a), 0x55);
        EXPECT(gbc.readMem(0x932b), 0xb1);
        // D2 02AF
        gbc.setState(0xa655, 0x5869, 0x5590, 0xf72c, 0xeb7c, 0x82df, 0x1, 0x1);
        gbc.writeMem(0xa655, { 0xd2, 0xa, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x5869);
        EXPECT(gbc.pc(), 0xa658);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa655), 0xd2);
        EXPECT(gbc.readMem(0xa656), 0xa);
        EXPECT(gbc.readMem(0xa657), 0x17);
        // D2 02B0
        gbc.setState(0x2e35, 0x49f0, 0xd830, 0x7c4c, 0xc694, 0x582b, 0x1, 0x1);
        gbc.writeMem(0x2e35, { 0xd2, 0x1b, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x49f0);
        EXPECT(gbc.pc(), 0x2e38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 02B1
        gbc.setState(0x21bf, 0xf733, 0x3390, 0xd95d, 0x1362, 0x8939, 0x0, 0x0);
        gbc.writeMem(0x21bf, { 0xd2, 0x5e, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xf733);
        EXPECT(gbc.pc(), 0x21c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 02B2
        gbc.setState(0xf2e, 0x7727, 0x11d0, 0x5e, 0x54ae, 0x7d12, 0x1, 0x0);
        gbc.writeMem(0xf2e, { 0xd2, 0x10, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x7727);
        EXPECT(gbc.pc(), 0xf31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 02B3
        gbc.setState(0xb515, 0xc2c9, 0xa80, 0x78e5, 0xb4de, 0x8812, 0x1, 0x0);
        gbc.writeMem(0xb515, { 0xd2, 0x4, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xc2c9);
        EXPECT(gbc.pc(), 0x8904);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb515), 0xd2);
        EXPECT(gbc.readMem(0xb516), 0x4);
        EXPECT(gbc.readMem(0xb517), 0x89);
        // D2 02B4
        gbc.setState(0xb839, 0x457f, 0x7830, 0x55b9, 0x74fa, 0xf4ef, 0x1, 0x0);
        gbc.writeMem(0xb839, { 0xd2, 0xa2, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x457f);
        EXPECT(gbc.pc(), 0xb83c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb839), 0xd2);
        EXPECT(gbc.readMem(0xb83a), 0xa2);
        EXPECT(gbc.readMem(0xb83b), 0xf);
        // D2 02B6
        gbc.setState(0xa19c, 0x6d82, 0x37b0, 0x949c, 0xa08b, 0x9ba8, 0x1, 0x1);
        gbc.writeMem(0xa19c, { 0xd2, 0xc3, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x6d82);
        EXPECT(gbc.pc(), 0xa19f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa19c), 0xd2);
        EXPECT(gbc.readMem(0xa19d), 0xc3);
        EXPECT(gbc.readMem(0xa19e), 0xea);
        // D2 02B7
        gbc.setState(0xbc68, 0x11d0, 0x3fc0, 0xfd1e, 0x6429, 0x32e3, 0x1, 0x1);
        gbc.writeMem(0xbc68, { 0xd2, 0x5b, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x11d0);
        EXPECT(gbc.pc(), 0xa95b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc68), 0xd2);
        EXPECT(gbc.readMem(0xbc69), 0x5b);
        EXPECT(gbc.readMem(0xbc6a), 0xa9);
        // D2 02B9
        gbc.setState(0xc389, 0x91fe, 0x190, 0x3130, 0xbbc3, 0x5750, 0x1, 0x0);
        gbc.writeMem(0xc389, { 0xd2, 0xd8, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x91fe);
        EXPECT(gbc.pc(), 0xc38c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc389), 0xd2);
        EXPECT(gbc.readMem(0xc38a), 0xd8);
        EXPECT(gbc.readMem(0xc38b), 0x9d);
        // D2 02BB
        gbc.setState(0x769b, 0x4e4a, 0xb250, 0xce1, 0x7fd0, 0xa609, 0x1, 0x0);
        gbc.writeMem(0x769b, { 0xd2, 0x7d, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x4e4a);
        EXPECT(gbc.pc(), 0x769e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 02BC
        gbc.setState(0x25db, 0x3442, 0xb700, 0x4813, 0x26e0, 0x13b6, 0x1, 0x0);
        gbc.writeMem(0x25db, { 0xd2, 0x4e, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x3442);
        EXPECT(gbc.pc(), 0x24e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 02BD
        gbc.setState(0x1141, 0x4b1d, 0x1e0, 0x5734, 0xc891, 0xc22c, 0x0, 0x0);
        gbc.writeMem(0x1141, { 0xd2, 0xca, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x4b1d);
        EXPECT(gbc.pc(), 0xeaca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 02BE
        gbc.setState(0x72cb, 0x972f, 0x83b0, 0xf020, 0xbeed, 0xadb2, 0x1, 0x1);
        gbc.writeMem(0x72cb, { 0xd2, 0xad, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x972f);
        EXPECT(gbc.pc(), 0x72ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 02BF
        gbc.setState(0xdee9, 0x8612, 0x6f60, 0x8207, 0xf689, 0xc0ba, 0x1, 0x1);
        gbc.writeMem(0xdee9, { 0xd2, 0x23, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x8612);
        EXPECT(gbc.pc(), 0x9523);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdee9), 0xd2);
        EXPECT(gbc.readMem(0xdeea), 0x23);
        EXPECT(gbc.readMem(0xdeeb), 0x95);
        // D2 02C0
        gbc.setState(0xccae, 0x94b9, 0xe8f0, 0x9ced, 0x4af6, 0xa337, 0x0, 0x0);
        gbc.writeMem(0xccae, { 0xd2, 0x26, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x94b9);
        EXPECT(gbc.pc(), 0xccb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccae), 0xd2);
        EXPECT(gbc.readMem(0xccaf), 0x26);
        EXPECT(gbc.readMem(0xccb0), 0xb8);
        // D2 02C1
        gbc.setState(0x6ffe, 0x6365, 0x170, 0xfc22, 0x6b84, 0xebf7, 0x0, 0x0);
        gbc.writeMem(0x6ffe, { 0xd2, 0x41, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x6365);
        EXPECT(gbc.pc(), 0x7001);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 02C2
        gbc.setState(0x6351, 0x4fc8, 0x51d0, 0x89da, 0x8286, 0x8825, 0x0, 0x1);
        gbc.writeMem(0x6351, { 0xd2, 0x8a, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x4fc8);
        EXPECT(gbc.pc(), 0x6354);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 02C4
        gbc.setState(0xc5a9, 0x2a52, 0x7e80, 0x7cb1, 0xcbec, 0xcd26, 0x1, 0x1);
        gbc.writeMem(0xc5a9, { 0xd2, 0x3b, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x2a52);
        EXPECT(gbc.pc(), 0xc63b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5a9), 0xd2);
        EXPECT(gbc.readMem(0xc5aa), 0x3b);
        EXPECT(gbc.readMem(0xc5ab), 0xc6);
        // D2 02C6
        gbc.setState(0x46b6, 0xbbf8, 0x1a90, 0x42bc, 0x510d, 0xadf6, 0x0, 0x0);
        gbc.writeMem(0x46b6, { 0xd2, 0x54, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xbbf8);
        EXPECT(gbc.pc(), 0x46b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 02C7
        gbc.setState(0xa5cc, 0xcdce, 0xf0d0, 0xe2f2, 0x3f3c, 0xdb9b, 0x0, 0x0);
        gbc.writeMem(0xa5cc, { 0xd2, 0x47, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xcdce);
        EXPECT(gbc.pc(), 0xa5cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5cc), 0xd2);
        EXPECT(gbc.readMem(0xa5cd), 0x47);
        EXPECT(gbc.readMem(0xa5ce), 0xfd);
        // D2 02C8
        gbc.setState(0x83f4, 0xaa8d, 0xee0, 0xea04, 0xbbda, 0xe1cf, 0x1, 0x0);
        gbc.writeMem(0x83f4, { 0xd2, 0x34, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xaa8d);
        EXPECT(gbc.pc(), 0xee34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83f4), 0xd2);
        EXPECT(gbc.readMem(0x83f5), 0x34);
        EXPECT(gbc.readMem(0x83f6), 0xee);
        // D2 02C9
        gbc.setState(0x4df2, 0xbcd8, 0xf700, 0x6a5, 0x5385, 0x5c0d, 0x1, 0x0);
        gbc.writeMem(0x4df2, { 0xd2, 0xf7, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xbcd8);
        EXPECT(gbc.pc(), 0xd9f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 02CA
        gbc.setState(0xc80f, 0xa0a6, 0xaa70, 0x305c, 0x605b, 0x7ea6, 0x1, 0x0);
        gbc.writeMem(0xc80f, { 0xd2, 0x6f, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xa0a6);
        EXPECT(gbc.pc(), 0xc812);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc80f), 0xd2);
        EXPECT(gbc.readMem(0xc810), 0x6f);
        EXPECT(gbc.readMem(0xc811), 0x13);
        // D2 02CB
        gbc.setState(0xb35, 0x33a8, 0x41a0, 0xbd23, 0x1a78, 0x5d4c, 0x0, 0x0);
        gbc.writeMem(0xb35, { 0xd2, 0xe6, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x33a8);
        EXPECT(gbc.pc(), 0x93e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 02CC
        gbc.setState(0xa47e, 0x687a, 0x26d0, 0xa602, 0xec99, 0x432c, 0x0, 0x1);
        gbc.writeMem(0xa47e, { 0xd2, 0x59, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x687a);
        EXPECT(gbc.pc(), 0xa481);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa47e), 0xd2);
        EXPECT(gbc.readMem(0xa47f), 0x59);
        EXPECT(gbc.readMem(0xa480), 0x91);
        // D2 02CD
        gbc.setState(0x7829, 0xdab8, 0x8b50, 0x646e, 0x3902, 0xb017, 0x0, 0x1);
        gbc.writeMem(0x7829, { 0xd2, 0xd8, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xdab8);
        EXPECT(gbc.pc(), 0x782c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 02CE
        gbc.setState(0x750c, 0x971f, 0x20d0, 0x4c88, 0xa1c9, 0x8a73, 0x0, 0x0);
        gbc.writeMem(0x750c, { 0xd2, 0x6c, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x971f);
        EXPECT(gbc.pc(), 0x750f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 02CF
        gbc.setState(0x7b8, 0xb87e, 0x5670, 0x79ea, 0x7f9c, 0x46ab, 0x1, 0x1);
        gbc.writeMem(0x7b8, { 0xd2, 0xee, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xb87e);
        EXPECT(gbc.pc(), 0x7bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 02D0
        gbc.setState(0xe9c7, 0x9b67, 0xb690, 0xd3a7, 0x8082, 0xbfd5, 0x1, 0x0);
        gbc.writeMem(0xe9c7, { 0xd2, 0xcf, 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x9b67);
        EXPECT(gbc.pc(), 0xe9ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9c7), 0xd2);
        EXPECT(gbc.readMem(0xe9c8), 0xcf);
        EXPECT(gbc.readMem(0xe9c9), 0x37);
        // D2 02D1
        gbc.setState(0x1f56, 0x6a1e, 0x2e60, 0x3ec8, 0x3185, 0x1267, 0x0, 0x0);
        gbc.writeMem(0x1f56, { 0xd2, 0xc6, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x6a1e);
        EXPECT(gbc.pc(), 0xc1c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 02D2
        gbc.setState(0x66e4, 0x107c, 0xc6e0, 0x90f8, 0x624, 0x2707, 0x0, 0x1);
        gbc.writeMem(0x66e4, { 0xd2, 0x49, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x107c);
        EXPECT(gbc.pc(), 0xde49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 02D3
        gbc.setState(0x2d4c, 0x83dc, 0xd6e0, 0x26b5, 0x850e, 0x9190, 0x0, 0x0);
        gbc.writeMem(0x2d4c, { 0xd2, 0xa7, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x83dc);
        EXPECT(gbc.pc(), 0xda7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 02D4
        gbc.setState(0x834a, 0x8574, 0x6fd0, 0xa8df, 0x33b, 0x191a, 0x0, 0x0);
        gbc.writeMem(0x834a, { 0xd2, 0x74, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x8574);
        EXPECT(gbc.pc(), 0x834d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x834a), 0xd2);
        EXPECT(gbc.readMem(0x834b), 0x74);
        EXPECT(gbc.readMem(0x834c), 0x7);
        // D2 02D5
        gbc.setState(0xde45, 0xf77b, 0xb6b0, 0xe9e9, 0x11df, 0xa594, 0x0, 0x1);
        gbc.writeMem(0xde45, { 0xd2, 0x24, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xf77b);
        EXPECT(gbc.pc(), 0xde48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde45), 0xd2);
        EXPECT(gbc.readMem(0xde46), 0x24);
        EXPECT(gbc.readMem(0xde47), 0x30);
        // D2 02D6
        gbc.setState(0x85ec, 0xf19f, 0x58c0, 0x4785, 0xbe7a, 0x890a, 0x0, 0x1);
        gbc.writeMem(0x85ec, { 0xd2, 0x4d, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xf19f);
        EXPECT(gbc.pc(), 0x8e4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85ec), 0xd2);
        EXPECT(gbc.readMem(0x85ed), 0x4d);
        EXPECT(gbc.readMem(0x85ee), 0x8e);
        // D2 02D7
        gbc.setState(0x8424, 0x130d, 0xb4d0, 0x85a6, 0x10f4, 0xc7c5, 0x0, 0x0);
        gbc.writeMem(0x8424, { 0xd2, 0x35, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x130d);
        EXPECT(gbc.pc(), 0x8427);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8424), 0xd2);
        EXPECT(gbc.readMem(0x8425), 0x35);
        EXPECT(gbc.readMem(0x8426), 0x46);
        // D2 02D8
        gbc.setState(0x3efb, 0xc1b5, 0xeee0, 0xb44d, 0x50f9, 0x6b10, 0x0, 0x0);
        gbc.writeMem(0x3efb, { 0xd2, 0xa2, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xc1b5);
        EXPECT(gbc.pc(), 0xf1a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 02D9
        gbc.setState(0x11e8, 0x90c0, 0x8390, 0x2d1a, 0x8789, 0x5ccc, 0x0, 0x1);
        gbc.writeMem(0x11e8, { 0xd2, 0xc6, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x90c0);
        EXPECT(gbc.pc(), 0x11eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 02DA
        gbc.setState(0x6a8, 0x680, 0xd680, 0xdfbd, 0xd2c5, 0xbfb9, 0x1, 0x1);
        gbc.writeMem(0x6a8, { 0xd2, 0x86, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x680);
        EXPECT(gbc.pc(), 0x5486);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 02DB
        gbc.setState(0x30be, 0xf472, 0x2330, 0x3551, 0x804e, 0x6669, 0x0, 0x0);
        gbc.writeMem(0x30be, { 0xd2, 0x1b, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xf472);
        EXPECT(gbc.pc(), 0x30c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 02DC
        gbc.setState(0xc968, 0xcdf7, 0x2190, 0xd280, 0x676b, 0xc207, 0x0, 0x1);
        gbc.writeMem(0xc968, { 0xd2, 0x20, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xcdf7);
        EXPECT(gbc.pc(), 0xc96b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc968), 0xd2);
        EXPECT(gbc.readMem(0xc969), 0x20);
        EXPECT(gbc.readMem(0xc96a), 0x7a);
        // D2 02DD
        gbc.setState(0x4406, 0x5757, 0x70e0, 0xa38e, 0x3378, 0x647a, 0x1, 0x0);
        gbc.writeMem(0x4406, { 0xd2, 0x34, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x5757);
        EXPECT(gbc.pc(), 0x9934);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 02DE
        gbc.setState(0xaa42, 0x816f, 0x68c0, 0x41f, 0x7d1c, 0x42a2, 0x0, 0x0);
        gbc.writeMem(0xaa42, { 0xd2, 0x3, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x816f);
        EXPECT(gbc.pc(), 0xe303);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa42), 0xd2);
        EXPECT(gbc.readMem(0xaa43), 0x3);
        EXPECT(gbc.readMem(0xaa44), 0xe3);
        // D2 02DF
        gbc.setState(0xe2be, 0xd2c, 0xcc10, 0xe7a0, 0xad0b, 0xed52, 0x1, 0x1);
        gbc.writeMem(0xe2be, { 0xd2, 0x28, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xd2c);
        EXPECT(gbc.pc(), 0xe2c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2be), 0xd2);
        EXPECT(gbc.readMem(0xe2bf), 0x28);
        EXPECT(gbc.readMem(0xe2c0), 0x31);
        // D2 02E0
        gbc.setState(0xdcf2, 0xeb4a, 0xca60, 0x6359, 0xee0d, 0x42c0, 0x0, 0x0);
        gbc.writeMem(0xdcf2, { 0xd2, 0x34, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xeb4a);
        EXPECT(gbc.pc(), 0x6934);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcf2), 0xd2);
        EXPECT(gbc.readMem(0xdcf3), 0x34);
        EXPECT(gbc.readMem(0xdcf4), 0x69);
        // D2 02E1
        gbc.setState(0x3566, 0xa8fc, 0x2b30, 0x4d6c, 0xfb50, 0xf313, 0x0, 0x0);
        gbc.writeMem(0x3566, { 0xd2, 0x61, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xa8fc);
        EXPECT(gbc.pc(), 0x3569);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 02E2
        gbc.setState(0xc84d, 0x5791, 0x68c0, 0xbd1e, 0xac38, 0x4d00, 0x1, 0x0);
        gbc.writeMem(0xc84d, { 0xd2, 0x72, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x5791);
        EXPECT(gbc.pc(), 0x3172);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc84d), 0xd2);
        EXPECT(gbc.readMem(0xc84e), 0x72);
        EXPECT(gbc.readMem(0xc84f), 0x31);
        // D2 02E3
        gbc.setState(0xb3cf, 0x63a4, 0x7e90, 0x50df, 0x8bcc, 0x6374, 0x0, 0x0);
        gbc.writeMem(0xb3cf, { 0xd2, 0xca, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x63a4);
        EXPECT(gbc.pc(), 0xb3d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3cf), 0xd2);
        EXPECT(gbc.readMem(0xb3d0), 0xca);
        EXPECT(gbc.readMem(0xb3d1), 0xa3);
        // D2 02E4
        gbc.setState(0x445c, 0xb5b6, 0x9cf0, 0xf8dc, 0xf73c, 0x59fd, 0x1, 0x0);
        gbc.writeMem(0x445c, { 0xd2, 0xc9, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xb5b6);
        EXPECT(gbc.pc(), 0x445f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 02E5
        gbc.setState(0x3115, 0xf1f6, 0x7c90, 0xd064, 0xeb3b, 0xa809, 0x0, 0x1);
        gbc.writeMem(0x3115, { 0xd2, 0xa0, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xf1f6);
        EXPECT(gbc.pc(), 0x3118);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 02E6
        gbc.setState(0x90c6, 0x4a4e, 0xf710, 0x15d4, 0x174e, 0xb54c, 0x0, 0x1);
        gbc.writeMem(0x90c6, { 0xd2, 0xaf, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x4a4e);
        EXPECT(gbc.pc(), 0x90c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90c6), 0xd2);
        EXPECT(gbc.readMem(0x90c7), 0xaf);
        EXPECT(gbc.readMem(0x90c8), 0x23);
        // D2 02E7
        gbc.setState(0xb0ae, 0x907a, 0x1ef0, 0x983a, 0x50eb, 0x45d3, 0x0, 0x0);
        gbc.writeMem(0xb0ae, { 0xd2, 0xdd, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x907a);
        EXPECT(gbc.pc(), 0xb0b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0ae), 0xd2);
        EXPECT(gbc.readMem(0xb0af), 0xdd);
        EXPECT(gbc.readMem(0xb0b0), 0xa3);
        // D2 02E8
        gbc.setState(0xc945, 0x88ea, 0x6e70, 0xcc80, 0x8187, 0xf6b, 0x0, 0x1);
        gbc.writeMem(0xc945, { 0xd2, 0xa, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x88ea);
        EXPECT(gbc.pc(), 0xc948);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc945), 0xd2);
        EXPECT(gbc.readMem(0xc946), 0xa);
        EXPECT(gbc.readMem(0xc947), 0x9d);
        // D2 02E9
        gbc.setState(0x5c71, 0x4cb9, 0xa100, 0x1152, 0x7012, 0xc552, 0x0, 0x1);
        gbc.writeMem(0x5c71, { 0xd2, 0xfa, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x4cb9);
        EXPECT(gbc.pc(), 0xd5fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 02EB
        gbc.setState(0x3d05, 0x24e0, 0xd690, 0x9df1, 0xbba4, 0x9ea8, 0x0, 0x0);
        gbc.writeMem(0x3d05, { 0xd2, 0x5d, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x24e0);
        EXPECT(gbc.pc(), 0x3d08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 02EC
        gbc.setState(0x6cdc, 0xbe2, 0xd6c0, 0x4450, 0x4529, 0x5967, 0x1, 0x0);
        gbc.writeMem(0x6cdc, { 0xd2, 0xf5, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xbe2);
        EXPECT(gbc.pc(), 0x1ff5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 02ED
        gbc.setState(0x3c72, 0xf17f, 0x1550, 0x401a, 0x164b, 0xc1ce, 0x1, 0x0);
        gbc.writeMem(0x3c72, { 0xd2, 0x4d, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xf17f);
        EXPECT(gbc.pc(), 0x3c75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 02EE
        gbc.setState(0xa1bc, 0x7cba, 0xc0a0, 0xec82, 0x3479, 0x738b, 0x0, 0x1);
        gbc.writeMem(0xa1bc, { 0xd2, 0x95, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x7cba);
        EXPECT(gbc.pc(), 0x9195);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1bc), 0xd2);
        EXPECT(gbc.readMem(0xa1bd), 0x95);
        EXPECT(gbc.readMem(0xa1be), 0x91);
        // D2 02EF
        gbc.setState(0x563a, 0xd593, 0xffe0, 0xb646, 0x396, 0xf3b9, 0x0, 0x1);
        gbc.writeMem(0x563a, { 0xd2, 0xc3, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xd593);
        EXPECT(gbc.pc(), 0xa6c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 02F0
        gbc.setState(0x7ea3, 0x845c, 0xeaf0, 0xea3e, 0xe670, 0x16f3, 0x0, 0x1);
        gbc.writeMem(0x7ea3, { 0xd2, 0x1c, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x845c);
        EXPECT(gbc.pc(), 0x7ea6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 02F1
        gbc.setState(0xb388, 0xb6b5, 0x9c50, 0xc332, 0x56ba, 0xab25, 0x0, 0x0);
        gbc.writeMem(0xb388, { 0xd2, 0x5f, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xb6b5);
        EXPECT(gbc.pc(), 0xb38b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb388), 0xd2);
        EXPECT(gbc.readMem(0xb389), 0x5f);
        EXPECT(gbc.readMem(0xb38a), 0xf5);
        // D2 02F2
        gbc.setState(0xbbbe, 0x2d0c, 0xbf50, 0xc9ef, 0xe037, 0x32ed, 0x1, 0x0);
        gbc.writeMem(0xbbbe, { 0xd2, 0xa5, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x2d0c);
        EXPECT(gbc.pc(), 0xbbc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbbe), 0xd2);
        EXPECT(gbc.readMem(0xbbbf), 0xa5);
        EXPECT(gbc.readMem(0xbbc0), 0xf8);
        // D2 02F3
        gbc.setState(0x1ec9, 0xea99, 0x1c40, 0xb2c8, 0x82a6, 0xc137, 0x1, 0x0);
        gbc.writeMem(0x1ec9, { 0xd2, 0x0, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xea99);
        EXPECT(gbc.pc(), 0x8500);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 02F4
        gbc.setState(0x7156, 0xf9b1, 0x7ff0, 0x379d, 0x779a, 0xe3ce, 0x0, 0x1);
        gbc.writeMem(0x7156, { 0xd2, 0xe5, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xf9b1);
        EXPECT(gbc.pc(), 0x7159);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 02F6
        gbc.setState(0x28cb, 0xac93, 0x6920, 0x865b, 0xf0d5, 0x153b, 0x1, 0x1);
        gbc.writeMem(0x28cb, { 0xd2, 0x86, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xac93);
        EXPECT(gbc.pc(), 0x1786);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 02F7
        gbc.setState(0x7b57, 0x1d9c, 0xde70, 0x7365, 0x926, 0x56ce, 0x1, 0x0);
        gbc.writeMem(0x7b57, { 0xd2, 0x70, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x1d9c);
        EXPECT(gbc.pc(), 0x7b5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 02F8
        gbc.setState(0xecf, 0x4aac, 0xbbd0, 0x2051, 0xae89, 0x9690, 0x0, 0x0);
        gbc.writeMem(0xecf, { 0xd2, 0x17, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x4aac);
        EXPECT(gbc.pc(), 0xed2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 02F9
        gbc.setState(0x1af6, 0xde71, 0x4630, 0xc66e, 0x7058, 0xfa7e, 0x0, 0x0);
        gbc.writeMem(0x1af6, { 0xd2, 0xfc, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xde71);
        EXPECT(gbc.pc(), 0x1af9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 02FA
        gbc.setState(0x1f41, 0x2a8a, 0xa500, 0x18c9, 0xe0ce, 0xfe45, 0x1, 0x1);
        gbc.writeMem(0x1f41, { 0xd2, 0xd9, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x2a8a);
        EXPECT(gbc.pc(), 0x66d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 02FB
        gbc.setState(0x302, 0xf4dd, 0xba40, 0x53af, 0xf0cb, 0xbd7, 0x0, 0x1);
        gbc.writeMem(0x302, { 0xd2, 0x9f, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xf4dd);
        EXPECT(gbc.pc(), 0xb79f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 02FD
        gbc.setState(0x7a2a, 0x9ad4, 0x13f0, 0x8c53, 0xde28, 0xa74b, 0x1, 0x0);
        gbc.writeMem(0x7a2a, { 0xd2, 0x59, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x9ad4);
        EXPECT(gbc.pc(), 0x7a2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 02FE
        gbc.setState(0x1812, 0xbb3b, 0xd6d0, 0x5577, 0x503, 0xbab4, 0x1, 0x0);
        gbc.writeMem(0x1812, { 0xd2, 0xe, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xbb3b);
        EXPECT(gbc.pc(), 0x1815);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 02FF
        gbc.setState(0x94da, 0x130d, 0xd990, 0x3a9b, 0x35f7, 0xc24f, 0x1, 0x1);
        gbc.writeMem(0x94da, { 0xd2, 0x83, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x130d);
        EXPECT(gbc.pc(), 0x94dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94da), 0xd2);
        EXPECT(gbc.readMem(0x94db), 0x83);
        EXPECT(gbc.readMem(0x94dc), 0x18);
        // D2 0300
        gbc.setState(0x3843, 0x2dda, 0x2330, 0x3ce3, 0xb2db, 0x9924, 0x0, 0x0);
        gbc.writeMem(0x3843, { 0xd2, 0x76, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x2dda);
        EXPECT(gbc.pc(), 0x3846);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0301
        gbc.setState(0x4f9, 0xcbb3, 0xe540, 0xe7ba, 0xb71c, 0xdff2, 0x0, 0x1);
        gbc.writeMem(0x4f9, { 0xd2, 0x2a, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xcbb3);
        EXPECT(gbc.pc(), 0xa22a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 0302
        gbc.setState(0xd31d, 0xd12a, 0x4b20, 0xe766, 0x7fe1, 0xfc7b, 0x1, 0x0);
        gbc.writeMem(0xd31d, { 0xd2, 0xac, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xd12a);
        EXPECT(gbc.pc(), 0x21ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd31d), 0xd2);
        EXPECT(gbc.readMem(0xd31e), 0xac);
        EXPECT(gbc.readMem(0xd31f), 0x21);
        // D2 0303
        gbc.setState(0x8c74, 0x81ba, 0x35c0, 0xa914, 0xc887, 0xf2a1, 0x0, 0x1);
        gbc.writeMem(0x8c74, { 0xd2, 0x33, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x81ba);
        EXPECT(gbc.pc(), 0xad33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c74), 0xd2);
        EXPECT(gbc.readMem(0x8c75), 0x33);
        EXPECT(gbc.readMem(0x8c76), 0xad);
        // D2 0304
        gbc.setState(0xe1f4, 0x1284, 0xe630, 0x74bc, 0xa77f, 0x9578, 0x1, 0x1);
        gbc.writeMem(0xe1f4, { 0xd2, 0xa3, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x1284);
        EXPECT(gbc.pc(), 0xe1f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1f4), 0xd2);
        EXPECT(gbc.readMem(0xe1f5), 0xa3);
        EXPECT(gbc.readMem(0xe1f6), 0xdc);
        // D2 0305
        gbc.setState(0xecbf, 0x7635, 0xcf00, 0x4fd3, 0x848d, 0x95e9, 0x0, 0x0);
        gbc.writeMem(0xecbf, { 0xd2, 0xe9, 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x7635);
        EXPECT(gbc.pc(), 0x5ce9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecbf), 0xd2);
        EXPECT(gbc.readMem(0xecc0), 0xe9);
        EXPECT(gbc.readMem(0xecc1), 0x5c);
        // D2 0306
        gbc.setState(0x6ea8, 0xbde3, 0xb120, 0x88b1, 0xdee9, 0x7eb3, 0x1, 0x0);
        gbc.writeMem(0x6ea8, { 0xd2, 0xdf, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xbde3);
        EXPECT(gbc.pc(), 0x2fdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0307
        gbc.setState(0xc35d, 0xfab6, 0x8eb0, 0x35c2, 0x4b1b, 0x850f, 0x1, 0x0);
        gbc.writeMem(0xc35d, { 0xd2, 0xf6, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xfab6);
        EXPECT(gbc.pc(), 0xc360);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc35d), 0xd2);
        EXPECT(gbc.readMem(0xc35e), 0xf6);
        EXPECT(gbc.readMem(0xc35f), 0x57);
        // D2 0308
        gbc.setState(0xa4d7, 0xd341, 0x6150, 0x380b, 0xd2b3, 0xac98, 0x0, 0x0);
        gbc.writeMem(0xa4d7, { 0xd2, 0x24, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xd341);
        EXPECT(gbc.pc(), 0xa4da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4d7), 0xd2);
        EXPECT(gbc.readMem(0xa4d8), 0x24);
        EXPECT(gbc.readMem(0xa4d9), 0x83);
        // D2 030A
        gbc.setState(0xccb4, 0x25f1, 0x71a0, 0x5649, 0x3511, 0x9452, 0x1, 0x1);
        gbc.writeMem(0xccb4, { 0xd2, 0x16, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x25f1);
        EXPECT(gbc.pc(), 0xd916);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccb4), 0xd2);
        EXPECT(gbc.readMem(0xccb5), 0x16);
        EXPECT(gbc.readMem(0xccb6), 0xd9);
        // D2 030B
        gbc.setState(0x8e77, 0x613b, 0x7450, 0x3d74, 0x88f1, 0x247c, 0x1, 0x0);
        gbc.writeMem(0x8e77, { 0xd2, 0xc, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x613b);
        EXPECT(gbc.pc(), 0x8e7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e77), 0xd2);
        EXPECT(gbc.readMem(0x8e78), 0xc);
        EXPECT(gbc.readMem(0x8e79), 0xb2);
        // D2 030C
        gbc.setState(0x3b83, 0x2421, 0x9860, 0x86fc, 0x7dc5, 0x7a55, 0x0, 0x1);
        gbc.writeMem(0x3b83, { 0xd2, 0xb2, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x2421);
        EXPECT(gbc.pc(), 0x94b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 030D
        gbc.setState(0xa930, 0x6bbb, 0xb170, 0xb87a, 0xe1d6, 0xdaac, 0x1, 0x1);
        gbc.writeMem(0xa930, { 0xd2, 0xdc, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x6bbb);
        EXPECT(gbc.pc(), 0xa933);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa930), 0xd2);
        EXPECT(gbc.readMem(0xa931), 0xdc);
        EXPECT(gbc.readMem(0xa932), 0x42);
        // D2 030E
        gbc.setState(0x5742, 0xbe89, 0x1740, 0x6bec, 0xf116, 0xf568, 0x0, 0x1);
        gbc.writeMem(0x5742, { 0xd2, 0xd7, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xbe89);
        EXPECT(gbc.pc(), 0x20d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 030F
        gbc.setState(0x2d52, 0x6393, 0xa390, 0x5bd8, 0x868c, 0x8d42, 0x1, 0x1);
        gbc.writeMem(0x2d52, { 0xd2, 0x2f, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x6393);
        EXPECT(gbc.pc(), 0x2d55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 0310
        gbc.setState(0xd241, 0xbe23, 0xeb80, 0xc342, 0xc599, 0xfb02, 0x1, 0x1);
        gbc.writeMem(0xd241, { 0xd2, 0xb2, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xbe23);
        EXPECT(gbc.pc(), 0xddb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd241), 0xd2);
        EXPECT(gbc.readMem(0xd242), 0xb2);
        EXPECT(gbc.readMem(0xd243), 0xdd);
        // D2 0311
        gbc.setState(0x77d1, 0x345a, 0xc690, 0x174e, 0xa58c, 0xf234, 0x1, 0x0);
        gbc.writeMem(0x77d1, { 0xd2, 0x3a, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x345a);
        EXPECT(gbc.pc(), 0x77d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 0312
        gbc.setState(0x2352, 0xa681, 0x1bc0, 0x7c1e, 0xb0e, 0xd427, 0x1, 0x0);
        gbc.writeMem(0x2352, { 0xd2, 0xdd, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xa681);
        EXPECT(gbc.pc(), 0x46dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 0313
        gbc.setState(0xd58b, 0x910b, 0x4e00, 0xea1, 0xaab4, 0xc8fd, 0x1, 0x1);
        gbc.writeMem(0xd58b, { 0xd2, 0x7a, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x910b);
        EXPECT(gbc.pc(), 0xf67a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd58b), 0xd2);
        EXPECT(gbc.readMem(0xd58c), 0x7a);
        EXPECT(gbc.readMem(0xd58d), 0xf6);
        // D2 0314
        gbc.setState(0xb21f, 0xa9ea, 0x7520, 0x20b3, 0x900a, 0x3704, 0x1, 0x0);
        gbc.writeMem(0xb21f, { 0xd2, 0xe9, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xa9ea);
        EXPECT(gbc.pc(), 0x1ae9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb21f), 0xd2);
        EXPECT(gbc.readMem(0xb220), 0xe9);
        EXPECT(gbc.readMem(0xb221), 0x1a);
        // D2 0315
        gbc.setState(0x6992, 0xed3c, 0xd1a0, 0xa566, 0x9c52, 0xe07e, 0x1, 0x0);
        gbc.writeMem(0x6992, { 0xd2, 0xa5, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xed3c);
        EXPECT(gbc.pc(), 0x1fa5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0316
        gbc.setState(0xa28, 0x596b, 0x1150, 0x7e53, 0x1f5c, 0xeb91, 0x0, 0x0);
        gbc.writeMem(0xa28, { 0xd2, 0xeb, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x596b);
        EXPECT(gbc.pc(), 0xa2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 0317
        gbc.setState(0x6e8e, 0x8a9, 0xbb50, 0x5375, 0xb5aa, 0x4639, 0x1, 0x0);
        gbc.writeMem(0x6e8e, { 0xd2, 0x6a, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x8a9);
        EXPECT(gbc.pc(), 0x6e91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 0318
        gbc.setState(0x20fd, 0x5025, 0x1290, 0x38f5, 0xf60b, 0x70ba, 0x0, 0x1);
        gbc.writeMem(0x20fd, { 0xd2, 0x99, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x5025);
        EXPECT(gbc.pc(), 0x2100);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 0319
        gbc.setState(0x1240, 0xeb6c, 0x9cb0, 0x52ff, 0xca43, 0x32d7, 0x1, 0x1);
        gbc.writeMem(0x1240, { 0xd2, 0x2d, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xeb6c);
        EXPECT(gbc.pc(), 0x1243);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 031A
        gbc.setState(0xe126, 0x20a6, 0xde40, 0x1433, 0x9153, 0xffc2, 0x1, 0x1);
        gbc.writeMem(0xe126, { 0xd2, 0x48, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x20a6);
        EXPECT(gbc.pc(), 0x4d48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe126), 0xd2);
        EXPECT(gbc.readMem(0xe127), 0x48);
        EXPECT(gbc.readMem(0xe128), 0x4d);
        // D2 031B
        gbc.setState(0x5571, 0xa4eb, 0xe30, 0xa2c1, 0x5dd7, 0x864, 0x1, 0x1);
        gbc.writeMem(0x5571, { 0xd2, 0x59, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xa4eb);
        EXPECT(gbc.pc(), 0x5574);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 031C
        gbc.setState(0x586d, 0x5cdd, 0xf160, 0x3a53, 0x7ea8, 0x29f4, 0x1, 0x1);
        gbc.writeMem(0x586d, { 0xd2, 0x28, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x5cdd);
        EXPECT(gbc.pc(), 0x5828);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 031D
        gbc.setState(0xfe7, 0xf932, 0x5e70, 0x15fa, 0xd767, 0xa7b9, 0x1, 0x0);
        gbc.writeMem(0xfe7, { 0xd2, 0xf5, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xf932);
        EXPECT(gbc.pc(), 0xfea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 031E
        gbc.setState(0x7e6c, 0xab88, 0x3290, 0x165b, 0x429e, 0x61e0, 0x1, 0x1);
        gbc.writeMem(0x7e6c, { 0xd2, 0xbb, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xab88);
        EXPECT(gbc.pc(), 0x7e6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 0320
        gbc.setState(0x14be, 0x7b8c, 0x5630, 0xc242, 0x43e8, 0x2d8a, 0x0, 0x0);
        gbc.writeMem(0x14be, { 0xd2, 0x71, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x7b8c);
        EXPECT(gbc.pc(), 0x14c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0321
        gbc.setState(0x44ad, 0xcec7, 0xf1a0, 0x7ac1, 0xc31a, 0x25a1, 0x1, 0x1);
        gbc.writeMem(0x44ad, { 0xd2, 0xb0, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xcec7);
        EXPECT(gbc.pc(), 0x92b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0323
        gbc.setState(0x9e3c, 0xae3e, 0x1d90, 0xeea, 0xbe69, 0x5181, 0x0, 0x1);
        gbc.writeMem(0x9e3c, { 0xd2, 0x72, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xae3e);
        EXPECT(gbc.pc(), 0x9e3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e3c), 0xd2);
        EXPECT(gbc.readMem(0x9e3d), 0x72);
        EXPECT(gbc.readMem(0x9e3e), 0xfe);
        // D2 0324
        gbc.setState(0x59a4, 0xe825, 0xf740, 0xf37, 0x8e65, 0x7a54, 0x0, 0x1);
        gbc.writeMem(0x59a4, { 0xd2, 0xcc, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xe825);
        EXPECT(gbc.pc(), 0xadcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 0325
        gbc.setState(0x87d3, 0x8b28, 0x5dd0, 0xdca1, 0xcffe, 0x1931, 0x0, 0x0);
        gbc.writeMem(0x87d3, { 0xd2, 0x60, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x8b28);
        EXPECT(gbc.pc(), 0x87d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87d3), 0xd2);
        EXPECT(gbc.readMem(0x87d4), 0x60);
        EXPECT(gbc.readMem(0x87d5), 0x8);
        // D2 0326
        gbc.setState(0x3588, 0x3404, 0x9370, 0x47f7, 0x53cb, 0xd2f9, 0x1, 0x0);
        gbc.writeMem(0x3588, { 0xd2, 0xc7, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x3404);
        EXPECT(gbc.pc(), 0x358b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0327
        gbc.setState(0xc5b3, 0x2fb2, 0xc300, 0x846e, 0x4587, 0x50b6, 0x0, 0x0);
        gbc.writeMem(0xc5b3, { 0xd2, 0xc5, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x2fb2);
        EXPECT(gbc.pc(), 0x13c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5b3), 0xd2);
        EXPECT(gbc.readMem(0xc5b4), 0xc5);
        EXPECT(gbc.readMem(0xc5b5), 0x13);
        // D2 0328
        gbc.setState(0x48e2, 0x57bc, 0x9ee0, 0x36d2, 0xb4d9, 0x352b, 0x0, 0x0);
        gbc.writeMem(0x48e2, { 0xd2, 0xa5, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x57bc);
        EXPECT(gbc.pc(), 0xd3a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0329
        gbc.setState(0x974d, 0x7b7c, 0x9400, 0xd617, 0x582d, 0x79e8, 0x1, 0x1);
        gbc.writeMem(0x974d, { 0xd2, 0x18, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x7b7c);
        EXPECT(gbc.pc(), 0xe18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x974d), 0xd2);
        EXPECT(gbc.readMem(0x974e), 0x18);
        EXPECT(gbc.readMem(0x974f), 0xe);
        // D2 032A
        gbc.setState(0x289f, 0x4e22, 0x6070, 0xca5, 0xf0ba, 0x21b9, 0x0, 0x0);
        gbc.writeMem(0x289f, { 0xd2, 0xbb, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x4e22);
        EXPECT(gbc.pc(), 0x28a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 032B
        gbc.setState(0x548e, 0x5fec, 0xcdd0, 0x285a, 0x1da0, 0x4d37, 0x0, 0x0);
        gbc.writeMem(0x548e, { 0xd2, 0xa2, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x5fec);
        EXPECT(gbc.pc(), 0x5491);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 032E
        gbc.setState(0xa42a, 0x5985, 0x4530, 0x4b0f, 0xe192, 0x84a0, 0x1, 0x0);
        gbc.writeMem(0xa42a, { 0xd2, 0x51, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x5985);
        EXPECT(gbc.pc(), 0xa42d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa42a), 0xd2);
        EXPECT(gbc.readMem(0xa42b), 0x51);
        EXPECT(gbc.readMem(0xa42c), 0x4f);
        // D2 032F
        gbc.setState(0x86fd, 0xb0be, 0xeaa0, 0xe00a, 0x4a09, 0xb46c, 0x0, 0x0);
        gbc.writeMem(0x86fd, { 0xd2, 0xfc, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xb0be);
        EXPECT(gbc.pc(), 0x4fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86fd), 0xd2);
        EXPECT(gbc.readMem(0x86fe), 0xfc);
        EXPECT(gbc.readMem(0x86ff), 0x4);
        // D2 0330
        gbc.setState(0x86ce, 0xdc1c, 0xa230, 0xc386, 0x462, 0xcf87, 0x0, 0x1);
        gbc.writeMem(0x86ce, { 0xd2, 0xfa, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xdc1c);
        EXPECT(gbc.pc(), 0x86d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86ce), 0xd2);
        EXPECT(gbc.readMem(0x86cf), 0xfa);
        EXPECT(gbc.readMem(0x86d0), 0x1e);
        // D2 0331
        gbc.setState(0x8d57, 0xe0a8, 0x3be0, 0x5eb8, 0xe053, 0xbaab, 0x0, 0x0);
        gbc.writeMem(0x8d57, { 0xd2, 0x79, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xe0a8);
        EXPECT(gbc.pc(), 0xe179);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d57), 0xd2);
        EXPECT(gbc.readMem(0x8d58), 0x79);
        EXPECT(gbc.readMem(0x8d59), 0xe1);
        // D2 0332
        gbc.setState(0x5593, 0x5fde, 0xb860, 0x3b, 0x53ec, 0x1170, 0x1, 0x0);
        gbc.writeMem(0x5593, { 0xd2, 0xc0, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x5fde);
        EXPECT(gbc.pc(), 0xa9c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0333
        gbc.setState(0x9401, 0x9e7b, 0x64c0, 0x4079, 0xc4b3, 0x7413, 0x0, 0x1);
        gbc.writeMem(0x9401, { 0xd2, 0xc8, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x9e7b);
        EXPECT(gbc.pc(), 0x99c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9401), 0xd2);
        EXPECT(gbc.readMem(0x9402), 0xc8);
        EXPECT(gbc.readMem(0x9403), 0x99);
        // D2 0335
        gbc.setState(0xb808, 0xd0e, 0xe210, 0x6538, 0xe467, 0x8911, 0x0, 0x0);
        gbc.writeMem(0xb808, { 0xd2, 0xa6, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xd0e);
        EXPECT(gbc.pc(), 0xb80b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb808), 0xd2);
        EXPECT(gbc.readMem(0xb809), 0xa6);
        EXPECT(gbc.readMem(0xb80a), 0x1b);
        // D2 0336
        gbc.setState(0xd767, 0x8627, 0x1540, 0xa765, 0x420f, 0x8477, 0x0, 0x0);
        gbc.writeMem(0xd767, { 0xd2, 0xf7, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x8627);
        EXPECT(gbc.pc(), 0x73f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd767), 0xd2);
        EXPECT(gbc.readMem(0xd768), 0xf7);
        EXPECT(gbc.readMem(0xd769), 0x73);
        // D2 0337
        gbc.setState(0x227a, 0x8bfe, 0xcd60, 0x51b, 0xa3b0, 0x6636, 0x0, 0x0);
        gbc.writeMem(0x227a, { 0xd2, 0x52, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x8bfe);
        EXPECT(gbc.pc(), 0x1052);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0338
        gbc.setState(0x7b16, 0x83dc, 0xcee0, 0x76ca, 0x8eda, 0x2343, 0x0, 0x0);
        gbc.writeMem(0x7b16, { 0xd2, 0x42, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x83dc);
        EXPECT(gbc.pc(), 0x2f42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0339
        gbc.setState(0x9dff, 0x4369, 0x3f10, 0xd595, 0x1aa1, 0x3d21, 0x0, 0x0);
        gbc.writeMem(0x9dff, { 0xd2, 0x11, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x4369);
        EXPECT(gbc.pc(), 0x9e02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dff), 0xd2);
        EXPECT(gbc.readMem(0x9e00), 0x11);
        EXPECT(gbc.readMem(0x9e01), 0xd);
        // D2 033A
        gbc.setState(0xce90, 0x7adf, 0x4770, 0xe4e4, 0xd9d3, 0xf529, 0x1, 0x1);
        gbc.writeMem(0xce90, { 0xd2, 0xc8, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x7adf);
        EXPECT(gbc.pc(), 0xce93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce90), 0xd2);
        EXPECT(gbc.readMem(0xce91), 0xc8);
        EXPECT(gbc.readMem(0xce92), 0x2c);
        // D2 033B
        gbc.setState(0x9d7d, 0xa1c5, 0x7810, 0x3e73, 0x21c9, 0x4c9a, 0x1, 0x0);
        gbc.writeMem(0x9d7d, { 0xd2, 0x6b, 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xa1c5);
        EXPECT(gbc.pc(), 0x9d80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d7d), 0xd2);
        EXPECT(gbc.readMem(0x9d7e), 0x6b);
        EXPECT(gbc.readMem(0x9d7f), 0x37);
        // D2 033C
        gbc.setState(0xe735, 0x2709, 0xc2a0, 0x295b, 0x1435, 0x3a13, 0x0, 0x0);
        gbc.writeMem(0xe735, { 0xd2, 0x44, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x2709);
        EXPECT(gbc.pc(), 0x4444);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe735), 0xd2);
        EXPECT(gbc.readMem(0xe736), 0x44);
        EXPECT(gbc.readMem(0xe737), 0x44);
        // D2 033D
        gbc.setState(0x3031, 0x4cdf, 0xb480, 0xb224, 0xec2a, 0x9fd3, 0x1, 0x0);
        gbc.writeMem(0x3031, { 0xd2, 0x9e, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x4cdf);
        EXPECT(gbc.pc(), 0xd69e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 033E
        gbc.setState(0x6308, 0xae6c, 0x43f0, 0x39c1, 0xcb50, 0xf616, 0x1, 0x1);
        gbc.writeMem(0x6308, { 0xd2, 0x68, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xae6c);
        EXPECT(gbc.pc(), 0x630b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 033F
        gbc.setState(0x70e7, 0x5760, 0xc920, 0x562f, 0x457a, 0x5781, 0x1, 0x1);
        gbc.writeMem(0x70e7, { 0xd2, 0x5e, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x5760);
        EXPECT(gbc.pc(), 0x2c5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0340
        gbc.setState(0x5d9b, 0xffd5, 0x3700, 0x6de2, 0x352c, 0xe1c2, 0x1, 0x0);
        gbc.writeMem(0x5d9b, { 0xd2, 0xc8, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xffd5);
        EXPECT(gbc.pc(), 0x9dc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 0341
        gbc.setState(0x52f7, 0xdfe3, 0xccf0, 0x8cf3, 0x7e58, 0x277f, 0x0, 0x1);
        gbc.writeMem(0x52f7, { 0xd2, 0xe5, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xdfe3);
        EXPECT(gbc.pc(), 0x52fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0342
        gbc.setState(0x262b, 0x4d94, 0x2280, 0x3827, 0x2b9f, 0xcc71, 0x1, 0x0);
        gbc.writeMem(0x262b, { 0xd2, 0x41, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x4d94);
        EXPECT(gbc.pc(), 0x2e41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 0343
        gbc.setState(0xd273, 0x754f, 0x8ea0, 0xe439, 0x44b4, 0xd12e, 0x0, 0x0);
        gbc.writeMem(0xd273, { 0xd2, 0x93, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x754f);
        EXPECT(gbc.pc(), 0xb993);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd273), 0xd2);
        EXPECT(gbc.readMem(0xd274), 0x93);
        EXPECT(gbc.readMem(0xd275), 0xb9);
        // D2 0344
        gbc.setState(0x1ddd, 0x7d1, 0xc9b0, 0x45d5, 0x5fd7, 0xbe34, 0x0, 0x0);
        gbc.writeMem(0x1ddd, { 0xd2, 0x8c, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x7d1);
        EXPECT(gbc.pc(), 0x1de0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0345
        gbc.setState(0x7c50, 0x62ea, 0xb120, 0xe3b1, 0x83e6, 0x8077, 0x0, 0x0);
        gbc.writeMem(0x7c50, { 0xd2, 0xf, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x62ea);
        EXPECT(gbc.pc(), 0x5d0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0347
        gbc.setState(0x654e, 0x2f2e, 0x9fa0, 0x47e1, 0x4be0, 0xae94, 0x0, 0x1);
        gbc.writeMem(0x654e, { 0xd2, 0xda, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x2f2e);
        EXPECT(gbc.pc(), 0x52da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0349
        gbc.setState(0x452b, 0x4573, 0x5600, 0x6eac, 0x1d05, 0x17f5, 0x0, 0x1);
        gbc.writeMem(0x452b, { 0xd2, 0x95, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x4573);
        EXPECT(gbc.pc(), 0x3c95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 034A
        gbc.setState(0x35, 0x650b, 0x7090, 0x8f7e, 0x7336, 0x4c5a, 0x1, 0x0);
        gbc.writeMem(0x35, { 0xd2, 0xd1, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x650b);
        EXPECT(gbc.pc(), 0x38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 034B
        gbc.setState(0xe37d, 0x297c, 0xfe40, 0xf56, 0x185e, 0x10b, 0x0, 0x0);
        gbc.writeMem(0xe37d, { 0xd2, 0xe0, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x297c);
        EXPECT(gbc.pc(), 0xb2e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe37d), 0xd2);
        EXPECT(gbc.readMem(0xe37e), 0xe0);
        EXPECT(gbc.readMem(0xe37f), 0xb2);
        // D2 034C
        gbc.setState(0x8775, 0xd3c8, 0x2fa0, 0xaac8, 0x661f, 0x5177, 0x1, 0x1);
        gbc.writeMem(0x8775, { 0xd2, 0x99, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xd3c8);
        EXPECT(gbc.pc(), 0xf99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8775), 0xd2);
        EXPECT(gbc.readMem(0x8776), 0x99);
        EXPECT(gbc.readMem(0x8777), 0xf);
        // D2 034D
        gbc.setState(0xdef, 0x1425, 0x7fb0, 0x136f, 0xfcfb, 0x2f2f, 0x1, 0x0);
        gbc.writeMem(0xdef, { 0xd2, 0x26, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x1425);
        EXPECT(gbc.pc(), 0xdf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 034E
        gbc.setState(0x282, 0x5aa8, 0xea40, 0x6b29, 0x737, 0x586, 0x1, 0x0);
        gbc.writeMem(0x282, { 0xd2, 0x4a, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x5aa8);
        EXPECT(gbc.pc(), 0x134a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 034F
        gbc.setState(0x4c71, 0x1030, 0xaf90, 0xfeba, 0x19fd, 0x83da, 0x1, 0x1);
        gbc.writeMem(0x4c71, { 0xd2, 0xe4, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x1030);
        EXPECT(gbc.pc(), 0x4c74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 0350
        gbc.setState(0xe6dc, 0x9ecd, 0xff10, 0xa7f2, 0x86b5, 0xf7e7, 0x1, 0x1);
        gbc.writeMem(0xe6dc, { 0xd2, 0x69, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x9ecd);
        EXPECT(gbc.pc(), 0xe6df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6dc), 0xd2);
        EXPECT(gbc.readMem(0xe6dd), 0x69);
        EXPECT(gbc.readMem(0xe6de), 0x60);
        // D2 0351
        gbc.setState(0x2862, 0x30aa, 0x4eb0, 0x24f1, 0xa583, 0xfc0c, 0x1, 0x0);
        gbc.writeMem(0x2862, { 0xd2, 0xff, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x30aa);
        EXPECT(gbc.pc(), 0x2865);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0352
        gbc.setState(0x6d56, 0xa25d, 0x3be0, 0x8c75, 0xadf4, 0xec22, 0x1, 0x0);
        gbc.writeMem(0x6d56, { 0xd2, 0x34, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xa25d);
        EXPECT(gbc.pc(), 0xc334);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0353
        gbc.setState(0x6893, 0xc14b, 0x9920, 0x5e03, 0x2733, 0xa30f, 0x1, 0x0);
        gbc.writeMem(0x6893, { 0xd2, 0x59, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xc14b);
        EXPECT(gbc.pc(), 0x4259);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0354
        gbc.setState(0xb9b6, 0x10a0, 0x5ba0, 0xbba5, 0xc033, 0xd58f, 0x1, 0x1);
        gbc.writeMem(0xb9b6, { 0xd2, 0xa1, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x10a0);
        EXPECT(gbc.pc(), 0xdda1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9b6), 0xd2);
        EXPECT(gbc.readMem(0xb9b7), 0xa1);
        EXPECT(gbc.readMem(0xb9b8), 0xdd);
        // D2 0355
        gbc.setState(0x5b40, 0x7609, 0xdb80, 0x7403, 0x46c4, 0x20d, 0x0, 0x1);
        gbc.writeMem(0x5b40, { 0xd2, 0x63, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x7609);
        EXPECT(gbc.pc(), 0x4b63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 0356
        gbc.setState(0x93dc, 0xfed1, 0xd220, 0x5d0, 0x6cf, 0x316e, 0x0, 0x1);
        gbc.writeMem(0x93dc, { 0xd2, 0xc5, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xfed1);
        EXPECT(gbc.pc(), 0x80c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93dc), 0xd2);
        EXPECT(gbc.readMem(0x93dd), 0xc5);
        EXPECT(gbc.readMem(0x93de), 0x80);
        // D2 0357
        gbc.setState(0xeccd, 0xf49c, 0x5d30, 0xdab9, 0xcd2c, 0xc274, 0x0, 0x0);
        gbc.writeMem(0xeccd, { 0xd2, 0x2c, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xf49c);
        EXPECT(gbc.pc(), 0xecd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeccd), 0xd2);
        EXPECT(gbc.readMem(0xecce), 0x2c);
        EXPECT(gbc.readMem(0xeccf), 0xbb);
        // D2 0358
        gbc.setState(0xd18a, 0xc1b3, 0x8c0, 0xc27b, 0x4465, 0x110e, 0x1, 0x1);
        gbc.writeMem(0xd18a, { 0xd2, 0x8b, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xc1b3);
        EXPECT(gbc.pc(), 0xb98b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd18a), 0xd2);
        EXPECT(gbc.readMem(0xd18b), 0x8b);
        EXPECT(gbc.readMem(0xd18c), 0xb9);
        // D2 0359
        gbc.setState(0xe47a, 0x90bd, 0xcac0, 0x2a4b, 0x1e6c, 0x50a0, 0x0, 0x1);
        gbc.writeMem(0xe47a, { 0xd2, 0x2f, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x90bd);
        EXPECT(gbc.pc(), 0x722f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe47a), 0xd2);
        EXPECT(gbc.readMem(0xe47b), 0x2f);
        EXPECT(gbc.readMem(0xe47c), 0x72);
        // D2 035A
        gbc.setState(0xe64e, 0xbe48, 0x130, 0x3e82, 0xcb3e, 0xbc1f, 0x1, 0x1);
        gbc.writeMem(0xe64e, { 0xd2, 0xc8, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xbe48);
        EXPECT(gbc.pc(), 0xe651);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe64e), 0xd2);
        EXPECT(gbc.readMem(0xe64f), 0xc8);
        EXPECT(gbc.readMem(0xe650), 0x2b);
        // D2 035B
        gbc.setState(0x6135, 0x5a80, 0x25c0, 0xaeeb, 0x6c5, 0x4df0, 0x1, 0x1);
        gbc.writeMem(0x6135, { 0xd2, 0x2f, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x5a80);
        EXPECT(gbc.pc(), 0x162f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 035C
        gbc.setState(0x1b4c, 0x91f7, 0x17b0, 0x8b16, 0x7e79, 0x6914, 0x0, 0x1);
        gbc.writeMem(0x1b4c, { 0xd2, 0x7, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x91f7);
        EXPECT(gbc.pc(), 0x1b4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 035D
        gbc.setState(0xc72, 0xec00, 0x2440, 0xbec2, 0x74db, 0xa2d3, 0x1, 0x1);
        gbc.writeMem(0xc72, { 0xd2, 0xf3, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xec00);
        EXPECT(gbc.pc(), 0x32f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 035E
        gbc.setState(0x3f23, 0x3dd4, 0x8ca0, 0xd141, 0x5826, 0xc58d, 0x0, 0x1);
        gbc.writeMem(0x3f23, { 0xd2, 0x1e, 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x3dd4);
        EXPECT(gbc.pc(), 0xb31e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 035F
        gbc.setState(0xae78, 0x19a2, 0x5430, 0x953b, 0x9eca, 0xa01, 0x0, 0x0);
        gbc.writeMem(0xae78, { 0xd2, 0xfa, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x19a2);
        EXPECT(gbc.pc(), 0xae7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae78), 0xd2);
        EXPECT(gbc.readMem(0xae79), 0xfa);
        EXPECT(gbc.readMem(0xae7a), 0x57);
        // D2 0360
        gbc.setState(0x4713, 0xc5ba, 0xe4b0, 0x9a99, 0x7732, 0x8311, 0x0, 0x0);
        gbc.writeMem(0x4713, { 0xd2, 0x67, 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xc5ba);
        EXPECT(gbc.pc(), 0x4716);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0361
        gbc.setState(0xb11e, 0x8c89, 0x130, 0xfaa2, 0x1148, 0x9488, 0x0, 0x0);
        gbc.writeMem(0xb11e, { 0xd2, 0xf, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x8c89);
        EXPECT(gbc.pc(), 0xb121);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb11e), 0xd2);
        EXPECT(gbc.readMem(0xb11f), 0xf);
        EXPECT(gbc.readMem(0xb120), 0x6d);
        // D2 0362
        gbc.setState(0xd00e, 0xd81d, 0xe710, 0x91d5, 0x954c, 0x6ac3, 0x0, 0x0);
        gbc.writeMem(0xd00e, { 0xd2, 0xf3, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xd81d);
        EXPECT(gbc.pc(), 0xd011);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd00e), 0xd2);
        EXPECT(gbc.readMem(0xd00f), 0xf3);
        EXPECT(gbc.readMem(0xd010), 0x45);
        // D2 0363
        gbc.setState(0x3514, 0xbcf9, 0x3a70, 0x51d, 0x9723, 0xf8a4, 0x1, 0x0);
        gbc.writeMem(0x3514, { 0xd2, 0xee, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xbcf9);
        EXPECT(gbc.pc(), 0x3517);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0364
        gbc.setState(0x952d, 0x4020, 0xbac0, 0xcffc, 0x72f0, 0x2d81, 0x1, 0x1);
        gbc.writeMem(0x952d, { 0xd2, 0x65, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x4020);
        EXPECT(gbc.pc(), 0x1f65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x952d), 0xd2);
        EXPECT(gbc.readMem(0x952e), 0x65);
        EXPECT(gbc.readMem(0x952f), 0x1f);
        // D2 0365
        gbc.setState(0x7754, 0xe799, 0xbf20, 0xc727, 0xbe53, 0x49b4, 0x0, 0x0);
        gbc.writeMem(0x7754, { 0xd2, 0x96, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xe799);
        EXPECT(gbc.pc(), 0xa396);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0366
        gbc.setState(0xe643, 0x3323, 0x3630, 0xc0ee, 0x957e, 0xb3d5, 0x0, 0x1);
        gbc.writeMem(0xe643, { 0xd2, 0x1e, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x3323);
        EXPECT(gbc.pc(), 0xe646);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe643), 0xd2);
        EXPECT(gbc.readMem(0xe644), 0x1e);
        EXPECT(gbc.readMem(0xe645), 0xa0);
        // D2 0367
        gbc.setState(0x8b86, 0xab94, 0xef00, 0x4405, 0x76a3, 0x4fdb, 0x1, 0x0);
        gbc.writeMem(0x8b86, { 0xd2, 0x2f, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xab94);
        EXPECT(gbc.pc(), 0x762f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b86), 0xd2);
        EXPECT(gbc.readMem(0x8b87), 0x2f);
        EXPECT(gbc.readMem(0x8b88), 0x76);
        // D2 0368
        gbc.setState(0x508e, 0x9c1a, 0x1670, 0x2f0a, 0xe1e7, 0xebb4, 0x0, 0x1);
        gbc.writeMem(0x508e, { 0xd2, 0x55, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x9c1a);
        EXPECT(gbc.pc(), 0x5091);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0369
        gbc.setState(0x82f0, 0x3f99, 0x2aa0, 0xf8cf, 0x1e1a, 0x349b, 0x0, 0x1);
        gbc.writeMem(0x82f0, { 0xd2, 0xb, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x3f99);
        EXPECT(gbc.pc(), 0x220b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82f0), 0xd2);
        EXPECT(gbc.readMem(0x82f1), 0xb);
        EXPECT(gbc.readMem(0x82f2), 0x22);
        // D2 036A
        gbc.setState(0x88, 0xab53, 0xecc0, 0x6905, 0xbea0, 0x567, 0x0, 0x0);
        gbc.writeMem(0x88, { 0xd2, 0xd5, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xab53);
        EXPECT(gbc.pc(), 0xced5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 036B
        gbc.setState(0xd12b, 0xfb7c, 0xbd60, 0xc26b, 0x3a89, 0x605d, 0x0, 0x0);
        gbc.writeMem(0xd12b, { 0xd2, 0x53, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xfb7c);
        EXPECT(gbc.pc(), 0x7f53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd12b), 0xd2);
        EXPECT(gbc.readMem(0xd12c), 0x53);
        EXPECT(gbc.readMem(0xd12d), 0x7f);
        // D2 036C
        gbc.setState(0x89ac, 0x1fa2, 0xca00, 0x4599, 0x5c1e, 0xf629, 0x1, 0x1);
        gbc.writeMem(0x89ac, { 0xd2, 0x46, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x1fa2);
        EXPECT(gbc.pc(), 0xcc46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89ac), 0xd2);
        EXPECT(gbc.readMem(0x89ad), 0x46);
        EXPECT(gbc.readMem(0x89ae), 0xcc);
        // D2 036D
        gbc.setState(0xd063, 0x3663, 0xbc80, 0x1e67, 0xfa87, 0x28d6, 0x0, 0x1);
        gbc.writeMem(0xd063, { 0xd2, 0x4e, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x3663);
        EXPECT(gbc.pc(), 0x664e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd063), 0xd2);
        EXPECT(gbc.readMem(0xd064), 0x4e);
        EXPECT(gbc.readMem(0xd065), 0x66);
        // D2 036E
        gbc.setState(0xc35f, 0x7c31, 0x1200, 0xcaeb, 0x3e3f, 0x6828, 0x0, 0x1);
        gbc.writeMem(0xc35f, { 0xd2, 0x4f, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x7c31);
        EXPECT(gbc.pc(), 0x474f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc35f), 0xd2);
        EXPECT(gbc.readMem(0xc360), 0x4f);
        EXPECT(gbc.readMem(0xc361), 0x47);
        // D2 036F
        gbc.setState(0xd23a, 0x710b, 0x70, 0xe12b, 0x46bd, 0x4a3c, 0x0, 0x1);
        gbc.writeMem(0xd23a, { 0xd2, 0xaf, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x710b);
        EXPECT(gbc.pc(), 0xd23d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd23a), 0xd2);
        EXPECT(gbc.readMem(0xd23b), 0xaf);
        EXPECT(gbc.readMem(0xd23c), 0x98);
        // D2 0370
        gbc.setState(0x1ff9, 0x2f93, 0xe370, 0xaa74, 0x4599, 0x6b08, 0x0, 0x0);
        gbc.writeMem(0x1ff9, { 0xd2, 0x11, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x2f93);
        EXPECT(gbc.pc(), 0x1ffc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0372
        gbc.setState(0xa383, 0x70b1, 0x8460, 0x89f7, 0x4957, 0xff52, 0x1, 0x0);
        gbc.writeMem(0xa383, { 0xd2, 0x10, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x70b1);
        EXPECT(gbc.pc(), 0x8210);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa383), 0xd2);
        EXPECT(gbc.readMem(0xa384), 0x10);
        EXPECT(gbc.readMem(0xa385), 0x82);
        // D2 0373
        gbc.setState(0x7fa3, 0x39a8, 0x2410, 0x6d43, 0xcf01, 0xa4e1, 0x0, 0x0);
        gbc.writeMem(0x7fa3, { 0xd2, 0xb7, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x39a8);
        EXPECT(gbc.pc(), 0x7fa6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 0374
        gbc.setState(0xbe1f, 0xd5c5, 0x41b0, 0xb7ba, 0xeea4, 0xd71f, 0x1, 0x1);
        gbc.writeMem(0xbe1f, { 0xd2, 0xac, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xd5c5);
        EXPECT(gbc.pc(), 0xbe22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe1f), 0xd2);
        EXPECT(gbc.readMem(0xbe20), 0xac);
        EXPECT(gbc.readMem(0xbe21), 0x88);
        // D2 0375
        gbc.setState(0xb828, 0x644, 0x780, 0x7f20, 0x6136, 0x83d3, 0x0, 0x1);
        gbc.writeMem(0xb828, { 0xd2, 0xc1, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x644);
        EXPECT(gbc.pc(), 0x82c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb828), 0xd2);
        EXPECT(gbc.readMem(0xb829), 0xc1);
        EXPECT(gbc.readMem(0xb82a), 0x82);
        // D2 0376
        gbc.setState(0x8f3, 0xdbde, 0xd2c0, 0xa689, 0x634c, 0xfefd, 0x0, 0x1);
        gbc.writeMem(0x8f3, { 0xd2, 0xd4, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xdbde);
        EXPECT(gbc.pc(), 0xced4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 0378
        gbc.setState(0x8f18, 0x2254, 0x36d0, 0x2534, 0x683d, 0x73f5, 0x1, 0x1);
        gbc.writeMem(0x8f18, { 0xd2, 0xec, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x2254);
        EXPECT(gbc.pc(), 0x8f1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f18), 0xd2);
        EXPECT(gbc.readMem(0x8f19), 0xec);
        EXPECT(gbc.readMem(0x8f1a), 0x1b);
        // D2 0379
        gbc.setState(0xc4a0, 0x8331, 0x19c0, 0x467c, 0x705c, 0x410c, 0x0, 0x0);
        gbc.writeMem(0xc4a0, { 0xd2, 0xac, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x8331);
        EXPECT(gbc.pc(), 0xf2ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4a0), 0xd2);
        EXPECT(gbc.readMem(0xc4a1), 0xac);
        EXPECT(gbc.readMem(0xc4a2), 0xf2);
        // D2 037A
        gbc.setState(0xd8bc, 0xfaed, 0xec90, 0x33f0, 0xa681, 0xc596, 0x1, 0x0);
        gbc.writeMem(0xd8bc, { 0xd2, 0x45, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xfaed);
        EXPECT(gbc.pc(), 0xd8bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8bc), 0xd2);
        EXPECT(gbc.readMem(0xd8bd), 0x45);
        EXPECT(gbc.readMem(0xd8be), 0xde);
        // D2 037B
        gbc.setState(0xe7d0, 0x6738, 0x2480, 0xf71c, 0x238d, 0xbf87, 0x1, 0x1);
        gbc.writeMem(0xe7d0, { 0xd2, 0x46, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x6738);
        EXPECT(gbc.pc(), 0xc446);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7d0), 0xd2);
        EXPECT(gbc.readMem(0xe7d1), 0x46);
        EXPECT(gbc.readMem(0xe7d2), 0xc4);
        // D2 037C
        gbc.setState(0x22c6, 0xe97b, 0x3290, 0xbaf9, 0x930d, 0x7a9c, 0x1, 0x0);
        gbc.writeMem(0x22c6, { 0xd2, 0x55, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xe97b);
        EXPECT(gbc.pc(), 0x22c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 037D
        gbc.setState(0x9ec0, 0xe941, 0x390, 0x6bb7, 0x85c1, 0xfa6f, 0x0, 0x1);
        gbc.writeMem(0x9ec0, { 0xd2, 0xf2, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xe941);
        EXPECT(gbc.pc(), 0x9ec3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ec0), 0xd2);
        EXPECT(gbc.readMem(0x9ec1), 0xf2);
        EXPECT(gbc.readMem(0x9ec2), 0xda);
        // D2 037E
        gbc.setState(0xc080, 0xcc55, 0x9150, 0xc0ef, 0x5924, 0xf4c0, 0x0, 0x0);
        gbc.writeMem(0xc080, { 0xd2, 0x3e, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xcc55);
        EXPECT(gbc.pc(), 0xc083);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc080), 0xd2);
        EXPECT(gbc.readMem(0xc081), 0x3e);
        EXPECT(gbc.readMem(0xc082), 0x40);
        // D2 037F
        gbc.setState(0x2c22, 0x8780, 0x9a80, 0x3075, 0xd7c0, 0x4838, 0x1, 0x0);
        gbc.writeMem(0x2c22, { 0xd2, 0x55, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x8780);
        EXPECT(gbc.pc(), 0x7555);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 0380
        gbc.setState(0xec98, 0x9adb, 0xde40, 0xd547, 0x8e22, 0x6264, 0x0, 0x1);
        gbc.writeMem(0xec98, { 0xd2, 0xf9, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x9adb);
        EXPECT(gbc.pc(), 0xcbf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec98), 0xd2);
        EXPECT(gbc.readMem(0xec99), 0xf9);
        EXPECT(gbc.readMem(0xec9a), 0xcb);
        // D2 0381
        gbc.setState(0x8644, 0x1bbc, 0x2b70, 0xefae, 0x9b4c, 0x4af6, 0x0, 0x1);
        gbc.writeMem(0x8644, { 0xd2, 0x45, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x1bbc);
        EXPECT(gbc.pc(), 0x8647);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8644), 0xd2);
        EXPECT(gbc.readMem(0x8645), 0x45);
        EXPECT(gbc.readMem(0x8646), 0x1f);
        // D2 0382
        gbc.setState(0xb5fe, 0xe19e, 0x3570, 0x5d37, 0x8c6f, 0x6093, 0x0, 0x0);
        gbc.writeMem(0xb5fe, { 0xd2, 0x8e, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xe19e);
        EXPECT(gbc.pc(), 0xb601);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5fe), 0xd2);
        EXPECT(gbc.readMem(0xb5ff), 0x8e);
        EXPECT(gbc.readMem(0xb600), 0x8b);
        // D2 0384
        gbc.setState(0xacdb, 0x8c84, 0xafc0, 0x7539, 0x58ec, 0xc166, 0x0, 0x0);
        gbc.writeMem(0xacdb, { 0xd2, 0x88, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x8c84);
        EXPECT(gbc.pc(), 0x2388);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacdb), 0xd2);
        EXPECT(gbc.readMem(0xacdc), 0x88);
        EXPECT(gbc.readMem(0xacdd), 0x23);
        // D2 0385
        gbc.setState(0x5f8c, 0x4e8b, 0xe70, 0x2fa2, 0x1fc, 0xe8d5, 0x1, 0x1);
        gbc.writeMem(0x5f8c, { 0xd2, 0x60, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x4e8b);
        EXPECT(gbc.pc(), 0x5f8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0386
        gbc.setState(0xbff, 0xbea7, 0x9590, 0xb6ff, 0x541a, 0x368d, 0x0, 0x0);
        gbc.writeMem(0xbff, { 0xd2, 0x63, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xbea7);
        EXPECT(gbc.pc(), 0xc02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 0387
        gbc.setState(0x2823, 0xe17b, 0x5e90, 0xbbeb, 0xbb1, 0x5582, 0x1, 0x1);
        gbc.writeMem(0x2823, { 0xd2, 0x67, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xe17b);
        EXPECT(gbc.pc(), 0x2826);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 0389
        gbc.setState(0xe512, 0xdda1, 0x61a0, 0x537c, 0x385f, 0xc02e, 0x1, 0x0);
        gbc.writeMem(0xe512, { 0xd2, 0xbc, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xdda1);
        EXPECT(gbc.pc(), 0xd6bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe512), 0xd2);
        EXPECT(gbc.readMem(0xe513), 0xbc);
        EXPECT(gbc.readMem(0xe514), 0xd6);
        // D2 038A
        gbc.setState(0xe785, 0xeac6, 0x8540, 0xda78, 0xb087, 0x6909, 0x0, 0x0);
        gbc.writeMem(0xe785, { 0xd2, 0x30, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xeac6);
        EXPECT(gbc.pc(), 0x8e30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe785), 0xd2);
        EXPECT(gbc.readMem(0xe786), 0x30);
        EXPECT(gbc.readMem(0xe787), 0x8e);
        // D2 038B
        gbc.setState(0x3cca, 0x284e, 0x9cb0, 0x7e8f, 0x6cc3, 0xe470, 0x0, 0x0);
        gbc.writeMem(0x3cca, { 0xd2, 0x5, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x284e);
        EXPECT(gbc.pc(), 0x3ccd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 038C
        gbc.setState(0xb7d2, 0x2f8a, 0x33e0, 0x71f3, 0x5bf8, 0x997a, 0x0, 0x0);
        gbc.writeMem(0xb7d2, { 0xd2, 0x79, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x2f8a);
        EXPECT(gbc.pc(), 0xb279);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7d2), 0xd2);
        EXPECT(gbc.readMem(0xb7d3), 0x79);
        EXPECT(gbc.readMem(0xb7d4), 0xb2);
        // D2 038D
        gbc.setState(0x61f9, 0xa41c, 0xead0, 0xa614, 0xee5c, 0x5e1f, 0x0, 0x0);
        gbc.writeMem(0x61f9, { 0xd2, 0xf7, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xa41c);
        EXPECT(gbc.pc(), 0x61fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 038E
        gbc.setState(0x226a, 0x1c5d, 0x41b0, 0xf1a3, 0x329c, 0xfd8a, 0x0, 0x0);
        gbc.writeMem(0x226a, { 0xd2, 0x1b, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x1c5d);
        EXPECT(gbc.pc(), 0x226d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 038F
        gbc.setState(0x166a, 0x8d8e, 0xed60, 0x5f14, 0x8fbe, 0x8b75, 0x0, 0x0);
        gbc.writeMem(0x166a, { 0xd2, 0x38, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x8d8e);
        EXPECT(gbc.pc(), 0xf338);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0390
        gbc.setState(0xab73, 0xcf0b, 0x1550, 0x4b29, 0x9e80, 0xb83f, 0x0, 0x1);
        gbc.writeMem(0xab73, { 0xd2, 0x79, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xcf0b);
        EXPECT(gbc.pc(), 0xab76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab73), 0xd2);
        EXPECT(gbc.readMem(0xab74), 0x79);
        EXPECT(gbc.readMem(0xab75), 0x41);
        // D2 0391
        gbc.setState(0x4cc, 0xb7d6, 0xf130, 0xad8f, 0xa11f, 0x5713, 0x0, 0x1);
        gbc.writeMem(0x4cc, { 0xd2, 0xe7, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xb7d6);
        EXPECT(gbc.pc(), 0x4cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0392
        gbc.setState(0xd9c4, 0x4ba3, 0x11b0, 0x2e29, 0x398d, 0xee7c, 0x0, 0x1);
        gbc.writeMem(0xd9c4, { 0xd2, 0x9, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x4ba3);
        EXPECT(gbc.pc(), 0xd9c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9c4), 0xd2);
        EXPECT(gbc.readMem(0xd9c5), 0x9);
        EXPECT(gbc.readMem(0xd9c6), 0xa1);
        // D2 0393
        gbc.setState(0x4262, 0x2895, 0x31c0, 0x42bf, 0xf822, 0x91ce, 0x1, 0x0);
        gbc.writeMem(0x4262, { 0xd2, 0xfc, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x2895);
        EXPECT(gbc.pc(), 0x4bfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 0394
        gbc.setState(0x4505, 0xd86, 0x9b20, 0x17c9, 0x1b4e, 0xa8c2, 0x0, 0x0);
        gbc.writeMem(0x4505, { 0xd2, 0xa6, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xd86);
        EXPECT(gbc.pc(), 0xd8a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 0395
        gbc.setState(0x6902, 0xdf23, 0x81c0, 0xb2a, 0xa3c, 0xe802, 0x1, 0x0);
        gbc.writeMem(0x6902, { 0xd2, 0x58, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xdf23);
        EXPECT(gbc.pc(), 0x7458);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 0396
        gbc.setState(0xed91, 0xb658, 0xe990, 0x309b, 0xa4e7, 0x9f68, 0x0, 0x0);
        gbc.writeMem(0xed91, { 0xd2, 0xbe, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xb658);
        EXPECT(gbc.pc(), 0xed94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed91), 0xd2);
        EXPECT(gbc.readMem(0xed92), 0xbe);
        EXPECT(gbc.readMem(0xed93), 0x3b);
        // D2 0397
        gbc.setState(0x833, 0xf2ba, 0x8e00, 0xda22, 0x1617, 0xf59e, 0x1, 0x0);
        gbc.writeMem(0x833, { 0xd2, 0x45, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xf2ba);
        EXPECT(gbc.pc(), 0x2e45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 0398
        gbc.setState(0x44aa, 0xb470, 0x60b0, 0xf4f7, 0x862b, 0xad91, 0x0, 0x1);
        gbc.writeMem(0x44aa, { 0xd2, 0x37, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xb470);
        EXPECT(gbc.pc(), 0x44ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 0399
        gbc.setState(0xbb10, 0xd682, 0xfc10, 0x44a3, 0xd2ce, 0xfac8, 0x0, 0x1);
        gbc.writeMem(0xbb10, { 0xd2, 0x37, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xd682);
        EXPECT(gbc.pc(), 0xbb13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb10), 0xd2);
        EXPECT(gbc.readMem(0xbb11), 0x37);
        EXPECT(gbc.readMem(0xbb12), 0x49);
        // D2 039A
        gbc.setState(0x5b83, 0xa489, 0xa610, 0xa3bc, 0xb22d, 0x58c7, 0x1, 0x1);
        gbc.writeMem(0x5b83, { 0xd2, 0x2f, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xa489);
        EXPECT(gbc.pc(), 0x5b86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 039B
        gbc.setState(0x5bae, 0xd690, 0x5be0, 0x5238, 0x52c0, 0x5529, 0x0, 0x0);
        gbc.writeMem(0x5bae, { 0xd2, 0x4c, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xd690);
        EXPECT(gbc.pc(), 0xb4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 039C
        gbc.setState(0xc62a, 0x5c66, 0x4470, 0x5985, 0x7abe, 0x3c68, 0x1, 0x1);
        gbc.writeMem(0xc62a, { 0xd2, 0xf0, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x5c66);
        EXPECT(gbc.pc(), 0xc62d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc62a), 0xd2);
        EXPECT(gbc.readMem(0xc62b), 0xf0);
        EXPECT(gbc.readMem(0xc62c), 0x1a);
        // D2 039D
        gbc.setState(0x690f, 0x661b, 0x91c0, 0xece8, 0xe954, 0x81d, 0x0, 0x0);
        gbc.writeMem(0x690f, { 0xd2, 0xb2, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x661b);
        EXPECT(gbc.pc(), 0x53b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 039E
        gbc.setState(0x8d73, 0xff1, 0x4980, 0x2989, 0xda6c, 0xa1fd, 0x0, 0x1);
        gbc.writeMem(0x8d73, { 0xd2, 0x67, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xff1);
        EXPECT(gbc.pc(), 0xad67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d73), 0xd2);
        EXPECT(gbc.readMem(0x8d74), 0x67);
        EXPECT(gbc.readMem(0x8d75), 0xad);
        // D2 039F
        gbc.setState(0xb6e4, 0x2ae7, 0x6e80, 0x7852, 0x84e, 0x1484, 0x0, 0x0);
        gbc.writeMem(0xb6e4, { 0xd2, 0xd6, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x2ae7);
        EXPECT(gbc.pc(), 0xd3d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6e4), 0xd2);
        EXPECT(gbc.readMem(0xb6e5), 0xd6);
        EXPECT(gbc.readMem(0xb6e6), 0xd3);
        // D2 03A0
        gbc.setState(0x158, 0x8af8, 0x6ab0, 0xb2fd, 0x9481, 0x97d8, 0x1, 0x0);
        gbc.writeMem(0x158, { 0xd2, 0x61, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x8af8);
        EXPECT(gbc.pc(), 0x15b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 03A1
        gbc.setState(0xed91, 0x1234, 0xf20, 0x4fba, 0xfc9a, 0x96ac, 0x0, 0x1);
        gbc.writeMem(0xed91, { 0xd2, 0xbe, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x1234);
        EXPECT(gbc.pc(), 0x3bbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed91), 0xd2);
        EXPECT(gbc.readMem(0xed92), 0xbe);
        EXPECT(gbc.readMem(0xed93), 0x3b);
        // D2 03A2
        gbc.setState(0x2a1f, 0x3a83, 0x230, 0x886f, 0xfb29, 0x67c, 0x0, 0x1);
        gbc.writeMem(0x2a1f, { 0xd2, 0xdf, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x3a83);
        EXPECT(gbc.pc(), 0x2a22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 03A3
        gbc.setState(0x1e82, 0xfa2e, 0x78a0, 0xb39f, 0xf664, 0x8047, 0x0, 0x1);
        gbc.writeMem(0x1e82, { 0xd2, 0x8f, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xfa2e);
        EXPECT(gbc.pc(), 0x8e8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 03A4
        gbc.setState(0x83db, 0xc693, 0x6510, 0x1446, 0x28f8, 0xb7ae, 0x1, 0x1);
        gbc.writeMem(0x83db, { 0xd2, 0x98, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xc693);
        EXPECT(gbc.pc(), 0x83de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83db), 0xd2);
        EXPECT(gbc.readMem(0x83dc), 0x98);
        EXPECT(gbc.readMem(0x83dd), 0xcf);
        // D2 03A5
        gbc.setState(0x746a, 0x4901, 0x56d0, 0xc1be, 0x297d, 0x1277, 0x0, 0x1);
        gbc.writeMem(0x746a, { 0xd2, 0x35, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x4901);
        EXPECT(gbc.pc(), 0x746d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 03A6
        gbc.setState(0x5aca, 0x6292, 0x7860, 0xacd, 0x4be4, 0x9cf6, 0x0, 0x1);
        gbc.writeMem(0x5aca, { 0xd2, 0x56, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x6292);
        EXPECT(gbc.pc(), 0xc856);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 03A7
        gbc.setState(0x3a6a, 0x793, 0x16f0, 0xb64f, 0xe7ed, 0xd6fe, 0x0, 0x1);
        gbc.writeMem(0x3a6a, { 0xd2, 0xf1, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x793);
        EXPECT(gbc.pc(), 0x3a6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 03A8
        gbc.setState(0xdf78, 0x62dc, 0x6710, 0xc331, 0xef94, 0x37e, 0x1, 0x1);
        gbc.writeMem(0xdf78, { 0xd2, 0x7a, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x62dc);
        EXPECT(gbc.pc(), 0xdf7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf78), 0xd2);
        EXPECT(gbc.readMem(0xdf79), 0x7a);
        EXPECT(gbc.readMem(0xdf7a), 0x82);
        // D2 03A9
        gbc.setState(0xec4a, 0x89d8, 0x3500, 0xbf42, 0xca34, 0x9cce, 0x1, 0x1);
        gbc.writeMem(0xec4a, { 0xd2, 0x70, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x89d8);
        EXPECT(gbc.pc(), 0xc770);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec4a), 0xd2);
        EXPECT(gbc.readMem(0xec4b), 0x70);
        EXPECT(gbc.readMem(0xec4c), 0xc7);
        // D2 03AA
        gbc.setState(0x96d8, 0x43a1, 0x54c0, 0x7c37, 0x9c2a, 0x16a9, 0x1, 0x1);
        gbc.writeMem(0x96d8, { 0xd2, 0xa4, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x43a1);
        EXPECT(gbc.pc(), 0xf1a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96d8), 0xd2);
        EXPECT(gbc.readMem(0x96d9), 0xa4);
        EXPECT(gbc.readMem(0x96da), 0xf1);
        // D2 03AB
        gbc.setState(0x5a4a, 0x89e7, 0xbfe0, 0x774f, 0xe0e4, 0x3ab1, 0x0, 0x0);
        gbc.writeMem(0x5a4a, { 0xd2, 0x86, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x89e7);
        EXPECT(gbc.pc(), 0x1a86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 03AC
        gbc.setState(0x96c7, 0x580f, 0xdba0, 0x942c, 0x67e0, 0xfd4c, 0x0, 0x0);
        gbc.writeMem(0x96c7, { 0xd2, 0x8e, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x580f);
        EXPECT(gbc.pc(), 0xa38e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96c7), 0xd2);
        EXPECT(gbc.readMem(0x96c8), 0x8e);
        EXPECT(gbc.readMem(0x96c9), 0xa3);
        // D2 03AD
        gbc.setState(0xd4f0, 0x7c74, 0x9600, 0xc83c, 0x8386, 0x4497, 0x0, 0x1);
        gbc.writeMem(0xd4f0, { 0xd2, 0x58, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x7c74);
        EXPECT(gbc.pc(), 0x5b58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4f0), 0xd2);
        EXPECT(gbc.readMem(0xd4f1), 0x58);
        EXPECT(gbc.readMem(0xd4f2), 0x5b);
        // D2 03AE
        gbc.setState(0x1969, 0xdb5, 0xbfb0, 0xe146, 0xa570, 0x2326, 0x0, 0x1);
        gbc.writeMem(0x1969, { 0xd2, 0x5b, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xdb5);
        EXPECT(gbc.pc(), 0x196c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 03AF
        gbc.setState(0x9ecf, 0x6367, 0xe520, 0x1572, 0x1118, 0x9470, 0x0, 0x0);
        gbc.writeMem(0x9ecf, { 0xd2, 0x71, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x6367);
        EXPECT(gbc.pc(), 0xed71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ecf), 0xd2);
        EXPECT(gbc.readMem(0x9ed0), 0x71);
        EXPECT(gbc.readMem(0x9ed1), 0xed);
        // D2 03B0
        gbc.setState(0x1911, 0xce74, 0x99c0, 0x7423, 0x9c72, 0xf353, 0x1, 0x1);
        gbc.writeMem(0x1911, { 0xd2, 0x6a, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xce74);
        EXPECT(gbc.pc(), 0x3a6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 03B1
        gbc.setState(0xb7d3, 0xb9aa, 0x3e80, 0xdf, 0xa061, 0x5cfe, 0x0, 0x1);
        gbc.writeMem(0xb7d3, { 0xd2, 0xb2, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xb9aa);
        EXPECT(gbc.pc(), 0x55b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7d3), 0xd2);
        EXPECT(gbc.readMem(0xb7d4), 0xb2);
        EXPECT(gbc.readMem(0xb7d5), 0x55);
        // D2 03B2
        gbc.setState(0x2d31, 0xf89a, 0x7cf0, 0x1c5f, 0x6533, 0x2203, 0x1, 0x0);
        gbc.writeMem(0x2d31, { 0xd2, 0xe9, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xf89a);
        EXPECT(gbc.pc(), 0x2d34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 03B4
        gbc.setState(0x47be, 0xcaab, 0xa5f0, 0xdebf, 0xf264, 0xc671, 0x1, 0x0);
        gbc.writeMem(0x47be, { 0xd2, 0x1b, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xcaab);
        EXPECT(gbc.pc(), 0x47c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 03B5
        gbc.setState(0xb56d, 0x846a, 0x1570, 0xc457, 0xff36, 0xeeb8, 0x0, 0x0);
        gbc.writeMem(0xb56d, { 0xd2, 0xc0, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x846a);
        EXPECT(gbc.pc(), 0xb570);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb56d), 0xd2);
        EXPECT(gbc.readMem(0xb56e), 0xc0);
        EXPECT(gbc.readMem(0xb56f), 0xac);
        // D2 03B6
        gbc.setState(0x619c, 0x39b9, 0x43f0, 0xe0e4, 0x6f81, 0x23ec, 0x1, 0x0);
        gbc.writeMem(0x619c, { 0xd2, 0x1, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x39b9);
        EXPECT(gbc.pc(), 0x619f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 03B7
        gbc.setState(0x360c, 0xbe7, 0xde20, 0x32e4, 0xfbe8, 0x896d, 0x1, 0x1);
        gbc.writeMem(0x360c, { 0xd2, 0xe6, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xbe7);
        EXPECT(gbc.pc(), 0x2ae6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 03B8
        gbc.setState(0xd5d8, 0xd3c, 0x6230, 0x6cbb, 0xb27b, 0x9520, 0x1, 0x0);
        gbc.writeMem(0xd5d8, { 0xd2, 0x2, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xd3c);
        EXPECT(gbc.pc(), 0xd5db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5d8), 0xd2);
        EXPECT(gbc.readMem(0xd5d9), 0x2);
        EXPECT(gbc.readMem(0xd5da), 0x54);
        // D2 03B9
        gbc.setState(0x4a17, 0x1e65, 0xf730, 0x2ed7, 0x75cb, 0xeab0, 0x0, 0x0);
        gbc.writeMem(0x4a17, { 0xd2, 0xbc, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x1e65);
        EXPECT(gbc.pc(), 0x4a1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 03BA
        gbc.setState(0x3a4b, 0x82a0, 0xf0c0, 0x6df4, 0x350e, 0xb8c9, 0x1, 0x1);
        gbc.writeMem(0x3a4b, { 0xd2, 0x1a, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x82a0);
        EXPECT(gbc.pc(), 0xc31a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 03BB
        gbc.setState(0xcb86, 0x335e, 0xf7f0, 0x758, 0x3434, 0x8d3f, 0x0, 0x0);
        gbc.writeMem(0xcb86, { 0xd2, 0xf0, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x335e);
        EXPECT(gbc.pc(), 0xcb89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb86), 0xd2);
        EXPECT(gbc.readMem(0xcb87), 0xf0);
        EXPECT(gbc.readMem(0xcb88), 0xf8);
        // D2 03BC
        gbc.setState(0x86a1, 0xab11, 0x11d0, 0xd651, 0x4541, 0x1b48, 0x0, 0x1);
        gbc.writeMem(0x86a1, { 0xd2, 0xc1, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xab11);
        EXPECT(gbc.pc(), 0x86a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86a1), 0xd2);
        EXPECT(gbc.readMem(0x86a2), 0xc1);
        EXPECT(gbc.readMem(0x86a3), 0x70);
        // D2 03BD
        gbc.setState(0xef97, 0x964b, 0xfce0, 0x3d93, 0x62ee, 0xc5af, 0x0, 0x1);
        gbc.writeMem(0xef97, { 0xd2, 0xce, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x964b);
        EXPECT(gbc.pc(), 0x2dce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef97), 0xd2);
        EXPECT(gbc.readMem(0xef98), 0xce);
        EXPECT(gbc.readMem(0xef99), 0x2d);
        // D2 03BE
        gbc.setState(0xa944, 0x6808, 0x6cb0, 0x9262, 0xb890, 0x4b56, 0x0, 0x0);
        gbc.writeMem(0xa944, { 0xd2, 0xb4, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x6808);
        EXPECT(gbc.pc(), 0xa947);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa944), 0xd2);
        EXPECT(gbc.readMem(0xa945), 0xb4);
        EXPECT(gbc.readMem(0xa946), 0x6a);
        // D2 03BF
        gbc.setState(0x997a, 0x91fc, 0x7480, 0x3e26, 0xdb41, 0xdeaa, 0x0, 0x0);
        gbc.writeMem(0x997a, { 0xd2, 0x90, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x91fc);
        EXPECT(gbc.pc(), 0x1b90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x997a), 0xd2);
        EXPECT(gbc.readMem(0x997b), 0x90);
        EXPECT(gbc.readMem(0x997c), 0x1b);
        // D2 03C2
        gbc.setState(0x8b37, 0xf390, 0xced0, 0xdc4f, 0x555f, 0xe1c6, 0x0, 0x0);
        gbc.writeMem(0x8b37, { 0xd2, 0x1, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xf390);
        EXPECT(gbc.pc(), 0x8b3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b37), 0xd2);
        EXPECT(gbc.readMem(0x8b38), 0x1);
        EXPECT(gbc.readMem(0x8b39), 0xc6);
        // D2 03C3
        gbc.setState(0x384f, 0x1433, 0x8750, 0xa0bf, 0x6bec, 0x93b, 0x1, 0x1);
        gbc.writeMem(0x384f, { 0xd2, 0x18, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x1433);
        EXPECT(gbc.pc(), 0x3852);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 03C4
        gbc.setState(0x9954, 0xa6fb, 0x13c0, 0xd583, 0x91ef, 0xc9f7, 0x1, 0x1);
        gbc.writeMem(0x9954, { 0xd2, 0x35, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xa6fb);
        EXPECT(gbc.pc(), 0xb235);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9954), 0xd2);
        EXPECT(gbc.readMem(0x9955), 0x35);
        EXPECT(gbc.readMem(0x9956), 0xb2);
        // D2 03C5
        gbc.setState(0x6c55, 0xe94e, 0xa8a0, 0xfc5b, 0x4bc9, 0xae52, 0x1, 0x0);
        gbc.writeMem(0x6c55, { 0xd2, 0x15, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xe94e);
        EXPECT(gbc.pc(), 0x1f15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 03C6
        gbc.setState(0xe9bc, 0x29d6, 0x79b0, 0xff68, 0x6e31, 0x2d56, 0x1, 0x1);
        gbc.writeMem(0xe9bc, { 0xd2, 0x57, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x29d6);
        EXPECT(gbc.pc(), 0xe9bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9bc), 0xd2);
        EXPECT(gbc.readMem(0xe9bd), 0x57);
        EXPECT(gbc.readMem(0xe9be), 0x3f);
        // D2 03C7
        gbc.setState(0x4a6e, 0xf707, 0x41a0, 0xf624, 0xf900, 0xddf4, 0x1, 0x0);
        gbc.writeMem(0x4a6e, { 0xd2, 0x90, 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xf707);
        EXPECT(gbc.pc(), 0xb390);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 03C9
        gbc.setState(0x48b2, 0xda42, 0x6ab0, 0x5f41, 0x3efd, 0xc56f, 0x1, 0x1);
        gbc.writeMem(0x48b2, { 0xd2, 0x3d, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xda42);
        EXPECT(gbc.pc(), 0x48b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 03CA
        gbc.setState(0x4682, 0xd8e1, 0x1500, 0xd7cf, 0xcdda, 0x8f24, 0x1, 0x1);
        gbc.writeMem(0x4682, { 0xd2, 0x2, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xd8e1);
        EXPECT(gbc.pc(), 0xc002);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 03CB
        gbc.setState(0x38d2, 0x98dd, 0x8ba0, 0x9447, 0xc392, 0xae6, 0x1, 0x1);
        gbc.writeMem(0x38d2, { 0xd2, 0x86, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x98dd);
        EXPECT(gbc.pc(), 0x3386);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 03CC
        gbc.setState(0xa298, 0x457b, 0x9c10, 0x4e9e, 0x3dec, 0xc97e, 0x1, 0x0);
        gbc.writeMem(0xa298, { 0xd2, 0xa9, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x457b);
        EXPECT(gbc.pc(), 0xa29b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa298), 0xd2);
        EXPECT(gbc.readMem(0xa299), 0xa9);
        EXPECT(gbc.readMem(0xa29a), 0xd7);
        // D2 03CD
        gbc.setState(0xda12, 0x1a46, 0x7840, 0x6823, 0x9120, 0x30e5, 0x0, 0x1);
        gbc.writeMem(0xda12, { 0xd2, 0x49, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x1a46);
        EXPECT(gbc.pc(), 0x4a49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda12), 0xd2);
        EXPECT(gbc.readMem(0xda13), 0x49);
        EXPECT(gbc.readMem(0xda14), 0x4a);
        // D2 03CE
        gbc.setState(0x8338, 0x9a1b, 0xf8e0, 0x9b90, 0x154a, 0x2688, 0x0, 0x0);
        gbc.writeMem(0x8338, { 0xd2, 0x71, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x9a1b);
        EXPECT(gbc.pc(), 0xaf71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8338), 0xd2);
        EXPECT(gbc.readMem(0x8339), 0x71);
        EXPECT(gbc.readMem(0x833a), 0xaf);
        // D2 03CF
        gbc.setState(0xd29b, 0x9d14, 0xf470, 0x6e49, 0x2526, 0xd896, 0x1, 0x1);
        gbc.writeMem(0xd29b, { 0xd2, 0xd, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x9d14);
        EXPECT(gbc.pc(), 0xd29e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd29b), 0xd2);
        EXPECT(gbc.readMem(0xd29c), 0xd);
        EXPECT(gbc.readMem(0xd29d), 0x65);
        // D2 03D0
        gbc.setState(0x488a, 0x4c06, 0xd270, 0x45e8, 0xaa4f, 0x4dd5, 0x0, 0x1);
        gbc.writeMem(0x488a, { 0xd2, 0x98, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x4c06);
        EXPECT(gbc.pc(), 0x488d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 03D1
        gbc.setState(0x4ea, 0x82d2, 0x3e70, 0x1497, 0xece0, 0x87eb, 0x0, 0x1);
        gbc.writeMem(0x4ea, { 0xd2, 0x68, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x82d2);
        EXPECT(gbc.pc(), 0x4ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 03D2
        gbc.setState(0x2737, 0x4ac2, 0xeba0, 0xc625, 0x28bf, 0x2a6f, 0x0, 0x1);
        gbc.writeMem(0x2737, { 0xd2, 0x16, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x4ac2);
        EXPECT(gbc.pc(), 0x8b16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 03D3
        gbc.setState(0x5a28, 0x4b8b, 0x2660, 0x3357, 0x4123, 0xa378, 0x1, 0x0);
        gbc.writeMem(0x5a28, { 0xd2, 0x27, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x4b8b);
        EXPECT(gbc.pc(), 0xeb27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 03D4
        gbc.setState(0x9107, 0xae1f, 0x4df0, 0x8dbd, 0x4c8a, 0xcd2c, 0x1, 0x0);
        gbc.writeMem(0x9107, { 0xd2, 0xd7, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xae1f);
        EXPECT(gbc.pc(), 0x910a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9107), 0xd2);
        EXPECT(gbc.readMem(0x9108), 0xd7);
        EXPECT(gbc.readMem(0x9109), 0xc4);
        // D2 03D5
        gbc.setState(0x175a, 0xfebe, 0x8190, 0xba36, 0xd173, 0x9fb, 0x1, 0x1);
        gbc.writeMem(0x175a, { 0xd2, 0xd5, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xfebe);
        EXPECT(gbc.pc(), 0x175d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 03D6
        gbc.setState(0x47b2, 0x3b02, 0x22a0, 0x8caa, 0x2696, 0x909b, 0x1, 0x1);
        gbc.writeMem(0x47b2, { 0xd2, 0x61, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x3b02);
        EXPECT(gbc.pc(), 0x9661);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // D2 03D7
        gbc.setState(0xd59a, 0x2507, 0xfba0, 0xdb45, 0x79d6, 0x86c9, 0x1, 0x0);
        gbc.writeMem(0xd59a, { 0xd2, 0x2, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x2507);
        EXPECT(gbc.pc(), 0x1902);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd59a), 0xd2);
        EXPECT(gbc.readMem(0xd59b), 0x2);
        EXPECT(gbc.readMem(0xd59c), 0x19);
        // D2 03D8
        gbc.setState(0x77e0, 0x1aeb, 0x9890, 0x815c, 0xcc46, 0x91fa, 0x0, 0x0);
        gbc.writeMem(0x77e0, { 0xd2, 0x1c, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x1aeb);
        EXPECT(gbc.pc(), 0x77e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // D2 03D9
        gbc.setState(0x6543, 0xa2a0, 0x9e00, 0xefba, 0x530c, 0x1bc4, 0x1, 0x0);
        gbc.writeMem(0x6543, { 0xd2, 0x17, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xa2a0);
        EXPECT(gbc.pc(), 0x4c17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // D2 03DA
        gbc.setState(0x8990, 0xa45d, 0x1a10, 0x5815, 0x2720, 0x64e1, 0x0, 0x0);
        gbc.writeMem(0x8990, { 0xd2, 0x4d, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xa45d);
        EXPECT(gbc.pc(), 0x8993);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8990), 0xd2);
        EXPECT(gbc.readMem(0x8991), 0x4d);
        EXPECT(gbc.readMem(0x8992), 0x9c);
        // D2 03DC
        gbc.setState(0xcefe, 0x7d50, 0x5980, 0x9f38, 0x4985, 0x7a67, 0x0, 0x1);
        gbc.writeMem(0xcefe, { 0xd2, 0xe7, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x7d50);
        EXPECT(gbc.pc(), 0xa3e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcefe), 0xd2);
        EXPECT(gbc.readMem(0xceff), 0xe7);
        EXPECT(gbc.readMem(0xcf00), 0xa3);
        // D2 03DD
        gbc.setState(0x695e, 0x691e, 0x4f30, 0x250d, 0xd8dd, 0xa819, 0x0, 0x1);
        gbc.writeMem(0x695e, { 0xd2, 0xc6, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x691e);
        EXPECT(gbc.pc(), 0x6961);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 03DE
        gbc.setState(0xa7db, 0x518c, 0xe870, 0xf31c, 0xff6, 0x703c, 0x1, 0x1);
        gbc.writeMem(0xa7db, { 0xd2, 0xcd, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x518c);
        EXPECT(gbc.pc(), 0xa7de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7db), 0xd2);
        EXPECT(gbc.readMem(0xa7dc), 0xcd);
        EXPECT(gbc.readMem(0xa7dd), 0xca);
        // D2 03DF
        gbc.setState(0xc8d7, 0xa34d, 0xcbf0, 0x17f9, 0x88ce, 0x605d, 0x0, 0x1);
        gbc.writeMem(0xc8d7, { 0xd2, 0xcb, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xa34d);
        EXPECT(gbc.pc(), 0xc8da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8d7), 0xd2);
        EXPECT(gbc.readMem(0xc8d8), 0xcb);
        EXPECT(gbc.readMem(0xc8d9), 0x98);
        // D2 03E0
        gbc.setState(0xc98a, 0xc263, 0xad50, 0x59d0, 0xdc77, 0x7777, 0x1, 0x0);
        gbc.writeMem(0xc98a, { 0xd2, 0x8d, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xc263);
        EXPECT(gbc.pc(), 0xc98d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc98a), 0xd2);
        EXPECT(gbc.readMem(0xc98b), 0x8d);
        EXPECT(gbc.readMem(0xc98c), 0xa3);
        // D2 03E1
        gbc.setState(0xbd4d, 0x42ca, 0xf10, 0x4c23, 0x38fb, 0xc68a, 0x1, 0x1);
        gbc.writeMem(0xbd4d, { 0xd2, 0xdb, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x42ca);
        EXPECT(gbc.pc(), 0xbd50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd4d), 0xd2);
        EXPECT(gbc.readMem(0xbd4e), 0xdb);
        EXPECT(gbc.readMem(0xbd4f), 0x7d);
        // D2 03E3
        gbc.setState(0x86c4, 0xee87, 0xdbb0, 0x4c1c, 0xe7d, 0x71ef, 0x1, 0x1);
        gbc.writeMem(0x86c4, { 0xd2, 0x63, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xee87);
        EXPECT(gbc.pc(), 0x86c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86c4), 0xd2);
        EXPECT(gbc.readMem(0x86c5), 0x63);
        EXPECT(gbc.readMem(0x86c6), 0x8d);
        // D2 03E4
        gbc.setState(0x4e4a, 0x2729, 0x7af0, 0x55ad, 0x154a, 0x2494, 0x0, 0x1);
        gbc.writeMem(0x4e4a, { 0xd2, 0x0, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x2729);
        EXPECT(gbc.pc(), 0x4e4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 03E5
        gbc.setState(0x53b8, 0x619c, 0x2e30, 0xf20b, 0x4094, 0x9adc, 0x1, 0x1);
        gbc.writeMem(0x53b8, { 0xd2, 0x8d, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x619c);
        EXPECT(gbc.pc(), 0x53bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // D2 03E6
        gbc.setState(0x9b04, 0x76f3, 0x8b0, 0xc23d, 0x6b1a, 0x5b4a, 0x1, 0x0);
        gbc.writeMem(0x9b04, { 0xd2, 0x3, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x76f3);
        EXPECT(gbc.pc(), 0x9b07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b04), 0xd2);
        EXPECT(gbc.readMem(0x9b05), 0x3);
        EXPECT(gbc.readMem(0x9b06), 0x21);
        // D2 03E7
        gbc.setState(0x8d31, 0xa7f1, 0x4a60, 0x775b, 0x804f, 0x8fb4, 0x0, 0x0);
        gbc.writeMem(0x8d31, { 0xd2, 0xcb, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xa7f1);
        EXPECT(gbc.pc(), 0xa8cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d31), 0xd2);
        EXPECT(gbc.readMem(0x8d32), 0xcb);
        EXPECT(gbc.readMem(0x8d33), 0xa8);
    }
}
#endif
